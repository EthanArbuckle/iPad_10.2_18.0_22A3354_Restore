uint64_t CachingImageContentProvider.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9062170(v1, a1, &qword_1EEABDFF8);
}

uint64_t CachingImageContentProvider.taskImageSource.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for CachingImageContentProvider() + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_retain();
}

uint64_t type metadata accessor for CachingImageContentProvider()
{
  uint64_t result;

  result = qword_1ED2AB298;
  if (!qword_1ED2AB298)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t CachingImageContentProvider.resizer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CachingImageContentProvider() + 24);
  return sub_1A905DC3C(v3, a1);
}

id CachingImageContentProvider.workQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for CachingImageContentProvider() + 28));
}

uint64_t CachingImageContentProvider.init(domain:taskImageSource:resizer:workQueue:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  int *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;

  sub_1A9062170(a1, a5, &qword_1EEABDFF8);
  v10 = (int *)type metadata accessor for CachingImageContentProvider();
  *(_OWORD *)(a5 + v10[5]) = *a2;
  sub_1A905DC3C(a3, a5 + v10[6]);
  *(_QWORD *)(a5 + v10[7]) = a4;
  v11 = a4;
  v12 = MEMORY[0x1E0DEE9D8];
  v13 = sub_1A9113B64(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE000);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(a5 + v10[8]) = v14;
  v15 = sub_1A9113B64(v12);

  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 24) = 0;
  *(_QWORD *)(v16 + 16) = v15;
  __swift_destroy_boxed_opaque_existential_0(a3);
  result = sub_1A905FD54(a1, &qword_1EEABDFF8);
  *(_QWORD *)(a5 + v10[9]) = v16;
  return result;
}

uint64_t CachingImageContentProvider.content(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3496] = v2;
  v3[3495] = a2;
  v3[3494] = a1;
  v4 = type metadata accessor for ArtworkContent();
  v3[3497] = v4;
  v3[3498] = *(_QWORD *)(v4 - 8);
  v3[3499] = swift_task_alloc();
  v3[3500] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE010);
  v3[3501] = v5;
  v3[3502] = *(_QWORD *)(v5 - 8);
  v3[3503] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE018);
  v3[3504] = v6;
  v3[3505] = *(_QWORD *)(v6 - 8);
  v3[3506] = swift_task_alloc();
  v3[3507] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE020);
  v3[3508] = v7;
  v3[3509] = *(_QWORD *)(v7 - 8);
  v3[3510] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE028);
  v3[3511] = swift_task_alloc();
  v3[3512] = swift_task_alloc();
  v3[3513] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A933F3AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  unsigned __int8 v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  void *v34;
  id v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD *v40;
  double *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  void *__dst;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  _OWORD *v63;

  v62 = (void *)(v0 + 4440);
  v61 = (void *)(v0 + 6648);
  v60 = v0 + 10536;
  v49 = (void *)(v0 + 18256);
  __dst = (void *)(v0 + 19608);
  v45 = v0 + 23416;
  v59 = v0 + 24232;
  v63 = (_OWORD *)(v0 + 27776);
  v1 = *(char *)(*(_QWORD *)(v0 + 27960) + 32) + 1;
  v48 = qword_1A941EB90[v1];
  ArtworkRequest.withOriginalSize.getter(v0 + 27424);
  sub_1A9131434(v0 + 27424, v0 + 26656);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 26864) = MEMORY[0x1E0DEE9D8];
  sub_1A9131470(v0 + 27424);
  if (qword_1ED2AD2E8 != -1)
    swift_once();
  v57 = 0x201u >> (8 * v1);
  v2 = *(_QWORD *)(v0 + 27968);
  ArtworkRequest.with(format:)(byte_1ED2AD2D8, v0 + 27168);
  v44 = (int *)type metadata accessor for CachingImageContentProvider();
  v3 = (uint64_t *)(v2 + v44[5]);
  v5 = *v3;
  v4 = v3[1];
  sub_1A9131434(v0 + 27168, v0 + 25616);
  *(_QWORD *)(v0 + 25872) = v5;
  *(_QWORD *)(v0 + 25880) = v4;
  swift_retain();
  sub_1A9131470(v0 + 27168);
  sub_1A9131434(v0 + 26656, v0 + 25344);
  *(_QWORD *)(v0 + 25600) = v5;
  *(_QWORD *)(v0 + 25608) = v4;
  sub_1A9062170(v0 + 25616, v0 + 24792, &qword_1EEABE030);
  sub_1A9062170(v0 + 25344, v0 + 25064, &qword_1EEABE030);
  *(_BYTE *)(v0 + 25336) = 0;
  swift_retain();
  sub_1A905FD54(v0 + 25344, &qword_1EEABE030);
  sub_1A905FD54(v0 + 25616, &qword_1EEABE030);
  v51 = v44[7];
  v46 = v2;
  v6 = *(void **)(v2 + v51);
  sub_1A9062170(v0 + 24792, v0 + 24240, &qword_1EEABE038);
  *(_QWORD *)(v0 + 24232) = v6;
  v7 = v6;
  sub_1A905FD54(v0 + 24792, &qword_1EEABE038);
  v8 = byte_1ED2AD2D8;
  sub_1A9062170(v59, v0 + 23672, &qword_1EEABE040);
  ArtworkRequest.with(format:)(v8, v45);
  *(_BYTE *)(v0 + 24225) = v8;
  sub_1A905FD54(v59, &qword_1EEABE040);
  v9 = (v57 & 3) + 15;
  v43 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDFF8) + 60);
  v50 = *(_QWORD *)(v0 + 28080);
  v54 = *(_QWORD *)(v0 + 28072);
  v52 = *(_QWORD *)(v0 + 28056);
  v53 = *(_QWORD *)(v0 + 28064);
  v58 = *(_QWORD *)(v0 + 28048);
  v55 = *(_QWORD *)(v0 + 28040);
  v56 = *(_QWORD *)(v0 + 28032);
  v10 = *(_QWORD *)(v0 + 27968);
  v42 = *(double **)(v0 + 27960);
  v11 = *(_QWORD *)(v43 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE048) + 4 * v9));
  sub_1A9062170(v45, v0 + 21784, &qword_1EEABE050);
  sub_1A9062170(v45, v0 + 22600, &qword_1EEABE050);
  sub_1A9131434(v0 + 22600, v0 + 26400);
  swift_retain_n();
  sub_1A905FD54(v0 + 22600, &qword_1EEABE050);
  *(_QWORD *)(v0 + 20424) = v11;
  memcpy(__dst, (const void *)(v0 + 21784), 0x32AuLL);
  *(_OWORD *)(v0 + 20624) = *(_OWORD *)(v0 + 26592);
  *(_OWORD *)(v0 + 20640) = *(_OWORD *)(v0 + 26608);
  *(_OWORD *)(v0 + 20656) = *(_OWORD *)(v0 + 26624);
  *(_OWORD *)(v0 + 20672) = *(_OWORD *)(v0 + 26640);
  *(_OWORD *)(v0 + 20560) = *(_OWORD *)(v0 + 26528);
  *(_OWORD *)(v0 + 20576) = *(_OWORD *)(v0 + 26544);
  *(_OWORD *)(v0 + 20592) = *(_OWORD *)(v0 + 26560);
  *(_OWORD *)(v0 + 20608) = *(_OWORD *)(v0 + 26576);
  *(_OWORD *)(v0 + 20496) = *(_OWORD *)(v0 + 26464);
  *(_OWORD *)(v0 + 20512) = *(_OWORD *)(v0 + 26480);
  *(_OWORD *)(v0 + 20528) = *(_OWORD *)(v0 + 26496);
  *(_OWORD *)(v0 + 20544) = *(_OWORD *)(v0 + 26512);
  *(_OWORD *)(v0 + 20432) = *(_OWORD *)(v0 + 26400);
  *(_OWORD *)(v0 + 20448) = *(_OWORD *)(v0 + 26416);
  *(_OWORD *)(v0 + 20464) = *(_OWORD *)(v0 + 26432);
  *(_OWORD *)(v0 + 20480) = *(_OWORD *)(v0 + 26448);
  swift_release();
  *(_BYTE *)(v0 + 20688) = 1;
  sub_1A905FD54(v45, &qword_1EEABE050);
  v12 = *(_QWORD *)(v10 + v44[8]);
  sub_1A9062170((uint64_t)__dst, v0 + 20696, &qword_1EEABE058);
  *(_QWORD *)(v0 + 16896) = v12;
  sub_1A9062170(v0 + 20696, v0 + 15808, &qword_1EEABE058);
  sub_1A9131434(v0 + 21520, v0 + 25888);
  swift_retain();
  sub_1A905FD54(v0 + 20696, &qword_1EEABE058);
  *(_OWORD *)(v0 + 15744) = *(_OWORD *)(v0 + 26080);
  *(_OWORD *)(v0 + 15760) = *(_OWORD *)(v0 + 26096);
  *(_OWORD *)(v0 + 15776) = *(_OWORD *)(v0 + 26112);
  *(_OWORD *)(v0 + 15792) = *(_OWORD *)(v0 + 26128);
  *(_OWORD *)(v0 + 15680) = *(_OWORD *)(v0 + 26016);
  *(_OWORD *)(v0 + 15696) = *(_OWORD *)(v0 + 26032);
  *(_OWORD *)(v0 + 15712) = *(_OWORD *)(v0 + 26048);
  *(_OWORD *)(v0 + 15728) = *(_OWORD *)(v0 + 26064);
  *(_OWORD *)(v0 + 15616) = *(_OWORD *)(v0 + 25952);
  *(_OWORD *)(v0 + 15632) = *(_OWORD *)(v0 + 25968);
  *(_OWORD *)(v0 + 15648) = *(_OWORD *)(v0 + 25984);
  *(_OWORD *)(v0 + 15664) = *(_OWORD *)(v0 + 26000);
  *(_OWORD *)(v0 + 15552) = *(_OWORD *)(v0 + 25888);
  *(_OWORD *)(v0 + 15568) = *(_OWORD *)(v0 + 25904);
  *(_OWORD *)(v0 + 15584) = *(_OWORD *)(v0 + 25920);
  *(_OWORD *)(v0 + 15600) = *(_OWORD *)(v0 + 25936);
  memcpy(v49, (const void *)(v0 + 15552), 0x548uLL);
  sub_1A905FD54((uint64_t)__dst, &qword_1EEABE058);
  v13 = v42[22];
  v14 = v42[23];
  v15 = v42[24];
  sub_1A905DC3C(v10 + v44[6], v0 + 27912);
  sub_1A9062170((uint64_t)v49, v0 + 16904, &qword_1EEABE060);
  sub_1A9338AF4((__int128 *)(v0 + 27912), v0 + 16904, v60, v13, v14, v15);
  sub_1A905FD54((uint64_t)v49, &qword_1EEABE060);
  v16 = *(_QWORD *)(v43 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE048) + 4 * v48));
  sub_1A9062170(v60, v0 + 13880, &qword_1EEABE068);
  sub_1A9062170(v60, v0 + 12208, &qword_1EEABE068);
  sub_1A9131434(v0 + 12208, v0 + 26912);
  swift_retain_n();
  sub_1A905FD54(v0 + 12208, &qword_1EEABE068);
  *(_QWORD *)(v0 + 8320) = v16;
  memcpy(v61, (const void *)(v0 + 13880), 0x688uLL);
  v17 = *(_OWORD *)(v0 + 27120);
  *(_OWORD *)(v0 + 8520) = *(_OWORD *)(v0 + 27104);
  *(_OWORD *)(v0 + 8536) = v17;
  v18 = *(_OWORD *)(v0 + 27152);
  *(_OWORD *)(v0 + 8552) = *(_OWORD *)(v0 + 27136);
  *(_OWORD *)(v0 + 8568) = v18;
  v19 = *(_OWORD *)(v0 + 27056);
  *(_OWORD *)(v0 + 8456) = *(_OWORD *)(v0 + 27040);
  *(_OWORD *)(v0 + 8472) = v19;
  v20 = *(_OWORD *)(v0 + 27088);
  *(_OWORD *)(v0 + 8488) = *(_OWORD *)(v0 + 27072);
  *(_OWORD *)(v0 + 8504) = v20;
  v21 = *(_OWORD *)(v0 + 26992);
  *(_OWORD *)(v0 + 8392) = *(_OWORD *)(v0 + 26976);
  *(_OWORD *)(v0 + 8408) = v21;
  v22 = *(_OWORD *)(v0 + 27024);
  *(_OWORD *)(v0 + 8424) = *(_OWORD *)(v0 + 27008);
  *(_OWORD *)(v0 + 8440) = v22;
  v23 = *(_OWORD *)(v0 + 26928);
  *(_OWORD *)(v0 + 8328) = *(_OWORD *)(v0 + 26912);
  *(_OWORD *)(v0 + 8344) = v23;
  v24 = *(_OWORD *)(v0 + 26960);
  *(_OWORD *)(v0 + 8360) = *(_OWORD *)(v0 + 26944);
  *(_OWORD *)(v0 + 8376) = v24;
  swift_release();
  *(_BYTE *)(v0 + 8584) = 0;
  sub_1A905FD54(v60, &qword_1EEABE068);
  v25 = *(_QWORD *)(v10 + v44[9]);
  sub_1A9062170((uint64_t)v61, v0 + 8592, &qword_1EEABE070);
  *(_QWORD *)(v0 + 4432) = v25;
  sub_1A9062170(v0 + 8592, v0 + 2488, &qword_1EEABE070);
  sub_1A9131434(v0 + 10272, v0 + 26144);
  swift_retain();
  sub_1A905FD54(v0 + 8592, &qword_1EEABE070);
  v26 = *(_OWORD *)(v0 + 26352);
  *(_OWORD *)(v0 + 2424) = *(_OWORD *)(v0 + 26336);
  *(_OWORD *)(v0 + 2440) = v26;
  v27 = *(_OWORD *)(v0 + 26384);
  *(_OWORD *)(v0 + 2456) = *(_OWORD *)(v0 + 26368);
  *(_OWORD *)(v0 + 2472) = v27;
  v28 = *(_OWORD *)(v0 + 26288);
  *(_OWORD *)(v0 + 2360) = *(_OWORD *)(v0 + 26272);
  *(_OWORD *)(v0 + 2376) = v28;
  v29 = *(_OWORD *)(v0 + 26320);
  *(_OWORD *)(v0 + 2392) = *(_OWORD *)(v0 + 26304);
  *(_OWORD *)(v0 + 2408) = v29;
  v30 = *(_OWORD *)(v0 + 26224);
  *(_OWORD *)(v0 + 2296) = *(_OWORD *)(v0 + 26208);
  *(_OWORD *)(v0 + 2312) = v30;
  v31 = *(_OWORD *)(v0 + 26256);
  *(_OWORD *)(v0 + 2328) = *(_OWORD *)(v0 + 26240);
  *(_OWORD *)(v0 + 2344) = v31;
  v32 = *(_OWORD *)(v0 + 26160);
  *(_OWORD *)(v0 + 2232) = *(_OWORD *)(v0 + 26144);
  *(_OWORD *)(v0 + 2248) = v32;
  v33 = *(_OWORD *)(v0 + 26192);
  *(_OWORD *)(v0 + 2264) = *(_OWORD *)(v0 + 26176);
  *(_OWORD *)(v0 + 2280) = v33;
  memcpy(v62, (const void *)(v0 + 2232), 0x8A0uLL);
  sub_1A905FD54((uint64_t)v61, &qword_1EEABE070);
  v34 = *(void **)(v46 + v51);
  sub_1A9062170((uint64_t)v62, v0 + 24, &qword_1EEABE078);
  *(_QWORD *)(v0 + 16) = v34;
  v35 = v34;
  sub_1A905FD54((uint64_t)v62, &qword_1EEABE078);
  v36 = sub_1A933D05C();
  sub_1A905FD54(v0 + 16, &qword_1EEABE080);
  sub_1A9062170((uint64_t)(v42 + 27), v0 + 27872, &qword_1ED2AD0C0);
  *(_QWORD *)(v0 + 27680) = v36;
  sub_1A9062170(v0 + 27872, v0 + 27688, &qword_1ED2AD0C0);
  *(_QWORD *)(v0 + 27728) = "LoadArtworkContent";
  *(_QWORD *)(v0 + 27736) = 18;
  *(_BYTE *)(v0 + 27744) = 2;
  *(_BYTE *)(v0 + 27768) = 1;
  sub_1A905FD54(v0 + 27872, &qword_1ED2AD0C0);
  *(_QWORD *)(v0 + 27752) = 0;
  *(_QWORD *)(v0 + 27760) = 0xE000000000000000;
  *(_BYTE *)(v0 + 27769) = 0;
  v37 = *(_OWORD *)(v0 + 27728);
  *(_OWORD *)(v0 + 27808) = *(_OWORD *)(v0 + 27712);
  *(_OWORD *)(v0 + 27824) = v37;
  v38 = *(_OWORD *)(v0 + 27696);
  *v63 = *(_OWORD *)(v0 + 27680);
  *(_OWORD *)(v0 + 27792) = v38;
  *(_OWORD *)(v0 + 27840) = *(_OWORD *)(v0 + 27744);
  *(_OWORD *)(v0 + 27850) = *(_OWORD *)(v0 + 27754);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE088);
  sub_1A9066D74(&qword_1EEABE090, &qword_1EEABE088, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  sub_1A93F7B90();
  sub_1A905FD54((uint64_t)v63, &qword_1EEABE088);
  v39 = sub_1A9066D74(&qword_1EEABE098, &qword_1EEABE020, MEMORY[0x1E0C959A0]);
  MEMORY[0x1AF411944](v53, v39);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v50, v53);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v58, v52, v56);
  sub_1A9066D74(&qword_1EEABE0A0, &qword_1EEABE018, MEMORY[0x1E0C96010]);
  sub_1A93F858C();
  *(_QWORD *)(v0 + 28112) = sub_1A9066D74(&qword_1EEABE0A8, &qword_1EEABE010, MEMORY[0x1E0C95FF0]);
  v40 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 28120) = v40;
  *v40 = v0;
  v40[1] = sub_1A933FE5C;
  return sub_1A93F8454();
}

uint64_t sub_1A933FE5C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[3519] = v0;
    v3 = v2[3503];
    v4 = v2[3502];
    v5 = v2[3501];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[3516] = MEMORY[0x1E0DEE9D8];
  }
  return swift_task_switch();
}

uint64_t sub_1A933FEFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 28096);
  v2 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 27984) + 48);
  v3 = v2(v1, 1, *(_QWORD *)(v0 + 27976));
  v4 = *(_QWORD *)(v0 + 28128);
  if (v3 == 1)
  {
    v29 = v0 + 26656;
    v5 = *(_QWORD *)(v0 + 28056);
    v6 = *(_QWORD *)(v0 + 28040);
    v7 = *(_QWORD *)(v0 + 28032);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 28016) + 8))(*(_QWORD *)(v0 + 28024), *(_QWORD *)(v0 + 28008));
    sub_1A905FD54(v1, &qword_1EEABE028);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    if (*(_QWORD *)(v4 + 16))
    {
      v8 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 27984) + 80);
      sub_1A9064630(*(_QWORD *)(v0 + 28128) + ((v8 + 32) & ~v8), *(_QWORD *)(v0 + 28104), (uint64_t (*)(_QWORD))type metadata accessor for ArtworkContent);
      v9 = 0;
    }
    else
    {
      v9 = 1;
    }
    v21 = *(_QWORD *)(v0 + 28104);
    v22 = *(_QWORD *)(v0 + 28088);
    v23 = *(_QWORD *)(v0 + 27976);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 27984) + 56))(v21, v9, 1, v23);
    swift_bridgeObjectRelease();
    sub_1A9062170(v21, v22, &qword_1EEABE028);
    v24 = v2(v22, 1, v23);
    v25 = *(_QWORD *)(v0 + 28104);
    if (v24 == 1)
    {
      sub_1A905FD54(*(_QWORD *)(v0 + 28088), &qword_1EEABE028);
      sub_1A9340F84();
      swift_allocError();
      *v26 = 1;
      swift_willThrow();
      sub_1A905FD54(v25, &qword_1EEABE028);
      sub_1A9131470(v29);
    }
    else
    {
      v27 = *(_QWORD *)(v0 + 28088);
      v28 = *(_QWORD *)(v0 + 27952);
      sub_1A905FD54(v25, &qword_1EEABE028);
      sub_1A9131470(v29);
      sub_1A9116174(v27, v28, (uint64_t (*)(_QWORD))type metadata accessor for ArtworkContent);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 28000);
    v11 = *(_QWORD *)(v0 + 27992);
    sub_1A9116174(v1, v10, (uint64_t (*)(_QWORD))type metadata accessor for ArtworkContent);
    sub_1A9064630(v10, v11, (uint64_t (*)(_QWORD))type metadata accessor for ArtworkContent);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *(_QWORD *)(v0 + 28128);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v13 = sub_1A9119B28(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
    v15 = *(_QWORD *)(v13 + 16);
    v14 = *(_QWORD *)(v13 + 24);
    if (v15 >= v14 >> 1)
      v13 = sub_1A9119B28(v14 > 1, v15 + 1, 1, v13);
    *(_QWORD *)(v0 + 28136) = v13;
    v16 = *(_QWORD *)(v0 + 28000);
    v17 = *(_QWORD *)(v0 + 27992);
    v18 = *(_QWORD *)(v0 + 27984);
    *(_QWORD *)(v13 + 16) = v15 + 1;
    sub_1A9116174(v17, v13+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v15, (uint64_t (*)(_QWORD))type metadata accessor for ArtworkContent);
    sub_1A9064714(v16, (uint64_t (*)(_QWORD))type metadata accessor for ArtworkContent);
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 28144) = v19;
    *v19 = v0;
    v19[1] = sub_1A93402F0;
    return sub_1A93F8454();
  }
}

uint64_t sub_1A93402F0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[3519] = v0;
    v3 = v2[3503];
    v4 = v2[3502];
    v5 = v2[3501];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[3516] = v2[3517];
  }
  return swift_task_switch();
}

uint64_t sub_1A9340384()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 28040) + 8))(*(_QWORD *)(v0 + 28056), *(_QWORD *)(v0 + 28032));
  sub_1A9131470(v0 + 26656);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A9340468(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A9164CD4;
  return CachingImageContentProvider.content(for:)(a1, a2);
}

uint64_t sub_1A93404C8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  int *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t (**v13)(uint64_t);
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  _BYTE v22[24];
  ValueMetadata *v23;
  _UNKNOWN **v24;

  v0 = sub_1A93F726C();
  MEMORY[0x1E0C80A78](v0);
  v2 = &v22[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDFF8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)&v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (int *)type metadata accessor for CachingImageContentProvider();
  __swift_allocate_value_buffer((uint64_t)v6, qword_1EEABDFE0);
  v7 = __swift_project_value_buffer((uint64_t)v6, (uint64_t)qword_1EEABDFE0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_artworkAssetURL);
  sub_1A93F7200();

  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1A936E0D8((uint64_t)v2, 0x500000uLL, v9, v5);
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  *(_QWORD *)(swift_allocObject() + 16) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9290);
  swift_allocObject();
  v11 = sub_1A93F7A94();
  v23 = &type metadata for CGImageResizer;
  v24 = &protocol witness table for CGImageResizer;
  if (qword_1ED2A5B40 != -1)
    swift_once();
  v12 = (void *)qword_1ED2A5B38;
  sub_1A9062170((uint64_t)v5, v7, &qword_1EEABDFF8);
  v13 = (uint64_t (**)(uint64_t))(v7 + v6[5]);
  *v13 = sub_1A9341B4C;
  v13[1] = (uint64_t (*)(uint64_t))v11;
  sub_1A905DC3C((uint64_t)v22, v7 + v6[6]);
  *(_QWORD *)(v7 + v6[7]) = v12;
  v14 = v12;
  v15 = MEMORY[0x1E0DEE9D8];
  v16 = sub_1A9113B64(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE000);
  v17 = swift_allocObject();
  *(_DWORD *)(v17 + 24) = 0;
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v7 + v6[8]) = v17;
  v18 = sub_1A9113B64(v15);

  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 24) = 0;
  *(_QWORD *)(v19 + 16) = v18;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  result = sub_1A905FD54((uint64_t)v5, &qword_1EEABDFF8);
  *(_QWORD *)(v7 + v6[9]) = v19;
  return result;
}

uint64_t static CachingImageContentProvider.shared.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEAB6F58 != -1)
    swift_once();
  v2 = type metadata accessor for CachingImageContentProvider();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEABDFE0);
  return sub_1A9064630(v3, a1, (uint64_t (*)(_QWORD))type metadata accessor for CachingImageContentProvider);
}

uint64_t sub_1A93407F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  char v23;
  _BYTE *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[552];
  _BYTE v36[280];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE1B8);
  v30 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE1C0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v31 = (uint64_t)&v29 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE1C8);
  v14 = *(_QWORD *)(v13 - 8);
  v33 = v13;
  v34 = v14;
  MEMORY[0x1E0C80A78](v13);
  v32 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9062170(v1, (uint64_t)v35, &qword_1EEABE030);
  v16 = swift_allocObject();
  memcpy((void *)(v16 + 16), v35, 0x110uLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE088);
  sub_1A9066D74(&qword_1EEABE090, &qword_1EEABE088, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  sub_1A93F7AAC();
  sub_1A9131434(v1, (uint64_t)v35);
  sub_1A9062170((uint64_t)&v35[216], (uint64_t)v36, &qword_1ED2AD0C0);
  sub_1A9131470((uint64_t)v35);
  v17 = v30;
  v18 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v18(v4, v7, v2);
  sub_1A9062170((uint64_t)v36, (uint64_t)v35, &qword_1ED2AD0C0);
  v18(v10, v4, v2);
  sub_1A9062170((uint64_t)v35, (uint64_t)&v10[v8[9]], &qword_1ED2AD0C0);
  v19 = &v10[v8[10]];
  *(_QWORD *)v19 = "FallbackPreferredSource";
  *((_QWORD *)v19 + 1) = 23;
  v19[16] = 2;
  v10[v8[12]] = 0;
  sub_1A905FD54((uint64_t)v35, &qword_1ED2AD0C0);
  v20 = *(void (**)(char *, uint64_t))(v17 + 8);
  v20(v4, v2);
  v21 = &v10[v8[11]];
  *(_QWORD *)v21 = 0xD000000000000051;
  *((_QWORD *)v21 + 1) = 0x80000001A944D590;
  v10[v8[13]] = 0;
  v22 = v31;
  sub_1A9062F08((uint64_t)v10, v31, &qword_1EEABE1C0);
  sub_1A905FD54((uint64_t)v36, &qword_1ED2AD0C0);
  v20(v7, v2);
  v23 = *(_BYTE *)(v1 + 544);
  sub_1A9062170(v1 + 272, (uint64_t)v36, &qword_1EEABE030);
  sub_1A9062170(v1, (uint64_t)v35, &qword_1EEABE038);
  v24 = (_BYTE *)swift_allocObject();
  memcpy(v24 + 16, v36, 0x110uLL);
  v24[288] = v23;
  memcpy(v24 + 296, v35, 0x221uLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE1D0);
  sub_1A9066D74(&qword_1EEABE1D8, &qword_1EEABE1C0, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  sub_1A9066D74(&qword_1EEABE1E0, &qword_1EEABE1D0, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  v25 = v32;
  sub_1A93F7BB4();
  swift_release();
  sub_1A905FD54(v22, &qword_1EEABE1C0);
  sub_1A9066D74(&qword_1EEABE1E8, &qword_1EEABE1C8, MEMORY[0x1E0C959F8]);
  v26 = v33;
  v27 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v26);
  return v27;
}

uint64_t sub_1A9340C18@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v28;
  char *v29;
  void *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[40];
  _BYTE v37[280];

  v34 = a4;
  v35 = a5;
  v31 = a3;
  v30 = a1;
  v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE1D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE1B8);
  v32 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE1F0);
  v33 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v29 = (char *)&v28 - v16;
  sub_1A9062170(a2, (uint64_t)v37, &qword_1EEABE030);
  v17 = swift_allocObject();
  memcpy((void *)(v17 + 16), v37, 0x110uLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE088);
  sub_1A9066D74(&qword_1EEABE090, &qword_1EEABE088, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  sub_1A93F7AAC();
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = v31;
  v19 = v30;
  *(_QWORD *)(v18 + 24) = v30;
  v20 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
  sub_1A9066D74(&qword_1EEABE1F8, &qword_1EEABE1B8, MEMORY[0x1E0C96148]);
  v21 = v29;
  sub_1A93F7C98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v9);
  sub_1A9131434(v34, (uint64_t)v37);
  sub_1A9062170((uint64_t)&v37[216], (uint64_t)v36, &qword_1ED2AD0C0);
  sub_1A9131470((uint64_t)v37);
  v22 = v33;
  v23 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  v23(v14, v21, v12);
  sub_1A9062170((uint64_t)v36, (uint64_t)v37, &qword_1ED2AD0C0);
  v23(v8, v14, v12);
  sub_1A9062170((uint64_t)v37, (uint64_t)&v8[v6[9]], &qword_1ED2AD0C0);
  v24 = &v8[v6[10]];
  *(_QWORD *)v24 = "FallbackBackupSource";
  *((_QWORD *)v24 + 1) = 20;
  v24[16] = 2;
  v8[v6[12]] = 0;
  sub_1A905FD54((uint64_t)v37, &qword_1ED2AD0C0);
  v25 = *(void (**)(char *, uint64_t))(v22 + 8);
  v25(v14, v12);
  v26 = &v8[v6[11]];
  *(_QWORD *)v26 = 0xD000000000000051;
  *((_QWORD *)v26 + 1) = 0x80000001A944D590;
  v8[v6[13]] = 0;
  sub_1A9062F08((uint64_t)v8, v35, &qword_1EEABE1D0);
  sub_1A905FD54((uint64_t)v36, &qword_1ED2AD0C0);
  return ((uint64_t (*)(char *, uint64_t))v25)(v21, v12);
}

unint64_t sub_1A9340F84()
{
  unint64_t result;

  result = qword_1EEABE0B0;
  if (!qword_1EEABE0B0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ImageProviderError, &type metadata for ImageProviderError);
    atomic_store(result, (unint64_t *)&qword_1EEABE0B0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CachingImageContentProvider(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void (*v27)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    swift_retain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDFF8) + 60);
    v9 = (char *)v7 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A93F726C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE048);
    *(_QWORD *)&v9[v12[15]] = *(_QWORD *)&v10[v12[15]];
    *(_QWORD *)&v9[v12[16]] = *(_QWORD *)&v10[v12[16]];
    *(_QWORD *)&v9[v12[17]] = *(_QWORD *)&v10[v12[17]];
    *(_QWORD *)&v9[v12[18]] = *(_QWORD *)&v10[v12[18]];
    v13 = a3[5];
    v14 = a3[6];
    v15 = (uint64_t *)((char *)v7 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (char *)v7 + v14;
    v19 = (char *)a2 + v14;
    v20 = *(_OWORD *)((char *)a2 + v14 + 24);
    *(_OWORD *)((char *)v7 + v14 + 24) = v20;
    v21 = v20;
    v27 = **(void (***)(char *, char *, uint64_t))(v20 - 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v27(v18, v19, v21);
    v22 = a3[7];
    v23 = a3[8];
    v24 = *(void **)((char *)a2 + v22);
    *(uint64_t *)((char *)v7 + v22) = (uint64_t)v24;
    *(uint64_t *)((char *)v7 + v23) = *(uint64_t *)((char *)a2 + v23);
    *(uint64_t *)((char *)v7 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    v25 = v24;
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for CachingImageContentProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDFF8) + 60);
  v5 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE048);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + *(int *)(a2 + 24));

  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for CachingImageContentProvider(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void (*v25)(char *, char *, uint64_t);

  *a1 = *a2;
  swift_retain();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDFF8) + 60);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE048);
  *(_QWORD *)&v7[v10[15]] = *(_QWORD *)&v8[v10[15]];
  *(_QWORD *)&v7[v10[16]] = *(_QWORD *)&v8[v10[16]];
  *(_QWORD *)&v7[v10[17]] = *(_QWORD *)&v8[v10[17]];
  *(_QWORD *)&v7[v10[18]] = *(_QWORD *)&v8[v10[18]];
  v11 = a3[5];
  v12 = a3[6];
  v13 = (_QWORD *)((char *)a1 + v11);
  v14 = (_QWORD *)((char *)a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (char *)a1 + v12;
  v17 = (char *)a2 + v12;
  v18 = *(_OWORD *)((char *)a2 + v12 + 24);
  *(_OWORD *)((char *)a1 + v12 + 24) = v18;
  v19 = v18;
  v25 = **(void (***)(char *, char *, uint64_t))(v18 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v25(v16, v17, v19);
  v20 = a3[7];
  v21 = a3[8];
  v22 = *(void **)((char *)a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = v22;
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v23 = v22;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CachingImageContentProvider(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDFF8) + 60);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE048);
  *(_QWORD *)&v7[v10[15]] = *(_QWORD *)&v8[v10[15]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v7[v10[16]] = *(_QWORD *)&v8[v10[16]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v7[v10[17]] = *(_QWORD *)&v8[v10[17]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v7[v10[18]] = *(_QWORD *)&v8[v10[18]];
  swift_retain();
  swift_release();
  v11 = a3[5];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[6]), (_QWORD *)((char *)a2 + a3[6]));
  v15 = a3[7];
  v16 = *(void **)((char *)a2 + v15);
  v17 = *(void **)((char *)a1 + v15);
  *(_QWORD *)((char *)a1 + v15) = v16;
  v18 = v16;

  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *initializeWithTake for CachingImageContentProvider(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDFF8) + 60);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE048);
  *(_QWORD *)&v7[v10[15]] = *(_QWORD *)&v8[v10[15]];
  *(_QWORD *)&v7[v10[16]] = *(_QWORD *)&v8[v10[16]];
  *(_QWORD *)&v7[v10[17]] = *(_QWORD *)&v8[v10[17]];
  *(_QWORD *)&v7[v10[18]] = *(_QWORD *)&v8[v10[18]];
  v11 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  v15 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  return a1;
}

_QWORD *assignWithTake for CachingImageContentProvider(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  void *v16;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDFF8) + 60);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE048);
  *(_QWORD *)&v7[v10[15]] = *(_QWORD *)&v8[v10[15]];
  swift_release();
  *(_QWORD *)&v7[v10[16]] = *(_QWORD *)&v8[v10[16]];
  swift_release();
  *(_QWORD *)&v7[v10[17]] = *(_QWORD *)&v8[v10[17]];
  swift_release();
  *(_QWORD *)&v7[v10[18]] = *(_QWORD *)&v8[v10[18]];
  swift_release();
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  swift_release();
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1 + v11);
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  v15 = a3[7];
  v16 = *(void **)((char *)a1 + v15);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);

  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CachingImageContentProvider()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A93417A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDFF8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for CachingImageContentProvider()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A934182C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDFF8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1A93418A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A9341944();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A9341944()
{
  uint64_t result;

  result = qword_1ED2AB020;
  if (!qword_1ED2AB020)
  {
    sub_1A90C0B34(&qword_1ED2ABD28, &qword_1ED2A95B0, 0x1E0CB3940, MEMORY[0x1E0DEFCF8]);
    type metadata accessor for CacheDomain();
  }
  return result;
}

uint64_t sub_1A93419E8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A9341A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_QWORD *)(a2 + 16) = v2;
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v3;
  *(_QWORD *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v6;
  sub_1A90D8068(v4, v3);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A9341A58@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  a2[3] = v5;
  a2[4] = v6;
  a2[5] = v7;
  a2[6] = v8;
  return sub_1A9298E34(v3, v2, v4, v5, v6, v7);
}

id sub_1A9341A80@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_1A9341A8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE0D8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9378948(a1, *a2, (uint64_t)v6);
  sub_1A9066D74(&qword_1EEABE0E0, &qword_1EEABE0D8, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  v7 = sub_1A93F7B24();
  sub_1A905FD54((uint64_t)v6, &qword_1EEABE0D8);
  return v7;
}

uint64_t sub_1A9341B4C(uint64_t a1)
{
  uint64_t v2;

  return sub_1A9341A8C(a1, &v2);
}

uint64_t sub_1A9341B74()
{
  uint64_t v0;

  return sub_1A933CE34(*(os_unfair_lock_s **)(v0 + 16), v0 + 24);
}

uint64_t sub_1A9341B90()
{
  swift_release();
  return swift_deallocObject();
}

BOOL sub_1A9341BB4(_OWORD *a1)
{
  uint64_t v1;

  return _s18PodcastsFoundation14ArtworkRequestV2eeoiySbAC_ACtFZ_0(a1, *(_OWORD **)(v1 + 16));
}

uint64_t sub_1A9341BE0()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;

  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v1);
  v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 != 255)
    sub_1A913A0D8(*(id *)(v0 + 72), v2);
  v3 = *(unsigned __int8 *)(v0 + 96);
  if (v3 != 255)
    sub_1A913A0D8(*(id *)(v0 + 88), v3);
  v4 = *(unsigned __int8 *)(v0 + 112);
  if (v4 != 255)
    sub_1A913A0D8(*(id *)(v0 + 104), v4);
  v5 = *(unsigned __int8 *)(v0 + 128);
  if (v5 != 255)
    sub_1A913A0D8(*(id *)(v0 + 120), v5);
  v6 = *(unsigned __int8 *)(v0 + 144);
  if (v6 != 255)
    sub_1A913A0D8(*(id *)(v0 + 136), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 256))
    __swift_destroy_boxed_opaque_existential_0(v0 + 232);
  return swift_deallocObject();
}

uint64_t sub_1A9341CA4()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;

  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v1);
  v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 != 255)
    sub_1A913A0D8(*(id *)(v0 + 72), v2);
  v3 = *(unsigned __int8 *)(v0 + 96);
  if (v3 != 255)
    sub_1A913A0D8(*(id *)(v0 + 88), v3);
  v4 = *(unsigned __int8 *)(v0 + 112);
  if (v4 != 255)
    sub_1A913A0D8(*(id *)(v0 + 104), v4);
  v5 = *(unsigned __int8 *)(v0 + 128);
  if (v5 != 255)
    sub_1A913A0D8(*(id *)(v0 + 120), v5);
  v6 = *(unsigned __int8 *)(v0 + 144);
  if (v6 != 255)
    sub_1A913A0D8(*(id *)(v0 + 136), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 256))
    __swift_destroy_boxed_opaque_existential_0(v0 + 232);
  swift_bridgeObjectRelease();
  v7 = *(unsigned __int8 *)(v0 + 304);
  if (v7 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296), v7);
  v8 = *(unsigned __int8 *)(v0 + 336);
  if (v8 != 255)
    sub_1A913A0D8(*(id *)(v0 + 328), v8);
  v9 = *(unsigned __int8 *)(v0 + 352);
  if (v9 != 255)
    sub_1A913A0D8(*(id *)(v0 + 344), v9);
  v10 = *(unsigned __int8 *)(v0 + 368);
  if (v10 != 255)
    sub_1A913A0D8(*(id *)(v0 + 360), v10);
  v11 = *(unsigned __int8 *)(v0 + 384);
  if (v11 != 255)
    sub_1A913A0D8(*(id *)(v0 + 376), v11);
  v12 = *(unsigned __int8 *)(v0 + 400);
  if (v12 != 255)
    sub_1A913A0D8(*(id *)(v0 + 392), v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 512))
    __swift_destroy_boxed_opaque_existential_0(v0 + 488);
  swift_bridgeObjectRelease();
  v13 = *(unsigned __int8 *)(v0 + 560);
  if (v13 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 552), v13);
  v14 = *(unsigned __int8 *)(v0 + 592);
  if (v14 != 255)
    sub_1A913A0D8(*(id *)(v0 + 584), v14);
  v15 = *(unsigned __int8 *)(v0 + 608);
  if (v15 != 255)
    sub_1A913A0D8(*(id *)(v0 + 600), v15);
  v16 = *(unsigned __int8 *)(v0 + 624);
  if (v16 != 255)
    sub_1A913A0D8(*(id *)(v0 + 616), v16);
  v17 = *(unsigned __int8 *)(v0 + 640);
  if (v17 != 255)
    sub_1A913A0D8(*(id *)(v0 + 632), v17);
  v18 = *(unsigned __int8 *)(v0 + 656);
  if (v18 != 255)
    sub_1A913A0D8(*(id *)(v0 + 648), v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 768))
    __swift_destroy_boxed_opaque_existential_0(v0 + 744);

  swift_bridgeObjectRelease();
  v19 = *(unsigned __int8 *)(v0 + 824);
  if (v19 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 816), v19);
  v20 = *(unsigned __int8 *)(v0 + 856);
  if (v20 != 255)
    sub_1A913A0D8(*(id *)(v0 + 848), v20);
  v21 = *(unsigned __int8 *)(v0 + 872);
  if (v21 != 255)
    sub_1A913A0D8(*(id *)(v0 + 864), v21);
  v22 = *(unsigned __int8 *)(v0 + 888);
  if (v22 != 255)
    sub_1A913A0D8(*(id *)(v0 + 880), v22);
  v23 = *(unsigned __int8 *)(v0 + 904);
  if (v23 != 255)
    sub_1A913A0D8(*(id *)(v0 + 896), v23);
  v24 = *(unsigned __int8 *)(v0 + 920);
  if (v24 != 255)
    sub_1A913A0D8(*(id *)(v0 + 912), v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 1032))
    __swift_destroy_boxed_opaque_existential_0(v0 + 1008);
  swift_release();
  swift_bridgeObjectRelease();
  v25 = *(unsigned __int8 *)(v0 + 1096);
  if (v25 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 1080), *(_QWORD *)(v0 + 1088), v25);
  v26 = *(unsigned __int8 *)(v0 + 1128);
  if (v26 != 255)
    sub_1A913A0D8(*(id *)(v0 + 1120), v26);
  v27 = *(unsigned __int8 *)(v0 + 1144);
  if (v27 != 255)
    sub_1A913A0D8(*(id *)(v0 + 1136), v27);
  v28 = *(unsigned __int8 *)(v0 + 1160);
  if (v28 != 255)
    sub_1A913A0D8(*(id *)(v0 + 1152), v28);
  v29 = *(unsigned __int8 *)(v0 + 1176);
  if (v29 != 255)
    sub_1A913A0D8(*(id *)(v0 + 1168), v29);
  v30 = *(unsigned __int8 *)(v0 + 1192);
  if (v30 != 255)
    sub_1A913A0D8(*(id *)(v0 + 1184), v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 1304))
    __swift_destroy_boxed_opaque_existential_0(v0 + 1280);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v31 = *(unsigned __int8 *)(v0 + 1384);
  if (v31 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 1368), *(_QWORD *)(v0 + 1376), v31);
  v32 = *(unsigned __int8 *)(v0 + 1416);
  if (v32 != 255)
    sub_1A913A0D8(*(id *)(v0 + 1408), v32);
  v33 = *(unsigned __int8 *)(v0 + 1432);
  if (v33 != 255)
    sub_1A913A0D8(*(id *)(v0 + 1424), v33);
  v34 = *(unsigned __int8 *)(v0 + 1448);
  if (v34 != 255)
    sub_1A913A0D8(*(id *)(v0 + 1440), v34);
  v35 = *(unsigned __int8 *)(v0 + 1464);
  if (v35 != 255)
    sub_1A913A0D8(*(id *)(v0 + 1456), v35);
  v36 = *(unsigned __int8 *)(v0 + 1480);
  if (v36 != 255)
    sub_1A913A0D8(*(id *)(v0 + 1472), v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 1592))
    __swift_destroy_boxed_opaque_existential_0(v0 + 1568);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 1648);
  __swift_destroy_boxed_opaque_existential_0(v0 + 1688);
  return swift_deallocObject();
}

uint64_t sub_1A93420F8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1A933916C(a1, (void (*)(_BYTE *, _BYTE *, uint64_t))(v2 + 16), (_QWORD *)(v2 + 1688), a2, *(double *)(v2 + 1728), *(double *)(v2 + 1736), *(double *)(v2 + 1744));
}

uint64_t sub_1A9342124()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;

  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v1);
  v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 != 255)
    sub_1A913A0D8(*(id *)(v0 + 72), v2);
  v3 = *(unsigned __int8 *)(v0 + 96);
  if (v3 != 255)
    sub_1A913A0D8(*(id *)(v0 + 88), v3);
  v4 = *(unsigned __int8 *)(v0 + 112);
  if (v4 != 255)
    sub_1A913A0D8(*(id *)(v0 + 104), v4);
  v5 = *(unsigned __int8 *)(v0 + 128);
  if (v5 != 255)
    sub_1A913A0D8(*(id *)(v0 + 120), v5);
  v6 = *(unsigned __int8 *)(v0 + 144);
  if (v6 != 255)
    sub_1A913A0D8(*(id *)(v0 + 136), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 256))
    __swift_destroy_boxed_opaque_existential_0(v0 + 232);

  swift_bridgeObjectRelease();
  v7 = *(unsigned __int8 *)(v0 + 312);
  if (v7 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 304), v7);
  v8 = *(unsigned __int8 *)(v0 + 344);
  if (v8 != 255)
    sub_1A913A0D8(*(id *)(v0 + 336), v8);
  v9 = *(unsigned __int8 *)(v0 + 360);
  if (v9 != 255)
    sub_1A913A0D8(*(id *)(v0 + 352), v9);
  v10 = *(unsigned __int8 *)(v0 + 376);
  if (v10 != 255)
    sub_1A913A0D8(*(id *)(v0 + 368), v10);
  v11 = *(unsigned __int8 *)(v0 + 392);
  if (v11 != 255)
    sub_1A913A0D8(*(id *)(v0 + 384), v11);
  v12 = *(unsigned __int8 *)(v0 + 408);
  if (v12 != 255)
    sub_1A913A0D8(*(id *)(v0 + 400), v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 520))
    __swift_destroy_boxed_opaque_existential_0(v0 + 496);
  swift_release();
  swift_bridgeObjectRelease();
  v13 = *(unsigned __int8 *)(v0 + 584);
  if (v13 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 568), *(_QWORD *)(v0 + 576), v13);
  v14 = *(unsigned __int8 *)(v0 + 616);
  if (v14 != 255)
    sub_1A913A0D8(*(id *)(v0 + 608), v14);
  v15 = *(unsigned __int8 *)(v0 + 632);
  if (v15 != 255)
    sub_1A913A0D8(*(id *)(v0 + 624), v15);
  v16 = *(unsigned __int8 *)(v0 + 648);
  if (v16 != 255)
    sub_1A913A0D8(*(id *)(v0 + 640), v16);
  v17 = *(unsigned __int8 *)(v0 + 664);
  if (v17 != 255)
    sub_1A913A0D8(*(id *)(v0 + 656), v17);
  v18 = *(unsigned __int8 *)(v0 + 680);
  if (v18 != 255)
    sub_1A913A0D8(*(id *)(v0 + 672), v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 792))
    __swift_destroy_boxed_opaque_existential_0(v0 + 768);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9342354@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1A9338694(a1, v2 + 16, a2);
}

uint64_t sub_1A9342370@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A933ABF0(v1 + 16, a1);
}

uint64_t sub_1A9342378()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;

  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v1);
  v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 != 255)
    sub_1A913A0D8(*(id *)(v0 + 72), v2);
  v3 = *(unsigned __int8 *)(v0 + 96);
  if (v3 != 255)
    sub_1A913A0D8(*(id *)(v0 + 88), v3);
  v4 = *(unsigned __int8 *)(v0 + 112);
  if (v4 != 255)
    sub_1A913A0D8(*(id *)(v0 + 104), v4);
  v5 = *(unsigned __int8 *)(v0 + 128);
  if (v5 != 255)
    sub_1A913A0D8(*(id *)(v0 + 120), v5);
  v6 = *(unsigned __int8 *)(v0 + 144);
  if (v6 != 255)
    sub_1A913A0D8(*(id *)(v0 + 136), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 256))
    __swift_destroy_boxed_opaque_existential_0(v0 + 232);
  swift_release();
  swift_bridgeObjectRelease();
  v7 = *(unsigned __int8 *)(v0 + 328);
  if (v7 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320), v7);
  v8 = *(unsigned __int8 *)(v0 + 360);
  if (v8 != 255)
    sub_1A913A0D8(*(id *)(v0 + 352), v8);
  v9 = *(unsigned __int8 *)(v0 + 376);
  if (v9 != 255)
    sub_1A913A0D8(*(id *)(v0 + 368), v9);
  v10 = *(unsigned __int8 *)(v0 + 392);
  if (v10 != 255)
    sub_1A913A0D8(*(id *)(v0 + 384), v10);
  v11 = *(unsigned __int8 *)(v0 + 408);
  if (v11 != 255)
    sub_1A913A0D8(*(id *)(v0 + 400), v11);
  v12 = *(unsigned __int8 *)(v0 + 424);
  if (v12 != 255)
    sub_1A913A0D8(*(id *)(v0 + 416), v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 536))
    __swift_destroy_boxed_opaque_existential_0(v0 + 512);
  swift_release();
  swift_bridgeObjectRelease();
  v13 = *(unsigned __int8 *)(v0 + 600);
  if (v13 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 592), v13);
  v14 = *(unsigned __int8 *)(v0 + 632);
  if (v14 != 255)
    sub_1A913A0D8(*(id *)(v0 + 624), v14);
  v15 = *(unsigned __int8 *)(v0 + 648);
  if (v15 != 255)
    sub_1A913A0D8(*(id *)(v0 + 640), v15);
  v16 = *(unsigned __int8 *)(v0 + 664);
  if (v16 != 255)
    sub_1A913A0D8(*(id *)(v0 + 656), v16);
  v17 = *(unsigned __int8 *)(v0 + 680);
  if (v17 != 255)
    sub_1A913A0D8(*(id *)(v0 + 672), v17);
  v18 = *(unsigned __int8 *)(v0 + 696);
  if (v18 != 255)
    sub_1A913A0D8(*(id *)(v0 + 688), v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 808))
    __swift_destroy_boxed_opaque_existential_0(v0 + 784);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A93425A8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A9340C18(*a1, v2 + 16, *(unsigned __int8 *)(v2 + 288), v2 + 296, a2);
}

uint64_t objectdestroy_37Tm()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;

  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v1);
  v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 != 255)
    sub_1A913A0D8(*(id *)(v0 + 72), v2);
  v3 = *(unsigned __int8 *)(v0 + 96);
  if (v3 != 255)
    sub_1A913A0D8(*(id *)(v0 + 88), v3);
  v4 = *(unsigned __int8 *)(v0 + 112);
  if (v4 != 255)
    sub_1A913A0D8(*(id *)(v0 + 104), v4);
  v5 = *(unsigned __int8 *)(v0 + 128);
  if (v5 != 255)
    sub_1A913A0D8(*(id *)(v0 + 120), v5);
  v6 = *(unsigned __int8 *)(v0 + 144);
  if (v6 != 255)
    sub_1A913A0D8(*(id *)(v0 + 136), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 256))
    __swift_destroy_boxed_opaque_existential_0(v0 + 232);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A934268C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A93426B0()
{
  return objectdestroy_50Tm((uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
}

uint64_t sub_1A93426BC()
{
  return sub_1A9342834((uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, (uint64_t (*)(uint64_t))sub_1A912E83C, (void (*)(void))sub_1A9309DBC, (void (*)(uint64_t, uint64_t))sub_1A91AAB64);
}

uint64_t sub_1A93426E0(uint64_t a1)
{
  uint64_t v1;

  return _s18PodcastsFoundation11TTMLRequestV2eeoiySbAC_ACtFZ_0(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1A934270C()
{
  return objectdestroy_61Tm(&qword_1EEABCC50, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
}

uint64_t sub_1A9342720@<X0>(_OWORD *a1@<X8>)
{
  return sub_1A93429E4(&qword_1EEABCC50, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, &qword_1EEABE2B0, a1);
}

uint64_t sub_1A934273C()
{
  return objectdestroy_50Tm((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
}

uint64_t objectdestroy_50Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v4 = (v3 + 24) & ~v3;
  swift_release();
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1 + v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1 + v4, v5);
  swift_bridgeObjectRelease();
  v7 = v1 + v4 + *(int *)(v2 + 36);
  if (*(_QWORD *)(v7 + 24))
    __swift_destroy_boxed_opaque_existential_0(v7);
  return swift_deallocObject();
}

uint64_t sub_1A9342810()
{
  return sub_1A9342834((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(uint64_t))sub_1A912E820, (void (*)(void))sub_1A9309DD0, (void (*)(uint64_t, uint64_t))sub_1A91AB05C);
}

uint64_t sub_1A9342834(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t), void (*a3)(void), void (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return sub_1A933CD60(*(os_unfair_lock_s **)(v4 + 16), v4 + ((v9 + 24) & ~v9), a1, a2, a3, a4);
}

uint64_t sub_1A93428A0(uint64_t a1)
{
  uint64_t v1;

  return _s18PodcastsFoundation22ShazamSignatureRequestV2eeoiySbAC_ACtFZ_0(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1A93428CC()
{
  return objectdestroy_61Tm(&qword_1EEABCCB8, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
}

uint64_t objectdestroy_61Tm(uint64_t *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8) + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v2 + v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2 + v5, v6);
  v8 = a2(0);
  swift_bridgeObjectRelease();
  v9 = v2 + v5 + *(int *)(v8 + 36);
  if (*(_QWORD *)(v9 + 24))
    __swift_destroy_boxed_opaque_existential_0(v9);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A93429C8@<X0>(_OWORD *a1@<X8>)
{
  return sub_1A93429E4(&qword_1EEABCCB8, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, &qword_1EEABE360, a1);
}

uint64_t sub_1A93429E4@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t *a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8) + 80);
  return sub_1A933AA14(v4 + ((v9 + 16) & ~v9), a2, a1, a3, a4);
}

BOOL sub_1A9342A48(_OWORD *a1)
{
  return sub_1A9341BB4(a1);
}

void sub_1A9342A8C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  type metadata accessor for FairPlayAsset();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
  sub_1A9066CA8(&qword_1EEABE3C8, (uint64_t (*)(uint64_t))type metadata accessor for FairPlayAsset, MEMORY[0x1E0DEFCF8]);
  v5 = sub_1A93F7EFC();
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();

}

id static DispatchingFairPlayKeyLoading.receive(on:loader:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  id v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance] = a2;
  *(_QWORD *)&v5[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_responseQueue] = a1;
  v8.receiver = v5;
  v8.super_class = v2;
  swift_unknownObjectRetain();
  v6 = a1;
  return objc_msgSendSuper2(&v8, sel_init);
}

void DispatchingFairPlayKeyLoading.createSession(asset:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  _QWORD v11[6];

  v7 = *(void **)(v3 + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  v11[4] = sub_1A9342F38;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A9342F44;
  v11[3] = &block_descriptor_64;
  v10 = _Block_copy(v11);
  sub_1A90858C0(a2);
  swift_release();
  objc_msgSend(v7, sel_createSessionWithAsset_completion_, a1, v10);
  _Block_release(v10);
}

uint64_t sub_1A9342CD4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9342CF8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  void *v17;
  id v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v10 = sub_1A93F7D58();
  v23 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1A93F7DB8();
  v13 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1AF41420C](a3 + 16);
  if (result)
  {
    v17 = (void *)result;
    v18 = *(id *)(result + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_responseQueue);

    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a4;
    v19[3] = a5;
    v19[4] = a1;
    v19[5] = a2;
    aBlock[4] = sub_1A9343F7C;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_96_0;
    v20 = _Block_copy(aBlock);
    sub_1A90858C0(a4);
    swift_unknownObjectRetain();
    v21 = a2;
    sub_1A93F7D88();
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D28();
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v15, v12, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v10);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v22);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A9342F38(uint64_t a1, void *a2)
{
  uint64_t *v2;

  return sub_1A9342CF8(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1A9342F44(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

void DispatchingFairPlayKeyLoading.startKeyRequest(session:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  _QWORD v11[6];

  v7 = *(void **)(v3 + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  v11[4] = sub_1A9343168;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A90BF160;
  v11[3] = &block_descriptor_10_5;
  v10 = _Block_copy(v11);
  sub_1A90858C0(a2);
  swift_release();
  objc_msgSend(v7, sel_startKeyRequestWithSession_completion_, a1, v10);
  _Block_release(v10);
}

uint64_t sub_1A9343168(void *a1)
{
  uint64_t *v1;

  return sub_1A9343350(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1E54F3E28, (uint64_t)sub_1A92CC7B0, (uint64_t)&block_descriptor_90);
}

void DispatchingFairPlayKeyLoading.renewKeyRequest(asset:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  _QWORD v11[6];

  v7 = *(void **)(v3 + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  v11[4] = sub_1A9343580;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A90BF160;
  v11[3] = &block_descriptor_17_5;
  v10 = _Block_copy(v11);
  sub_1A90858C0(a2);
  swift_release();
  objc_msgSend(v7, sel_renewKeyRequestWithAsset_completion_, a1, v10);
  _Block_release(v10);
}

uint64_t sub_1A9343350(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  void *v18;
  id v19;
  _QWORD *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v23 = a6;
  v24 = a7;
  v11 = sub_1A93F7D58();
  v26 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1A93F7DB8();
  v14 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1AF41420C](a2 + 16);
  if (result)
  {
    v18 = (void *)result;
    v19 = *(id *)(result + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_responseQueue);

    v20 = (_QWORD *)swift_allocObject();
    v20[2] = a3;
    v20[3] = a4;
    v20[4] = a1;
    aBlock[4] = v23;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = v24;
    v21 = _Block_copy(aBlock);
    sub_1A90858C0(a3);
    v22 = a1;
    sub_1A93F7D88();
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D28();
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v16, v13, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v11);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v25);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A9343580(void *a1)
{
  uint64_t *v1;

  return sub_1A9343350(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1E54F3DD8, (uint64_t)sub_1A92CC7B0, (uint64_t)&block_descriptor_84);
}

void DispatchingFairPlayKeyLoading.renewKeyRequests(assets:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  _QWORD v11[6];

  v6 = *(void **)(v3 + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance);
  type metadata accessor for FairPlayAsset();
  v7 = (void *)sub_1A93F82F8();
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  v11[4] = sub_1A93439C8;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A9342A8C;
  v11[3] = &block_descriptor_24_4;
  v10 = _Block_copy(v11);
  sub_1A90858C0(a2);
  swift_release();
  objc_msgSend(v6, sel_renewKeyRequestsWithAssets_completion_, v7, v10);
  _Block_release(v10);

}

uint64_t sub_1A9343788(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  void *v17;
  id v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v10 = sub_1A93F7D58();
  v23 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1A93F7DB8();
  v13 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1AF41420C](a3 + 16);
  if (result)
  {
    v17 = (void *)result;
    v18 = *(id *)(result + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_responseQueue);

    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a4;
    v19[3] = a5;
    v19[4] = a1;
    v19[5] = a2;
    aBlock[4] = sub_1A9343F7C;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_78;
    v20 = _Block_copy(aBlock);
    sub_1A90858C0(a4);
    swift_bridgeObjectRetain();
    v21 = a2;
    sub_1A93F7D88();
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D28();
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v15, v12, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v10);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v22);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A93439C8(uint64_t a1, void *a2)
{
  uint64_t *v2;

  return sub_1A9343788(a1, a2, v2[2], v2[3], v2[4]);
}

id DispatchingFairPlayKeyLoading.renewKey(session:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance), sel_renewKeyWithSession_, a1);
}

void DispatchingFairPlayKeyLoading.stopKeyRequest(asset:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  _QWORD v11[6];

  v7 = *(void **)(v3 + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  v11[4] = sub_1A9343BBC;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A90BF160;
  v11[3] = &block_descriptor_31_3;
  v10 = _Block_copy(v11);
  sub_1A90858C0(a2);
  swift_release();
  objc_msgSend(v7, sel_stopKeyRequestWithAsset_completion_, a1, v10);
  _Block_release(v10);
}

uint64_t sub_1A9343BBC(void *a1)
{
  uint64_t *v1;

  return sub_1A9343350(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1E54F3D38, (uint64_t)sub_1A92CC7B0, (uint64_t)&block_descriptor_72);
}

void DispatchingFairPlayKeyLoading.stopKeyRequest(session:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  _QWORD v11[6];

  v7 = *(void **)(v3 + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  v11[4] = sub_1A9343DAC;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A90BF160;
  v11[3] = &block_descriptor_38_1;
  v10 = _Block_copy(v11);
  sub_1A90858C0(a2);
  swift_release();
  objc_msgSend(v7, sel_stopKeyRequestWithSession_completion_, a1, v10);
  _Block_release(v10);
}

uint64_t sub_1A9343DAC(void *a1)
{
  uint64_t *v1;

  return sub_1A9343350(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1E54F3CE8, (uint64_t)sub_1A92CC7B0, (uint64_t)&block_descriptor_66_1);
}

id DispatchingFairPlayKeyLoading.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DispatchingFairPlayKeyLoading.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DispatchingFairPlayKeyLoading.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for DispatchingFairPlayKeyLoading()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A9343F44()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A9343F70()
{
  return objectdestroy_74Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1A9343F88()
{
  return objectdestroy_74Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t objectdestroy_74Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 16))
    swift_release();
  a1(*(_QWORD *)(v1 + 32));

  return swift_deallocObject();
}

uint64_t TranscriptModel.init(duration:paragraphs:speakers:ttmlData:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_BYTE *)(a8 + 16) = a3 & 1;
  *(_QWORD *)(a8 + 24) = a6;
  *(_QWORD *)(a8 + 32) = a7;
  *(_QWORD *)(a8 + 40) = a4;
  *(_QWORD *)(a8 + 48) = a5;
  return result;
}

void __swiftcall TranscriptModel.Paragraph.init(startTime:endTime:sentences:speakerID:)(PodcastsFoundation::TranscriptModel::Paragraph *__return_ptr retstr, Swift::Double startTime, Swift::Double endTime, Swift::OpaquePointer sentences, Swift::String_optional speakerID)
{
  retstr->startTime = startTime;
  retstr->endTime = endTime;
  retstr->speakerID = speakerID;
  retstr->sentences = sentences;
}

PodcastsFoundation::TranscriptModel::Sentence __swiftcall TranscriptModel.Sentence.init(startTime:endTime:words:splitStyle:)(Swift::Double startTime, Swift::Double endTime, Swift::OpaquePointer words, PodcastsFoundation::TranscriptModel::Sentence::SplitStyle splitStyle)
{
  uint64_t v4;
  char v5;
  PodcastsFoundation::TranscriptModel::Sentence result;

  v5 = *(_BYTE *)splitStyle;
  *(Swift::Double *)v4 = startTime;
  *(Swift::Double *)(v4 + 8) = endTime;
  *(Swift::OpaquePointer *)(v4 + 16) = words;
  *(_BYTE *)(v4 + 24) = v5;
  result.endTime = endTime;
  result.startTime = startTime;
  result.words = words;
  result.splitStyle = splitStyle;
  return result;
}

PodcastsFoundation::TranscriptModel::Word __swiftcall TranscriptModel.Word.init(startTime:endTime:text:)(Swift::Double startTime, Swift::Double endTime, Swift::String text)
{
  uint64_t v3;
  PodcastsFoundation::TranscriptModel::Word result;

  *(Swift::Double *)v3 = startTime;
  *(Swift::Double *)(v3 + 8) = endTime;
  *(Swift::String *)(v3 + 16) = text;
  result.text = text;
  result.endTime = endTime;
  result.startTime = startTime;
  return result;
}

double TranscriptModel.Word.startTime.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double TranscriptModel.Word.endTime.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double TranscriptModel.Sentence.startTime.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double TranscriptModel.Sentence.endTime.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double TranscriptModel.Paragraph.startTime.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double TranscriptModel.Paragraph.endTime.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t sub_1A93440A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  BOOL v14;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1 + 32;
    swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 0;
    while (1)
    {
      v5 = v2 + 32 * v3;
      v7 = *(_QWORD *)(v5 + 16);
      v6 = *(_QWORD *)(v5 + 24);
      swift_bridgeObjectRetain();
      v8 = sub_1A9122048(v7, v6);
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
      {
        v10 = 0;
        v11 = 0;
        do
        {
          v12 = *(_QWORD *)(v8 + 8 * v10 + 32);
          v13 = __OFADD__(v11, v12);
          v11 += v12;
          if (v13)
          {
            __break(1u);
            goto LABEL_16;
          }
          ++v10;
        }
        while (v9 != v10);
        swift_bridgeObjectRelease();
        if (v11 < 0)
          goto LABEL_17;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = 0;
      }
      v14 = __CFADD__(v4, v11 + 16);
      v4 += v11 + 16;
      if (v14)
        break;
      if (++v3 == v1)
      {
        swift_bridgeObjectRelease();
        return v4;
      }
    }
LABEL_16:
    __break(1u);
LABEL_17:
    result = sub_1A93F8E08();
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_1A93441FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1 + 48;
    swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 0;
    v22 = v2;
    v23 = v1;
    while (1)
    {
      v5 = *(_QWORD *)(v2 + 32 * v3);
      v6 = *(_QWORD *)(v5 + 16);
      if (v6)
        break;
      v20 = 16;
LABEL_17:
      v19 = __CFADD__(v4, v20);
      v4 += v20;
      if (v19)
        goto LABEL_25;
      if (++v3 == v1)
      {
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    v7 = v5 + 32;
    swift_bridgeObjectRetain_n();
    v8 = 0;
    v9 = 0;
    do
    {
      v10 = v7 + 32 * v8;
      v12 = *(_QWORD *)(v10 + 16);
      v11 = *(_QWORD *)(v10 + 24);
      swift_bridgeObjectRetain();
      v13 = sub_1A9122048(v12, v11);
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        v15 = 0;
        v16 = 0;
        do
        {
          v17 = *(_QWORD *)(v13 + 8 * v15 + 32);
          v18 = __OFADD__(v16, v17);
          v16 += v17;
          if (v18)
          {
            __break(1u);
            return 0;
          }
          ++v15;
        }
        while (v14 != v15);
        swift_bridgeObjectRelease();
        if (v16 < 0)
          goto LABEL_26;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v16 = 0;
      }
      v19 = __CFADD__(v9, v16 + 16);
      v9 += v16 + 16;
      if (v19)
      {
        __break(1u);
        goto LABEL_24;
      }
      ++v8;
    }
    while (v8 != v6);
    swift_bridgeObjectRelease_n();
    v2 = v22;
    v1 = v23;
    v20 = v9 + 16;
    if (v9 < 0xFFFFFFFFFFFFFFF0)
      goto LABEL_17;
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    result = sub_1A93F8E08();
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_1A93443C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;

  v39 = *(_QWORD *)(a1 + 16);
  if (!v39)
    return 0;
  v1 = a1 + 32;
  swift_bridgeObjectRetain();
  v2 = v1;
  v3 = 0;
  v4 = 0;
  v35 = v1;
LABEL_3:
  v5 = *(_QWORD *)(v2 + 40 * v3 + 32);
  v6 = *(_QWORD *)(v5 + 16);
  v42 = v6;
  if (!v6)
    goto LABEL_56;
  v36 = v3;
  v37 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  v7 = v5 + 48;
  v8 = 0;
  v9 = 0;
  v38 = v5 + 48;
  while (1)
  {
    v10 = *(_QWORD *)(v7 + 32 * v8);
    v44 = *(_QWORD *)(v10 + 16);
    if (v44)
      break;
    v12 = 0;
LABEL_52:
    v30 = v12 + 16;
    if (v12 >= 0xFFFFFFFFFFFFFFF0)
      goto LABEL_66;
    v29 = __CFADD__(v9, v30);
    v9 += v30;
    if (v29)
      goto LABEL_67;
    if (++v8 == v42)
    {
      v31 = v9;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v6 = v31;
      v3 = v36;
      v4 = v37;
      v2 = v35;
LABEL_56:
      v29 = __CFADD__(v6, 16);
      v32 = v6 + 16;
      if (v29)
        goto LABEL_68;
      v29 = __CFADD__(v4, v32);
      v4 += v32;
      if (v29)
        goto LABEL_69;
      if (++v3 == v39)
      {
        v33 = v4;
        swift_bridgeObjectRelease();
        return v33;
      }
      goto LABEL_3;
    }
  }
  v40 = v8;
  v41 = v9;
  v43 = v10 + 32;
  swift_bridgeObjectRetain_n();
  v11 = 0;
  v12 = 0;
  while (1)
  {
    v13 = v43 + 32 * v11;
    v15 = *(_QWORD *)(v13 + 16);
    v14 = *(_QWORD *)(v13 + 24);
    if ((v14 & 0x1000000000000000) == 0)
      break;
    v16 = sub_1A93F8124();
    if (v16)
      goto LABEL_12;
LABEL_46:
    swift_bridgeObjectRetain();
    v21 = MEMORY[0x1E0DEE9D8];
    v24 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v24)
    {
LABEL_40:
      v25 = 0;
      v26 = 0;
      while (1)
      {
        v27 = *(_QWORD *)(v21 + 8 * v25 + 32);
        v28 = __OFADD__(v26, v27);
        v26 += v27;
        if (v28)
          break;
        if (v24 == ++v25)
        {
          swift_bridgeObjectRelease();
          if (v26 < 0)
            goto LABEL_70;
          swift_bridgeObjectRelease();
          goto LABEL_48;
        }
      }
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
LABEL_47:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = 0;
LABEL_48:
    v29 = __CFADD__(v12, v26 + 16);
    v12 += v26 + 16;
    if (v29)
      goto LABEL_64;
    if (++v11 == v44)
    {
      swift_bridgeObjectRelease_n();
      v8 = v40;
      v9 = v41;
      v7 = v38;
      goto LABEL_52;
    }
  }
  if ((v14 & 0x2000000000000000) != 0)
    v16 = HIBYTE(v14) & 0xF;
  else
    v16 = v15 & 0xFFFFFFFFFFFFLL;
  if (!v16)
    goto LABEL_46;
LABEL_12:
  v46 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1A92A2110(0, v16 & ~(v16 >> 63), 0);
  if ((v16 & 0x8000000000000000) == 0)
  {
    v45 = v12;
    v17 = (v15 >> 59) & 1;
    if ((v14 & 0x1000000000000000) == 0)
      LOBYTE(v17) = 1;
    v18 = 4 << v17;
    if ((v14 & 0x2000000000000000) != 0)
      v19 = HIBYTE(v14) & 0xF;
    else
      v19 = v15 & 0xFFFFFFFFFFFFLL;
    v20 = 15;
    while (1)
    {
      while (1)
      {
        if ((v20 & 0xC) == v18)
        {
          if (v19 <= (unint64_t)sub_1A934522C(v20, v15, v14) >> 16)
          {
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
        }
        else if (v19 <= v20 >> 16)
        {
          goto LABEL_61;
        }
        if ((v14 & 0x1000000000000000) != 0)
        {
          sub_1A93F8154();
        }
        else if (!(v14 & 0x2000000000000000 | v15 & 0x1000000000000000))
        {
          sub_1A93F8D48();
        }
        v21 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A92A2110(0, *(_QWORD *)(v46 + 16) + 1, 1);
          v21 = v46;
        }
        v23 = *(_QWORD *)(v21 + 16);
        v22 = *(_QWORD *)(v21 + 24);
        if (v23 >= v22 >> 1)
        {
          sub_1A92A2110(v22 > 1, v23 + 1, 1);
          v21 = v46;
        }
        *(_QWORD *)(v21 + 16) = v23 + 1;
        *(_QWORD *)(v21 + 8 * v23 + 32) = 1;
        if ((v20 & 0xC) != v18)
          break;
        v20 = sub_1A934522C(v20, v15, v14);
        if ((v14 & 0x1000000000000000) != 0)
          goto LABEL_32;
LABEL_19:
        v20 = (v20 & 0xFFFFFFFFFFFF0000) + 65540;
        if (!--v16)
          goto LABEL_39;
      }
      if ((v14 & 0x1000000000000000) == 0)
        goto LABEL_19;
LABEL_32:
      if (v19 <= v20 >> 16)
        goto LABEL_63;
      v20 = sub_1A93F8130();
      if (!--v16)
      {
LABEL_39:
        v12 = v45;
        v24 = *(_QWORD *)(v21 + 16);
        if (!v24)
          goto LABEL_47;
        goto LABEL_40;
      }
    }
  }
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t sub_1A9344828(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  unint64_t v11;
  int64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  int64_t v29;

  v28 = a1 + 64;
  v1 = 1 << *(_BYTE *)(a1 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  v4 = 0;
  v5 = 0;
  while (1)
  {
    if (v3)
    {
      v8 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      v9 = v8 | (v4 << 6);
    }
    else
    {
      v10 = __OFADD__(v4++, 1);
      if (v10)
        goto LABEL_44;
      if (v4 >= v29)
      {
LABEL_40:
        swift_release();
        return v5;
      }
      v11 = *(_QWORD *)(v28 + 8 * v4);
      if (!v11)
      {
        v12 = v4 + 1;
        if (v4 + 1 >= v29)
          goto LABEL_40;
        v11 = *(_QWORD *)(v28 + 8 * v12);
        if (!v11)
        {
          v12 = v4 + 2;
          if (v4 + 2 >= v29)
            goto LABEL_40;
          v11 = *(_QWORD *)(v28 + 8 * v12);
          if (!v11)
          {
            v12 = v4 + 3;
            if (v4 + 3 >= v29)
              goto LABEL_40;
            v11 = *(_QWORD *)(v28 + 8 * v12);
            if (!v11)
            {
              v12 = v4 + 4;
              if (v4 + 4 >= v29)
                goto LABEL_40;
              v11 = *(_QWORD *)(v28 + 8 * v12);
              if (!v11)
              {
                v12 = v4 + 5;
                if (v4 + 5 >= v29)
                  goto LABEL_40;
                v11 = *(_QWORD *)(v28 + 8 * v12);
                if (!v11)
                {
                  while (1)
                  {
                    v4 = v12 + 1;
                    if (__OFADD__(v12, 1))
                      goto LABEL_45;
                    if (v4 >= v29)
                      goto LABEL_40;
                    v11 = *(_QWORD *)(v28 + 8 * v4);
                    ++v12;
                    if (v11)
                      goto LABEL_22;
                  }
                }
              }
            }
          }
        }
        v4 = v12;
      }
LABEL_22:
      v3 = (v11 - 1) & v11;
      v9 = __clz(__rbit64(v11)) + (v4 << 6);
    }
    v13 = (unint64_t *)(*(_QWORD *)(a1 + 56) + 32 * v9);
    v15 = *v13;
    v14 = v13[1];
    v17 = v13[2];
    v16 = v13[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v18 = sub_1A9122048(v15, v14);
    swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
      break;
    swift_bridgeObjectRelease();
    v21 = 0;
LABEL_30:
    swift_bridgeObjectRetain();
    v23 = sub_1A9122048(v17, v16);
    swift_bridgeObjectRelease();
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      v25 = 0;
      v6 = 0;
      while (1)
      {
        v26 = *(_QWORD *)(v23 + 8 * v25 + 32);
        v10 = __OFADD__(v6, v26);
        v6 += v26;
        if (v10)
          break;
        if (v24 == ++v25)
        {
          swift_bridgeObjectRelease();
          if (v6 < 0)
            goto LABEL_46;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
      }
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = 0;
LABEL_5:
    v7 = __CFADD__(v5, v6 + v21);
    v5 += v6 + v21;
    if (v7)
      goto LABEL_43;
  }
  v20 = 0;
  v21 = 0;
  do
  {
    v22 = *(_QWORD *)(v18 + 8 * v20 + 32);
    v10 = __OFADD__(v21, v22);
    v21 += v22;
    if (v10)
    {
      __break(1u);
      goto LABEL_42;
    }
    ++v20;
  }
  while (v19 != v20);
  swift_bridgeObjectRelease();
  if ((v21 & 0x8000000000000000) == 0)
    goto LABEL_30;
LABEL_46:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t TranscriptModel.duration.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t TranscriptModel.ttmlData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1A90D8068(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t TranscriptModel.paragraphs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptModel.speakers.getter()
{
  return swift_bridgeObjectRetain();
}

void TranscriptModel.inMemorySize.getter()
{
  __asm { BR              X12 }
}

uint64_t sub_1A9344BF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t result;

  v3 = BYTE6(v1);
  v4 = sub_1A93443C4(a1);
  v5 = v3 + v4;
  if (__CFADD__(v3, v4))
  {
    __break(1u);
    goto LABEL_5;
  }
  v6 = sub_1A9344828(v2);
  v7 = __CFADD__(v5, v6);
  result = v5 + v6;
  if (v7)
  {
LABEL_5:
    __break(1u);
    JUMPOUT(0x1A9344C54);
  }
  return result;
}

uint64_t TranscriptModel.Paragraph.speakerID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptModel.Paragraph.sentences.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptModel.Paragraph.sentences.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*TranscriptModel.Paragraph.sentences.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptModel.Paragraph.inMemorySize.getter()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t result;

  v1 = sub_1A93441FC(*(_QWORD *)(v0 + 32));
  v2 = __CFADD__(v1, 16);
  result = v1 + 16;
  if (v2)
    __break(1u);
  return result;
}

uint64_t sub_1A9344D4C()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t result;

  v1 = sub_1A93441FC(*(_QWORD *)(v0 + 32));
  v2 = __CFADD__(v1, 16);
  result = v1 + 16;
  if (v2)
    __break(1u);
  return result;
}

uint64_t TranscriptModel.Sentence.words.getter()
{
  return swift_bridgeObjectRetain();
}

void TranscriptModel.Sentence.splitStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

uint64_t TranscriptModel.Sentence.inMemorySize.getter()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t result;

  v1 = sub_1A93440A4(*(_QWORD *)(v0 + 16));
  v2 = __CFADD__(v1, 16);
  result = v1 + 16;
  if (v2)
    __break(1u);
  return result;
}

BOOL TranscriptModel.Sentence.SplitStyle.containsStartOfOriginalSentence.getter()
{
  unsigned __int8 *v0;

  return *v0 < 2u;
}

BOOL static TranscriptModel.Sentence.SplitStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TranscriptModel.Sentence.SplitStyle.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t TranscriptModel.Sentence.SplitStyle.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A9344E40()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t result;

  v1 = sub_1A93440A4(*(_QWORD *)(v0 + 16));
  v2 = __CFADD__(v1, 16);
  result = v1 + 16;
  if (v2)
    __break(1u);
  return result;
}

uint64_t TranscriptModel.Word.text.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptModel.Word.inMemorySize.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  v3 = sub_1A9122048(v1, v2);
  result = swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      v8 = *(_QWORD *)(v3 + 8 * v6 + 32);
      v9 = __OFADD__(v7, v8);
      v7 += v8;
      if (v9)
      {
        __break(1u);
        return result;
      }
      ++v6;
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
    if ((v7 & 0x8000000000000000) == 0)
      return v7 + 16;
    sub_1A93F8E08();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  v7 = 0;
  return v7 + 16;
}

uint64_t TranscriptModel.Speaker.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptModel.Speaker.inMemorySize.getter()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  swift_bridgeObjectRetain();
  v5 = sub_1A9122048(v1, v2);
  result = swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v5 + 16);
  if (v7)
  {
    v8 = 0;
    v9 = 0;
    do
    {
      v10 = *(_QWORD *)(v5 + 8 * v8 + 32);
      v11 = __OFADD__(v9, v10);
      v9 += v10;
      if (v11)
      {
        __break(1u);
        goto LABEL_17;
      }
      ++v8;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
    if ((v9 & 0x8000000000000000) == 0)
      goto LABEL_8;
LABEL_13:
    sub_1A93F8E08();
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  v9 = 0;
LABEL_8:
  swift_bridgeObjectRetain();
  v12 = sub_1A9122048(v4, v3);
  result = swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    v15 = 0;
    return v15 + v9;
  }
  v14 = 0;
  v15 = 0;
  while (1)
  {
    v16 = *(_QWORD *)(v12 + 8 * v14 + 32);
    v11 = __OFADD__(v15, v16);
    v15 += v16;
    if (v11)
      break;
    if (v13 == ++v14)
    {
      swift_bridgeObjectRelease();
      if ((v15 & 0x8000000000000000) == 0)
        return v15 + v9;
      goto LABEL_13;
    }
  }
LABEL_17:
  __break(1u);
  return result;
}

PodcastsFoundation::TranscriptModel::Speaker_optional __swiftcall TranscriptModel.speaker(for:)(PodcastsFoundation::TranscriptModel::Paragraph *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  char v18;
  char v19[24];
  ValueMetadata *v20;
  unint64_t v21;
  PodcastsFoundation::TranscriptModel::Speaker_optional result;

  v3 = v1;
  object = a1->speakerID.value._object;
  if (!object)
    goto LABEL_9;
  countAndFlagsBits = a1->speakerID.value._countAndFlagsBits;
  v6 = *(_QWORD *)(v2 + 48);
  v7 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRetain();
  if (!v7)
  {
LABEL_6:
    v20 = &type metadata for Podcasts;
    v21 = sub_1A90A4238();
    v19[0] = 40;
    v18 = sub_1A93F7500();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    if ((v18 & 1) != 0)
    {
      *v3 = countAndFlagsBits;
      v3[1] = (uint64_t)object;
      v3[2] = countAndFlagsBits;
      v3[3] = (uint64_t)object;
      a1 = (PodcastsFoundation::TranscriptModel::Paragraph *)swift_bridgeObjectRetain();
      goto LABEL_10;
    }
    a1 = (PodcastsFoundation::TranscriptModel::Paragraph *)swift_bridgeObjectRelease();
LABEL_9:
    *(_OWORD *)v3 = 0u;
    *((_OWORD *)v3 + 1) = 0u;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1A9094640(countAndFlagsBits, (uint64_t)object);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v10 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 32 * v8);
  v12 = *v10;
  v11 = v10[1];
  v14 = v10[2];
  v13 = v10[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a1 = (PodcastsFoundation::TranscriptModel::Paragraph *)swift_bridgeObjectRelease_n();
  *v3 = v12;
  v3[1] = v11;
  v3[2] = v14;
  v3[3] = v13;
LABEL_10:
  result.value.id._object = v17;
  result.value.id._countAndFlagsBits = v16;
  result.value.name._object = v15;
  result.value.name._countAndFlagsBits = (uint64_t)a1;
  return result;
}

uint64_t sub_1A934522C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1A93F8160();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1AF411E54](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t _s18PodcastsFoundation15TranscriptModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) == 0)
      return 0;
  }
  else if ((*(_BYTE *)(a2 + 16) & 1) != 0 || (sub_1A93F9438() & 1) == 0)
  {
    return 0;
  }
  sub_1A93533B4(v2, v3);
  if ((v8 & 1) != 0 && (sub_1A91472C0(v5, v7) & 1) != 0)
    return sub_1A9282244(v4, v6);
  return 0;
}

uint64_t _s18PodcastsFoundation15TranscriptModelV4WordV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
    return 0;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1A93F90C0();
}

uint64_t _s18PodcastsFoundation15TranscriptModelV7SpeakerV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1A93F90C0(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_1A93F90C0();
  }
  return result;
}

uint64_t _s18PodcastsFoundation15TranscriptModelV8SentenceV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;

  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
    return 0;
  v4 = *(unsigned __int8 *)(a2 + 24);
  v5 = *(unsigned __int8 *)(a1 + 24);
  return sub_1A914721C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)) & (v5 == v4);
}

uint64_t _s18PodcastsFoundation15TranscriptModelV9ParagraphV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
    return 0;
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  if (v5)
  {
    if (!v7)
      return 0;
    v9 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && v5 == v7;
    if (!v9 && (sub_1A93F90C0() & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  return sub_1A91470EC(v6, v8);
}

unint64_t sub_1A9345514()
{
  unint64_t result;

  result = qword_1EEABE3D0;
  if (!qword_1EEABE3D0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for TranscriptModel.Sentence.SplitStyle, &type metadata for TranscriptModel.Sentence.SplitStyle);
    atomic_store(result, (unint64_t *)&qword_1EEABE3D0);
  }
  return result;
}

uint64_t destroy for TranscriptModel(uint64_t a1)
{
  sub_1A905F180(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  sub_1A90D8068(v4, v5);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranscriptModel(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)a1 = v4;
  v5 = *((_QWORD *)a2 + 3);
  v6 = *((_QWORD *)a2 + 4);
  sub_1A90D8068(v5, v6);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  sub_1A905F180(v7, v8);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TranscriptModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1A905F180(v4, v5);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for TranscriptModel.Paragraph()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptModel.Paragraph(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TranscriptModel.Paragraph(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TranscriptModel.Paragraph(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TranscriptModel.Paragraph()
{
  return &type metadata for TranscriptModel.Paragraph;
}

uint64_t destroy for TranscriptModel.Sentence()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptModel.Sentence(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranscriptModel.Sentence(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for TranscriptModel.Sentence(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptModel.Sentence(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptModel.Sentence(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptModel.Sentence()
{
  return &type metadata for TranscriptModel.Sentence;
}

uint64_t storeEnumTagSinglePayload for TranscriptModel.Sentence.SplitStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A93459E0 + 4 * byte_1A941EC05[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A9345A14 + 4 * byte_1A941EC00[v4]))();
}

uint64_t sub_1A9345A14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9345A1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9345A24);
  return result;
}

uint64_t sub_1A9345A30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9345A38);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A9345A3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9345A44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptModel.Sentence.SplitStyle()
{
  return &type metadata for TranscriptModel.Sentence.SplitStyle;
}

_QWORD *assignWithCopy for TranscriptModel.Word(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptModel.Word(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptModel.Word(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptModel.Word()
{
  return &type metadata for TranscriptModel.Word;
}

uint64_t destroy for TranscriptModel.Speaker()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for TranscriptModel.Speaker(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TranscriptModel.Speaker(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for TranscriptModel.Speaker(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TranscriptModel.Speaker()
{
  return &type metadata for TranscriptModel.Speaker;
}

uint64_t dispatch thunk of ScoutingAligner.align(at:within:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, double, double, double);

  v13 = (uint64_t (*)(uint64_t, uint64_t, double, double, double))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1A913BE94;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of LegacyPlayerController.startPlayback(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for DummyLegacyPlayerController()
{
  return &type metadata for DummyLegacyPlayerController;
}

id sub_1A9345D24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  char v7;
  id v8;
  BOOL v9;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15[2];

  v15[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = *(id *)v1;
  if (!*(_QWORD *)v1)
  {
    v4 = *(_QWORD *)(v1 + 16);
    v5 = *(id *)(v1 + 24);
    v6 = *(_QWORD *)(v1 + 32);
    if (v4)
    {
      v8 = *(id *)(v1 + 8);
      if (!v6)
      {
LABEL_11:
        swift_bridgeObjectRetain();
        v5 = 0;
        v6 = 0;
        v7 = 1;
LABEL_14:
        v3 = 0;
        goto LABEL_15;
      }
      v9 = v8 == v5 && v4 == v6;
      if (!v9 && (sub_1A93F90C0() & 1) == 0)
      {
        if ((sub_1A93F90C0() & 1) != 0)
          goto LABEL_11;
        if ((sub_1A93F90C0() & 1) == 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v7 = 2;
          goto LABEL_14;
        }
LABEL_17:
        v11 = objc_msgSend((id)objc_opt_self(), sel_sharedAccountStore);
        v15[0] = 0;
        v8 = objc_msgSend(v11, sel_activeStoreAccountWithError_, v15);

        v12 = v15[0];
        if (v8)
        {
          v4 = 0;
          v5 = 0;
          v6 = 0;
          v7 = 3;
        }
        else
        {
          v13 = v12;
          v14 = (void *)sub_1A93F7128();

          swift_willThrow();
          v8 = 0;
          v4 = 0;
          v5 = 0;
          v6 = 0;
          v7 = 4;
        }
        goto LABEL_14;
      }
    }
    else if (!v6)
    {
      goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    v7 = 1;
    v8 = v5;
    v4 = v6;
    v5 = 0;
    v6 = 0;
    goto LABEL_14;
  }
  v4 = 0;
  v5 = 0;
  v6 = 0;
  v7 = 0;
  v8 = *(id *)v1;
LABEL_15:
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return v3;
}

uint64_t PlaybackUserContext.init(enqueuerDSID:requesterUserId:sharedUserId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_1A9345F2C(uint64_t a1, uint64_t a2)
{
  char v3;
  _BYTE v5[40];
  _BYTE v6[40];

  sub_1A922C2E0(a1, (uint64_t)v5);
  sub_1A922C2E0(a2, (uint64_t)v6);
  sub_1A9346520((uint64_t)v5);
  return v3 & 1;
}

uint64_t sub_1A9345F74()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9345FA8
                                                            + 4 * byte_1A941EEF0[*(unsigned __int8 *)(v0 + 32)]))(0x5344656C676E6973, 0xEA00000000004449);
}

uint64_t sub_1A9345FA8()
{
  return 0x6F48656C676E6973;
}

uint64_t sub_1A9345FC8()
{
  return 0x6D6F4869746C756DLL;
}

uint64_t sub_1A9345FE8()
{
  return 0x417972616D697270;
}

uint64_t sub_1A934600C()
{
  return 0x6E776F6E6B6E75;
}

id PlaybackUserContext.enqueuerDSID.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

uint64_t PlaybackUserContext.requesterUserId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaybackUserContext.sharedUserId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t destroy for PlaybackUserContext(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PlaybackUserContext(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  a1[4] = *(_QWORD *)(a2 + 32);
  v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlaybackUserContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PlaybackUserContext(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackUserContext(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackUserContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackUserContext()
{
  return &type metadata for PlaybackUserContext;
}

id sub_1A93462C0(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 3:
      result = result;
      break;
    case 1:
      goto LABEL_3;
    case 2:
      swift_bridgeObjectRetain();
LABEL_3:
      result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void destroy for PlaybackUserContext.ContextType(uint64_t a1)
{
  sub_1A922C3C8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for PlaybackUserContext.ContextType(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A93462C0(*(id *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PlaybackUserContext.ContextType(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A93462C0(*(id *)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1A922C3C8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for PlaybackUserContext.ContextType(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1A922C3C8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackUserContext.ContextType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackUserContext.ContextType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A93464DC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 3u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1A93464F4(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackUserContext.ContextType()
{
  return &type metadata for PlaybackUserContext.ContextType;
}

void sub_1A9346520(uint64_t a1)
{
  _BYTE v1[40];

  sub_1A922C2E0(a1, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1A9346564()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v4[144];

  sub_1A922C2E0(v0, (uint64_t)v4);
  if (v4[32])
  {
    v2 = 0;
  }
  else
  {
    sub_1A90AC898();
    sub_1A9068AA0(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A93462C0);
    sub_1A9068AA0(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A93462C0);
    v2 = sub_1A93F8A3C();
    sub_1A9068AA0(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A922C3C8);
    sub_1A9068AA0(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A922C3C8);
  }
  return v2 & 1;
}

uint64_t ServerCategory.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerCategory.artworkPrimaryColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 48);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerCategory.artworkTemplateURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 48);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t _s18PodcastsFoundation14ServerCategoryC13artworkHeightSo8NSNumberCSgvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 48);
  if (v1 && (v2 = *(_QWORD *)(v1 + 16)) != 0 && (*(_BYTE *)(v2 + 40) & 1) == 0)
    return sub_1A93F8694();
  else
    return 0;
}

uint64_t _s18PodcastsFoundation14ServerCategoryC12artworkWidthSo8NSNumberCSgvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 48);
  if (v1 && (v2 = *(_QWORD *)(v1 + 16)) != 0 && (*(_BYTE *)(v2 + 24) & 1) == 0)
    return sub_1A93F8694();
  else
    return 0;
}

uint64_t ServerCategory.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerCategory.url.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerCategory.artwork.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 48) + 48))
    return swift_retain();
  else
    return 0;
}

uint64_t ServerCategory.color.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 56);
  swift_bridgeObjectRetain();
  return v1;
}

id MediaCacheDeleteProcessor.managedObjectContext.getter()
{
  id *v0;

  return *v0;
}

id MediaCacheDeleteProcessor.workQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

double MediaCacheDeleteProcessor.debounceInterval.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t MediaCacheDeleteProcessor.isRunning.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  unsigned __int8 v5;

  v1 = *(os_unfair_lock_s **)(v0 + 24);
  v2 = v1 + 4;
  v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1A908D648(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void MediaCacheDeleteProcessor.init(managedObjectContext:workQueue:userDefaults:debounceInterval:)(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD v19[5];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BC0);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 20) = 0;
  *(_BYTE *)(v10 + 16) = 0;
  MediaCacheDeleteProcessorDataSource.init(userDefaults:)((uint64_t)a3, v19);
  type metadata accessor for CoreDataEpisodeAndShowStorage();
  swift_allocObject();
  v11 = a1;
  v12 = a2;
  v13 = a3;
  v14 = CoreDataEpisodeAndShowStorage.init(context:)(v11);
  type metadata accessor for DebouncedEpisodeAndShowProcessor();
  v15 = swift_allocObject();
  v16 = v11;
  v17 = v12;
  v18 = sub_1A9346E04((uint64_t)v19, (uint64_t)v14, (uint64_t)v16, (uint64_t)v17, 0, 100, v15);

  *(_QWORD *)a4 = v16;
  *(_QWORD *)(a4 + 8) = v17;
  *(double *)(a4 + 16) = a5;
  *(_QWORD *)(a4 + 24) = v10;
  *(_QWORD *)(a4 + 32) = v18;
}

Swift::Bool __swiftcall MediaCacheDeleteProcessor.start()()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;
  _BYTE v9[16];
  char v10;

  v1 = *(os_unfair_lock_s **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = v1 + 4;
  v4 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1A908D648(v3, &v10);
  os_unfair_lock_unlock(v4);
  if ((v10 & 1) == 0)
  {
    v5 = *(os_unfair_lock_s **)(v2 + 264);
    v6 = v5 + 4;
    v7 = v5 + 5;
    os_unfair_lock_lock(v5 + 5);
    sub_1A908D648(v6, v9);
    os_unfair_lock_unlock(v7);
    if (v9[0] - 2 < 2)
      sub_1A908D654();
    os_unfair_lock_lock(v4);
    LOBYTE(v3->_os_unfair_lock_opaque) = 1;
    os_unfair_lock_unlock(v4);
  }
  return 1;
}

uint64_t sub_1A9346E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[4];
  _QWORD *v36;
  void *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD v43[5];
  _QWORD v44[5];
  _QWORD v45[5];
  _QWORD v46[6];

  v40 = a6;
  v13 = sub_1A93F885C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A93F8808();
  MEMORY[0x1E0C80A78](v17);
  v39 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v19);
  v38 = (char *)v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46[3] = &type metadata for MediaCacheDeleteProcessorDataSource;
  v46[4] = &protocol witness table for MediaCacheDeleteProcessorDataSource;
  v21 = swift_allocObject();
  v46[0] = v21;
  v22 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 48) = *(_QWORD *)(a1 + 32);
  v23 = type metadata accessor for CoreDataEpisodeAndShowStorage();
  v45[4] = &protocol witness table for CoreDataEpisodeAndShowStorage;
  v45[3] = v23;
  v45[0] = a2;
  v44[3] = &type metadata for MediaCacheDeleteProcessorDelegate;
  v44[4] = &protocol witness table for MediaCacheDeleteProcessorDelegate;
  v44[0] = a3;
  v44[1] = a4;
  *(_OWORD *)(a7 + 152) = 0u;
  *(_OWORD *)(a7 + 168) = 0u;
  *(_QWORD *)(a7 + 184) = 0;
  *(_OWORD *)(a7 + 216) = 0u;
  *(_OWORD *)(a7 + 232) = 0u;
  *(_QWORD *)(a7 + 248) = 0;
  *(_QWORD *)(a7 + 256) = 5;
  *(_QWORD *)(a7 + 272) = 0;
  *(_QWORD *)(a7 + 280) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9110);
  swift_allocObject();
  *(_QWORD *)(a7 + 192) = sub_1A93F798C();
  swift_allocObject();
  *(_QWORD *)(a7 + 200) = sub_1A93F798C();
  v24 = (_QWORD *)(a7 + 24);
  sub_1A905DC3C((uint64_t)v46, a7 + 24);
  sub_1A905DC3C((uint64_t)v45, a7 + 64);
  sub_1A905DC3C((uint64_t)v46, (uint64_t)v43);
  if (a5)
  {
    v25 = (uint64_t)a5;
  }
  else
  {
    v35[3] = sub_1A9066C6C();
    v41 = 0;
    v42 = 0xE000000000000000;
    sub_1A93F8C70();
    swift_bridgeObjectRelease();
    v41 = 0xD00000000000001DLL;
    v42 = 0x80000001A944D8B0;
    __swift_project_boxed_opaque_existential_1(v43, v43[3]);
    v37 = 0;
    swift_bridgeObjectRetain();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    v35[2] = v41;
    v35[1] = v42;
    v36 = (_QWORD *)(a7 + 24);
    sub_1A93F7D88();
    v41 = MEMORY[0x1E0DEE9D8];
    sub_1A9085ACC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
    sub_1A9085B14();
    a5 = v37;
    sub_1A93F8B5C();
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF8D0], v13);
    v24 = v36;
    v25 = sub_1A93F888C();
  }
  v26 = a5;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
  *(_QWORD *)(a7 + 16) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9648);
  v27 = swift_allocObject();
  *(_DWORD *)(v27 + 20) = 0;
  *(_BYTE *)(v27 + 16) = 3;
  *(_QWORD *)(a7 + 264) = v27;
  v43[0] = objc_msgSend((id)objc_opt_self(), sel_falsePredicate);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9148);
  swift_allocObject();
  *(_QWORD *)(a7 + 208) = sub_1A93F79EC();
  sub_1A905DC3C((uint64_t)v44, a7 + 112);
  *(_QWORD *)(a7 + 104) = v40;
  v28 = *(_QWORD *)(a7 + 96);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a7 + 64), *(_QWORD *)(a7 + 88));
  v29 = *(_QWORD *)(a7 + 48);
  v30 = *(_QWORD *)(a7 + 56);
  __swift_project_boxed_opaque_existential_1(v24, v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
  (*(void (**)(void))(v28 + 24))();
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(a7 + 96);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a7 + 64), *(_QWORD *)(a7 + 88));
  v32 = *(_QWORD *)(a7 + 48);
  v33 = *(_QWORD *)(a7 + 56);
  __swift_project_boxed_opaque_existential_1(v24, v32);
  (*(void (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
  (*(void (**)(void))(v31 + 32))();
  swift_bridgeObjectRelease();
  sub_1A908D66C();
  sub_1A908DA9C();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
  return a7;
}

uint64_t destroy for MediaCacheDeleteProcessor(id *a1)
{

  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for MediaCacheDeleteProcessor(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  a1[4] = *(_QWORD *)(a2 + 32);
  v6 = v3;
  v7 = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MediaCacheDeleteProcessor(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MediaCacheDeleteProcessor(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaCacheDeleteProcessor(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaCacheDeleteProcessor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaCacheDeleteProcessor()
{
  return &type metadata for MediaCacheDeleteProcessor;
}

uint64_t sub_1A9347554()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id MTPodcast.showType.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v0, sel_showTypeInFeed);
  v3 = objc_msgSend(v1, sel_showTypeFromString_, v2);

  return v3;
}

uint64_t *sub_1A93475F4()
{
  uint64_t *v0;

  sub_1A9085818(v0[2]);
  sub_1A9085818(v0[4]);
  sub_1A9085818(v0[6]);
  sub_1A9085818(v0[8]);
  sub_1A9085818(v0[10]);
  sub_1A9085818(v0[12]);
  sub_1A9085818(v0[14]);
  sub_1A9085818(v0[16]);
  sub_1A9085818(v0[18]);
  return v0;
}

uint64_t sub_1A9347650()
{
  sub_1A93475F4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FileManagingMock()
{
  return objc_opt_self();
}

uint64_t sub_1A9347690(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  v3 = *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 16);
  if (v3)
    return v3(result, a2 & 1);
  return result;
}

uint64_t sub_1A93476C0()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 32);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1A93476EC()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 48);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1A9347718()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 64);
  if (v1)
    return v1() & 1;
  else
    return 0;
}

uint64_t sub_1A9347750(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, _QWORD);

  v4 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v3 + 80);
  if (v4)
    return v4(a1, a2, a3 & 1) & 1;
  else
    return 0;
}

uint64_t sub_1A934778C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 96);
  if (v1)
    return v1() & 1;
  else
    return 0;
}

uint64_t sub_1A93477C4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 112);
  if (v1)
    return v1();
  else
    return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A93477FC()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 128);
  if (v1)
    return v1();
  else
    return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A9347834()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 144);
  if (v1)
    return v1();
  return result;
}

Swift::Void __swiftcall MTEpisode.markAsBookmarked()()
{
  void *v0;

  if ((objc_msgSend(v0, sel_isBookmarked) & 1) == 0)
  {
    sub_1A93F72E4();
    objc_msgSend(v0, sel_markAsBookmarkedOnTimestamp_);
  }
}

Swift::Void __swiftcall MTEpisode.markAsBookmarked(onTimestamp:)(Swift::Double onTimestamp)
{
  void *v1;
  Swift::Double v3;

  objc_msgSend(v1, sel_setIsBookmarked_, 1);
  objc_msgSend(v1, sel_lastBookmarkedDate);
  if (v3 < onTimestamp)
    objc_msgSend(v1, sel_setLastBookmarkedDate_, onTimestamp);
}

Swift::Void __swiftcall MTEpisode.markAsUnbookmarked()()
{
  void *v0;

  if (objc_msgSend(v0, sel_isBookmarked))
    objc_msgSend(v0, sel_setIsBookmarked_, 0);
}

PodcastsFoundation::PodcastEpisodeAttributes::MediaKind_optional ServerPodcastEpisode.mediaKind.getter@<W0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  Swift::String v6;
  PodcastsFoundation::PodcastEpisodeAttributes::MediaKind_optional result;
  char v8;
  char v9;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  v4 = *(void **)(v3 + 280);
  if (v4)
  {
    v5 = *(_QWORD *)(v3 + 272);
    swift_bridgeObjectRetain();
    v6._countAndFlagsBits = v5;
    v6._object = v4;
    result.value = PodcastEpisodeAttributes.MediaKind.init(rawValue:)(v6).value;
    v8 = v9;
    if (v9 == 5)
      v8 = 0;
  }
  else
  {
    v8 = 0;
  }
  *a1 = v8;
  return result;
}

uint64_t ServerPodcastEpisode.author.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.byteSize.getter()
{
  return 0;
}

uint64_t ServerPodcastEpisode.category.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 248);
  if (!v1 || !*(_QWORD *)(v1 + 16))
    return 0;
  v2 = *(_QWORD *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcastEpisode.isExplicit.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 224)
    || (swift_bridgeObjectRetain(), v1 = sub_1A93F8ED4(), swift_bridgeObjectRelease(), v1 != 1))
  {
    LOBYTE(v1) = sub_1A93F90C0();
  }
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t ServerPodcastEpisode.guid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 320);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.itemDescription.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  if (v1[23])
  {
    v2 = v1[22];
  }
  else
  {
    v3 = v1[14];
    if (v3)
    {
      v2 = *(_QWORD *)(v3 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v2 = 0;
    }
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcastEpisode.pubDate.getter@<X0>(uint64_t a1@<X8>)
{
  return PodcastEpisodeAttributes.releaseDateResolved.getter(a1);
}

uint64_t ServerPodcastEpisode.firstTimeAvailableAsPaid.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v4;
  char v5;

  if (*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 208))
  {
    v5 = 2;
    swift_retain();
    PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v5, a1);
    return swift_release();
  }
  else
  {
    v4 = sub_1A93F738C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
}

uint64_t ServerPodcastEpisode.firstTimeAvailableAsFree.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 208))
  {
    v12 = 1;
    swift_retain();
    PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v12, v5);
    v6 = sub_1A93F738C();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      v11 = 0;
      PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v11, a1);
      sub_1A90AC3A4((uint64_t)v5);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, v5, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    return swift_release();
  }
  else
  {
    v8 = sub_1A93F738C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

uint64_t ServerPodcastEpisode.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.trackNum.getter()
{
  return 0;
}

uint64_t ServerPodcastEpisode.uti.getter()
{
  return PodcastEpisodeAttributes.uti.getter();
}

uint64_t ServerPodcastEpisode.itunesTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.itemSummary.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(*(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 112);
  if (!v1)
    return 0;
  if (v1[3])
    v2 = v1[2];
  else
    v2 = v1[4];
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcastEpisode.seasonNumber.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 360))
    return 0;
  else
    return *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 352);
}

uint64_t ServerPodcastEpisode.episodeNumber.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 344))
    return 0;
  else
    return *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 336);
}

uint64_t ServerPodcastEpisode.episodeType.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  Swift::String v4;
  char v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  v2 = *(void **)(v1 + 168);
  if (!v2)
    return 1819047270;
  v3 = *(_QWORD *)(v1 + 160);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v3;
  v4._object = v2;
  PodcastEpisodeAttributes.EpisodeType.init(rawValue:)(v4);
  return *(_QWORD *)&aFull_3[8 * v6];
}

uint64_t ServerPodcastEpisode.webpageURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 232);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.feedURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.episodeStoreId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_id);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.priceType.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  char v2;

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v2);
  swift_bridgeObjectRelease();
  return *(_QWORD *)&aStdq_9[8 * v2];
}

double ServerPodcastEpisode.duration.getter@<D0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  return sub_1A9348A78(a1);
}

void ServerPodcastEpisode.enclosureURL.getter(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  char v1;

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v1);
}

uint64_t ServerPodcastEpisode.entitledPriceType.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  char v2;

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v2);
  swift_bridgeObjectRelease();
  return *(_QWORD *)&aStdq_9[8 * v2];
}

double sub_1A93489F8(void *a1)
{
  id v1;
  Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *v2;
  double v3;
  double v4;
  char v5;
  char v6;
  double result;
  char v8;

  v1 = a1;
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(v2, (Swift::Bool)&v8);
  v4 = v3;
  v6 = v5;

  swift_bridgeObjectRelease();
  result = v4 / 1000.0;
  if ((v6 & 1) != 0)
    return 0.0;
  return result;
}

double ServerPodcastEpisode.entitledDuration.getter@<D0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  return sub_1A9348A78(a1);
}

double sub_1A9348A78@<D0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  double v1;
  double v2;
  char v3;
  char v4;
  double result;
  char v6;

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v6);
  v2 = v1;
  v4 = v3;
  swift_bridgeObjectRelease();
  result = v2 / 1000.0;
  if ((v4 & 1) != 0)
    return 0.0;
  return result;
}

void ServerPodcastEpisode.entitledEnclosureURL.getter(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  char v1;

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v1);
}

id sub_1A9348B08(void *a1)
{
  id v1;
  Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v7;

  v1 = a1;
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(v2, (Swift::Bool)&v7);
  v4 = v3;

  if (!v4)
    return 0;
  v5 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t ServerPodcastEpisode.artworkTemplateURL.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  v2 = v1[16];
  if (v2)
  {
    v3 = v1[15] == 0x65646F73697065 && v2 == 0xE700000000000000;
    if (!v3 && (sub_1A93F90C0() & 1) == 0)
      return 0;
  }
  v4 = v1[17];
  if (!v4)
    return 0;
  v5 = *(_QWORD *)(v4 + 48);
  swift_bridgeObjectRetain();
  return v5;
}

double ServerPodcastEpisode.artworkWidth.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  v2 = v1[16];
  if ((!v2
     || (v1[15] == 0x65646F73697065 ? (v3 = v2 == 0xE700000000000000) : (v3 = 0), v3 || (sub_1A93F90C0() & 1) != 0))
    && (v4 = v1[17]) != 0
    && *(_BYTE *)(v4 + 24) != 1)
  {
    return (double)*(uint64_t *)(v4 + 16);
  }
  else
  {
    return (double)0;
  }
}

double ServerPodcastEpisode.artworkHeight.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  v2 = v1[16];
  if ((!v2
     || (v1[15] == 0x65646F73697065 ? (v3 = v2 == 0xE700000000000000) : (v3 = 0), v3 || (sub_1A93F90C0() & 1) != 0))
    && (v4 = v1[17]) != 0
    && *(_BYTE *)(v4 + 40) != 1)
  {
    return (double)*(uint64_t *)(v4 + 32);
  }
  else
  {
    return (double)0;
  }
}

uint64_t ServerPodcastEpisode.artworkBackgroundColor.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  v2 = v1[16];
  if (v2)
  {
    v3 = v1[15] == 0x65646F73697065 && v2 == 0xE700000000000000;
    if (!v3 && (sub_1A93F90C0() & 1) == 0)
      return 0;
  }
  v4 = v1[17];
  if (!v4)
    return 0;
  v5 = *(_QWORD *)(v4 + 64);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t ServerPodcastEpisode.artworkTextPrimaryColor.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  v2 = v1[16];
  if (v2)
  {
    v3 = v1[15] == 0x65646F73697065 && v2 == 0xE700000000000000;
    if (!v3 && (sub_1A93F90C0() & 1) == 0)
      return 0;
  }
  v4 = v1[17];
  if (!v4)
    return 0;
  v5 = *(_QWORD *)(v4 + 80);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t ServerPodcastEpisode.artworkTextSecondaryColor.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  v2 = v1[16];
  if (v2)
  {
    v3 = v1[15] == 0x65646F73697065 && v2 == 0xE700000000000000;
    if (!v3 && (sub_1A93F90C0() & 1) == 0)
      return 0;
  }
  v4 = v1[17];
  if (!v4)
    return 0;
  v5 = *(_QWORD *)(v4 + 96);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t ServerPodcastEpisode.artworkTextTertiaryColor.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  v2 = v1[16];
  if (v2)
  {
    v3 = v1[15] == 0x65646F73697065 && v2 == 0xE700000000000000;
    if (!v3 && (sub_1A93F90C0() & 1) == 0)
      return 0;
  }
  v4 = v1[17];
  if (!v4)
    return 0;
  v5 = *(_QWORD *)(v4 + 112);
  swift_bridgeObjectRetain();
  return v5;
}

id sub_1A9349044(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;
  void *v4;

  a3();
  if (v3)
  {
    v4 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t ServerPodcastEpisode.artworkTextQuaternaryColor.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  v2 = v1[16];
  if (v2)
  {
    v3 = v1[15] == 0x65646F73697065 && v2 == 0xE700000000000000;
    if (!v3 && (sub_1A93F90C0() & 1) == 0)
      return 0;
  }
  v4 = v1[17];
  if (!v4)
    return 0;
  v5 = *(_QWORD *)(v4 + 128);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t ServerPodcastEpisode.freeTranscriptIdentifier.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  Swift::tuple_ttmlToken_String_optional_snippet_String_optional_source_PodcastsFoundation_TranscriptSource_optional *v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v5);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v1, (PodcastsFoundation::PriceType)&v6);
  v3 = v2;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t ServerPodcastEpisode.entitledTranscriptIdentifier.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  Swift::tuple_ttmlToken_String_optional_snippet_String_optional_source_PodcastsFoundation_TranscriptSource_optional *v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v5);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v1, (PodcastsFoundation::PriceType)&v6);
  v3 = v2;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t ServerPodcastEpisode.freeTranscriptSnippet.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  Swift::tuple_ttmlToken_String_optional_snippet_String_optional_source_PodcastsFoundation_TranscriptSource_optional *v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v5);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v1, (PodcastsFoundation::PriceType)&v6);
  v3 = v2;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t ServerPodcastEpisode.entitledTranscriptSnippet.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  Swift::tuple_ttmlToken_String_optional_snippet_String_optional_source_PodcastsFoundation_TranscriptSource_optional *v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v5);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v1, (PodcastsFoundation::PriceType)&v6);
  v3 = v2;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t ServerPodcastEpisode.freeTranscriptProvider.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  Swift::tuple_ttmlToken_String_optional_snippet_String_optional_source_PodcastsFoundation_TranscriptSource_optional *v1;
  uint64_t v2;
  char v4;
  char v5;

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v4);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v1, (PodcastsFoundation::PriceType)&v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = 0x656C707061;
  if ((v5 & 1) == 0)
    v2 = 0x72656469766F7270;
  if (v5 == 2)
    return 0;
  else
    return v2;
}

uint64_t ServerPodcastEpisode.entitledTranscriptProvider.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  Swift::tuple_ttmlToken_String_optional_snippet_String_optional_source_PodcastsFoundation_TranscriptSource_optional *v1;
  uint64_t v2;
  char v4;
  char v5;

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v4);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v1, (PodcastsFoundation::PriceType)&v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = 0x656C707061;
  if ((v5 & 1) == 0)
    v2 = 0x72656469766F7270;
  if (v5 == 2)
    return 0;
  else
    return v2;
}

uint64_t NSUserDefaults.codable<A>(_:for:)@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  void *v4;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v20;

  v9 = (void *)sub_1A93F8010();
  v10 = objc_msgSend(v4, sel_dataForKey_, v9);

  if (v10)
  {
    v11 = sub_1A93F72B4();
    v13 = v12;

    sub_1A93F7098();
    swift_allocObject();
    sub_1A93F708C();
    sub_1A93F7080();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 0, 1, a3);
    swift_release();
    return sub_1A905F180(v11, v13);
  }
  else
  {
    if (qword_1ED2A3F00 != -1)
      swift_once();
    v14 = sub_1A93F7698();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A3EE0);
    swift_bridgeObjectRetain_n();
    v15 = sub_1A93F7674();
    v16 = sub_1A93F8790();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v20 = v18;
      *(_DWORD *)v17 = 136315138;
      swift_bridgeObjectRetain();
      sub_1A906436C(a1, a2, &v20);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A904E000, v15, v16, "No user defaults value for key '%s'", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v18, -1, -1);
      MEMORY[0x1AF41411C](v17, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 1, 1, a3);
  }
}

uint64_t NSUserDefaults.setCodable<A>(value:forKey:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = v3;
  sub_1A93F70C8();
  swift_allocObject();
  sub_1A93F70BC();
  v7 = sub_1A93F70B0();
  v9 = v8;
  v10 = (void *)sub_1A93F729C();
  v11 = (void *)sub_1A93F8010();
  objc_msgSend(v4, sel_setValue_forKey_, v10, v11);

  if (qword_1ED2A3F00 != -1)
    swift_once();
  v12 = sub_1A93F7698();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A3EE0);
  swift_bridgeObjectRetain_n();
  v13 = sub_1A93F7674();
  v14 = sub_1A93F8790();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = a2;
    v17 = swift_slowAlloc();
    v19 = v17;
    *(_DWORD *)v15 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A906436C(v16, a3, &v19);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v13, v14, "Stored value for key '%s'", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v17, -1, -1);
    MEMORY[0x1AF41411C](v15, -1, -1);
    sub_1A905F180(v7, v9);

    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1A905F180(v7, v9);

    return swift_release();
  }
}

uint64_t dispatch thunk of DownloadConsistencyIssueResolutionStrategy.resolution(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void __swiftcall ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *__return_ptr retstr, Swift::Bool isSubscriptionActive)
{
  char v2;
  char v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v3 = v2;
  v4 = (char *)isSubscriptionActive;
  v13 = 2;
  v5 = sub_1A934A338(&v13);
  if (v5)
  {
    if ((v3 & 1) != 0 && *(_QWORD *)(v5 + 56))
      goto LABEL_13;
    swift_release();
  }
  v12 = 1;
  v6 = sub_1A934A338(&v12);
  if (!v6)
  {
LABEL_9:
    v11 = 0;
    v8 = sub_1A934A338(&v11);
    swift_release();
    if (!v8)
    {
      v10 = 2;
      v9 = sub_1A934A338(&v10);
      if (v9)
      {
        if (*(_QWORD *)(v9 + 56))
        {
LABEL_13:
          v7 = 2;
          goto LABEL_14;
        }
        swift_release();
      }
    }
    *v4 = 0;
    swift_bridgeObjectRetain();
    return;
  }
  if (!*(_QWORD *)(v6 + 56))
  {
    swift_release();
    goto LABEL_9;
  }
  v7 = 1;
LABEL_14:
  *v4 = v7;
  swift_bridgeObjectRetain();
  swift_release();
}

void __swiftcall ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(Swift::tuple_ttmlToken_String_optional_snippet_String_optional_source_PodcastsFoundation_TranscriptSource_optional *__return_ptr retstr, PodcastsFoundation::PriceType a2)
{
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;

  v4 = (char *)a2;
  v5 = *v2;
  v6 = (_QWORD *)(v3 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
  swift_beginAccess();
  if (*v6
    && (v7 = *(_QWORD *)(*v6 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_transcripts)) != 0
    && (v8 = *(_QWORD *)(v7 + 16)) != 0)
  {
    v20 = v4;
    v9 = v7 + 32;
    swift_bridgeObjectRetain_n();
    v10 = 0;
    v18 = v8;
    v19 = v5;
    while (1)
    {
      v12 = v9 + 48 * v10;
      v13 = *(_QWORD *)(v12 + 24);
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
        break;
LABEL_6:
      if (++v10 == v8)
      {
        v11 = 2;
        swift_bridgeObjectRelease_n();
        v4 = v20;
        goto LABEL_16;
      }
    }
    v21 = *(_BYTE *)(v12 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v15 = 0;
    v16 = *(_QWORD *)&aStdq_10[8 * v5];
    while (*(_QWORD *)&aStdq_10[8 * *(char *)(v13 + v15 + 32)] != v16)
    {
      v17 = sub_1A93F90C0();
      swift_bridgeObjectRelease_n();
      if ((v17 & 1) != 0)
        goto LABEL_15;
      if (v14 == ++v15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v8 = v18;
        v5 = v19;
        v9 = v7 + 32;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_15:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v4 = v20;
    v11 = v21;
  }
  else
  {
    v11 = 2;
  }
LABEL_16:
  *v4 = v11;
}

void __swiftcall ServerPodcastEpisode.determineBestTranscriptMetadata(isSubscriptionActive:)(Swift::tuple_ttmlToken_String_optional_snippet_String_optional_source_PodcastsFoundation_TranscriptSource_optional *__return_ptr retstr, Swift::Bool isSubscriptionActive)
{
  Swift::tuple_ttmlToken_String_optional_snippet_String_optional_source_PodcastsFoundation_TranscriptSource_optional *v3;
  char v4;

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)((Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *)retstr, (Swift::Bool)&v4);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v3, (PodcastsFoundation::PriceType)isSubscriptionActive);
}

uint64_t sub_1A934A338(char *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 72);
  if (!v2)
    return 0;
  v3 = *a1;
  v14 = MEMORY[0x1E0DEE9D8];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1A93F8E5C();
    if (v4)
      goto LABEL_4;
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_4:
      if (v4 >= 1)
      {
        if ((v2 & 0xC000000000000001) != 0)
        {
          v5 = 0;
          while (1)
          {
            MEMORY[0x1AF4129DC](v5, v2);
            swift_bridgeObjectRetain();
            v6 = sub_1A93F8ED4();
            swift_bridgeObjectRelease();
            if (v6 <= 3)
            {
              if (*(_QWORD *)&aStdq_10[8 * v6] == *(_QWORD *)&aStdq_10[8 * v3])
              {
                swift_bridgeObjectRelease_n();
LABEL_13:
                sub_1A93F8D60();
                sub_1A93F8D90();
                sub_1A93F8D9C();
                sub_1A93F8D6C();
                goto LABEL_8;
              }
              v7 = sub_1A93F90C0();
              swift_bridgeObjectRelease_n();
              if ((v7 & 1) != 0)
                goto LABEL_13;
            }
            swift_unknownObjectRelease();
LABEL_8:
            if (v4 == ++v5)
              goto LABEL_23;
          }
        }
        v8 = v2 + 32;
        while (1)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          v9 = sub_1A93F8ED4();
          swift_bridgeObjectRelease();
          if (v9 <= 3)
          {
            if (*(_QWORD *)&aStdq_10[8 * v9] == *(_QWORD *)&aStdq_10[8 * v3])
            {
              swift_bridgeObjectRelease_n();
LABEL_21:
              sub_1A93F8D60();
              sub_1A93F8D90();
              sub_1A93F8D9C();
              sub_1A93F8D6C();
              goto LABEL_16;
            }
            v10 = sub_1A93F90C0();
            swift_bridgeObjectRelease_n();
            if ((v10 & 1) != 0)
              goto LABEL_21;
          }
          swift_release();
LABEL_16:
          v8 += 8;
          if (!--v4)
            goto LABEL_23;
        }
      }
      __break(1u);
      goto LABEL_35;
    }
  }
LABEL_23:
  result = swift_bridgeObjectRelease();
  v2 = v14;
  if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
  {
    if (*(_QWORD *)(v14 + 16))
      goto LABEL_26;
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  v13 = sub_1A93F8E5C();
  result = swift_release();
  if (!v13)
  {
LABEL_31:
    swift_release();
    return 0;
  }
LABEL_26:
  if ((v14 & 0xC000000000000001) != 0)
  {
LABEL_35:
    v12 = MEMORY[0x1AF4129DC](0, v2);
    goto LABEL_29;
  }
  if (*(_QWORD *)(v14 + 16))
  {
    v12 = *(_QWORD *)(v14 + 32);
    swift_retain();
LABEL_29:
    swift_release();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t ServerPodcastEpisode.alternatePaidURL()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;

  v5 = 2;
  v2 = sub_1A934A338(&v5);
  if (v2)
  {
    if (*(_QWORD *)(v2 + 56))
    {
      swift_bridgeObjectRetain();
      sub_1A93F7248();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_release();
  }
  v4 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
}

void sub_1A934A6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  id v8;
  id v9;
  _QWORD *v10;
  void *v11;
  id v12;
  _QWORD v13[6];

  v7 = *v3;
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v9 = objc_msgSend(v8, sel_privateQueueContext);

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a1;
  v10[3] = v9;
  v10[4] = a2;
  v10[5] = a3;
  v10[6] = v7;
  v13[4] = sub_1A934C628;
  v13[5] = v10;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1A908A91C;
  v13[3] = &block_descriptor_25_5;
  v11 = _Block_copy(v13);
  v12 = v9;
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlock_, v11);
  _Block_release(v11);

}

void sub_1A934A814(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  _BYTE *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48[2];

  sub_1A93F8040();
  v5 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v6 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  v8 = objc_msgSend((id)objc_opt_self(), sel_predicateForEpisodeStoreTrackId_, a1);
  objc_msgSend(v7, sel_setPredicate_, v8);

  if (qword_1ED2A8890 != -1)
    swift_once();
  v9 = sub_1A93F7698();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A8878);
  v10 = sub_1A93F7674();
  v11 = sub_1A93F8790();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v48[0] = v13;
    *(_DWORD *)v12 = 136315651;
    sub_1A906436C(0xD000000000000038, 0x80000001A944DCB0, v48);
    sub_1A93F8AA8();
    *(_WORD *)(v12 + 12) = 2160;
    sub_1A93F8AA8();
    *(_WORD *)(v12 + 22) = 2081;
    v14 = sub_1A93F9060();
    sub_1A906436C(v14, v15, v48);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v10, v11, "%s Fetching episode for adamId: %{private,mask.hash}s.", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v13, -1, -1);
    MEMORY[0x1AF41411C](v12, -1, -1);
  }

  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v16 = sub_1A93F89DC();
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v37 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v37)
    {
      swift_bridgeObjectRetain();
      v38 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
      if (v38 < 2)
        goto LABEL_11;
      goto LABEL_8;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    v39 = sub_1A93F7674();
    v40 = sub_1A93F879C();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v48[0] = v42;
      *(_DWORD *)v41 = 136315651;
      sub_1A906436C(0xD000000000000038, 0x80000001A944DCB0, v48);
      sub_1A93F8AA8();
      *(_WORD *)(v41 + 12) = 2160;
      sub_1A93F8AA8();
      *(_WORD *)(v41 + 22) = 2081;
      v43 = sub_1A93F9060();
      sub_1A906436C(v43, v44, v48);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v39, v40, "%s No episode found for adamId: %{private,mask.hash}s.", (uint8_t *)v41, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v42, -1, -1);
      MEMORY[0x1AF41411C](v41, -1, -1);
    }

    sub_1A934C638();
    v45 = (void *)swift_allocError();
    *v46 = 0;
    a3(v45, 1);

    goto LABEL_26;
  }
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v17)
    goto LABEL_23;
  if (v17 < 2)
    goto LABEL_11;
LABEL_8:
  swift_bridgeObjectRetain_n();
  v18 = sub_1A93F7674();
  v19 = sub_1A93F879C();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v47 = swift_slowAlloc();
    v48[0] = v47;
    *(_DWORD *)v20 = 136316163;
    sub_1A906436C(0xD000000000000038, 0x80000001A944DCB0, v48);
    sub_1A93F8AA8();
    *(_WORD *)(v20 + 12) = 2160;
    sub_1A93F8AA8();
    *(_WORD *)(v20 + 22) = 2081;
    v21 = sub_1A93F9060();
    sub_1A906436C(v21, v22, v48);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 32) = 2160;
    sub_1A93F8AA8();
    *(_WORD *)(v20 + 42) = 2081;
    v23 = sub_1A93F9060();
    sub_1A906436C(v23, v24, v48);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v18, v19, "%s More than one episode (%{private,mask.hash}s) found for adamId: %{private,mask.hash}s.", (uint8_t *)v20, 0x34u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v47, -1, -1);
    MEMORY[0x1AF41411C](v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
LABEL_11:
  if ((v16 & 0xC000000000000001) != 0)
  {
    v25 = (id)MEMORY[0x1AF4129DC](0, v16);
    goto LABEL_14;
  }
  if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v25 = *(id *)(v16 + 32);
LABEL_14:
    v26 = v25;
    swift_bridgeObjectRelease();
    v27 = sub_1A92770A8(v26);
    if (v27)
    {
      v28 = v27;
      a3(v27, 0);

    }
    else
    {

      sub_1A934C638();
      v29 = (void *)swift_allocError();
      *v30 = 1;
      a3(v29, 1);

    }
    v31 = sub_1A93F7674();
    v32 = sub_1A93F8790();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v48[0] = v34;
      *(_DWORD *)v33 = 136315651;
      sub_1A906436C(0xD000000000000038, 0x80000001A944DCB0, v48);
      sub_1A93F8AA8();
      *(_WORD *)(v33 + 12) = 2160;
      sub_1A93F8AA8();
      *(_WORD *)(v33 + 22) = 2081;
      v35 = sub_1A93F9060();
      sub_1A906436C(v35, v36, v48);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v31, v32, "%s Finished fetching episode for adamId: %{private,mask.hash}s.", (uint8_t *)v33, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v34, -1, -1);
      MEMORY[0x1AF41411C](v33, -1, -1);
    }

LABEL_26:
    return;
  }
  __break(1u);
}

uint64_t sub_1A934B3F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  id v6;
  id v7;
  _QWORD *v8;
  _QWORD *v9;
  void *v10;
  id v11;
  _QWORD v13[6];

  v5 = *v2;
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v7 = objc_msgSend(v6, sel_privateQueueContext);

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v5;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v7;
  v9[3] = sub_1A934C274;
  v9[4] = v8;
  v9[5] = v5;
  v13[4] = sub_1A90D7B78;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1A908A91C;
  v13[3] = &block_descriptor_65;
  v10 = _Block_copy(v13);
  swift_retain();
  v11 = v7;
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_performBlock_, v10);
  _Block_release(v10);

  return swift_release();
}

void sub_1A934B540(unint64_t a1, char a2, void (*a3)(unint64_t, uint64_t), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(unint64_t, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  id *v57;
  uint64_t v58;
  uint64_t v59;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F726C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v55 = (char *)&v50 - v16;
  if ((a2 & 1) != 0)
  {
    v34 = (id)a1;
    a3(a1, 1);
    sub_1A909CFC0((id)a1, 1);
    return;
  }
  v17 = a1 >> 62;
  v18 = a1;
  v57 = (id *)a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v18 = (unint64_t)v57;
    v19 = sub_1A93F8E5C();
  }
  else
  {
    v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v53 = a3;
  v54 = v14;
  v51 = v17;
  v52 = a4;
  if (v19)
  {
    v56 = v19;
    if (v19 < 1)
    {
      __break(1u);
      goto LABEL_42;
    }
    v20 = 0;
    v21 = v18 & 0xC000000000000001;
    v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v23 = v56;
    do
    {
      if (v21)
        v24 = (id)MEMORY[0x1AF4129DC](v20, v18);
      else
        v24 = *(id *)(v18 + 8 * v20 + 32);
      v25 = v24;
      v26 = objc_msgSend(v24, sel_assetURL);
      if (v26)
      {
        v27 = v26;
        v28 = sub_1A93F8040();
        v30 = v29;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v22 = sub_1A907ECFC(0, v22[2] + 1, 1, v22);
        v32 = v22[2];
        v31 = v22[3];
        if (v32 >= v31 >> 1)
          v22 = sub_1A907ECFC((_QWORD *)(v31 > 1), v32 + 1, 1, v22);
        v22[2] = v32 + 1;
        v33 = &v22[2 * v32];
        v33[4] = v28;
        v33[5] = v30;
        v23 = v56;
        v18 = (unint64_t)v57;
      }
      else
      {

      }
      ++v20;
    }
    while (v23 != v20);
  }
  else
  {
    v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1A909CFC0((id)v18, 0);
  v35 = v22[2];
  if (v35)
  {
    swift_bridgeObjectRetain();
    v36 = v22 + 5;
    v17 = MEMORY[0x1E0DEE9D8];
    v37 = v54;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A93F7248();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      {
        sub_1A914149C((uint64_t)v10);
      }
      else
      {
        v38 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v39 = v55;
        v38(v55, v10, v11);
        v38(v37, v39, v11);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v17 = sub_1A91198C0(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
        v41 = *(_QWORD *)(v17 + 16);
        v40 = *(_QWORD *)(v17 + 24);
        if (v41 >= v40 >> 1)
          v17 = sub_1A91198C0(v40 > 1, v41 + 1, 1, v17);
        *(_QWORD *)(v17 + 16) = v41 + 1;
        v42 = v17
            + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
            + *(_QWORD *)(v12 + 72) * v41;
        v37 = v54;
        v38((char *)v42, v54, v11);
      }
      v36 += 2;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease_n();
    v18 = (unint64_t)v57;
    if (!v51)
      goto LABEL_31;
  }
  else
  {
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x1E0DEE9D8];
    if (!v51)
    {
LABEL_31:
      v43 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_34;
    }
  }
  v44 = (void *)v18;
  swift_bridgeObjectRetain();
  v43 = sub_1A93F8E5C();
  sub_1A909CFC0(v44, 0);
LABEL_34:
  if (v43 != *(_QWORD *)(v17 + 16))
  {
    if (qword_1ED2A8890 == -1)
    {
LABEL_36:
      v45 = sub_1A93F7698();
      __swift_project_value_buffer(v45, (uint64_t)qword_1ED2A8878);
      v46 = sub_1A93F7674();
      v47 = sub_1A93F879C();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        v49 = swift_slowAlloc();
        v59 = v49;
        *(_DWORD *)v48 = 136315138;
        v58 = sub_1A906436C(0xD000000000000038, 0x80000001A944DCB0, &v59);
        sub_1A93F8AA8();
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v49, -1, -1);
        MEMORY[0x1AF41411C](v48, -1, -1);
      }

      goto LABEL_39;
    }
LABEL_42:
    swift_once();
    goto LABEL_36;
  }
LABEL_39:
  v53(v17, 0);
  swift_bridgeObjectRelease();
}

void sub_1A934BAC0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t aBlock[6];

  v5 = *v2;
  if (qword_1ED2A8890 != -1)
    swift_once();
  v6 = sub_1A93F7698();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A8878);
  v7 = sub_1A93F7674();
  v8 = sub_1A93F87B4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    aBlock[0] = v10;
    *(_DWORD *)v9 = 136315138;
    sub_1A906436C(0xD000000000000038, 0x80000001A944DCB0, aBlock);
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v7, v8, "%s Fetching migration data for legacy FairPlay keys.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v10, -1, -1);
    MEMORY[0x1AF41411C](v9, -1, -1);
  }

  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v12 = objc_msgSend(v11, sel_privateQueueContext);

  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a1;
  v13[4] = a2;
  v13[5] = v5;
  aBlock[4] = (uint64_t)sub_1A934C298;
  aBlock[5] = (uint64_t)v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A908A91C;
  aBlock[3] = (uint64_t)&block_descriptor_9_6;
  v14 = _Block_copy(aBlock);
  v15 = v12;
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_performBlock_, v14);
  _Block_release(v14);

}

void sub_1A934BD20(void *a1, void (*a2)(uint64_t, _QWORD))
{
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  id v8;
  uint64_t v9;

  sub_1A93F8040();
  v4 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v5 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  sub_1A9072534(0, &qword_1ED2AC7B8);
  v7 = sub_1A93F89DC();
  v8 = a1;
  v9 = sub_1A934C2A4(v7, v8);
  swift_bridgeObjectRelease();

  a2(v9, 0);
  swift_bridgeObjectRelease();

}

uint64_t sub_1A934C03C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1A9405950;
  v5 = sub_1A93F8040();
  v7 = v6;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1A90A92DC();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, a1);
  *(_QWORD *)(v4 + 96) = sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
  *(_QWORD *)(v4 + 104) = sub_1A922E830();
  *(_QWORD *)(v4 + 72) = v8;
  v9 = (void *)sub_1A93F8754();
  v10 = objc_msgSend(a2, sel_objectInEntity_predicate_, CFSTR("MTEpisode"), v9);
  if (!v10)
    goto LABEL_7;
  v11 = v10;
  objc_opt_self();
  v12 = (void *)swift_dynamicCastObjCClass();
  if (!v12)
  {

    return 0;
  }
  v13 = objc_msgSend(v12, sel_assetURL);
  if (!v13)
  {

LABEL_7:
    return 0;
  }
  v14 = v13;
  v15 = sub_1A93F8040();

  return v15;
}

void sub_1A934C1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A934A6F4(a1, a2, a3);
}

void sub_1A934C210(uint64_t a1, uint64_t a2)
{
  sub_1A934BAC0(a1, a2);
}

uint64_t sub_1A934C230(uint64_t a1, uint64_t a2)
{
  return sub_1A934B3F0(a1, a2);
}

uint64_t sub_1A934C250()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A934C274(unint64_t a1, char a2)
{
  uint64_t v2;

  sub_1A934B540(a1, a2 & 1, *(void (**)(unint64_t, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24));
}

BOOL sub_1A934C288(uint64_t a1)
{
  return (a1 & 0xC000000000000001) == 0;
}

void sub_1A934C298()
{
  uint64_t v0;

  sub_1A934BD20(*(void **)(v0 + 16), *(void (**)(uint64_t, _QWORD))(v0 + 24));
}

uint64_t sub_1A934C2A4(unint64_t a1, void *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char **v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD v39[2];
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  uint64_t v50;

  v3 = v2;
  v45 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v5);
  v49 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FairPlayMigrationData(0);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (_QWORD *)((char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62)
    goto LABEL_21;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    if (!v10)
      return v11;
    v50 = MEMORY[0x1E0DEE9D8];
    result = sub_1A929E89C(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0)
      break;
    v39[1] = v3;
    v40 = a1;
    v13 = 0;
    v41 = a1 & 0xC000000000000001;
    v42 = v10;
    v11 = v50;
    v14 = &selRef_setHour_;
    while (v10 != v13)
    {
      if (v41)
        v15 = (id)MEMORY[0x1AF4129DC](v13, a1);
      else
        v15 = *(id *)(a1 + 8 * v13 + 32);
      v16 = v15;
      v17 = objc_msgSend(v15, v14[260]);
      v18 = objc_msgSend(v16, sel_data);
      v48 = v17;
      if (v18)
      {
        v19 = v18;
        v20 = sub_1A93F72B4();
        v46 = v21;
        v47 = v20;

      }
      else
      {
        v46 = 0xF000000000000000;
        v47 = 0;
      }
      v22 = objc_msgSend(v16, v14[260]);
      v23 = sub_1A934C03C((uint64_t)v22, v45);
      v25 = v24;
      objc_msgSend(v16, sel_expirationDate);
      v26 = v49;
      sub_1A93F72CC();
      v27 = sub_1A93F738C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
      v28 = objc_msgSend(v16, sel_keyUri);
      if (v28)
      {
        v29 = v28;
        v30 = sub_1A93F8040();
        v32 = v31;

      }
      else
      {
        v30 = 0;
        v32 = 0;
      }
      a1 = v40;
      v33 = (uint64_t)v49;
      v34 = v47;
      *v9 = v48;
      v9[1] = v34;
      v9[2] = v46;
      v9[3] = v23;
      v9[4] = v25;
      v35 = v44;
      sub_1A90A13C8(v33, (uint64_t)v9 + *(int *)(v44 + 28));

      v36 = (_QWORD *)((char *)v9 + *(int *)(v35 + 32));
      *v36 = v30;
      v36[1] = v32;
      v50 = v11;
      v38 = *(_QWORD *)(v11 + 16);
      v37 = *(_QWORD *)(v11 + 24);
      v3 = v38 + 1;
      if (v38 >= v37 >> 1)
      {
        sub_1A929E89C(v37 > 1, v38 + 1, 1);
        v11 = v50;
      }
      ++v13;
      *(_QWORD *)(v11 + 16) = v3;
      sub_1A934C5B4((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v38);
      v10 = v42;
      v14 = &selRef_setHour_;
      if (v42 == v13)
        return v11;
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    v10 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A934C5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FairPlayMigrationData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A934C5FC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A934C628()
{
  uint64_t v0;

  sub_1A934A814(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(void *, uint64_t))(v0 + 32));
}

unint64_t sub_1A934C638()
{
  unint64_t result;

  result = qword_1EEABE520;
  if (!qword_1EEABE520)
  {
    result = MEMORY[0x1AF414014](&unk_1A941F244, &type metadata for CoreDataFairPlayEpisodeDataFetcher.Error);
    atomic_store(result, (unint64_t *)&qword_1EEABE520);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CoreDataFairPlayEpisodeDataFetcher.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A934C6C8 + 4 * byte_1A941F175[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A934C6FC + 4 * asc_1A941F170[v4]))();
}

uint64_t sub_1A934C6FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A934C704(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A934C70CLL);
  return result;
}

uint64_t sub_1A934C718(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A934C720);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A934C724(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A934C72C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CoreDataFairPlayEpisodeDataFetcher.Error()
{
  return &type metadata for CoreDataFairPlayEpisodeDataFetcher.Error;
}

unint64_t sub_1A934C74C()
{
  unint64_t result;

  result = qword_1EEABE528;
  if (!qword_1EEABE528)
  {
    result = MEMORY[0x1AF414014](&unk_1A941F21C, &type metadata for CoreDataFairPlayEpisodeDataFetcher.Error);
    atomic_store(result, (unint64_t *)&qword_1EEABE528);
  }
  return result;
}

uint64_t static MTCategory.predicateForCategoriesFromFollowedShows()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1A915676C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A9405950;
  v1 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  v2 = sub_1A90A92DC();
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v0 + 32) = 0x7374736163646F70;
  *(_QWORD *)(v0 + 40) = 0xE800000000000000;
  v3 = sub_1A93F8040();
  *(_QWORD *)(v0 + 96) = v1;
  *(_QWORD *)(v0 + 104) = v2;
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v4;
  return sub_1A93F8754();
}

uint64_t static MTCategory.predicateForCategory(withAdamID:)(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1A915676C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A9405950;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v3 = sub_1A90A92DC();
  *(_QWORD *)(v2 + 32) = 0x44496D616461;
  *(_QWORD *)(v2 + 40) = 0xE600000000000000;
  v4 = MEMORY[0x1E0DEE1F0];
  *(_QWORD *)(v2 + 96) = MEMORY[0x1E0DEE190];
  *(_QWORD *)(v2 + 104) = v4;
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 72) = a1;
  return sub_1A93F8754();
}

uint64_t _s18PodcastsFoundation10MTCategoryC31predicateForFavoritedCategoriesSo11NSPredicateCyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  sub_1A915676C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A94055A0;
  v1 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  v2 = sub_1A90A92DC();
  *(_QWORD *)(v0 + 32) = 0x7473657265746E69;
  *(_QWORD *)(v0 + 40) = 0xE800000000000000;
  *(_QWORD *)(v0 + 96) = v1;
  *(_QWORD *)(v0 + 104) = v2;
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v0 + 72) = 0x7473657265746E69;
  *(_QWORD *)(v0 + 80) = 0xE800000000000000;
  *(_QWORD *)(v0 + 136) = v1;
  *(_QWORD *)(v0 + 144) = v2;
  strcpy((char *)(v0 + 112), "interestValue");
  *(_WORD *)(v0 + 126) = -4864;
  return sub_1A93F8754();
}

id _s18PodcastsFoundation10MTCategoryC022predicateForCategorieseF9InLibrarySo11NSPredicateCyFZ_0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v0 = (void *)_s18PodcastsFoundation10MTCategoryC31predicateForFavoritedCategoriesSo11NSPredicateCyFZ_0();
  sub_1A915676C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1A9405950;
  v2 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  v3 = sub_1A90A92DC();
  *(_QWORD *)(v1 + 64) = v3;
  *(_QWORD *)(v1 + 32) = 0x7374736163646F70;
  *(_QWORD *)(v1 + 40) = 0xE800000000000000;
  v4 = sub_1A93F8040();
  *(_QWORD *)(v1 + 96) = v2;
  *(_QWORD *)(v1 + 104) = v3;
  *(_QWORD *)(v1 + 72) = v4;
  *(_QWORD *)(v1 + 80) = v5;
  v6 = (void *)sub_1A93F8754();
  v7 = objc_msgSend(v0, "OR:", v6);

  return v7;
}

uint64_t _s18PodcastsFoundation10MTCategoryC47predicateForCategoriesWithRelationshipToPodcast10withAdamIDSo11NSPredicateCs5Int64V_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1A915676C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A94055A0;
  v3 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v4 = sub_1A90A92DC();
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = 0x7374736163646F70;
  *(_QWORD *)(v2 + 40) = 0xE800000000000000;
  v5 = sub_1A93F8040();
  *(_QWORD *)(v2 + 96) = v3;
  *(_QWORD *)(v2 + 104) = v4;
  v6 = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(v2 + 72) = v5;
  *(_QWORD *)(v2 + 80) = v7;
  v8 = MEMORY[0x1E0DEDCD8];
  *(_QWORD *)(v2 + 136) = v6;
  *(_QWORD *)(v2 + 144) = v8;
  *(_QWORD *)(v2 + 112) = a1;
  return sub_1A93F8754();
}

uint64_t PodcastStateMachine.__allocating_init(adamId:initialState:rules:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  type metadata accessor for PodcastStateMachine();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 88) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38E0]), sel_init);
  *(_QWORD *)(v6 + 16) = a1;
  *(_BYTE *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 40) = 0;
  sub_1A9094604(a2, v6 + 48);
  *(_QWORD *)(v6 + 96) = a3;
  return v6;
}

uint64_t PodcastStateMachine.__allocating_init(uuid:initialState:rules:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  type metadata accessor for PodcastStateMachine();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 88) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v8 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38E0]), sel_init);
  *(_QWORD *)(v8 + 16) = 0;
  *(_BYTE *)(v8 + 24) = 1;
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  sub_1A9094604(a3, v8 + 48);
  *(_QWORD *)(v8 + 96) = a4;
  return v8;
}

uint64_t PodcastState.dictionaryKey.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[16];
  uint64_t v5;

  sub_1A9094604(v0, (uint64_t)v4);
  v1 = 0x6E776F6E6B6E75;
  v2 = 0x6465646461;
  if (v5 == 1)
    v2 = 0x676E69646461;
  if (v5 != 2)
    v1 = v2;
  if (v5)
    return v1;
  else
    return 0x656C6261646461;
}

uint64_t PodcastState.isSubscribed.getter()
{
  uint64_t v0;
  _BYTE v2[16];
  unint64_t v3;

  sub_1A9094604(v0, (uint64_t)v2);
  return (v3 > 2) & v2[0];
}

uint64_t PodcastState.hash(into:)()
{
  uint64_t v0;
  _BYTE v2[8];
  unint64_t v3;

  sub_1A9094604(v0, (uint64_t)v2);
  if (v3 <= 2)
    return sub_1A93F92E8();
  sub_1A93F92E8();
  sub_1A93F92F4();
  sub_1A93F7FBC();
  sub_1A93F92F4();
  return sub_1A93F930C();
}

uint64_t PodcastState.hashValue.getter()
{
  uint64_t v0;
  _BYTE v2[8];
  unint64_t v3;

  sub_1A93F92DC();
  sub_1A9094604(v0, (uint64_t)v2);
  if (v3 > 2)
  {
    sub_1A93F92E8();
    sub_1A93F92F4();
    sub_1A93F7FBC();
    sub_1A93F92F4();
    sub_1A93F930C();
  }
  else
  {
    sub_1A93F92E8();
  }
  return sub_1A93F9324();
}

uint64_t sub_1A934CF4C()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_1A9094604(v0, (uint64_t)v2);
  return PodcastState.hashValue.getter();
}

uint64_t sub_1A934CF80()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_1A9094604(v0, (uint64_t)v2);
  return PodcastState.hash(into:)();
}

uint64_t sub_1A934CFBC()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1A93F92DC();
  sub_1A93F92E8();
  if (v1 > 2)
  {
    sub_1A93F92F4();
    sub_1A93F7FBC();
    sub_1A93F92F4();
    sub_1A93F930C();
  }
  return sub_1A93F9324();
}

BOOL sub_1A934D078(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];
  _BYTE v5[40];

  sub_1A9094604(a1, (uint64_t)v4);
  sub_1A9094604(a2, (uint64_t)v5);
  return _s18PodcastsFoundation12PodcastStateO2eeoiySbAC_ACtFZ_0((uint64_t)v4, (uint64_t)v5);
}

uint64_t PodcastStateMachine.adamId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t PodcastStateMachine.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1A934D0F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id result;

  swift_beginAccess();
  objc_msgSend(*(id *)(v1 + 104), sel_lock);
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v6 = *(_QWORD *)(v1 + 72);
  v7 = *(_QWORD *)(v1 + 80);
  v8 = *(void **)(v1 + 104);
  sub_1A9094654(v3, v4, v5);
  result = objc_msgSend(v8, sel_unlock);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return result;
}

uint64_t PodcastStateMachine.rules.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A934D1A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 104) = v2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_1A934D200()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_1A934D234(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 104) = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1A934D278())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t PodcastStateMachine.__allocating_init(adamId:uuid:initialState:rules:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6)
{
  char v11;
  uint64_t v12;

  v11 = a2 & 1;
  v12 = swift_allocObject();
  PodcastStateMachine.init(adamId:uuid:initialState:rules:)(a1, v11, a3, a4, a5, a6);
  return v12;
}

uint64_t PodcastStateMachine.init(adamId:uuid:initialState:rules:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t result;

  *(_QWORD *)(v6 + 88) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38E0]), sel_init);
  if ((a2 & 1) != 0 && !a4)
  {
    sub_1A9093D2C(a5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094668);
    result = sub_1A93F8E14();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v6 + 16) = a1;
    *(_BYTE *)(v6 + 24) = a2 & 1;
    *(_QWORD *)(v6 + 32) = a3;
    *(_QWORD *)(v6 + 40) = a4;
    sub_1A9094604((uint64_t)a5, v6 + 48);
    *(_QWORD *)(v6 + 96) = a6;
    return v6;
  }
  return result;
}

uint64_t sub_1A934D430(_QWORD *a1)
{
  uint64_t v1;
  unsigned __int8 v4;

  swift_beginAccess();
  objc_msgSend(*(id *)(v1 + 104), sel_lock);
  sub_1A9093E64(v1, a1, &v4);
  objc_msgSend(*(id *)(v1 + 104), sel_unlock);
  return v4;
}

id sub_1A934D4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _BYTE v12[24];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;

  swift_beginAccess();
  objc_msgSend(*(id *)(v3 + 104), sel_lock);
  swift_unknownObjectWeakInit();
  v14 = a2;
  v15 = a3;
  sub_1A9261218((uint64_t)v13, (uint64_t)v12);
  v6 = (_QWORD *)(v3 + 88);
  swift_beginAccess();
  v7 = *(_QWORD **)(v3 + 88);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v3 + 88) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_1A9119B3C(0, v7[2] + 1, 1, (unint64_t)v7);
    *v6 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_1A9119B3C((_QWORD *)(v9 > 1), v10 + 1, 1, (unint64_t)v7);
    *v6 = v7;
  }
  v7[2] = v10 + 1;
  sub_1A9261254((uint64_t)v12, (uint64_t)&v7[3 * v10 + 4]);
  swift_endAccess();
  sub_1A926128C((uint64_t)v13);
  return objc_msgSend(*(id *)(v3 + 104), sel_unlock);
}

id sub_1A934D5EC(uint64_t a1)
{
  uint64_t v1;
  id *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id *v17;
  _BYTE v18[24];
  _BYTE v19[24];
  uint64_t v20;

  v3 = (id *)(v1 + 104);
  swift_beginAccess();
  objc_msgSend(*(id *)(v1 + 104), sel_lock);
  v4 = (_QWORD *)(v1 + 88);
  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 88);
  v6 = MEMORY[0x1E0DEE9D8];
  v20 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(v5 + 16);
  result = (id)swift_bridgeObjectRetain();
  if (!v7)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    *v4 = v6;
    swift_bridgeObjectRelease();
    return objc_msgSend(*v3, sel_unlock);
  }
  v17 = (id *)(v1 + 104);
  v9 = 0;
  v10 = v5 + 32;
  v11 = MEMORY[0x1E0DEE9D8];
  while (v9 < *(_QWORD *)(v5 + 16))
  {
    sub_1A9261218(v10, (uint64_t)v19);
    v12 = MEMORY[0x1AF41420C](v19);
    swift_unknownObjectRelease();
    sub_1A9261218((uint64_t)v19, (uint64_t)v18);
    if (v12)
    {
      v13 = MEMORY[0x1AF41420C](v18);
      if (!v13)
      {
        sub_1A926128C((uint64_t)v18);
LABEL_12:
        sub_1A9261254((uint64_t)v19, (uint64_t)v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1A929E8C8(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v20;
        v16 = *(_QWORD *)(v20 + 16);
        v15 = *(_QWORD *)(v20 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_1A929E8C8(v15 > 1, v16 + 1, 1);
          v11 = v20;
        }
        *(_QWORD *)(v11 + 16) = v16 + 1;
        result = (id)sub_1A9261254((uint64_t)v18, v11 + 24 * v16 + 32);
        goto LABEL_5;
      }
      v14 = v13;
      swift_unknownObjectRelease();
      sub_1A926128C((uint64_t)v18);
      if (v14 != a1)
        goto LABEL_12;
    }
    else
    {
      sub_1A926128C((uint64_t)v18);
    }
    result = (id)sub_1A926128C((uint64_t)v19);
LABEL_5:
    ++v9;
    v10 += 24;
    if (v7 == v9)
    {
      v6 = v20;
      v3 = v17;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t PodcastStateMachine.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A9094668(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t PodcastStateMachine.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A9094668(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A934D86C()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_1A934D8AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for PodcastStateMachine();
  result = sub_1A93F7950();
  *a1 = result;
  return result;
}

BOOL _s18PodcastsFoundation12PodcastStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BOOL8 result;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  _BYTE v12[8];
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _BYTE v17[8];
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;

  sub_1A9094604(a1, (uint64_t)v17);
  v3 = v19;
  switch(v19)
  {
    case 2:
      sub_1A9094604(a2, (uint64_t)v12);
      return v14 == 2;
    case 1:
      sub_1A9094604(a2, (uint64_t)v12);
      return v14 == 1;
    case 0:
      sub_1A9094604(a2, (uint64_t)v12);
      return !v14;
  }
  v5 = v17[0];
  v6 = v18;
  v7 = v20;
  v8 = v21;
  sub_1A9094604(a2, (uint64_t)v12);
  if (v14 < 3 || v5 != v12[0])
    return 0;
  v9 = v15;
  v10 = v16;
  if (v6 == v13 && v3 == v14)
  {
    if (v7 != v15)
      return 0;
    return v8 == v10;
  }
  v11 = sub_1A93F90C0();
  result = 0;
  if ((v11 & 1) != 0 && ((v7 ^ v9) & 1) == 0)
    return v8 == v10;
  return result;
}

unint64_t sub_1A934DA20()
{
  unint64_t result;

  result = qword_1EEABE530;
  if (!qword_1EEABE530)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastState, &type metadata for PodcastState);
    atomic_store(result, (unint64_t *)&qword_1EEABE530);
  }
  return result;
}

uint64_t sub_1A934DA64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 104);
  return swift_unknownObjectRetain();
}

uint64_t initializeWithCopy for PodcastState(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 < 0xFFFFFFFF)
  {
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v3;
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for PodcastState(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 2);
  if (*(_QWORD *)(a1 + 16) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  return a1;
}

uint64_t assignWithTake for PodcastState(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;

  if (*(_QWORD *)(a1 + 16) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_6;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
LABEL_6:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PodcastState(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PodcastState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2 + 2;
  }
  return result;
}

double sub_1A934DD1C(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 16) = (a2 - 1);
  }
  return result;
}

uint64_t method lookup function for PodcastStateMachine()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PodcastStateMachine.currentState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of PodcastStateMachine.lock.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of PodcastStateMachine.lock.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of PodcastStateMachine.lock.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of PodcastStateMachine.__allocating_init(adamId:uuid:initialState:rules:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, _QWORD, uint64_t, uint64_t, _OWORD *);
  __int128 v8;
  _OWORD v10[2];
  uint64_t v11;

  v6 = *(_QWORD *)(a5 + 32);
  v7 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, _OWORD *))(v5 + 216);
  v8 = *(_OWORD *)(a5 + 16);
  v10[0] = *(_OWORD *)a5;
  v10[1] = v8;
  v11 = v6;
  return v7(a1, a2 & 1, a3, a4, v10);
}

uint64_t dispatch thunk of PodcastStateMachine.transition(to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v6[2];
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(uint64_t (**)(_OWORD *))(*(_QWORD *)v1 + 224);
  v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  v7 = v2;
  return v3(v6) & 1;
}

uint64_t dispatch thunk of PodcastStateMachine.addStateTransitionObserver(_:action:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of PodcastStateMachine.removeStateTransitionActions(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t sub_1A934DE10(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE538);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static MTEpisode.sortDescriptorsForUngroupedStation(orderedBy:)(int a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  result = MEMORY[0x1E0DEE9D8];
  switch(a1)
  {
    case 0:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
      v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1A9405960;
      v24 = sub_1A93F8040();
      v27 = v4;
      sub_1A93F810C();
      sub_1A93F8040();
      sub_1A93F810C();
      swift_bridgeObjectRelease();
      v5 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
      v6 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      v7 = objc_msgSend(v5, sel_initWithKey_ascending_, v6, 0, v24, v27);

      *(_QWORD *)(v3 + 32) = v7;
      goto LABEL_9;
    case 1:
      v8 = objc_msgSend((id)objc_opt_self(), sel_sortDescriptorsForPubDateAscending_, 0);
      goto LABEL_5;
    case 3:
      v8 = objc_msgSend((id)objc_opt_self(), sel_sortDescriptorsForPubDateAscending_, 1);
LABEL_5:
      v9 = v8;
      sub_1A90AF8C4();
      v10 = sub_1A93F8310();

      return v10;
    case 4:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
      v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1A940EB90;
      v25 = sub_1A93F8040();
      v28 = v11;
      sub_1A93F810C();
      sub_1A93F8040();
      sub_1A93F810C();
      swift_bridgeObjectRelease();
      v12 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
      v13 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      v14 = objc_msgSend(v12, sel_initWithKey_ascending_, v13, 1, v25, v28);

      *(_QWORD *)(v3 + 32) = v14;
      sub_1A93F8040();
      v15 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
      v16 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      v17 = objc_msgSend(v15, sel_initWithKey_ascending_, v16, 1);
      goto LABEL_8;
    case 5:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
      v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1A940EB90;
      v26 = sub_1A93F8040();
      v29 = v18;
      sub_1A93F810C();
      sub_1A93F8040();
      sub_1A93F810C();
      swift_bridgeObjectRelease();
      v19 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
      v20 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      v21 = objc_msgSend(v19, sel_initWithKey_ascending_, v20, 0, v26, v29);

      *(_QWORD *)(v3 + 32) = v21;
      sub_1A93F8040();
      v22 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
      v16 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      v17 = objc_msgSend(v22, sel_initWithKey_ascending_, v16, 0);
LABEL_8:
      v23 = v17;

      *(_QWORD *)(v3 + 40) = v23;
LABEL_9:
      sub_1A93F8328();
      result = v3;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A934E23C(_BYTE *a1, _BYTE *a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v2 = *a1;
  v3 = 0xE500000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x6F65646976;
  if (v2 != 1)
  {
    v5 = 0x6C616E7265747865;
    v4 = 0xE800000000000000;
  }
  if (*a1)
    v6 = v5;
  else
    v6 = 0x6F69647561;
  if (v2)
    v7 = v4;
  else
    v7 = 0xE500000000000000;
  v8 = 0x6F65646976;
  if (*a2 != 1)
  {
    v8 = 0x6C616E7265747865;
    v3 = 0xE800000000000000;
  }
  if (*a2)
    v9 = v8;
  else
    v9 = 0x6F69647561;
  if (*a2)
    v10 = v3;
  else
    v10 = 0xE500000000000000;
  if (v6 == v9 && v7 == v10)
    v11 = 1;
  else
    v11 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1A934E330()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A934E3C8()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A934E43C()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A934E4D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s18PodcastsFoundation16EpisodeMediaTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1A934E4FC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x6F65646976;
  if (v2 != 1)
  {
    v5 = 0x6C616E7265747865;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6F69647561;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t EpisodeMediaType.init(from:)(_QWORD *a1)
{
  return sub_1A934E6DC(a1);
}

uint64_t sub_1A934E568@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1A934E6DC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t EpisodeMediaType.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F912C();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t sub_1A934E67C(_QWORD *a1)
{
  return EpisodeMediaType.encode(to:)(a1);
}

uint64_t _s18PodcastsFoundation16EpisodeMediaTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1A934E6DC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  _QWORD *v14;
  _QWORD *v15;
  char *v16;
  _WORD v18[8];
  _QWORD v19[4];

  v3 = sub_1A93F8CF4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18[-4] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v19, v19[3]);
    v8 = sub_1A93F90CC();
    v11 = v8;
    v12 = v9;
    v13 = v8 == 0x6F69647561 && v9 == 0xE500000000000000;
    if (v13 || (sub_1A93F90C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v7 = 0;
LABEL_11:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      return v7;
    }
    if (v11 == 0x6F65646976 && v12 == 0xE500000000000000 || (sub_1A93F90C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v7 = 1;
      goto LABEL_11;
    }
    if (v11 == 0x6C616E7265747865 && v12 == 0xE800000000000000
      || (sub_1A93F90C0() & 1) != 0
      || v11 == 0x746E656D75636F64 && v12 == 0xE800000000000000
      || (sub_1A93F90C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v7 = 2;
      goto LABEL_11;
    }
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1A93F9120();
    strcpy((char *)v18, "Unknown case ");
    v18[7] = -4864;
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    sub_1A93F8CE8();
    v7 = sub_1A93F8D00();
    swift_allocError();
    v15 = v14;
    v16 = (char *)v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7C28) + 48);
    *v15 = &type metadata for EpisodeMediaType;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v16, v6, v3);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v15, *MEMORY[0x1E0DEC460], v7);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v7;
}

unint64_t sub_1A934EA58()
{
  unint64_t result;

  result = qword_1EEABE548;
  if (!qword_1EEABE548)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeMediaType, &type metadata for EpisodeMediaType);
    atomic_store(result, (unint64_t *)&qword_1EEABE548);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EpisodeMediaType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A934EAE8 + 4 * byte_1A941F405[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A934EB1C + 4 * asc_1A941F400[v4]))();
}

uint64_t sub_1A934EB1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A934EB24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A934EB2CLL);
  return result;
}

uint64_t sub_1A934EB38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A934EB40);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A934EB44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A934EB4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeMediaType()
{
  return &type metadata for EpisodeMediaType;
}

BOOL sub_1A934EB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t updated;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  _BYTE v19[24];
  uint64_t v20;

  updated = type metadata accessor for FeedUpdateRequest();
  v7 = *(_QWORD *)(updated - 8);
  MEMORY[0x1E0C80A78](updated);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)(v10 + 16) && (v11 = sub_1A906C424(a2), (v12 & 1) != 0))
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
  }
  sub_1A90913C0(a3, (uint64_t)v9);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1A91182FC(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
  v15 = *(_QWORD *)(v13 + 16);
  v14 = *(_QWORD *)(v13 + 24);
  if (v15 >= v14 >> 1)
    v13 = sub_1A91182FC(v14 > 1, v15 + 1, 1, v13);
  *(_QWORD *)(v13 + 16) = v15 + 1;
  sub_1A9171820((uint64_t)v9, v13+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v20 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = 0x8000000000000000;
  sub_1A930E3C4(v13, a2, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 40) = v20;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1A90906A0(sub_1A915861C, (uint64_t)&unk_1E54F4EF8, (uint64_t)sub_1A9352128, (uint64_t)&block_descriptor_72_0);
  v17 = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRelease();
  return v17 == 1;
}

BOOL sub_1A934ED64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t updated;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  updated = type metadata accessor for FeedUpdateRequest();
  v9 = *(_QWORD *)(updated - 8);
  MEMORY[0x1E0C80A78](updated);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = sub_1A9094640(a2, a3);
    if ((v14 & 1) != 0)
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRetain();
    }
    else
    {
      v15 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9D8];
  }
  sub_1A90913C0(a4, (uint64_t)v11);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v15 = sub_1A91182FC(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
  v17 = *(_QWORD *)(v15 + 16);
  v16 = *(_QWORD *)(v15 + 24);
  if (v17 >= v16 >> 1)
    v15 = sub_1A91182FC(v16 > 1, v17 + 1, 1, v15);
  *(_QWORD *)(v15 + 16) = v17 + 1;
  sub_1A9171820((uint64_t)v11, v15+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v17);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v22 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = 0x8000000000000000;
  sub_1A930FAC8(v15, a2, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 40) = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1A90906A0(sub_1A9090A38, (uint64_t)&unk_1E54F4E08, (uint64_t)sub_1A908AED8, (uint64_t)&block_descriptor_52);
  v19 = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRelease();
  return v19 == 1;
}

uint64_t sub_1A934EF9C(uint64_t a1, void *a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD aBlock[7];
  uint64_t v26;

  v7 = sub_1A93F7D58();
  v22 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F7DB8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1;
  v14 = *(os_unfair_lock_s **)(v3 + 32);
  v23 = v3;
  v24 = &v26;
  v15 = v14 + 4;
  os_unfair_lock_lock(v14 + 4);
  sub_1A91713CC((_QWORD *(*)(uint64_t *__return_ptr))sub_1A93520DC, aBlock);
  os_unfair_lock_unlock(v15);
  v16 = aBlock[0];
  sub_1A9066C6C();
  v17 = (void *)sub_1A93F8868();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v16;
  *(_QWORD *)(v18 + 24) = a2;
  LOBYTE(v15) = a3 & 1;
  *(_BYTE *)(v18 + 32) = a3 & 1;
  aBlock[4] = sub_1A93522A0;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_66_2;
  v19 = _Block_copy(aBlock);
  sub_1A90903E4(a2, (char)v15);
  swift_release();
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v13, v9, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1A934F1F8(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = *(_QWORD *)(result + 56);
  v28 = result;
  v29 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v4;
  v30 = (unint64_t)(v5 + 63) >> 6;
  v8 = a2 + 56;
  if ((v6 & v4) == 0)
    goto LABEL_8;
  while (2)
  {
    v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v31 = v3;
    v10 = v9 | (v3 << 6);
LABEL_22:
    v15 = *(_QWORD *)(result + 48) + 24 * v10;
    v16 = *(_QWORD *)v15;
    v17 = *(_QWORD *)(v15 + 8);
    v18 = *(unsigned __int8 *)(v15 + 16);
    sub_1A93F92DC();
    sub_1A93F92E8();
    if (v18 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1A93F7FBC();
    }
    else
    {
      sub_1A93F930C();
    }
    v19 = sub_1A93F9324();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
    {
LABEL_43:
      sub_1A9086E08(v16, v17, v18);
      return 0;
    }
    v22 = ~v20;
    v23 = *(_QWORD *)(a2 + 48);
    while (1)
    {
      v25 = (uint64_t *)(v23 + 24 * v21);
      v26 = *v25;
      if (*((_BYTE *)v25 + 16) == 1)
        break;
      if (v26 == v16)
        v24 = v18;
      else
        v24 = 1;
      if ((v24 & 1) == 0)
        goto LABEL_40;
LABEL_31:
      v21 = (v21 + 1) & v22;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
        goto LABEL_43;
    }
    if ((v18 & 1) == 0)
      goto LABEL_31;
    v27 = v26 == v16 && v25[1] == v17;
    if (!v27 && (sub_1A93F90C0() & 1) == 0)
      goto LABEL_31;
    sub_1A9086E08(v16, v17, 1);
LABEL_40:
    result = v28;
    v3 = v31;
    if (v7)
      continue;
    break;
  }
LABEL_8:
  v11 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v11 >= v30)
    return 1;
  v12 = *(_QWORD *)(v29 + 8 * v11);
  v13 = v3 + 1;
  if (v12)
    goto LABEL_21;
  v13 = v11 + 1;
  if (v11 + 1 >= v30)
    return 1;
  v12 = *(_QWORD *)(v29 + 8 * v13);
  if (v12)
    goto LABEL_21;
  v13 = v11 + 2;
  if (v11 + 2 >= v30)
    return 1;
  v12 = *(_QWORD *)(v29 + 8 * v13);
  if (v12)
    goto LABEL_21;
  v14 = v11 + 3;
  if (v14 >= v30)
    return 1;
  v12 = *(_QWORD *)(v29 + 8 * v14);
  if (v12)
  {
    v13 = v14;
LABEL_21:
    v7 = (v12 - 1) & v12;
    v31 = v13;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v30)
      return 1;
    v12 = *(_QWORD *)(v29 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_21;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1A934F4B4(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v22;

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v4 = 0;
    v5 = a1 + 56;
    v6 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(a1 + 56);
    v22 = (unint64_t)(v6 + 63) >> 6;
    v9 = a2 + 56;
    while (1)
    {
      if (v8)
      {
        v10 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v11 = v10 | (v4 << 6);
      }
      else
      {
        v12 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_34;
        }
        if (v12 >= v22)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v12);
        ++v4;
        if (!v13)
        {
          v4 = v12 + 1;
          if (v12 + 1 >= v22)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
          {
            v4 = v12 + 2;
            if (v12 + 2 >= v22)
              return 1;
            v13 = *(_QWORD *)(v5 + 8 * v4);
            if (!v13)
            {
              v4 = v12 + 3;
              if (v12 + 3 >= v22)
                return 1;
              v13 = *(_QWORD *)(v5 + 8 * v4);
              if (!v13)
              {
                v14 = v12 + 4;
                if (v14 >= v22)
                  return 1;
                v13 = *(_QWORD *)(v5 + 8 * v14);
                if (!v13)
                {
                  while (1)
                  {
                    v4 = v14 + 1;
                    if (__OFADD__(v14, 1))
                      break;
                    if (v4 >= v22)
                      return 1;
                    v13 = *(_QWORD *)(v5 + 8 * v4);
                    ++v14;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_34:
                  __break(1u);
                  JUMPOUT(0x1A934F74CLL);
                }
                v4 = v14;
              }
            }
          }
        }
LABEL_24:
        v8 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v4 << 6);
      }
      v15 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + 16 * v11 + 8);
      sub_1A93F92DC();
      sub_1A93F92E8();
      v16 = sub_1A93F9324();
      v17 = -1 << *(_BYTE *)(a2 + 32);
      v18 = v16 & ~v17;
      if (((*(_QWORD *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
        return 0;
      v19 = ~v17;
      while (1)
      {
        v20 = *(_QWORD *)(a2 + 48) + 16 * v18;
        if (*(_BYTE *)(v20 + 8) == 1)
          __asm { BR              X17 }
        if ((v15 & 1) == 0)
          break;
        v18 = (v18 + 1) & v19;
        if (((*(_QWORD *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          return 0;
      }
    }
  }
  return 0;
}

uint64_t sub_1A934F760(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_25;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_24;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v4 = v13 + 3;
    if (v13 + 3 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v15 = v13 + 4;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_34;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_24;
      }
    }
    v4 = v15;
LABEL_24:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_25:
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v12);
    result = sub_1A93F92D0();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(_QWORD *)(v19 + 8 * v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(_QWORD *)(v19 + 8 * v18) == v16)
      goto LABEL_7;
  }
}

uint64_t sub_1A934F938@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_requests) + 16);
  return swift_retain();
}

char *RSSFeedUpdater.__allocating_init(ctx:ingesterProvider:externalFeedDownloader:)(void *a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return RSSFeedUpdater.init(ctx:ingesterProvider:externalFeedDownloader:)(a1, a2, a3);
}

uint64_t sub_1A934F998()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1A934F9BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;

  v1 = a1 + 16;
  if (qword_1ED2A4890 != -1)
    swift_once();
  v2 = sub_1A93F7698();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A87A8);
  v3 = sub_1A93F7674();
  v4 = sub_1A93F87B4();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1A904E000, v3, v4, "Finished restoring background download tasks.", v5, 2u);
    MEMORY[0x1AF41411C](v5, -1, -1);
  }

  swift_beginAccess();
  v6 = MEMORY[0x1AF41420C](v1);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = objc_retain(*(id *)(v6
                                       + OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_pendingRestorationQueue));

    dispatch_resume(v8);
  }
}

void sub_1A934FADC()
{
  uint64_t v0;

  sub_1A934F9BC(v0);
}

void sub_1A934FAE4(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t updated;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_1A93F7D58();
  v29 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F7DB8();
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for FeedUpdateRequest();
  v11 = *(_QWORD *)(updated - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](updated);
  v13 = sub_1A93F7170();
  v15 = v14;
  swift_bridgeObjectRelease();
  v16 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0)
    v16 = v13 & 0xFFFFFFFFFFFFLL;
  if (v16)
  {
    sub_1A90913C0(a1, (uint64_t)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    v17 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v2;
    sub_1A9171820((uint64_t)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
    aBlock[4] = sub_1A9351974;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_7_3;
    v19 = _Block_copy(aBlock);
    v20 = v2;
    sub_1A93F7D88();
    v30 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v9, v6, v19);
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
    swift_release();
  }
  else
  {
    if (qword_1ED2A4890 != -1)
      swift_once();
    v21 = sub_1A93F7698();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED2A87A8);
    v22 = sub_1A93F7674();
    v23 = sub_1A93F879C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1A904E000, v22, v23, "The feedUrl is an empty string. Cannot proceed with feed update.", v24, 2u);
      MEMORY[0x1AF41411C](v24, -1, -1);
    }

    sub_1A9069320();
    v25 = (void *)swift_allocError();
    *v26 = 7;
    FeedUpdateRequest.failRequest(_:)(v25);

  }
}

void sub_1A934FE5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21[2];

  v2 = v1;
  v4 = sub_1A93F7E18();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v2 + OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_workQueue);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, unint64_t, double))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4, v6);
  v10 = v9;
  LOBYTE(v9) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, unint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_5;
  }
  type metadata accessor for FeedUpdateRequest();
  v5 = sub_1A93F7170();
  v4 = v11;
  v21[0] = v5;
  v21[1] = v11;
  MEMORY[0x1E0C80A78](v5);
  v20[-4] = v12;
  v20[-3] = v21;
  v20[-2] = a1;
  v14 = v13 + 4;
  os_unfair_lock_lock(v13 + 4);
  sub_1A9171390((_QWORD *(*)(uint64_t *__return_ptr))sub_1A9352074, v20);
  os_unfair_lock_unlock(v14);
  if ((v20[0] & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1A93510C8(a1);
    return;
  }
  if (qword_1ED2A4890 != -1)
    goto LABEL_9;
LABEL_5:
  v15 = sub_1A93F7698();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED2A87A8);
  swift_bridgeObjectRetain();
  v16 = sub_1A93F7674();
  v17 = sub_1A93F87B4();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v21[0] = v19;
    *(_DWORD *)v18 = 141558275;
    v20[0] = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v18 + 12) = 2081;
    swift_bridgeObjectRetain();
    v20[0] = sub_1A906436C(v5, v4, v21);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v16, v17, "There is already an rss feed update request for %{private,mask.hash}s. Dropping this redundant request.", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v19, -1, -1);
    MEMORY[0x1AF41411C](v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

id RSSFeedUpdater.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RSSFeedUpdater.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RSSFeedUpdater.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RSSFeedUpdater();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t RSSFeedUpdater.didRestoreFeedUrlTask(_:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v3 = sub_1A93F7D58();
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F726C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  v18[1] = *(_QWORD *)&v1[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_workQueue];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9, v12);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  *(_QWORD *)(v14 + ((v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
  aBlock[4] = sub_1A9351E1C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_13_2;
  v15 = _Block_copy(aBlock);
  v16 = v1;
  sub_1A93F7D88();
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v8, v5, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
  return swift_release();
}

uint64_t sub_1A93504F8(uint64_t a1, uint64_t a2)
{
  int *updated;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  os_unfair_lock_s *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[2];

  v38 = a2;
  updated = (int *)type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1E0C80A78](updated);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a1;
  v6 = sub_1A93F7170();
  v8 = v7;
  if (qword_1ED2A4890 != -1)
    swift_once();
  v9 = sub_1A93F7698();
  v10 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A87A8);
  swift_bridgeObjectRetain_n();
  v36[1] = v10;
  v11 = sub_1A93F7674();
  v12 = sub_1A93F87B4();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = v6;
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v40[0] = v15;
    *(_DWORD *)v14 = 141558275;
    v39 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v14 + 12) = 2081;
    swift_bridgeObjectRetain();
    v39 = sub_1A906436C(v13, v8, v40);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v11, v12, "Restored background task for %{private,mask.hash}s.", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v15, -1, -1);
    v16 = v14;
    v6 = v13;
    MEMORY[0x1AF41411C](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v17 = &v5[updated[5]];
  v18 = sub_1A93F726C();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, v37, v18);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(&v5[updated[6]], 1, 1, v18);
  v20 = updated[18];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2ABD80);
  v21 = swift_allocObject();
  *(_DWORD *)(v21 + 24) = 0;
  *(_QWORD *)(v21 + 16) = 0;
  *(_QWORD *)&v5[v20] = v21;
  v22 = sub_1A93F73D4();
  *(_QWORD *)&v5[updated[7]] = 0;
  v23 = &v5[updated[8]];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v5[updated[9]] = 0;
  v5[updated[10]] = 0;
  v5[updated[11]] = 0;
  *(_QWORD *)&v5[updated[12]] = 0;
  v5[updated[13]] = 0;
  v24 = &v5[updated[14]];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v25 = &v5[updated[15]];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v26 = &v5[updated[16]];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  v27 = &v5[updated[17]];
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;
  v40[0] = v6;
  v40[1] = v8;
  MEMORY[0x1E0C80A78](v22);
  v36[-4] = v28;
  v36[-3] = v40;
  v36[-2] = v5;
  v30 = v29 + 4;
  os_unfair_lock_lock(v29 + 4);
  sub_1A9171390((_QWORD *(*)(uint64_t *__return_ptr))sub_1A9352074, &v39);
  os_unfair_lock_unlock(v30);
  if ((v39 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1A9351550((uint64_t)v5);
  }
  else
  {
    swift_bridgeObjectRetain();
    v31 = sub_1A93F7674();
    v32 = sub_1A93F87B4();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v40[0] = v34;
      *(_DWORD *)v33 = 141558275;
      v39 = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v33 + 12) = 2081;
      swift_bridgeObjectRetain();
      v39 = sub_1A906436C(v6, v8, v40);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A904E000, v31, v32, "Tried to insert an rss feed update request that was restored from background for %{private,mask.hash}s but there was already one running. Dropping this redundant request.", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v34, -1, -1);
      MEMORY[0x1AF41411C](v33, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

  }
  return sub_1A9091230((uint64_t)v5);
}

uint64_t RSSFeedUpdater.perform(onFeedProcessingQueue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v5 = sub_1A93F7D58();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F7DB8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_workQueue);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  aBlock[4] = sub_1A9055750;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_19_4;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v17[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v6, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t (*RSSFeedUpdater.sessionCompletionHandler.getter())()
{
  uint64_t v0;
  uint64_t (*result)();

  result = (uint64_t (*)())objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_externalFeedDownloader), sel_sessionCompletionHandler);
  if (result)
  {
    *(_QWORD *)(swift_allocObject() + 16) = result;
    return sub_1A908C214;
  }
  return result;
}

void RSSFeedUpdater.sessionCompletionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  _QWORD v6[6];

  v4 = *(void **)(v2 + OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_externalFeedDownloader);
  if (a1)
  {
    v6[4] = a1;
    v6[5] = a2;
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 1107296256;
    v6[2] = sub_1A908A91C;
    v6[3] = &block_descriptor_25_6;
    v5 = _Block_copy(v6);
    swift_retain();
    swift_release();
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v4, sel_setSessionCompletionHandler_, v5);
  sub_1A9085818(a1);
  _Block_release(v5);
}

_QWORD *sub_1A9350F64@<X0>(id *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  _QWORD *result;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)();

  result = objc_msgSend(*a1, sel_sessionCompletionHandler);
  if (result)
  {
    v4 = result;
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    result = (_QWORD *)swift_allocObject();
    result[2] = sub_1A9352244;
    result[3] = v5;
    v6 = sub_1A9055750;
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())result;
  return result;
}

void sub_1A9350FF8(uint64_t a1, void **a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[6];

  v3 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = *a2;
    v7[4] = sub_1A9055750;
    v7[5] = v5;
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 1107296256;
    v7[2] = sub_1A908A91C;
    v7[3] = &block_descriptor_78_0;
    v3 = _Block_copy(v7);
    swift_retain();
    swift_release();
  }
  else
  {
    v6 = *a2;
  }
  objc_msgSend(v6, sel_setSessionCompletionHandler_, v3);
  _Block_release(v3);
}

uint64_t sub_1A93510C8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t updated;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t i;
  uint64_t v13;
  double v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[3];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8DB8);
  MEMORY[0x1E0C80A78](v4);
  v45 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for FeedUpdateRequest();
  v7 = *(_QWORD *)(updated - 8);
  MEMORY[0x1E0C80A78](updated);
  v46 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v42 - v10;
  i = sub_1A93F7E18();
  v13 = *(_QWORD *)(i - 8);
  v14 = MEMORY[0x1E0C80A78](i);
  v16 = (uint64_t *)((char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (void *)v2[12];
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, unint64_t, double))(v13 + 104))(v16, *MEMORY[0x1E0DEF740], i, v14);
  v18 = v17;
  v19 = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, unint64_t))(v13 + 8))(v16, i);
  if ((v19 & 1) != 0)
  {
    v20 = v2 + 13;
    swift_beginAccess();
    v21 = v2[13];
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v43 = a1;
      v44 = v2;
      v23 = v21 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v24 = *(_QWORD *)(v7 + 72);
      v13 = *(unsigned __int8 *)(a1 + *(int *)(updated + 36));
      swift_bridgeObjectRetain();
      for (i = 0; i != v22; ++i)
      {
        sub_1A90913C0(v23, (uint64_t)v11);
        if ((_DWORD)v13)
        {
          v25 = v11[*(int *)(updated + 36)];
          sub_1A9091230((uint64_t)v11);
          if ((v25 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_10;
          }
        }
        else
        {
          sub_1A9091230((uint64_t)v11);
        }
        v23 += v24;
      }
      swift_bridgeObjectRelease();
      i = *(_QWORD *)(*v20 + 16);
LABEL_10:
      a1 = v43;
      v2 = v44;
    }
    else
    {
      i = 0;
    }
    swift_beginAccess();
    if (*(_QWORD *)(*v20 + 16) >= i)
    {
      v26 = v45;
      sub_1A90913C0(a1, v45);
      v27 = v26;
      v13 = a1;
      sub_1A91731B8(i, i, v27);
      swift_endAccess();
      if (qword_1ED2A4890 == -1)
        goto LABEL_14;
      goto LABEL_20;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_20:
  swift_once();
LABEL_14:
  v28 = sub_1A93F7698();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED2A87A8);
  v29 = v13;
  v30 = v46;
  sub_1A90913C0(v29, v46);
  swift_retain();
  v31 = sub_1A93F7674();
  v32 = sub_1A93F87B4();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v48[0] = v34;
    *(_DWORD *)v33 = 136315907;
    v35 = v2;
    v36 = v2[2];
    v37 = v35[3];
    swift_bridgeObjectRetain();
    v47 = sub_1A906436C(v36, v37, v48);
    sub_1A93F8AA8();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2160;
    v47 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v33 + 22) = 2081;
    v38 = v46;
    v39 = sub_1A93F7170();
    v47 = sub_1A906436C(v39, v40, v48);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9091230(v38);
    *(_WORD *)(v33 + 32) = 2048;
    v47 = i;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v31, v32, "%s: inserting %{private,mask.hash}s at index %ld", (uint8_t *)v33, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v34, -1, -1);
    MEMORY[0x1AF41411C](v33, -1, -1);
  }
  else
  {
    swift_release();
    sub_1A9091230(v30);
  }

  return sub_1A9090BE8();
}

uint64_t sub_1A9351550(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t updated;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  char v14;
  uint64_t result;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  _BYTE v27[40];

  v2 = v1;
  updated = type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1E0C80A78](updated);
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_1A93F7E18();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = (void *)v2[12];
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x1E0DEF740], v7, v9);
  v13 = v12;
  v14 = sub_1A93F7E3C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  if ((v14 & 1) != 0)
  {
    sub_1A90913C0(a1, (uint64_t)v6);
    v16 = (void *)v2[5];
    sub_1A905DC3C((uint64_t)(v2 + 6), (uint64_t)v27);
    v17 = v2[11];
    v18 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for RSSFeedUpdaterJob();
    swift_allocObject();
    v19 = v13;
    v20 = v16;
    swift_unknownObjectRetain();
    v21 = sub_1A9091880((uint64_t)v6, v20, (uint64_t)v27, v17, v19, (uint64_t)sub_1A90896B4, v18);

    swift_unknownObjectRelease();
    swift_release();
    v22 = sub_1A93F7170();
    v24 = v23;
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26 = v2[14];
    v2[14] = 0x8000000000000000;
    sub_1A9091688(v21, v22, v24, isUniquelyReferenced_nonNull_native);
    v2[14] = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A935179C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A9085818(*(_QWORD *)(v0 + 120));
  return v0;
}

uint64_t sub_1A93517F0()
{
  sub_1A935179C();
  return swift_deallocClassInstance();
}

uint64_t sub_1A9351810()
{
  uint64_t v0;
  int *updated;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  updated = (int *)type metadata accessor for FeedUpdateRequest();
  v2 = *(unsigned __int8 *)(*((_QWORD *)updated - 1) + 80);

  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = sub_1A93F73E0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + updated[5];
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v9 = v3 + updated[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    v8(v9, v6);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + updated[14]))
    swift_release();
  if (*(_QWORD *)(v3 + updated[15]))
    swift_release();
  if (*(_QWORD *)(v3 + updated[16]))
    swift_release();
  if (*(_QWORD *)(v3 + updated[17]))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A9351974()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedUpdateRequest() - 8) + 80);
  sub_1A934FE5C(v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1A93519B4@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  swift_beginAccess();
  v4 = sub_1A9130D1C(v3);
  swift_endAccess();
  result = sub_1A90906A0(sub_1A915861C, (uint64_t)&unk_1E54F4EF8, (uint64_t)sub_1A9352128, (uint64_t)&block_descriptor_72_0);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v4)
    v6 = v4;
  *a2 = v6;
  return result;
}

uint64_t sub_1A9351A64@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  v4 = a1[1];
  swift_beginAccess();
  v5 = sub_1A90903F0(v3, v4);
  swift_endAccess();
  result = sub_1A90906A0(sub_1A9090A38, (uint64_t)&unk_1E54F4E08, (uint64_t)sub_1A908AED8, (uint64_t)&block_descriptor_52);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v5)
    v7 = v5;
  *a2 = v7;
  return result;
}

void sub_1A9351B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v17;

  v17 = (id)objc_opt_self();
  v9 = (void *)sub_1A93F8010();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9760);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A940F470;
  v11 = MEMORY[0x1E0DEA968];
  sub_1A93F8C1C();
  v12 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 72) = a2;
  sub_1A93F8C1C();
  *(_QWORD *)(inited + 168) = v12;
  *(_QWORD *)(inited + 144) = a3;
  sub_1A93F8C1C();
  *(_QWORD *)(inited + 240) = v12;
  *(_QWORD *)(inited + 216) = a4;
  sub_1A93F8C1C();
  *(_QWORD *)(inited + 312) = v12;
  *(_QWORD *)(inited + 288) = a1;
  sub_1A93F8C1C();
  v13 = *(_QWORD *)(a5 + *(int *)(type metadata accessor for FeedUpdateRequest() + 48));
  type metadata accessor for MTFeedUpdateSource(0);
  *(_QWORD *)(inited + 384) = v14;
  *(_QWORD *)(inited + 360) = v13;
  sub_1A93F8C1C();
  *(_QWORD *)(inited + 456) = v11;
  *(_QWORD *)(inited + 432) = 7566194;
  *(_QWORD *)(inited + 440) = 0xE300000000000000;
  sub_1A91129D8(inited);
  v15 = (void *)sub_1A93F7ED8();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_recordEvent_dataSource_data_, v9, 0, v15);

}

uint64_t sub_1A9351DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1A93F726C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1A9351E1C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_1A93F726C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1A93504F8(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A9351E5C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9351E80()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

char *keypath_get_selector_sessionCompletionHandler()
{
  return sel_sessionCompletionHandler;
}

uint64_t method lookup function for RSSFeedUpdater()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RSSFeedUpdater.updatingFeedURLs.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of RSSFeedUpdater.__allocating_init(ctx:ingesterProvider:externalFeedDownloader:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of RSSFeedUpdater.updateFeed(request:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

ValueMetadata *type metadata accessor for RSSFeedUpdater.UpdaterJobMetricsData()
{
  return &type metadata for RSSFeedUpdater.UpdaterJobMetricsData;
}

void destroy for RSSFeedUpdater.Result(uint64_t a1)
{
  sub_1A9230268(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for RSSFeedUpdater.Result(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A9230248(*(id *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for RSSFeedUpdater.Result(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A9230248(*(id *)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_1A9230268(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for RSSFeedUpdater.Result(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_1A9230268(v4, v6, v5, v7, v8);
  return a1;
}

ValueMetadata *type metadata accessor for RSSFeedUpdater.Result()
{
  return &type metadata for RSSFeedUpdater.Result;
}

uint64_t sub_1A9352050()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

BOOL sub_1A9352074@<W0>(_BYTE *a1@<X8>)
{
  return sub_1A9352148(a1);
}

uint64_t sub_1A935208C(uint64_t a1)
{
  sub_1A9230268(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_1A93520C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A9351A64(*(uint64_t **)(v1 + 24), a1);
}

uint64_t sub_1A93520DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A93519B4(*(uint64_t **)(v1 + 24), a1);
}

uint64_t objectdestroy_48Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9352128()
{
  uint64_t v0;

  return sub_1A908AEF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1A934F760);
}

BOOL sub_1A9352148@<W0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _BOOL8 result;

  result = sub_1A934ED64(*(_QWORD *)(v1 + 16), **(_QWORD **)(v1 + 24), *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8), *(_QWORD *)(v1 + 32));
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1A9352180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = sub_1A93F726C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v6 = *(_QWORD *)(v0 + v5 + 8);
  if (v6 >> 60 != 15)
    sub_1A905F180(*(_QWORD *)(v0 + v5), v6);

  return swift_deallocObject();
}

PodcastsFoundation::SectionContext_optional __swiftcall SectionContext.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  PodcastsFoundation::SectionContext_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t SectionContext.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x72656C69617254;
  else
    return 0x6E6F73616553;
}

uint64_t sub_1A935233C(char *a1, char *a2)
{
  return sub_1A92F9A30(*a1, *a2);
}

uint64_t sub_1A9352348()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A93523C4()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A935241C()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::SectionContext_optional sub_1A9352494(Swift::String *a1)
{
  return SectionContext.init(rawValue:)(*a1);
}

void sub_1A93524A0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6E6F73616553;
  if (*v1)
    v2 = 0x72656C69617254;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t static EpisodeListenNowReason.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  double v3;
  char v4;
  char v5;
  double v7;
  char v8;
  double v9;
  char v10;

  v2 = *(_BYTE *)(a1 + 8);
  v3 = *(double *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  if ((v2 & 1) != 0 || (*(_BYTE *)(a2 + 8) & 1) != 0)
  {
    v9 = *(double *)a1;
    v10 = v2;
    v7 = v3;
    v8 = v4;
    v5 = static EpisodeListenNowReason.== infix(_:_:)(&v9, &v7);
  }
  else
  {
    v5 = *(double *)a1 == v3;
  }
  return v5 & 1;
}

unint64_t sub_1A9352548()
{
  unint64_t result;

  result = qword_1EEABE5F8;
  if (!qword_1EEABE5F8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for SectionContext, &type metadata for SectionContext);
    atomic_store(result, (unint64_t *)&qword_1EEABE5F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SectionContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A93525D8 + 4 * byte_1A941F645[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A935260C + 4 * byte_1A941F640[v4]))();
}

uint64_t sub_1A935260C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9352614(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A935261CLL);
  return result;
}

uint64_t sub_1A9352628(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9352630);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A9352634(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A935263C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

id AccountsUtil.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id AccountsUtil.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountsUtil();
  return objc_msgSendSuper2(&v2, sel_init);
}

id AccountsUtil.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountsUtil();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id MTEpisode.attributedDescriptionFromHTML.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = objc_msgSend(v0, sel_itemDescriptionWithHTMLData);
  if (v1)
  {
    v2 = sub_1A93F72B4();
    v4 = v3;

    sub_1A9072534(0, &qword_1EEABC708);
    sub_1A9072534(0, &qword_1EEABE600);
    v1 = (id)sub_1A93F87E4();
    sub_1A905F180(v2, v4);
  }
  return v1;
}

void MTEpisode.attributedDescriptionFromHTML.setter(void *a1)
{
  void *v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  id v40[2];

  v40[1] = *(id *)MEMORY[0x1E0C80C00];
  if (a1)
  {
    v3 = (void *)objc_opt_self();
    v40[0] = 0;
    v4 = a1;
    v5 = objc_msgSend(v3, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v4, 1, v40);
    v6 = v40[0];
    if (v5)
    {
      v7 = sub_1A93F72B4();
      v9 = v8;

      v10 = objc_msgSend(v1, sel_itemDescriptionWithHTMLData);
      if (v10)
      {
        v11 = v10;
        v12 = sub_1A93F72B4();
        v14 = v13;

        sub_1A90D8068(v7, v9);
        sub_1A90D8068(v7, v9);
        sub_1A93533B4(v7, v9);
        LOBYTE(v11) = v15;
        sub_1A905F180(v12, v14);
        sub_1A905F180(v7, v9);
        sub_1A905F180(v7, v9);
        if ((v11 & 1) != 0)
        {

          sub_1A905F180(v7, v9);
          return;
        }
      }
      else
      {
        sub_1A90D8068(v7, v9);
        sub_1A9069F9C(v7, v9);
        sub_1A9069F9C(0, 0xF000000000000000);
      }
      v39 = (void *)sub_1A93F729C();
      objc_msgSend(v1, sel_setItemDescriptionWithHTMLData_, v39);

      sub_1A905F180(v7, v9);
    }
    else
    {
      v21 = v6;
      v22 = (void *)sub_1A93F7128();

      swift_willThrow();
      if (qword_1ED2A3F00 != -1)
        swift_once();
      v23 = sub_1A93F7698();
      __swift_project_value_buffer(v23, (uint64_t)qword_1ED2A3EE0);
      v24 = v1;
      v25 = v22;
      v26 = v24;
      v27 = v22;
      v28 = sub_1A93F7674();
      v29 = sub_1A93F879C();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc();
        v31 = (void *)swift_slowAlloc();
        v40[0] = v31;
        *(_DWORD *)v30 = 136446466;
        v32 = objc_msgSend(v26, sel_uuid);
        if (!v32)
        {
          v33 = objc_msgSend(v26, sel_objectID);
          v32 = objc_msgSend(v33, sel_description);

        }
        v34 = sub_1A93F8040();
        v36 = v35;

        sub_1A906436C(v34, v36, (uint64_t *)v40);
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2082;
        swift_getErrorValue();
        v37 = sub_1A93F927C();
        sub_1A906436C(v37, v38, (uint64_t *)v40);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1A904E000, v28, v29, "Failed to encode NSAttributedString from kEpisodeDescriptionWithHTMLData for %{public}s with error: %{public}s", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v31, -1, -1);
        MEMORY[0x1AF41411C](v30, -1, -1);
      }
      else
      {

      }
      objc_msgSend(v26, sel_setItemDescriptionWithHTMLData_, 0);

    }
  }
  else
  {
    v16 = objc_msgSend(v1, sel_itemDescriptionWithHTMLData);
    if (v16)
    {
      v17 = v16;
      v18 = sub_1A93F72B4();
      v20 = v19;

      sub_1A905F180(v18, v20);
      objc_msgSend(v1, sel_setItemDescriptionWithHTMLData_, 0);
    }
  }
}

void sub_1A9352FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1A9353024(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1A9353208);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_1A935322C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_1A9352FC4((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1A9353300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_1A93F6F78();
  v11 = result;
  if (result)
  {
    result = sub_1A93F6F90();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1A93F6F84();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1A9352FC4(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_1A93533B4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1A9353400()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1A9353434 + dword_1A935360C[v0 >> 62]))();
}

uint64_t sub_1A9353444@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

char *keypath_get_selector_attributedDescriptionFromHTML()
{
  return sel_attributedDescriptionFromHTML;
}

id sub_1A9353638@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_attributedDescriptionFromHTML);
  *a2 = result;
  return result;
}

id sub_1A9353670(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAttributedDescriptionFromHTML_, *a1);
}

uint64_t LoggerTrace.init(logger:level:identifier:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;

  *a5 = a3;
  a5[1] = a4;
  v8 = type metadata accessor for LoggerTrace(0);
  v9 = (char *)a5 + *(int *)(v8 + 20);
  v10 = sub_1A93F7698();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a1, v10);
  *((_BYTE *)a5 + *(int *)(v8 + 24)) = a2;
  return result;
}

uint64_t LoggerTrace.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LoggerTrace.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*LoggerTrace.identifier.modify())()
{
  return nullsub_1;
}

uint64_t LoggerTrace.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LoggerTrace(0) + 20);
  v4 = sub_1A93F7698();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LoggerTrace.level.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for LoggerTrace(0) + 24));
}

uint64_t sub_1A93537D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v18;
  unint64_t v19;

  v3 = v2;
  v5 = type metadata accessor for LoggerTrace.LogInterval(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LoggerTrace(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9064630(v2, (uint64_t)v10, v11);
  if (!a2)
  {
    sub_1A9064630(v2, (uint64_t)v7, type metadata accessor for LoggerTrace.LogInterval);
LABEL_5:
    v16 = (uint64_t *)&v7[*(int *)(v5 + 20)];
    v14 = *v16;
    v15 = v16[1];
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v12 = (uint64_t *)(v2 + *(int *)(v5 + 20));
  v13 = v12[1];
  v18 = *v12;
  v19 = v13;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  sub_1A93F810C();
  v14 = v18;
  v15 = v19;
  sub_1A9064630(v3, (uint64_t)v7, type metadata accessor for LoggerTrace.LogInterval);
  if (!v15)
    goto LABEL_5;
LABEL_6:
  sub_1A9064714((uint64_t)v7, type metadata accessor for LoggerTrace.LogInterval);
  LoggerTrace.emit(event:context:)((uint64_t)"END INTERVAL", 12, 2, v14, v15);
  swift_bridgeObjectRelease();
  return sub_1A9064714((uint64_t)v10, type metadata accessor for LoggerTrace);
}

uint64_t sub_1A935395C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LoggerTrace(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A93539A0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

_QWORD *assignWithCopy for LoggerTrace(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F7698();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *initializeWithTake for LoggerTrace(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F7698();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for LoggerTrace(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A93F7698();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for LoggerTrace()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9353B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1A93F7698();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for LoggerTrace()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9353BF0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1A93F7698();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

_QWORD *sub_1A9353C64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = type metadata accessor for LoggerTrace(0);
    v9 = *(int *)(v8 + 20);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1A93F7698();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    *((_BYTE *)v4 + *(int *)(v8 + 24)) = *((_BYTE *)a2 + *(int *)(v8 + 24));
    v14 = *(int *)(a3 + 20);
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1A9353D48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for LoggerTrace(0) + 20);
  v3 = sub_1A93F7698();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1A9353DB0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = type metadata accessor for LoggerTrace(0);
  v8 = *(int *)(v7 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1A93F7698();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(v7 + 24)) = *((_BYTE *)a2 + *(int *)(v7 + 24));
  v13 = *(int *)(a3 + 20);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1A9353E68(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for LoggerTrace(0);
  v7 = *(int *)(v6 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A93F7698();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(v6 + 24)) = *((_BYTE *)a2 + *(int *)(v6 + 24));
  v11 = *(int *)(a3 + 20);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1A9353F30(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = type metadata accessor for LoggerTrace(0);
  v7 = *(int *)(v6 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A93F7698();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(v6 + 24)) = *((_BYTE *)a2 + *(int *)(v6 + 24));
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_1A9353FC0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for LoggerTrace(0);
  v8 = *(int *)(v7 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1A93F7698();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(v7 + 24)) = *((_BYTE *)a2 + *(int *)(v7 + 24));
  v12 = *(int *)(a3 + 20);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A9354068()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9354074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for LoggerTrace(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1A93540F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9354100(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for LoggerTrace(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1A935417C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for LoggerTrace(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *assignWithCopy for LoggerTrace.ActivityInterval(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LoggerTrace.ActivityInterval(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LoggerTrace.ActivityInterval(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LoggerTrace.ActivityInterval(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LoggerTrace.ActivityInterval()
{
  return &type metadata for LoggerTrace.ActivityInterval;
}

uint64_t ShowsSortType.ascendingType.getter(unsigned int a1)
{
  unsigned int v1;

  if (!(_BYTE)a1)
    return 1;
  if (a1 == 2)
    v1 = 3;
  else
    v1 = a1;
  if (a1 == 4)
    return 5;
  else
    return v1;
}

uint64_t ShowsSortType.baseSortType.getter(int a1)
{
  int v1;
  unsigned int v2;

  if (a1 == 5)
    v1 = 4;
  else
    v1 = a1;
  if (a1 == 3)
    v2 = 2;
  else
    v2 = v1;
  if (a1 == 1)
    return 0;
  else
    return v2;
}

Swift::Bool __swiftcall ShowsSortType.baseSortTypeMatches(otherSort:)(PodcastsFoundation::ShowsSortType otherSort)
{
  char v1;
  char v2;
  char v3;
  Swift::Bool result;

  if (v1 == 5)
    v2 = 4;
  else
    v2 = v1;
  if (v1 == 3)
    v3 = 2;
  else
    v3 = v2;
  if (v1 == 1)
    sub_1A92FAA94(0);
  else
    sub_1A92FAA94(v3);
  return result;
}

Swift::Bool __swiftcall ShowsSortType.isAscending()()
{
  unsigned __int8 v0;

  return (v0 < 6u) & v0;
}

Swift::Bool __swiftcall ShowsSortType.isDescending()()
{
  unsigned __int8 v0;

  return (v0 & 1) == 0 && v0 < 5u;
}

uint64_t ShowsSortType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9354440 + 4 * byte_1A941F880[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1A9354440()
{
  return 0x637341656C746974;
}

uint64_t sub_1A93544B8()
{
  return 0x6C61756E616DLL;
}

unint64_t sub_1A93544CC()
{
  return 0xD000000000000012;
}

uint64_t sub_1A93544EC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1A93F92DC();
  ShowsSortType.rawValue.getter(v1);
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A935454C()
{
  unsigned __int8 *v0;

  ShowsSortType.rawValue.getter(*v0);
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A935458C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1A93F92DC();
  ShowsSortType.rawValue.getter(v1);
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A93545E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s18PodcastsFoundation13ShowsSortTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1A9354614@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = ShowsSortType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A935463C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = ShowsSortType.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == ShowsSortType.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t _s18PodcastsFoundation13ShowsSortTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

unint64_t sub_1A9354710()
{
  unint64_t result;

  result = qword_1EEABE6A8;
  if (!qword_1EEABE6A8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ShowsSortType, &type metadata for ShowsSortType);
    atomic_store(result, (unint64_t *)&qword_1EEABE6A8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ShowsSortType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A93547A0 + 4 * byte_1A941F88D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A93547D4 + 4 * byte_1A941F888[v4]))();
}

uint64_t sub_1A93547D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93547DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93547E4);
  return result;
}

uint64_t sub_1A93547F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93547F8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A93547FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9354804(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShowsSortType()
{
  return &type metadata for ShowsSortType;
}

void sub_1A9354820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  const __CFString *v17;
  double v18;
  double v19;
  void (*v20)(char *, uint64_t);
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = sub_1A93F738C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DE8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F7DDC();
  if ((sub_1A93F7DD0() & 1) != 0)
  {
LABEL_11:
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return;
  }
  v10 = sub_1A93F7DC4();
  v11 = sub_1A93F7DC4();
  v12 = v10 - v11;
  if (v10 < v11)
  {
    __break(1u);
  }
  else
  {
    v13 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
    os_unfair_lock_lock(v13);
    v14 = *(_QWORD *)(v1 + 24);
    v15 = v14 + 1;
    if (!__OFADD__(v14, 1))
    {
      *(_QWORD *)(v1 + 24) = v15;
      os_unfair_lock_unlock(v13);
      if (v15 >= 1)
      {
        v24 = v7;
        v25 = v6;
        v16 = (double)v12 / 1000000000.0;
        v17 = (const __CFString *)*MEMORY[0x1E0C9B280];
        do
        {
          sub_1A93F7380();
          sub_1A93F72D8();
          v19 = v18;
          v20 = *(void (**)(char *, uint64_t))(v3 + 8);
          v20(v5, v2);
          CFRunLoopRunInMode(v17, v16, 1u);
          sub_1A93F7380();
          sub_1A93F72D8();
          v22 = v21;
          v20(v5, v2);
          v16 = v16 - (v22 - v19);
          if (v16 < 0.0)
            break;
          os_unfair_lock_lock(v13);
          v23 = *(_QWORD *)(v1 + 24);
          os_unfair_lock_unlock(v13);
        }
        while (v23);
        v7 = v24;
        v6 = v25;
      }
      goto LABEL_11;
    }
  }
  __break(1u);
}

_QWORD *sub_1A9354A2C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  __CFRunLoop *v4;
  __CFRunLoop *v5;
  __CFRunLoopSource *v6;
  CFRunLoopSourceContext context;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  v1[2] = v3;
  memset(&context.retain, 0, 64);
  context.version = 0;
  context.info = (void *)qword_1EEAED368;
  if (__OFADD__(qword_1EEAED368, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  ++qword_1EEAED368;
  v1[3] = a1;
  v4 = CFRunLoopGetCurrent();
  if (!v4)
  {
LABEL_6:
    __break(1u);
LABEL_7:
    __break(1u);
  }
  v5 = v4;
  v1[4] = v4;
  v6 = CFRunLoopSourceCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE30], 0, &context);
  if (!v6)
    goto LABEL_7;
  v1[5] = v6;
  CFRunLoopAddSource(v5, v6, (CFRunLoopMode)*MEMORY[0x1E0C9B270]);
  return v1;
}

uint64_t sub_1A9354B2C()
{
  uint64_t v0;

  CFRunLoopRemoveSource(*(CFRunLoopRef *)(v0 + 32), *(CFRunLoopSourceRef *)(v0 + 40), (CFRunLoopMode)*MEMORY[0x1E0C9B270]);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RunLoopSemaphore()
{
  return objc_opt_self();
}

uint64_t assignWithCopy for SubscriptionStatus(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStatus(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SubscriptionStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 1;
  }
  return result;
}

uint64_t sub_1A9354CE4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_1A9354CFC(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

uint64_t dispatch thunk of PendingPlaybackControllerProtocol.preflight(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of PendingPlaybackControllerProtocol.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t Sequence.cartesianProduct<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t AssociatedConformanceWitness;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t TupleTypeMetadata2;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;

  v64 = a4;
  v56 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v53 = (char *)&v47 - v10;
  v11 = sub_1A93F8A90();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v47 - v12;
  v55 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v14);
  v54 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = a3;
  v58 = a5;
  v16 = swift_getAssociatedTypeWitness();
  v52 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v47 - v17;
  v63 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v47 - v20;
  v22 = sub_1A93F8A90();
  MEMORY[0x1E0C80A78](v22);
  v60 = (char *)&v47 - v23;
  v24 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v47 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = swift_getAssociatedTypeWitness();
  v48 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v29 = (char *)&v47 - v28;
  v67 = sub_1A93F8370();
  v30 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  v31 = v60;
  v51 = a2;
  v30(v27, v59, a2);
  sub_1A93F81A8();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v59 = v29;
  v51 = AssociatedConformanceWitness;
  sub_1A93F8A9C();
  v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
  if (v50(v31, 1, AssociatedTypeWitness) != 1)
  {
    v49 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
    v65 = AssociatedTypeWitness;
    v66 = v21;
    v49(v21, v31, AssociatedTypeWitness);
    while (1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v54, v56, v57);
      sub_1A93F81A8();
      v64 = swift_getAssociatedConformanceWitness();
      sub_1A93F8A9C();
      v37 = *(_QWORD *)(v9 - 8);
      v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
      v39 = v38(v13, 1, v9);
      v40 = v16;
      v41 = v9;
      v42 = TupleTypeMetadata2;
      v43 = v18;
      v44 = v53;
      if (v39 != 1)
      {
        v45 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
        do
        {
          v46 = &v44[*(int *)(v42 + 48)];
          v45(v44, v66, v65);
          (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v46, v13, v41);
          sub_1A93F83D0();
          sub_1A93F83AC();
          sub_1A93F8A9C();
        }
        while (v38(v13, 1, v41) != 1);
      }
      v18 = v43;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v43, v40);
      v35 = v65;
      v34 = v66;
      (*(void (**)(char *, uint64_t))(v63 + 8))(v66, v65);
      v36 = v60;
      sub_1A93F8A9C();
      v16 = v40;
      v9 = v41;
      if (v50(v36, 1, v35) == 1)
        break;
      v49(v34, v36, v35);
    }
  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v59, v62);
  return v67;
}

uint64_t DebouncedEpisodeAndShowProcessor.__allocating_init(interval:dataSource:storage:delegate:workQueue:inverseBatchSize:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v22;

  v8 = *(_QWORD *)(a1 + 24);
  v19 = *(_QWORD *)(a1 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v8);
  v11 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v12 = __swift_mutable_project_boxed_opaque_existential_1(a2, v11);
  v13 = *(_QWORD *)(a3 + 24);
  v14 = *(_QWORD *)(a3 + 32);
  v15 = __swift_mutable_project_boxed_opaque_existential_1(a3, v13);
  *((_QWORD *)&v18 + 1) = v19;
  *(_QWORD *)&v18 = v10;
  v16 = sub_1A9359BB0(v9, v12, v15, a4, a5, v22, v11, v8, v13, v18, v14);

  __swift_destroy_boxed_opaque_existential_0(a3);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v16;
}

uint64_t DebouncedEpisodeAndShowProcessor.state.getter()
{
  return swift_retain();
}

uint64_t DebouncedEpisodeAndShowProcessor.init(interval:dataSource:storage:delegate:workQueue:inverseBatchSize:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a5;
  v8 = *(_QWORD *)(a1 + 24);
  v33 = *(_QWORD *)(a1 + 32);
  v34 = a4;
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v13 + 16))(v12, v10);
  v14 = *(_QWORD *)(a2 + 24);
  v32 = *(_QWORD *)(a2 + 32);
  v15 = __swift_mutable_project_boxed_opaque_existential_1(a2, v14);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v19 + 16))(v18, v16);
  v21 = *(_QWORD *)(a3 + 24);
  v20 = *(_QWORD *)(a3 + 32);
  v22 = __swift_mutable_project_boxed_opaque_existential_1(a3, v21);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v26 + 16))(v25, v23);
  v30 = v20;
  v27 = v34;
  v28 = sub_1A9359620((uint64_t)v12, (uint64_t)v18, (uint64_t)v25, v34, v35, v36, v14, v8, v21, v32, v33, v30);

  __swift_destroy_boxed_opaque_existential_0(a3);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v28;
}

void sub_1A93554C0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  unsigned __int8 v4;

  v1 = *(os_unfair_lock_s **)(v0 + 264);
  v2 = v1 + 4;
  v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1A908D648(v2, &v4);
  os_unfair_lock_unlock(v3);
  if (v4 < 2u)
    sub_1A93590B0();
}

uint64_t sub_1A935553C()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9110);
  sub_1A9066D74(&qword_1ED2A9100, &qword_1ED2A9110, MEMORY[0x1E0C95F40]);
  sub_1A93F7AA0();
  return swift_release();
}

uint64_t sub_1A93555A4()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9110);
  sub_1A9066D74(&qword_1ED2A9100, &qword_1ED2A9110, MEMORY[0x1E0C95F40]);
  sub_1A93F7AA0();
  return swift_release();
}

uint64_t sub_1A935560C(uint64_t a1)
{
  return sub_1A93556B4(a1, (uint64_t)&unk_1E54F5440, (void (*)(_BYTE *, uint64_t))sub_1A905D4AC, (uint64_t)sub_1A9359D3C, (uint64_t)&block_descriptor_68);
}

uint64_t sub_1A9355630(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  sub_1A905DC3C(a2, (uint64_t)v4);
  swift_beginAccess();
  sub_1A935A058((uint64_t)v4, a1 + 152);
  return swift_endAccess();
}

uint64_t sub_1A9355690(uint64_t a1)
{
  return sub_1A93556B4(a1, (uint64_t)&unk_1E54F5490, (void (*)(_BYTE *, uint64_t))sub_1A905D4AC, (uint64_t)sub_1A9359D4C, (uint64_t)&block_descriptor_6_1);
}

uint64_t sub_1A93556B4(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];
  _BYTE v25[40];

  v9 = v5;
  v11 = sub_1A93F7D58();
  v22 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1A93F7DB8();
  v14 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(_QWORD *)(v9 + 16);
  sub_1A905DC3C(a1, (uint64_t)v25);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v9;
  a3(v25, v17 + 24);
  aBlock[4] = a4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = a5;
  v18 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  return swift_release();
}

uint64_t sub_1A93558C0(uint64_t a1, uint64_t a2)
{
  __int128 v4[2];

  sub_1A905DC3C(a2, (uint64_t)v4);
  a1 += 112;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(a1);
  sub_1A905D4AC(v4, a1);
  return swift_endAccess();
}

void sub_1A9355928(uint64_t a1@<X1>, BOOL *a2@<X8>)
{
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  char v6;

  v3 = *(os_unfair_lock_s **)(a1 + 264);
  v4 = v3 + 4;
  v5 = v3 + 5;
  os_unfair_lock_lock(v3 + 5);
  sub_1A908D648(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6 != 1;
}

BOOL static DebouncedEpisodeAndShowProcessor.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A93559A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v2);
  v41 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA420);
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB9E8);
  v45 = *(_QWORD *)(v7 - 8);
  v46 = v7;
  MEMORY[0x1E0C80A78](v7);
  v44 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB948);
  v47 = *(_QWORD *)(v9 - 8);
  v48 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F73E0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F73D4();
  v16 = sub_1A93F73A4();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v19 = sub_1A93F7698();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ED2A3F08);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v20 = sub_1A93F7674();
  v21 = sub_1A93F8784();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v50 = v39;
    *(_DWORD *)v22 = 136315394;
    v23 = sub_1A93592F4();
    v49 = (id)sub_1A906436C(v23, v24, &v50);
    v40 = v11;
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain();
    v49 = (id)sub_1A906436C(v16, v18, &v50);
    v11 = v40;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v20, v21, "%s Starting to rebuild predicate: %s", (uint8_t *)v22, 0x16u);
    v25 = v39;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v25, -1, -1);
    MEMORY[0x1AF41411C](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v26 = sub_1A93566CC(v16, v18);
  v49 = *(id *)(v1 + 16);
  v27 = v49;
  v50 = v26;
  v28 = sub_1A93F882C();
  v29 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v41, 1, 1, v28);
  v30 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A90C8);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1ED2A90C0, &qword_1ED2A90C8, MEMORY[0x1E0C95D90]);
  sub_1A905FD90();
  sub_1A93F7C80();
  sub_1A905FD54(v29, &qword_1ED2A1C88);

  swift_release();
  sub_1A9066D74(&qword_1ED2ABA90, &qword_1ED2AA420, MEMORY[0x1E0C95CB8]);
  v32 = v43;
  v31 = v44;
  sub_1A93F7C38();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v32);
  sub_1A9072534(0, &qword_1ED2A9428);
  sub_1A9066D74(&qword_1ED2AB9E0, &qword_1ED2AB9E8, MEMORY[0x1E0C95B60]);
  v33 = v46;
  sub_1A93F7B84();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v33);
  v34 = (_QWORD *)swift_allocObject();
  v34[2] = v1;
  v34[3] = v16;
  v34[4] = v18;
  v35 = (_QWORD *)swift_allocObject();
  v35[2] = v1;
  v35[3] = v16;
  v35[4] = v18;
  sub_1A9066D74(&qword_1ED2AB940, &qword_1ED2AB948, MEMORY[0x1E0C95950]);
  swift_retain_n();
  swift_bridgeObjectRetain();
  v36 = v48;
  v37 = sub_1A93F7BA8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v36);
  *(_QWORD *)(v1 + 232) = v37;
  return swift_release();
}

void sub_1A9355F80(_QWORD *a1@<X8>)
{
  void *v2;
  id v3;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v2);

  *a1 = v3;
}

uint64_t sub_1A9356010(void **a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, void *, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28[3];
  uint64_t v29;
  uint64_t v30;

  v7 = *a1;
  v8 = a2 + 152;
  swift_beginAccess();
  sub_1A9359F40(v8, (uint64_t)&v26);
  if (v27)
  {
    sub_1A905D4AC(&v26, (uint64_t)v28);
    if (v7)
    {
      v9 = v29;
      v10 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      v11 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v10 + 32);
      v12 = v7;
      v11(a2, v7, v9, v10);

    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  }
  else
  {
    sub_1A905FD54((uint64_t)&v26, &qword_1ED2A81D8);
  }
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v13 = sub_1A93F7698();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A3F08);
  v14 = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  v15 = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  v16 = sub_1A93F7674();
  v17 = sub_1A93F8784();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v28[0] = v25;
    *(_DWORD *)v18 = 136315650;
    v19 = sub_1A93592F4();
    *(_QWORD *)&v26 = sub_1A906436C(v19, v20, v28);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v26 = sub_1A906436C(a3, a4, v28);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 22) = 2080;
    *(_QWORD *)&v26 = v7;
    v21 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8FE8);
    v22 = sub_1A93F8094();
    *(_QWORD *)&v26 = sub_1A906436C(v22, v23, v28);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A904E000, v16, v17, "%s Completed predicate rebuild (%s):  %s", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v25, -1, -1);
    MEMORY[0x1AF41411C](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();

  }
  *(_QWORD *)(a2 + 232) = 0;
  return swift_release();
}

uint64_t sub_1A9356350(void **a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  void *v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[5];

  v7 = *a1;
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v8 = sub_1A93F7698();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A3F08);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = v7;
  v10 = sub_1A93F7674();
  v11 = sub_1A93F8784();
  if (os_log_type_enabled(v10, v11))
  {
    v21 = a3;
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v26[0] = v22;
    *(_DWORD *)v12 = 136315650;
    v14 = sub_1A93592F4();
    sub_1A906436C(v14, v15, v26);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A906436C(v21, a4, v26);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 22) = 2112;
    v23[0] = v9;
    v16 = v9;
    sub_1A93F8AA8();
    *v13 = v9;

    _os_log_impl(&dword_1A904E000, v10, v11, "%s Received new predicate for build (%s): %@", (uint8_t *)v12, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v22, -1, -1);
    MEMORY[0x1AF41411C](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  swift_retain();
  sub_1A93F79BC();
  swift_release();
  v17 = (void *)v26[0];
  v26[0] = (uint64_t)v9;
  swift_retain();
  sub_1A93F79B0();
  swift_release();
  swift_beginAccess();
  sub_1A9359F40(a2 + 152, (uint64_t)v26);
  if (v26[3])
  {
    sub_1A905DC3C((uint64_t)v26, (uint64_t)v23);
    sub_1A905FD54((uint64_t)v26, &qword_1ED2A81D8);
    v18 = v24;
    v19 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    (*(void (**)(uint64_t, void *, id, uint64_t, uint64_t))(v19 + 8))(a2, v17, v9, v18, v19);

    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  }
  else
  {

    return sub_1A905FD54((uint64_t)v26, &qword_1ED2A81D8);
  }
}

uint64_t sub_1A93566CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint8_t *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47[5];
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;

  v40 = a1;
  v41 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB958);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB50);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = (uint8_t *)v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABE28);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A905DC3C(v2 + 24, (uint64_t)v47);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB6C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB630);
  if (swift_dynamicCast())
  {
    sub_1A905D4AC(&v44, (uint64_t)v48);
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v40 = v11;
    v41 = v10;
    v14 = sub_1A93F7698();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A3F08);
    swift_retain_n();
    v15 = sub_1A93F7674();
    v16 = sub_1A93F8784();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v47[0] = v18;
      *(_DWORD *)v17 = 136315138;
      v19 = sub_1A93592F4();
      *(_QWORD *)&v44 = sub_1A906436C(v19, v20, v47);
      sub_1A93F8AA8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v15, v16, "%s Using episode-only predicate", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v18, -1, -1);
      MEMORY[0x1AF41411C](v17, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v28 = v49;
    v29 = v50;
    __swift_project_boxed_opaque_existential_1(v48, v49);
    v47[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
    sub_1A93F7A58();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    v30 = v43;
    sub_1A93F7A34();
    (*(void (**)(char *, uint8_t *))(v42 + 8))(v9, v30);
    sub_1A9066D74(&qword_1ED2ABE20, &qword_1ED2ABE28, MEMORY[0x1E0C964C8]);
    v31 = v41;
    v32 = sub_1A93F7B24();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v31);
LABEL_20:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
    return v32;
  }
  v46 = 0;
  v44 = 0u;
  v45 = 0u;
  sub_1A905FD54((uint64_t)&v44, qword_1ED2AB638);
  sub_1A905DC3C(v2 + 24, (uint64_t)v47);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB6D0);
  if (swift_dynamicCast())
  {
    sub_1A905D4AC(&v44, (uint64_t)v48);
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v21 = sub_1A93F7698();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED2A3F08);
    swift_retain_n();
    v22 = sub_1A93F7674();
    v23 = sub_1A93F8784();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v47[0] = v25;
      *(_DWORD *)v24 = 136315138;
      v43 = v24 + 4;
      v26 = sub_1A93592F4();
      *(_QWORD *)&v44 = sub_1A906436C(v26, v27, v47);
      sub_1A93F8AA8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v22, v23, "%s Using per-show predicate", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v25, -1, -1);
      MEMORY[0x1AF41411C](v24, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_1A9356E14(v40, v41, v48, (uint64_t)v6);
    sub_1A9066D74(&qword_1ED2AB950, &qword_1ED2AB958, MEMORY[0x1E0C95950]);
    v32 = sub_1A93F7B24();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    goto LABEL_20;
  }
  v46 = 0;
  v44 = 0u;
  v45 = 0u;
  sub_1A905FD54((uint64_t)&v44, qword_1EEABE770);
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v33 = v11;
  v34 = sub_1A93F7698();
  __swift_project_value_buffer(v34, (uint64_t)qword_1ED2A3F08);
  v35 = sub_1A93F7674();
  v36 = sub_1A93F879C();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v37 = 0;
    _os_log_impl(&dword_1A904E000, v35, v36, "Received an invalid data source with the base protocol. Nothing will be evaluated", v37, 2u);
    MEMORY[0x1AF41411C](v37, -1, -1);
  }

  v48[0] = objc_msgSend((id)objc_opt_self(), sel_falsePredicate, v40, v41);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  sub_1A93F7A58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
  v38 = v43;
  sub_1A93F7A34();
  (*(void (**)(char *, uint8_t *))(v42 + 8))(v9, v38);
  sub_1A9066D74(&qword_1ED2ABE20, &qword_1ED2ABE28, MEMORY[0x1E0C964C8]);
  v32 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v10);
  return v32;
}

uint64_t sub_1A9356E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  id v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v45[3];
  id v46;
  char *v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66[2];
  id v67;

  v5 = v4;
  v51 = a2;
  v50 = a1;
  v65 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8F00);
  v11 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  v53 = v11;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A48A8);
  v15 = *(_QWORD *)(v14 - 8);
  v56 = v14;
  v57 = v15;
  MEMORY[0x1E0C80A78](v14);
  v47 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8E40);
  v61 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v54 = (char *)v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8FD0);
  v62 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v55 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8D40);
  v20 = *(_QWORD *)(v19 - 8);
  v63 = v19;
  v64 = v20;
  MEMORY[0x1E0C80A78](v19);
  v58 = (char *)v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45[0] = v4[32];
  v22 = v4[11];
  v23 = v4[12];
  __swift_project_boxed_opaque_existential_1(v4 + 8, v22);
  v25 = a3[3];
  v24 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v25);
  v26 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v25, v24);
  v27 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 40))(v26, v22, v23);

  *(_QWORD *)&v66[0] = v27;
  v67 = (id)v5[2];
  v28 = v67;
  v49 = sub_1A93F882C();
  v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56);
  v48(v9, 1, 1, v49);
  v46 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9078);
  v45[1] = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1ED2A9070, &qword_1ED2A9078, MEMORY[0x1E0C95D90]);
  v45[2] = sub_1A905FD90();
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v9, &qword_1ED2A1C88);

  swift_release();
  v29 = (_QWORD *)swift_allocObject();
  v30 = v50;
  v29[2] = v5;
  v29[3] = v30;
  v29[4] = v51;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8EB0);
  sub_1A9066D74(&qword_1ED2A8EF8, &qword_1ED2A8F00, MEMORY[0x1E0C95CB8]);
  sub_1A9066D74(&qword_1ED2A8EA8, &qword_1ED2A8EB0, MEMORY[0x1E0C95C10]);
  v31 = v47;
  v32 = v52;
  sub_1A93F7C5C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v32);
  sub_1A905DC3C((uint64_t)a3, (uint64_t)v66);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v5;
  sub_1A905D4AC(v66, v33 + 24);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8C28);
  v34 = MEMORY[0x1E0C95B78];
  sub_1A9066D74(&qword_1ED2A8E48, &qword_1ED2A48A8, MEMORY[0x1E0C95B78]);
  sub_1A9066D74(&qword_1ED2A8C20, &qword_1ED2A8C28, MEMORY[0x1E0C959A0]);
  v35 = v54;
  v36 = v56;
  sub_1A93F7C5C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v36);
  v37 = v46;
  *(_QWORD *)&v66[0] = v46;
  v48(v9, 1, 1, v49);
  sub_1A9066D74(&qword_1ED2A8E38, &qword_1ED2A8E40, v34);
  v38 = v37;
  v39 = v55;
  v40 = v59;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v9, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v40);
  sub_1A9066D74(&qword_1ED2A8FC8, &qword_1ED2A8FD0, MEMORY[0x1E0C95CB8]);
  v41 = v58;
  v42 = v60;
  sub_1A93F7C38();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v42);
  sub_1A9066D74(&qword_1ED2A8D38, &qword_1ED2A8D40, MEMORY[0x1E0C95B60]);
  v43 = v63;
  sub_1A93F7B84();
  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v41, v43);
}

uint64_t sub_1A9357488(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v6 = *a1;
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v7 = sub_1A93F7698();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED2A3F08);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v8 = sub_1A93F7674();
  v9 = sub_1A93F8790();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v19 = v18;
    *(_DWORD *)v10 = 136315650;
    v11 = sub_1A93592F4();
    sub_1A906436C(v11, v12, &v19);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A906436C(a3, a4, &v19);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 22) = 2080;
    v13 = swift_bridgeObjectRetain();
    v14 = MEMORY[0x1AF412034](v13, MEMORY[0x1E0DEA968]);
    v16 = v15;
    swift_bridgeObjectRelease();
    sub_1A906436C(v14, v16, &v19);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v8, v9, "%s Building new predicate for shows (%s): %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v18, -1, -1);
    MEMORY[0x1AF41411C](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v19 = v6;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
  sub_1A9066D74(&qword_1ED2A9330, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF38]);
  return sub_1A93F7860();
}

uint64_t sub_1A935778C(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = a1[1];
  v16 = *a1;
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v5 = sub_1A93F7698();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED2A3F08);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v6 = sub_1A93F7674();
  v7 = sub_1A93F8790();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v8 = 136315394;
    v10 = sub_1A93592F4();
    sub_1A906436C(v10, v11, &v17);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v12 = v16;
    sub_1A906436C(v16, v4, &v17);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v6, v7, "%s Constructing predicate for show %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v9, -1, -1);
    MEMORY[0x1AF41411C](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    v12 = v16;
  }
  v13 = a3[3];
  v14 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v13);
  v17 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v14 + 24))(v12, v4, v13, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A90C8);
  sub_1A9066D74(&qword_1ED2A90C0, &qword_1ED2A90C8, MEMORY[0x1E0C95D90]);
  sub_1A93F7B90();
  return swift_release();
}

uint64_t sub_1A9357A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  id v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52[2];
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  id v57[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8C78);
  v41 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8F70);
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8C08);
  v45 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8D98);
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v46 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A8F90);
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v49 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1A93F79BC();
  swift_release();
  v14 = v57[0];
  swift_beginAccess();
  sub_1A9359F40(v0 + 152, (uint64_t)v57);
  if (v57[3])
  {
    sub_1A905DC3C((uint64_t)v57, (uint64_t)&v54);
    sub_1A905FD54((uint64_t)v57, &qword_1ED2A81D8);
    v15 = v55;
    v16 = v56;
    __swift_project_boxed_opaque_existential_1(&v54, v55);
    (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v16 + 16))(v0, v14, v15, v16);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v54);
  }
  else
  {
    sub_1A905FD54((uint64_t)v57, &qword_1ED2A81D8);
  }
  v17 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 96);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 64), v17);
  v57[0] = (id)(*(uint64_t (**)(id, uint64_t, uint64_t))(v18 + 48))(v14, v17, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9078);
  sub_1A9066D74(&qword_1ED2A9070, &qword_1ED2A9078, MEMORY[0x1E0C95D90]);
  sub_1A93F7C08();
  swift_release();
  v57[0] = *(id *)(v0 + 16);
  v19 = v57[0];
  v20 = sub_1A93F882C();
  v35 = v14;
  v40 = v20;
  v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21 = (uint64_t)v4;
  v39(v4, 1, 1, v20);
  v38 = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1ED2A8C70, &qword_1ED2A8C78, MEMORY[0x1E0C95AD0]);
  v37 = sub_1A905FD90();
  v36 = v19;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v4, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
  sub_1A9066D74(&qword_1ED2A8F68, &qword_1ED2A8F70, MEMORY[0x1E0C95CB8]);
  v22 = v43;
  sub_1A93F7B84();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v22);
  swift_beginAccess();
  sub_1A905DC3C(v0 + 112, (uint64_t)v57);
  sub_1A905DC3C((uint64_t)v57, (uint64_t)&v54);
  v23 = swift_allocObject();
  sub_1A905D4AC(&v54, v23 + 16);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v57);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_1A9359F88;
  *(_QWORD *)(v24 + 24) = v23;
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A90D8);
  sub_1A9066D74(&qword_1ED2A8C00, &qword_1ED2A8C08, MEMORY[0x1E0C95950]);
  sub_1A9066D74(&qword_1ED2A90D0, &qword_1ED2A90D8, MEMORY[0x1E0C95D90]);
  v25 = v46;
  v26 = v44;
  sub_1A93F7C5C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v26);
  v27 = v36;
  v57[0] = v36;
  v39((char *)v21, 1, 1, v40);
  sub_1A9066D74(&qword_1ED2A8D90, &qword_1ED2A8D98, MEMORY[0x1E0C95B78]);
  v28 = v27;
  v29 = v49;
  v30 = v48;
  sub_1A93F7C80();
  sub_1A905FD54(v21, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v25, v30);
  sub_1A9066D74(&qword_1ED2A8F88, (uint64_t *)&unk_1ED2A8F90, MEMORY[0x1E0C95CB8]);
  swift_retain();
  v31 = v51;
  v32 = sub_1A93F7BA8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v29, v31);
  *(_QWORD *)(v1 + 240) = v32;
  swift_release();
  sub_1A905DC3C(v1 + 112, (uint64_t)&v54);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB6C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB7A0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1A905D4AC(v52, (uint64_t)v57);
    sub_1A93584B8((uint64_t)v57);

    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v57);
  }
  else
  {
    v53 = 0;
    memset(v52, 0, sizeof(v52));

    return sub_1A905FD54((uint64_t)v52, &qword_1ED2AB7A8);
  }
}

uint64_t sub_1A93581DC(void **a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, void *, uint64_t, uint64_t);
  id v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[5];

  v3 = *a1;
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v4 = sub_1A93F7698();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED2A3F08);
  swift_retain();
  v5 = v3;
  swift_retain();
  v6 = v3;
  v7 = sub_1A93F7674();
  v8 = sub_1A93F8784();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v24[0] = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = sub_1A93592F4();
    sub_1A906436C(v11, v12, v24);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v13 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8FE8);
    v14 = sub_1A93F8094();
    v21[0] = sub_1A906436C(v14, v15, v24);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A904E000, v7, v8, "%s Finished update for new matches: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v10, -1, -1);
    MEMORY[0x1AF41411C](v9, -1, -1);
  }
  else
  {
    swift_release_n();

  }
  *(_QWORD *)(a2 + 240) = 0;
  swift_release();
  swift_beginAccess();
  sub_1A9359F40(a2 + 152, (uint64_t)v24);
  if (!v24[3])
    return sub_1A905FD54((uint64_t)v24, &qword_1ED2A81D8);
  sub_1A905DC3C((uint64_t)v24, (uint64_t)v21);
  sub_1A905FD54((uint64_t)v24, &qword_1ED2A81D8);
  v16 = v22;
  v17 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  v18 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v17 + 24);
  v19 = v3;
  v18(a2, v3, v16, v17);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
}

uint64_t sub_1A93584B8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v45[3];
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61[3];

  v2 = v1;
  v53 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB9D0);
  v48 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABAB0);
  v10 = *(_QWORD *)(v9 - 8);
  v50 = v9;
  v51 = v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABA08);
  v14 = *(_QWORD *)(v13 - 8);
  v55 = v13;
  v56 = v14;
  MEMORY[0x1E0C80A78](v13);
  v49 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB9F8);
  v17 = *(_QWORD *)(v16 - 8);
  v57 = v16;
  v58 = v17;
  MEMORY[0x1E0C80A78](v16);
  v52 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABAC0);
  v20 = *(_QWORD *)(v19 - 8);
  v59 = v19;
  v60 = v20;
  MEMORY[0x1E0C80A78](v19);
  v54 = (char *)v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = v1[11];
  v23 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v22);
  swift_retain();
  sub_1A93F79BC();
  swift_release();
  v24 = *(void **)&v61[0];
  v25 = objc_msgSend(*(id *)&v61[0], "NOT");

  v26 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v23 + 56))(v25, v22, v23);
  *(_QWORD *)&v61[0] = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABAE0);
  v27 = MEMORY[0x1E0C95D90];
  sub_1A9066D74(&qword_1ED2ABAD8, &qword_1ED2ABAE0, MEMORY[0x1E0C95D90]);
  sub_1A93F7C08();
  swift_release();
  *(_QWORD *)&v61[0] = v2[2];
  v28 = *(void **)&v61[0];
  v29 = sub_1A93F882C();
  v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v47 = v29;
  v46(v5, 1, 1, v29);
  v45[2] = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1ED2AB9C8, &qword_1ED2AB9D0, MEMORY[0x1E0C95AD0]);
  v45[1] = sub_1A905FD90();
  v45[0] = v28;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v5, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v6);
  v30 = v2[13];
  *(_QWORD *)(swift_allocObject() + 16) = v30;
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABA38);
  sub_1A9066D74(&qword_1ED2ABAA8, &qword_1ED2ABAB0, MEMORY[0x1E0C95CB8]);
  sub_1A9066D74(&qword_1ED2ABA30, &qword_1ED2ABA38, MEMORY[0x1E0C95C10]);
  v31 = v49;
  v32 = v50;
  sub_1A93F7C50();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v32);
  sub_1A905DC3C(v53, (uint64_t)v61);
  v33 = swift_allocObject();
  sub_1A905D4AC(v61, v33 + 16);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = sub_1A91943F8;
  *(_QWORD *)(v34 + 24) = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A90D8);
  v35 = MEMORY[0x1E0C95B78];
  sub_1A9066D74(&qword_1ED2ABA00, &qword_1ED2ABA08, MEMORY[0x1E0C95B78]);
  sub_1A9066D74(&qword_1ED2A90D0, &qword_1ED2A90D8, v27);
  v36 = v52;
  v37 = v55;
  sub_1A93F7C5C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v31, v37);
  v38 = (void *)v45[0];
  *(_QWORD *)&v61[0] = v45[0];
  v46(v5, 1, 1, v47);
  sub_1A9066D74(&qword_1ED2AB9F0, &qword_1ED2AB9F8, v35);
  v39 = v38;
  v40 = v54;
  v41 = v57;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v5, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v58 + 8))(v36, v41);
  sub_1A9066D74(&qword_1ED2ABAB8, &qword_1ED2ABAC0, MEMORY[0x1E0C95CB8]);
  swift_retain();
  v42 = v59;
  v43 = sub_1A93F7BA8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v42);
  v2[31] = v43;
  return swift_release();
}

BOOL sub_1A9358AF8(_QWORD *a1)
{
  uint64_t v1;

  if (*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v1 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v1 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return v1 != 0;
}

uint64_t *sub_1A9358B58(uint64_t *result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *result;
  if ((unint64_t)*result >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1A93F8E5C();
    result = (uint64_t *)swift_bridgeObjectRelease();
    if (a2)
      goto LABEL_3;
  }
  else if (a2)
  {
LABEL_3:
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = a2;
    *(_QWORD *)(v4 + 24) = v3;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABDA8);
    sub_1A9066D74(&qword_1ED2ABDA0, &qword_1ED2ABDA8, MEMORY[0x1E0DEC858]);
    sub_1A93F81C0();
    return (uint64_t *)swift_release();
  }
  __break(1u);
  return result;
}

uint64_t *sub_1A9358C58@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  unint64_t v15;
  id *v16;
  uint64_t v17;
  unint64_t v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;

  v7 = *result;
  v8 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    v10 = sub_1A93F8E5C();
    result = (uint64_t *)swift_bridgeObjectRelease();
    if (v10 >= v8)
      v10 = v8;
    if (v10 < v7)
      goto LABEL_32;
    swift_bridgeObjectRetain();
    v21 = sub_1A93F8E5C();
    result = (uint64_t *)swift_bridgeObjectRelease();
    if (v21 >= v7)
      goto LABEL_8;
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v5 = a3;
  v4 = a4;
  v6 = a3 >> 62;
  if (a3 >> 62)
    goto LABEL_24;
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v9 >= v8)
    v10 = *result + a2;
  else
    v10 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v10 < v7)
    goto LABEL_32;
  if (v9 < v7)
    goto LABEL_28;
LABEL_8:
  if (v7 < 0)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1A93F8E5C();
    result = (uint64_t *)swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v11 < v10)
    goto LABEL_30;
  if (v10 < 0)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if ((v5 & 0xC000000000000001) != 0 && v7 != v10)
  {
    if (v7 < (unint64_t)v10)
    {
      sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
      v12 = v7;
      do
      {
        v13 = v12 + 1;
        sub_1A93F8CAC();
        v12 = v13;
      }
      while (v10 != v13);
      goto LABEL_19;
    }
LABEL_33:
    __break(1u);
    return result;
  }
LABEL_19:
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_1A93F8E68();
    v14 = v16;
    v7 = v17;
    v15 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = (id *)((v5 & 0xFFFFFFFFFFFFFF8) + 32);
    v15 = (2 * v10) | 1;
    swift_bridgeObjectRetain();
  }
  v19 = sub_1A93594E8(v14, v7, v15);
  swift_unknownObjectRelease();
  v20 = sub_1A915A55C((uint64_t)v19);
  result = (uint64_t *)swift_bridgeObjectRelease();
  *v4 = v20;
  return result;
}

uint64_t sub_1A9358E74(void **a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;

  v3 = *a1;
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v4 = sub_1A93F7698();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED2A3F08);
  swift_retain();
  v5 = v3;
  swift_retain();
  v6 = v3;
  v7 = sub_1A93F7674();
  v8 = sub_1A93F8784();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v17 = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = sub_1A93592F4();
    sub_1A906436C(v11, v12, &v17);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v13 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8FE8);
    v14 = sub_1A93F8094();
    sub_1A906436C(v14, v15, &v17);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A904E000, v7, v8, "%s Finished update for inverted matches: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v10, -1, -1);
    MEMORY[0x1AF41411C](v9, -1, -1);
  }
  else
  {
    swift_release_n();

  }
  *(_QWORD *)(a2 + 248) = 0;
  return swift_release();
}

uint64_t sub_1A93590B0()
{
  return sub_1A93590C8(2, (uint64_t)sub_1A935A0A0, (uint64_t)&block_descriptor_46_0);
}

uint64_t sub_1A93590C8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v7 = v3;
  v8 = sub_1A93F7D58();
  v19 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1A93F7DB8();
  v11 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v3 + 264);
  os_unfair_lock_lock((os_unfair_lock_t)(v14 + 20));
  *(_BYTE *)(v14 + 16) = a1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 20));
  aBlock[4] = a2;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = a3;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v13, v10, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v18);
  return swift_release();
}

void sub_1A93592B4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 264);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  if (*(_BYTE *)(v1 + 16) == 2)
    *(_BYTE *)(v1 + 16) = 3;
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 20));
}

uint64_t sub_1A93592F4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  if (v0[35])
  {
    v2 = v0[34];
  }
  else
  {
    v3 = v0[6];
    v4 = v0[7];
    __swift_project_boxed_opaque_existential_1(v0 + 3, v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    sub_1A93F810C();
    v2 = 91;
    v1[34] = 91;
    v1[35] = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t DebouncedEpisodeAndShowProcessor.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0(v0 + 112);
  sub_1A905FD54(v0 + 152, &qword_1ED2A81D8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DebouncedEpisodeAndShowProcessor.__deallocating_deinit()
{
  DebouncedEpisodeAndShowProcessor.deinit();
  return swift_deallocClassInstance();
}

uint64_t DebouncedEpisodeAndShowProcessor.State.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t DebouncedEpisodeAndShowProcessor.State.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

id *sub_1A93594E8(id *result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id *v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v14;

  v12 = a3 >> 1;
  v3 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v4 = MEMORY[0x1E0DEE9D8];
  if (!v3)
    return (id *)v4;
  v5 = result;
  v14 = MEMORY[0x1E0DEE9D8];
  result = (id *)sub_1A929E8F4(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v6 = 0;
    v4 = v14;
    while (1)
    {
      v7 = v6 + 1;
      if (__OFADD__(v6, 1))
        break;
      if (a2 + v6 >= v12 || v6 >= v3)
        goto LABEL_13;
      v9 = *(_QWORD *)(v14 + 16);
      v8 = *(_QWORD *)(v14 + 24);
      result = (id *)*(&v5[a2] + v6);
      v10 = result;
      if (v9 >= v8 >> 1)
        result = (id *)sub_1A929E8F4(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v14 + 16) = v9 + 1;
      v11 = v14 + 24 * v9;
      *(_QWORD *)(v11 + 32) = v10;
      *(_QWORD *)(v11 + 40) = 0;
      *(_BYTE *)(v11 + 48) = 2;
      ++v6;
      if (v7 == v3)
        return (id *)v4;
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1A9359620(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[2];
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD v45[5];
  uint64_t v46[5];
  uint64_t v47[5];
  uint64_t v48[6];

  v42 = a5;
  v41 = a3;
  v40 = sub_1A93F885C();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v39 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1A93F8808();
  MEMORY[0x1E0C80A78](v36);
  v37 = (char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v20);
  v35[1] = (char *)v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48[3] = a8;
  v48[4] = a11;
  v35[0] = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v48);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(boxed_opaque_existential_1, a1, a8);
  v47[3] = a7;
  v47[4] = a10;
  v23 = __swift_allocate_boxed_opaque_existential_1(v47);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(v23, a2, a7);
  v46[3] = a9;
  v46[4] = a12;
  v24 = __swift_allocate_boxed_opaque_existential_1(v46);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a9 - 8) + 32))(v24, v41, a9);
  *(_OWORD *)(a6 + 152) = 0u;
  *(_OWORD *)(a6 + 168) = 0u;
  *(_QWORD *)(a6 + 184) = 0;
  *(_OWORD *)(a6 + 216) = 0u;
  *(_OWORD *)(a6 + 232) = 0u;
  *(_QWORD *)(a6 + 248) = 0;
  *(_QWORD *)(a6 + 256) = 5;
  *(_QWORD *)(a6 + 272) = 0;
  *(_QWORD *)(a6 + 280) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9110);
  swift_allocObject();
  *(_QWORD *)(a6 + 192) = sub_1A93F798C();
  swift_allocObject();
  *(_QWORD *)(a6 + 200) = sub_1A93F798C();
  sub_1A905DC3C((uint64_t)v48, a6 + 24);
  sub_1A905DC3C((uint64_t)v47, a6 + 64);
  sub_1A905DC3C((uint64_t)v48, (uint64_t)v45);
  if (a4)
  {
    v25 = (uint64_t)a4;
  }
  else
  {
    v41 = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
    v43 = 0;
    v44 = 0xE000000000000000;
    sub_1A93F8C70();
    swift_bridgeObjectRelease();
    v43 = 0xD00000000000001DLL;
    v44 = 0x80000001A944D8B0;
    __swift_project_boxed_opaque_existential_1(v45, v45[3]);
    (*(void (**)(uint64_t))(v35[0] + 8))(a8);
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    v35[0] = v43;
    sub_1A93F7D88();
    v43 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
    sub_1A93F8B5C();
    (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v39, *MEMORY[0x1E0DEF8D0], v40);
    v25 = sub_1A93F888C();
  }
  v26 = a4;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
  *(_QWORD *)(a6 + 16) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9648);
  v27 = swift_allocObject();
  *(_DWORD *)(v27 + 20) = 0;
  *(_BYTE *)(v27 + 16) = 3;
  *(_QWORD *)(a6 + 264) = v27;
  v45[0] = objc_msgSend((id)objc_opt_self(), sel_falsePredicate);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9148);
  swift_allocObject();
  *(_QWORD *)(a6 + 208) = sub_1A93F79EC();
  sub_1A905DC3C((uint64_t)v46, a6 + 112);
  *(_QWORD *)(a6 + 104) = v42;
  v28 = *(_QWORD *)(a6 + 96);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a6 + 64), *(_QWORD *)(a6 + 88));
  v29 = *(_QWORD *)(a6 + 48);
  v30 = *(_QWORD *)(a6 + 56);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a6 + 24), v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
  (*(void (**)(void))(v28 + 24))();
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(a6 + 96);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a6 + 64), *(_QWORD *)(a6 + 88));
  v32 = *(_QWORD *)(a6 + 48);
  v33 = *(_QWORD *)(a6 + 56);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a6 + 24), v32);
  (*(void (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
  (*(void (**)(void))(v31 + 32))();
  swift_bridgeObjectRelease();
  sub_1A908D66C();
  sub_1A908DA9C();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
  return a6;
}

uint64_t sub_1A9359BB0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  void *v33;
  uint64_t v34;

  v33 = a4;
  v34 = a5;
  v29 = a2;
  v30 = a3;
  v28 = a1;
  v32 = a10;
  v31 = a11;
  v13 = *(_QWORD *)(a9 - 8);
  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DebouncedEpisodeAndShowProcessor();
  v26 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, v28, a8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v29, a7);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v30, a9);
  return sub_1A9359620((uint64_t)v25, (uint64_t)v20, (uint64_t)v15, v33, v34, v26, a7, a8, a9, v32, *((uint64_t *)&v32 + 1), v31);
}

uint64_t sub_1A9359D3C()
{
  uint64_t v0;

  return sub_1A9355630(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_1A9359D4C()
{
  uint64_t v0;

  return sub_1A93558C0(*(_QWORD *)(v0 + 16), v0 + 24);
}

unint64_t sub_1A9359D5C()
{
  unint64_t result;

  result = qword_1EEABE768;
  if (!qword_1EEABE768)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for DebouncedEpisodeAndShowProcessor.State, &type metadata for DebouncedEpisodeAndShowProcessor.State);
    atomic_store(result, (unint64_t *)&qword_1EEABE768);
  }
  return result;
}

uint64_t method lookup function for DebouncedEpisodeAndShowProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.__allocating_init(interval:dataSource:storage:delegate:workQueue:inverseBatchSize:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 480))();
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.stop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.requestEvaluation()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.requestPredicateBuild()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.set(observer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.set(delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t storeEnumTagSinglePayload for DebouncedEpisodeAndShowProcessor.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A9359E3C + 4 * byte_1A941FA45[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A9359E70 + 4 * asc_1A941FA40[v4]))();
}

uint64_t sub_1A9359E70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9359E78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9359E80);
  return result;
}

uint64_t sub_1A9359E8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9359E94);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A9359E98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9359EA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9359EAC()
{
  return swift_deallocObject();
}

uint64_t *sub_1A9359EBC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A9358B58(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A9359EC4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1A9359EE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9359F0C(void **a1)
{
  uint64_t v1;

  return sub_1A9358E74(a1, v1);
}

uint64_t sub_1A9359F14()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t *sub_1A9359F38@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A9358C58(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1A9359F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A81D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9359F88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_1A9359FD4(void **a1)
{
  uint64_t v1;

  return sub_1A93581DC(a1, v1);
}

uint64_t sub_1A9359FE0(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A9357488(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1A9359FF0(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A935778C(a1, *(_QWORD *)(v1 + 16), (_QWORD *)(v1 + 24));
}

uint64_t sub_1A935A000(void **a1)
{
  uint64_t v1;

  return sub_1A9356010(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t objectdestroy_26Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A935A03C(void **a1)
{
  uint64_t v1;

  return sub_1A9356350(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1A935A048(BOOL *a1@<X8>)
{
  uint64_t v1;

  sub_1A9355928(v1, a1);
}

uint64_t sub_1A935A058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A81D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1A935A0A0()
{
  uint64_t v0;

  sub_1A93592B4(v0);
}

uint64_t NSUserDefaults.debugTranscriptCacheEnabled.getter()
{
  return sub_1A90A427C(0xD00000000000001BLL, 0x80000001A944BCE0, 1);
}

id sub_1A935A0E8()
{
  return (id)sub_1A93F8010();
}

unint64_t static NSUserDefaults.showListShowsAllShowsKey.getter()
{
  return 0xD000000000000018;
}

id sub_1A935A130(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  v2 = (void *)sub_1A93F8010();
  v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  return v3;
}

id NSUserDefaults.showListShowsAllShows.getter()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1A93F8010();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void sub_1A935A1F4(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  v2 = (void *)sub_1A93F8400();
  v3 = (id)sub_1A93F8010();
  objc_msgSend(v1, sel_setValue_forKey_, v2, v3);

}

void NSUserDefaults.showListShowsAllShows.setter()
{
  sub_1A935AD4C();
}

id NSUserDefaults.showListSortType.getter()
{
  void *v0;
  id result;
  void *v2;

  result = objc_msgSend(v0, sel_stringForKey_, CFSTR("kShowsSortOrderKey"));
  if (result)
  {
    v2 = result;
    sub_1A93F8040();

    LODWORD(result) = _s18PodcastsFoundation13ShowsSortTypeO8rawValueACSgSS_tcfC_0();
    if (result == 8)
      return 0;
    else
      return (id)result;
  }
  return result;
}

id sub_1A935A300@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;
  void *v4;
  char v5;

  result = objc_msgSend(*a1, sel_stringForKey_, CFSTR("kShowsSortOrderKey"));
  if (result)
  {
    v4 = result;
    sub_1A93F8040();

    result = (id)_s18PodcastsFoundation13ShowsSortTypeO8rawValueACSgSS_tcfC_0();
    if (result == 8)
      v5 = 0;
    else
      v5 = (char)result;
  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
  return result;
}

void NSUserDefaults.showListSortType.setter(char a1)
{
  __asm { BR              X10 }
}

void sub_1A935A3C4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  void *v15;

  v15 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setValue_forKey_, v15, CFSTR("kShowsSortOrderKey"));

}

void (*NSUserDefaults.showListSortType.modify(_QWORD *a1))(uint64_t a1)
{
  void *v1;
  _BYTE *v2;
  id v3;
  void *v4;
  char v5;
  char v6;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = objc_msgSend(v1, sel_stringForKey_, CFSTR("kShowsSortOrderKey"));
  if (v3)
  {
    v4 = v3;
    sub_1A93F8040();

    v5 = _s18PodcastsFoundation13ShowsSortTypeO8rawValueACSgSS_tcfC_0();
    if (v5 == 8)
      v6 = 0;
    else
      v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  *v2 = v6;
  return sub_1A935A548;
}

void sub_1A935A548(uint64_t a1)
{
  NSUserDefaults.showListSortType.setter(*(_BYTE *)(a1 + 8));
}

id sub_1A935A56C(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_dictionaryForKey_, CFSTR("kEpisodeListSortOrderKey"));
  if (v2)
  {
    v3 = v2;
    sub_1A93F7EFC();

    v4 = (void *)sub_1A93F7ED8();
    swift_bridgeObjectRelease();
  }
  else
  {

    v4 = 0;
  }
  return v4;
}

uint64_t NSUserDefaults.episodeListSortTypeDictionary.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_dictionaryForKey_, CFSTR("kEpisodeListSortOrderKey"));
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1A93F7EFC();

  return v3;
}

uint64_t sub_1A935A6A8(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  uint64_t v5;
  id v6;

  if (a3)
  {
    sub_1A93F7EFC();
    v4 = a1;
    v5 = sub_1A93F7ED8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = a1;
    v5 = 0;
  }
  objc_msgSend(a1, sel_setValue_forKey_, v5, CFSTR("kEpisodeListSortOrderKey"));

  return swift_unknownObjectRelease();
}

uint64_t NSUserDefaults.episodeListSortTypeDictionary.setter(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  if (a1)
  {
    v2 = sub_1A93F7ED8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  objc_msgSend(v1, sel_setValue_forKey_, v2, CFSTR("kEpisodeListSortOrderKey"));
  return swift_unknownObjectRelease();
}

void sub_1A935A7E4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = objc_msgSend(*a1, sel_episodeListSortTypeDictionary);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1A93F7EFC();

  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
}

void sub_1A935A85C(_QWORD *a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*a1)
    v3 = sub_1A93F7ED8();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setEpisodeListSortTypeDictionary_);

}

void sub_1A935A8CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - v9;
  if (a3)
  {
    sub_1A93F7368();
    v11 = sub_1A93F738C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 0, 1, v11);
  }
  else
  {
    v11 = sub_1A93F738C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  }
  sub_1A90A1CA8((uint64_t)v10, (uint64_t)v7);
  sub_1A93F738C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11);
  v14 = a1;
  v15 = 0;
  if (v13 != 1)
  {
    v15 = sub_1A93F7314();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
  }
  objc_msgSend(v14, sel_setObject_forKey_, v15, CFSTR("MTLastAppUseDate"));
  swift_unknownObjectRelease();
  sub_1A905FD54((uint64_t)v10, (uint64_t *)&unk_1ED2AD360);

}

uint64_t NSUserDefaults.lastAppUseDate.setter(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90A1CA8(a1, (uint64_t)v6);
  v7 = sub_1A93F738C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    v9 = sub_1A93F7314();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  objc_msgSend(v2, sel_setObject_forKey_, v9, CFSTR("MTLastAppUseDate"));
  swift_unknownObjectRelease();
  return sub_1A905FD54(a1, (uint64_t *)&unk_1ED2AD360);
}

uint64_t sub_1A935AB44@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*a1, sel_lastAppUseDate);
  if (v3)
  {
    v4 = v3;
    sub_1A93F7368();

    v5 = sub_1A93F738C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 0;
  }
  else
  {
    v5 = sub_1A93F738C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void sub_1A935ABC8(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90A1CA8(a1, (uint64_t)v6);
  v7 = *a2;
  v8 = sub_1A93F738C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    v10 = (void *)sub_1A93F7314();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setLastAppUseDate_, v10);

}

unint64_t static NSUserDefaults.debugTranscriptCacheEnabled.getter()
{
  return 0xD00000000000001BLL;
}

void sub_1A935ACC0(uint64_t a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;

  v2 = *a2;
  v3 = (void *)sub_1A93F8400();
  v4 = (id)sub_1A93F8010();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);

}

void NSUserDefaults.debugTranscriptCacheEnabled.setter()
{
  sub_1A935AD4C();
}

void sub_1A935AD4C()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1A93F8400();
  v2 = (id)sub_1A93F8010();
  objc_msgSend(v0, sel_setValue_forKey_, v1, v2);

}

void (*NSUserDefaults.debugTranscriptCacheEnabled.modify(uint64_t a1))(void **a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = sub_1A90A427C(0xD00000000000001BLL, 0x80000001A944BCE0, 1) & 1;
  return sub_1A935AE08;
}

void sub_1A935AE08(void **a1)
{
  void *v1;
  void *v2;
  id v3;

  v1 = *a1;
  v3 = (id)sub_1A93F8400();
  v2 = (void *)sub_1A93F8010();
  objc_msgSend(v1, sel_setValue_forKey_, v3, v2);

}

char *keypath_get_selector_showListShowsAllShows()
{
  return sel_showListShowsAllShows;
}

id sub_1A935AE84@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_showListShowsAllShows);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1A935AEB4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setShowListShowsAllShows_, *a1);
}

void sub_1A935AECC(char *a1)
{
  NSUserDefaults.showListSortType.setter(*a1);
}

char *keypath_get_selector_episodeListSortTypeDictionary()
{
  return sel_episodeListSortTypeDictionary;
}

char *keypath_get_selector_lastAppUseDate()
{
  return sel_lastAppUseDate;
}

uint64_t sub_1A935AF18@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A90A427C(0xD00000000000001BLL, 0x80000001A944BCE0, 1);
  *a1 = result & 1;
  return result;
}

uint64_t AnyAssetBackgroundSession.start(task:for:)()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t sub_1A935AF84()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1A935AFDC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 16))();
}

uint64_t dispatch thunk of AssetURLSessionProtocol.start(task:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t EmitLifecycle.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t EmitLifecycle.trace.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A9062170(v2 + *(int *)(a1 + 36), a2, &qword_1ED2AD0C0);
}

uint64_t EmitLifecycle.name.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 40));
}

uint64_t EmitLifecycle.context.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t EmitLifecycle.definesInterval.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 48));
}

uint64_t EmitLifecycle.verbose.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

void EmitLifecycle.LifecycleEmitting.__allocating_init(subscriber:trace:name:context:definesInterval:verbose:)()
{
  sub_1A9062C44();
}

uint64_t sub_1A935B0E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 88) - 8) + 8))(v1);
  return a1;
}

uint64_t sub_1A935B114(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1A93F76D4();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v6 + 16))(v5, a1, v3);
  return sub_1A935B194((uint64_t)v5);
}

uint64_t sub_1A935B194(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_1ED2B8990;
  swift_beginAccess();
  v4 = sub_1A93F76D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1A935B200())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t EmitLifecycle.LifecycleEmitting.subscriber.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 88) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 120));
}

uint64_t EmitLifecycle.LifecycleEmitting.trace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A905DC3C(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128), a1);
}

uint64_t EmitLifecycle.LifecycleEmitting.name.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
}

uint64_t EmitLifecycle.LifecycleEmitting.context.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EmitLifecycle.LifecycleEmitting.definesInterval.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
}

uint64_t EmitLifecycle.LifecycleEmitting.verbose.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160));
}

uint64_t *EmitLifecycle.LifecycleEmitting.init(subscriber:trace:name:context:definesInterval:verbose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, int a8, unsigned __int8 a9)
{
  uint64_t *v9;
  uint64_t v11;
  uint64_t *v12;

  v11 = *v9;
  v12 = sub_1A9062D00(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v11 + 88) - 8) + 8))(a1);
  return v12;
}

uint64_t sub_1A935B350@<X0>(uint64_t a1@<X8>)
{
  return sub_1A906335C(a1);
}

uint64_t sub_1A935B370@<X0>(uint64_t a1@<X8>)
{
  return sub_1A906335C(a1);
}

uint64_t sub_1A935B394()
{
  return 32;
}

__n128 sub_1A935B3A0(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t *sub_1A935B3AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 18 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 24);
    if (v12 < 0xFFFFFFFF)
    {
      v13 = *(_OWORD *)v11;
      v14 = *(_OWORD *)(v11 + 16);
      *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
      *(_OWORD *)v10 = v13;
      *(_OWORD *)(v10 + 16) = v14;
    }
    else
    {
      *(_QWORD *)(v10 + 24) = v12;
      *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
      (**(void (***)(unint64_t, unint64_t))(v12 - 8))(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8, v11);
    }
    v15 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
    v16 = (v11 + 47) & 0xFFFFFFFFFFFFFFF8;
    v17 = *(_OWORD *)v16;
    *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
    *(_OWORD *)v15 = v17;
    v18 = (v10 + 71) & 0xFFFFFFFFFFFFFFF8;
    v19 = (v11 + 71) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
    *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
    *(_BYTE *)(v18 + 17) = *(_BYTE *)(v19 + 17);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1A935B4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 24);
  if (*(_QWORD *)(v7 + 24) < 0xFFFFFFFFuLL)
  {
    if (v9 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(v7 + 24) = v9;
      *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
      (**(void (***)(unint64_t, unint64_t))(v9 - 8))(v7, v8);
      goto LABEL_8;
    }
LABEL_7:
    v10 = *(_OWORD *)v8;
    v11 = *(_OWORD *)(v8 + 16);
    *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
    *(_OWORD *)v7 = v10;
    *(_OWORD *)(v7 + 16) = v11;
    goto LABEL_8;
  }
  if (v9 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_0(v7);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v7, (uint64_t *)v8);
LABEL_8:
  v12 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  v14 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_BYTE *)(v14 + 17) = *(_BYTE *)(v15 + 17);
  return a1;
}

uint64_t sub_1A935B624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  v11 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_BYTE *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_BYTE *)(v11 + 16) = v13;
  v14 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_BYTE *)(v14 + 17) = *(_BYTE *)(v15 + 17);
  return a1;
}

uint64_t sub_1A935B6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v7 + 24) >= 0xFFFFFFFFuLL)
    __swift_destroy_boxed_opaque_existential_0((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  v11 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  v13 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  return a1;
}

uint64_t sub_1A935B7AC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v14 = *(_QWORD *)(((((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFF8) + 8);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v8 = ((((v7 + 7) & 0xFFFFFFF8) + 71) & 0xFFFFFFF8) + 18;
    v9 = (a2 - v6 + 0xFFFF) >> (8 * v8);
    if (v8 <= 3)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A935B840 + 4 * byte_1A941FC80[v12]))();
  }
}

void sub_1A935B8D8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 18;
  if (v6 >= a3)
  {
    v10 = 0u;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 0xFFFF) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  v11 = ~v6 + a2;
  bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 18);
  if (v7 > 3)
    *a1 = v11;
  else
    *(_WORD *)a1 = v11;
  __asm { BR              X11 }
}

void sub_1A935B9F4(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = a1;
  JUMPOUT(0x1A935BA74);
}

void sub_1A935B9FC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1A935BA04);
  JUMPOUT(0x1A935BA74);
}

void sub_1A935BA50(__int16 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = a1;
  JUMPOUT(0x1A935BA74);
}

void sub_1A935BA58(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = a1;
  JUMPOUT(0x1A935BA74);
}

uint64_t sub_1A935BA60(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x1A935BA6CLL);
    *(_QWORD *)(((((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x1A935BA74);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t method lookup function for EmitLifecycle.LifecycleEmitting()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.combineIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.combineIdentifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.combineIdentifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.__allocating_init(subscriber:trace:name:context:definesInterval:verbose:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.request(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.receive(subscription:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.cancel()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.receive(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.receive(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

unint64_t sub_1A935BB08(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v3 = a1;
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1A929E380(0, v1, 0);
  v2 = v38;
  result = sub_1A925D258(v3);
  v6 = 0;
  v7 = v3 + 64;
  v29 = v3 + 80;
  v30 = v1;
  v31 = v5;
  v32 = v3 + 64;
  v33 = v3;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(_BYTE *)(v3 + 32))
  {
    v10 = result >> 6;
    if ((*(_QWORD *)(v7 + 8 * (result >> 6)) & (1 << result)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_24;
    v34 = v6;
    v35 = 1 << result;
    v11 = *(_QWORD *)(v3 + 56);
    v12 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 96 * result);
    v13 = *v12;
    v14 = v12[6];
    v15 = v12[7];
    v37 = v2;
    v17 = v12[8];
    v16 = v12[9];
    v18 = v12[10];
    v19 = *(_QWORD *)(v11 + 8 * result);
    v36 = result;
    swift_bridgeObjectRetain();
    sub_1A909F54C(v14, v15, v17, v16, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A909F54C(v14, v15, v17, v16, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1A909F000(v14, v15, v17, v16, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v20 = v16;
    v2 = v37;
    sub_1A909F000(v14, v15, v17, v20, v18);
    result = swift_bridgeObjectRelease();
    v22 = *(_QWORD *)(v37 + 16);
    v21 = *(_QWORD *)(v37 + 24);
    if (v22 >= v21 >> 1)
    {
      result = sub_1A929E380(v21 > 1, v22 + 1, 1);
      v2 = v37;
    }
    *(_QWORD *)(v2 + 16) = v22 + 1;
    v23 = v2 + 16 * v22;
    *(_QWORD *)(v23 + 32) = v13;
    *(_QWORD *)(v23 + 40) = v19;
    v3 = v33;
    v8 = 1 << *(_BYTE *)(v33 + 32);
    if (v36 >= v8)
      goto LABEL_25;
    v7 = v32;
    v24 = *(_QWORD *)(v32 + 8 * v10);
    if ((v24 & v35) == 0)
      goto LABEL_26;
    v5 = v31;
    if (*(_DWORD *)(v33 + 36) != v31)
      goto LABEL_27;
    v25 = v24 & (-2 << (v36 & 0x3F));
    if (v25)
    {
      v8 = __clz(__rbit64(v25)) | v36 & 0xFFFFFFFFFFFFFFC0;
      v9 = v30;
    }
    else
    {
      v26 = v10 + 1;
      v27 = (unint64_t)(v8 + 63) >> 6;
      v9 = v30;
      if (v10 + 1 < v27)
      {
        v28 = *(_QWORD *)(v32 + 8 * v26);
        if (v28)
        {
LABEL_20:
          v8 = __clz(__rbit64(v28)) + (v26 << 6);
        }
        else
        {
          while (v27 - 2 != v10)
          {
            v28 = *(_QWORD *)(v29 + 8 * v10++);
            if (v28)
            {
              v26 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v6 = v34 + 1;
    result = v8;
    if (v34 + 1 == v9)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

PodcastsFoundation::PodcastStateModel::SanitizedState __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PodcastStateModel.sanitizedState()()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  unsigned __int8 v3;
  _BYTE *v5;

  v1 = v0[40];
  v2 = v0[41];
  v3 = v0[42];
  if (v2 == 1)
  {
    if ((v3 & 1) == 0 && (v1 & 1) == 0)
      return 0;
    goto LABEL_7;
  }
  if ((v3 & 1) != 0)
  {
    if ((v1 & 1) != 0)
    {
LABEL_7:
      sub_1A928E490();
      swift_allocError();
      *v5 = v2;
      v5[1] = v3;
      v5[2] = v1;
      return swift_willThrow();
    }
    return 2;
  }
  else if (v1)
  {
    return 3;
  }
  else
  {
    return 1;
  }
}

PodcastsFoundation::EpisodeStateChanges __swiftcall EpisodeStateChanges.selectingUpdates(from:)(PodcastsFoundation::EpisodeStateDomain from)
{
  _QWORD *v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  _BYTE v11[32];
  PodcastsFoundation::EpisodeStateChanges result;

  v3 = v1;
  v4 = *v2;
  v5 = v2[2];
  v11[16] = *(_BYTE *)from;
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1A935E104(v6, (uint64_t (*)(uint64_t *, uint64_t))sub_1A92921B0, (uint64_t)v11);
  swift_bridgeObjectRelease();
  *v3 = v4;
  v3[1] = v7;
  v3[2] = v5;
  swift_bridgeObjectRetain();
  v8 = (void *)swift_bridgeObjectRetain();
  result.deleted._rawValue = v10;
  result.updated._rawValue = v9;
  result.inserted._rawValue = v8;
  return result;
}

BOOL EpisodeStateChanges.isEmpty.getter()
{
  _QWORD *v0;

  if (*(_QWORD *)(*v0 + 16))
    return 0;
  if (*(_QWORD *)(v0[1] + 16))
    return 0;
  return *(_QWORD *)(v0[2] + 16) == 0;
}

double EpisodeStateModel.init(episode:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  char v7;
  double result;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[5];
  uint64_t v14;
  __int16 v15;
  char v16;

  v4 = MTEpisode.allEpisodeStateIdentifiers.getter();
  sub_1A909F660(a1, v4, (uint64_t)v13);
  v5 = v14;
  v6 = v15;
  v7 = v16;
  result = *(double *)v13;
  v9 = v13[1];
  v10 = v13[2];
  v11 = v13[3];
  v12 = v13[4];
  *(_OWORD *)a2 = v13[0];
  *(_OWORD *)(a2 + 16) = v9;
  *(_OWORD *)(a2 + 32) = v10;
  *(_OWORD *)(a2 + 48) = v11;
  *(_OWORD *)(a2 + 64) = v12;
  *(_QWORD *)(a2 + 80) = v5;
  *(_BYTE *)(a2 + 90) = v7;
  *(_WORD *)(a2 + 88) = v6;
  return result;
}

PodcastsFoundation::EpisodeStateChanges __swiftcall EpisodeStateChanges.init(inserted:updated:deleted:)(Swift::OpaquePointer inserted, Swift::OpaquePointer updated, Swift::OpaquePointer deleted)
{
  Swift::OpaquePointer *v3;
  PodcastsFoundation::EpisodeStateChanges result;

  v3->_rawValue = inserted._rawValue;
  v3[1]._rawValue = updated._rawValue;
  v3[2]._rawValue = deleted._rawValue;
  result.deleted = deleted;
  result.updated = updated;
  result.inserted = inserted;
  return result;
}

uint64_t EpisodeStateDomain.propertiesToTrack.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*v0)
  {
    if (*v0 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
      v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1A940F470;
      *(_QWORD *)(v1 + 32) = sub_1A93F8040();
      *(_QWORD *)(v1 + 40) = v2;
      *(_QWORD *)(v1 + 48) = sub_1A93F8040();
      *(_QWORD *)(v1 + 56) = v3;
      *(_QWORD *)(v1 + 64) = sub_1A93F8040();
      *(_QWORD *)(v1 + 72) = v4;
      *(_QWORD *)(v1 + 80) = sub_1A93F8040();
      *(_QWORD *)(v1 + 88) = v5;
      *(_QWORD *)(v1 + 96) = sub_1A93F8040();
      *(_QWORD *)(v1 + 104) = v6;
      *(_QWORD *)(v1 + 112) = sub_1A93F8040();
      *(_QWORD *)(v1 + 120) = v7;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
      v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1A9405520;
      *(_QWORD *)(v1 + 32) = sub_1A93F8040();
      *(_QWORD *)(v1 + 40) = v10;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
    v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1A9405950;
    *(_QWORD *)(v1 + 32) = sub_1A93F8040();
    *(_QWORD *)(v1 + 40) = v8;
    *(_QWORD *)(v1 + 48) = sub_1A93F8040();
    *(_QWORD *)(v1 + 56) = v9;
  }
  return v1;
}

PodcastsFoundation::EpisodeStateDomain_optional __swiftcall EpisodeStateDomain.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::EpisodeStateDomain_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static EpisodeStateDomain.allCases.getter()
{
  return &unk_1E54D7AE8;
}

uint64_t sub_1A935C184(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92F93D4(*a1, *a2);
}

uint64_t sub_1A935C190()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A935C23C()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A935C2C4()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::EpisodeStateDomain_optional sub_1A935C36C(Swift::String *a1)
{
  return EpisodeStateDomain.init(rawValue:)(*a1);
}

void sub_1A935C378(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = 0xED00006574617453;
  v3 = *v1;
  v4 = 0xE900000000000065;
  v5 = 0x7461745379616C70;
  if (v3 != 1)
  {
    v5 = 0x6B72616D6B6F6F62;
    v4 = 0xED00006574617453;
  }
  v6 = v3 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x64616F6C6E776F64;
  if (!v6)
    v2 = v4;
  *a1 = v7;
  a1[1] = v2;
}

void sub_1A935C3E4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E54D74D8;
}

uint64_t static EpisodeStateChanges.noChanges.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED2A2888 != -1)
    swift_once();
  v2 = *((_QWORD *)&xmmword_1ED2A2868 + 1);
  v3 = qword_1ED2A2878;
  *a1 = xmmword_1ED2A2868;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL sub_1A935C468(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = EpisodeStateDomain.propertiesToTrack.getter();
  swift_bridgeObjectRetain();
  v4 = sub_1A935D458(v3, a2);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 16);
  swift_release();
  return v5 != 0;
}

uint64_t EpisodeStateChanges.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *v0;
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  v2 = MEMORY[0x1E0DEE9D8];
  v11 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain_n();
    v4 = 32;
    do
    {
      v5 = swift_bridgeObjectRetain();
      sub_1A91355C8(v5);
      v4 += 96;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease_n();
    v2 = v11;
  }
  MEMORY[0x1AF412034](v2, &type metadata for EpisodeStateIdentifier);
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1A935BB08(v6);
  swift_bridgeObjectRelease();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4170);
  MEMORY[0x1AF412034](v7, v8);
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  v9 = swift_bridgeObjectRetain();
  MEMORY[0x1AF412034](v9, &type metadata for EpisodeStateIdentifier);
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x6465747265736E69;
}

uint64_t EpisodeStateModel.isDownloaded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t EpisodeStateModel.isFromITunesSync.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t EpisodeStateModel.isBookmarked.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t EpisodeStateModel.isFromHiddenShow.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t EpisodeStateModel.isPartiallyPlayed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 12);
}

uint64_t EpisodeStateModel.isPlayedAndNotBackcatalog.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 13);
}

double EpisodeStateModel.position.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double EpisodeStateModel.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double EpisodeStateModel.lastDatePlayed.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t EpisodeStateModel.shouldRemoveDownload.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t EpisodeStateModel.podcastStateModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int16 v8;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  v7 = *(_BYTE *)(v1 + 90);
  v8 = *(_WORD *)(v1 + 88);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 42) = v7;
  *(_WORD *)(a1 + 40) = v8;
  return sub_1A909F54C(v2, v3, v4, v5, v6);
}

uint64_t EpisodeStateModel.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = *v2;
  v14 = v2[7];
  v15 = v2[6];
  v12 = v2[8];
  v13 = v2[9];
  v16 = v2[10];
  swift_bridgeObjectRetain();
  sub_1A935D7E8(a1, v4);
  swift_bridgeObjectRelease();
  sub_1A93F92F4();
  sub_1A93F92F4();
  sub_1A93F92F4();
  sub_1A93F92F4();
  sub_1A93F92F4();
  sub_1A93F92F4();
  sub_1A93F930C();
  sub_1A93F930C();
  sub_1A93F930C();
  sub_1A93F92F4();
  if (!v16)
    return sub_1A93F92F4();
  sub_1A93F92F4();
  if ((_BYTE)v12)
  {
    v6 = v14;
    v5 = v15;
    v7 = v13;
    sub_1A93F92E8();
    sub_1A909F54C(v15, v14, v12, v13, v16);
    if (v12 == 1)
    {
      sub_1A909F644(v15, v14, 1u);
      sub_1A93F7FBC();
      v8 = v15;
      v9 = v14;
      v10 = 1;
    }
    else
    {
      sub_1A909F644(v15, v14, 2u);
      sub_1A93F7FBC();
      v8 = v15;
      v9 = v14;
      v10 = 2;
    }
    sub_1A909F1A0(v8, v9, v10);
  }
  else
  {
    sub_1A93F92E8();
    v5 = v15;
    sub_1A93F930C();
    v6 = v14;
    sub_1A909F644(v15, v14, 0);
    swift_bridgeObjectRetain();
    v7 = v13;
  }
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  sub_1A93F92F4();
  sub_1A93F92F4();
  sub_1A93F92F4();
  return sub_1A909F000(v5, v6, v12, v7, v16);
}

uint64_t EpisodeStateModel.hashValue.getter()
{
  uint64_t *v0;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  __int16 v10;
  char v11;
  __int128 v12;
  _BYTE v14[72];
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int16 v28;
  char v29;

  v1 = *((_BYTE *)v0 + 8);
  v2 = *((_BYTE *)v0 + 9);
  v3 = *((_BYTE *)v0 + 10);
  v4 = *((_BYTE *)v0 + 11);
  v5 = *((_BYTE *)v0 + 12);
  v6 = *((_BYTE *)v0 + 13);
  v7 = v0[4];
  v8 = *((_BYTE *)v0 + 40);
  v9 = v0[10];
  v10 = *((_WORD *)v0 + 44);
  v11 = *((_BYTE *)v0 + 90);
  v15 = *v0;
  v16 = v1;
  v17 = v2;
  v18 = v3;
  v19 = v4;
  v20 = v5;
  v21 = v6;
  v22 = *((_OWORD *)v0 + 1);
  v23 = v7;
  v24 = v8;
  v12 = *((_OWORD *)v0 + 4);
  v25 = *((_OWORD *)v0 + 3);
  v26 = v12;
  v27 = v9;
  v29 = v11;
  v28 = v10;
  sub_1A93F92DC();
  EpisodeStateModel.hash(into:)((uint64_t)v14);
  return sub_1A93F9324();
}

uint64_t sub_1A935CA6C()
{
  uint64_t *v0;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  __int16 v10;
  char v11;
  __int128 v12;
  _BYTE v14[72];
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int16 v28;
  char v29;

  v1 = *((_BYTE *)v0 + 8);
  v2 = *((_BYTE *)v0 + 9);
  v3 = *((_BYTE *)v0 + 10);
  v4 = *((_BYTE *)v0 + 11);
  v5 = *((_BYTE *)v0 + 12);
  v6 = *((_BYTE *)v0 + 13);
  v7 = v0[4];
  v8 = *((_BYTE *)v0 + 40);
  v9 = v0[10];
  v10 = *((_WORD *)v0 + 44);
  v11 = *((_BYTE *)v0 + 90);
  v15 = *v0;
  v16 = v1;
  v17 = v2;
  v18 = v3;
  v19 = v4;
  v20 = v5;
  v21 = v6;
  v22 = *((_OWORD *)v0 + 1);
  v23 = v7;
  v24 = v8;
  v12 = *((_OWORD *)v0 + 4);
  v25 = *((_OWORD *)v0 + 3);
  v26 = v12;
  v27 = v9;
  v29 = v11;
  v28 = v10;
  sub_1A93F92DC();
  EpisodeStateModel.hash(into:)((uint64_t)v14);
  return sub_1A93F9324();
}

uint64_t sub_1A935CB20()
{
  uint64_t *v0;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  __int16 v10;
  char v11;
  __int128 v12;
  _BYTE v14[72];
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int16 v28;
  char v29;

  v1 = *((_BYTE *)v0 + 8);
  v2 = *((_BYTE *)v0 + 9);
  v3 = *((_BYTE *)v0 + 10);
  v4 = *((_BYTE *)v0 + 11);
  v5 = *((_BYTE *)v0 + 12);
  v6 = *((_BYTE *)v0 + 13);
  v7 = v0[4];
  v8 = *((_BYTE *)v0 + 40);
  v9 = v0[10];
  v10 = *((_WORD *)v0 + 44);
  v11 = *((_BYTE *)v0 + 90);
  v15 = *v0;
  v16 = v1;
  v17 = v2;
  v18 = v3;
  v19 = v4;
  v20 = v5;
  v21 = v6;
  v22 = *((_OWORD *)v0 + 1);
  v23 = v7;
  v24 = v8;
  v12 = *((_OWORD *)v0 + 4);
  v25 = *((_OWORD *)v0 + 3);
  v26 = v12;
  v27 = v9;
  v29 = v11;
  v28 = v10;
  sub_1A93F92DC();
  EpisodeStateModel.hash(into:)((uint64_t)v14);
  return sub_1A93F9324();
}

uint64_t PodcastStateModel.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1A909F644(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
  return v1;
}

uint64_t PodcastStateModel.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastStateModel.isHidden.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t PodcastStateModel.isFollowed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t PodcastStateModel.isImplicitlyFollowed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 42);
}

uint64_t PodcastStateModel.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v1 = *(_QWORD *)v0;
  if (*(_BYTE *)(v0 + 16))
  {
    v2 = *(_QWORD *)(v0 + 8);
    if (*(_BYTE *)(v0 + 16) == 1)
    {
      sub_1A93F92E8();
      swift_bridgeObjectRetain();
      sub_1A93F7FBC();
      v3 = v1;
      v4 = v2;
      v5 = 1;
    }
    else
    {
      sub_1A93F92E8();
      swift_bridgeObjectRetain();
      sub_1A93F7FBC();
      v3 = v1;
      v4 = v2;
      v5 = 2;
    }
    sub_1A909F1A0(v3, v4, v5);
  }
  else
  {
    sub_1A93F92E8();
    sub_1A93F930C();
  }
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  sub_1A93F92F4();
  sub_1A93F92F4();
  return sub_1A93F92F4();
}

uint64_t PodcastStateModel.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned __int8 v4;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  sub_1A93F92DC();
  if (v3)
  {
    sub_1A93F92E8();
    swift_bridgeObjectRetain();
    sub_1A93F7FBC();
    if (v3 == 1)
      v4 = 1;
    else
      v4 = 2;
    sub_1A909F1A0(v1, v2, v4);
  }
  else
  {
    sub_1A93F92E8();
    sub_1A93F930C();
  }
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  sub_1A93F92F4();
  sub_1A93F92F4();
  sub_1A93F92F4();
  return sub_1A93F9324();
}

uint64_t sub_1A935CEA8()
{
  sub_1A93F92DC();
  PodcastStateModel.hash(into:)();
  return sub_1A93F9324();
}

uint64_t PodcastStateModel.SanitizedState.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A935CF50 + 4 * byte_1A941FEF0[a1]))(0x6465776F6C6C6F66, 0xE800000000000000);
}

uint64_t sub_1A935CF50()
{
  return 0x7972617262696CLL;
}

unint64_t sub_1A935CF68()
{
  return 0xD000000000000012;
}

uint64_t sub_1A935CF84()
{
  return 0x65726F7473;
}

void sub_1A935CF98(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1A935CFEC@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A935D04C + 4 * byte_1A941FEF8[a1]))(0x7972617262696CLL);
}

uint64_t sub_1A935D04C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7972617262696CLL && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1A935D0F4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A935D140()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A935D1B0()
{
  __asm { BR              X10 }
}

uint64_t sub_1A935D1EC()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A935D248()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A935D290()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A935D300@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s18PodcastsFoundation17PodcastStateModelV09SanitizedD0O8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1A935D32C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A935D35C + 4 * byte_1A941FF08[*v0]))();
}

void sub_1A935D35C(_QWORD *a1@<X8>)
{
  *a1 = 0x7972617262696CLL;
  a1[1] = 0xE700000000000000;
}

void sub_1A935D378(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001A94421A0;
}

void sub_1A935D398(_QWORD *a1@<X8>)
{
  *a1 = 0x65726F7473;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1A935D3B0()
{
  sub_1A935EBFC();
  return sub_1A93F82BC();
}

uint64_t sub_1A935D40C()
{
  sub_1A935EBFC();
  return sub_1A93F828C();
}

uint64_t sub_1A935D458(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_1A935D5D8((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_1A935D5D8((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x1AF41411C](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1A935D5D8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t i;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v21;
  unint64_t j;
  unint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = a2;
  v31 = *(_QWORD *)(a3 + 16);
  if (!v31)
  {
    v26 = 0;
    goto LABEL_27;
  }
  v32 = a4 + 56;
  v30 = a3 + 32;
  swift_bridgeObjectRetain();
  v28 = 0;
  for (i = 0; i != v31; ++i)
  {
    v7 = (uint64_t *)(v30 + 16 * i);
    v9 = *v7;
    v8 = v7[1];
    sub_1A93F92DC();
    swift_bridgeObjectRetain();
    sub_1A93F7FBC();
    v10 = sub_1A93F9324();
    v11 = -1 << *(_BYTE *)(a4 + 32);
    v12 = v10 & ~v11;
    v13 = v12 >> 6;
    v14 = 1 << v12;
    if (((1 << v12) & *(_QWORD *)(v32 + 8 * (v12 >> 6))) == 0)
      goto LABEL_3;
    v15 = *(_QWORD *)(a4 + 48);
    v16 = (_QWORD *)(v15 + 16 * v12);
    v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (sub_1A93F90C0() & 1) == 0)
    {
      v21 = ~v11;
      for (j = v12 + 1; ; j = v23 + 1)
      {
        v23 = j & v21;
        if (((*(_QWORD *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0)
          break;
        v24 = (_QWORD *)(v15 + 16 * v23);
        v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (sub_1A93F90C0() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v13 = v23 >> 6;
          v14 = 1 << v23;
          goto LABEL_12;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      continue;
    }
    result = swift_bridgeObjectRelease();
LABEL_12:
    v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  v5 = a2;
  v26 = v28;
LABEL_27:
  swift_retain();
  return sub_1A91F2050(a1, v5, v26, a4);
}

uint64_t sub_1A935D7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;

  sub_1A93F9324();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v10++, 1))
      goto LABEL_22;
    if (v10 >= v7)
    {
LABEL_20:
      swift_release();
      return sub_1A93F92E8();
    }
    v15 = *(_QWORD *)(v3 + 8 * v10);
    if (!v15)
      break;
LABEL_17:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_18:
    v17 = *(_QWORD *)(a2 + 48) + 24 * v13;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(unsigned __int8 *)(v17 + 16);
    sub_1A93F92DC();
    sub_1A93F92E8();
    if (v20 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1A93F7FBC();
    }
    else
    {
      sub_1A93F930C();
    }
    v11 = sub_1A93F9324();
    result = sub_1A9086E08(v18, v19, v20);
    v9 ^= v11;
  }
  v16 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_20;
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    ++v10;
    goto LABEL_17;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v7)
      goto LABEL_20;
    v15 = *(_QWORD *)(v3 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_17;
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t _s18PodcastsFoundation17PodcastStateModelV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  char v17;
  char v18;

  v3 = *a1;
  v4 = a1[3];
  v5 = a1[4];
  v6 = *((unsigned __int8 *)a1 + 40);
  v7 = *((unsigned __int8 *)a1 + 41);
  v8 = *((unsigned __int8 *)a1 + 42);
  v9 = *a2;
  v10 = *((unsigned __int8 *)a2 + 16);
  v11 = a2[3];
  v12 = a2[4];
  v13 = *((unsigned __int8 *)a2 + 40);
  v14 = *((unsigned __int8 *)a2 + 41);
  v15 = *((unsigned __int8 *)a2 + 42);
  if (*((_BYTE *)a1 + 16))
  {
    if (*((_BYTE *)a1 + 16) == 1)
    {
      if (v10 != 1)
        return 0;
    }
    else if (v10 != 2)
    {
      return 0;
    }
    if (v3 != v9 || a1[1] != a2[1])
    {
      v17 = sub_1A93F90C0();
      v16 = 0;
      if ((v17 & 1) == 0)
        return v16;
    }
  }
  else
  {
    v16 = 0;
    if (*((_BYTE *)a2 + 16) || v3 != v9)
      return v16;
  }
  if (v4 == v11 && v5 == v12)
  {
    v16 = 0;
    if (v6 != v13)
      return v16;
  }
  else
  {
    v18 = sub_1A93F90C0();
    v16 = 0;
    if ((v18 & 1) == 0 || ((v6 ^ v13) & 1) != 0)
      return v16;
  }
  if (((v7 ^ v14) & 1) == 0)
    return v8 ^ v15 ^ 1u;
  return v16;
}

BOOL _s18PodcastsFoundation17EpisodeStateModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  double v6;
  double v7;
  double v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  double v15;
  double v16;
  double v17;
  char v18;
  _BOOL8 result;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46[2];
  char v47;
  uint64_t v48;
  uint64_t v49;
  __int16 v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int16 v57;
  char v58;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = *(unsigned __int8 *)(a1 + 10);
  v5 = *(unsigned __int8 *)(a1 + 11);
  v44 = *(unsigned __int8 *)(a1 + 13);
  v45 = *(unsigned __int8 *)(a1 + 12);
  v7 = *(double *)(a1 + 16);
  v6 = *(double *)(a1 + 24);
  v8 = *(double *)(a1 + 32);
  v43 = *(unsigned __int8 *)(a1 + 40);
  v37 = *(_QWORD *)(a1 + 48);
  v38 = *(_QWORD *)(a1 + 56);
  v41 = *(_QWORD *)(a1 + 72);
  v39 = *(_QWORD *)(a1 + 64);
  v40 = *(_QWORD *)(a1 + 80);
  v34 = *(unsigned __int16 *)(a1 + 88);
  v35 = *(unsigned __int8 *)(a1 + 90);
  v9 = *(unsigned __int8 *)(a2 + 8);
  v10 = *(unsigned __int8 *)(a2 + 9);
  v11 = *(unsigned __int8 *)(a2 + 10);
  v12 = *(unsigned __int8 *)(a2 + 11);
  v13 = *(unsigned __int8 *)(a2 + 12);
  v14 = *(unsigned __int8 *)(a2 + 13);
  v16 = *(double *)(a2 + 16);
  v15 = *(double *)(a2 + 24);
  v17 = *(double *)(a2 + 32);
  v42 = *(unsigned __int8 *)(a2 + 40);
  v28 = *(_QWORD *)(a2 + 48);
  v29 = *(_QWORD *)(a2 + 56);
  v30 = *(_QWORD *)(a2 + 64);
  v31 = *(_QWORD *)(a2 + 72);
  v36 = *(_QWORD *)(a2 + 80);
  v32 = *(unsigned __int16 *)(a2 + 88);
  v33 = *(unsigned __int8 *)(a2 + 90);
  v18 = sub_1A934F1F8(*(_QWORD *)a1, *(_QWORD *)a2);
  result = 0;
  if ((v18 & 1) != 0
    && ((v2 ^ v9) & 1) == 0
    && ((v3 ^ v10) & 1) == 0
    && ((v4 ^ v11) & 1) == 0
    && ((v5 ^ v12) & 1) == 0
    && ((v45 ^ v13) & 1) == 0
    && ((v44 ^ v14) & 1) == 0
    && v7 == v16
    && v6 == v15
    && v8 == v17
    && ((v43 ^ v42) & 1) == 0)
  {
    if (v40)
    {
      v21 = v37;
      v20 = v38;
      v52 = v37;
      v53 = v38;
      v22 = v39;
      v54 = v39;
      v55 = v41;
      v56 = v40;
      v57 = v34;
      v58 = (v34 | (v35 << 16)) >> 16;
      v23 = v36;
      if (v36)
      {
        v46[0] = v28;
        v46[1] = v29;
        v47 = v30;
        v48 = v31;
        v49 = v36;
        v50 = v32 & 0x101;
        v51 = ((v32 | (v33 << 16)) >> 16) & 1;
        v24 = _s18PodcastsFoundation17PodcastStateModelV2eeoiySbAC_ACtFZ_0(&v52, v46);
        v25 = v52;
        v26 = v53;
        v27 = v54;
        sub_1A909F644(v37, v38, v39);
        swift_bridgeObjectRetain();
        sub_1A909F1A0(v25, v26, v27);
        swift_bridgeObjectRelease();
        return (v24 & 1) != 0;
      }
      sub_1A909F644(v37, v38, v39);
      swift_bridgeObjectRetain();
      sub_1A909F644(v37, v38, v39);
      swift_bridgeObjectRetain();
      sub_1A909F1A0(v37, v38, v39);
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = v38;
      v22 = v39;
      v23 = v36;
      v21 = v37;
      if (!v36)
        return 1;
    }
    sub_1A909F54C(v28, v29, v30, v31, v23);
    sub_1A909F000(v21, v20, v22, v41, v40);
    sub_1A909F000(v28, v29, v30, v31, v23);
    return 0;
  }
  return result;
}

uint64_t _s18PodcastsFoundation17PodcastStateModelV09SanitizedD0O8rawValueAESgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1A935DE38(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t *, uint64_t))
{
  int64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int16 v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  unint64_t *v38;
  uint64_t v39;
  _QWORD *v40;
  int64_t v41;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  __int128 v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int16 v60;
  char v61;
  int64_t v62;

  v38 = (unint64_t *)result;
  v39 = 0;
  v4 = 0;
  v7 = a3[8];
  v5 = a3 + 8;
  v6 = v7;
  v8 = 1 << *((_BYTE *)v5 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v6;
  v40 = v5;
  v41 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v44 = (v10 - 1) & v10;
      v62 = v4;
      v11 = __clz(__rbit64(v10)) | (v4 << 6);
      goto LABEL_5;
    }
    v32 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v32 >= v41)
      return sub_1A9058748(v38, a2, v39, (uint64_t)a3);
    v33 = v40[v32];
    v34 = v4 + 1;
    if (!v33)
    {
      v34 = v4 + 2;
      if (v4 + 2 >= v41)
        return sub_1A9058748(v38, a2, v39, (uint64_t)a3);
      v33 = v40[v34];
      if (!v33)
      {
        v34 = v4 + 3;
        if (v4 + 3 >= v41)
          return sub_1A9058748(v38, a2, v39, (uint64_t)a3);
        v33 = v40[v34];
        if (!v33)
          break;
      }
    }
LABEL_20:
    v44 = (v33 - 1) & v33;
    v62 = v34;
    v11 = __clz(__rbit64(v33)) + (v34 << 6);
LABEL_5:
    v12 = a3[7];
    v13 = a3[6] + 96 * v11;
    v14 = *(_QWORD *)v13;
    v15 = *(_BYTE *)(v13 + 9);
    v16 = *(_BYTE *)(v13 + 10);
    v17 = *(_BYTE *)(v13 + 11);
    v18 = *(_BYTE *)(v13 + 12);
    v19 = *(_BYTE *)(v13 + 13);
    v20 = *(_QWORD *)(v13 + 32);
    v21 = *(_BYTE *)(v13 + 40);
    v23 = *(_QWORD *)(v13 + 48);
    v22 = *(_QWORD *)(v13 + 56);
    v24 = *(_QWORD *)(v13 + 64);
    v25 = *(_QWORD *)(v13 + 72);
    v26 = *(_QWORD *)(v13 + 80);
    v27 = *(_BYTE *)(v13 + 90);
    v28 = *(_WORD *)(v13 + 88);
    v46 = *(_BYTE *)(v13 + 8);
    v45 = v14;
    v47 = v15;
    v48 = v16;
    v49 = v17;
    v50 = v18;
    v51 = v19;
    v52 = *(_OWORD *)(v13 + 16);
    v53 = v20;
    v54 = v21;
    v55 = v23;
    v56 = v22;
    v57 = v24;
    v58 = v25;
    v59 = v26;
    v61 = v27;
    v60 = v28;
    v29 = v11;
    v30 = *(_QWORD *)(v12 + 8 * v11);
    swift_bridgeObjectRetain();
    sub_1A909F54C(v23, v22, v24, v25, v26);
    swift_bridgeObjectRetain();
    v31 = a4(&v45, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1A909F000(v23, v22, v24, v25, v26);
    v4 = v62;
    v10 = v44;
    if ((v31 & 1) != 0)
    {
      *(unint64_t *)((char *)v38 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      if (__OFADD__(v39++, 1))
      {
        __break(1u);
        return sub_1A9058748(v38, a2, v39, (uint64_t)a3);
      }
    }
  }
  v35 = v4 + 4;
  if (v4 + 4 >= v41)
    return sub_1A9058748(v38, a2, v39, (uint64_t)a3);
  v33 = v40[v35];
  if (v33)
  {
    v34 = v4 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v34 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v34 >= v41)
      return sub_1A9058748(v38, a2, v39, (uint64_t)a3);
    v33 = v40[v34];
    ++v35;
    if (v33)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1A935E104(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t *, uint64_t), uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = (_QWORD *)isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_1A935DE38((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_1A935DE38((uint64_t)v11, v8, v6, a2);
    MEMORY[0x1AF41411C](v11, -1, -1);
  }
  return a3;
}

unint64_t sub_1A935E278()
{
  unint64_t result;

  result = qword_1EEABE790;
  if (!qword_1EEABE790)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeStateDomain, &type metadata for EpisodeStateDomain);
    atomic_store(result, (unint64_t *)&qword_1EEABE790);
  }
  return result;
}

unint64_t sub_1A935E2C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEABE798;
  if (!qword_1EEABE798)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABE7A0);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEABE798);
  }
  return result;
}

unint64_t sub_1A935E310()
{
  unint64_t result;

  result = qword_1EEABE7A8;
  if (!qword_1EEABE7A8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastStateModel, &type metadata for PodcastStateModel);
    atomic_store(result, (unint64_t *)&qword_1EEABE7A8);
  }
  return result;
}

unint64_t sub_1A935E358()
{
  unint64_t result;

  result = qword_1EEABE7B0;
  if (!qword_1EEABE7B0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastStateModel.SanitizedState, &type metadata for PodcastStateModel.SanitizedState);
    atomic_store(result, (unint64_t *)&qword_1EEABE7B0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EpisodeStateDomain(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A935E3E8 + 4 * byte_1A941FF11[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A935E41C + 4 * byte_1A941FF0C[v4]))();
}

uint64_t sub_1A935E41C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A935E424(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A935E42CLL);
  return result;
}

uint64_t sub_1A935E438(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A935E440);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A935E444(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A935E44C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t assignWithTake for EpisodeStateChanges(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithCopy for EpisodeStateModel(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = (_OWORD *)(a1 + 48);
  v5 = (_OWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v6)
    {
      v7 = *(_QWORD *)(a2 + 48);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(_BYTE *)(a2 + 64);
      sub_1A909F644(v7, v8, v9);
      v10 = *(_QWORD *)(a1 + 48);
      v11 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 48) = v7;
      *(_QWORD *)(a1 + 56) = v8;
      v12 = *(_BYTE *)(a1 + 64);
      *(_BYTE *)(a1 + 64) = v9;
      sub_1A909F1A0(v10, v11, v12);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
      *(_BYTE *)(a1 + 90) = *(_BYTE *)(a2 + 90);
    }
    else
    {
      sub_1A935E640(a1 + 48);
      v16 = *(_OWORD *)(a2 + 75);
      v17 = *(_OWORD *)(a2 + 64);
      *v4 = *v5;
      *(_OWORD *)(a1 + 64) = v17;
      *(_OWORD *)(a1 + 75) = v16;
    }
  }
  else if (v6)
  {
    v13 = *(_QWORD *)(a2 + 48);
    v14 = *(_QWORD *)(a2 + 56);
    v15 = *(_BYTE *)(a2 + 64);
    sub_1A909F644(v13, v14, v15);
    *(_QWORD *)(a1 + 48) = v13;
    *(_QWORD *)(a1 + 56) = v14;
    *(_BYTE *)(a1 + 64) = v15;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
    *(_BYTE *)(a1 + 90) = *(_BYTE *)(a2 + 90);
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = *v5;
    v19 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
    *v4 = v18;
    *(_OWORD *)(a1 + 64) = v19;
  }
  return a1;
}

uint64_t sub_1A935E640(uint64_t a1)
{
  sub_1A909F1A0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy91_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for EpisodeStateModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  __int128 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 80))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 80);
  if (!v4)
  {
    sub_1A935E640(a1 + 48);
LABEL_5:
    v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
    *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
    return a1;
  }
  v5 = *(_BYTE *)(a2 + 64);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(a1 + 64) = v5;
  sub_1A909F1A0(v6, v7, v8);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_BYTE *)(a1 + 90) = *(_BYTE *)(a2 + 90);
  return a1;
}

uint64_t destroy for PodcastStateModel(uint64_t a1)
{
  sub_1A909F1A0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PodcastStateModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1A909F644(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PodcastStateModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1A909F644(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_1A909F1A0(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  return a1;
}

__n128 __swift_memcpy43_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PodcastStateModel(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  sub_1A909F1A0(v5, v6, v7);
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  return a1;
}

uint64_t getEnumTagSinglePayload for PodcastStateModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 43))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastStateModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 42) = 0;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 43) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 43) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastStateModel()
{
  return &type metadata for PodcastStateModel;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PodcastStateModel.StateError(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastStateModel.StateError(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastStateModel.StateError()
{
  return &type metadata for PodcastStateModel.StateError;
}

uint64_t storeEnumTagSinglePayload for PodcastStateModel.SanitizedState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A935EB7C + 4 * byte_1A941FF1B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A935EBB0 + 4 * byte_1A941FF16[v4]))();
}

uint64_t sub_1A935EBB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A935EBB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A935EBC0);
  return result;
}

uint64_t sub_1A935EBCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A935EBD4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A935EBD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A935EBE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PodcastStateModel.SanitizedState()
{
  return &type metadata for PodcastStateModel.SanitizedState;
}

unint64_t sub_1A935EBFC()
{
  unint64_t result;

  result = qword_1EEABE7B8;
  if (!qword_1EEABE7B8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastStateModel.SanitizedState, &type metadata for PodcastStateModel.SanitizedState);
    atomic_store(result, (unint64_t *)&qword_1EEABE7B8);
  }
  return result;
}

BOOL static PublisherSignpostIntervalEndType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PublisherSignpostIntervalEndType.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t PublisherSignpostIntervalEndType.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A935ECC4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t Publisher.endSignpostInterval(endType:log:name:signpostID:)(char *a1, void *a2, uint64_t a3, uint64_t a4, int a5, uint64_t (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  void (*v18)(char *, uint64_t (*)(uint64_t), uint64_t);
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;

  v45 = a5;
  v43 = a3;
  v44 = a4;
  v42 = a2;
  v46 = a8;
  v47 = a7;
  v10 = sub_1A93F7770();
  v40 = *(_QWORD *)(v10 - 8);
  v41 = v10;
  MEMORY[0x1E0C80A78](v10);
  v39 = (char *)&v37 - v11;
  v12 = sub_1A93F75FC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = *a1;
  v16 = swift_allocObject();
  v17 = 0;
  *(_BYTE *)(v16 + 16) = 0;
  v18 = *(void (**)(char *, uint64_t (*)(uint64_t), uint64_t))(v13 + 16);
  if ((v15 & 1) == 0)
  {
    v18((char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v12);
    v19 = (*(unsigned __int8 *)(v13 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v38 = a6;
    v20 = swift_allocObject();
    v21 = v46;
    *(_QWORD *)(v20 + 16) = v47;
    *(_QWORD *)(v20 + 24) = v21;
    v23 = v42;
    v22 = v43;
    *(_QWORD *)(v20 + 32) = v42;
    *(_QWORD *)(v20 + 40) = v22;
    *(_QWORD *)(v20 + 48) = v44;
    *(_BYTE *)(v20 + 56) = v45;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v20 + v19, (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
    *(_QWORD *)(v20 + ((v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)) = v16;
    a6 = v38;
    v24 = v23;
    swift_retain();
    v17 = sub_1A935F594;
  }
  v38 = v17;
  v18((char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v12);
  v25 = (*(unsigned __int8 *)(v13 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v26 = swift_allocObject();
  v27 = v46;
  *(_QWORD *)(v26 + 16) = v47;
  *(_QWORD *)(v26 + 24) = v27;
  v29 = v42;
  v28 = v43;
  *(_QWORD *)(v26 + 32) = v16;
  *(_QWORD *)(v26 + 40) = v29;
  v30 = v44;
  *(_QWORD *)(v26 + 48) = v28;
  *(_QWORD *)(v26 + 56) = v30;
  *(_BYTE *)(v26 + 64) = v45;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v26 + v25, (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v31 = v29;
  swift_retain();
  v33 = (uint64_t)v38;
  v32 = v39;
  sub_1A93F7B3C();
  v34 = v41;
  MEMORY[0x1AF414014](MEMORY[0x1E0C957C0], v41);
  v35 = sub_1A93F7B24();
  swift_release();
  sub_1A9085818(v33);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v34);
  swift_release();
  return v35;
}

uint64_t sub_1A935EF98()
{
  return swift_deallocObject();
}

uint64_t sub_1A935EFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  int v19;
  uint64_t v20;

  v20 = a6;
  v19 = a5;
  v18 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)&v18 - v11;
  sub_1A93F8934();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1A9405520;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, AssociatedTypeWitness);
  v14 = sub_1A93F8094();
  v16 = v15;
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 64) = sub_1A90A92DC();
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 40) = v16;
  sub_1A93F75B4();
  swift_bridgeObjectRelease();
  result = swift_beginAccess();
  *(_BYTE *)(a7 + 16) = 1;
  return result;
}

uint64_t sub_1A935F130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  int v28;
  uint64_t v29;

  v29 = a7;
  v28 = a6;
  v27[0] = a4;
  v27[1] = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v27 - v14;
  swift_getAssociatedConformanceWitness();
  v16 = sub_1A93F78C0();
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v27 - v18;
  v20 = (_BYTE *)(a2 + 16);
  (*(void (**)(char *, uint64_t, double))(v21 + 16))((char *)v27 - v18, a1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v19, 1, AssociatedTypeWitness) == 1)
  {
    result = swift_beginAccess();
    if ((*v20 & 1) != 0)
      return result;
    sub_1A93F8934();
    sub_1A93F75B4();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v19, AssociatedTypeWitness);
    swift_beginAccess();
    if ((*v20 & 1) != 0)
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, AssociatedTypeWitness);
    sub_1A93F8934();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1A9405520;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, AssociatedTypeWitness);
    v24 = sub_1A93F8094();
    v26 = v25;
    *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v23 + 64) = sub_1A90A92DC();
    *(_QWORD *)(v23 + 32) = v24;
    *(_QWORD *)(v23 + 40) = v26;
    sub_1A93F75B4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, AssociatedTypeWitness);
  }
  result = swift_beginAccess();
  *v20 = 1;
  return result;
}

uint64_t sub_1A935F420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A93F75FC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A935F49C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F75FC() - 8) + 80);
  return sub_1A935F130(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), v1 + ((v3 + 65) & ~v3));
}

uint64_t sub_1A935F504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A93F75FC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A935F594(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_1A93F75FC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1A935EFA8(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_1A935F614()
{
  unint64_t result;

  result = qword_1EEABE7C0;
  if (!qword_1EEABE7C0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PublisherSignpostIntervalEndType, &type metadata for PublisherSignpostIntervalEndType);
    atomic_store(result, (unint64_t *)&qword_1EEABE7C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PublisherSignpostIntervalEndType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A935F6A4 + 4 * byte_1A9420335[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A935F6D8 + 4 * asc_1A9420330[v4]))();
}

uint64_t sub_1A935F6D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A935F6E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A935F6E8);
  return result;
}

uint64_t sub_1A935F6F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A935F6FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A935F700(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A935F708(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PublisherSignpostIntervalEndType()
{
  return &type metadata for PublisherSignpostIntervalEndType;
}

uint64_t EyebrowBuilder.__allocating_init(episode:context:style:uppercase:explicitSymbol:abbreviatedPubDateConfig:showsSubscriptionBadge:hostingViewHasLimitedSpace:)(uint64_t a1, uint64_t a2, _BYTE *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, char a9)
{
  uint64_t v9;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v18 = __swift_mutable_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1A907C58C(v18, a2, a3, a4, a5, a6, a7, a8, a9, v9, v17, v16);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v19;
}

BOOL static EyebrowBuilder.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EyebrowBuilder.Style.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t EyebrowBuilder.Style.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A935F854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t (*v29)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char *v36;
  char v37;
  uint64_t v38;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;

  v3 = v2;
  v45 = a1;
  v47 = (char *)a2;
  v46 = type metadata accessor for EpisodePlayState();
  v4 = *(_QWORD *)(v46 - 8);
  v5 = MEMORY[0x1E0C80A78](v46);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v42 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v42 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v42 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v42 = (uint64_t)&v42 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v43 = (uint64_t)&v42 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v42 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v42 - v24;
  v26 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9064630(v3, (uint64_t)v28, v29);
  v44 = v26;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    v34 = v45;
    sub_1A9064630(v45, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
    if (swift_getEnumCaseMultiPayload() == 3
      && (sub_1A9064630((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState), v13[16] != 1))
    {
      sub_1A9064714((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
      sub_1A9064630(v34, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
      v37 = 1;
      v36 = v47;
    }
    else
    {
      sub_1A9064714((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
      sub_1A9064630(v34, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
      sub_1A9064630((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
      v35 = swift_getEnumCaseMultiPayload();
      v36 = v47;
      if (v35 == 2)
      {
        sub_1A905FD54((uint64_t)v7, (uint64_t *)&unk_1ED2AD360);
        v37 = 1;
      }
      else
      {
        sub_1A9064714((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
        v37 = 0;
      }
    }
    sub_1A9064714((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
    *v36 = v37;
    return swift_storeEnumTagMultiPayload();
  }
  if (EnumCaseMultiPayload == 3)
  {
    v38 = (uint64_t)v47;
    sub_1A9064630(v45, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v38, 0, 1, v46);
    swift_storeEnumTagMultiPayload();
    return sub_1A905FD54((uint64_t)v28, &qword_1ED2ACF98);
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1A9064630(v3, (uint64_t)v47, type metadata accessor for EyebrowBuilder.ListContext);
    return sub_1A9064714((uint64_t)v28, type metadata accessor for EyebrowBuilder.ListContext);
  }
  v31 = v45;
  sub_1A9064630(v45, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_1A9064630((uint64_t)v25, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
    if (v23[16] != 1)
    {
      sub_1A9064714((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
      v32 = v43;
      sub_1A9064630(v31, v43, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
      goto LABEL_19;
    }
  }
  sub_1A9064714((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
  v32 = v43;
  sub_1A9064630(v31, v43, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
  v33 = v42;
  sub_1A9064630(v32, v42, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1A905FD54(v33, (uint64_t *)&unk_1ED2AD360);
LABEL_19:
    v40 = 1;
    goto LABEL_20;
  }
  sub_1A9064714(v33, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
  v40 = 0;
LABEL_20:
  v41 = v47;
  sub_1A9064714(v32, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
  *v41 = v40;
  return swift_storeEnumTagMultiPayload();
}

uint64_t EyebrowBuilder.EpisodeHeaderSubtitleConfiguration.remainingTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t EyebrowBuilder.EpisodeHeaderSubtitleConfiguration.remainingTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*EyebrowBuilder.EpisodeHeaderSubtitleConfiguration.remainingTime.modify())()
{
  return nullsub_1;
}

uint64_t EyebrowBuilder.EpisodeHeaderSubtitleConfiguration.viewIsRTL.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t EyebrowBuilder.EpisodeHeaderSubtitleConfiguration.viewIsRTL.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = result;
  return result;
}

uint64_t (*EyebrowBuilder.EpisodeHeaderSubtitleConfiguration.viewIsRTL.modify())()
{
  return nullsub_1;
}

PodcastsFoundation::EyebrowBuilder::EpisodeHeaderSubtitleConfiguration __swiftcall EyebrowBuilder.EpisodeHeaderSubtitleConfiguration.init(remainingTime:viewIsRTL:)(Swift::Double_optional remainingTime, Swift::Bool viewIsRTL)
{
  char v2;
  uint64_t v3;
  PodcastsFoundation::EyebrowBuilder::EpisodeHeaderSubtitleConfiguration result;

  *(_QWORD *)v3 = *(_QWORD *)&remainingTime.is_nil;
  *(_BYTE *)(v3 + 8) = viewIsRTL;
  *(_BYTE *)(v3 + 9) = v2;
  result.remainingTime.value = remainingTime.value;
  result.remainingTime.is_nil = remainingTime.is_nil;
  return result;
}

uint64_t EyebrowBuilder.smartPlay.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.episodeNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.seasonNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.pubDate.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.listenNowReason.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.remainingTime.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.explicitSymbol.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.showsSeasonNumber.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 161);
}

uint64_t sub_1A935FF64@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1A907DDB4();
  v4 = sub_1A907D31C();
  v6 = v5;
  swift_beginAccess();
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 + 24);
  *a2 = *(_QWORD *)(a1 + 16);
  a2[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A935FFD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v6 = type metadata accessor for EpisodePlayState();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v22 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - v13;
  v15 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9064630(a2, (uint64_t)v17, v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1A9064630(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
    if (swift_getEnumCaseMultiPayload() == 3
      && (sub_1A9064630((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState), (v12[16] & 1) == 0))
    {
      sub_1A9064714((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
      *(_OWORD *)a3 = xmmword_1A9420400;
      *(_WORD *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 18) = 0;
    }
    else
    {
      sub_1A9064714((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
      sub_1A9064630(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        sub_1A905FD54((uint64_t)v9, (uint64_t *)&unk_1ED2AD360);
        v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30) + 48);
        v20 = sub_1A93F738C();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a3, 1, 1, v20);
        *(_BYTE *)(a3 + v19) = 0;
      }
      else
      {
        sub_1A9064714((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
      }
    }
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1A9064630(a1, a3, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
    return sub_1A9064714((uint64_t)v17, type metadata accessor for EyebrowBuilder.ListContext);
  }
}

uint64_t sub_1A9360230@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  char v23;
  uint64_t v24[3];
  uint64_t v25;
  uint64_t v26;

  v22 = a3;
  v21 = *a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD058);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A905DC3C((uint64_t)(a2 + 21), (uint64_t)v24);
  sub_1A935F854(a1, (uint64_t)v10);
  v23 = *((_BYTE *)a2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style);
  v11 = *((_BYTE *)a2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase);
  swift_beginAccess();
  v12 = a2[18];
  v13 = a2[19];
  sub_1A9062170((uint64_t)a2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_abbreviatedPubDateConfig, (uint64_t)v7, &qword_1ED2AD058);
  v14 = *((unsigned __int8 *)a2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_showsSubscriptionBadge);
  v15 = *((_BYTE *)a2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_hostingViewHasLimitedSpace);
  v16 = v25;
  v17 = v26;
  v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
  swift_bridgeObjectRetain();
  sub_1A907C58C(v18, (uint64_t)v10, &v23, v11, v12, v13, (uint64_t)v7, v14, v15, v21, v16, v17);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  EyebrowBuilder.captionPublisher.getter(v24);
  swift_release();
  __swift_project_boxed_opaque_existential_1(v24, v25);
  *v22 = sub_1A93F7B24();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
}

uint64_t static EyebrowBuilder.concatenate(captionElements:uppercased:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = a1[3];
  v5 = __swift_project_boxed_opaque_existential_1(a1, v4);
  return sub_1A93620EC((uint64_t)v5, a2, v2, v4);
}

uint64_t sub_1A9360464(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v15[2];
  __int128 v16;
  __int128 v17;

  v4 = a1;
  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = (char *)v15 - v10;
  if (sub_1A93F86B8() < 2)
  {
    sub_1A93F86DC();
    v13 = v17;
    if (*((_QWORD *)&v17 + 1) && (v4 & 1) != 0)
    {
      v16 = v17;
      sub_1A90828B0();
      v13 = sub_1A93F8AD8();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a2);
    sub_1A93F86F4();
    v12 = sub_1A93F86DC();
    v15[1] = v16;
    MEMORY[0x1E0C80A78](v12);
    LOBYTE(v15[-1]) = v4 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
    swift_getAssociatedConformanceWitness();
    sub_1A93F8220();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
    return v17;
  }
  return v13;
}

void sub_1A9360688(uint64_t a1)
{
  char *v1;
  _QWORD v2[5];

  sub_1A905DC3C(a1, (uint64_t)v2);
  v1 = (char *)sub_1A93606E8 + 4 * byte_1A9420417[sub_1A9362118(v2)];
  __asm { BR              X10 }
}

uint64_t sub_1A93606E8()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  char v26;

  swift_beginAccess();
  v5 = *(_QWORD *)(v0 + 104);
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + 96);
    swift_bridgeObjectRetain();
    v7 = sub_1A907ECFC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v8 = v7[2];
    v9 = v7[3];
    v10 = v8 + 1;
    if (v8 >= v9 >> 1)
    {
      v21 = v7;
      v22 = v7[2];
      v23 = sub_1A907ECFC((_QWORD *)(v9 > 1), v8 + 1, 1, v21);
      v8 = v22;
      v7 = v23;
    }
    v7[2] = v10;
    v11 = &v7[2 * v8];
    v11[4] = v6;
    v11[5] = v5;
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v24 = v3;
  v25 = v4;
  v26 = v2;
  v12 = sub_1A93615E4(v1, (uint64_t)&v24);
  if (v13)
  {
    v14 = v12;
    v15 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v7 = sub_1A907ECFC(0, v7[2] + 1, 1, v7);
    v17 = v7[2];
    v16 = v7[3];
    if (v17 >= v16 >> 1)
      v7 = sub_1A907ECFC((_QWORD *)(v16 > 1), v17 + 1, 1, v7);
    v7[2] = v17 + 1;
    v18 = &v7[2 * v17];
    v18[4] = v14;
    v18[5] = v15;
  }
  if (v2)
    v7 = (_QWORD *)sub_1A924D430((uint64_t)v7);
  v19 = sub_1A907EEF8(0, v7);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1A9360B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t (*v4)(_QWORD);
  int v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (unsigned __int8 *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9064630(v0 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, (uint64_t)v3, v4);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1A9064714((uint64_t)v3, type metadata accessor for EyebrowBuilder.ListContext);
LABEL_4:
    result = sub_1A9360FF8(0, 0);
    if (!v7)
    {
      result = sub_1A90807C8(0);
      if (!v8)
      {
        result = sub_1A9080FAC(0);
        if (!v9)
          goto LABEL_11;
      }
    }
    return result;
  }
  v5 = *v3;
  if (v5 == 2)
    goto LABEL_4;
  if ((v5 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v10 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
LABEL_14:
    result = sub_1A9360FF8(1, 0);
    if (!v13)
    {
      result = sub_1A90807C8(1);
      if (!v14)
      {
        result = sub_1A9080FAC(1);
        if (!v15)
        {
          v12 = 1;
          return sub_1A9081DB4(v12);
        }
      }
    }
    return result;
  }
  swift_bridgeObjectRelease();
  result = sub_1A90807C8(0);
  if (!v11)
  {
LABEL_11:
    v12 = 0;
    return sub_1A9081DB4(v12);
  }
  return result;
}

uint64_t sub_1A9360CE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v8;
  uint64_t v9;

  v1 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (unsigned __int8 *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0[24];
  v5 = v0[25];
  __swift_project_boxed_opaque_existential_1(v0 + 21, v4);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 72))(v4, v5) & 1) == 0)
    return sub_1A9081DB4(0);
  sub_1A9064630((uint64_t)v0 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, (uint64_t)v3, type metadata accessor for EyebrowBuilder.ListContext);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1A9064714((uint64_t)v3, type metadata accessor for EyebrowBuilder.ListContext);
    v6 = 0;
  }
  else
  {
    v8 = *v3;
    if (v8 == 2)
    {
      v6 = 0;
    }
    else if ((v8 & 1) != 0)
    {
      v6 = sub_1A93F90C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v6 = 1;
    }
  }
  return sub_1A93614EC(v6 & 1);
}

uint64_t sub_1A9360E3C(uint64_t a1, uint64_t a2, char a3, char a4, char a5, char a6, double a7)
{
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  if (!a2)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (a7 <= 0.0)
      goto LABEL_13;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  v14 = sub_1A907ECFC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v16 = v14[2];
  v15 = v14[3];
  if (v16 >= v15 >> 1)
    v14 = sub_1A907ECFC((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
  v14[2] = v16 + 1;
  v17 = &v14[2 * v16];
  v17[4] = a1;
  v17[5] = a2;
  if (a7 > 0.0)
  {
LABEL_7:
    v18 = objc_msgSend((id)objc_opt_self(), sel_prettyShortStringWithDuration_includeTimeRemainingPhrase_abbreviated_, a3 & 1, a4 & 1, a7);
    if (v18)
    {
      v19 = v18;
      v20 = sub_1A93F8040();
      v22 = v21;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1A907ECFC(0, v14[2] + 1, 1, v14);
      v24 = v14[2];
      v23 = v14[3];
      if (v24 >= v23 >> 1)
        v14 = sub_1A907ECFC((_QWORD *)(v23 > 1), v24 + 1, 1, v14);
      v14[2] = v24 + 1;
      v25 = &v14[2 * v24];
      v25[4] = v20;
      v25[5] = v22;
    }
  }
LABEL_13:
  if ((a5 & 1) != 0)
    v14 = (_QWORD *)sub_1A924D430((uint64_t)v14);
  v26 = sub_1A907EEF8(a6 & 1, v14);
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1A9360FF8(char a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v5 = *(_QWORD *)(v2 + 192);
  v6 = *(_QWORD *)(v2 + 200);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 168), v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v6);
  v8 = 0;
  if ((v9 & 1) == 0)
  {
    v10 = v7;
    if (v7 >= 1)
    {
      v11 = *(_QWORD *)(v2 + 192);
      v12 = *(_QWORD *)(v2 + 200);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 168), v11);
      v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 96))(v11, v12);
      v8 = 0;
      if ((v14 & 1) == 0 && v13 >= 1)
      {
        swift_beginAccess();
        *(_BYTE *)(v2 + 161) = 1;
        swift_beginAccess();
        *(_BYTE *)(v2 + 160) = 1;
        v15 = OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style;
        if (*(unsigned __int8 *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) - 1 <= 1)
          sub_1A93F810C();
        if (qword_1ED2AD260 != -1)
          swift_once();
        sub_1A93F7044();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
        v16 = swift_allocObject();
        v17 = MEMORY[0x1E0DEDC60];
        *(_OWORD *)(v16 + 16) = xmmword_1A9405520;
        v18 = MEMORY[0x1E0DEDCD8];
        *(_QWORD *)(v16 + 56) = v17;
        *(_QWORD *)(v16 + 64) = v18;
        *(_QWORD *)(v16 + 32) = v10;
        v8 = sub_1A93F801C();
        v20 = v19;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v21 = sub_1A90807C8(a1 & 1);
        if (v22)
        {
          v23 = v21;
          v24 = v22;
          if ((a2 & 1) != 0 || *(_BYTE *)(v2 + v15))
          {
            sub_1A93F7044();
            v25 = swift_allocObject();
            *(_OWORD *)(v25 + 16) = xmmword_1A9405950;
            v26 = v20;
            v27 = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
            v28 = sub_1A90A92DC();
            *(_QWORD *)(v25 + 32) = v8;
            *(_QWORD *)(v25 + 40) = v26;
            *(_QWORD *)(v25 + 96) = v27;
            *(_QWORD *)(v25 + 104) = v28;
            *(_QWORD *)(v25 + 64) = v28;
            *(_QWORD *)(v25 + 72) = v23;
            *(_QWORD *)(v25 + 80) = v24;
            v8 = sub_1A93F801C();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1A90828B0();
            swift_bridgeObjectRetain();
            v30 = (_QWORD *)sub_1A93F8ACC();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v30 = sub_1A907ECFC(0, v30[2] + 1, 1, v30);
            v32 = v30[2];
            v31 = v30[3];
            v33 = v32 + 1;
            if (v32 >= v31 >> 1)
              v30 = sub_1A907ECFC((_QWORD *)(v31 > 1), v32 + 1, 1, v30);
            v30[2] = v33;
            v34 = &v30[2 * v32];
            v34[4] = v23;
            v34[5] = v24;
            v41 = MEMORY[0x1E0DEE9D8];
            swift_bridgeObjectRetain();
            sub_1A908182C(0, v32 + 1, 0);
            v35 = v30 + 5;
            do
            {
              v37 = *(v35 - 1);
              v36 = *v35;
              v38 = *(_QWORD *)(v41 + 16);
              v39 = *(_QWORD *)(v41 + 24);
              swift_bridgeObjectRetain();
              if (v38 >= v39 >> 1)
                sub_1A908182C(v39 > 1, v38 + 1, 1);
              v35 += 2;
              *(_QWORD *)(v41 + 16) = v38 + 1;
              v40 = v41 + 16 * v38;
              *(_QWORD *)(v40 + 32) = v37;
              *(_QWORD *)(v40 + 40) = v36;
              --v33;
            }
            while (v33);
            swift_bridgeObjectRelease_n();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
            sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
            v8 = sub_1A93F7FE0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }
      }
    }
  }
  return v8;
}

uint64_t sub_1A93614EC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_1ED2AD260 != -1)
    swift_once();
  v2 = sub_1A93F7044();
  if ((a1 & 1) != 0)
  {
    v3 = sub_1A90807C8(0);
    if (!v4)
      return v2;
    goto LABEL_9;
  }
  v3 = sub_1A9360FF8(0, 0);
  if (v5 || (v3 = sub_1A90807C8(0), v6) || (v3 = sub_1A9080FAC(0), v7))
  {
LABEL_9:
    v2 = v3;
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1A93615E4(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  char v9;
  double v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v30;

  v3 = v2;
  v5 = *(unsigned __int8 *)(a2 + 8);
  if ((v5 & 1) != 0)
  {
    v6 = a1[3];
    v7 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v6);
    v8 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 80))(v6, v7));
    if ((v9 & 1) != 0)
      return 0;
    v10 = v8;
    if (v8 <= 0.0)
      goto LABEL_12;
  }
  else
  {
    v10 = *(double *)a2;
    if (*(double *)a2 <= 0.0)
    {
LABEL_12:
      v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      goto LABEL_13;
    }
  }
  v11 = objc_msgSend((id)objc_opt_self(), sel_prettyShortStringWithDuration_includeTimeRemainingPhrase_abbreviated_, v5 ^ 1u, 0, v10);
  if (!v11)
    goto LABEL_12;
  v12 = v11;
  v13 = sub_1A93F8040();
  v15 = v14;

  v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_1A907ECFC(0, v16[2] + 1, 1, v16);
  v18 = v16[2];
  v17 = v16[3];
  v19 = v18 + 1;
  if (v18 >= v17 >> 1)
  {
    v30 = sub_1A907ECFC((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
    v19 = v18 + 1;
    v16 = v30;
  }
  v16[2] = v19;
  v20 = &v16[2 * v18];
  v20[4] = v13;
  v20[5] = v15;
LABEL_13:
  v21 = sub_1A907EEF8(0, v16);
  v23 = v22;
  swift_bridgeObjectRelease();
  v24 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 64))(v24, v25);
  swift_beginAccess();
  v28 = *(_QWORD *)(v3 + 144);
  v27 = *(_QWORD *)(v3 + 152);
  if (!v23)
  {
    if ((v26 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      return v28;
    }
    return 0;
  }
  if ((v26 & (v27 != 0)) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A93F810C();
    swift_bridgeObjectRetain();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v21;
}

uint64_t sub_1A9361850(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;

  if (a2)
  {
    sub_1A90828B0();
    swift_bridgeObjectRetain();
    v8 = (_QWORD *)sub_1A93F8ACC();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1A907ECFC(0, v8[2] + 1, 1, v8);
    v10 = v8[2];
    v9 = v8[3];
    v11 = v10 + 1;
    if (v10 >= v9 >> 1)
      v8 = sub_1A907ECFC((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v11;
    v12 = &v8[2 * v10];
    v12[4] = a1;
    v12[5] = a2;
    v21 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1A908182C(0, v11, 0);
    v13 = v8 + 5;
    do
    {
      v14 = *(v13 - 1);
      v15 = *v13;
      if ((a3 & 1) != 0)
      {
        v14 = sub_1A93F8AD8();
        v15 = v16;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      v18 = *(_QWORD *)(v21 + 16);
      v17 = *(_QWORD *)(v21 + 24);
      if (v18 >= v17 >> 1)
        sub_1A908182C(v17 > 1, v18 + 1, 1);
      v13 += 2;
      *(_QWORD *)(v21 + 16) = v18 + 1;
      v19 = v21 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v15;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
    a4 = sub_1A93F7FE0();
    swift_bridgeObjectRelease();
  }
  else if ((a3 & 1) != 0)
  {
    sub_1A90828B0();
    return sub_1A93F8AD8();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a4;
}

unint64_t static String.eyebrowSeparatorSymbol.getter()
{
  return 0x8480E2B7C28480E2;
}

uint64_t Double.resumeString.getter(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED2AD260 != -1)
    swift_once();
  v2 = sub_1A93F7044();
  v4 = sub_1A9360E3C(v2, v3, 1, 0, 0, 1, a1);
  swift_bridgeObjectRelease();
  return v4;
}

Swift::String_optional __swiftcall Double.shortLowercaseResumeString(prefix:isRTL:isExplicit:explicitSymbol:)(Swift::String_optional prefix, Swift::Bool isRTL, Swift::Bool isExplicit, Swift::String_optional explicitSymbol)
{
  double v4;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  Swift::String_optional result;
  uint64_t v13;
  void *v14;

  object = explicitSymbol.value._object;
  countAndFlagsBits = explicitSymbol.value._countAndFlagsBits;
  v8 = sub_1A9360E3C(prefix.value._countAndFlagsBits, (uint64_t)prefix.value._object, 1, 1, isRTL, 0, v4);
  if (v9)
  {
    if (isExplicit && object)
    {
      v13 = v8;
      v14 = v9;
      swift_bridgeObjectRetain();
      sub_1A93F810C();
      swift_bridgeObjectRetain();
      sub_1A93F810C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      countAndFlagsBits = v13;
      object = v14;
    }
    else
    {
      countAndFlagsBits = v8;
      object = v9;
    }
  }
  else if (isExplicit)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    countAndFlagsBits = 0;
    object = 0;
  }
  v10 = countAndFlagsBits;
  v11 = object;
  result.value._object = v11;
  result.value._countAndFlagsBits = v10;
  return result;
}

uint64_t Double.playingString.getter(double a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  if (a1 > 0.0
    && (v1 = objc_msgSend((id)objc_opt_self(), sel_prettyShortStringWithDuration_includeTimeRemainingPhrase_abbreviated_, 1, 0, a1)) != 0)
  {
    v2 = v1;
    v3 = sub_1A93F8040();
    v5 = v4;

    v6 = sub_1A907ECFC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v8 = v6[2];
    v7 = v6[3];
    if (v8 >= v7 >> 1)
      v6 = sub_1A907ECFC((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
    v6[2] = v8 + 1;
    v9 = &v6[2 * v8];
    v9[4] = v3;
    v9[5] = v5;
  }
  else
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v10 = sub_1A907EEF8(1, v6);
  swift_bridgeObjectRelease();
  return v10;
}

Swift::String_optional __swiftcall Double.durationString(prefix:isExplicit:explicitSymbol:isRTL:abbreviated:)(Swift::String_optional prefix, Swift::Bool isExplicit, Swift::String_optional explicitSymbol, Swift::Bool isRTL, Swift::Bool abbreviated)
{
  double v5;
  void *object;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  Swift::String_optional result;
  uint64_t v13;
  void *v14;

  object = explicitSymbol.value._object;
  v8 = sub_1A9360E3C(prefix.value._countAndFlagsBits, (uint64_t)prefix.value._object, 0, abbreviated, isRTL, 0, v5);
  v10 = v9;
  if (v9 && isExplicit && object)
  {
    v13 = v8;
    v14 = v9;
    swift_bridgeObjectRetain();
    sub_1A93F810C();
    swift_bridgeObjectRetain();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v13;
    v10 = v14;
  }
  v11 = v10;
  result.value._object = v11;
  result.value._countAndFlagsBits = v8;
  return result;
}

uint64_t sub_1A9361E60(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_1A93F6E34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  if (!v11)
    return 0;
  v12 = v10;
  v13 = v11;
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 8);
  swift_bridgeObjectRetain();
  v15 = v14(a2, a3);
  if (v16)
  {
    if (v12 == v15 && v13 == v16)
    {
      swift_bridgeObjectRelease_n();
LABEL_25:
      swift_bridgeObjectRelease();
      return 0;
    }
    v18 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      goto LABEL_25;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v34 = a1;
  v35 = v12;
  v36 = v13;
  sub_1A93F6DF8();
  sub_1A90828B0();
  v19 = sub_1A93F8AC0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v21 = (uint64_t *)(v19 + 40);
    v22 = MEMORY[0x1E0DEE9D8];
    do
    {
      v27 = *(v21 - 1);
      v26 = *v21;
      v28 = HIBYTE(*v21) & 0xF;
      if ((*v21 & 0x2000000000000000) == 0)
        v28 = v27 & 0xFFFFFFFFFFFFLL;
      if (v28)
      {
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v35 = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A908182C(0, *(_QWORD *)(v22 + 16) + 1, 1);
          v22 = v35;
        }
        v24 = *(_QWORD *)(v22 + 16);
        v23 = *(_QWORD *)(v22 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_1A908182C(v23 > 1, v24 + 1, 1);
          v22 = v35;
        }
        *(_QWORD *)(v22 + 16) = v24 + 1;
        v25 = v22 + 16 * v24;
        *(_QWORD *)(v25 + 32) = v27;
        *(_QWORD *)(v25 + 40) = v26;
      }
      v21 += 2;
      --v20;
    }
    while (v20);
  }
  else
  {
    v22 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v22 + 16);
  swift_release();
  if (v30 > 2 || sub_1A93F80DC() >= 17)
    goto LABEL_25;
  if ((v34 & 1) != 0)
  {
    v32 = sub_1A93F80DC();
    swift_bridgeObjectRelease();
    if (v32 > 11)
      return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 1;
}

uint64_t sub_1A93620EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A9360464(a2, a4);
}

uint64_t sub_1A9362118(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 72))(v2, v3) & 1) != 0)
  {
    v4 = 3;
  }
  else
  {
    v5 = a1[3];
    v6 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v6);
    if ((v8 & 1) != 0
      || v7 < 1
      || (v9 = a1[3],
          v10 = a1[4],
          __swift_project_boxed_opaque_existential_1(a1, v9),
          v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 96))(v9, v10),
          (v12 & 1) != 0)
      || v11 <= 0)
    {
      v13 = a1[3];
      v14 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v13);
      v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 96))(v13, v14);
      v4 = (v16 & 1) == 0 && v15 > 0;
    }
    else
    {
      v4 = 2;
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v4;
}

uint64_t sub_1A936220C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A935FF64(v1, a1);
}

uint64_t sub_1A9362214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EyebrowBuilder.ListContext(0) - 8) + 80);
  v2 = (v1 + 16) & ~v1;
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v3 = type metadata accessor for EpisodePlayState();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v0 + v2, 1, v3)
      && swift_getEnumCaseMultiPayload() == 2)
    {
      v4 = sub_1A93F738C();
      v5 = *(_QWORD *)(v4 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4))
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1A93622F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EyebrowBuilder.ListContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A936233C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EyebrowBuilder.ListContext(0) - 8) + 80);
  return sub_1A935FFD0(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1A9362388@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1A9360230(a1, v2, a2);
}

unint64_t sub_1A9362394()
{
  unint64_t result;

  result = qword_1EEABE7C8;
  if (!qword_1EEABE7C8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EyebrowBuilder.Style, &type metadata for EyebrowBuilder.Style);
    atomic_store(result, (unint64_t *)&qword_1EEABE7C8);
  }
  return result;
}

uint64_t dispatch thunk of EyebrowBuilderSource.channelName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.subscriptionName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.entitlementState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.hasFreeVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.listenNowReason.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.episodeTypeResolvedValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.mediaType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.isExplicit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.showTypeIsSerial.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.durationOpt.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.seasonNumberOpt.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.episodeNumberOpt.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.releaseDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.timeRemainingOpt.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t sub_1A93624B8()
{
  return type metadata accessor for EyebrowBuilder(0);
}

uint64_t method lookup function for EyebrowBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EyebrowBuilder.__allocating_init(episode:context:style:uppercase:explicitSymbol:abbreviatedPubDateConfig:showsSubscriptionBadge:hostingViewHasLimitedSpace:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t storeEnumTagSinglePayload for EyebrowBuilder.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A9362528 + 4 * byte_1A9420438[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A936255C + 4 * asc_1A9420433[v4]))();
}

uint64_t sub_1A936255C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9362564(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A936256CLL);
  return result;
}

uint64_t sub_1A9362578(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9362580);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A9362584(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A936258C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for EyebrowBuilder.ListContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    v7 = type metadata accessor for EpisodePlayState();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v11 = sub_1A93F738C();
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
        {
          v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        }
        v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
        *((_BYTE *)a1 + *(int *)(v14 + 48)) = *((_BYTE *)a2 + *(int *)(v14 + 48));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for EyebrowBuilder.ListContext(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 3)
  {
    v3 = type metadata accessor for EpisodePlayState();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(a1, 1, v3);
    if (!(_DWORD)result)
    {
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 2)
      {
        v4 = sub_1A93F738C();
        v5 = *(_QWORD *)(v4 - 8);
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
        if (!(_DWORD)result)
          return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
      }
    }
  }
  return result;
}

void *initializeWithCopy for EyebrowBuilder.ListContext(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v6 = type metadata accessor for EpisodePlayState();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v9 = sub_1A93F738C();
        v10 = *(_QWORD *)(v9 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
        {
          v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(a1, a2, v9);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
        }
        v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
        *((_BYTE *)a1 + *(int *)(v12 + 48)) = *((_BYTE *)a2 + *(int *)(v12 + 48));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for EyebrowBuilder.ListContext(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1A9064714((uint64_t)a1, type metadata accessor for EyebrowBuilder.ListContext);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v6 = type metadata accessor for EpisodePlayState();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          v9 = sub_1A93F738C();
          v10 = *(_QWORD *)(v9 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
          {
            v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(a1, a2, v9);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
          }
          v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
          *((_BYTE *)a1 + *(int *)(v12 + 48)) = *((_BYTE *)a2 + *(int *)(v12 + 48));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *initializeWithTake for EyebrowBuilder.ListContext(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v6 = type metadata accessor for EpisodePlayState();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v9 = sub_1A93F738C();
        v10 = *(_QWORD *)(v9 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
        {
          v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(a1, a2, v9);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
        }
        v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
        *((_BYTE *)a1 + *(int *)(v12 + 48)) = *((_BYTE *)a2 + *(int *)(v12 + 48));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for EyebrowBuilder.ListContext(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1A9064714((uint64_t)a1, type metadata accessor for EyebrowBuilder.ListContext);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v6 = type metadata accessor for EpisodePlayState();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          v9 = sub_1A93F738C();
          v10 = *(_QWORD *)(v9 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
          {
            v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(a1, a2, v9);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
          }
          v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
          *((_BYTE *)a1 + *(int *)(v12 + 48)) = *((_BYTE *)a2 + *(int *)(v12 + 48));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for EyebrowBuilder.EpisodeHeaderSubtitleConfiguration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EyebrowBuilder.EpisodeHeaderSubtitleConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for EyebrowBuilder.EpisodeHeaderSubtitleConfiguration()
{
  return &type metadata for EyebrowBuilder.EpisodeHeaderSubtitleConfiguration;
}

uint64_t *sub_1A9362F90@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = *result;
  if (result[1])
  {
    result = (uint64_t *)sub_1A9361850(*a2, a2[1], *(_BYTE *)(v3 + 16), v5);
    v5 = (uint64_t)result;
  }
  else
  {
    v6 = 0;
  }
  *a3 = v5;
  a3[1] = v6;
  return result;
}

unint64_t ImageProviderError.description.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000004FLL;
  if (*v0 == 1)
    v1 = 0xD000000000000057;
  if (*v0)
    return v1;
  else
    return 0xD00000000000009ALL;
}

BOOL static ImageProviderError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ImageProviderError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t ImageProviderError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

unint64_t sub_1A93630C0()
{
  unint64_t result;

  result = qword_1EEABE7D0;
  if (!qword_1EEABE7D0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ImageProviderError, &type metadata for ImageProviderError);
    atomic_store(result, (unint64_t *)&qword_1EEABE7D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ImageProviderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A9363154 + 4 * byte_1A9420685[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A9363188 + 4 * asc_1A9420680[v4]))();
}

uint64_t sub_1A9363188(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9363190(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9363198);
  return result;
}

uint64_t sub_1A93631A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93631ACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A93631B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93631B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImageProviderError()
{
  return &type metadata for ImageProviderError;
}

uint64_t MetricsActionContext.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t MetricsActionContext.debugDescription.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD000000000000020;
}

unint64_t sub_1A93632A4()
{
  return MetricsActionContext.debugDescription.getter();
}

uint64_t MetricsActionContext.description.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t MetricsActionContext.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_1A93F90CC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsActionContext.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F912C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsActionContext.confirmation.getter()
{
  return 0x616D7269666E6F63;
}

uint64_t static MetricsActionContext.contextual.getter()
{
  return 0x75747865746E6F63;
}

unint64_t static MetricsActionContext.recentlySearched.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsActionContext.selectionMenu.getter()
{
  return 0x6F697463656C6573;
}

unint64_t sub_1A93634B4()
{
  unint64_t result;

  result = qword_1EEABE7D8;
  if (!qword_1EEABE7D8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsActionContext, &type metadata for MetricsActionContext);
    atomic_store(result, (unint64_t *)&qword_1EEABE7D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsActionContext()
{
  return &type metadata for MetricsActionContext;
}

uint64_t FallbackProcessingStep.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FallbackProcessingStep.fallback.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t FallbackProcessingStep.rethrow.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 56));
}

void sub_1A9363548()
{
  type metadata accessor for FallbackProcessingStep();
}

uint64_t sub_1A93635A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v8 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v9 = (v4 + v8 + v6 + 1) & ~v8;
  v10 = v2 + v6;
  v11 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v11(v10, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v2 + v9, v1);
  v11(v2 + v9 + *(int *)(a1 + 52), v3);
  return swift_deallocObject();
}

id sub_1A9363638@<X0>(void **a1@<X0>, char a2@<W1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  if ((a2 & 1) == 0)
    a3 = *a1;
  *a4 = a3;
  return a3;
}

uint64_t *sub_1A936364C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || v10 + (v9 & (unint64_t)~v8) + 1 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v11 + 16) & ~v11));
    swift_retain();
  }
  else
  {
    v15 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v16 = ((unint64_t)a2 + v9) & v15;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v15, v16, v5);
    *(_BYTE *)((((unint64_t)v4 + v9) & v15) + v10) = *(_BYTE *)(v16 + v10);
  }
  return v4;
}

uint64_t sub_1A9363738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v12 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_1A93637B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v12 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_1A9363838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v12 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_1A93638B8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  char v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  uint64_t v20;
  unsigned int v21;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (v8 <= 0xFE)
    v8 = 254;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = *(_QWORD *)(v6 + 64);
  v12 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_25;
  v13 = v11 + (v10 & ~v9) + 1;
  v14 = 8 * v13;
  if (v13 > 3)
    goto LABEL_9;
  v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
  if (HIWORD(v16))
  {
    v15 = *(_DWORD *)(a1 + v13);
    if (v15)
      goto LABEL_16;
  }
  else
  {
    if (v16 <= 0xFF)
    {
      if (v16 < 2)
        goto LABEL_25;
LABEL_9:
      v15 = *(unsigned __int8 *)(a1 + v13);
      if (!*(_BYTE *)(a1 + v13))
        goto LABEL_25;
LABEL_16:
      v17 = (v15 - 1) << v14;
      if (v13 > 3)
        v17 = 0;
      if ((_DWORD)v11 + (v10 & ~(_DWORD)v9) == -1)
        return v8 + v17 + 1;
      if (v13 <= 3)
        v18 = v11 + (v10 & ~(_DWORD)v9) + 1;
      else
        v18 = 4;
      return ((uint64_t (*)(void))((char *)&loc_1A936399C + 4 * byte_1A9420940[v18 - 1]))();
    }
    v15 = *(unsigned __int16 *)(a1 + v13);
    if (*(_WORD *)(a1 + v13))
      goto LABEL_16;
  }
LABEL_25:
  if (v5 == v8)
    return (*(uint64_t (**)(void))(v4 + 48))();
  v20 = (v10 + a1) & ~v9;
  if (v7 == v8)
    return (*(uint64_t (**)(uint64_t))(v6 + 48))(v20);
  v21 = *(unsigned __int8 *)(v20 + v11);
  if (v21 < 2)
    return 0;
  return ((v21 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_1A9363A3C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  size_t v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE)
    v8 = 254;
  else
    v8 = v7;
  v9 = *(_QWORD *)(v6 + 64)
     + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + 1;
  if (a3 > v8)
  {
    if (v9 <= 3)
    {
      v12 = ((a3 - v8 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0u;
  }
  if (v8 < a2)
  {
    v11 = ~v8 + a2;
    if (v9 < 4)
    {
      if (*(_DWORD *)(v6 + 64)
         + ((*(_DWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~*(unsigned __int8 *)(v6 + 80)) != -1)
      {
        v13 = v11 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X0 }
}

uint64_t sub_1A9363C5C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1A9363C80()
{
  id v0;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1A9089944();
}

void static FetchedResultsListPublisher.unsafeUnlimitedListPublisher(identifier:entityName:predicate:sortDescriptors:managedObjectContext:receiveOn:transform:updateRequiredComparator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, void *a8)
{
  id v14;
  id v15;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = a5;
  swift_bridgeObjectRetain();
  v15 = a7;
  a8;
  swift_retain();
  swift_retain();
  sub_1A9089794(a1, a2, a3, a4, v14, a6, 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_1A9363DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = sub_1A93F8BBC();
    if ((v2 & 0xC000000000000001) != 0)
      goto LABEL_3;
LABEL_9:
    if (v4 > *(_QWORD *)(v2 + 16) >> 3)
      return sub_1A91F3074(a1, v2);
    goto LABEL_11;
  }
  v4 = *(_QWORD *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0)
    goto LABEL_9;
LABEL_3:
  if (v2 < 0)
    v5 = v2;
  else
    v5 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v4 > sub_1A93F8BBC() / 8)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1A93F8BBC();
    v7 = sub_1A9328FF0(v5, v6);
    swift_bridgeObjectRelease();
    v2 = v7;
    return sub_1A91F3074(a1, v2);
  }
LABEL_11:
  sub_1A9270C00(a1);
  return v2;
}

uint64_t FetchedResultsCountPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t result;
  __int128 v17;

  v12 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v13 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithEntityName_, v13);

  objc_msgSend(v14, sel_setPredicate_, a3);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v15 = (void *)sub_1A93F82F8();
  objc_msgSend(v14, sel_setSortDescriptors_, v15);

  objc_msgSend(v14, sel_setFetchBatchSize_, 1);
  objc_msgSend(v14, sel_setIncludesSubentities_, 0);
  objc_msgSend(v14, sel_setIncludesPropertyValues_, 0);
  objc_msgSend(v14, sel_setReturnsObjectsAsFaults_, 1);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8618);
  swift_allocObject();
  *((_QWORD *)&v17 + 1) = sub_1A905920C;
  *(_QWORD *)&v17 = 0;
  result = sub_1A90C411C(a1, a2, (uint64_t)v14, a4, a5, (uint64_t)sub_1A90AEBD8, 0, (uint64_t)sub_1A9123748, v17, 0);
  *a6 = result;
  return result;
}

uint64_t FRPSectionInfo.section.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2);
}

uint64_t FRPSectionInfo.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A936408C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6, a1, a4);
  result = type metadata accessor for FRPSectionInfo(0, a3, a4, a5);
  *(_QWORD *)(a6 + *(int *)(result + 44)) = a2;
  return result;
}

uint64_t FRPOutput.hasMore.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

uint64_t FRPOutput.totalCount.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 32));
}

uint64_t FRPOutput.init(content:hasMore:totalCount:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a5, a1, a4);
  result = type metadata accessor for FRPOutput(0, a4, v9, v10);
  *(_BYTE *)(a5 + *(int *)(result + 28)) = a2;
  *(_QWORD *)(a5 + *(int *)(result + 32)) = a3;
  return result;
}

uint64_t sub_1A9364178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10)
{
  swift_allocObject();
  return sub_1A90899A4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void FetchedResultsListPublisher.isPreparingNextPage.getter()
{
  sub_1A9364ABC();
}

uint64_t sub_1A936423C(char a1)
{
  return a1 & 1;
}

Swift::Bool __swiftcall FetchedResultsListPublisher.shouldPrepareNextPage()()
{
  sub_1A9364B08();
}

uint64_t sub_1A9364260(char a1)
{
  return a1 & 1;
}

Swift::Void __swiftcall FetchedResultsListPublisher.loadNextPage()()
{
  sub_1A9364B5C();
}

void FetchedResultsSingleItemPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:transform:updateRequiredComparator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6;
  id v7;
  void *v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4180);
  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v7 = sub_1A9089944();
  objc_msgSend(v7, sel_setPredicate_, a5);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v8 = (void *)sub_1A93F82F8();
  objc_msgSend(v7, sel_setSortDescriptors_, v8);

  objc_msgSend(v7, sel_setFetchBatchSize_, 1);
  objc_msgSend(v7, sel_setFetchLimit_, 1);

  type metadata accessor for FetchedResultsPublisherImplementation();
}

uint64_t sub_1A93643B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v2;
  *(_QWORD *)(v8 + 24) = v7;
  swift_allocObject();
  *((_QWORD *)&v10 + 1) = sub_1A936A508;
  *(_QWORD *)&v10 = v1;
  result = sub_1A90899A4(v6, v5, v0, v11, v12, v14, v3, v4, v10, v8);
  *v13 = result;
  return result;
}

void FetchedResultsSingleItemPublisher.receive<A>(subscriber:)()
{
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
}

void sub_1A9364498(uint64_t a1)
{
  uint64_t v2;

  sub_1A93F8A90();
  MEMORY[0x1AF414014](&unk_1A9420F14, a1);
  v2 = sub_1A93F77DC();
  MEMORY[0x1E0C80A78](v2);
  sub_1A9098FF4();
}

uint64_t sub_1A9364508(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  *(_QWORD *)(v6 - 112) = a1;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v3;
  v7[3] = v1;
  v8 = *(_QWORD *)(v6 - 128);
  v7[4] = *(_QWORD *)(v6 - 136);
  v7[5] = v8;
  sub_1A93F7B84();
  swift_release();

  sub_1A93F77D0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v5, v4);
}

uint64_t sub_1A93645AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  type metadata accessor for FRPSectionInfo(255, a1, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB438]);
  v4 = sub_1A93F83D0();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v4);
  sub_1A93F86DC();
  if (!v7)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1, a1);
  v5 = sub_1A93F83D0();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v5);
  sub_1A93F86DC();
  return swift_bridgeObjectRelease();
}

void sub_1A9364698()
{
  FetchedResultsSingleItemPublisher.receive<A>(subscriber:)();
}

uint64_t FetchedResultsCountPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_unfair_lock_s *v12;
  char *v13;
  _QWORD v15[5];
  char *v16;

  v15[2] = a2;
  v15[3] = a3;
  v15[1] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8B68);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A89B0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)v3 + 112) + 16);
  os_unfair_lock_lock(v12);
  sub_1A9368DDC(&v16);
  v13 = v16;
  os_unfair_lock_unlock(v12);
  v16 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8608);
  sub_1A9066D74(&qword_1ED2A8600, &qword_1ED2A8608, (uint64_t)&unk_1A9420F14);
  sub_1A93F7B84();

  sub_1A9066D74((unint64_t *)&unk_1ED2A8B58, &qword_1ED2A8B68, MEMORY[0x1E0C95950]);
  sub_1A93F7CE0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1A93F77AC();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1A9364870@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 16);
  return result;
}

void FetchedResultsSectionedPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:sectionTransform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  id v9;
  id v10;
  void *v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4180);
  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v10 = sub_1A9089944();
  objc_msgSend(v10, sel_setPredicate_, a5);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v11 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setSortDescriptors_, v11);

  if (a7 >= 100)
    v12 = 100;
  else
    v12 = a7;
  objc_msgSend(v10, sel_setFetchBatchSize_, v12);

  type metadata accessor for FetchedResultsPublisherImplementation();
}

uint64_t sub_1A93649B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;

  swift_allocObject();
  result = sub_1A90899A4(v4, v9, v0, v10, v8, v7, v6, v5, v3, v1);
  *v11 = result;
  return result;
}

void FetchedResultsSectionedPublisher.receive<A>(subscriber:)()
{
  sub_1A9098FF4();
}

void sub_1A9364A40()
{
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
}

void sub_1A9364A5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;

  v6 = MEMORY[0x1AF414014](&unk_1A9420EF8, a1);
  PFProducer.receive<A>(subscriber:)(v3, a1, v2, v6, v1);

}

void sub_1A9364AA8()
{
  FetchedResultsSectionedPublisher.receive<A>(subscriber:)();
}

void sub_1A9364ABC()
{
  sub_1A9364D28();
}

uint64_t sub_1A9364AD0(uint64_t result)
{
  if (result)
    sub_1A909B300();
  return result;
}

void sub_1A9364B08()
{
  sub_1A9364D28();
}

uint64_t sub_1A9364B1C(uint64_t result)
{
  if (result)
    sub_1A909B300();
  return result;
}

void sub_1A9364B5C()
{
  sub_1A9364D28();
}

uint64_t sub_1A9364B70(uint64_t result)
{
  if (result)
    sub_1A9364BA4();
  return result;
}

void sub_1A9364BA4()
{
  swift_beginAccess();
  swift_retain();
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Paging();
}

void sub_1A9364C28(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t aBlock, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  uint64_t v43;
  _QWORD v44[20];

  Synchronized.modify(_:)((uint64_t)sub_1A936A384, (uint64_t)&v43, v32, a1);
  swift_release();
  if (*(_BYTE *)(v38 - 65) == 1)
  {
    v39 = *(void **)(v33 + qword_1EEABE8B0);
    v40 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v41 = (_QWORD *)swift_allocObject();
    v41[2] = v34;
    v41[3] = v35;
    v41[4] = v36;
    v41[5] = v37;
    v41[6] = v40;
    v44[4] = sub_1A936A3B0;
    v44[5] = v41;
    v44[0] = MEMORY[0x1E0C809B0];
    v44[1] = 1107296256;
    v44[2] = sub_1A908A91C;
    v44[3] = &block_descriptor_67_1;
    v42 = _Block_copy(v44);
    swift_release();
    objc_msgSend(v39, sel_performBlock_, v42);
    _Block_release(v42);
  }
}

void sub_1A9364D28()
{
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
}

uint64_t sub_1A9364D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = sub_1A93F8A90();
  sub_1A9383D40((uint64_t)sub_1A936A2E0, v1, v0, v2);
  return v4;
}

uint64_t sub_1A9364D9C()
{
  return swift_deallocObject();
}

uint64_t sub_1A9364DAC()
{
  return swift_deallocObject();
}

uint64_t sub_1A9364DBC()
{
  return swift_deallocObject();
}

uint64_t sub_1A9364DCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A93645AC(*(_QWORD *)(v1 + 16), a1);
}

char *sub_1A9364DD8(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = (char *)MEMORY[0x1AF41420C](a1 + 13);
  if (!v2)
  {
    v3 = a1[3];
    v17 = a1[2];
    v4 = (void *)a1[4];
    v5 = (void *)a1[5];
    v6 = (void *)a1[6];
    v7 = a1[8];
    v15 = a1[9];
    v16 = a1[7];
    v8 = a1[10];
    v14 = a1[11];
    v9 = a1[12];
    objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8608));
    swift_bridgeObjectRetain();
    v10 = v4;
    v11 = v5;
    v12 = v6;
    swift_retain();
    swift_retain();
    swift_retain();
    v2 = sub_1A936540C(v17, v3, v10, v11, v12, v16, v7, v15, v8, v14, v9);
    swift_unknownObjectWeakAssign();
  }
  return v2;
}

uint64_t sub_1A9364EEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = MEMORY[0x1AF41420C](a1 + 104);
  if (!result)
    type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
  *a2 = result;
  return result;
}

void sub_1A9365010(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, uint64_t a10)
{
  objc_class *v10;
  id v11;

  v11 = objc_allocWithZone(v10);
  sub_1A909905C();
}

uint64_t sub_1A93650B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  void (*v24)(uint64_t *);
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v1 = sub_1A93F7E18();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (uint64_t *)((char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + qword_1EEABE8B8);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x1E0DEF740], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_1A93F7E3C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) == 0)
    goto LABEL_26;
  v9 = v0 + qword_1EEABE8F0;
  v10 = *(_QWORD *)(v0 + qword_1EEABE8F0);
  if (v10)
  {
    v11 = *(_QWORD *)(v9 + 16);
    v12 = *(_BYTE *)(v9 + 8);
    v13 = (uint64_t *)(v0 + qword_1EEABE8E8);
    swift_beginAccess();
    v14 = *v13;
    v15 = *v13 + 64;
    v16 = 1 << *(_BYTE *)(*v13 + 32);
    v17 = -1;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    v18 = v17 & *(_QWORD *)(*v13 + 64);
    v19 = (unint64_t)(v16 + 63) >> 6;
    v20 = v12 & 1;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v21 = 0;
    while (1)
    {
      if (v18)
      {
        v22 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        v23 = v22 | (v21 << 6);
      }
      else
      {
        v25 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
        if (v25 >= v19)
          goto LABEL_23;
        v26 = *(_QWORD *)(v15 + 8 * v25);
        ++v21;
        if (!v26)
        {
          v21 = v25 + 1;
          if (v25 + 1 >= v19)
            goto LABEL_23;
          v26 = *(_QWORD *)(v15 + 8 * v21);
          if (!v26)
          {
            v21 = v25 + 2;
            if (v25 + 2 >= v19)
              goto LABEL_23;
            v26 = *(_QWORD *)(v15 + 8 * v21);
            if (!v26)
            {
              v27 = v25 + 3;
              if (v27 >= v19)
              {
LABEL_23:
                swift_release();
                return swift_bridgeObjectRelease();
              }
              v26 = *(_QWORD *)(v15 + 8 * v27);
              if (!v26)
              {
                while (1)
                {
                  v21 = v27 + 1;
                  if (__OFADD__(v27, 1))
                    break;
                  if (v21 >= v19)
                    goto LABEL_23;
                  v26 = *(_QWORD *)(v15 + 8 * v21);
                  ++v27;
                  if (v26)
                    goto LABEL_22;
                }
LABEL_25:
                __break(1u);
LABEL_26:
                __break(1u);
                break;
              }
              v21 = v27;
            }
          }
        }
LABEL_22:
        v18 = (v26 - 1) & v26;
        v23 = __clz(__rbit64(v26)) + (v21 << 6);
      }
      v24 = *(void (**)(uint64_t *))(*(_QWORD *)(v14 + 56) + 16 * v23);
      v28 = v10;
      v29 = v20;
      v30 = v11;
      swift_retain();
      v24(&v28);
      result = swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9365308@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + qword_1EEABE8F0 + 16);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + qword_1EEABE8F0);
  *(_QWORD *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A936532C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = v1 + qword_1EEABE8F0;
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_QWORD *)(v3 + 16) = v2;
  swift_bridgeObjectRelease();
  return sub_1A908A9B8();
}

uint64_t sub_1A9365364@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_1ED2A3BE0;
  swift_beginAccess();
  return sub_1A9066554(v3, a1);
}

uint64_t sub_1A93653B4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + qword_1ED2A3BB8) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A93653CC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1ED2A3BA0);
}

uint64_t sub_1A93653DC(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1ED2A3BA0) = result;
  return result;
}

uint64_t sub_1A93653EC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_1ED2A3BC8);
}

uint64_t sub_1A93653FC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + qword_1ED2A3BC8) = result;
  return result;
}

char *sub_1A936540C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _BYTE *v11;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _OWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  id v27;
  char *v28;
  char *v29;
  char *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  char *v35;
  void *v36;
  char *v37;
  _QWORD *v38;
  void *v39;
  char *v40;
  _QWORD aBlock[6];
  objc_super v46;

  v18 = qword_1EEABE8E0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5B80);
  v19 = swift_allocObject();
  *(_QWORD *)&v11[v18] = v19;
  v20 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v11[qword_1EEABE8E8] = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v19 + 24) = 0;
  *(_QWORD *)(v19 + 32) = 0;
  *(_QWORD *)(v19 + 16) = 0;
  *(_DWORD *)(v19 + 40) = 0;
  v21 = &v11[qword_1EEABE8F0];
  v21[1] = 0;
  v21[2] = 0;
  *v21 = 0;
  v22 = &v11[qword_1EEABE8F8];
  *v22 = 0u;
  v22[1] = 0u;
  v22[2] = 0u;
  *(_OWORD *)((char *)v22 + 41) = 0u;
  v23 = &v11[qword_1ED2A3BE0];
  v24 = sub_1A93F75FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  *(_QWORD *)&v11[qword_1ED2A3BB8] = 0;
  *(_QWORD *)&v11[qword_1ED2A3BB0] = v20;
  *(_QWORD *)&v11[qword_1ED2A3BD8] = v20;
  v11[qword_1ED2A3BA0] = 0;
  *(_QWORD *)&v11[qword_1ED2A3BC8] = 0;
  v25 = &v11[qword_1EEABE8A0];
  *v25 = a1;
  v25[1] = a2;
  v26 = v11;
  swift_bridgeObjectRetain();
  v27 = objc_msgSend(a3, sel_fetchBatchSize);
  *(_QWORD *)&v26[qword_1EEABE8A8] = v27;
  *(_QWORD *)&v26[qword_1EEABE8B0] = a4;
  *(_QWORD *)&v26[qword_1EEABE8B8] = a5;
  v28 = &v26[qword_1EEABE8C0];
  *(_QWORD *)v28 = a6;
  *((_QWORD *)v28 + 1) = a7;
  v29 = &v26[qword_1EEABE8C8];
  *(_QWORD *)v29 = a8;
  *((_QWORD *)v29 + 1) = a9;
  v30 = &v26[qword_1EEABE8D0];
  *(_QWORD *)v30 = a10;
  *((_QWORD *)v30 + 1) = a11;
  v31 = objc_allocWithZone(MEMORY[0x1E0C97B68]);
  v32 = a4;
  v33 = a5;
  swift_retain();
  swift_retain();
  swift_retain();
  v34 = objc_msgSend(v31, sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, a3, v32, 0, 0);
  *(_QWORD *)&v26[qword_1EEABE8D8] = v34;

  v46.receiver = v26;
  v46.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8608);
  v35 = (char *)objc_msgSendSuper2(&v46, sel_init);
  v36 = *(void **)&v35[qword_1EEABE8D8];
  v37 = v35;
  objc_msgSend(v36, sel_setDelegate_, v37);
  v38 = (_QWORD *)swift_allocObject();
  v38[2] = v37;
  v38[3] = a1;
  v38[4] = a2;
  aBlock[4] = sub_1A936A314;
  aBlock[5] = v38;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_51_1;
  v39 = _Block_copy(aBlock);
  v40 = v37;
  swift_release();
  objc_msgSend(v32, sel_performBlock_, v39);

  swift_release();
  swift_release();
  swift_release();
  _Block_release(v39);
  return v40;
}

uint64_t sub_1A936575C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  os_unfair_lock_s **v29;
  os_unfair_lock_s *v30;
  os_unfair_lock_s *v31;
  void *v32;
  NSObject *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  id v44;
  void *v45;
  uint64_t v46;
  NSObject *v47;
  id v48;
  NSObject *v49;
  id v50;
  os_log_type_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _OWORD v66[2];
  _OWORD v67[2];
  _OWORD v68[2];
  uint64_t v69;

  v69 = *MEMORY[0x1E0C80C00];
  v62 = sub_1A93F75FC();
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v59 - v9;
  if (qword_1ED2A4318 != -1)
    swift_once();
  swift_beginAccess();
  v11 = (id)qword_1ED2A4308;
  v12 = a1;
  sub_1A93F75CC();
  sub_1A93F8940();
  v13 = (void *)qword_1ED2A4308;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v14 = swift_allocObject();
  v63 = xmmword_1A9405520;
  *(_OWORD *)(v14 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1A90A92DC();
  *(_QWORD *)(v14 + 64) = v15;
  *(_QWORD *)(v14 + 32) = a2;
  *(_QWORD *)(v14 + 40) = a3;
  v16 = v13;
  swift_bridgeObjectRetain();
  sub_1A93F75B4();

  swift_bridgeObjectRelease();
  v17 = *(Class *)((char *)&v12->isa + qword_1EEABE8D8);
  *(_QWORD *)&v67[0] = 0;
  if ((objc_msgSend(v17, sel_performFetch_, v67) & 1) == 0)
  {
    v44 = *(id *)&v67[0];
    v45 = (void *)sub_1A93F7128();

    swift_willThrow();
    if (qword_1ED2A3F00 != -1)
      goto LABEL_15;
    while (1)
    {
      v46 = sub_1A93F7698();
      __swift_project_value_buffer(v46, (uint64_t)qword_1ED2A3EE0);
      v47 = v12;
      v48 = v45;
      v49 = v47;
      v50 = v45;
      v12 = sub_1A93F7674();
      v51 = sub_1A93F87A8();
      if (os_log_type_enabled(v12, v51))
      {
        v52 = swift_slowAlloc();
        v53 = (_QWORD *)swift_slowAlloc();
        v54 = swift_slowAlloc();
        *(_QWORD *)&v67[0] = v54;
        *(_DWORD *)v52 = 138412546;
        v55 = objc_msgSend(v17, sel_fetchRequest);
        *(_QWORD *)&v64 = v55;
        sub_1A93F8AA8();
        *v53 = v55;

        *(_WORD *)(v52 + 12) = 2080;
        *(_QWORD *)&v64 = v45;
        v56 = v45;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
        v57 = sub_1A93F8094();
        *(_QWORD *)&v64 = sub_1A906436C(v57, v58, (uint64_t *)v67);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1A904E000, v12, v51, "Failed to start FetchedResultsPublisher FRC: request: %@\nerror: %s", (uint8_t *)v52, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v53, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v54, -1, -1);
        MEMORY[0x1AF41411C](v52, -1, -1);

        __break(1u);
      }

      __break(1u);
LABEL_15:
      swift_once();
    }
  }
  v18 = *(id *)&v67[0];
  v19 = objc_msgSend(v17, sel_fetchedObjects);
  if (v19)
  {
    v20 = v19;
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
    v21 = sub_1A93F8310();

  }
  else
  {
    v21 = MEMORY[0x1E0DEE9D8];
  }
  v60 = v15;
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_1A93F8934();
  v23 = (void *)qword_1ED2A4308;
  v24 = swift_allocObject();
  v25 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v24 + 16) = v63;
  v26 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v24 + 56) = v25;
  *(_QWORD *)(v24 + 64) = v26;
  *(_QWORD *)(v24 + 32) = v22;
  v27 = v23;
  sub_1A93F75B4();

  swift_bridgeObjectRelease();
  v28 = *(uint64_t *)((char *)&v12->isa + qword_1EEABE8A8);
  v29 = (os_unfair_lock_s **)((char *)v12 + qword_1EEABE8E0);
  swift_beginAccess();
  v30 = *v29;
  v31 = *v29 + 10;
  os_unfair_lock_lock(v31);
  *(_QWORD *)&v30[4]._os_unfair_lock_opaque = 0;
  *(_QWORD *)&v30[6]._os_unfair_lock_opaque = v28;
  *(_QWORD *)&v30[8]._os_unfair_lock_opaque = 0;
  os_unfair_lock_unlock(v31);
  swift_endAccess();
  *(_QWORD *)&v64 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)&v64 + 1) = MEMORY[0x1E0DEE9E8];
  v65 = 0u;
  memset(v66, 0, 25);
  v32 = (void *)qword_1ED2A4308;
  v33 = v12;
  v34 = v32;
  sub_1A93F75CC();
  sub_1A93F8940();
  v35 = (void *)qword_1ED2A4308;
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = v63;
  v37 = *(uint64_t *)((char *)&v33->isa + qword_1EEABE8A0);
  v38 = *(uint64_t *)((char *)&v33[1].isa + qword_1EEABE8A0);
  v39 = v60;
  *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v36 + 64) = v39;
  *(_QWORD *)(v36 + 32) = v37;
  *(_QWORD *)(v36 + 40) = v38;
  v40 = v35;
  swift_bridgeObjectRetain();
  sub_1A93F75B4();

  swift_bridgeObjectRelease();
  sub_1A9365EF0((uint64_t)&v64);
  v67[0] = v64;
  v67[1] = v65;
  v68[0] = v66[0];
  *(_OWORD *)((char *)v68 + 9) = *(_OWORD *)((char *)v66 + 9);
  sub_1A9098B64((uint64_t)"FetchedResultsPublisher Initial Page", 36, 2, (uint64_t)v7, v67);
  sub_1A909B78C((uint64_t)v67);
  v41 = *(void (**)(char *, uint64_t))(v61 + 8);
  v42 = v62;
  v41(v7, v62);
  return ((uint64_t (*)(char *, uint64_t))v41)(v10, v42);
}

void sub_1A9365EF0(uint64_t a1)
{
  NSObject *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _OWORD *v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, _OWORD *);
  NSObject *v20;
  int v21;
  char v22;
  char *v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  os_signpost_id_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  NSObject **v43;
  NSObject *v44;
  os_unfair_lock_s *v45;
  Class isa;
  uint64_t v47;
  uint64_t v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id *v56;
  unint64_t v57;
  id *v58;
  id *v59;
  char *v60;
  id *v61;
  uint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  char v65;
  uint64_t v66;
  id v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  id v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  void *v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  int64_t v80;
  uint64_t v81;
  uint64_t v82;
  id *v83;
  id v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  char *v94;
  id *v95;
  id v96;
  _QWORD *v97;
  int64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  int64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  char v129;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v131;
  uint64_t *v132;
  unint64_t v133;
  char v134;
  char v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  id *v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  id *v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;
  char *v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  os_unfair_lock_s *v151;
  uint64_t v152;
  BOOL v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  void *v157;
  char *v158;
  char *v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  NSObject *v165;
  char *v166;
  os_signpost_type_t v167;
  uint64_t v168;
  const char *v169;
  _OWORD *v170;
  char *v171;
  uint64_t v172;
  uint8_t *v173;
  os_signpost_id_t v174;
  os_signpost_type_t v175;
  char *v176;
  void (*v177)(char *, uint64_t);
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  NSObject **v187;
  char *v188;
  char *v189;
  void (*v190)(char *, uint64_t);
  char *v191;
  uint64_t v192;
  unint64_t v193;
  _OWORD *v194;
  uint64_t v195;
  void (*v196)(char *, char *, uint64_t);
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  id *v204;
  int64_t v205;
  char *v206;
  id *p_isa;
  uint64_t v208;
  _QWORD aBlock[19];
  _OWORD v210[2];
  _BYTE v211[25];

  v2 = (unint64_t)v1;
  v201 = a1;
  v184 = sub_1A93F7638();
  v192 = *(_QWORD *)(v184 - 8);
  MEMORY[0x1E0C80A78](v184);
  v191 = (char *)&v178 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_1A93F7D58();
  v182 = *(_QWORD *)(v183 - 8);
  MEMORY[0x1E0C80A78](v183);
  v181 = (char *)&v178 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = sub_1A93F7DB8();
  v179 = *(_QWORD *)(v180 - 8);
  MEMORY[0x1E0C80A78](v180);
  v178 = (char *)&v178 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = sub_1A93F75FC();
  v6 = *(id **)(v199 - 8);
  MEMORY[0x1E0C80A78](v199);
  v8 = (char *)&v178 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v197 = (char *)&v178 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v178 - v12;
  v14 = (_OWORD *)sub_1A93F762C();
  v15 = *((_QWORD *)v14 - 1);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v178 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A5890 != -1)
    goto LABEL_24;
  while (1)
  {
    v18 = __swift_project_value_buffer((uint64_t)v14, (uint64_t)qword_1ED2A5870);
    v19 = *(void (**)(char *, uint64_t, _OWORD *))(v15 + 16);
    v194 = v14;
    v19(v17, v18, v14);
    sub_1A93F7620();
    sub_1A93F75D8();
    v20 = (id)v2;
    v2 = sub_1A93F7620();
    v21 = sub_1A93F8940();
    v22 = sub_1A93F8A6C();
    v189 = v8;
    v193 = v15;
    v188 = v17;
    if ((v22 & 1) != 0)
    {
      v196 = (void (*)(char *, char *, uint64_t))v6[2];
      v23 = v197;
      v17 = (char *)v199;
      v196(v197, v13, v199);
      v206 = v13;
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      p_isa = v6;
      v26 = v25;
      *(_DWORD *)v24 = 136315138;
      *(_QWORD *)&v210[0] = v25;
      LODWORD(v205) = v21;
      v27 = *(uint64_t *)((char *)&v20->isa + qword_1EEABE8A0);
      v28 = *(unint64_t *)((char *)&v20[1].isa + qword_1EEABE8A0);
      swift_bridgeObjectRetain();
      aBlock[0] = sub_1A906436C(v27, v28, (uint64_t *)v210);
      v13 = v206;
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      v29 = sub_1A93F75E4();
      _os_signpost_emit_with_name_impl(&dword_1A904E000, (os_log_t)v2, (os_signpost_type_t)v205, v29, "FRP.RegenerateResults", "Identifier: %s", v24, 0xCu);
      swift_arrayDestroy();
      v30 = v26;
      v6 = p_isa;
      MEMORY[0x1AF41411C](v30, -1, -1);
      MEMORY[0x1AF41411C](v24, -1, -1);

      ((void (*)(char *, char *))v6[1])(v23, v17);
      v31 = v196;
    }
    else
    {

      v31 = (void (*)(char *, char *, uint64_t))v6[2];
      v17 = (char *)v199;
      v23 = v197;
    }
    v196 = v31;
    v31(v23, v13, (uint64_t)v17);
    sub_1A93F765C();
    v14 = (_OWORD *)swift_allocObject();
    v195 = sub_1A93F7650();
    v15 = (unint64_t)v6[1];
    ((void (*)(char *, char *))v15)(v13, v17);
    p_isa = (id *)&v20->isa;
    v32 = objc_msgSend(*(id *)((char *)&v20->isa + qword_1EEABE8D8), sel_sections);
    v33 = MEMORY[0x1E0DEE9D8];
    v190 = (void (*)(char *, uint64_t))v15;
    if (!v32)
    {
      v36 = MEMORY[0x1E0DEE9D8];
      v39 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (!v39)
        goto LABEL_27;
      goto LABEL_19;
    }
    v34 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4218);
    v2 = sub_1A93F8310();

    if (!(v2 >> 62))
    {
      v35 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v35)
        break;
      goto LABEL_26;
    }
    swift_bridgeObjectRetain();
    v35 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v35)
      break;
LABEL_26:
    swift_bridgeObjectRelease();
    v36 = MEMORY[0x1E0DEE9D8];
    v39 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v39)
      goto LABEL_27;
LABEL_19:
    v8 = 0;
    v40 = (uint64_t *)(v36 + 32);
    while (1)
    {
      v41 = *v40++;
      v42 = __OFADD__(v8, v41);
      v8 += v41;
      if (v42)
        break;
      if (!--v39)
        goto LABEL_28;
    }
    __break(1u);
LABEL_24:
    swift_once();
  }
  *(_QWORD *)&v210[0] = v33;
  sub_1A929E608(0, v35 & ~(v35 >> 63), 0);
  if (v35 < 0)
  {
    __break(1u);
    os_unfair_lock_unlock((os_unfair_lock_t)v2);
    __break(1u);
    return;
  }
  v17 = 0;
  v36 = *(_QWORD *)&v210[0];
  v15 = v2 & 0xC000000000000001;
  do
  {
    if (v15)
    {
      v14 = (_OWORD *)MEMORY[0x1AF4129DC](v17, v2);
    }
    else
    {
      v14 = *(_OWORD **)(v2 + 8 * (_QWORD)v17 + 32);
      swift_unknownObjectRetain();
    }
    v6 = (id *)objc_msgSend(v14, sel_numberOfObjects);
    swift_unknownObjectRelease();
    *(_QWORD *)&v210[0] = v36;
    v38 = *(_QWORD *)(v36 + 16);
    v37 = *(_QWORD *)(v36 + 24);
    v13 = (char *)(v38 + 1);
    if (v38 >= v37 >> 1)
    {
      v14 = v210;
      sub_1A929E608(v37 > 1, v38 + 1, 1);
      v36 = *(_QWORD *)&v210[0];
    }
    ++v17;
    *(_QWORD *)(v36 + 16) = v13;
    *(_QWORD *)(v36 + 8 * v38 + 32) = v6;
  }
  while ((char *)v35 != v17);
  swift_bridgeObjectRelease();
  v33 = MEMORY[0x1E0DEE9D8];
  v39 = *(_QWORD *)(v36 + 16);
  if (v39)
    goto LABEL_19;
LABEL_27:
  v8 = 0;
LABEL_28:
  v43 = (NSObject **)((char *)p_isa + qword_1EEABE8E0);
  swift_beginAccess();
  v44 = *v43;
  v45 = (os_unfair_lock_s *)&(*v43)[5];
  swift_retain();
  os_unfair_lock_lock(v45);
  isa = v44[3].isa;
  os_unfair_lock_unlock(v45);
  swift_release();
  if ((uint64_t)v8 >= (uint64_t)isa)
    v47 = (uint64_t)isa;
  else
    v47 = (uint64_t)v8;
  v200 = v8;
  v187 = v43;
  if (v47 <= 10000)
  {
    if (v47 < 0)
    {
      __break(1u);
      goto LABEL_38;
    }
  }
  else
  {
    if (qword_1ED2A3F00 != -1)
      swift_once();
    v48 = sub_1A93F7698();
    __swift_project_value_buffer(v48, (uint64_t)qword_1ED2A3EE0);
    v6 = p_isa;
    v44 = sub_1A93F7674();
    v49 = sub_1A93F879C();
    if (os_log_type_enabled(v44, v49))
    {
      v50 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      *(_QWORD *)&v210[0] = v51;
      *(_DWORD *)v50 = 136315394;
      v53 = *(uint64_t *)((char *)v6 + qword_1EEABE8A0);
      v52 = *(unint64_t *)((char *)v6 + qword_1EEABE8A0 + 8);
      swift_bridgeObjectRetain();
      aBlock[0] = sub_1A906436C(v53, v52, (uint64_t *)v210);
      v33 = MEMORY[0x1E0DEE9D8];
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2048;
      aBlock[0] = v47;
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v44, v49, "FRC \"%s\" has requested %ld items. Loading this many items may cause performance issues for the entire app.", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v51, -1, -1);
      v54 = v50;
      v8 = v200;
      MEMORY[0x1AF41411C](v54, -1, -1);

      goto LABEL_39;
    }
LABEL_38:

  }
LABEL_39:
  v55 = sub_1A9369920(0, v47, v36);
  swift_bridgeObjectRelease();
  v56 = p_isa;
  v57 = sub_1A9369818(v55, (uint64_t)v56);
  swift_bridgeObjectRelease();

  v58 = v56;
  v59 = (id *)sub_1A9369DC8(v57, (uint64_t)v58, v201);
  v186 = 0;
  swift_bridgeObjectRelease();

  p_isa = v59;
  v60 = (char *)v59[2];
  v204 = v58;
  if (!v60)
  {
    swift_bridgeObjectRelease();
    v79 = MEMORY[0x1E0DEE9D8];
    v80 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v80)
      goto LABEL_56;
    goto LABEL_78;
  }
  v61 = p_isa + 6;
  v62 = (uint64_t)p_isa[5];
  v206 = (char *)p_isa[6];
  swift_bridgeObjectRetain();
  v63 = MEMORY[0x1E0DEE9D8];
  v64 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v65 = *((_BYTE *)v61 - 16);
    v66 = (uint64_t)*(v61 - 1);
    v67 = *v61;
    if (v66 != v62)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v63 = (unint64_t)sub_1A91187A0(0, *(_QWORD *)(v63 + 16) + 1, 1, (_QWORD *)v63);
      v69 = *(_QWORD *)(v63 + 16);
      v68 = *(_QWORD *)(v63 + 24);
      if (v69 >= v68 >> 1)
        v63 = (unint64_t)sub_1A91187A0((_QWORD *)(v68 > 1), v69 + 1, 1, (_QWORD *)v63);
      *(_QWORD *)(v63 + 16) = v69 + 1;
      v70 = v63 + 16 * v69;
      *(_QWORD *)(v70 + 32) = v62;
      *(_QWORD *)(v70 + 40) = v64;
      v62 = v66;
      v64 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v71 = v67;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v64 = sub_1A911867C(0, v64[2] + 1, 1, v64);
    v73 = v64[2];
    v72 = v64[3];
    if (v73 >= v72 >> 1)
      v64 = sub_1A911867C((_QWORD *)(v72 > 1), v73 + 1, 1, v64);
    v64[2] = v73 + 1;
    v74 = &v64[3 * v73];
    *((_BYTE *)v74 + 32) = v65;
    v74[5] = v66;
    v74[6] = v71;

    v61 += 3;
    --v60;
  }
  while (v60);
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_138:
    v63 = (unint64_t)sub_1A91187A0(0, *(_QWORD *)(v63 + 16) + 1, 1, (_QWORD *)v63);
  v33 = MEMORY[0x1E0DEE9D8];
  v75 = v206;
  v77 = *(_QWORD *)(v63 + 16);
  v76 = *(_QWORD *)(v63 + 24);
  if (v77 >= v76 >> 1)
    v63 = (unint64_t)sub_1A91187A0((_QWORD *)(v76 > 1), v77 + 1, 1, (_QWORD *)v63);
  v58 = v204;
  *(_QWORD *)(v63 + 16) = v77 + 1;
  v78 = v63 + 16 * v77;
  *(_QWORD *)(v78 + 32) = v62;
  *(_QWORD *)(v78 + 40) = v64;
  v79 = sub_1A911E840(v63);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v8 = v200;
  v80 = *(_QWORD *)(v79 + 16);
  if (!v80)
  {
LABEL_78:
    swift_bridgeObjectRelease();
    v206 = (char *)MEMORY[0x1E0DEE9D8];
    v198 = MEMORY[0x1E0DEE9D8];
    goto LABEL_79;
  }
LABEL_56:
  *(_QWORD *)&v210[0] = v33;
  sub_1A929E5B0(0, v80, 0);
  v81 = 0;
  v82 = *(_QWORD *)&v210[0];
  v203 = v79;
  p_isa = (id *)(v79 + 32);
  v205 = v80;
  do
  {
    v83 = &p_isa[2 * v81];
    v84 = *v83;
    v85 = v83[1];
    v86 = v85[2];
    if (v86)
    {
      aBlock[0] = v33;
      swift_bridgeObjectRetain();
      sub_1A93F8D84();
      v87 = 6;
      do
      {
        v88 = (id)v85[v87];
        sub_1A93F8D60();
        sub_1A93F8D90();
        sub_1A93F8D9C();
        sub_1A93F8D6C();
        v87 += 3;
        --v86;
      }
      while (v86);
      v89 = aBlock[0];
      swift_bridgeObjectRelease();
      v80 = v205;
    }
    else
    {
      v89 = v33;
    }
    *(_QWORD *)&v210[0] = v82;
    v91 = *(_QWORD *)(v82 + 16);
    v90 = *(_QWORD *)(v82 + 24);
    if (v91 >= v90 >> 1)
    {
      sub_1A929E5B0(v90 > 1, v91 + 1, 1);
      v82 = *(_QWORD *)&v210[0];
    }
    ++v81;
    *(_QWORD *)(v82 + 16) = v91 + 1;
    v92 = v82 + 16 * v91;
    *(_QWORD *)(v92 + 32) = v84;
    *(_QWORD *)(v92 + 40) = v89;
  }
  while (v81 != v80);
  v198 = v82;
  *(_QWORD *)&v210[0] = v33;
  sub_1A929E568(0, v80, 0);
  v93 = 0;
  v94 = *(char **)&v210[0];
  do
  {
    v95 = &p_isa[2 * v93];
    v96 = *v95;
    v97 = v95[1];
    v98 = v97[2];
    if (v98)
    {
      v206 = v94;
      aBlock[0] = v33;
      swift_bridgeObjectRetain();
      sub_1A929E594(0, v98, 0);
      v99 = aBlock[0];
      v100 = *(_QWORD *)(aBlock[0] + 16);
      v101 = 4;
      do
      {
        v102 = v97[v101];
        aBlock[0] = v99;
        v103 = *(_QWORD *)(v99 + 24);
        if (v100 >= v103 >> 1)
        {
          sub_1A929E594(v103 > 1, v100 + 1, 1);
          v99 = aBlock[0];
        }
        *(_QWORD *)(v99 + 16) = v100 + 1;
        *(_BYTE *)(v99 + v100 + 32) = v102;
        v101 += 3;
        ++v100;
        --v98;
      }
      while (v98);
      swift_bridgeObjectRelease();
      v33 = MEMORY[0x1E0DEE9D8];
      v94 = v206;
      v80 = v205;
    }
    else
    {
      v99 = v33;
    }
    *(_QWORD *)&v210[0] = v94;
    v105 = *((_QWORD *)v94 + 2);
    v104 = *((_QWORD *)v94 + 3);
    if (v105 >= v104 >> 1)
    {
      sub_1A929E568(v104 > 1, v105 + 1, 1);
      v94 = *(char **)&v210[0];
    }
    ++v93;
    *((_QWORD *)v94 + 2) = v105 + 1;
    v106 = &v94[16 * v105];
    *((_QWORD *)v106 + 4) = v96;
    *((_QWORD *)v106 + 5) = v99;
  }
  while (v93 != v80);
  v206 = v94;
  swift_bridgeObjectRelease();
  v8 = v200;
  v58 = v204;
LABEL_79:
  v107 = (uint64_t *)((char *)v58 + qword_1ED2A3BB0);
  swift_beginAccess();
  v108 = swift_bridgeObjectRetain();
  sub_1A9158468(v108);
  v64 = v109;
  v110 = v201;
  v62 = *(_QWORD *)(v201 + 8);
  v111 = swift_bridgeObjectRetain();
  v112 = sub_1A9363DC4(v111, (uint64_t)v64);
  swift_bridgeObjectRelease();
  if ((v112 & 0xC000000000000001) != 0)
  {
    *(_QWORD *)(v110 + 40) = sub_1A93F8BBC();
    v64 = (_QWORD *)sub_1A93F8B8C();
    v62 = sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
    sub_1A90A318C((unint64_t *)&unk_1ED2A41C0, MEMORY[0x1E0DEFCF8]);
    sub_1A93F8670();
    v112 = aBlock[14];
    p_isa = (id *)aBlock[15];
    v113 = aBlock[16];
    v114 = aBlock[17];
    v63 = aBlock[18];
  }
  else
  {
    v114 = 0;
    *(_QWORD *)(v110 + 40) = *(_QWORD *)(v112 + 16);
    v115 = -1 << *(_BYTE *)(v112 + 32);
    v116 = *(_QWORD *)(v112 + 56);
    p_isa = (id *)(v112 + 56);
    v117 = ~v115;
    v118 = -v115;
    if (v118 < 64)
      v119 = ~(-1 << v118);
    else
      v119 = -1;
    v63 = v119 & v116;
    v113 = v117;
  }
  v203 = v112 & 0x7FFFFFFFFFFFFFFFLL;
  v185 = v113;
  v205 = (unint64_t)(v113 + 64) >> 6;
  v202 = MEMORY[0x1E0DEE9B0] + 8;
  while (2)
  {
    if (v112 < 0)
    {
      v122 = sub_1A93F8BE0();
      if (!v122)
        goto LABEL_116;
      aBlock[0] = v122;
      sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v123 = *(id *)&v210[0];
      swift_unknownObjectRelease();
      v121 = v114;
      v64 = (_QWORD *)v63;
      if (!v123)
        goto LABEL_116;
      goto LABEL_109;
    }
    if (v63)
    {
      v64 = (_QWORD *)((v63 - 1) & v63);
      v120 = __clz(__rbit64(v63)) | (v114 << 6);
      v121 = v114;
LABEL_108:
      v123 = *(id *)(*(_QWORD *)(v112 + 48) + 8 * v120);
      if (!v123)
        goto LABEL_116;
LABEL_109:
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v127 = sub_1A912E44C((uint64_t)v123);
      v129 = v128;
      swift_bridgeObjectRelease();
      if ((v129 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v131 = *v107;
        aBlock[0] = *v107;
        *v107 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1A9308280();
          v131 = aBlock[0];
        }

        sub_1A91A9F9C(v127, v131);
        *v107 = v131;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      v132 = (uint64_t *)((char *)v204 + qword_1ED2A3BD8);
      swift_beginAccess();
      v62 = *v132;
      swift_bridgeObjectRetain();
      v133 = sub_1A912E44C((uint64_t)v123);
      v135 = v134;
      swift_bridgeObjectRelease();
      if ((v135 & 1) != 0)
      {
        v136 = swift_isUniquelyReferenced_nonNull_native();
        v62 = *v132;
        aBlock[0] = *v132;
        *v132 = 0x8000000000000000;
        if (!v136)
        {
          sub_1A93080CC();
          v62 = aBlock[0];
        }

        sub_1A91A9DE4(v133, v62);
        *v132 = v62;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();

      v114 = v121;
      v63 = (unint64_t)v64;
      continue;
    }
    break;
  }
  v124 = v114 + 1;
  if (__OFADD__(v114, 1))
  {
    __break(1u);
    goto LABEL_138;
  }
  if (v124 >= v205)
    goto LABEL_116;
  v125 = (unint64_t)p_isa[v124];
  v121 = v114 + 1;
  if (v125)
    goto LABEL_107;
  v121 = v114 + 2;
  if (v114 + 2 >= v205)
    goto LABEL_116;
  v125 = (unint64_t)p_isa[v121];
  if (v125)
    goto LABEL_107;
  v121 = v114 + 3;
  if (v114 + 3 >= v205)
    goto LABEL_116;
  v125 = (unint64_t)p_isa[v121];
  if (v125)
    goto LABEL_107;
  v121 = v114 + 4;
  if (v114 + 4 >= v205)
    goto LABEL_116;
  v125 = (unint64_t)p_isa[v121];
  if (v125)
  {
LABEL_107:
    v64 = (_QWORD *)((v125 - 1) & v125);
    v120 = __clz(__rbit64(v125)) + (v121 << 6);
    goto LABEL_108;
  }
  v126 = v114 + 5;
  while (v205 != v126)
  {
    v125 = (unint64_t)p_isa[v126++];
    if (v125)
    {
      v121 = v126 - 1;
      goto LABEL_107;
    }
  }
LABEL_116:
  sub_1A9120240();
  v137 = v201;
  v138 = v198;
  v139 = v204;
  if ((*(_BYTE *)(v201 + 56) & 1) == 0)
  {
    v140 = *(uint64_t *)((char *)v204 + qword_1ED2A3BB8);
    if (!v140
      || (swift_bridgeObjectRetain(),
          swift_bridgeObjectRetain(),
          v141 = sub_1A9147924(v138, v140),
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          (v141 & 1) == 0))
    {
      *(_BYTE *)(v137 + 56) = 1;
    }
  }
  v142 = *(_QWORD *)(v137 + 8);
  if ((v142 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v143 = (id *)sub_1A93F8BBC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v143 = *(id **)(v142 + 16);
  }
  v144 = qword_1ED2A3BA0;
  if ((uint64_t)v143 < (uint64_t)v8 != *((_BYTE *)v139 + qword_1ED2A3BA0))
    *(_BYTE *)(v137 + 56) = 1;
  p_isa = v143;
  *(_QWORD *)(v137 + 48) = v8;
  v145 = qword_1ED2A3BC8;
  if (v8 != *(id *)((char *)v139 + qword_1ED2A3BC8))
    *(_BYTE *)(v137 + 56) = 1;
  v146 = *(_OWORD *)(v137 + 16);
  v210[0] = *(_OWORD *)v137;
  v210[1] = v146;
  *(_OWORD *)v211 = *(_OWORD *)(v137 + 32);
  *(_OWORD *)&v211[9] = *(_OWORD *)(v137 + 41);
  v147 = (char *)v137;
  v148 = *(uint64_t *)((char *)v139 + qword_1EEABE8A0);
  v149 = *(unint64_t *)((char *)v139 + qword_1EEABE8A0 + 8);
  sub_1A909B7BC((uint64_t)v210);
  sub_1A909B3B4(v148, v149);
  v150 = sub_1A909B78C((uint64_t)v210);
  v151 = (os_unfair_lock_s *)*v187;
  MEMORY[0x1E0C80A78](v150);
  v152 = (uint64_t)v200;
  *(&v178 - 2) = v147;
  *(&v178 - 1) = (char *)v152;
  swift_retain();
  os_unfair_lock_lock(v151 + 10);
  sub_1A918FD60((uint64_t)&v151[4], (uint64_t (*)(void))sub_1A936A320);
  os_unfair_lock_unlock(v151 + 10);
  swift_release();
  if (v147[56] == 1)
  {
    v153 = (uint64_t)p_isa < v152;
    *(id *)((char *)v139 + qword_1ED2A3BB8) = (id)v198;
    swift_bridgeObjectRelease();
    *((_BYTE *)v139 + v144) = v153;
    *(id *)((char *)v139 + v145) = (id)v152;
    v154 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v155 = swift_allocObject();
    v156 = v206;
    *(_QWORD *)(v155 + 16) = v154;
    *(_QWORD *)(v155 + 24) = v156;
    *(_BYTE *)(v155 + 32) = v153;
    *(_QWORD *)(v155 + 40) = v152;
    aBlock[4] = sub_1A936A374;
    aBlock[5] = v155;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_60_0;
    v157 = _Block_copy(aBlock);
    swift_retain();
    v158 = v178;
    sub_1A93F7D88();
    v208 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
    v159 = v181;
    v160 = v183;
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v158, v159, v157);
    _Block_release(v157);
    (*(void (**)(char *, uint64_t))(v182 + 8))(v159, v160);
    (*(void (**)(char *, uint64_t))(v179 + 8))(v158, v180);
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v161 = v193;
  v162 = v192;
  v163 = v191;
  v164 = v188;
  v165 = sub_1A93F7620();
  v166 = v189;
  sub_1A93F7644();
  v167 = sub_1A93F8934();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    swift_retain();
    sub_1A93F7668();
    swift_release();
    v168 = v184;
    if ((*(unsigned int (**)(char *, uint64_t))(v162 + 88))(v163, v184) == *MEMORY[0x1E0DF2190])
    {
      v169 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v162 + 8))(v163, v168);
      v169 = "";
    }
    v171 = v197;
    v172 = v199;
    v196(v197, v166, v199);
    v173 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v173 = 0;
    v174 = sub_1A93F75E4();
    v175 = v167;
    v176 = v171;
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v165, v175, v174, "FRP", v169, v173, 2u);
    MEMORY[0x1AF41411C](v173, -1, -1);

    v177 = v190;
    v190(v166, v172);
    v170 = v194;
    v177(v176, v172);
  }
  else
  {

    v170 = v194;
    v190(v166, v199);
  }
  swift_release();
  (*(void (**)(char *, _OWORD *))(v161 + 8))(v164, v170);
}

void sub_1A93676F0()
{
  sub_1A936A228();
}

void sub_1A9367710()
{
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
}

id sub_1A9367744(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 16) = v1;
  *(_QWORD *)(v2 - 8) = a1;
  return objc_msgSendSuper2((objc_super *)(v2 - 16), sel_dealloc);
}

uint64_t sub_1A9367764(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A908A160(*(_QWORD *)(a1 + qword_1EEABE8F8));
  sub_1A905FD54(a1 + qword_1ED2A3BE0, &qword_1ED2AC900);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *sub_1A9367898(uint64_t *result, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *result;
  v3 = result[1];
  v5 = result[2];
  if (*result < v5)
  {
    v7 = __OFSUB__(v4, v3);
    v6 = v4 - v3 < 0;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  if (v6 != v7)
  {
    v9 = 0;
    v8 = 0;
  }
  else
  {
    v9 = __OFSUB__(v4, v5);
    v8 = v4 - v5 < 0;
  }
  if (v8 != v9)
  {
    v10 = *(_QWORD *)(a2 + qword_1EEABE8A8);
    v7 = __OFADD__(v3, v10);
    v11 = v3 + v10;
    if (v7)
    {
      __break(1u);
    }
    else
    {
      if (v11 < v5)
        v5 = v11;
      result[1] = v5;
      *a3 = 1;
    }
  }
  return result;
}

uint64_t sub_1A93678E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A93F75FC();
  MEMORY[0x1E0C80A78](v2);
  swift_beginAccess();
  result = MEMORY[0x1AF41420C](a1 + 16);
  if (result)
    sub_1A909B300();
  return result;
}

uint64_t sub_1A9367A54(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD *__return_ptr, uint64_t *);
  id v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v37;
  id v38;
  char v39;
  void (*v40)(_QWORD *__return_ptr, uint64_t *);
  char v41;
  id v42;
  char v43;
  id v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  unsigned int v50;
  uint64_t v51;
  _QWORD v52[3];
  _QWORD v53[3];

  v10 = (uint64_t *)(a2 + qword_1ED2A3BB0);
  result = swift_beginAccess();
  v12 = *v10;
  if (!*(_QWORD *)(*v10 + 16))
    goto LABEL_12;
  v13 = a3;
  swift_bridgeObjectRetain();
  v14 = sub_1A912E44C((uint64_t)v13);
  if ((v15 & 1) == 0)
    goto LABEL_11;
  v50 = *(unsigned __int8 *)(*(_QWORD *)(v12 + 56) + v14);

  swift_bridgeObjectRelease();
  v16 = (uint64_t *)(a2 + qword_1ED2A3BD8);
  result = swift_beginAccess();
  v17 = *v16;
  if (!*(_QWORD *)(*v16 + 16))
  {
LABEL_12:
    v31 = *(_QWORD *)(a4 + 16);
    v27 = __OFADD__(v31, 1);
    v32 = v31 + 1;
    if (!v27)
    {
      *(_QWORD *)(a4 + 16) = v32;
      (*(void (**)(_QWORD *__return_ptr, uint64_t))(a2 + qword_1EEABE8C0))(v53, a5);
      v29 = LOBYTE(v53[0]);
      if (LOBYTE(v53[0]) == 2)
      {
        v33 = 0;
      }
      else
      {
        v34 = *(void (**)(_QWORD *__return_ptr, uint64_t *))(a2 + qword_1EEABE8D0);
        LOBYTE(v51) = v53[0] & 1;
        v34(v52, &v51);
        v33 = v52[0];
      }
      swift_beginAccess();
      v35 = a3;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v51 = *v10;
      *v10 = 0x8000000000000000;
      sub_1A930DE58(v29, v35, isUniquelyReferenced_nonNull_native);
      *v10 = v51;

      swift_bridgeObjectRelease();
      swift_endAccess();
      v37 = (uint64_t *)(a2 + qword_1ED2A3BD8);
      swift_beginAccess();
      v38 = v35;
      v39 = swift_isUniquelyReferenced_nonNull_native();
      v51 = *v37;
      *v37 = 0x8000000000000000;
      sub_1A930DD18(v33, (_DWORD)v29 == 2, v38, v39);
      *v37 = v51;

      swift_bridgeObjectRelease();
      swift_endAccess();
      *(_QWORD *)a1 = v33;
      *(_BYTE *)(a1 + 8) = (_DWORD)v29 == 2;
      return v29;
    }
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v49 = v16;
  v18 = v13;
  swift_bridgeObjectRetain();
  v19 = sub_1A912E44C((uint64_t)v18);
  if ((v20 & 1) == 0)
  {
LABEL_11:

    result = swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v21 = *(_QWORD *)(v17 + 56) + 16 * v19;
  v22 = *(_QWORD *)v21;
  v23 = *(_BYTE *)(v21 + 8);

  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)a4;
  swift_bridgeObjectRetain();
  v25 = sub_1A90A3300(v18, v24);
  result = swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
  {
    *(_QWORD *)a1 = v22;
    *(_BYTE *)(a1 + 8) = v23;
    return v50;
  }
  v26 = *(_QWORD *)(a4 + 24);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    goto LABEL_32;
  *(_QWORD *)(a4 + 24) = v28;
  result = (uint64_t)(*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t))(a2 + qword_1EEABE8C0))(v53, a5);
  v29 = LOBYTE(v53[0]);
  if (LOBYTE(v53[0]) == 2)
  {
    if (v50 == 2)
    {
      v30 = 0;
      v22 = 0;
      if ((v23 & 1) != 0)
        goto LABEL_29;
    }
    else
    {
      v30 = 0;
    }
LABEL_27:
    *(_BYTE *)(a4 + 56) = 1;
    v22 = v30;
LABEL_28:
    swift_beginAccess();
    v42 = v18;
    v43 = swift_isUniquelyReferenced_nonNull_native();
    v51 = *v10;
    *v10 = 0x8000000000000000;
    sub_1A930DE58(v29, v42, v43);
    *v10 = v51;

    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_beginAccess();
    v44 = v42;
    v45 = swift_isUniquelyReferenced_nonNull_native();
    v51 = *v49;
    *v49 = 0x8000000000000000;
    sub_1A930DD18(v22, (_DWORD)v29 == 2, v44, v45);
    *v49 = v51;

    swift_bridgeObjectRelease();
    swift_endAccess();
    *(_QWORD *)a1 = v22;
    *(_BYTE *)(a1 + 8) = (_DWORD)v29 == 2;
    return v29;
  }
  v40 = *(void (**)(_QWORD *__return_ptr, uint64_t *))(a2 + qword_1EEABE8D0);
  LOBYTE(v51) = v53[0] & 1;
  v40(v52, &v51);
  v30 = v52[0];
  if (v50 == 2)
    goto LABEL_27;
  v48 = v52[0];
  LOBYTE(v52[0]) = v50 & 1;
  LOBYTE(v51) = v29 & 1;
  result = (*(uint64_t (**)(_QWORD *, uint64_t *))(a2 + qword_1EEABE8C8))(v52, &v51);
  if ((result & 1) != 0)
  {
    v30 = v48;
    goto LABEL_27;
  }
  v30 = v48;
  if (v48 == v22)
    v41 = v23;
  else
    v41 = 1;
  if ((v41 & 1) != 0)
    goto LABEL_27;
LABEL_29:
  v46 = *(_QWORD *)(a4 + 32);
  v27 = __OFADD__(v46, 1);
  v47 = v46 + 1;
  if (!v27)
  {
    *(_QWORD *)(a4 + 32) = v47;
    goto LABEL_28;
  }
LABEL_33:
  __break(1u);
  return result;
}

void sub_1A9367EFC(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)(a1 + qword_1EEABE8D8);
  v4 = (void *)sub_1A93F74DC();
  v5 = objc_msgSend(v3, sel_objectAtIndexPath_, v4);

  *a2 = v5;
}

uint64_t sub_1A9367F68@<X0>(void **a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata3;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;

  v20 = a3;
  v21 = a4;
  v6 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0x50);
  v5 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0x58);
  sub_1A9072534(255, (unint64_t *)&qword_1ED2A41B8);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v8 = sub_1A93F8A90();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - v10;
  sub_1A90A1D38(*a1, v20, (char *)&v20 - v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata3 - 8) + 48))(v11, 1, TupleTypeMetadata3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v12 = swift_getTupleTypeMetadata3();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v21, 1, 1, v12);
  }
  else
  {
    v14 = &v11[*(int *)(TupleTypeMetadata3 + 48)];
    v15 = *(_QWORD *)&v11[*(int *)(TupleTypeMetadata3 + 64)];
    v16 = swift_getTupleTypeMetadata3();
    v17 = v21;
    v18 = v21 + *(int *)(v16 + 48);
    v19 = *(int *)(v16 + 64);
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v21, v11, v6);
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v18, v14, v5);
    *(_QWORD *)(v17 + v19) = v15;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v17, 0, 1, v16);
  }
}

uint64_t sub_1A9368158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t TupleTypeMetadata3;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  sub_1A9072534(255, (unint64_t *)&qword_1ED2A41B8);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v9 = MEMORY[0x1E0C80A78](TupleTypeMetadata3);
  v11 = (char *)&v20 - v10;
  v13 = *(int *)(v12 + 48);
  v14 = &v11[v13];
  v15 = *(int *)(v12 + 64);
  v16 = a1 + v13;
  v17 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16))(v11, a1, a2, v9);
  v18 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v14, v16, a3);
  *(_QWORD *)&v11[v15] = *(_QWORD *)(a1 + v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a4, v14, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v11, a2);
}

uint64_t sub_1A9368270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char *v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[16];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v28 = a6;
  v27 = a4;
  v10 = (char *)sub_1A9072534(255, (unint64_t *)&qword_1ED2A41B8);
  swift_getTupleTypeMetadata3();
  v11 = sub_1A93F83D0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v15 = (char *)&v26 - v14;
  v17 = *(int *)(v16 + 48);
  v18 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16))((char *)&v26 - v14, a1, a3, v13);
  v19 = *(_QWORD *)(a1 + v17);
  *(_QWORD *)&v15[v17] = v19;
  v34 = v19;
  v30 = a2;
  v31 = a3;
  v32 = v27;
  v33 = a5;
  v20 = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v11);
  v22 = sub_1A9241454((void (*)(char *, char *))sub_1A936A19C, (uint64_t)v29, v11, v10, MEMORY[0x1E0DEDCE8], v20, MEMORY[0x1E0DEDD18], v21);
  v23 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 32);
  v24 = v28;
  v23(v28, v15, a3);
  result = type metadata accessor for FRPSectionInfo(0, (uint64_t)v10, a3, a5);
  *(_QWORD *)(v24 + *(int *)(result + 44)) = v22;
  return result;
}

uint64_t sub_1A9368410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t TupleTypeMetadata3;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void (*v19)(char *, uint64_t);
  id v20;
  uint64_t v22;
  _QWORD *v23;

  v23 = a4;
  sub_1A9072534(255, (unint64_t *)&qword_1ED2A41B8);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v8 = MEMORY[0x1E0C80A78](TupleTypeMetadata3);
  v10 = (char *)&v22 - v9;
  v12 = *(int *)(v11 + 48);
  v13 = &v10[v12];
  v14 = *(int *)(v11 + 64);
  v15 = a1 + v12;
  v16 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))(v10, a1, a2, v8);
  v17 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v13, v15, a3);
  v18 = *(void **)(a1 + v14);
  *(_QWORD *)&v10[v14] = v18;
  *v23 = v18;
  v19 = *(void (**)(char *, uint64_t))(v17 + 8);
  v20 = v18;
  v19(v13, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v10, a2);
}

uint64_t sub_1A936853C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  _BYTE v27[16];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v26 = a6;
  sub_1A9072534(255, (unint64_t *)&qword_1ED2A41B8);
  swift_getTupleTypeMetadata3();
  v11 = sub_1A93F83D0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v15 = &v27[-v14];
  v17 = *(int *)(v16 + 48);
  v18 = *(_QWORD *)(a3 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v18 + 16))(&v27[-v14], a1, a3, v13);
  v19 = *(_QWORD *)(a1 + v17);
  *(_QWORD *)&v15[v17] = v19;
  v32 = v19;
  v28 = a2;
  v29 = a3;
  v30 = a4;
  v31 = a5;
  v20 = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v11);
  v22 = sub_1A9241454((void (*)(char *, char *))sub_1A936A17C, (uint64_t)v27, v11, a2, MEMORY[0x1E0DEDCE8], v20, MEMORY[0x1E0DEDD18], v21);
  v23 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 32);
  v24 = v26;
  v23(v26, v15, a3);
  result = type metadata accessor for FRPSectionInfo(0, (uint64_t)a2, a3, a5);
  *(_QWORD *)(v24 + *(int *)(result + 44)) = v22;
  return result;
}

uint64_t sub_1A93686D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t TupleTypeMetadata3;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v20 = a4;
  sub_1A9072534(255, (unint64_t *)&qword_1ED2A41B8);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v8 = MEMORY[0x1E0C80A78](TupleTypeMetadata3);
  v10 = (char *)&v19 - v9;
  v12 = *(int *)(v11 + 48);
  v13 = &v10[v12];
  v14 = *(int *)(v11 + 64);
  v15 = a1 + v12;
  v16 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))(v10, a1, a2, v8);
  v17 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v13, v15, a3);
  *(_QWORD *)&v10[v14] = *(_QWORD *)(a1 + v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v20, v10, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v13, a3);
}

uint64_t sub_1A93687F8(uint64_t result, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (_QWORD *)result;
  v5 = *(_QWORD *)(a2 + 8);
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1A93F8BBC();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 16);
  }
  *v4 = v6;
  v4[2] = a3;
  return result;
}

void sub_1A9368864(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;

  v7 = a1 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1AF41420C](v7);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = (_QWORD *)(v8 + qword_1EEABE8F0);
    *v10 = a2;
    v10[1] = a3 & 1;
    v10[2] = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1A93650B8();

  }
}

void sub_1A93688F8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;

  v14 = a1 + 16;
  swift_beginAccess();
  v15 = MEMORY[0x1AF41420C](v14);
  if (v15)
  {
    v16 = (char *)v15;
    v24 = a2;
    type metadata accessor for FRPSectionInfo(255, a5, a6, a8);
    v17 = sub_1A93F83D0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(&v25, &v24, v17);
    v20 = type metadata accessor for FRPOutput(0, v17, v18, v19);
    *((_BYTE *)&v25 + *(int *)(v20 + 28)) = a3 & 1;
    *(uint64_t *)((char *)&v25 + *(int *)(v20 + 32)) = a4;
    v21 = v26;
    v22 = v27;
    v23 = &v16[qword_1EEABE8F0];
    *(_QWORD *)v23 = v25;
    *((_QWORD *)v23 + 1) = v21;
    *((_QWORD *)v23 + 2) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1A908A9B8();

  }
}

uint64_t sub_1A9368A14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  v20 = sub_1A93F7D58();
  v23 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F73E0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  v19 = *(_QWORD *)((char *)v1 + qword_1EEABE8B8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9, v12);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v3 + 80);
  *(_OWORD *)(v14 + 24) = *(_OWORD *)(v3 + 88);
  *(_QWORD *)(v14 + 40) = *(_QWORD *)(v3 + 104);
  *(_QWORD *)(v14 + 48) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_1A93697E8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_69;
  v15 = _Block_copy(aBlock);
  v16 = v1;
  sub_1A93F7D88();
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  v17 = v20;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v8, v5, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
  return swift_release();
}

uint64_t sub_1A9368CA4(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v1 = (uint64_t *)(*MEMORY[0x1E0DEEDD8] & *a1);
  swift_beginAccess();
  sub_1A93F73E0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  type metadata accessor for FRPSectionInfo(255, v1[10], v1[11], v1[13]);
  v3 = sub_1A93F83D0();
  type metadata accessor for FRPOutput(255, v3, v4, v5);
  swift_getFunctionTypeMetadata1();
  sub_1A9066CA8((unint64_t *)&qword_1ED2A1F40, v2, MEMORY[0x1E0CB09C8]);
  sub_1A93F7F5C();
  sub_1A93F7F14();
  swift_endAccess();
  result = v7;
  if (v7)
    return sub_1A9085818(v7);
  return result;
}

uint64_t sub_1A9368DBC()
{
  return sub_1A9368A10();
}

char *sub_1A9368DDC@<X0>(char **a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  char *result;

  result = sub_1A9364DD8(v1);
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1A9368E08(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1AF414014](&protocol conformance descriptor for FetchedResultsSectionedPublisher<A, B, C>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t *sub_1A9368E34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1A9368EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A9368F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A9368FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A9369014(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A9369090 + 4 * byte_1A9420A00[v10]))();
  }
}

_QWORD *sub_1A9369114(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (v6 & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    *((_BYTE *)v4 + v6) = *((_BYTE *)a2 + v6);
    *(_QWORD *)((((unint64_t)v4 + v6) & 0xFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((((unint64_t)a2 + v6) & 0xFFFFFFFFFFFFF8)
                                                                                    + 8);
  }
  return v4;
}

uint64_t sub_1A93691C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 8);
  return a1;
}

uint64_t sub_1A9369220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 8);
  return a1;
}

uint64_t sub_1A9369280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 8);
  return a1;
}

uint64_t sub_1A93692E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 8);
  return a1;
}

uint64_t sub_1A9369340(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 >= 0xFE)
      return (*(uint64_t (**)(void))(v4 + 48))();
    v12 = *(unsigned __int8 *)(v7 + a1);
    if (v12 >= 2)
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    return 0;
  }
  if ((((v7 & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
    v8 = 2;
  else
    v8 = a2 - v6 + 1;
  if (v8 >= 0x10000)
    v9 = 4;
  else
    v9 = 2;
  if (v8 < 0x100)
    v9 = 1;
  if (v8 >= 2)
    v10 = v9;
  else
    v10 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1A93693B8 + 4 * byte_1A9420A0F[v10]))();
}

void sub_1A9369434(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if ((*(_DWORD *)(v5 + 64) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if ((*(_DWORD *)(v5 + 64) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, (*(_QWORD *)(v5 + 64) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1A9369524()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1A936952C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1A9369534);
}

void sub_1A9369568()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1A9369570()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_1A9369578(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
LABEL_2:
    JUMPOUT(0x1A9369580);
  if (a3 < 0xFE)
  {
    *(_BYTE *)(v6 + v4) = a2 + 1;
    goto LABEL_2;
  }
  return (*(uint64_t (**)(uint64_t))(v5 + 56))(v6);
}

uint64_t type metadata accessor for FetchedResultsSingleItemPublisher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FetchedResultsSingleItemPublisher);
}

void type metadata accessor for FetchedResultsSectionedPublisher()
{
  JUMPOUT(0x1AF413F6CLL);
}

uint64_t sub_1A93695B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A93695FC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t sub_1A9369688(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t sub_1A93696DC(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1A9369724(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A9369774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A93F73E0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A93697E8()
{
  uint64_t v0;

  sub_1A93F73E0();
  return sub_1A9368CA4(*(_QWORD **)(v0 + 48));
}

uint64_t sub_1A9369818(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1A93F8D84();
    v6 = *(_QWORD *)(sub_1A93F74F4() - 8);
    v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(void **)(a2 + qword_1EEABE8D8);
    v9 = *(_QWORD *)(v6 + 72);
    do
    {
      v10 = (void *)sub_1A93F74DC();
      v11 = objc_msgSend(v8, sel_objectAtIndexPath_, v10);

      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
      v7 += v9;
      --v3;
    }
    while (v3);
    return v12;
  }
  return result;
}

uint64_t sub_1A9369920(int64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  char *v49;
  unint64_t v50;
  __int128 v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1F50);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F74F4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v49 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v11);
  v47 = (char *)&v46 - v15;
  if (a1 == a2)
    return MEMORY[0x1E0DEE9D8];
  if (a2 < a1)
    goto LABEL_35;
  v50 = MEMORY[0x1E0DEE9D8];
  v54 = a3 + 40;
  *(_QWORD *)&v14 = 138412290;
  v51 = v14;
  v48 = xmmword_1A9405950;
  v52 = v8;
  v53 = v10;
  while (a1 < a2)
  {
    if (a1 < 0)
    {
      v20 = 1;
      goto LABEL_25;
    }
    v16 = *(_QWORD *)(a3 + 16);
    if (!v16)
      goto LABEL_23;
    v17 = *(_QWORD *)(a3 + 32);
    if ((v17 & 0x8000000000000000) != 0)
    {
LABEL_24:
      v20 = 2;
      goto LABEL_25;
    }
    if (a1 >= v17)
    {
      v18 = 0;
      v21 = v16 - 1;
      v19 = a1;
      while (v21 != v18)
      {
        v22 = *(_QWORD *)(v54 + 8 * v18);
        if (v22 < 0)
          goto LABEL_24;
        v19 -= v17;
        ++v18;
        v17 = v22;
        if (v19 < v22)
          goto LABEL_17;
      }
LABEL_23:
      v20 = 0;
LABEL_25:
      sub_1A936A1E4();
      v31 = (void *)swift_allocError();
      *v32 = v20;
      swift_willThrow();
      if (qword_1ED2A3F00 != -1)
        swift_once();
      v33 = sub_1A93F7698();
      __swift_project_value_buffer(v33, (uint64_t)qword_1ED2A3EE0);
      v34 = v31;
      v35 = v31;
      v36 = sub_1A93F7674();
      v37 = sub_1A93F87A8();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = a2;
        v39 = v9;
        v40 = a3;
        v41 = swift_slowAlloc();
        v42 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v41 = v51;
        v43 = v31;
        v44 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)(v41 + 4) = v44;
        *v42 = v44;

        _os_log_impl(&dword_1A904E000, v36, v37, "FRC failed to create IndexPath with error: %@", (uint8_t *)v41, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v42, -1, -1);
        v45 = v41;
        a3 = v40;
        v9 = v39;
        a2 = v38;
        v8 = v52;
        MEMORY[0x1AF41411C](v45, -1, -1);

      }
      else
      {

      }
      v10 = v53;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v8, 1, 1, v9);
      goto LABEL_31;
    }
    v18 = 0;
    v19 = a1;
LABEL_17:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A44A0);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = v48;
    *(_QWORD *)(v23 + 32) = v18;
    *(_QWORD *)(v23 + 40) = v19;
    MEMORY[0x1AF4111E8]();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v24 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v25 = v47;
      v24(v47, v8, v9);
      v24(v49, v25, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v50 = sub_1A91188AC(0, *(_QWORD *)(v50 + 16) + 1, 1, v50);
      v27 = *(_QWORD *)(v50 + 16);
      v26 = *(_QWORD *)(v50 + 24);
      if (v27 >= v26 >> 1)
        v50 = sub_1A91188AC(v26 > 1, v27 + 1, 1, v50);
      v28 = v49;
      v29 = v50;
      *(_QWORD *)(v50 + 16) = v27 + 1;
      v30 = v29
          + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))
          + *(_QWORD *)(v53 + 72) * v27;
      v10 = v53;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(v30, v28, v9);
      goto LABEL_32;
    }
LABEL_31:
    result = sub_1A905FD54((uint64_t)v8, &qword_1ED2A1F50);
LABEL_32:
    if (++a1 == a2)
      return v50;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

_QWORD *sub_1A9369DC8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  char v10;
  char v11;
  id v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v18;
  id v20;
  char v21;
  uint64_t v22;

  v22 = a3;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v4 = sub_1A93F8E5C();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v5 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x1AF4129DC](v5 - 4, a1);
        else
          v6 = *(id *)(a1 + 8 * v5);
        v7 = v6;
        v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
          goto LABEL_19;
        }
        v9 = objc_msgSend(v6, sel_objectID);
        sub_1A90A20D0(&v20, v9);

        v10 = sub_1A9367A54((uint64_t)&v20, a2, v9, v22, (uint64_t)v7);
        if (v10 == 2)
        {

        }
        else
        {
          v11 = v10;
          v12 = v20;
          v13 = v21;

          if ((v13 & 1) == 0)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v18 = sub_1A911867C(0, v18[2] + 1, 1, v18);
            v15 = v18[2];
            v14 = v18[3];
            if (v15 >= v14 >> 1)
              v18 = sub_1A911867C((_QWORD *)(v14 > 1), v15 + 1, 1, v18);
            v18[2] = v15 + 1;
            v16 = &v18[3 * v15];
            *((_BYTE *)v16 + 32) = v11 & 1;
            v16[5] = v12;
            v16[6] = v9;
            goto LABEL_6;
          }
        }

LABEL_6:
        ++v5;
        if (v8 == v4)
          goto LABEL_21;
      }
    }
  }
  v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_21:
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1A9369FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A93F73E0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A936A05C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A936A084(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1A9367EFC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1A936A0A0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A9367F68(a1, *(_QWORD **)(v2 + 16), *(uint64_t **)(v2 + 24), a2);
}

uint64_t sub_1A936A0B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A9368158(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1A936A0C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1A9368270(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1A936A0E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A936853C(a1, *(char **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_1A936A104(uint64_t a1)
{
  uint64_t v1;

  return sub_1A93687F8(a1, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1A936A114()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A936A138()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A936A164()
{
  uint64_t v0;

  sub_1A93688F8(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1A936A17C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A93686D4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1A936A19C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1A9368410(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1A936A1BC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

unint64_t sub_1A936A1E4()
{
  unint64_t result;

  result = qword_1EEABE9A0;
  if (!qword_1EEABE9A0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9420FD4, &_s10IndexErrorON);
    atomic_store(result, (unint64_t *)&qword_1EEABE9A0);
  }
  return result;
}

void sub_1A936A228()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1A936A254()
{
  return objectdestroy_37Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1A936A264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A93F75FC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A936A2E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = MEMORY[0x1AF41420C](v1 + 104);
  *a1 = result;
  return result;
}

uint64_t sub_1A936A314()
{
  uint64_t v0;

  return sub_1A936575C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1A936A320(uint64_t a1)
{
  uint64_t v1;

  return sub_1A93687F8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A936A328()
{
  return objectdestroy_37Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_37Tm_0(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A936A374()
{
  uint64_t v0;

  sub_1A9368864(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t *sub_1A936A384(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A9367898(a1, *(_QWORD *)(v1 + 16), *(_BYTE **)(v1 + 24));
}

uint64_t sub_1A936A38C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A936A3B0()
{
  uint64_t v0;

  return sub_1A93678E0(*(_QWORD *)(v0 + 48));
}

uint64_t sub_1A936A3C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A9364EEC(v1, a1);
}

uint64_t sub_1A936A3D8()
{
  return swift_deallocObject();
}

uint64_t _s10IndexErrorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A936A434 + 4 * byte_1A9420A23[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A936A468 + 4 * byte_1A9420A1E[v4]))();
}

uint64_t sub_1A936A468(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A936A470(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A936A478);
  return result;
}

uint64_t sub_1A936A484(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A936A48CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A936A490(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A936A498(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10IndexErrorOMa()
{
  return &_s10IndexErrorON;
}

unint64_t sub_1A936A4B8()
{
  unint64_t result;

  result = qword_1EEABE9A8;
  if (!qword_1EEABE9A8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9420FAC, &_s10IndexErrorON);
    atomic_store(result, (unint64_t *)&qword_1EEABE9A8);
  }
  return result;
}

uint64_t sub_1A936A50C()
{
  return sub_1A936A1BC();
}

uint64_t sub_1A936A53C()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

BOOL sub_1A936A580(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_1A936A58C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A9052820(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1A936A5D0(uint64_t a1)
{
  return sub_1A9052AB4(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1A936A5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A9052820(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1A9052AB4(v5, v6);
  return a1;
}

uint64_t sub_1A936A630(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1A9052AB4(v4, v5);
  return a1;
}

uint64_t sub_1A936A66C()
{
  return sub_1A936A53C();
}

uint64_t sub_1A936A68C()
{
  return sub_1A9071EEC();
}

BOOL sub_1A936A6AC(uint64_t *a1, uint64_t *a2)
{
  return sub_1A936A580(*a1, *a2);
}

void EpisodeSortType.playDescriptors.getter(char a1)
{
  id v1;
  id v2;

  if (!a1)
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_sortDescriptorsForPubDateAscending_, 1);
    goto LABEL_5;
  }
  if (a1 == 4)
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_seasonSortDescriptors_, 4);
LABEL_5:
    v2 = v1;
    sub_1A90AF8C4();
    sub_1A93F8310();

    return;
  }
  EpisodeSortType.descriptors.getter(a1);
}

uint64_t EpisodeSortType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A936A7AC + 4 * byte_1A9421180[a1]))(0x65746144627570, 0xE700000000000000);
}

unint64_t sub_1A936A7AC()
{
  return 0xD000000000000010;
}

uint64_t sub_1A936A838()
{
  return 0x6B72616D6B6F6F62;
}

uint64_t sub_1A936A898()
{
  return 0x656C746974;
}

uint64_t sub_1A936A8AC()
{
  return 0x796C746E65636572;
}

uint64_t sub_1A936A8D0()
{
  return 0x6F4E6E657473696CLL;
}

uint64_t sub_1A936A8EC()
{
  return 0x53794270756F7267;
}

uint64_t sub_1A936A90C()
{
  return 0x7079746F746F7270;
}

uint64_t sub_1A936A930()
{
  return 0x706F546863746177;
}

uint64_t sub_1A936A954(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = EpisodeSortType.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == EpisodeSortType.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A936A9DC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1A93F92DC();
  EpisodeSortType.rawValue.getter(v1);
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A936AA3C()
{
  unsigned __int8 *v0;

  EpisodeSortType.rawValue.getter(*v0);
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A936AA7C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1A93F92DC();
  EpisodeSortType.rawValue.getter(v1);
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A936AAD8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s18PodcastsFoundation15EpisodeSortTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1A936AB04@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = EpisodeSortType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A936AB2C()
{
  sub_1A936AF0C();
  return sub_1A93F82BC();
}

uint64_t sub_1A936AB88()
{
  sub_1A936AF0C();
  return sub_1A93F828C();
}

uint64_t EpisodeSortType.ascendingSortType.getter(uint64_t result)
{
  if (result <= 9u && ((0x285u >> result) & 1) != 0)
    return byte_1A94212B6[(char)result];
  return result;
}

uint64_t EpisodeSortType.baseSortType.getter(uint64_t result)
{
  char v1;

  v1 = result - 1;
  if ((result - 1) <= 9u && ((0x285u >> v1) & 1) != 0)
    return byte_1A94212C0[v1];
  return result;
}

Swift::Bool __swiftcall EpisodeSortType.baseSortTypeMatches(other:)(PodcastsFoundation::EpisodeSortType other)
{
  unsigned __int8 v1;
  PodcastsFoundation::EpisodeSortType v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = other;
  v3 = v1 - 1;
  if ((v1 - 1) <= 9u && ((0x285u >> v3) & 1) != 0)
    v1 = byte_1A94212C0[v3];
  v4 = other - 1;
  if ((other - 1) <= 9u && ((0x285u >> v4) & 1) != 0)
    v2 = byte_1A94212C0[v4];
  v5 = EpisodeSortType.rawValue.getter(v1);
  v7 = v6;
  if (v5 == EpisodeSortType.rawValue.getter(v2) && v7 == v8)
    v9 = 1;
  else
    v9 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t EpisodeSortType.isAscending.getter(unsigned __int8 a1)
{
  return (a1 < 0xBu) & (0x50Au >> a1);
}

uint64_t EpisodeSortType.isDescending.getter(unsigned __int8 a1)
{
  return (a1 < 0x11u) & (0x10285u >> a1);
}

BOOL EpisodeSortType.isSerialSort.getter(unsigned __int8 a1)
{
  return a1 - 4 < 3;
}

uint64_t _s18PodcastsFoundation15EpisodeSortTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1A93F91F8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11)
    return 17;
  else
    return v0;
}

unint64_t sub_1A936ADFC()
{
  unint64_t result;

  result = qword_1EEABE9B0;
  if (!qword_1EEABE9B0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeSortType, &type metadata for EpisodeSortType);
    atomic_store(result, (unint64_t *)&qword_1EEABE9B0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EpisodeSortType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_1A936AE8C + 4 * byte_1A9421196[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_1A936AEC0 + 4 * byte_1A9421191[v4]))();
}

uint64_t sub_1A936AEC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A936AEC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A936AED0);
  return result;
}

uint64_t sub_1A936AEDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A936AEE4);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_1A936AEE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A936AEF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeSortType()
{
  return &type metadata for EpisodeSortType;
}

unint64_t sub_1A936AF0C()
{
  unint64_t result;

  result = qword_1EEABE9B8;
  if (!qword_1EEABE9B8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeSortType, &type metadata for EpisodeSortType);
    atomic_store(result, (unint64_t *)&qword_1EEABE9B8);
  }
  return result;
}

uint64_t sub_1A936AF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1A93F84CC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A93F84C0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1A905FD54(a1, &qword_1ED2ABC08);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A93F840C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_1A936B09C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  _QWORD *v12;
  void *v13;
  id v14;
  _QWORD v15[6];

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a1;
  v12[6] = a2;
  v15[4] = sub_1A936DA2C;
  v15[5] = v12;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1A908A91C;
  v15[3] = &block_descriptor_30_2;
  v13 = _Block_copy(v15);
  swift_retain();
  v14 = a6;
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_performBlock_, v13);
  _Block_release(v13);
}

uint64_t sub_1A936B184(void (*a1)(double), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v22 = a3;
  v8 = sub_1A93F7D58();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v21 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F7DB8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v14);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = a5;
  aBlock[4] = sub_1A936DA3C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_36_0;
  v18 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v9, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v16, v11, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return swift_release();
}

BOOL static CategoriesSyncUtil.CategoriesSyncError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CategoriesSyncUtil.CategoriesSyncError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t CategoriesSyncUtil.CategoriesSyncError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t CategoriesSyncUtil.__allocating_init(categoriesSyncThresholdProvider:categoriesProvider:categoryIngester:lastCategoriesSyncDate:queue:ctx:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  CategoriesSyncUtil.init(categoriesSyncThresholdProvider:categoriesProvider:categoryIngester:lastCategoriesSyncDate:queue:ctx:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t CategoriesSyncUtil.init(categoriesSyncThresholdProvider:categoriesProvider:categoryIngester:lastCategoriesSyncDate:queue:ctx:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v22 = a6;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F738C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_syncSession) = 0;
  sub_1A905DC3C(a1, v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesSyncThresholdProvider);
  sub_1A905DC3C(a2, v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesProvider);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoryIngester) = a3;
  sub_1A90A1CA8(a4, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1A93F72F0();
    sub_1A905FD54(a4, (uint64_t *)&unk_1ED2AD360);
    __swift_destroy_boxed_opaque_existential_0(a2);
    __swift_destroy_boxed_opaque_existential_0(a1);
    sub_1A905FD54((uint64_t)v14, (uint64_t *)&unk_1ED2AD360);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_lastCategoriesSyncDate, v18, v15);
  }
  else
  {
    sub_1A905FD54(a4, (uint64_t *)&unk_1ED2AD360);
    __swift_destroy_boxed_opaque_existential_0(a2);
    __swift_destroy_boxed_opaque_existential_0(a1);
    v19 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v19(v18, v14, v15);
    v19((char *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_lastCategoriesSyncDate), v18, v15);
  }
  *(_QWORD *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_workQueue) = a5;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_ctx) = v22;
  return v6;
}

uint64_t CategoriesSyncUtil.syncCategories(completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_1A93F7D58();
  v21 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A93F7DB8();
  v9 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A58F8 != -1)
    swift_once();
  v12 = sub_1A93F7698();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A58D8);
  v13 = sub_1A93F7674();
  v14 = sub_1A93F87B4();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_1A904E000, v13, v14, "[Categories Sync] Starting to sync categories.", v15, 2u);
    MEMORY[0x1AF41411C](v15, -1, -1);
  }

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v3;
  v16[3] = a1;
  v16[4] = a2;
  aBlock[4] = sub_1A936BEF8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_70;
  v17 = _Block_copy(aBlock);
  swift_retain();
  sub_1A90858C0(a1);
  sub_1A93F7D88();
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v11, v8, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v20);
  return swift_release();
}

uint64_t sub_1A936B914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  id v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;

  v59 = a2;
  v60 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE9C8);
  v8 = *(_QWORD *)(v7 - 8);
  v49 = v7;
  v50 = v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE9D0);
  v12 = *(_QWORD *)(v11 - 8);
  v53 = v11;
  v54 = v12;
  MEMORY[0x1E0C80A78](v11);
  v46 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE9D8);
  v15 = *(_QWORD *)(v14 - 8);
  v55 = v14;
  v56 = v15;
  MEMORY[0x1E0C80A78](v14);
  v51 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE9E0);
  v18 = *(_QWORD *)(v17 - 8);
  v57 = v17;
  v58 = v18;
  MEMORY[0x1E0C80A78](v17);
  v52 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE9E8);
  swift_allocObject();
  swift_retain();
  v20 = (void *)sub_1A93F7A94();
  v61 = *(id *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_workQueue);
  v21 = v61;
  v62 = v20;
  v22 = sub_1A93F882C();
  v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v48 = v22;
  v47(v6, 1, 1, v22);
  v44 = sub_1A9066C6C();
  sub_1A9066D74(&qword_1EEABE9F0, &qword_1EEABE9E8, MEMORY[0x1E0C96108]);
  v45 = sub_1A9066CA8((unint64_t *)&qword_1ED2A1C90, (uint64_t (*)(uint64_t))sub_1A9066C6C, MEMORY[0x1E0DEF7F8]);
  v43 = v21;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v6, &qword_1ED2A1C88);

  swift_release();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_1A936D8E8;
  *(_QWORD *)(v23 + 24) = a1;
  swift_retain();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE9F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEA00);
  sub_1A9066D74(&qword_1EEABEA08, &qword_1EEABE9C8, MEMORY[0x1E0C95CB8]);
  sub_1A9066D74(&qword_1EEABEA10, &qword_1EEABEA00, MEMORY[0x1E0C96108]);
  v24 = v46;
  v25 = v49;
  sub_1A93F7C5C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v10, v25);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_1A936D8F0;
  *(_QWORD *)(v26 + 24) = a1;
  swift_retain();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEA18);
  v27 = MEMORY[0x1E0C95B78];
  sub_1A9066D74(&qword_1EEABEA20, &qword_1EEABE9D0, MEMORY[0x1E0C95B78]);
  sub_1A9066D74(&qword_1EEABEA28, &qword_1EEABEA18, MEMORY[0x1E0C96108]);
  v28 = v51;
  v29 = v53;
  sub_1A93F7C50();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v24, v29);
  v30 = v43;
  v62 = v43;
  v47(v6, 1, 1, v48);
  sub_1A9066D74(&qword_1EEABEA30, &qword_1EEABE9D8, v27);
  v31 = v30;
  v32 = v52;
  v33 = v55;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v6, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v28, v33);
  v34 = swift_allocObject();
  v36 = v59;
  v35 = v60;
  *(_QWORD *)(v34 + 16) = v59;
  *(_QWORD *)(v34 + 24) = v35;
  v37 = (_QWORD *)swift_allocObject();
  v37[2] = a1;
  v37[3] = v36;
  v37[4] = v35;
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = sub_1A936D930;
  *(_QWORD *)(v38 + 24) = v37;
  sub_1A90858C0(v36);
  swift_retain();
  sub_1A90858C0(v36);
  sub_1A9066D74(&qword_1EEABEA38, &qword_1EEABE9E0, MEMORY[0x1E0C95CB8]);
  v39 = v57;
  v40 = sub_1A93F7BA8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v32, v39);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_syncSession) = v40;
  return swift_release();
}

uint64_t sub_1A936BEF8()
{
  uint64_t *v0;

  return sub_1A936B914(v0[2], v0[3], v0[4]);
}

uint64_t sub_1A936BF04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t result;

  if (qword_1ED2A58F8 != -1)
    swift_once();
  v2 = sub_1A93F7698();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A58D8);
  v3 = sub_1A93F7674();
  v4 = sub_1A93F87B4();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1A904E000, v3, v4, "[Categories Sync] Preparing Media API request.", v5, 2u);
    MEMORY[0x1AF41411C](v5, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEA00);
  swift_allocObject();
  swift_retain();
  result = sub_1A93F7A94();
  *a1 = result;
  return result;
}

uint64_t sub_1A936C018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t result;

  v5 = *(void **)(a2 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_ctx);
  v6 = *(void **)(a2 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_workQueue);
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = a1;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v5;
  v9[3] = sub_1A936D9B0;
  v9[4] = v8;
  v9[5] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEA18);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v10 = v5;
  v11 = v6;
  result = sub_1A93F7A94();
  *a3 = result;
  return result;
}

void sub_1A936C110(void **a1, void (*a2)(_QWORD, void *))
{
  void *v2;
  id v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  v2 = *a1;
  if (*a1)
  {
    v4 = v2;
    if (qword_1ED2A58F8 != -1)
      swift_once();
    v5 = sub_1A93F7698();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED2A58D8);
    v6 = v2;
    v7 = sub_1A93F7674();
    v8 = sub_1A93F879C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412290;
      v12 = sub_1A93F711C();
      sub_1A93F8AA8();
      *v10 = v12;

      _os_log_impl(&dword_1A904E000, v7, v8, "[Categories Sync] Sync failed with error: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v10, -1, -1);
      MEMORY[0x1AF41411C](v9, -1, -1);

      if (!a2)
        goto LABEL_9;
    }
    else
    {

      if (!a2)
      {
LABEL_9:

        return;
      }
    }
    v11 = v2;
    a2(0, v2);

    goto LABEL_9;
  }
}

void sub_1A936C2E0(uint64_t a1, void (*a2)(uint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  void *v12;
  uint64_t v13;

  v3 = sub_1A93F738C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A58F8 != -1)
    swift_once();
  v7 = sub_1A93F7698();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED2A58D8);
  v8 = sub_1A93F7674();
  v9 = sub_1A93F87B4();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1A904E000, v8, v9, "[Categories Sync] Successfully synced categories.", v10, 2u);
    MEMORY[0x1AF41411C](v10, -1, -1);
  }

  v11 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  sub_1A93F7374();
  v12 = (void *)sub_1A93F7314();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v11, sel_setObject_forKey_, v12, CFSTR("kMTLastCategoriesSyncDateDefaultKey"));

  if (a2)
    a2(1, 0);
}

uint64_t sub_1A936C484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC08);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v10 = sub_1A93F84CC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = a3;
  v11[5] = sub_1A908CDB8;
  v11[6] = v9;
  swift_retain();
  swift_retain();
  sub_1A936AF50((uint64_t)v8, (uint64_t)&unk_1EEABEA50, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1A936C588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;

  v6[2] = a5;
  v6[3] = a6;
  v7 = (_QWORD *)swift_task_alloc();
  v6[4] = v7;
  *v7 = v6;
  v7[1] = sub_1A936C5D4;
  return sub_1A936C6CC();
}

uint64_t sub_1A936C5D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A936C638()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 16))(0, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A936C670()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *, uint64_t);
  id v3;

  v1 = *(void **)(v0 + 40);
  v2 = *(void (**)(void *, uint64_t))(v0 + 16);
  v3 = v1;
  v2(v1, 1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A936C6CC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  v2 = sub_1A93F738C();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A936C748()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 40)
                + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesSyncThresholdProvider);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v4;
  *v4 = v0;
  v4[1] = sub_1A936C7CC;
  return v6(v2, v3);
}

uint64_t sub_1A936C7CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 96) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1A936C868()
{
  double *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  double v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  char *v18;
  char v19;
  _BYTE *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  void (*v33)(uint64_t, uint64_t);
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  NSObject *v45;
  uint64_t (*v46)(void);
  uint64_t v48;
  os_log_type_t type;
  double v50;
  char v51;

  v1 = *((_QWORD *)v0 + 12);
  v50 = 0.0;
  v51 = 1;
  MEMORY[0x1AF4122BC](v1, &v50);
  if ((v51 & 1) != 0)
  {
    if (qword_1ED2A58F8 != -1)
      swift_once();
    v2 = (void *)*((_QWORD *)v0 + 12);
    v3 = sub_1A93F7698();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED2A58D8);
    v4 = v2;
    v5 = sub_1A93F7674();
    v6 = sub_1A93F879C();
    v7 = os_log_type_enabled(v5, v6);
    v8 = (void *)*((_QWORD *)v0 + 12);
    if (v7)
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412290;
      *((_QWORD *)v0 + 2) = v8;
      v11 = v8;
      sub_1A93F8AA8();
      *v10 = v8;

      _os_log_impl(&dword_1A904E000, v5, v6, "[Categories Sync] Unable to convert threshold bag value to type Double. Threshold bag value: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v10, -1, -1);
      MEMORY[0x1AF41411C](v9, -1, -1);
    }
    else
    {

    }
    v17 = (void *)*((_QWORD *)v0 + 12);
    sub_1A936DA7C();
    swift_allocError();
    *v20 = 0;
    goto LABEL_26;
  }
  v12 = v50;
  if (v50 < 0.0)
  {
    if (qword_1ED2A58F8 != -1)
      swift_once();
    v13 = sub_1A93F7698();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A58D8);
    v14 = sub_1A93F7674();
    v15 = sub_1A93F879C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1A904E000, v14, v15, "[Categories Sync] Received a negative threshold value. Not syncing. ", v16, 2u);
      MEMORY[0x1AF41411C](v16, -1, -1);
    }
    v17 = (void *)*((_QWORD *)v0 + 12);

    sub_1A936DA7C();
    swift_allocError();
    v19 = 3;
    goto LABEL_25;
  }
  if (qword_1ED2A58F8 != -1)
    swift_once();
  v21 = sub_1A93F7698();
  __swift_project_value_buffer(v21, (uint64_t)qword_1ED2A58D8);
  v22 = sub_1A93F7674();
  v23 = sub_1A93F87B4();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v24 = 134217984;
    v0[4] = v12;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v22, v23, "[Categories sync] Got threshold value from the bag: %f", v24, 0xCu);
    MEMORY[0x1AF41411C](v24, -1, -1);
  }

  v26 = *((_QWORD *)v0 + 9);
  v25 = *((_QWORD *)v0 + 10);
  v27 = *((_QWORD *)v0 + 7);
  v28 = *((_QWORD *)v0 + 8);
  v29 = *((_QWORD *)v0 + 5);
  v30 = *((_QWORD *)v0 + 6);
  sub_1A93F7374();
  v31 = v29 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_lastCategoriesSyncDate;
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
  v32(v28, v29 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_lastCategoriesSyncDate, v30);
  sub_1A93F7338();
  v33 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v33(v28, v30);
  sub_1A9066CA8(&qword_1ED2A5C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  LOBYTE(v28) = sub_1A93F7FEC();
  v33(v26, v30);
  v33(v25, v30);
  if ((v28 & 1) != 0)
  {
    swift_retain_n();
    v34 = sub_1A93F7674();
    v35 = sub_1A93F87B4();
    if (os_log_type_enabled(v34, v35))
    {
      type = v35;
      v36 = *((_QWORD *)v0 + 10);
      v37 = *((_QWORD *)v0 + 6);
      v38 = (uint8_t *)swift_slowAlloc();
      *(double *)&v48 = COERCE_DOUBLE(swift_slowAlloc());
      v50 = *(double *)&v48;
      *(_DWORD *)v38 = 136315138;
      v32(v36, v31, v37);
      sub_1A9066CA8((unint64_t *)&qword_1ED2A5C58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v39 = sub_1A93F9060();
      v41 = v40;
      v33(v36, v37);
      *((_QWORD *)v0 + 3) = sub_1A906436C(v39, v41, (uint64_t *)&v50);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1A904E000, v34, type, "[Categories Sync] Not syncing because not past threshold -- last synced at: %s.", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v48, -1, -1);
      MEMORY[0x1AF41411C](v38, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    v17 = (void *)*((_QWORD *)v0 + 12);
    sub_1A936DA7C();
    swift_allocError();
    v19 = 1;
LABEL_25:
    *v18 = v19;
LABEL_26:
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v46 = (uint64_t (*)(void))*((_QWORD *)v0 + 1);
    return v46();
  }
  v42 = sub_1A93F7674();
  v43 = sub_1A93F87B4();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v44 = 0;
    _os_log_impl(&dword_1A904E000, v42, v43, "[Categories Sync] Past threshold -- Syncing Categories.", v44, 2u);
    MEMORY[0x1AF41411C](v44, -1, -1);
    v45 = *((_QWORD *)v0 + 12);
  }
  else
  {
    v45 = v42;
    v42 = *((_QWORD *)v0 + 12);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v46 = (uint64_t (*)(void))*((_QWORD *)v0 + 1);
  return v46();
}

uint64_t sub_1A936CF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t);

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = (_QWORD *)(a3 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesProvider);
  v8 = *(_QWORD *)(a3 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesProvider + 24);
  v9 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v8);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1A908CDB8;
  *(_QWORD *)(v10 + 24) = v6;
  v11 = *(void (**)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v9 + 8);
  swift_retain();
  v11(sub_1A936DA74, v10, v8, v9);
  return swift_release();
}

void sub_1A936CFF8(uint64_t a1, void (*a2)(unint64_t, uint64_t))
{
  unint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  _BYTE *v18;
  uint64_t v19;

  v3 = *(_QWORD *)a1;
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    v4 = (id)v3;
    if (qword_1ED2A58F8 != -1)
      swift_once();
    v5 = sub_1A93F7698();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED2A58D8);
    v6 = (id)v3;
    v7 = sub_1A93F7674();
    v8 = sub_1A93F879C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412290;
      v19 = sub_1A93F711C();
      sub_1A93F8AA8();
      *v10 = v19;
      sub_1A909CFC0((id)v3, 1);
      _os_log_impl(&dword_1A904E000, v7, v8, "[Categories Sync] Failed to fetch categories with error: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v10, -1, -1);
      MEMORY[0x1AF41411C](v9, -1, -1);
    }
    else
    {
      sub_1A909CFC0((id)v3, 1);
    }

    v11 = (id)v3;
    a2(v3, 1);
    sub_1A909CFC0((id)v3, 1);
    sub_1A909CFC0((id)v3, 1);
    return;
  }
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1A93F8E5C();
    sub_1A909CFC0((id)v3, 0);
    if (v12 >= 1)
      goto LABEL_8;
  }
  else if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_8:
    a2(v3, 0);
    return;
  }
  if (qword_1ED2A58F8 != -1)
    swift_once();
  v13 = sub_1A93F7698();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A58D8);
  v14 = sub_1A93F7674();
  v15 = sub_1A93F879C();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1A904E000, v14, v15, "[Categories Sync] Server response is missing categories.", v16, 2u);
    MEMORY[0x1AF41411C](v16, -1, -1);
  }

  sub_1A936DA7C();
  v17 = (void *)swift_allocError();
  *v18 = 2;
  a2((unint64_t)v17, 1);

}

uint64_t sub_1A936D338(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_1A93F8E5C();
      v5 = result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return result;
        }
        v6 = 0;
        v7 = OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_ctx;
        v20 = a2 & 0xC000000000000001;
        v21 = OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoryIngester;
        v8 = a2;
        do
        {
          if (v20)
          {
            v13 = MEMORY[0x1AF4129DC](v6, a2);
          }
          else
          {
            v13 = *(_QWORD *)(a2 + 8 * v6 + 32);
            swift_retain();
          }
          v15 = *(_QWORD *)(v13 + 16);
          v14 = *(_QWORD *)(v13 + 24);
          v16 = *(id *)(v4 + v7);
          swift_bridgeObjectRetain();
          v17 = sub_1A931883C(v15, v14);
          swift_bridgeObjectRelease();
          NSManagedObjectContext.unsafeCategory(forAdamID:)(v17);
          v19 = v18;

          if (v19)
          {
            v11 = objc_msgSend((id)swift_unknownObjectRetain(), sel_unsafeIngestCategoryWithCategory_feedCategory_ctx_, v19, v13, *(_QWORD *)(v4 + v7));

            swift_unknownObjectRelease();
          }
          else
          {
            v9 = *(void **)(v4 + v21);
            v10 = *(void **)(v4 + v7);
            swift_unknownObjectRetain();
            v11 = v10;
            v12 = objc_msgSend(v9, sel_unsafeIngestNewCategoryWithCtx_feedCategory_, v11, v13);
            swift_unknownObjectRelease();

          }
          ++v6;

          swift_release();
          a2 = v8;
        }
        while (v5 != v6);
      }
    }
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_ctx), sel_saveInCurrentBlock);
    return swift_release();
  }
  return result;
}

uint64_t CategoriesSyncUtil.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_lastCategoriesSyncDate;
  v2 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesSyncThresholdProvider);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesProvider);

  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t CategoriesSyncUtil.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_lastCategoriesSyncDate;
  v2 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesSyncThresholdProvider);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesProvider);

  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1A936D6DC()
{
  unint64_t result;

  result = qword_1EEABE9C0;
  if (!qword_1EEABE9C0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for CategoriesSyncUtil.CategoriesSyncError, &type metadata for CategoriesSyncUtil.CategoriesSyncError);
    atomic_store(result, (unint64_t *)&qword_1EEABE9C0);
  }
  return result;
}

uint64_t sub_1A936D720()
{
  return type metadata accessor for CategoriesSyncUtil();
}

uint64_t type metadata accessor for CategoriesSyncUtil()
{
  uint64_t result;

  result = qword_1ED2AB0C0;
  if (!qword_1ED2AB0C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A936D764()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F738C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CategoriesSyncUtil()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CategoriesSyncUtil.__allocating_init(categoriesSyncThresholdProvider:categoriesProvider:categoryIngester:lastCategoriesSyncDate:queue:ctx:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t storeEnumTagSinglePayload for CategoriesSyncUtil.CategoriesSyncError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A936D860 + 4 * byte_1A94212D5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A936D894 + 4 * byte_1A94212D0[v4]))();
}

uint64_t sub_1A936D894(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A936D89C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A936D8A4);
  return result;
}

uint64_t sub_1A936D8B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A936D8B8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A936D8BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A936D8C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CategoriesSyncUtil.CategoriesSyncError()
{
  return &type metadata for CategoriesSyncUtil.CategoriesSyncError;
}

uint64_t sub_1A936D8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A936C484(a1, a2, v2);
}

uint64_t sub_1A936D8E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A936BF04(a1);
}

uint64_t sub_1A936D8F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A936C018(a1, v2, a2);
}

uint64_t sub_1A936D8F8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

void sub_1A936D924(void **a1)
{
  uint64_t v1;

  sub_1A936C110(a1, *(void (**)(_QWORD, void *))(v1 + 16));
}

void sub_1A936D930()
{
  uint64_t v0;

  sub_1A936C2E0(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t, _QWORD))(v0 + 24));
}

uint64_t sub_1A936D93C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A936D960()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A936D984()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A936D9B0()
{
  uint64_t v0;

  return sub_1A936D338(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1A936D9B8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A936D9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A936B09C(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1A936D9F8()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A936DA2C()
{
  uint64_t v0;

  return sub_1A936B184(*(void (**)(double))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1A936DA3C()
{
  uint64_t v0;
  uint64_t (*v1)(char *);
  char v3;

  v1 = *(uint64_t (**)(char *))(v0 + 16);
  v3 = 0;
  return v1(&v3);
}

uint64_t sub_1A936DA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A936CF3C(a1, a2, v2);
}

void sub_1A936DA74(uint64_t a1)
{
  uint64_t v1;

  sub_1A936CFF8(a1, *(void (**)(unint64_t, uint64_t))(v1 + 16));
}

unint64_t sub_1A936DA7C()
{
  unint64_t result;

  result = qword_1EEABEA40;
  if (!qword_1EEABEA40)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for CategoriesSyncUtil.CategoriesSyncError, &type metadata for CategoriesSyncUtil.CategoriesSyncError);
    atomic_store(result, &qword_1EEABEA40);
  }
  return result;
}

uint64_t sub_1A936DAC0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A936DAF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1A9164CD4;
  *(_OWORD *)(v2 + 16) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v4;
  *v4 = v2;
  v4[1] = sub_1A936C5D4;
  return sub_1A936C6CC();
}

uint64_t sub_1A936DB70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A9164CD4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EEABEA58 + dword_1EEABEA58))(a1, v4);
}

uint64_t NSManagedObjectContext.episodes<A>(for:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;

  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a4;
  v9[3] = v8;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = a1;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1A93F8868();
  v11 = NSManagedObjectContext.performAndPublish<A>(queue:_:)(v10, (uint64_t)sub_1A936DF24, (uint64_t)v9, a4);
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_1A936DD00()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A936DD24(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  __CFString *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  unint64_t v14;
  uint64_t v15;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1AF41420C](v3);
  if (!v4)
    return a2(MEMORY[0x1E0DEE9D8]);
  v5 = (void *)v4;
  v6 = (void *)objc_opt_self();
  v7 = CFSTR("MTEpisode");
  v8 = swift_bridgeObjectRetain();
  sub_1A9159F94(v8);
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1A93F85EC();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v6, sel_predicateForEpisodeUuids_, v9);

  v11 = MEMORY[0x1E0DEE9D8];
  v12 = (void *)sub_1A93F82F8();
  v13 = objc_msgSend(v5, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_, v7, v10, v12, 1);

  if (v13)
  {
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
    v14 = sub_1A93F8310();

    v15 = sub_1A926140C(v14);
    swift_bridgeObjectRelease();
    if (v15)
      v11 = v15;
  }
  a2(v11);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A936DEF0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A936DF24()
{
  uint64_t v0;

  return sub_1A936DD24(*(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t NSManagedObjectContext.episodes(for:sortDescriptors:limit:)(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  sub_1A93F8040();
  v7 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v8 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  v10 = Array<A>.episodeCoreDataPredicate()(a1);
  objc_msgSend(v9, sel_setPredicate_, v10);

  if (!(a2 >> 62))
  {
    if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  v14 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_3:
    sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
    v11 = (void *)sub_1A93F82F8();
    objc_msgSend(v9, sel_setSortDescriptors_, v11);

  }
LABEL_4:
  if ((a4 & 1) == 0)
    objc_msgSend(v9, sel_setFetchLimit_, a3);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v12 = sub_1A93F89DC();

  return v12;
}

void sub_1A936E0D8(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v8 = sub_1A93F726C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE048);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F8988();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (double)a2 * 0.1;
  if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v18 <= -1.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v18 >= 1.84467441e19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v25 = a1;
  v19 = a4;
  v20 = (unint64_t)v18;
  v21 = a2 - (unint64_t)v18;
  if (a2 >= (unint64_t)v18)
  {
    sub_1A93F8994();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEC40);
    swift_allocObject();
    *v19 = sub_1A937C9F0(v21, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1A9113CD8, &qword_1EEABEC48);
    v22 = v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v25, v8);
    sub_1A936E72C(v11, v20, (uint64_t)v14);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v22, v8);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDFF8);
    sub_1A9062F08((uint64_t)v14, (uint64_t)v19 + *(int *)(v23 + 60), &qword_1EEABE048);
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1A936E2F4(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v8 = sub_1A93F726C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F8988();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (double)a2 * 0.1;
  if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v18 <= -1.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v18 >= 1.84467441e19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v25 = a1;
  v19 = a4;
  v20 = (unint64_t)v18;
  v21 = a2 - (unint64_t)v18;
  if (a2 >= (unint64_t)v18)
  {
    sub_1A93F8994();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB0D0);
    swift_allocObject();
    *v19 = sub_1A937C9F0(v21, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1A9113DEC, &qword_1ED2ABD50);
    v22 = v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v25, v8);
    sub_1A936F1B4(v11, v20, (uint64_t)v14);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v22, v8);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010);
    sub_1A9062F08((uint64_t)v14, (uint64_t)v19 + *(int *)(v23 + 60), &qword_1ED2AAF80);
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1A936E510(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v8 = sub_1A93F726C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F8988();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (double)a2 * 0.1;
  if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v18 <= -1.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v18 >= 1.84467441e19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v25 = a1;
  v19 = a4;
  v20 = (unint64_t)v18;
  v21 = a2 - (unint64_t)v18;
  if (a2 >= (unint64_t)v18)
  {
    sub_1A93F8994();
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AB0E8);
    swift_allocObject();
    *v19 = sub_1A937C9F0(v21, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1A9113DE0, &qword_1ED2ABD68);
    v22 = v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v25, v8);
    sub_1A936EC70(v11, v20, (uint64_t)v14);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v22, v8);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028);
    sub_1A9062F08((uint64_t)v14, (uint64_t)v19 + *(int *)(v23 + 60), qword_1ED2AAF88);
    return;
  }
LABEL_9:
  __break(1u);
}

id sub_1A936E72C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  void *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v47;
  unint64_t v48;

  v45 = a2;
  v43 = a3;
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  v7 = v6;
  v42 = v6;
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91A0);
  MEMORY[0x1E0C80A78](v9);
  v41 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F885C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F8808();
  MEMORY[0x1E0C80A78](v15);
  v16 = sub_1A93F7DB8();
  v17 = MEMORY[0x1E0C80A78](v16);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v7 + 16);
  v46(a3, (uint64_t)a1, v5, v17);
  v39 = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v47 = 0;
  v48 = 0xE000000000000000;
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  sub_1A93F7DA0();
  v47 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF8D0], v11);
  v18 = sub_1A93F888C();
  v19 = (uint64_t)v41;
  sub_1A93F7A64();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEC40);
  swift_allocObject();
  v20 = sub_1A937CAE8(v45, v19, (uint64_t (*)(_QWORD))sub_1A9113CD8, &qword_1EEABEC48);
  v45 = v20;
  v21 = v44;
  v22 = a1;
  v23 = v40;
  v24 = (void (*)(char *, uint64_t, uint64_t))v46;
  ((void (*)(char *, char *, uint64_t))v46)(v44, a1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE178);
  v25 = swift_allocObject();
  v26 = *(void (**)(uint64_t, char *, uint64_t))(v42 + 32);
  v26(v25 + qword_1ED2B8A10, v21, v23);
  v27 = v25 + qword_1ED2B8A18;
  *(_DWORD *)v27 = 0;
  *(_BYTE *)(v27 + 4) = 1;
  v28 = (void *)v18;
  *(_QWORD *)(v25 + qword_1ED2ACE28) = v18;
  *(_QWORD *)(v25 + qword_1ED2ACE20) = v20;
  v29 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE048);
  v30 = v43;
  *(_QWORD *)(v43 + v29[15]) = v25;
  v24(v21, (uint64_t)v22, v23);
  v31 = swift_allocObject();
  v26(v31 + qword_1ED2B8A10, v21, v23);
  v32 = v31 + qword_1ED2B8A18;
  *(_DWORD *)v32 = 512;
  *(_BYTE *)(v32 + 4) = 0;
  *(_QWORD *)(v31 + qword_1ED2ACE28) = v28;
  v33 = v45;
  *(_QWORD *)(v31 + qword_1ED2ACE20) = v45;
  *(_QWORD *)(v30 + v29[16]) = v31;
  ((void (*)(char *, char *, uint64_t))v46)(v21, v22, v23);
  v34 = swift_allocObject();
  v26(v34 + qword_1ED2B8A10, v21, v23);
  v35 = v34 + qword_1ED2B8A18;
  *(_DWORD *)v35 = 2048;
  *(_BYTE *)(v35 + 4) = 0;
  *(_QWORD *)(v34 + qword_1ED2ACE28) = v28;
  *(_QWORD *)(v34 + qword_1ED2ACE20) = v33;
  *(_QWORD *)(v30 + v29[17]) = v34;
  v36 = swift_allocObject();
  v26(v36 + qword_1ED2B8A10, v22, v23);
  v37 = v36 + qword_1ED2B8A18;
  *(_DWORD *)v37 = 0x8000;
  *(_BYTE *)(v37 + 4) = 0;
  *(_QWORD *)(v36 + qword_1ED2ACE28) = v28;
  *(_QWORD *)(v36 + qword_1ED2ACE20) = v33;
  *(_QWORD *)(v30 + v29[18]) = v36;
  swift_retain_n();
  return v28;
}

id sub_1A936EC70@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  void *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v47;
  unint64_t v48;

  v45 = a2;
  v43 = a3;
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  v7 = v6;
  v42 = v6;
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91A0);
  MEMORY[0x1E0C80A78](v9);
  v41 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F885C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F8808();
  MEMORY[0x1E0C80A78](v15);
  v16 = sub_1A93F7DB8();
  v17 = MEMORY[0x1E0C80A78](v16);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v7 + 16);
  v46(a3, (uint64_t)a1, v5, v17);
  v39 = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v47 = 0;
  v48 = 0xE000000000000000;
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  sub_1A93F7DA0();
  v47 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF8D0], v11);
  v18 = sub_1A93F888C();
  v19 = (uint64_t)v41;
  sub_1A93F7A64();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AB0E8);
  swift_allocObject();
  v20 = sub_1A937CAE8(v45, v19, (uint64_t (*)(_QWORD))sub_1A9113DE0, &qword_1ED2ABD68);
  v45 = v20;
  v21 = v44;
  v22 = a1;
  v23 = v40;
  v24 = (void (*)(char *, uint64_t, uint64_t))v46;
  ((void (*)(char *, char *, uint64_t))v46)(v44, a1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB078);
  v25 = swift_allocObject();
  v26 = *(void (**)(uint64_t, char *, uint64_t))(v42 + 32);
  v26(v25 + qword_1ED2B8A10, v21, v23);
  v27 = v25 + qword_1ED2B8A18;
  *(_DWORD *)v27 = 0;
  *(_BYTE *)(v27 + 4) = 1;
  v28 = (void *)v18;
  *(_QWORD *)(v25 + qword_1ED2ACE28) = v18;
  *(_QWORD *)(v25 + qword_1ED2ACE20) = v20;
  v29 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  v30 = v43;
  *(_QWORD *)(v43 + v29[15]) = v25;
  v24(v21, (uint64_t)v22, v23);
  v31 = swift_allocObject();
  v26(v31 + qword_1ED2B8A10, v21, v23);
  v32 = v31 + qword_1ED2B8A18;
  *(_DWORD *)v32 = 512;
  *(_BYTE *)(v32 + 4) = 0;
  *(_QWORD *)(v31 + qword_1ED2ACE28) = v28;
  v33 = v45;
  *(_QWORD *)(v31 + qword_1ED2ACE20) = v45;
  *(_QWORD *)(v30 + v29[16]) = v31;
  ((void (*)(char *, char *, uint64_t))v46)(v21, v22, v23);
  v34 = swift_allocObject();
  v26(v34 + qword_1ED2B8A10, v21, v23);
  v35 = v34 + qword_1ED2B8A18;
  *(_DWORD *)v35 = 2048;
  *(_BYTE *)(v35 + 4) = 0;
  *(_QWORD *)(v34 + qword_1ED2ACE28) = v28;
  *(_QWORD *)(v34 + qword_1ED2ACE20) = v33;
  *(_QWORD *)(v30 + v29[17]) = v34;
  v36 = swift_allocObject();
  v26(v36 + qword_1ED2B8A10, v22, v23);
  v37 = v36 + qword_1ED2B8A18;
  *(_DWORD *)v37 = 0x8000;
  *(_BYTE *)(v37 + 4) = 0;
  *(_QWORD *)(v36 + qword_1ED2ACE28) = v28;
  *(_QWORD *)(v36 + qword_1ED2ACE20) = v33;
  *(_QWORD *)(v30 + v29[18]) = v36;
  swift_retain_n();
  return v28;
}

id sub_1A936F1B4@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  void *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v47;
  unint64_t v48;

  v45 = a2;
  v43 = a3;
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  v7 = v6;
  v42 = v6;
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91A0);
  MEMORY[0x1E0C80A78](v9);
  v41 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F885C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F8808();
  MEMORY[0x1E0C80A78](v15);
  v16 = sub_1A93F7DB8();
  v17 = MEMORY[0x1E0C80A78](v16);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v7 + 16);
  v46(a3, (uint64_t)a1, v5, v17);
  v39 = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v47 = 0;
  v48 = 0xE000000000000000;
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  sub_1A93F7DA0();
  v47 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF8D0], v11);
  v18 = sub_1A93F888C();
  v19 = (uint64_t)v41;
  sub_1A93F7A64();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB0D0);
  swift_allocObject();
  v20 = sub_1A937CAE8(v45, v19, (uint64_t (*)(_QWORD))sub_1A9113DEC, &qword_1ED2ABD50);
  v45 = v20;
  v21 = v44;
  v22 = a1;
  v23 = v40;
  v24 = (void (*)(char *, uint64_t, uint64_t))v46;
  ((void (*)(char *, char *, uint64_t))v46)(v44, a1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB060);
  v25 = swift_allocObject();
  v26 = *(void (**)(uint64_t, char *, uint64_t))(v42 + 32);
  v26(v25 + qword_1ED2B8A10, v21, v23);
  v27 = v25 + qword_1ED2B8A18;
  *(_DWORD *)v27 = 0;
  *(_BYTE *)(v27 + 4) = 1;
  v28 = (void *)v18;
  *(_QWORD *)(v25 + qword_1ED2ACE28) = v18;
  *(_QWORD *)(v25 + qword_1ED2ACE20) = v20;
  v29 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80);
  v30 = v43;
  *(_QWORD *)(v43 + v29[15]) = v25;
  v24(v21, (uint64_t)v22, v23);
  v31 = swift_allocObject();
  v26(v31 + qword_1ED2B8A10, v21, v23);
  v32 = v31 + qword_1ED2B8A18;
  *(_DWORD *)v32 = 512;
  *(_BYTE *)(v32 + 4) = 0;
  *(_QWORD *)(v31 + qword_1ED2ACE28) = v28;
  v33 = v45;
  *(_QWORD *)(v31 + qword_1ED2ACE20) = v45;
  *(_QWORD *)(v30 + v29[16]) = v31;
  ((void (*)(char *, char *, uint64_t))v46)(v21, v22, v23);
  v34 = swift_allocObject();
  v26(v34 + qword_1ED2B8A10, v21, v23);
  v35 = v34 + qword_1ED2B8A18;
  *(_DWORD *)v35 = 2048;
  *(_BYTE *)(v35 + 4) = 0;
  *(_QWORD *)(v34 + qword_1ED2ACE28) = v28;
  *(_QWORD *)(v34 + qword_1ED2ACE20) = v33;
  *(_QWORD *)(v30 + v29[17]) = v34;
  v36 = swift_allocObject();
  v26(v36 + qword_1ED2B8A10, v22, v23);
  v37 = v36 + qword_1ED2B8A18;
  *(_DWORD *)v37 = 0x8000;
  *(_BYTE *)(v37 + 4) = 0;
  *(_QWORD *)(v36 + qword_1ED2ACE28) = v28;
  *(_QWORD *)(v36 + qword_1ED2ACE20) = v33;
  *(_QWORD *)(v30 + v29[18]) = v36;
  swift_retain_n();
  return v28;
}

id sub_1A936F6F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  os_unfair_lock_s *v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  id v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  char *v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v46;
  unint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[2];

  v2 = v1;
  v50 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1E0C80A78](v50);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v46 - v8;
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  v51 = v10;
  v52 = v11;
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v46 - v13;
  sub_1A93859EC((uint64_t)&v46 - v13);
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1A93F7224();
  v16 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v15, sel_contentsAtPath_, v16);

  if (v17)
  {
    v18 = sub_1A93F72B4();
    v20 = v19;

    v49 = v18;
    v24 = ShazamSignatureRequest.decode(_:)(v18, v20);
    if (qword_1ED2AD108 != -1)
      swift_once();
    v36 = sub_1A93F7698();
    __swift_project_value_buffer(v36, (uint64_t)qword_1ED2AD0F0);
    sub_1A9064630(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
    v37 = sub_1A93F7674();
    v38 = sub_1A93F8790();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = v14;
      v40 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      v47 = v20;
      *(_DWORD *)v40 = 136315138;
      v54[0] = v41;
      v48 = v40 + 4;
      v42 = (uint64_t *)&v9[*(int *)(v50 + 24)];
      v44 = *v42;
      v43 = v42[1];
      swift_bridgeObjectRetain();
      v53 = sub_1A906436C(v44, v43, v54);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A9064714((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
      _os_log_impl(&dword_1A904E000, v37, v38, "Cache hit for asset at %s", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v41, -1, -1);
      MEMORY[0x1AF41411C](v40, -1, -1);
      sub_1A905F180(v49, v47);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v39, v51);
    }
    else
    {
      sub_1A905F180(v49, v20);

      sub_1A9064714((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v51);
    }
  }
  else
  {
    v48 = (uint8_t *)v14;
    v21 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + qword_1ED2ACE20) + 16);
    v22 = (uint64_t)&v21[4];
    v23 = v21 + 10;
    os_unfair_lock_lock(v21 + 10);
    v24 = sub_1A937CE08(v22, a1);
    os_unfair_lock_unlock(v23);
    if (qword_1ED2AD108 != -1)
      swift_once();
    v25 = sub_1A93F7698();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED2AD0F0);
    sub_1A9064630(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
    v26 = v24;
    v27 = sub_1A93F7674();
    v28 = sub_1A93F8790();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v54[0] = v30;
      *(_DWORD *)v29 = 136315394;
      if (v24)
        v31 = 7629160;
      else
        v31 = 1936943469;
      if (v24)
        v32 = 0xE300000000000000;
      else
        v32 = 0xE400000000000000;
      v53 = sub_1A906436C(v31, v32, v54);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      v33 = (uint64_t *)&v5[*(int *)(v50 + 24)];
      v34 = *v33;
      v35 = v33[1];
      swift_bridgeObjectRetain();
      v53 = sub_1A906436C(v34, v35, v54);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A9064714((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
      _os_log_impl(&dword_1A904E000, v27, v28, "Cache %s for asset at %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v30, -1, -1);
      MEMORY[0x1AF41411C](v29, -1, -1);

    }
    else
    {

      sub_1A9064714((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
    }
    (*(void (**)(uint8_t *, uint64_t))(v52 + 8))(v48, v51);
  }
  return v24;
}

double sub_1A9370008@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  NSObject *v20;
  unint64_t v21;
  unint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  NSObject *v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  __int128 v56;
  _OWORD *v57;
  double result;
  uint64_t v59;
  _QWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  NSObject *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71[2];
  __int128 v72;
  _BYTE v73[40];

  v3 = v2;
  v66 = type metadata accessor for TTMLRequest();
  MEMORY[0x1E0C80A78](v66);
  v7 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v60 - v10;
  v12 = sub_1A93F726C();
  v13 = *(_QWORD *)(v12 - 8);
  v67 = v12;
  v68 = v13;
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v60 - v15;
  sub_1A93859E0((uint64_t)v60 - v15);
  v17 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v69 = v16;
  sub_1A93F7224();
  v18 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v17, sel_contentsAtPath_, v18);

  if (v19)
  {
    v20 = sub_1A93F72B4();
    v22 = v21;

    v65 = v20;
    TranscriptParser.parse(ttmlData:)((uint64_t)v20, v22, (uint64_t)&v72);
    if (qword_1ED2AD108 != -1)
      swift_once();
    v45 = sub_1A93F7698();
    __swift_project_value_buffer(v45, (uint64_t)qword_1ED2AD0F0);
    sub_1A9064630(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
    v46 = sub_1A93F7674();
    v47 = sub_1A93F8790();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      v63 = v22;
      v50 = v49;
      v51 = a2;
      *(_DWORD *)v48 = 136315138;
      v71[0] = v49;
      v52 = (uint64_t *)&v11[*(int *)(v66 + 24)];
      v53 = *v52;
      v54 = v52[1];
      swift_bridgeObjectRetain();
      v70 = sub_1A906436C(v53, v54, v71);
      sub_1A93F8AA8();
      a2 = v51;
      swift_bridgeObjectRelease();
      sub_1A9064714((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
      _os_log_impl(&dword_1A904E000, v46, v47, "Cache hit for asset at %s", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v50, -1, -1);
      MEMORY[0x1AF41411C](v48, -1, -1);
      sub_1A905F180((uint64_t)v65, v63);

    }
    else
    {
      sub_1A905F180((uint64_t)v65, v22);

      sub_1A9064714((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v67);
    v59 = v73[0];
    *(_OWORD *)a2 = v72;
    *(_QWORD *)(a2 + 16) = v59;
    *(_OWORD *)(a2 + 24) = *(_OWORD *)&v73[8];
    result = *(double *)&v73[24];
    *(_OWORD *)(a2 + 40) = *(_OWORD *)&v73[24];
  }
  else
  {
    v64 = (_OWORD *)a2;
    v23 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + qword_1ED2ACE20) + 16);
    v24 = (uint64_t)&v23[4];
    v25 = v23 + 10;
    os_unfair_lock_lock(v23 + 10);
    sub_1A937CF44(v24, a1, (uint64_t)&v72);
    os_unfair_lock_unlock(v25);
    if (qword_1ED2AD108 != -1)
      swift_once();
    v26 = sub_1A93F7698();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED2AD0F0);
    v27 = v72;
    v28 = *(_OWORD *)v73;
    v29 = *(_OWORD *)&v73[16];
    v30 = a1;
    v31 = (uint64_t)v7;
    sub_1A9064630(v30, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
    sub_1A9298E34(v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1));
    sub_1A9298E34(v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1));
    v32 = sub_1A93F7674();
    v33 = sub_1A93F8790();
    v34 = v33;
    v65 = v32;
    if (os_log_type_enabled(v32, v33))
    {
      v35 = swift_slowAlloc();
      v61 = v31;
      v36 = v35;
      v63 = swift_slowAlloc();
      v71[0] = v63;
      *(_DWORD *)v36 = 136315394;
      if (*((_QWORD *)&v29 + 1))
        v37 = 7629160;
      else
        v37 = 1936943469;
      if (*((_QWORD *)&v29 + 1))
        v38 = 0xE300000000000000;
      else
        v38 = 0xE400000000000000;
      LODWORD(v62) = v34;
      v70 = sub_1A906436C(v37, v38, v71);
      v60[1] = v71;
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A9298DF4(v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1));
      sub_1A9298DF4(v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1));
      *(_WORD *)(v36 + 12) = 2080;
      v39 = v61;
      v40 = (uint64_t *)(v61 + *(int *)(v66 + 24));
      v41 = *v40;
      v42 = v40[1];
      swift_bridgeObjectRetain();
      v70 = sub_1A906436C(v41, v42, v71);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A9064714(v39, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
      v43 = v65;
      _os_log_impl(&dword_1A904E000, v65, (os_log_type_t)v62, "Cache %s for asset at %s", (uint8_t *)v36, 0x16u);
      v44 = v63;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v44, -1, -1);
      MEMORY[0x1AF41411C](v36, -1, -1);

    }
    else
    {

      sub_1A9064714(v31, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
      sub_1A9298DF4(v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1));
      sub_1A9298DF4(v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1));
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v67);
    v55 = *(_QWORD *)&v73[32];
    v56 = *(_OWORD *)v73;
    v57 = v64;
    *v64 = v72;
    v57[1] = v56;
    result = *(double *)&v73[16];
    v57[2] = *(_OWORD *)&v73[16];
    *((_QWORD *)v57 + 6) = v55;
  }
  return result;
}

uint64_t sub_1A9370A2C(void *a1, uint64_t (*a2)(_QWORD), void (*a3)(uint64_t, double))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  void *v16;
  unsigned int v17;
  id v18;
  void *v19;
  unsigned __int8 v20;
  uint64_t (*v21)(char *, uint64_t);
  id v22;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(char *, uint64_t);
  void *v41;
  _BYTE *v42;
  uint64_t v43;
  os_log_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char *v50;
  uint64_t (*v51)(_QWORD);
  uint64_t v52;
  id v53[2];

  v53[1] = *(id *)MEMORY[0x1E0C80C00];
  v51 = a2;
  v47 = a2(0);
  MEMORY[0x1E0C80A78](v47);
  v49 = (uint64_t)&v43 - v6;
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v50 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v43 - v12;
  v48 = a1;
  a3(v3 + qword_1ED2B8A10, v11);
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_defaultManager);
  sub_1A93F7224();
  v16 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v15, sel_fileExistsAtPath_, v16);

  if (!v17)
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v46 = v8;
  v18 = objc_msgSend(v14, sel_defaultManager);
  v19 = (void *)sub_1A93F71A0();
  v53[0] = 0;
  v20 = objc_msgSend(v18, sel_removeItemAtURL_error_, v19, v53);

  if ((v20 & 1) != 0)
  {
    v21 = *(uint64_t (**)(char *, uint64_t))(v46 + 8);
    v22 = v53[0];
    return v21(v13, v7);
  }
  else
  {
    v24 = v53[0];
    v25 = (void *)sub_1A93F7128();

    v45 = v25;
    swift_willThrow();
    if (qword_1ED2AD108 != -1)
      swift_once();
    v26 = sub_1A93F7698();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED2AD0F0);
    v27 = v49;
    v28 = v51;
    sub_1A9064630((uint64_t)v48, v49, v51);
    v29 = v46;
    v30 = v50;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v50, v13, v7);
    v31 = sub_1A93F7674();
    v32 = sub_1A93F879C();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v48 = (void *)swift_slowAlloc();
      v53[0] = v48;
      *(_DWORD *)v34 = 136315394;
      v44 = v31;
      v35 = (uint64_t *)(v27 + *(int *)(v47 + 24));
      v36 = *v35;
      v37 = v35[1];
      swift_bridgeObjectRetain();
      v52 = sub_1A906436C(v36, v37, (uint64_t *)v53);
      LODWORD(v47) = v33;
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A9064714(v27, v51);
      *(_WORD *)(v34 + 12) = 2080;
      sub_1A9066CA8(qword_1ED2ABE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v38 = sub_1A93F9060();
      v52 = sub_1A906436C(v38, v39, (uint64_t *)v53);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      v40 = *(void (**)(char *, uint64_t))(v29 + 8);
      v40(v30, v7);
      v31 = v44;
      _os_log_impl(&dword_1A904E000, v44, (os_log_type_t)v47, "Error deleting file for key %s, url: %s", (uint8_t *)v34, 0x16u);
      v41 = v48;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v41, -1, -1);
      MEMORY[0x1AF41411C](v34, -1, -1);
    }
    else
    {
      sub_1A9064714(v27, v28);
      v40 = *(void (**)(char *, uint64_t))(v29 + 8);
      v40(v30, v7);
    }

    sub_1A9219100();
    swift_allocError();
    *v42 = 1;
    swift_willThrow();

    return ((uint64_t (*)(char *, uint64_t))v40)(v13, v7);
  }
}

uint64_t sub_1A9370EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[40];
  _BYTE v51[48];

  v40 = a2;
  v41 = a3;
  v49 = a4;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v37);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8608);
  v36 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8610);
  v11 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  v43 = v11;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8618);
  v15 = *(_QWORD *)(v14 - 8);
  v45 = v14;
  v46 = v15;
  MEMORY[0x1E0C80A78](v14);
  v39 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8620);
  v18 = *(_QWORD *)(v17 - 8);
  v47 = v17;
  v48 = v18;
  MEMORY[0x1E0C80A78](v17);
  v44 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ShazamSignatureRequest();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x1E0C80A78](v20);
  sub_1A9064630(a1, (uint64_t)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  sub_1A9062170((uint64_t)&v35 + *(int *)(v20 + 36) - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v51, &qword_1ED2AD0C0);
  sub_1A9064714((uint64_t)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v38 = a1;
  sub_1A9062170(a1, (uint64_t)v6, &qword_1ED2AD3D0);
  sub_1A93F7A58();
  sub_1A93F6D80();
  sub_1A93F7A28();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v7);
  sub_1A9064630(a1, (uint64_t)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v23 = *(unsigned __int8 *)(v21 + 80);
  v37 = v23 | 7;
  v24 = swift_allocObject();
  v25 = v41;
  *(_QWORD *)(v24 + 16) = v40;
  *(_QWORD *)(v24 + 24) = v25;
  sub_1A9116174((uint64_t)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + ((v23 + 32) & ~v23), (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  swift_retain();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABFD8);
  sub_1A9066D74(&qword_1EEAB8628, &qword_1EEAB8610, MEMORY[0x1E0C964A8]);
  sub_1A9066D74(&qword_1ED2ABFD0, &qword_1ED2ABFD8, MEMORY[0x1E0C95D90]);
  v26 = v39;
  v27 = v42;
  sub_1A93F7D28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v27);
  sub_1A9062170((uint64_t)v51, (uint64_t)v50, &qword_1ED2AD0C0);
  v28 = swift_allocObject();
  sub_1A9062F08((uint64_t)v50, v28 + 16, &qword_1ED2AD0C0);
  sub_1A9066D74(&qword_1EEAB8630, &qword_1EEAB8618, MEMORY[0x1E0C95B78]);
  v29 = v44;
  v30 = v45;
  sub_1A93F7B6C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v26, v30);
  sub_1A9064630(v38, (uint64_t)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v31 = swift_allocObject();
  sub_1A9116174((uint64_t)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v31 + ((v23 + 16) & ~v23), (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_1A937F998;
  *(_QWORD *)(v32 + 24) = v31;
  sub_1A9072534(0, &qword_1EEAB82E8);
  sub_1A9066D74(qword_1EEAB8638, &qword_1EEAB8620, MEMORY[0x1E0C95818]);
  v33 = v47;
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v33);
  return sub_1A905FD54((uint64_t)v51, &qword_1ED2AD0C0);
}

uint64_t sub_1A93713D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[40];
  _BYTE v51[48];

  v40 = a2;
  v41 = a3;
  v49 = a4;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v37);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8608);
  v36 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8610);
  v11 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  v43 = v11;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8618);
  v15 = *(_QWORD *)(v14 - 8);
  v45 = v14;
  v46 = v15;
  MEMORY[0x1E0C80A78](v14);
  v39 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8620);
  v18 = *(_QWORD *)(v17 - 8);
  v47 = v17;
  v48 = v18;
  MEMORY[0x1E0C80A78](v17);
  v44 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TTMLRequest();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x1E0C80A78](v20);
  sub_1A9064630(a1, (uint64_t)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  sub_1A9062170((uint64_t)&v35 + *(int *)(v20 + 36) - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v51, &qword_1ED2AD0C0);
  sub_1A9064714((uint64_t)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v38 = a1;
  sub_1A9062170(a1, (uint64_t)v6, &qword_1ED2AD3D0);
  sub_1A93F7A58();
  sub_1A93F6D80();
  sub_1A93F7A28();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v7);
  sub_1A9064630(a1, (uint64_t)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v23 = *(unsigned __int8 *)(v21 + 80);
  v37 = v23 | 7;
  v24 = swift_allocObject();
  v25 = v41;
  *(_QWORD *)(v24 + 16) = v40;
  *(_QWORD *)(v24 + 24) = v25;
  sub_1A9116174((uint64_t)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + ((v23 + 32) & ~v23), (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  swift_retain();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABFD8);
  sub_1A9066D74(&qword_1EEAB8628, &qword_1EEAB8610, MEMORY[0x1E0C964A8]);
  sub_1A9066D74(&qword_1ED2ABFD0, &qword_1ED2ABFD8, MEMORY[0x1E0C95D90]);
  v26 = v39;
  v27 = v42;
  sub_1A93F7D28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v27);
  sub_1A9062170((uint64_t)v51, (uint64_t)v50, &qword_1ED2AD0C0);
  v28 = swift_allocObject();
  sub_1A9062F08((uint64_t)v50, v28 + 16, &qword_1ED2AD0C0);
  sub_1A9066D74(&qword_1EEAB8630, &qword_1EEAB8618, MEMORY[0x1E0C95B78]);
  v29 = v44;
  v30 = v45;
  sub_1A93F7B6C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v26, v30);
  sub_1A9064630(v38, (uint64_t)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v31 = swift_allocObject();
  sub_1A9116174((uint64_t)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v31 + ((v23 + 16) & ~v23), (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_1A937FC7C;
  *(_QWORD *)(v32 + 24) = v31;
  sub_1A9066D74(qword_1EEAB8638, &qword_1EEAB8620, MEMORY[0x1E0C95818]);
  v33 = v47;
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v33);
  return sub_1A905FD54((uint64_t)v51, &qword_1ED2AD0C0);
}

uint64_t sub_1A93718C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  int *v16;
  void *v17;
  void *v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a2;
  v5 = type metadata accessor for TranscriptsBackgroundSessionDescriptor();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a3;
  sub_1A9064630(a1, a3, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  v9 = sub_1A9372160();
  sub_1A9064630(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  v10 = *(unsigned __int8 *)(v6 + 80);
  v11 = (v10 + 16) & ~v10;
  v27 = v11 + v7;
  v28 = v10 | 7;
  v12 = swift_allocObject();
  sub_1A9116174((uint64_t)v8, v12 + v11, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  v13 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB240));
  v14 = swift_retain();
  v15 = sub_1A937E454(v14, (uint64_t)sub_1A937F058, v12, (uint64_t (*)(_QWORD))sub_1A9115FFC);
  swift_release();
  swift_release();
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB218);
  *(_QWORD *)(a3 + v16[11]) = v15;
  v17 = (void *)objc_opt_self();
  v31 = v5;
  v26 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB798);
  sub_1A93F8094();
  v18 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v17, sel_backgroundSessionConfigurationWithIdentifier_, v18);

  sub_1A9064630(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  v20 = (v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  sub_1A9116174((uint64_t)v8, v21 + v11, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  *(_QWORD *)(v21 + v20) = v19;
  *(_QWORD *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8)) = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9298);
  swift_allocObject();
  v22 = sub_1A93F7A94();
  v23 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v30, v23);
  result = sub_1A9064714(a1, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  v25 = v29;
  *(_QWORD *)(v29 + v16[12]) = v22;
  *(_QWORD *)(v25 + v16[13]) = v9;
  return result;
}

uint64_t sub_1A9371B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  int *v16;
  void *v17;
  void *v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a2;
  v5 = type metadata accessor for ShazamSignatureBackgroundSessionDescriptor();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a3;
  sub_1A9064630(a1, a3, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  v9 = sub_1A9371DF0();
  sub_1A9064630(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  v10 = *(unsigned __int8 *)(v6 + 80);
  v11 = (v10 + 16) & ~v10;
  v27 = v11 + v7;
  v28 = v10 | 7;
  v12 = swift_allocObject();
  sub_1A9116174((uint64_t)v8, v12 + v11, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  v13 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB248));
  v14 = swift_retain();
  v15 = sub_1A937E454(v14, (uint64_t)sub_1A937E440, v12, (uint64_t (*)(_QWORD))sub_1A9115FF0);
  swift_release();
  swift_release();
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB228);
  *(_QWORD *)(a3 + v16[11]) = v15;
  v17 = (void *)objc_opt_self();
  v31 = v5;
  v26 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB7C8);
  sub_1A93F8094();
  v18 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v17, sel_backgroundSessionConfigurationWithIdentifier_, v18);

  sub_1A9064630(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  v20 = (v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  sub_1A9116174((uint64_t)v8, v21 + v11, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  *(_QWORD *)(v21 + v20) = v19;
  *(_QWORD *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8)) = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9298);
  swift_allocObject();
  v22 = sub_1A93F7A94();
  v23 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v30, v23);
  result = sub_1A9064714(a1, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  v25 = v29;
  *(_QWORD *)(v29 + v16[12]) = v22;
  *(_QWORD *)(v25 + v16[13]) = v9;
  return result;
}

uint64_t sub_1A9371DF0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v0 = sub_1A93F885C();
  v20 = *(_QWORD *)(v0 - 8);
  v21 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A93F8808();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v3);
  v5 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91A0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F726C();
  v18 = *(_QWORD *)(v9 - 8);
  v19 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for ShazamSignatureBackgroundSessionDescriptor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB7C8);
  sub_1A93F8094();
  sub_1A93F71AC();
  swift_bridgeObjectRelease();
  sub_1A93F7A64();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB0E0);
  swift_allocObject();
  v12 = sub_1A937CAE8(5000000, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1A9113DF8, &qword_1ED2ABD60);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A93F7DA0();
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v4, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v2, *MEMORY[0x1E0DEF8D0], v21);
  v13 = sub_1A93F888C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB070);
  v14 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v14 + qword_1ED2B8A10, v11, v19);
  v15 = v14 + qword_1ED2B8A18;
  *(_DWORD *)v15 = 2048;
  *(_BYTE *)(v15 + 4) = 0;
  *(_QWORD *)(v14 + qword_1ED2ACE28) = v13;
  *(_QWORD *)(v14 + qword_1ED2ACE20) = v12;
  return v14;
}

uint64_t sub_1A9372160()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v0 = sub_1A93F885C();
  v20 = *(_QWORD *)(v0 - 8);
  v21 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A93F8808();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v3);
  v5 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91A0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F726C();
  v18 = *(_QWORD *)(v9 - 8);
  v19 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for TranscriptsBackgroundSessionDescriptor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB798);
  sub_1A93F8094();
  sub_1A93F71AC();
  swift_bridgeObjectRelease();
  sub_1A93F7A64();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB0D8);
  swift_allocObject();
  v12 = sub_1A937CAE8(5000000, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1A9113E04, &qword_1ED2ABD58);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A93F7DA0();
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v4, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v2, *MEMORY[0x1E0DEF8D0], v21);
  v13 = sub_1A93F888C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB068);
  v14 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v14 + qword_1ED2B8A10, v11, v19);
  v15 = v14 + qword_1ED2B8A18;
  *(_DWORD *)v15 = 2048;
  *(_BYTE *)(v15 + 4) = 0;
  *(_QWORD *)(v14 + qword_1ED2ACE28) = v13;
  *(_QWORD *)(v14 + qword_1ED2ACE20) = v12;
  return v14;
}

uint64_t sub_1A93724D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_signpost_type_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  char *v26;
  uint8_t *v27;
  os_signpost_id_t v28;
  uint8_t *v29;
  NSObject *v30;
  os_signpost_type_t v31;
  char *v32;
  uint8_t *v33;
  os_signpost_id_t v34;
  uint8_t *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  void (*v67)(uint64_t, char *, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;

  v72 = a3;
  v74 = a2;
  v77 = a1;
  v3 = sub_1A93F726C();
  v80 = *(_QWORD *)(v3 - 8);
  v81 = v3;
  MEMORY[0x1E0C80A78](v3);
  v76 = v4;
  v79 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ShazamSignatureRequest();
  v73 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v75 = v6;
  v78 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ShazamSignatureBackgroundSessionDescriptor();
  v70 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v71 = v8;
  v90 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEB20);
  v82 = *(_QWORD *)(v9 - 8);
  v83 = v9;
  MEMORY[0x1E0C80A78](v9);
  v92 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEB28);
  v85 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v84 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEB30);
  v88 = *(_QWORD *)(v12 - 8);
  v89 = v12;
  MEMORY[0x1E0C80A78](v12);
  v86 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A93F75FC();
  v93 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v64 - v18;
  if (qword_1ED2ABE88 != -1)
    swift_once();
  v20 = sub_1A93F762C();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED2ABF70);
  sub_1A93F7620();
  sub_1A93F75D8();
  v21 = sub_1A93F7620();
  v22 = sub_1A93F8940();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    v23 = v93;
    v24 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
    v24(v16, v19, v14);
    v25 = v16;
    v26 = v19;
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    v28 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v21, v22, v28, "backgroundStash", "Start background stash", v27, 2u);
    v29 = v27;
    v19 = v26;
    v16 = v25;
    MEMORY[0x1AF41411C](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v14);
  }
  else
  {

    v24 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
  }
  v24(v16, v19, v14);
  sub_1A93F765C();
  swift_allocObject();
  v69 = sub_1A93F7650();
  v30 = sub_1A93F7620();
  v31 = sub_1A93F894C();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    v24(v16, v19, v14);
    v32 = v19;
    v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v33 = 0;
    v34 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v30, v31, v34, "Start loading from source", "", v33, 2u);
    v35 = v33;
    v19 = v32;
    MEMORY[0x1AF41411C](v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v93 + 8))(v16, v14);
  }
  else
  {

  }
  v36 = v16;
  v37 = v77;
  v38 = v72;
  v94 = ShazamSignatureBackgroundSessionDescriptor.load(data:)(v77);
  v39 = v14;
  v64 = v14;
  v24(v36, v19, v14);
  v40 = v93;
  v41 = v36;
  v42 = *(unsigned __int8 *)(v93 + 80);
  v43 = swift_allocObject();
  v67 = *(void (**)(uint64_t, char *, uint64_t))(v40 + 32);
  v44 = v41;
  v65 = v41;
  v67(v43 + ((v42 + 16) & ~v42), v41, v39);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEB38);
  v66 = v24;
  v68 = v19;
  sub_1A9066D74(&qword_1EEABEB40, &qword_1EEABEB38, MEMORY[0x1E0C95D90]);
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  sub_1A9064630(v38, v90, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  v45 = v78;
  sub_1A9064630(v74, v78, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v46 = v79;
  v47 = v80;
  v48 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v37, v81);
  v66(v44, v19, v39);
  v49 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  v50 = (v71 + *(unsigned __int8 *)(v73 + 80) + v49) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
  v51 = (v75 + *(unsigned __int8 *)(v47 + 80) + v50) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v52 = (v76 + v42 + v51) & ~v42;
  v53 = swift_allocObject();
  sub_1A9116174(v90, v53 + v49, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  sub_1A9116174(v45, v53 + v50, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v53 + v51, v46, v48);
  v54 = v64;
  v67(v53 + v52, v65, v64);
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8770);
  v55 = MEMORY[0x1E0C957C0];
  sub_1A9066D74(&qword_1EEABEB48, &qword_1EEABEB20, MEMORY[0x1E0C957C0]);
  sub_1A9066D74(&qword_1EEABCFB0, &qword_1EEAB8770, MEMORY[0x1E0C95D90]);
  v56 = v83;
  v57 = v84;
  v58 = v92;
  sub_1A93F7D34();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v58, v56);
  sub_1A9066D74(&qword_1EEABEB50, &qword_1EEABEB28, MEMORY[0x1E0C95B78]);
  swift_retain();
  v59 = v87;
  v60 = v86;
  sub_1A93F7B3C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v57, v59);
  sub_1A9066D74(&qword_1EEABEB58, &qword_1EEABEB30, v55);
  v61 = v89;
  v62 = sub_1A93F7B24();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v60, v61);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v68, v54);
  return v62;
}

uint64_t sub_1A9372D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_signpost_type_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  char *v26;
  uint8_t *v27;
  os_signpost_id_t v28;
  uint8_t *v29;
  NSObject *v30;
  os_signpost_type_t v31;
  char *v32;
  uint8_t *v33;
  os_signpost_id_t v34;
  uint8_t *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  void (*v67)(uint64_t, char *, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;

  v72 = a3;
  v74 = a2;
  v77 = a1;
  v3 = sub_1A93F726C();
  v80 = *(_QWORD *)(v3 - 8);
  v81 = v3;
  MEMORY[0x1E0C80A78](v3);
  v76 = v4;
  v79 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTMLRequest();
  v73 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v75 = v6;
  v78 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptsBackgroundSessionDescriptor();
  v70 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v71 = v8;
  v90 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEBC0);
  v82 = *(_QWORD *)(v9 - 8);
  v83 = v9;
  MEMORY[0x1E0C80A78](v9);
  v92 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEBC8);
  v85 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v84 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEBD0);
  v88 = *(_QWORD *)(v12 - 8);
  v89 = v12;
  MEMORY[0x1E0C80A78](v12);
  v86 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A93F75FC();
  v93 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v64 - v18;
  if (qword_1ED2ABE88 != -1)
    swift_once();
  v20 = sub_1A93F762C();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED2ABF70);
  sub_1A93F7620();
  sub_1A93F75D8();
  v21 = sub_1A93F7620();
  v22 = sub_1A93F8940();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    v23 = v93;
    v24 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
    v24(v16, v19, v14);
    v25 = v16;
    v26 = v19;
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    v28 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v21, v22, v28, "backgroundStash", "Start background stash", v27, 2u);
    v29 = v27;
    v19 = v26;
    v16 = v25;
    MEMORY[0x1AF41411C](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v14);
  }
  else
  {

    v24 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
  }
  v24(v16, v19, v14);
  sub_1A93F765C();
  swift_allocObject();
  v69 = sub_1A93F7650();
  v30 = sub_1A93F7620();
  v31 = sub_1A93F894C();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    v24(v16, v19, v14);
    v32 = v19;
    v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v33 = 0;
    v34 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v30, v31, v34, "Start loading from source", "", v33, 2u);
    v35 = v33;
    v19 = v32;
    MEMORY[0x1AF41411C](v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v93 + 8))(v16, v14);
  }
  else
  {

  }
  v36 = v16;
  v37 = v77;
  v38 = v72;
  v94 = TranscriptsBackgroundSessionDescriptor.load(data:)(v77);
  v39 = v14;
  v64 = v14;
  v24(v36, v19, v14);
  v40 = v93;
  v41 = v36;
  v42 = *(unsigned __int8 *)(v93 + 80);
  v43 = swift_allocObject();
  v67 = *(void (**)(uint64_t, char *, uint64_t))(v40 + 32);
  v44 = v41;
  v65 = v41;
  v67(v43 + ((v42 + 16) & ~v42), v41, v39);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEBD8);
  v66 = v24;
  v68 = v19;
  sub_1A9066D74(&qword_1EEABEBE0, &qword_1EEABEBD8, MEMORY[0x1E0C95D90]);
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  sub_1A9064630(v38, v90, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  v45 = v78;
  sub_1A9064630(v74, v78, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v46 = v79;
  v47 = v80;
  v48 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v37, v81);
  v66(v44, v19, v39);
  v49 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  v50 = (v71 + *(unsigned __int8 *)(v73 + 80) + v49) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
  v51 = (v75 + *(unsigned __int8 *)(v47 + 80) + v50) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v52 = (v76 + v42 + v51) & ~v42;
  v53 = swift_allocObject();
  sub_1A9116174(v90, v53 + v49, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  sub_1A9116174(v45, v53 + v50, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v53 + v51, v46, v48);
  v54 = v64;
  v67(v53 + v52, v65, v64);
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8770);
  v55 = MEMORY[0x1E0C957C0];
  sub_1A9066D74(&qword_1EEABEBE8, &qword_1EEABEBC0, MEMORY[0x1E0C957C0]);
  sub_1A9066D74(&qword_1EEABCFB0, &qword_1EEAB8770, MEMORY[0x1E0C95D90]);
  v56 = v83;
  v57 = v84;
  v58 = v92;
  sub_1A93F7D34();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v58, v56);
  sub_1A9066D74(&qword_1EEABEBF0, &qword_1EEABEBC8, MEMORY[0x1E0C95B78]);
  swift_retain();
  v59 = v87;
  v60 = v86;
  sub_1A93F7B3C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v57, v59);
  sub_1A9066D74(&qword_1EEABEBF8, &qword_1EEABEBD0, v55);
  v61 = v89;
  v62 = sub_1A93F7B24();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v60, v61);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v68, v54);
  return v62;
}

uint64_t sub_1A9373560(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t (**v26)(uint64_t, char);
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v33 = a4;
  v34 = a5;
  v8 = sub_1A93F7D58();
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F7DB8();
  v35 = *(_QWORD *)(v11 - 8);
  v36 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ShazamSignatureBackgroundSessionDescriptor();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  v19 = qword_1ED2A93C0;
  swift_retain();
  if (v19 != -1)
    swift_once();
  v32 = qword_1ED2A93B8;
  sub_1A9064630(a3, (uint64_t)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  v20 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v21 = (v16 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject();
  sub_1A9116174((uint64_t)v17, v23 + v20, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  v24 = v33;
  *(_QWORD *)(v23 + v21) = v33;
  v25 = v34;
  *(_QWORD *)(v23 + v22) = v34;
  v26 = (uint64_t (**)(uint64_t, char))(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v26 = sub_1A908CDB8;
  v26[1] = (uint64_t (*)(uint64_t, char))v18;
  aBlock[4] = sub_1A937E600;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_123;
  v27 = _Block_copy(aBlock);
  v28 = v24;
  v29 = v25;
  sub_1A93F7D88();
  v39 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  v30 = v38;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v13, v10, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v30);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v36);
  return swift_release();
}

uint64_t sub_1A9373850(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t (**v26)(uint64_t, char);
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v33 = a4;
  v34 = a5;
  v8 = sub_1A93F7D58();
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F7DB8();
  v35 = *(_QWORD *)(v11 - 8);
  v36 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TranscriptsBackgroundSessionDescriptor();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  v19 = qword_1ED2A93C0;
  swift_retain();
  if (v19 != -1)
    swift_once();
  v32 = qword_1ED2A93B8;
  sub_1A9064630(a3, (uint64_t)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  v20 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v21 = (v16 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject();
  sub_1A9116174((uint64_t)v17, v23 + v20, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  v24 = v33;
  *(_QWORD *)(v23 + v21) = v33;
  v25 = v34;
  *(_QWORD *)(v23 + v22) = v34;
  v26 = (uint64_t (**)(uint64_t, char))(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v26 = sub_1A908CDB8;
  v26[1] = (uint64_t (*)(uint64_t, char))v18;
  aBlock[4] = sub_1A937F3B4;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_176;
  v27 = _Block_copy(aBlock);
  v28 = v24;
  v29 = v25;
  sub_1A93F7D88();
  v39 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  v30 = v38;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v13, v10, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v30);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v36);
  return swift_release();
}

uint64_t sub_1A9373B40(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4;
  char v5;

  v4 = a1;
  v5 = a2 & 1;
  return a3(&v4);
}

void sub_1A9373B78(int a1, id a2, uint64_t a3, void (*a4)(void))
{
  id v7;

  objc_msgSend(a2, sel_setSessionSendsLaunchEvents_, 1);
  objc_msgSend(a2, sel_setDiscretionary_, 1);
  objc_msgSend(a2, sel_setSharedContainerIdentifier_, CFSTR("243LU875E5.groups.com.apple.podcasts"));
  v7 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, a2, a3, 0);
  a4();

}

uint64_t sub_1A9373C30(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD, double), uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v45[2];
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t (*v63)(_QWORD);
  char *v64;
  char *v65;
  _OWORD v66[3];
  __int128 v67;
  unint64_t v68;
  _QWORD v69[3];
  _BYTE v70[40];
  _BYTE v71[40];
  _OWORD v72[4];
  _OWORD v73[3];

  v62 = a6;
  v58 = a5;
  v49 = a1;
  v10 = sub_1A93F6D80();
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  MEMORY[0x1E0C80A78](v10);
  v52 = v11;
  v65 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = a3;
  v12 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v47 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v48 = v13;
  v50 = (uint64_t)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a4(0, v15);
  v45[0] = *(_QWORD *)(v18 - 8);
  v45[1] = *(_QWORD *)(v45[0] + 64);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v45 - v19;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8718);
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v64 = (char *)v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8720);
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v53 = (char *)v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v6;
  v24 = *(_QWORD *)(v6 + *(int *)(v12 + 48));
  v51 = a2;
  sub_1A9064630(a2, (uint64_t)v20, (uint64_t (*)(_QWORD))a4);
  sub_1A9062170((uint64_t)&v20[*(int *)(v18 + 36)], (uint64_t)v71, &qword_1ED2AD0C0);
  swift_retain();
  v46 = v20;
  v63 = (uint64_t (*)(_QWORD))a4;
  sub_1A9064714((uint64_t)v20, (uint64_t (*)(_QWORD))a4);
  sub_1A9062170((uint64_t)v71, (uint64_t)v70, &qword_1ED2AD0C0);
  *(_QWORD *)&v66[0] = v24;
  sub_1A9062170((uint64_t)v70, (uint64_t)v66 + 8, &qword_1ED2AD0C0);
  *(_QWORD *)&v67 = "AWAIT-SESSION";
  *((_QWORD *)&v67 + 1) = 13;
  LOBYTE(v68) = 2;
  LOBYTE(v69[2]) = 0;
  swift_retain();
  sub_1A905FD54((uint64_t)v70, &qword_1ED2AD0C0);
  v69[0] = 0;
  v69[1] = 0xE000000000000000;
  BYTE1(v69[2]) = 0;
  v72[2] = v66[2];
  v72[3] = v67;
  v72[0] = v66[0];
  v72[1] = v66[1];
  v73[0] = v68;
  *(_OWORD *)((char *)v73 + 10) = *(_OWORD *)((char *)v69 + 2);
  sub_1A905FD54((uint64_t)v71, &qword_1ED2AD0C0);
  swift_release();
  if (qword_1ED2A93C0 != -1)
    swift_once();
  v25 = (void *)qword_1ED2A93B8;
  *(_QWORD *)&v66[0] = qword_1ED2A93B8;
  v26 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v17, 1, 1, v26);
  v27 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8728);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1EEAB8730, &qword_1EEAB8728, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  sub_1A905FD90();
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v17, &qword_1ED2A1C88);

  sub_1A905FD54((uint64_t)v72, &qword_1EEAB8728);
  v28 = v23;
  v29 = v50;
  v30 = v61;
  sub_1A9062170(v28, v50, v61);
  v31 = v59;
  v32 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v65, v49, v60);
  v33 = (uint64_t)v46;
  sub_1A9064630(v51, (uint64_t)v46, v63);
  v34 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v35 = (v48 + *(unsigned __int8 *)(v31 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v36 = (v52 + *(unsigned __int8 *)(v45[0] + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v45[0] + 80);
  v37 = swift_allocObject();
  sub_1A9062F08(v29, v37 + v34, v30);
  (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v37 + v35, v65, v32);
  sub_1A9116174(v33, v37 + v36, v63);
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8738);
  sub_1A9066D74(&qword_1EEAB8740, &qword_1EEAB8718, MEMORY[0x1E0C95CB8]);
  v38 = MEMORY[0x1E0C95B78];
  sub_1A9066D74(&qword_1EEAB8748, &qword_1EEAB8738, MEMORY[0x1E0C95B78]);
  v39 = v53;
  v40 = v56;
  v41 = v64;
  sub_1A93F7D28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v41, v40);
  sub_1A9066D74(qword_1EEAB8750, &qword_1EEAB8720, v38);
  v42 = v57;
  v43 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v39, v42);
  return v43;
}

uint64_t sub_1A93741B0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v30 = a4;
  v36 = a5;
  v8 = type metadata accessor for ShazamSignatureRequest();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB228);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB87D8);
  v16 = *(_QWORD *)(v15 - 8);
  v34 = v15;
  v35 = v16;
  MEMORY[0x1E0C80A78](v15);
  v31 = a2;
  v32 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(int *)(v11 + 44);
  v37 = sub_1A9374828(a3, a1, (uint64_t)&unk_1E54F7940, (uint64_t)sub_1A938152C);
  sub_1A9062170(a2, (uint64_t)v14, &qword_1ED2AB228);
  sub_1A9064630(v30, (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v18 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v19 = (v13 + *(unsigned __int8 *)(v9 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v20 = swift_allocObject();
  sub_1A9062F08((uint64_t)v14, v20 + v18, &qword_1ED2AB228);
  sub_1A9116174((uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  *(_QWORD *)(v20 + ((v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A90B8);
  v22 = MEMORY[0x1E0C95D90];
  sub_1A9066D74(&qword_1ED2A90B0, &qword_1ED2A90B8, MEMORY[0x1E0C95D90]);
  v23 = v32;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  v24 = *(void **)(v31 + v33);
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v24;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_1A937E374;
  *(_QWORD *)(v26 + 24) = v25;
  v27 = v24;
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABFD8);
  sub_1A9066D74(&qword_1EEAB87E0, &qword_1EEAB87D8, MEMORY[0x1E0C957C0]);
  sub_1A9066D74(&qword_1ED2ABFD0, &qword_1ED2ABFD8, v22);
  v28 = v34;
  sub_1A93F7D28();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v23, v28);
}

uint64_t sub_1A93744EC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v30 = a4;
  v36 = a5;
  v8 = type metadata accessor for TTMLRequest();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB218);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB87D8);
  v16 = *(_QWORD *)(v15 - 8);
  v34 = v15;
  v35 = v16;
  MEMORY[0x1E0C80A78](v15);
  v31 = a2;
  v32 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(int *)(v11 + 44);
  v37 = sub_1A9374828(a3, a1, (uint64_t)&unk_1E54F7BE8, (uint64_t)sub_1A937EF3C);
  sub_1A9062170(a2, (uint64_t)v14, &qword_1ED2AB218);
  sub_1A9064630(v30, (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v18 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v19 = (v13 + *(unsigned __int8 *)(v9 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v20 = swift_allocObject();
  sub_1A9062F08((uint64_t)v14, v20 + v18, &qword_1ED2AB218);
  sub_1A9116174((uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  *(_QWORD *)(v20 + ((v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A90B8);
  v22 = MEMORY[0x1E0C95D90];
  sub_1A9066D74(&qword_1ED2A90B0, &qword_1ED2A90B8, MEMORY[0x1E0C95D90]);
  v23 = v32;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  v24 = *(void **)(v31 + v33);
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v24;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_1A937EE78;
  *(_QWORD *)(v26 + 24) = v25;
  v27 = v24;
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABFD8);
  sub_1A9066D74(&qword_1EEAB87E0, &qword_1EEAB87D8, MEMORY[0x1E0C957C0]);
  sub_1A9066D74(&qword_1ED2ABFD0, &qword_1ED2ABFD8, v22);
  v28 = v34;
  sub_1A93F7D28();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v23, v28);
}

uint64_t sub_1A9374828(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  id v42;

  v40 = a2;
  v41 = a4;
  v38 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F6D80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE80);
  v34 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE88);
  v35 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABCE90);
  v36 = *(_QWORD *)(v18 - 8);
  v37 = v18;
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v11, a1, v8, v19);
  sub_1A93F7A58();
  if (qword_1ED2ABF68 != -1)
    swift_once();
  v22 = (void *)qword_1ED2ABF60;
  v42 = (id)qword_1ED2ABF60;
  v23 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v7, 1, 1, v23);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74((unint64_t *)&unk_1EEABCEA0, &qword_1EEABCE80, MEMORY[0x1E0C960B0]);
  sub_1A905FD90();
  v24 = v22;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v7, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v12);
  v25 = swift_allocObject();
  v27 = v39;
  v26 = v40;
  *(_QWORD *)(v25 + 16) = v39;
  *(_QWORD *)(v25 + 24) = v26;
  sub_1A9066D74(&qword_1EEABCEB0, &qword_1EEABCE88, MEMORY[0x1E0C95CB8]);
  v28 = v27;
  v29 = v26;
  sub_1A93F7B84();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v15);
  sub_1A9066D74(&qword_1EEABCEB8, (uint64_t *)&unk_1EEABCE90, MEMORY[0x1E0C95950]);
  v30 = v37;
  v31 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v21, v30);
  return v31;
}

uint64_t sub_1A9374B80(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5, void (*a6)(uint64_t, _QWORD *))
{
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];

  __swift_instantiateConcreteTypeFromMangledName(a5);
  v10 = objc_msgSend(a4, sel_configuration);
  v11 = objc_msgSend(v10, sel_identifier);

  if (v11)
  {
    v12 = sub_1A93F8040();
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  sub_1A93F70C8();
  swift_allocObject();
  v15 = sub_1A93F70BC();
  sub_1A93F7098();
  swift_allocObject();
  swift_retain();
  v16 = sub_1A93F708C();
  sub_1A93F70A4();
  swift_release();
  v18[0] = a1;
  v18[1] = v12;
  v18[2] = v14;
  v18[3] = v15;
  v18[4] = v16;
  a6(a3, v18);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9374CCC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC000);
  v27 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABFC8);
  v28 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEAD0);
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEAD8);
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v30 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a1;
  sub_1A93F7A58();
  if (qword_1ED2ABF68 != -1)
    swift_once();
  v14 = (void *)qword_1ED2ABF60;
  v35 = (id)qword_1ED2ABF60;
  v15 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74((unint64_t *)&unk_1ED2ABFF0, &qword_1ED2AC000, MEMORY[0x1E0C960B0]);
  sub_1A905FD90();
  v16 = v14;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v4, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v5);
  v17 = swift_allocObject();
  v18 = v29;
  *(_QWORD *)(v17 + 16) = v29;
  v19 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEAE0);
  sub_1A9066D74(&qword_1ED2ABFC0, &qword_1ED2ABFC8, MEMORY[0x1E0C95CB8]);
  sub_1A93F7B30();
  swift_release();
  v20 = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  MEMORY[0x1E0C80A78](v20);
  *(&v26 - 6) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB070);
  *(&v26 - 5) = sub_1A937EEC4(&qword_1EEABEAE8, &qword_1ED2AB070, &qword_1EEABEAF0, &qword_1EEABEAF8);
  *(&v26 - 4) = (uint64_t)&protocol witness table for ShazamSignatureRequest;
  *(&v26 - 3) = (uint64_t)&protocol witness table for ShazamSignatureRequest;
  *(&v26 - 2) = sub_1A9066CA8(&qword_1EEABEB00, (uint64_t (*)(uint64_t))type metadata accessor for ShazamSignatureRequest, (uint64_t)&protocol conformance descriptor for ShazamSignatureRequest);
  *(&v26 - 1) = sub_1A9066CA8(&qword_1EEABEB08, (uint64_t (*)(uint64_t))type metadata accessor for ShazamSignatureRequest, (uint64_t)&protocol conformance descriptor for ShazamSignatureRequest);
  swift_getKeyPath();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABFD8);
  sub_1A9066D74(&qword_1EEABEB10, &qword_1EEABEAD0, MEMORY[0x1E0C95708]);
  sub_1A9066D74(&qword_1ED2ABFD0, &qword_1ED2ABFD8, MEMORY[0x1E0C95D90]);
  v21 = v30;
  v22 = v33;
  sub_1A93F7D28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v22);
  sub_1A9066D74(&qword_1EEABEB18, &qword_1EEABEAD8, MEMORY[0x1E0C95B78]);
  v23 = v34;
  v24 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v23);
  return v24;
}

uint64_t sub_1A9375198(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC000);
  v27 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABFC8);
  v28 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEB70);
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEB78);
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v30 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a1;
  sub_1A93F7A58();
  if (qword_1ED2ABF68 != -1)
    swift_once();
  v14 = (void *)qword_1ED2ABF60;
  v35 = (id)qword_1ED2ABF60;
  v15 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74((unint64_t *)&unk_1ED2ABFF0, &qword_1ED2AC000, MEMORY[0x1E0C960B0]);
  sub_1A905FD90();
  v16 = v14;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v4, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v5);
  v17 = swift_allocObject();
  v18 = v29;
  *(_QWORD *)(v17 + 16) = v29;
  v19 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEB80);
  sub_1A9066D74(&qword_1ED2ABFC0, &qword_1ED2ABFC8, MEMORY[0x1E0C95CB8]);
  sub_1A93F7B30();
  swift_release();
  v20 = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  MEMORY[0x1E0C80A78](v20);
  *(&v26 - 6) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB068);
  *(&v26 - 5) = sub_1A937EEC4(&qword_1EEABEB88, &qword_1ED2AB068, &qword_1EEABEB90, &qword_1EEABEB98);
  *(&v26 - 4) = (uint64_t)&protocol witness table for TTMLRequest;
  *(&v26 - 3) = (uint64_t)&protocol witness table for TTMLRequest;
  *(&v26 - 2) = sub_1A9066CA8(&qword_1EEABEBA0, (uint64_t (*)(uint64_t))type metadata accessor for TTMLRequest, (uint64_t)&protocol conformance descriptor for TTMLRequest);
  *(&v26 - 1) = sub_1A9066CA8(&qword_1EEABEBA8, (uint64_t (*)(uint64_t))type metadata accessor for TTMLRequest, (uint64_t)&protocol conformance descriptor for TTMLRequest);
  swift_getKeyPath();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABFD8);
  sub_1A9066D74(&qword_1EEABEBB0, &qword_1EEABEB70, MEMORY[0x1E0C95708]);
  sub_1A9066D74(&qword_1ED2ABFD0, &qword_1ED2ABFD8, MEMORY[0x1E0C95D90]);
  v21 = v30;
  v22 = v33;
  sub_1A93F7D28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v22);
  sub_1A9066D74(&qword_1EEABEBB8, &qword_1EEABEB78, MEMORY[0x1E0C95B78]);
  v23 = v34;
  v24 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v23);
  return v24;
}

uint64_t sub_1A9375664@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = a2(*a1);
  *a3 = result;
  return result;
}

uint64_t sub_1A9375690(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  void (*v52)(unint64_t, char *, uint64_t);
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  void *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v78 = a5;
  v68 = a4;
  v56 = a1;
  v6 = sub_1A93F726C();
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  v65 = *(_QWORD *)(v63 + 64);
  MEMORY[0x1E0C80A78](v6);
  v59 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1A93F75FC();
  v8 = *(_QWORD *)(v57 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v57);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB87B0);
  v10 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEB60);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8778);
  v18 = *(_QWORD *)(v17 - 8);
  v60 = v17;
  v61 = v18;
  MEMORY[0x1E0C80A78](v17);
  v55 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8780);
  v70 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v58 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8788);
  v22 = *(_QWORD *)(v21 - 8);
  v71 = v21;
  v72 = v22;
  MEMORY[0x1E0C80A78](v21);
  v62 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8790);
  v75 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v67 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8798);
  v76 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v69 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  sub_1A9384B9C(v56, a3);
  v56 = (void *)(MEMORY[0x1E0DEE9C0] + 8);
  sub_1A93F7A58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
  v26 = v77;
  sub_1A93F7A34();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
  sub_1A9066D74(&qword_1EEABEB68, &qword_1EEABEB60, MEMORY[0x1E0C964C8]);
  v27 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v79 = v27;
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v28 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v57;
  v54(v28, v78, v57);
  v30 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v53 = v30 + v9;
  v31 = swift_allocObject();
  v52 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  v52(v31 + v30, v28, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A90D8);
  sub_1A9066D74(&qword_1ED2A90D0, &qword_1ED2A90D8, MEMORY[0x1E0C95D90]);
  v32 = v55;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  v33 = v63;
  v34 = v64;
  v35 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v59, v68, v64);
  v36 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v37 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v37 + v36, v35, v34);
  v38 = MEMORY[0x1E0C957C0];
  sub_1A9066D74(&qword_1EEAB87A0, &qword_1EEAB8778, MEMORY[0x1E0C957C0]);
  v39 = v58;
  v40 = v60;
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v32, v40);
  v54(v28, v78, v29);
  v41 = swift_allocObject();
  v52(v41 + v30, v28, v29);
  sub_1A9066D74(&qword_1EEAB87A8, &qword_1EEAB8780, MEMORY[0x1E0C95B48]);
  v42 = v66;
  v43 = v62;
  sub_1A93F7B3C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v39, v42);
  sub_1A9066D74(&qword_1EEAB87B8, &qword_1EEAB8788, v38);
  sub_1A9066D74(&qword_1EEAB87C0, &qword_1EEAB87B0, MEMORY[0x1E0C960B0]);
  v44 = v67;
  v45 = v71;
  sub_1A93F7BB4();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v43, v45);
  sub_1A9066D74(&qword_1EEAB87C8, &qword_1EEAB8790, MEMORY[0x1E0C959F8]);
  v46 = v69;
  v47 = v73;
  sub_1A93F7CF8();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v44, v47);
  sub_1A9066D74(&qword_1EEAB87D0, &qword_1EEAB8798, MEMORY[0x1E0C95850]);
  v48 = v74;
  v49 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v46, v48);
  return v49;
}

uint64_t sub_1A9375DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  void (*v52)(unint64_t, char *, uint64_t);
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v78 = a5;
  v68 = a4;
  v56 = a1;
  v6 = sub_1A93F726C();
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  v65 = *(_QWORD *)(v63 + 64);
  MEMORY[0x1E0C80A78](v6);
  v59 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1A93F75FC();
  v8 = *(_QWORD *)(v57 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v57);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB87B0);
  v10 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEB60);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8778);
  v18 = *(_QWORD *)(v17 - 8);
  v60 = v17;
  v61 = v18;
  MEMORY[0x1E0C80A78](v17);
  v55 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8780);
  v70 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v58 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8788);
  v22 = *(_QWORD *)(v21 - 8);
  v71 = v21;
  v72 = v22;
  MEMORY[0x1E0C80A78](v21);
  v62 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8790);
  v75 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v67 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8798);
  v76 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v69 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80);
  sub_1A93847CC(v56, a3);
  v56 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1A93F7A58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
  v26 = v77;
  sub_1A93F7A34();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
  sub_1A9066D74(&qword_1EEABEB68, &qword_1EEABEB60, MEMORY[0x1E0C964C8]);
  v27 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v79 = v27;
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v28 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v57;
  v54(v28, v78, v57);
  v30 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v53 = v30 + v9;
  v31 = swift_allocObject();
  v52 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  v52(v31 + v30, v28, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A90D8);
  sub_1A9066D74(&qword_1ED2A90D0, &qword_1ED2A90D8, MEMORY[0x1E0C95D90]);
  v32 = v55;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  v33 = v63;
  v34 = v64;
  v35 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v59, v68, v64);
  v36 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v37 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v37 + v36, v35, v34);
  v38 = MEMORY[0x1E0C957C0];
  sub_1A9066D74(&qword_1EEAB87A0, &qword_1EEAB8778, MEMORY[0x1E0C957C0]);
  v39 = v58;
  v40 = v60;
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v32, v40);
  v54(v28, v78, v29);
  v41 = swift_allocObject();
  v52(v41 + v30, v28, v29);
  sub_1A9066D74(&qword_1EEAB87A8, &qword_1EEAB8780, MEMORY[0x1E0C95B48]);
  v42 = v66;
  v43 = v62;
  sub_1A93F7B3C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v39, v42);
  sub_1A9066D74(&qword_1EEAB87B8, &qword_1EEAB8788, v38);
  sub_1A9066D74(&qword_1EEAB87C0, &qword_1EEAB87B0, MEMORY[0x1E0C960B0]);
  v44 = v67;
  v45 = v71;
  sub_1A93F7BB4();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v43, v45);
  sub_1A9066D74(&qword_1EEAB87C8, &qword_1EEAB8790, MEMORY[0x1E0C959F8]);
  v46 = v69;
  v47 = v73;
  sub_1A93F7CF8();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v44, v47);
  sub_1A9066D74(&qword_1EEAB87D0, &qword_1EEAB8798, MEMORY[0x1E0C95850]);
  v48 = v74;
  v49 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v46, v48);
  return v49;
}

uint64_t sub_1A93764E0(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  v3 = (_QWORD *)((char *)a2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0x98));
  swift_beginAccess();
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1A906C428(a1), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 16 * v5);
    swift_retain();
    swift_retain();
  }
  else
  {
    v7 = 0;
  }
  swift_endAccess();
  return v7;
}

id sub_1A9376584(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  id v24;
  uint64_t v25;
  NSObject *v26;
  char v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  os_signpost_id_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  void *v40;
  id v41;
  void (*v42)(char *, uint64_t, uint64_t);
  id v43;
  char isUniquelyReferenced_nonNull_native;
  id v45;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  _QWORD *v51;
  int v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62[3];

  v58 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABE60);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F75FC();
  v59 = *(_QWORD *)(v8 - 8);
  v60 = v8;
  MEMORY[0x1E0C80A78](v8);
  v57 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v47 - v11;
  v13 = sub_1A93F6D80();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v47 - v18;
  v20 = (_QWORD *)((char *)a2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0xA0));
  swift_beginAccess();
  v21 = *v20;
  if (*(_QWORD *)(*v20 + 16) && (v22 = sub_1A912E3B4(a1), (v23 & 1) != 0))
  {
    v24 = *(id *)(*(_QWORD *)(v21 + 56) + 8 * v22);
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    if (qword_1ED2ABE88 != -1)
      swift_once();
    v25 = sub_1A93F762C();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED2ABF70);
    v55 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v56 = a1;
    v55(v19, a1, v13);
    sub_1A93F75F0();
    v26 = sub_1A93F7620();
    v52 = sub_1A93F894C();
    v27 = sub_1A93F8A6C();
    v54 = v14;
    if ((v27 & 1) != 0)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v57, v12, v60);
      v28 = swift_slowAlloc();
      v50 = v7;
      v29 = (uint8_t *)v28;
      v30 = swift_slowAlloc();
      v51 = a2;
      v48 = v30;
      v62[0] = v30;
      *(_DWORD *)v29 = 136315138;
      v49 = v12;
      v31 = sub_1A93F6D20();
      v61 = sub_1A906436C(v31, v32, v62);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      v53 = *(void (**)(char *, uint64_t))(v14 + 8);
      v53(v19, v13);
      v33 = v57;
      v34 = sub_1A93F75E4();
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v26, (os_signpost_type_t)v52, v34, "Start Asset Download", "%s", v29, 0xCu);
      v35 = v48;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v35, -1, -1);
      v36 = v29;
      v7 = v50;
      MEMORY[0x1AF41411C](v36, -1, -1);

      v37 = v60;
      v38 = *(void (**)(char *, uint64_t))(v59 + 8);
      v38(v49, v60);
      v38(v33, v37);
    }
    else
    {

      v53 = *(void (**)(char *, uint64_t))(v14 + 8);
      v53(v19, v13);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v12, v60);
    }
    v39 = v56;
    v40 = (void *)sub_1A93F6D2C();
    v41 = objc_msgSend(v58, sel_downloadTaskWithRequest_, v40);

    v42 = v55;
    v55(v16, v39, v13);
    v43 = objc_msgSend(v41, sel_taskIdentifier);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v61 = *v20;
    *v20 = 0x8000000000000000;
    sub_1A930F2CC((uint64_t)v43, (uint64_t)v16, isUniquelyReferenced_nonNull_native);
    *v20 = v61;
    swift_bridgeObjectRelease();
    v53(v16, v13);
    swift_endAccess();
    v45 = objc_msgSend(v41, sel_taskIdentifier);
    v42(v7, v39, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v7, 0, 1, v13);
    swift_beginAccess();
    sub_1A927C9B0((uint64_t)v7, (uint64_t)v45);
    swift_endAccess();
    objc_msgSend(v41, sel_resume);
    v24 = objc_msgSend(v41, sel_taskIdentifier);

  }
  return v24;
}

uint64_t sub_1A9376A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t *a11, uint64_t *a12)
{
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  _QWORD *v25;
  uint64_t v27;

  v19 = __swift_instantiateConcreteTypeFromMangledName(a11);
  v27 = *(_QWORD *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(a9, a1, v19);
  v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(a12);
  sub_1A9062170(a2, a9 + v20[9], &qword_1ED2AD0C0);
  v21 = a9 + v20[10];
  *(_QWORD *)v21 = a3;
  *(_QWORD *)(v21 + 8) = a4;
  *(_BYTE *)(v21 + 16) = a5;
  *(_BYTE *)(a9 + v20[12]) = a10;
  if (a8)
  {
    swift_bridgeObjectRetain();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    v22 = a7;
    v23 = a8;
  }
  else
  {
    v22 = 0;
    v23 = 0xE000000000000000;
  }
  sub_1A905FD54(a2, &qword_1ED2AD0C0);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(a1, v19);
  v25 = (_QWORD *)(a9 + v20[11]);
  *v25 = v22;
  v25[1] = v23;
  *(_BYTE *)(a9 + v20[13]) = a6 & 1;
  return result;
}

void sub_1A9376BD8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;

  v0 = sub_1A93F726C();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TimeBombedTranscriptProvider.Caches(0);
  __swift_allocate_value_buffer(v3, qword_1ED2AB5F0);
  v4 = (uint64_t *)__swift_project_value_buffer(v3, (uint64_t)qword_1ED2AB5F0);
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_ttmlAssetURL);
  sub_1A93F7200();

  v7 = (void *)objc_opt_self();
  sub_1A936E2F4((uint64_t)v2, 0x4C4B40uLL, objc_msgSend(v7, sel_defaultCenter), v4);
  v8 = objc_msgSend(v5, sel_shazamSignatureAssetURL);
  sub_1A93F7200();

  sub_1A936E510((uint64_t)v2, 0x4C4B40uLL, objc_msgSend(v7, sel_defaultCenter), (uint64_t *)((char *)v4 + *(int *)(v3 + 20)));
}

uint64_t static TimeBombedTranscriptProvider.Caches.shared.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED2AB610 != -1)
    swift_once();
  v2 = type metadata accessor for TimeBombedTranscriptProvider.Caches(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED2AB5F0);
  return sub_1A9064630(v3, a1, type metadata accessor for TimeBombedTranscriptProvider.Caches);
}

uint64_t type metadata accessor for TimeBombedTranscriptProvider.Caches(uint64_t a1)
{
  return sub_1A9062BFC(a1, (uint64_t *)&unk_1ED2AB618);
}

uint64_t TimeBombedTranscriptProvider.Caches.ttml.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9062170(v1, a1, &qword_1ED2AB010);
}

uint64_t TimeBombedTranscriptProvider.Caches.shazamSignatures.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TimeBombedTranscriptProvider.Caches(0);
  return sub_1A9062170(v1 + *(int *)(v3 + 20), a1, &qword_1ED2AB028);
}

uint64_t sub_1A9376E0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  char *v29;
  uint64_t (*v30)(char *, uint64_t);
  id v31;
  uint64_t inited;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t (**v50)(uint64_t, uint64_t);
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t (**v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t result;
  uint64_t v64;
  char *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  id v70;
  uint64_t (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;

  v69 = a1;
  v1 = type metadata accessor for ShazamSignatureBackgroundSessionDescriptor();
  MEMORY[0x1E0C80A78](v1);
  v72 = (uint64_t)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB228);
  v74 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v77 = (uint64_t)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v75 = v7;
  v76 = (uint64_t)&v64 - v6;
  MEMORY[0x1E0C80A78](v8);
  v78 = (uint64_t)&v64 - v9;
  v10 = type metadata accessor for TranscriptsBackgroundSessionDescriptor();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB218);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v68 = (uint64_t)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v67 = (uint64_t)&v64 - v17;
  v70 = v18;
  MEMORY[0x1E0C80A78](v19);
  v79 = (uint64_t)&v64 - v20;
  v21 = sub_1A93F726C();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v64 - v26;
  v28 = objc_msgSend((id)objc_opt_self(), sel_libraryDirectory);
  sub_1A93F7200();

  v29 = v27;
  sub_1A93F71AC();
  v30 = *(uint64_t (**)(char *, uint64_t))(v22 + 8);
  v73 = v21;
  v71 = v30;
  v30(v24, v21);
  v31 = objc_msgSend((id)objc_opt_self(), sel_ephemeralSessionConfiguration);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9760);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  v80 = 0x6567412D72657355;
  v81 = 0xEA0000000000746ELL;
  v33 = MEMORY[0x1E0DEA968];
  sub_1A93F8C1C();
  v34 = (void *)objc_opt_self();
  v35 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  v36 = objc_msgSend(v34, sel_userAgentForProcessInfo_, v35);

  v37 = sub_1A93F8040();
  v39 = v38;

  *(_QWORD *)(inited + 96) = v33;
  *(_QWORD *)(inited + 72) = v37;
  *(_QWORD *)(inited + 80) = v39;
  sub_1A91129D8(inited);
  v40 = (void *)sub_1A93F7ED8();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setHTTPAdditionalHeaders_, v40);

  v66 = v31;
  objc_msgSend(v31, sel_setHTTPMaximumConnectionsPerHost_, 15);
  if (qword_1ED2AB610 != -1)
    swift_once();
  v41 = type metadata accessor for TimeBombedTranscriptProvider.Caches(0);
  v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED2AB5F0);
  sub_1A9062170(v42, (uint64_t)v12, &qword_1ED2AB010);
  v65 = v29;
  sub_1A93F71AC();
  v43 = v79;
  sub_1A93718C8((uint64_t)v12, (uint64_t)v24, v79);
  v44 = (int *)_s11DownloadersVMa(0);
  v45 = v69;
  sub_1A9062170(v43, (uint64_t)v69 + v44[5], &qword_1ED2AB218);
  v46 = v67;
  sub_1A9062170(v43, v67, &qword_1ED2AB218);
  v47 = v68;
  sub_1A9062170(v46, v68, &qword_1ED2AB218);
  v48 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v49 = swift_allocObject();
  sub_1A9062F08(v47, v49 + v48, &qword_1ED2AB218);
  sub_1A905FD54(v46, &qword_1ED2AB218);
  v50 = (uint64_t (**)(uint64_t, uint64_t))((char *)v45 + v44[6]);
  *v50 = sub_1A937E110;
  v50[1] = (uint64_t (*)(uint64_t, uint64_t))v49;
  v51 = swift_allocObject();
  v52 = v66;
  *(_QWORD *)(v51 + 16) = v66;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9290);
  swift_allocObject();
  v70 = v52;
  *v45 = sub_1A93F7A94();
  v53 = v42 + *(int *)(v41 + 20);
  v54 = v72;
  sub_1A9062170(v53, v72, &qword_1ED2AB028);
  v55 = v65;
  sub_1A93F71AC();
  v56 = v78;
  sub_1A9371B5C(v54, (uint64_t)v24, v78);
  sub_1A9062170(v56, (uint64_t)v45 + v44[9], &qword_1ED2AB228);
  v57 = v76;
  sub_1A9062170(v56, v76, &qword_1ED2AB228);
  v58 = v77;
  sub_1A9062170(v57, v77, &qword_1ED2AB228);
  v59 = (*(unsigned __int8 *)(v74 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  v60 = swift_allocObject();
  sub_1A9062F08(v58, v60 + v59, &qword_1ED2AB228);
  sub_1A905FD54(v57, &qword_1ED2AB228);
  v61 = (uint64_t (**)(uint64_t, uint64_t))((char *)v45 + v44[8]);
  *v61 = sub_1A937E250;
  v61[1] = (uint64_t (*)(uint64_t, uint64_t))v60;
  *(_QWORD *)(swift_allocObject() + 16) = v70;
  swift_allocObject();
  v62 = sub_1A93F7A94();
  sub_1A905FD54(v56, &qword_1ED2AB228);
  sub_1A905FD54(v79, &qword_1ED2AB218);
  result = v71(v55, v73);
  *(uint64_t *)((char *)v45 + v44[7]) = v62;
  return result;
}

uint64_t sub_1A9377548()
{
  uint64_t v0;
  uint64_t *v1;

  v0 = _s11DownloadersVMa(0);
  __swift_allocate_value_buffer(v0, qword_1ED2AB5D0);
  v1 = (uint64_t *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED2AB5D0);
  return sub_1A9376E0C(v1);
}

uint64_t sub_1A9377590()
{
  return sub_1A937759C((uint64_t)&unk_1ED2AB2D8);
}

uint64_t sub_1A937759C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v33[5];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t (*v37)();
  uint64_t v38;
  uint64_t (*v39)();
  uint64_t v40;
  void (*v41)(uint64_t);
  uint64_t v42;
  __int128 v43;
  uint64_t (*v44)();
  uint64_t v45;
  uint64_t (*v46)();
  uint64_t v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  __int128 v50;
  uint64_t (*v51)();
  uint64_t v52;
  uint64_t (*v53)();
  uint64_t v54;
  uint64_t (*v55)(void *);
  uint64_t v56;
  __int128 v57;
  uint64_t (*v58)();
  uint64_t v59;
  uint64_t (*v60)();
  uint64_t v61;
  uint64_t (*v62)(void *);
  uint64_t v63;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028);
  MEMORY[0x1E0C80A78](v2);
  v4 = (_QWORD *)((char *)&v33[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010);
  MEMORY[0x1E0C80A78](v5);
  v7 = (_QWORD *)((char *)&v33[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1ED2AB610 != -1)
    swift_once();
  v8 = type metadata accessor for TimeBombedTranscriptProvider.Caches(0);
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED2AB5F0);
  sub_1A9062170(v9, (uint64_t)v7, &qword_1ED2AB010);
  sub_1A9062170(v9 + *(int *)(v8 + 20), (uint64_t)v4, &qword_1ED2AB028);
  v10 = (char *)v7 + *(int *)(v5 + 60);
  v11 = *(_QWORD *)&v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80) + 68)];
  *(_QWORD *)&v57 = sub_1A9381500;
  *((_QWORD *)&v57 + 1) = v11;
  v58 = sub_1A93814C4;
  v59 = v11;
  v60 = sub_1A9381410;
  v61 = v11;
  v62 = sub_1A9381504;
  v63 = v11;
  v12 = (char *)v4 + *(int *)(v2 + 60);
  v13 = *(_QWORD *)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88) + 68)];
  *(_QWORD *)&v50 = sub_1A93814CC;
  *((_QWORD *)&v50 + 1) = v13;
  v51 = sub_1A93813D4;
  v52 = v13;
  v53 = sub_1A9381414;
  v54 = v13;
  v55 = sub_1A9381518;
  v56 = v13;
  v14 = *v7;
  *(_QWORD *)&v43 = sub_1A93813DC;
  *((_QWORD *)&v43 + 1) = v14;
  v44 = sub_1A93814C8;
  v45 = v14;
  v46 = sub_1A9381418;
  v47 = v14;
  v48 = sub_1A93813E0;
  v49 = v14;
  v15 = *v4;
  *(_QWORD *)&v36 = sub_1A93813F4;
  *((_QWORD *)&v36 + 1) = v15;
  v37 = sub_1A93813D8;
  v38 = v15;
  v39 = sub_1A938141C;
  v40 = v15;
  v41 = sub_1A93813F8;
  v42 = v15;
  v16 = qword_1ED2AB5E8;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  if (v16 != -1)
    swift_once();
  v17 = _s11DownloadersVMa(0);
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED2AB5D0);
  v19 = (uint64_t *)(v18 + *(int *)(v17 + 24));
  v21 = *v19;
  v20 = v19[1];
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v21;
  *(_QWORD *)(v22 + 24) = v20;
  *(_QWORD *)&v35 = sub_1A937F910;
  *((_QWORD *)&v35 + 1) = v22;
  v23 = (uint64_t *)(v18 + *(int *)(v17 + 32));
  v25 = *v23;
  v24 = v23[1];
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v25;
  *(_QWORD *)(v26 + 24) = v24;
  *(_QWORD *)&v34 = sub_1A937F940;
  *((_QWORD *)&v34 + 1) = v26;
  v27 = qword_1ED2A93C0;
  swift_retain();
  swift_retain();
  if (v27 != -1)
    swift_once();
  v33[3] = &type metadata for MAPITranscriptTimeBombedURLProvider;
  v33[4] = &protocol witness table for MAPITranscriptTimeBombedURLProvider;
  v28 = (id)qword_1ED2A93B8;
  v29 = sub_1A90C1BB8(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BA0);
  v30 = swift_allocObject();
  *(_DWORD *)(v30 + 24) = 0;
  *(_QWORD *)(v30 + 16) = v29;
  v33[0] = v28;
  v33[1] = v30;
  TimeBombedTranscriptProvider.init(ttmlPersistentCache:signaturePersistentCache:ttmlVolatileCache:signatureVolatileCache:ttmlSource:shazamSignatureSource:timeBombedURLsProvider:workQueue:)(&v57, &v50, &v43, &v36, &v35, &v34, (uint64_t)v33, v28, a1);
  sub_1A905FD54((uint64_t)v4, &qword_1ED2AB028);
  return sub_1A905FD54((uint64_t)v7, &qword_1ED2AB010);
}

uint64_t static TimeBombedTranscriptProvider.background.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9377D58(&qword_1ED2AB440, (uint64_t)&unk_1ED2AB2D8, a1);
}

uint64_t sub_1A9377994()
{
  return sub_1A93779A0((uint64_t)&unk_1ED2AB448);
}

uint64_t sub_1A93779A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD v27[5];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t (*v31)(void **, uint64_t);
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  __int128 v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  __int128 v44;
  uint64_t (*v45)(void **, uint64_t);
  uint64_t v46;
  unint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t (*v49)(void *);
  uint64_t v50;
  __int128 v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  unint64_t (*v54)(uint64_t);
  uint64_t v55;
  uint64_t (*v56)(void *);
  uint64_t v57;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028);
  MEMORY[0x1E0C80A78](v2);
  v4 = (_QWORD *)((char *)&v27[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010);
  MEMORY[0x1E0C80A78](v5);
  v7 = (_QWORD *)((char *)&v27[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1ED2AB610 != -1)
    swift_once();
  v8 = type metadata accessor for TimeBombedTranscriptProvider.Caches(0);
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED2AB5F0);
  sub_1A9062170(v9, (uint64_t)v7, &qword_1ED2AB010);
  sub_1A9062170(v9 + *(int *)(v8 + 20), (uint64_t)v4, &qword_1ED2AB028);
  v10 = (char *)v7 + *(int *)(v5 + 60);
  v11 = *(_QWORD *)&v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80) + 68)];
  *(_QWORD *)&v51 = sub_1A937D514;
  *((_QWORD *)&v51 + 1) = v11;
  v52 = sub_1A937D518;
  v53 = v11;
  v54 = sub_1A937D654;
  v55 = v11;
  v56 = sub_1A937D684;
  v57 = v11;
  v12 = (char *)v4 + *(int *)(v2 + 60);
  v13 = *(_QWORD *)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88) + 68)];
  *(_QWORD *)&v44 = sub_1A937D6A8;
  *((_QWORD *)&v44 + 1) = v13;
  v45 = sub_1A937D6CC;
  v46 = v13;
  v47 = sub_1A937D6D4;
  v48 = v13;
  v49 = sub_1A937D704;
  v50 = v13;
  v14 = *v7;
  *(_QWORD *)&v37 = sub_1A937D728;
  *((_QWORD *)&v37 + 1) = v14;
  v38 = sub_1A937D74C;
  v39 = v14;
  v40 = sub_1A937D784;
  v41 = v14;
  v42 = sub_1A937D7B4;
  v43 = v14;
  v15 = *v4;
  *(_QWORD *)&v30 = sub_1A937D7E0;
  *((_QWORD *)&v30 + 1) = v15;
  v31 = sub_1A937D804;
  v32 = v15;
  v33 = sub_1A937D80C;
  v34 = v15;
  v35 = sub_1A937D83C;
  v36 = v15;
  v16 = qword_1ED2AB5E8;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  if (v16 != -1)
    swift_once();
  v17 = _s11DownloadersVMa(0);
  v18 = (uint64_t *)__swift_project_value_buffer(v17, (uint64_t)qword_1ED2AB5D0);
  v19 = *v18;
  *(_QWORD *)&v29 = sub_1A937DA58;
  *((_QWORD *)&v29 + 1) = v19;
  v20 = *(uint64_t *)((char *)v18 + *(int *)(v17 + 28));
  *(_QWORD *)&v28 = sub_1A937DA94;
  *((_QWORD *)&v28 + 1) = v20;
  v21 = qword_1ED2A5B40;
  swift_retain();
  swift_retain();
  if (v21 != -1)
    swift_once();
  v27[3] = &type metadata for MAPITranscriptTimeBombedURLProvider;
  v27[4] = &protocol witness table for MAPITranscriptTimeBombedURLProvider;
  v22 = (id)qword_1ED2A5B38;
  v23 = sub_1A90C1BB8(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BA0);
  v24 = swift_allocObject();
  *(_DWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 16) = v23;
  v27[0] = v22;
  v27[1] = v24;
  TimeBombedTranscriptProvider.init(ttmlPersistentCache:signaturePersistentCache:ttmlVolatileCache:signatureVolatileCache:ttmlSource:shazamSignatureSource:timeBombedURLsProvider:workQueue:)(&v51, &v44, &v37, &v30, &v29, &v28, (uint64_t)v27, v22, a1);
  sub_1A905FD54((uint64_t)v4, &qword_1ED2AB028);
  return sub_1A905FD54((uint64_t)v7, &qword_1ED2AB010);
}

uint64_t static TimeBombedTranscriptProvider.foreground.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9377D58(&qword_1ED2AB5B8, (uint64_t)&unk_1ED2AB448, a1);
}

uint64_t sub_1A9377D58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  return sub_1A9294EF8(a2, a3);
}

uint64_t *_s6CachesVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    swift_retain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010) + 60);
    v9 = (char *)v7 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A93F726C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80);
    *(_QWORD *)&v9[v13[15]] = *(_QWORD *)&v10[v13[15]];
    *(_QWORD *)&v9[v13[16]] = *(_QWORD *)&v10[v13[16]];
    *(_QWORD *)&v9[v13[17]] = *(_QWORD *)&v10[v13[17]];
    *(_QWORD *)&v9[v13[18]] = *(_QWORD *)&v10[v13[18]];
    v14 = *(int *)(a3 + 20);
    v15 = (char *)v7 + v14;
    v16 = (char *)a2 + v14;
    *(uint64_t *)((char *)v7 + v14) = *(uint64_t *)((char *)a2 + v14);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028) + 60);
    v18 = &v15[v17];
    v19 = &v16[v17];
    v12(v18, &v16[v17], v11);
    v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
    *(_QWORD *)&v18[v20[15]] = *(_QWORD *)&v19[v20[15]];
    *(_QWORD *)&v18[v20[16]] = *(_QWORD *)&v19[v20[16]];
    *(_QWORD *)&v18[v20[17]] = *(_QWORD *)&v19[v20[17]];
    *(_QWORD *)&v18[v20[18]] = *(_QWORD *)&v19[v20[18]];
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t _s6CachesVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  swift_release();
  v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010) + 60);
  v5 = sub_1A93F726C();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v7 = a1 + *(int *)(a2 + 20);
  swift_release();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028);
  v6(v7 + *(int *)(v8 + 60), v5);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *_s6CachesVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;

  *a1 = *a2;
  swift_retain();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010) + 60);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F726C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80);
  *(_QWORD *)&v7[v11[15]] = *(_QWORD *)&v8[v11[15]];
  *(_QWORD *)&v7[v11[16]] = *(_QWORD *)&v8[v11[16]];
  *(_QWORD *)&v7[v11[17]] = *(_QWORD *)&v8[v11[17]];
  *(_QWORD *)&v7[v11[18]] = *(_QWORD *)&v8[v11[18]];
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (_QWORD *)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + v12) = *v14;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028) + 60);
  v16 = &v13[v15];
  v17 = (char *)v14 + v15;
  v10(&v13[v15], v17, v9);
  v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  *(_QWORD *)&v16[v18[15]] = *(_QWORD *)&v17[v18[15]];
  *(_QWORD *)&v16[v18[16]] = *(_QWORD *)&v17[v18[16]];
  *(_QWORD *)&v16[v18[17]] = *(_QWORD *)&v17[v18[17]];
  *(_QWORD *)&v16[v18[18]] = *(_QWORD *)&v17[v18[18]];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s6CachesVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010) + 60);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F726C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80);
  *(_QWORD *)&v7[v11[15]] = *(_QWORD *)&v8[v11[15]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v7[v11[16]] = *(_QWORD *)&v8[v11[16]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v7[v11[17]] = *(_QWORD *)&v8[v11[17]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v7[v11[18]] = *(_QWORD *)&v8[v11[18]];
  swift_retain();
  swift_release();
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  swift_retain();
  swift_release();
  v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028) + 60);
  v16 = &v13[v15];
  v17 = &v14[v15];
  v10(v16, &v14[v15], v9);
  v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  *(_QWORD *)&v16[v18[15]] = *(_QWORD *)&v17[v18[15]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v16[v18[16]] = *(_QWORD *)&v17[v18[16]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v16[v18[17]] = *(_QWORD *)&v17[v18[17]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v16[v18[18]] = *(_QWORD *)&v17[v18[18]];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *_s6CachesVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;

  *a1 = *a2;
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010) + 60);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F726C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80);
  *(_QWORD *)&v7[v11[15]] = *(_QWORD *)&v8[v11[15]];
  *(_QWORD *)&v7[v11[16]] = *(_QWORD *)&v8[v11[16]];
  *(_QWORD *)&v7[v11[17]] = *(_QWORD *)&v8[v11[17]];
  *(_QWORD *)&v7[v11[18]] = *(_QWORD *)&v8[v11[18]];
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (_QWORD *)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + v12) = *v14;
  v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028) + 60);
  v16 = &v13[v15];
  v17 = (char *)v14 + v15;
  v10(v16, v17, v9);
  v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  *(_QWORD *)&v16[v18[15]] = *(_QWORD *)&v17[v18[15]];
  *(_QWORD *)&v16[v18[16]] = *(_QWORD *)&v17[v18[16]];
  *(_QWORD *)&v16[v18[17]] = *(_QWORD *)&v17[v18[17]];
  *(_QWORD *)&v16[v18[18]] = *(_QWORD *)&v17[v18[18]];
  return a1;
}

_QWORD *_s6CachesVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010) + 60);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F726C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80);
  *(_QWORD *)&v7[v11[15]] = *(_QWORD *)&v8[v11[15]];
  swift_release();
  *(_QWORD *)&v7[v11[16]] = *(_QWORD *)&v8[v11[16]];
  swift_release();
  *(_QWORD *)&v7[v11[17]] = *(_QWORD *)&v8[v11[17]];
  swift_release();
  *(_QWORD *)&v7[v11[18]] = *(_QWORD *)&v8[v11[18]];
  swift_release();
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  swift_release();
  v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028) + 60);
  v16 = &v13[v15];
  v17 = &v14[v15];
  v10(v16, &v14[v15], v9);
  v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  *(_QWORD *)&v16[v18[15]] = *(_QWORD *)&v17[v18[15]];
  swift_release();
  *(_QWORD *)&v16[v18[16]] = *(_QWORD *)&v17[v18[16]];
  swift_release();
  *(_QWORD *)&v16[v18[17]] = *(_QWORD *)&v17[v18[17]];
  swift_release();
  *(_QWORD *)&v16[v18[18]] = *(_QWORD *)&v17[v18[18]];
  swift_release();
  return a1;
}

uint64_t _s6CachesVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A93786A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t _s6CachesVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9378730(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1A93787B4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A9378838();
  if (v1 <= 0x3F)
  {
    result = sub_1A93788C0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A9378838()
{
  uint64_t result;

  result = qword_1ED2AB018;
  if (!qword_1ED2AB018)
  {
    type metadata accessor for TTMLRequest();
    type metadata accessor for CacheDomain();
  }
  return result;
}

uint64_t sub_1A93788C0()
{
  uint64_t result;

  result = qword_1ED2AB030;
  if (!qword_1ED2AB030)
  {
    type metadata accessor for ShazamSignatureRequest();
    type metadata accessor for CacheDomain();
  }
  return result;
}

uint64_t sub_1A9378948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE v76[4];
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120[6];

  v88 = a2;
  v100 = a3;
  v4 = sub_1A93F73E0();
  v81 = *(_QWORD *)(v4 - 8);
  v82 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = &v76[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v80 = sub_1A93F7698();
  v7 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v9 = &v76[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v10);
  v99 = &v76[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEC20);
  v84 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v76[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9780);
  v85 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = &v76[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8918);
  v86 = *(_QWORD *)(v18 - 8);
  v87 = v18;
  MEMORY[0x1E0C80A78](v18);
  v83 = &v76[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8CF8);
  v90 = *(_QWORD *)(v20 - 8);
  v91 = v20;
  MEMORY[0x1E0C80A78](v20);
  v89 = &v76[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4798);
  v93 = *(_QWORD *)(v22 - 8);
  v94 = v22;
  MEMORY[0x1E0C80A78](v22);
  v92 = &v76[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEC28);
  v97 = *(_QWORD *)(v24 - 8);
  v98 = v24;
  MEMORY[0x1E0C80A78](v24);
  v95 = &v76[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v26);
  v96 = &v76[-v27];
  sub_1A9131434(a1, (uint64_t)&v102);
  sub_1A9062170((uint64_t)&v115 + 8, (uint64_t)&v118, &qword_1ED2AD0C0);
  sub_1A9131470((uint64_t)&v102);
  v101 = a1;
  if (v119)
  {
    sub_1A905D4AC(&v118, (uint64_t)v120);
  }
  else
  {
    v78 = v12;
    v79 = v15;
    v28 = v7;
    v29 = v80;
    if (qword_1ED2AD108 != -1)
      swift_once();
    v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1ED2AD0F0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v30, v29);
    v77 = sub_1A93F8784();
    sub_1A93F73D4();
    v31 = sub_1A93F73A4();
    v33 = v32;
    (*(void (**)(_BYTE *, uint64_t))(v81 + 8))(v6, v82);
    v34 = type metadata accessor for LoggerTrace(0);
    v120[3] = v34;
    v120[4] = (uint64_t)&protocol witness table for LoggerTrace;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v120);
    *boxed_opaque_existential_1 = v31;
    boxed_opaque_existential_1[1] = v33;
    (*(void (**)(char *, _BYTE *, uint64_t))(v28 + 32))((char *)boxed_opaque_existential_1 + *(int *)(v34 + 20), v9, v29);
    *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v34 + 24)) = v77;
    sub_1A905FD54((uint64_t)&v118, &qword_1ED2AD0C0);
    a1 = v101;
    v12 = v78;
    v15 = v79;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5B88);
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 24) = 0;
  *(_QWORD *)(v36 + 32) = 0;
  *(_QWORD *)(v36 + 16) = 0;
  *(_DWORD *)(v36 + 40) = 0;
  sub_1A9131434(a1, (uint64_t)&v102);
  sub_1A93F7A58();
  v37 = a1;
  v38 = sub_1A93F726C();
  sub_1A93F7A40();
  (*(void (**)(_BYTE *, uint64_t))(v84 + 8))(v14, v12);
  *(_QWORD *)&v102 = v88;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9290);
  sub_1A9066D74(&qword_1ED2A9778, &qword_1ED2A9780, MEMORY[0x1E0C964C8]);
  sub_1A9066D74(&qword_1ED2A9288, &qword_1ED2A9290, MEMORY[0x1E0C96108]);
  v39 = v83;
  sub_1A93F7B54();
  (*(void (**)(_BYTE *, uint64_t))(v85 + 8))(v17, v15);
  sub_1A9066D74(&qword_1ED2A8910, &qword_1ED2A8918, MEMORY[0x1E0C95698]);
  v40 = v89;
  v41 = v87;
  sub_1A93F7C14();
  (*(void (**)(_BYTE *, uint64_t))(v86 + 8))(v39, v41);
  sub_1A9131434(v37, (uint64_t)&v102);
  sub_1A905DC3C((uint64_t)v120, (uint64_t)&v118);
  v42 = swift_allocObject();
  v43 = v115;
  *(_OWORD *)(v42 + 208) = v114;
  *(_OWORD *)(v42 + 224) = v43;
  v44 = v117;
  *(_OWORD *)(v42 + 240) = v116;
  *(_OWORD *)(v42 + 256) = v44;
  v45 = v111;
  *(_OWORD *)(v42 + 144) = v110;
  *(_OWORD *)(v42 + 160) = v45;
  v46 = v113;
  *(_OWORD *)(v42 + 176) = v112;
  *(_OWORD *)(v42 + 192) = v46;
  v47 = v107;
  *(_OWORD *)(v42 + 80) = v106;
  *(_OWORD *)(v42 + 96) = v47;
  v48 = v109;
  *(_OWORD *)(v42 + 112) = v108;
  *(_OWORD *)(v42 + 128) = v48;
  v49 = v103;
  *(_OWORD *)(v42 + 16) = v102;
  *(_OWORD *)(v42 + 32) = v49;
  v50 = v104;
  v51 = v105;
  *(_QWORD *)(v42 + 272) = v36;
  *(_QWORD *)(v42 + 280) = "ForegroundNetworkFetch";
  *(_QWORD *)(v42 + 288) = 22;
  *(_BYTE *)(v42 + 296) = 2;
  *(_OWORD *)(v42 + 48) = v50;
  *(_OWORD *)(v42 + 64) = v51;
  sub_1A905D4AC(&v118, v42 + 304);
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = sub_1A937FDB4;
  *(_QWORD *)(v52 + 24) = v42;
  swift_retain();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5620);
  sub_1A9066D74(&qword_1ED2A8CF0, &qword_1ED2A8CF8, MEMORY[0x1E0C95B08]);
  sub_1A9066D74(&qword_1ED2A5618, &qword_1ED2A5620, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  v53 = v91;
  v54 = v92;
  sub_1A93F7C5C();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v90 + 8))(v40, v53);
  sub_1A905DC3C((uint64_t)v120, (uint64_t)&v118);
  sub_1A9131434(v101, (uint64_t)&v102);
  v55 = swift_allocObject();
  sub_1A905D4AC(&v118, v55 + 16);
  v56 = v115;
  *(_OWORD *)(v55 + 248) = v114;
  v57 = v116;
  v58 = v117;
  *(_OWORD *)(v55 + 264) = v56;
  *(_OWORD *)(v55 + 280) = v57;
  *(_OWORD *)(v55 + 296) = v58;
  v59 = v111;
  *(_OWORD *)(v55 + 184) = v110;
  *(_OWORD *)(v55 + 200) = v59;
  v60 = v113;
  *(_OWORD *)(v55 + 216) = v112;
  *(_OWORD *)(v55 + 232) = v60;
  v61 = v107;
  *(_OWORD *)(v55 + 120) = v106;
  *(_OWORD *)(v55 + 136) = v61;
  v62 = v109;
  *(_OWORD *)(v55 + 152) = v108;
  *(_OWORD *)(v55 + 168) = v62;
  v63 = v103;
  *(_OWORD *)(v55 + 56) = v102;
  *(_OWORD *)(v55 + 72) = v63;
  v64 = v105;
  *(_OWORD *)(v55 + 88) = v104;
  *(_OWORD *)(v55 + 104) = v64;
  type metadata accessor for ArtworkContent();
  sub_1A9066D74(&qword_1ED2A59E8, &qword_1ED2A4798, MEMORY[0x1E0C95B78]);
  v65 = v96;
  v66 = v94;
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v93 + 8))(v54, v66);
  sub_1A905DC3C((uint64_t)v120, (uint64_t)&v102);
  v67 = (uint64_t)v99;
  ArtworkRequest.remoteUrl.getter();
  v68 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v67, 1, v38) == 1)
  {
    sub_1A905FD54(v67, &qword_1ED2AD3D0);
    v69 = 0;
    v70 = 0;
  }
  else
  {
    v69 = sub_1A93F7224();
    v70 = v71;
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v38);
  }
  v73 = v97;
  v72 = v98;
  v74 = (uint64_t)v95;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v97 + 16))(v95, v65, v98);
  sub_1A9062170((uint64_t)&v102, (uint64_t)&v118, &qword_1ED2AD0C0);
  sub_1A9376A94(v74, (uint64_t)&v118, (uint64_t)"ForegroundDownload", 18, 2, 0, v69, v70, v100, 1, &qword_1EEABEC28, &qword_1EEABE0D8);
  swift_release();
  sub_1A905FD54((uint64_t)&v102, &qword_1ED2AD0C0);
  (*(void (**)(_BYTE *, uint64_t))(v73 + 8))(v65, v72);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v120);
}

uint64_t sub_1A93792C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v64[4];
  int v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE v93[36];
  __int128 v94;
  uint64_t v95;
  uint64_t v96[5];

  v78 = a2;
  v90 = a3;
  v69 = sub_1A93F73E0();
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v5 = &v64[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v67 = sub_1A93F7698();
  v6 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v8 = &v64[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v64[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEA80);
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v13 = &v64[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9780);
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v70 = &v64[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8918);
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v16 = &v64[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8CF8);
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v79 = &v64[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4798);
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v82 = &v64[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEA88);
  v87 = *(_QWORD *)(v19 - 8);
  v88 = v19;
  MEMORY[0x1E0C80A78](v19);
  v85 = &v64[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v21);
  v86 = &v64[-v22];
  v23 = type metadata accessor for ShazamSignatureRequest();
  v71 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v91 = v24;
  v92 = a1;
  v25 = &v64[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A9064630(a1, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  sub_1A9062170((uint64_t)&v25[*(int *)(v23 + 36)], (uint64_t)&v94, &qword_1ED2AD0C0);
  sub_1A9064714((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v89 = v11;
  if (v95)
  {
    sub_1A905D4AC(&v94, (uint64_t)v96);
  }
  else
  {
    v66 = v16;
    v26 = v6;
    v27 = v67;
    if (qword_1ED2AD108 != -1)
      swift_once();
    v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED2AD0F0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, v28, v27);
    v65 = sub_1A93F8784();
    sub_1A93F73D4();
    v29 = sub_1A93F73A4();
    v31 = v30;
    (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v5, v69);
    v32 = type metadata accessor for LoggerTrace(0);
    v96[3] = v32;
    v96[4] = (uint64_t)&protocol witness table for LoggerTrace;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v96);
    *boxed_opaque_existential_1 = v29;
    boxed_opaque_existential_1[1] = v31;
    (*(void (**)(char *, _BYTE *, uint64_t))(v26 + 32))((char *)boxed_opaque_existential_1 + *(int *)(v32 + 20), v8, v27);
    *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v32 + 24)) = v65;
    sub_1A905FD54((uint64_t)&v94, &qword_1ED2AD0C0);
    v16 = v66;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5B88);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 24) = 0;
  *(_QWORD *)(v34 + 32) = 0;
  *(_QWORD *)(v34 + 16) = 0;
  *(_DWORD *)(v34 + 40) = 0;
  v35 = v92;
  sub_1A9064630(v92, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  sub_1A93F7A58();
  v69 = sub_1A93F726C();
  v36 = v70;
  v37 = v73;
  sub_1A93F7A40();
  (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v13, v37);
  *(_QWORD *)&v94 = v78;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9290);
  sub_1A9066D74(&qword_1ED2A9778, &qword_1ED2A9780, MEMORY[0x1E0C964C8]);
  sub_1A9066D74(&qword_1ED2A9288, &qword_1ED2A9290, MEMORY[0x1E0C96108]);
  v38 = v75;
  sub_1A93F7B54();
  (*(void (**)(_BYTE *, uint64_t))(v74 + 8))(v36, v38);
  sub_1A9066D74(&qword_1ED2A8910, &qword_1ED2A8918, MEMORY[0x1E0C95698]);
  v39 = v79;
  v40 = v77;
  sub_1A93F7C14();
  (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v16, v40);
  sub_1A9064630(v35, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  sub_1A905DC3C((uint64_t)v96, (uint64_t)&v94);
  v41 = *(unsigned __int8 *)(v71 + 80);
  v42 = (v41 + 16) & ~v41;
  v77 = v41 | 7;
  v43 = (v91 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  v44 = swift_allocObject();
  sub_1A9116174((uint64_t)v25, v44 + v42, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  *(_QWORD *)(v44 + v43) = v34;
  v45 = v44 + ((v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v45 = "ForegroundNetworkFetch";
  *(_QWORD *)(v45 + 8) = 22;
  *(_BYTE *)(v45 + 16) = 2;
  sub_1A905D4AC(&v94, v44 + ((v43 + 39) & 0xFFFFFFFFFFFFFFF8));
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = sub_1A937DADC;
  *(_QWORD *)(v46 + 24) = v44;
  v78 = v34;
  swift_retain();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5620);
  sub_1A9066D74(&qword_1ED2A8CF0, &qword_1ED2A8CF8, MEMORY[0x1E0C95B08]);
  sub_1A9066D74(&qword_1ED2A5618, &qword_1ED2A5620, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  v47 = v82;
  v48 = v81;
  sub_1A93F7C5C();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v80 + 8))(v39, v48);
  sub_1A905DC3C((uint64_t)v96, (uint64_t)&v94);
  v49 = v92;
  sub_1A9064630(v92, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v50 = swift_allocObject();
  sub_1A905D4AC(&v94, v50 + 16);
  v51 = (uint64_t)v25;
  v52 = v69;
  sub_1A9116174(v51, v50 + ((v41 + 56) & ~v41), (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  sub_1A9072534(0, &qword_1EEAB82E8);
  sub_1A9066D74(&qword_1ED2A59E8, &qword_1ED2A4798, MEMORY[0x1E0C95B78]);
  v53 = v86;
  v54 = v84;
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v83 + 8))(v47, v54);
  sub_1A905DC3C((uint64_t)v96, (uint64_t)&v94);
  v55 = (uint64_t)v89;
  sub_1A9062170(v49, (uint64_t)v89, &qword_1ED2AD3D0);
  v56 = *(_QWORD *)(v52 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v55, 1, v52) == 1)
  {
    sub_1A905FD54(v55, &qword_1ED2AD3D0);
    v57 = 0;
    v58 = 0;
  }
  else
  {
    v57 = sub_1A93F7224();
    v58 = v59;
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v52);
  }
  v61 = v87;
  v60 = v88;
  v62 = (uint64_t)v85;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v87 + 16))(v85, v53, v88);
  sub_1A9062170((uint64_t)&v94, (uint64_t)v93, &qword_1ED2AD0C0);
  sub_1A9376A94(v62, (uint64_t)v93, (uint64_t)"ForegroundDownload", 18, 2, 0, v57, v58, v90, 1, &qword_1EEABEA88, &qword_1EEABEA70);
  swift_release();
  sub_1A905FD54((uint64_t)&v94, &qword_1ED2AD0C0);
  (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v53, v60);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
}

uint64_t sub_1A9379CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v63[4];
  int v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE v92[36];
  __int128 v93;
  uint64_t v94;
  uint64_t v95[5];

  v78 = a2;
  v89 = a3;
  v69 = sub_1A93F73E0();
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v5 = &v63[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v67 = sub_1A93F7698();
  v6 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v8 = &v63[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v9);
  v88 = &v63[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEAB0);
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v12 = &v63[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9780);
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v70 = &v63[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8918);
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v15 = &v63[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8CF8);
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v17 = &v63[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4798);
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v81 = &v63[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEAB8);
  v86 = *(_QWORD *)(v19 - 8);
  v87 = v19;
  MEMORY[0x1E0C80A78](v19);
  v84 = &v63[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v21);
  v85 = &v63[-v22];
  v23 = type metadata accessor for TTMLRequest();
  v71 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v90 = a1;
  v91 = v24;
  v25 = &v63[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A9064630(a1, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  sub_1A9062170((uint64_t)&v25[*(int *)(v23 + 36)], (uint64_t)&v93, &qword_1ED2AD0C0);
  sub_1A9064714((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  if (v94)
  {
    sub_1A905D4AC(&v93, (uint64_t)v95);
  }
  else
  {
    v65 = v15;
    v26 = v6;
    v27 = v67;
    v66 = v17;
    if (qword_1ED2AD108 != -1)
      swift_once();
    v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED2AD0F0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, v28, v27);
    v64 = sub_1A93F8784();
    sub_1A93F73D4();
    v29 = sub_1A93F73A4();
    v31 = v30;
    (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v5, v69);
    v32 = type metadata accessor for LoggerTrace(0);
    v95[3] = v32;
    v95[4] = (uint64_t)&protocol witness table for LoggerTrace;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v95);
    *boxed_opaque_existential_1 = v29;
    boxed_opaque_existential_1[1] = v31;
    (*(void (**)(char *, _BYTE *, uint64_t))(v26 + 32))((char *)boxed_opaque_existential_1 + *(int *)(v32 + 20), v8, v27);
    *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v32 + 24)) = v64;
    sub_1A905FD54((uint64_t)&v93, &qword_1ED2AD0C0);
    v17 = v66;
    v15 = v65;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5B88);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 24) = 0;
  *(_QWORD *)(v34 + 32) = 0;
  *(_QWORD *)(v34 + 16) = 0;
  *(_DWORD *)(v34 + 40) = 0;
  v35 = v90;
  sub_1A9064630(v90, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  sub_1A93F7A58();
  v69 = sub_1A93F726C();
  v36 = v70;
  v37 = v73;
  sub_1A93F7A40();
  (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v12, v37);
  *(_QWORD *)&v93 = v78;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9290);
  sub_1A9066D74(&qword_1ED2A9778, &qword_1ED2A9780, MEMORY[0x1E0C964C8]);
  sub_1A9066D74(&qword_1ED2A9288, &qword_1ED2A9290, MEMORY[0x1E0C96108]);
  v38 = v75;
  sub_1A93F7B54();
  (*(void (**)(_BYTE *, uint64_t))(v74 + 8))(v36, v38);
  sub_1A9066D74(&qword_1ED2A8910, &qword_1ED2A8918, MEMORY[0x1E0C95698]);
  v39 = v77;
  sub_1A93F7C14();
  (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v15, v39);
  sub_1A9064630(v35, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  sub_1A905DC3C((uint64_t)v95, (uint64_t)&v93);
  v40 = *(unsigned __int8 *)(v71 + 80);
  v41 = (v40 + 16) & ~v40;
  v77 = v40 | 7;
  v42 = (v91 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
  v43 = swift_allocObject();
  sub_1A9116174((uint64_t)v25, v43 + v41, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  *(_QWORD *)(v43 + v42) = v34;
  v44 = v43 + ((v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v44 = "ForegroundNetworkFetch";
  *(_QWORD *)(v44 + 8) = 22;
  *(_BYTE *)(v44 + 16) = 2;
  sub_1A905D4AC(&v93, v43 + ((v42 + 39) & 0xFFFFFFFFFFFFFFF8));
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = sub_1A937DC14;
  *(_QWORD *)(v45 + 24) = v43;
  v78 = v34;
  swift_retain();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5620);
  sub_1A9066D74(&qword_1ED2A8CF0, &qword_1ED2A8CF8, MEMORY[0x1E0C95B08]);
  sub_1A9066D74(&qword_1ED2A5618, &qword_1ED2A5620, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  v46 = v81;
  v47 = v80;
  sub_1A93F7C5C();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v79 + 8))(v17, v47);
  sub_1A905DC3C((uint64_t)v95, (uint64_t)&v93);
  v48 = v90;
  sub_1A9064630(v90, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v49 = swift_allocObject();
  sub_1A905D4AC(&v93, v49 + 16);
  v50 = (uint64_t)v25;
  v51 = v69;
  sub_1A9116174(v50, v49 + ((v40 + 56) & ~v40), (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  sub_1A9066D74(&qword_1ED2A59E8, &qword_1ED2A4798, MEMORY[0x1E0C95B78]);
  v52 = v85;
  v53 = v83;
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v82 + 8))(v46, v53);
  sub_1A905DC3C((uint64_t)v95, (uint64_t)&v93);
  v54 = v88;
  sub_1A9062170(v48, (uint64_t)v88, &qword_1ED2AD3D0);
  v55 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v55 + 48))(v54, 1, v51) == 1)
  {
    sub_1A905FD54((uint64_t)v54, &qword_1ED2AD3D0);
    v56 = 0;
    v57 = 0;
  }
  else
  {
    v56 = sub_1A93F7224();
    v57 = v58;
    (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v54, v51);
  }
  v60 = v86;
  v59 = v87;
  v61 = (uint64_t)v84;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v86 + 16))(v84, v52, v87);
  sub_1A9062170((uint64_t)&v93, (uint64_t)v92, &qword_1ED2AD0C0);
  sub_1A9376A94(v61, (uint64_t)v92, (uint64_t)"ForegroundDownload", 18, 2, 0, v56, v57, v89, 1, &qword_1EEABEAB8, &qword_1EEABEAA0);
  swift_release();
  sub_1A905FD54((uint64_t)&v93, &qword_1ED2AD0C0);
  (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v52, v59);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v95);
}

uint64_t sub_1A937A6B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  ArtworkRequest.remoteUrl.getter();
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  sub_1A905FD54((uint64_t)v4, &qword_1ED2AD3D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEC30);
  sub_1A9066D74(&qword_1EEABEC38, &qword_1EEABEC30, (uint64_t)&protocol conformance descriptor for ForegroundSessionSource<A>.SourceError);
  swift_allocError();
  *v7 = 0;
  return swift_willThrow();
}

uint64_t sub_1A937A7D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A937A818(a1, &qword_1EEABEA90, &qword_1EEABEA98, a2);
}

uint64_t sub_1A937A7F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A937A818(a1, &qword_1EEABEAC0, &qword_1EEABEAC8, a2);
}

uint64_t sub_1A937A818@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9062170(a1, (uint64_t)v10, &qword_1ED2AD3D0);
  v11 = sub_1A93F726C();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a4, v10, v11);
  sub_1A905FD54((uint64_t)v10, &qword_1ED2AD3D0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1A9066D74(a3, a2, (uint64_t)&protocol conformance descriptor for ForegroundSessionSource<A>.SourceError);
  swift_allocError();
  *v13 = 0;
  return swift_willThrow();
}

void sub_1A937A948(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, double);
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  __int128 v68[16];

  v65 = a8;
  v53 = a7;
  v51 = a5;
  v52 = a6;
  v50 = a4;
  v55 = a3;
  v63 = a9;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5620);
  MEMORY[0x1E0C80A78](v62);
  v61 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A93F726C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5A80);
  v56 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v49 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5988);
  v59 = *(_QWORD *)(v18 - 8);
  v60 = v18;
  MEMORY[0x1E0C80A78](v18);
  v58 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v64 = (char *)&v48 - v22;
  v23 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  v57 = a1;
  v23(v16, a1, v13, v21);
  sub_1A9131434(a3, (uint64_t)v68);
  v24 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v25 = (v15 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v26 + v24, v16, v13);
  *(_QWORD *)(v26 + v25) = a2;
  v27 = (_OWORD *)(v26 + ((v25 + 15) & 0xFFFFFFFFFFFFFFF8));
  v28 = v68[3];
  v27[2] = v68[2];
  v27[3] = v28;
  v29 = v68[1];
  *v27 = v68[0];
  v27[1] = v29;
  v30 = v68[5];
  v31 = v68[7];
  v32 = v68[8];
  v27[6] = v68[6];
  v27[7] = v31;
  v27[4] = v68[4];
  v27[5] = v30;
  v33 = v68[9];
  v34 = v68[11];
  v35 = v68[12];
  v27[10] = v68[10];
  v27[11] = v34;
  v27[8] = v32;
  v27[9] = v33;
  v36 = v68[15];
  v37 = v68[13];
  v27[14] = v68[14];
  v27[15] = v36;
  v27[12] = v35;
  v27[13] = v37;
  v38 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5980);
  sub_1A9066D74(&qword_1ED2A5978, &qword_1ED2A5980, MEMORY[0x1E0C957C0]);
  v39 = v49;
  sub_1A93F7AAC();
  sub_1A905DC3C(v65, (uint64_t)v68);
  v40 = swift_allocObject();
  v41 = v50;
  v42 = v51;
  *(_QWORD *)(v40 + 16) = v50;
  *(_QWORD *)(v40 + 24) = v42;
  v43 = v52;
  *(_QWORD *)(v40 + 32) = v52;
  LOBYTE(v14) = v53;
  *(_BYTE *)(v40 + 40) = v53;
  sub_1A905D4AC(v68, v40 + 48);
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = v41;
  *(_QWORD *)(v44 + 24) = v42;
  *(_QWORD *)(v44 + 32) = v43;
  *(_BYTE *)(v44 + 40) = v14;
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = v41;
  *(_QWORD *)(v45 + 24) = v42;
  *(_QWORD *)(v45 + 32) = v43;
  *(_BYTE *)(v45 + 40) = v14;
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = v41;
  *(_QWORD *)(v46 + 24) = v42;
  *(_QWORD *)(v46 + 32) = v43;
  *(_BYTE *)(v46 + 40) = v14;
  sub_1A9066D74(&qword_1ED2A5A78, &qword_1ED2A5A80, MEMORY[0x1E0C96148]);
  swift_retain_n();
  v47 = v54;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v47);
  sub_1A905DC3C(v65, (uint64_t)v68);
  v66 = 0;
  v67 = 0xE000000000000000;
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  v66 = 60;
  v67 = 0xE100000000000000;
  __asm { BR              X10 }
}

uint64_t sub_1A937AD98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F7188();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v2 = v0[20];
  v3 = v0[21];
  v4 = v0[10];
  v5 = v0[11];
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v7 = v0[12];
  v6(v4, v1, v7);
  sub_1A9062170((uint64_t)(v0 + 25), (uint64_t)(v0 + 20), &qword_1ED2AD0C0);
  v8 = v0[13];
  v6(v8, v4, v7);
  v9 = (int *)v0[14];
  sub_1A9062170((uint64_t)(v0 + 20), v8 + v9[9], &qword_1ED2AD0C0);
  v10 = v8 + v9[10];
  *(_QWORD *)v10 = "DOWNLOAD";
  *(_QWORD *)(v10 + 8) = 8;
  *(_BYTE *)(v10 + 16) = 2;
  *(_BYTE *)(v8 + v9[12]) = 0;
  v0[18] = v2;
  v0[19] = v3;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v11 = v0[18];
  v12 = v0[19];
  sub_1A905FD54((uint64_t)(v0 + 20), &qword_1ED2AD0C0);
  v13 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v13(v4, v7);
  v14 = (_QWORD *)(v8 + v9[11]);
  *v14 = v11;
  v14[1] = v12;
  *(_BYTE *)(v8 + v9[13]) = 0;
  sub_1A9062F08(v8, v0[15], &qword_1ED2A5620);
  sub_1A905FD54((uint64_t)(v0 + 25), &qword_1ED2AD0C0);
  return ((uint64_t (*)(_QWORD, uint64_t))v13)(v0[16], v7);
}

void sub_1A937AF78(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, double);
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  __int128 v63[3];

  v44 = a8;
  v49 = a7;
  v48 = a6;
  v46 = a5;
  v45 = a4;
  v50 = a3;
  v43 = a2;
  v59 = a9;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5620);
  MEMORY[0x1E0C80A78](v58);
  v57 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for ShazamSignatureRequest();
  v12 = *(_QWORD *)(v52 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v52);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F726C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5A80);
  v51 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v42 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5988);
  v55 = *(_QWORD *)(v20 - 8);
  v56 = v20;
  MEMORY[0x1E0C80A78](v20);
  v54 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v22);
  v60 = (char *)&v42 - v24;
  v25 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v53 = a1;
  v25(v18, a1, v15, v23);
  sub_1A9064630(a3, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v26 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v27 = (v17 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (*(unsigned __int8 *)(v12 + 80) + v27 + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v29 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v29 + v26, v18, v15);
  v30 = v43;
  *(_QWORD *)(v29 + v27) = v43;
  sub_1A9116174((uint64_t)v14, v29 + v28, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v31 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5980);
  sub_1A9066D74(&qword_1ED2A5978, &qword_1ED2A5980, MEMORY[0x1E0C957C0]);
  v32 = v42;
  sub_1A93F7AAC();
  v33 = v44;
  sub_1A905DC3C(v44, (uint64_t)v63);
  v34 = swift_allocObject();
  v35 = v45;
  v36 = v46;
  *(_QWORD *)(v34 + 16) = v45;
  *(_QWORD *)(v34 + 24) = v36;
  v37 = v48;
  *(_QWORD *)(v34 + 32) = v48;
  LOBYTE(v14) = v49;
  *(_BYTE *)(v34 + 40) = v49;
  sub_1A905D4AC(v63, v34 + 48);
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v35;
  *(_QWORD *)(v38 + 24) = v36;
  *(_QWORD *)(v38 + 32) = v37;
  *(_BYTE *)(v38 + 40) = (_BYTE)v14;
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = v35;
  *(_QWORD *)(v39 + 24) = v36;
  *(_QWORD *)(v39 + 32) = v37;
  *(_BYTE *)(v39 + 40) = (_BYTE)v14;
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v35;
  *(_QWORD *)(v40 + 24) = v36;
  *(_QWORD *)(v40 + 32) = v37;
  *(_BYTE *)(v40 + 40) = (_BYTE)v14;
  sub_1A9066D74(&qword_1ED2A5A78, &qword_1ED2A5A80, MEMORY[0x1E0C96148]);
  swift_retain_n();
  v41 = v47;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v41);
  sub_1A905DC3C(v33, (uint64_t)v63);
  v61 = 0;
  v62 = 0xE000000000000000;
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  v61 = 60;
  v62 = 0xE100000000000000;
  __asm { BR              X10 }
}

uint64_t sub_1A937B440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F7188();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 - 168);
  v2 = *(_QWORD *)(v0 - 160);
  v4 = *(_QWORD *)(v0 - 240);
  v3 = *(_QWORD *)(v0 - 232);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6 = *(_QWORD *)(v0 - 192);
  v7 = *(_QWORD *)(v0 - 224);
  v5(v4, v6, v7);
  sub_1A9062170(v0 - 128, v0 - 168, &qword_1ED2AD0C0);
  v8 = *(_QWORD *)(v0 - 216);
  v5(v8, v4, v7);
  v9 = *(int **)(v0 - 208);
  sub_1A9062170(v0 - 168, v8 + v9[9], &qword_1ED2AD0C0);
  v10 = v8 + v9[10];
  *(_QWORD *)v10 = "DOWNLOAD";
  *(_QWORD *)(v10 + 8) = 8;
  *(_BYTE *)(v10 + 16) = 2;
  *(_BYTE *)(v8 + v9[12]) = 0;
  *(_QWORD *)(v0 - 184) = v1;
  *(_QWORD *)(v0 - 176) = v2;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v0 - 184);
  v12 = *(_QWORD *)(v0 - 176);
  sub_1A905FD54(v0 - 168, &qword_1ED2AD0C0);
  v13 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v13(v4, v7);
  v14 = (_QWORD *)(v8 + v9[11]);
  *v14 = v11;
  v14[1] = v12;
  *(_BYTE *)(v8 + v9[13]) = 0;
  sub_1A9062F08(v8, *(_QWORD *)(v0 - 200), &qword_1ED2A5620);
  sub_1A905FD54(v0 - 128, &qword_1ED2AD0C0);
  return ((uint64_t (*)(uint64_t, uint64_t))v13)(v6, v7);
}

void sub_1A937B61C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, double);
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  __int128 v63[3];

  v44 = a8;
  v49 = a7;
  v48 = a6;
  v46 = a5;
  v45 = a4;
  v50 = a3;
  v43 = a2;
  v59 = a9;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5620);
  MEMORY[0x1E0C80A78](v58);
  v57 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for TTMLRequest();
  v12 = *(_QWORD *)(v52 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v52);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F726C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5A80);
  v51 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v42 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5988);
  v55 = *(_QWORD *)(v20 - 8);
  v56 = v20;
  MEMORY[0x1E0C80A78](v20);
  v54 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v22);
  v60 = (char *)&v42 - v24;
  v25 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v53 = a1;
  v25(v18, a1, v15, v23);
  sub_1A9064630(a3, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v26 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v27 = (v17 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (*(unsigned __int8 *)(v12 + 80) + v27 + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v29 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v29 + v26, v18, v15);
  v30 = v43;
  *(_QWORD *)(v29 + v27) = v43;
  sub_1A9116174((uint64_t)v14, v29 + v28, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v31 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5980);
  sub_1A9066D74(&qword_1ED2A5978, &qword_1ED2A5980, MEMORY[0x1E0C957C0]);
  v32 = v42;
  sub_1A93F7AAC();
  v33 = v44;
  sub_1A905DC3C(v44, (uint64_t)v63);
  v34 = swift_allocObject();
  v35 = v45;
  v36 = v46;
  *(_QWORD *)(v34 + 16) = v45;
  *(_QWORD *)(v34 + 24) = v36;
  v37 = v48;
  *(_QWORD *)(v34 + 32) = v48;
  LOBYTE(v14) = v49;
  *(_BYTE *)(v34 + 40) = v49;
  sub_1A905D4AC(v63, v34 + 48);
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v35;
  *(_QWORD *)(v38 + 24) = v36;
  *(_QWORD *)(v38 + 32) = v37;
  *(_BYTE *)(v38 + 40) = (_BYTE)v14;
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = v35;
  *(_QWORD *)(v39 + 24) = v36;
  *(_QWORD *)(v39 + 32) = v37;
  *(_BYTE *)(v39 + 40) = (_BYTE)v14;
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v35;
  *(_QWORD *)(v40 + 24) = v36;
  *(_QWORD *)(v40 + 32) = v37;
  *(_BYTE *)(v40 + 40) = (_BYTE)v14;
  sub_1A9066D74(&qword_1ED2A5A78, &qword_1ED2A5A80, MEMORY[0x1E0C96148]);
  swift_retain_n();
  v41 = v47;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v41);
  sub_1A905DC3C(v33, (uint64_t)v63);
  v61 = 0;
  v62 = 0xE000000000000000;
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  v61 = 60;
  v62 = 0xE100000000000000;
  __asm { BR              X10 }
}

uint64_t sub_1A937BAE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F7188();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 - 168);
  v2 = *(_QWORD *)(v0 - 160);
  v4 = *(_QWORD *)(v0 - 240);
  v3 = *(_QWORD *)(v0 - 232);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6 = *(_QWORD *)(v0 - 192);
  v7 = *(_QWORD *)(v0 - 224);
  v5(v4, v6, v7);
  sub_1A9062170(v0 - 128, v0 - 168, &qword_1ED2AD0C0);
  v8 = *(_QWORD *)(v0 - 216);
  v5(v8, v4, v7);
  v9 = *(int **)(v0 - 208);
  sub_1A9062170(v0 - 168, v8 + v9[9], &qword_1ED2AD0C0);
  v10 = v8 + v9[10];
  *(_QWORD *)v10 = "DOWNLOAD";
  *(_QWORD *)(v10 + 8) = 8;
  *(_BYTE *)(v10 + 16) = 2;
  *(_BYTE *)(v8 + v9[12]) = 0;
  *(_QWORD *)(v0 - 184) = v1;
  *(_QWORD *)(v0 - 176) = v2;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v0 - 184);
  v12 = *(_QWORD *)(v0 - 176);
  sub_1A905FD54(v0 - 168, &qword_1ED2AD0C0);
  v13 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v13(v4, v7);
  v14 = (_QWORD *)(v8 + v9[11]);
  *v14 = v11;
  v14[1] = v12;
  *(_BYTE *)(v8 + v9[13]) = 0;
  sub_1A9062F08(v8, *(_QWORD *)(v0 - 200), &qword_1ED2A5620);
  sub_1A905FD54(v0 - 128, &qword_1ED2AD0C0);
  return ((uint64_t (*)(uint64_t, uint64_t))v13)(v6, v7);
}

uint64_t sub_1A937BCC0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  id v25;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _OWORD v30[16];

  v28 = a2;
  v29 = a4;
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_1A9131434(a3, (uint64_t)v30);
  v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = (v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v11, v9, v6);
  v15 = v28;
  *(_QWORD *)(v14 + v12) = v28;
  v16 = (_OWORD *)(v14 + v13);
  v17 = v30[3];
  v16[2] = v30[2];
  v16[3] = v17;
  v18 = v30[1];
  *v16 = v30[0];
  v16[1] = v18;
  v19 = v30[7];
  v16[6] = v30[6];
  v16[7] = v19;
  v20 = v30[5];
  v16[4] = v30[4];
  v16[5] = v20;
  v21 = v30[11];
  v16[10] = v30[10];
  v16[11] = v21;
  v22 = v30[9];
  v16[8] = v30[8];
  v16[9] = v22;
  v23 = v30[15];
  v16[14] = v30[14];
  v16[15] = v23;
  v24 = v30[13];
  v16[12] = v30[12];
  v16[13] = v24;
  *(_QWORD *)(v14 + ((v13 + 263) & 0xFFFFFFFFFFFFFFF8)) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91D0);
  swift_allocObject();
  v25 = v15;
  swift_retain();
  *(_QWORD *)&v30[0] = sub_1A93F7A94();
  sub_1A9066D74(&qword_1ED2A91C8, &qword_1ED2A91D0, MEMORY[0x1E0C96108]);
  swift_retain();
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A937BF10@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v32 = a8;
  v33 = a7;
  v30 = a2;
  v31 = a6;
  v28 = a3;
  v29 = a5;
  v10 = a4(0);
  v27 = a4;
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v27 - v13;
  v15 = sub_1A93F726C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  sub_1A9064630(v28, (uint64_t)v14, a4);
  v20 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v21 = (v17 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (*(unsigned __int8 *)(v11 + 80) + v21 + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v23 + v20, v18, v15);
  v24 = v30;
  *(_QWORD *)(v23 + v21) = v30;
  sub_1A9116174((uint64_t)v14, v23 + v22, v27);
  *(_QWORD *)(v23 + ((v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91D0);
  swift_allocObject();
  v25 = v24;
  swift_retain();
  v34 = sub_1A93F7A94();
  sub_1A9066D74(&qword_1ED2A91C8, &qword_1ED2A91D0, MEMORY[0x1E0C96108]);
  swift_retain();
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1A937C144(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  double v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v27 = a5;
  v25 = a4;
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1A93F6D80();
  v14 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  swift_retain();
  sub_1A93F6D50();
  v18 = (void *)sub_1A93F6D2C();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1A9381534;
  *(_QWORD *)(v19 + 24) = v17;
  aBlock[4] = sub_1A9380210;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9069D94;
  aBlock[3] = &block_descriptor_305;
  v20 = _Block_copy(aBlock);
  swift_release();
  v21 = objc_msgSend(v25, sel_dataTaskWithRequest_completionHandler_, v18, v20);
  _Block_release(v20);

  *(float *)&v22 = flt_1A9406340[*(char *)(v27 + 203)];
  objc_msgSend(v21, sel_setPriority_, v22);
  objc_msgSend(v21, sel_resume);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v26);
  swift_beginAccess();
  v23 = *(void **)(a6 + 16);
  *(_QWORD *)(a6 + 16) = v21;

}

void sub_1A937C368(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  double v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v27 = a5;
  v25 = a4;
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1A93F6D80();
  v14 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  swift_retain();
  sub_1A93F6D50();
  v18 = (void *)sub_1A93F6D2C();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1A906A534;
  *(_QWORD *)(v19 + 24) = v17;
  aBlock[4] = sub_1A937DBE0;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9069D94;
  aBlock[3] = &block_descriptor_71;
  v20 = _Block_copy(aBlock);
  swift_release();
  v21 = objc_msgSend(v25, sel_dataTaskWithRequest_completionHandler_, v18, v20);
  _Block_release(v20);

  *(float *)&v22 = flt_1A9406340[*(char *)(v27 + *(int *)(type metadata accessor for ShazamSignatureRequest() + 20))];
  objc_msgSend(v21, sel_setPriority_, v22);
  objc_msgSend(v21, sel_resume);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v26);
  swift_beginAccess();
  v23 = *(void **)(a6 + 16);
  *(_QWORD *)(a6 + 16) = v21;

}

void sub_1A937C598(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  double v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v27 = a5;
  v25 = a4;
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1A93F6D80();
  v14 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  swift_retain();
  sub_1A93F6D50();
  v18 = (void *)sub_1A93F6D2C();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1A9381534;
  *(_QWORD *)(v19 + 24) = v17;
  aBlock[4] = sub_1A937E0CC;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9069D94;
  aBlock[3] = &block_descriptor_77;
  v20 = _Block_copy(aBlock);
  swift_release();
  v21 = objc_msgSend(v25, sel_dataTaskWithRequest_completionHandler_, v18, v20);
  _Block_release(v20);

  *(float *)&v22 = flt_1A9406340[*(char *)(v27 + *(int *)(type metadata accessor for TTMLRequest() + 20))];
  objc_msgSend(v21, sel_setPriority_, v22);
  objc_msgSend(v21, sel_resume);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v26);
  swift_beginAccess();
  v23 = *(void **)(a6 + 16);
  *(_QWORD *)(a6 + 16) = v21;

}

void sub_1A937C7C8(uint64_t a1, unint64_t a2, int a3, id a4, void (*a5)(id, unint64_t, uint64_t), uint64_t a6, uint64_t *a7, unint64_t *a8)
{
  id v10;
  _BYTE *v15;
  id v16;

  if (a2 >> 60 == 15)
  {
    if (a4)
    {
      v10 = a4;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(a7);
      sub_1A9066D74(a8, a7, (uint64_t)&protocol conformance descriptor for ForegroundSessionSource<A>.SourceError);
      v10 = (id)swift_allocError();
      *v15 = 1;
    }
    v16 = a4;
    a5(v10, 0, 1);

  }
  else
  {
    sub_1A90D8068(a1, a2);
    a5((id)a1, a2, 0);
    sub_1A9069F9C(a1, a2);
  }
}

double sub_1A937C8BC@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  char v18;
  __int128 v19;
  double v20[3];

  v9 = a3[3];
  v10 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v9);
  Trace.emit(event:)((uint64_t)"DECODE", 6, 2, v9, v10);
  TranscriptParser.parse(ttmlData:)(a1, a2, (uint64_t)&v17);
  if (v4)
  {
    v11 = a3[3];
    v12 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v11);
    Trace.emit(event:)((uint64_t)"DECODE-FAILED", 13, 2, v11, v12);
    swift_willThrow();
  }
  else
  {
    v14 = a3[3];
    v15 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v14);
    Trace.emit(event:)((uint64_t)"DECODED", 7, 2, v14, v15);
    v16 = v18;
    *(_OWORD *)a4 = v17;
    *(_BYTE *)(a4 + 16) = v16;
    *(_OWORD *)(a4 + 24) = v19;
    result = v20[0];
    *(_OWORD *)(a4 + 40) = *(_OWORD *)v20;
  }
  return result;
}

uint64_t sub_1A937C9F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  uint64_t v13;

  v8 = a3(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v9 = swift_allocObject();
  *(_DWORD *)(v9 + 40) = 0;
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 32) = v8;
  *(_QWORD *)(v4 + 16) = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC948);
  v10 = swift_allocObject();
  *(_QWORD *)(v4 + 24) = v10;
  *(_DWORD *)(v10 + 24) = 0;
  v11 = (os_unfair_lock_s *)(v10 + 24);
  *(_QWORD *)(v10 + 16) = 0;
  v12 = (uint64_t *)(v10 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  sub_1A937CCB8(v12);
  os_unfair_lock_unlock(v11);
  v13 = sub_1A93F8988();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
  return v4;
}

uint64_t sub_1A937CAE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  uint64_t v13;

  v8 = a3(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v9 = swift_allocObject();
  *(_DWORD *)(v9 + 40) = 0;
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 32) = v8;
  *(_QWORD *)(v4 + 16) = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC948);
  v10 = swift_allocObject();
  *(_QWORD *)(v4 + 24) = v10;
  *(_DWORD *)(v10 + 24) = 0;
  v11 = (os_unfair_lock_s *)(v10 + 24);
  *(_QWORD *)(v10 + 16) = 0;
  v12 = (uint64_t *)(v10 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  sub_1A937CBE4(v12);
  os_unfair_lock_unlock(v11);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
  return v4;
}

uint64_t sub_1A937CBE4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t result;

  swift_release();
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91A0);
  sub_1A9066D74(&qword_1ED2A9198, &qword_1ED2A91A0, MEMORY[0x1E0C960D0]);
  v2 = sub_1A93F7D04();
  result = swift_release_n();
  *a1 = v2;
  return result;
}

uint64_t sub_1A937CCB8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t result;

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1A93F8988();
  sub_1A9066CA8((unint64_t *)&qword_1ED2A41D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  swift_retain();
  v2 = sub_1A93F7D04();
  result = swift_release_n();
  *a1 = v2;
  return result;
}

uint64_t sub_1A937CD84()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + 16);
    os_unfair_lock_lock((os_unfair_lock_t)(v1 + 40));
    swift_bridgeObjectRelease();
    v2 = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = v2;
    os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 40));
    return swift_release();
  }
  return result;
}

id sub_1A937CE08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id *v15;
  char *v16;
  id v17;
  uint64_t v19;

  v4 = sub_1A93F738C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ShazamSignatureRequest();
  v9 = *(_QWORD *)(a1 + 16);
  if (!*(_QWORD *)(v9 + 16))
    return 0;
  v10 = (uint64_t *)(a2 + *(int *)(v8 + 24));
  v11 = *v10;
  v12 = v10[1];
  swift_bridgeObjectRetain();
  v13 = sub_1A9094640(v11, v12);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v15 = *(id **)(*(_QWORD *)(v9 + 56) + 8 * v13);
  swift_retain();
  swift_bridgeObjectRelease();
  sub_1A93F7374();
  v16 = (char *)v15 + *((_QWORD *)*v15 + 17);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(v16, v7, v4);
  swift_endAccess();
  v17 = v15[2];
  swift_release();
  return v17;
}

uint64_t sub_1A937CF44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1A93F738C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = type metadata accessor for TTMLRequest();
  v11 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v11 + 16))
  {
    v12 = (uint64_t *)(a2 + *(int *)(result + 24));
    v13 = *v12;
    v14 = v12[1];
    swift_bridgeObjectRetain();
    v15 = sub_1A9094640(v13, v14);
    if ((v16 & 1) != 0)
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v15);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1A93F7374();
      v18 = v17 + *(_QWORD *)(*(_QWORD *)v17 + 136);
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v18, v9, v6);
      swift_endAccess();
      v19 = *(_BYTE *)(v17 + 32);
      v20 = *(_QWORD *)(v17 + 40);
      v21 = *(_QWORD *)(v17 + 48);
      v22 = *(_QWORD *)(v17 + 56);
      v23 = *(_QWORD *)(v17 + 64);
      *(_OWORD *)a3 = *(_OWORD *)(v17 + 16);
      *(_BYTE *)(a3 + 16) = v19;
      *(_QWORD *)(a3 + 24) = v20;
      *(_QWORD *)(a3 + 32) = v21;
      *(_QWORD *)(a3 + 40) = v22;
      *(_QWORD *)(a3 + 48) = v23;
      sub_1A90D8068(v20, v21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return swift_release();
    }
    result = swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a3 + 48) = 0;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

uint64_t sub_1A937D0B4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *a1;
  v6 = a1[1];
  v7 = a2[3];
  v8 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v7);
  Trace.emit(event:)((uint64_t)"DECODE", 6, 2, v7, v8);
  *a3 = v5;
  a3[1] = v6;
  type metadata accessor for ArtworkContent();
  swift_storeEnumTagMultiPayload();
  v9 = a2[3];
  v10 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v9);
  sub_1A90D8068(v5, v6);
  return Trace.emit(event:)((uint64_t)"DECODED", 7, 2, v9, v10);
}

uint64_t sub_1A937D188@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_retain();
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1A937D1F8(uint64_t a1, _QWORD *a2, uint64_t *a3, void (*a4)(uint64_t, _QWORD, _QWORD, double), unint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4(a1, *a2, a2[1], v12);
  sub_1A9066D74(a5, a3, MEMORY[0x1E0C95B48]);
  v15 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v15;
}

void sub_1A937D2C4(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)a1 + 16);
  v4 = (uint64_t)&v3[4];
  v5 = v3 + 10;
  os_unfair_lock_lock(v3 + 10);
  sub_1A937F894(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_1A937D330(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)a1 + 16);
  v4 = (uint64_t)&v3[4];
  v5 = v3 + 10;
  os_unfair_lock_lock(v3 + 10);
  sub_1A937F8F8(v4, a2);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1A937D390(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, os_unfair_lock_s *))
{
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  uint64_t v8;

  v4 = *(os_unfair_lock_s **)(*(_QWORD *)a2 + 16);
  v5 = v4 + 4;
  v6 = v4 + 10;
  os_unfair_lock_lock(v4 + 10);
  a3(&v8, v5);
  os_unfair_lock_unlock(v6);
  return v8;
}

void sub_1A937D3F8(uint64_t a1, uint64_t a2, void (*a3)(os_unfair_lock_s *))
{
  uint64_t v3;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;

  v5 = *(os_unfair_lock_s **)(*(_QWORD *)a2 + 16);
  v6 = v5 + 4;
  v7 = v5 + 10;
  os_unfair_lock_lock(v5 + 10);
  a3(v6);
  os_unfair_lock_unlock(v7);
  if (v3)
    __break(1u);
}

uint64_t sub_1A937D47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v6;
  uint64_t result;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;

  v6 = *(_QWORD *)(a1 + 16);
  result = a3(0);
  if (*(_QWORD *)(v6 + 16))
  {
    v8 = (uint64_t *)(a2 + *(int *)(result + 24));
    v9 = *v8;
    v10 = v8[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A9094640(v9, v10);
    v12 = v11;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  *a4 = v12 & 1;
  return result;
}

uint64_t sub_1A937D518(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[3];
  uint64_t v5;

  v2 = *(_OWORD *)(a1 + 16);
  v4[0] = *(_OWORD *)a1;
  v4[1] = v2;
  v4[2] = *(_OWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  return sub_1A93847CC((uint64_t)v4, a2);
}

id sub_1A937D550(uint64_t a1, _QWORD *a2, void (*a3)(uint64_t, double))
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v14;

  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(*a2 + qword_1ED2B8A10, v7);
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1A93F7224();
  v11 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v10, sel_fileExistsAtPath_, v11);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v12;
}

unint64_t sub_1A937D654(uint64_t a1)
{
  uint64_t v2;

  return (unint64_t)sub_1A937D550(a1, &v2, (void (*)(uint64_t, double))sub_1A93859E0) & 1;
}

uint64_t sub_1A937D684(void *a1)
{
  return sub_1A9370A2C(a1, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, (void (*)(uint64_t, double))sub_1A93859E0);
}

id sub_1A937D6A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = sub_1A936F6F8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1A937D6CC(void **a1, uint64_t a2)
{
  return sub_1A9384B9C(*a1, a2);
}

unint64_t sub_1A937D6D4(uint64_t a1)
{
  uint64_t v2;

  return (unint64_t)sub_1A937D550(a1, &v2, (void (*)(uint64_t, double))sub_1A93859EC) & 1;
}

uint64_t sub_1A937D704(void *a1)
{
  return sub_1A9370A2C(a1, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, (void (*)(uint64_t, double))sub_1A93859EC);
}

void sub_1A937D728(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A937D330((uint64_t)&v1, a1);
}

uint64_t sub_1A937D74C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[3];
  uint64_t v5;

  v2 = *(_OWORD *)(a1 + 16);
  v4[0] = *(_OWORD *)a1;
  v4[1] = v2;
  v4[2] = *(_OWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  return sub_1A9385C10((uint64_t)v4, a2);
}

uint64_t sub_1A937D784(uint64_t a1)
{
  uint64_t v2;

  return sub_1A937D390(a1, (uint64_t)&v2, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *))sub_1A937F8D8) & 1;
}

void sub_1A937D7B4(uint64_t a1)
{
  uint64_t v1;

  sub_1A937D3F8(a1, (uint64_t)&v1, (void (*)(os_unfair_lock_s *))sub_1A937F8C0);
}

void sub_1A937D7E0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1A937D2C4((uint64_t)&v1, a1);
}

uint64_t sub_1A937D804(void **a1, uint64_t a2)
{
  return sub_1A9385D4C(*a1, a2);
}

uint64_t sub_1A937D80C(uint64_t a1)
{
  uint64_t v2;

  return sub_1A937D390(a1, (uint64_t)&v2, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *))sub_1A937F874) & 1;
}

void sub_1A937D83C(uint64_t a1)
{
  uint64_t v1;

  sub_1A937D3F8(a1, (uint64_t)&v1, (void (*)(os_unfair_lock_s *))sub_1A937F85C);
}

uint64_t _s11DownloadersVMa(uint64_t a1)
{
  return sub_1A9062BFC(a1, (uint64_t *)&unk_1ED2AB5C0);
}

uint64_t sub_1A937D87C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a1;
  v7 = a1[1];
  v8 = a2[3];
  v9 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v8);
  Trace.emit(event:)((uint64_t)"DECODE", 6, 2, v8, v9);
  v10 = ShazamSignatureRequest.decode(_:)(v6, v7);
  if (v3)
  {
    v11 = a2[3];
    v12 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v11);
    Trace.emit(event:)((uint64_t)"DECODE-FAILED", 13, 2, v11, v12);
    return swift_willThrow();
  }
  else
  {
    v14 = v10;
    v15 = a2[3];
    v16 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v15);
    result = Trace.emit(event:)((uint64_t)"DECODED", 7, 2, v15, v16);
    *a3 = v14;
  }
  return result;
}

uint64_t sub_1A937D990(uint64_t a1, _QWORD *a2, uint64_t *a3, void (*a4)(uint64_t, _QWORD, double), unint64_t *a5)
{
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4(a1, *a2, v11);
  sub_1A9066D74(a5, a3, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  v14 = sub_1A93F7B24();
  sub_1A905FD54((uint64_t)v13, a3);
  return v14;
}

uint64_t sub_1A937DA58(uint64_t a1)
{
  uint64_t v2;

  return sub_1A937D990(a1, &v2, &qword_1EEABEAA0, (void (*)(uint64_t, _QWORD, double))sub_1A9379CC4, &qword_1EEABEAA8);
}

uint64_t sub_1A937DA94(uint64_t a1)
{
  uint64_t v2;

  return sub_1A937D990(a1, &v2, &qword_1EEABEA70, (void (*)(uint64_t, _QWORD, double))sub_1A93792C4, &qword_1EEABEA78);
}

uint64_t sub_1A937DAD0()
{
  return objectdestroyTm_16((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
}

uint64_t sub_1A937DADC(uint64_t a1, uint64_t a2)
{
  return sub_1A937DC28(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A937AF78);
}

uint64_t sub_1A937DAF0()
{
  return objectdestroy_5Tm_4((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
}

uint64_t sub_1A937DAFC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  type metadata accessor for ShazamSignatureRequest();
  return sub_1A937D87C(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1A937DB58()
{
  return objectdestroy_8Tm_3((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
}

uint64_t sub_1A937DB64@<X0>(uint64_t a1@<X8>)
{
  return sub_1A937DE20((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, (uint64_t)&unk_1E54F7558, (uint64_t)sub_1A937DBCC, (uint64_t)sub_1A90CD294, a1);
}

uint64_t sub_1A937DB8C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A937DBB0(uint64_t a1)
{
  uint64_t v1;

  sub_1A93BED94(a1, *(os_unfair_lock_s **)(v1 + 16), *(const char **)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_1A937DBC0()
{
  return objectdestroy_26Tm_0((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
}

uint64_t sub_1A937DBCC(uint64_t a1, uint64_t a2)
{
  return sub_1A937E01C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))sub_1A937C368);
}

void sub_1A937DBE0(uint64_t a1, unint64_t a2, int a3, void *a4)
{
  uint64_t v4;

  sub_1A937C7C8(a1, a2, a3, a4, *(void (**)(id, unint64_t, uint64_t))(v4 + 16), *(_QWORD *)(v4 + 24), &qword_1EEABEA90, &qword_1EEABEA98);
}

uint64_t sub_1A937DC08()
{
  return objectdestroyTm_16((uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
}

uint64_t sub_1A937DC14(uint64_t a1, uint64_t a2)
{
  return sub_1A937DC28(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A937B61C);
}

uint64_t sub_1A937DC28(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(a3(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a4(a1, a2, v4 + v8, *(_QWORD *)(v4 + v9), *(_QWORD *)(v4 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v4 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned __int8 *)(v4 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), v4 + ((v9 + 39) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1A937DCC0()
{
  return objectdestroy_5Tm_4((uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
}

uint64_t objectdestroy_5Tm_4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v4 = (v3 + 56) & ~v3;
  __swift_destroy_boxed_opaque_existential_0(v1 + 16);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1 + v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1 + v4, v5);
  swift_bridgeObjectRelease();
  v7 = v1 + v4 + *(int *)(v2 + 36);
  if (*(_QWORD *)(v7 + 24))
    __swift_destroy_boxed_opaque_existential_0(v7);
  return swift_deallocObject();
}

double sub_1A937DD94@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  type metadata accessor for TTMLRequest();
  return sub_1A937C8BC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1A937DDF0()
{
  return objectdestroy_8Tm_3((uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
}

uint64_t sub_1A937DDFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1A937DE20((uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, (uint64_t)&unk_1E54F7738, (uint64_t)sub_1A937E008, (uint64_t)sub_1A90CD294, a1);
}

uint64_t sub_1A937DE20@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v11 = *(_QWORD *)(sub_1A93F726C() - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return sub_1A937BF10(v5 + v12, *(void **)(v5 + v13), v5 + ((v13 + v14 + 8) & ~v14), a1, a2, a3, a4, a5);
}

uint64_t sub_1A937DED0()
{
  return objectdestroy_26Tm_0((uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
}

uint64_t objectdestroy_26Tm_0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  uint64_t v10;

  v3 = sub_1A93F726C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = a1(0);
  v8 = (v6 + *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v9 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v9(v1 + v5, v3);

  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v1 + v8, 1, v3))
    v9(v1 + v8, v3);
  swift_bridgeObjectRelease();
  v10 = v1 + v8 + *(int *)(v7 + 36);
  if (*(_QWORD *)(v10 + 24))
    __swift_destroy_boxed_opaque_existential_0(v10);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A937E008(uint64_t a1, uint64_t a2)
{
  return sub_1A937E01C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))sub_1A937C598);
}

uint64_t sub_1A937E01C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))
{
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v8 = *(_QWORD *)(sub_1A93F726C() - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(a3(0) - 8);
  v12 = (v10 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return a4(a1, a2, v4 + v9, *(_QWORD *)(v4 + v10), v4 + v12, *(_QWORD *)(v4 + ((*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_1A937E0CC(uint64_t a1, unint64_t a2, int a3, void *a4)
{
  uint64_t v4;

  sub_1A937C7C8(a1, a2, a3, a4, *(void (**)(id, unint64_t, uint64_t))(v4 + 16), *(_QWORD *)(v4 + 24), &qword_1EEABEAC0, &qword_1EEABEAC8);
}

uint64_t sub_1A937E0F4()
{
  return objectdestroy_79Tm(&qword_1ED2AB218, &qword_1ED2AB010, &qword_1ED2AAF80);
}

uint64_t sub_1A937E110(uint64_t a1, uint64_t a2)
{
  return sub_1A937E274(a1, a2, &qword_1ED2AB218, (uint64_t (*)(_QWORD, double))type metadata accessor for TTMLRequest, (uint64_t)&unk_1E54F7B20, (uint64_t)sub_1A937EB0C);
}

uint64_t sub_1A937E134()
{
  return objectdestroy_79Tm(&qword_1ED2AB228, &qword_1ED2AB028, qword_1ED2AAF88);
}

uint64_t objectdestroy_79Tm(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v3 + ((v7 + 16) & ~v7);
  swift_release();
  v9 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a2) + 60);
  v10 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A937E250(uint64_t a1, uint64_t a2)
{
  return sub_1A937E274(a1, a2, &qword_1ED2AB228, (uint64_t (*)(_QWORD, double))type metadata accessor for ShazamSignatureRequest, (uint64_t)&unk_1E54F7878, (uint64_t)sub_1A937E318);
}

uint64_t sub_1A937E274(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD, double), uint64_t a5, uint64_t a6)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_1A9373C30(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1A937E2F4()
{
  return objectdestroy_92Tm(&qword_1ED2AB228, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, &qword_1ED2AB028, qword_1ED2AAF88);
}

uint64_t sub_1A937E318(_QWORD *a1)
{
  return sub_1A937EB28(a1, &qword_1ED2AB228, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(_QWORD, unint64_t, unint64_t, unint64_t))sub_1A93741B0);
}

uint64_t sub_1A937E334()
{
  return objectdestroy_95Tm(&qword_1ED2AB228, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, &qword_1ED2AB028, qword_1ED2AAF88);
}

uint64_t sub_1A937E358(uint64_t *a1)
{
  return sub_1A937EDD4(a1, &qword_1ED2AB228, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, (void (*)(uint64_t, _QWORD *))sub_1A9384F24);
}

uint64_t sub_1A937E374(void *a1)
{
  return sub_1A9374CCC(a1);
}

uint64_t sub_1A937E394()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A937E3B8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A937E3E0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A937D188(a1);
}

uint64_t sub_1A937E3F8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A937E424()
{
  return objectdestroy_110Tm((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor, &qword_1ED2AB028, qword_1ED2AAF88);
}

uint64_t sub_1A937E440(uint64_t a1, uint64_t a2)
{
  return sub_1A937F06C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor, sub_1A93724D0);
}

id sub_1A937E454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  _QWORD *v4;
  objc_class *ObjectType;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v11 = (_QWORD *)((char *)v4 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x88));
  *v11 = 0;
  v11[1] = 0;
  v12 = (_QWORD *)((char *)v4 + *(_QWORD *)((*v10 & *v4) + 0x80));
  *v12 = a2;
  v12[1] = a3;
  *(_QWORD *)((char *)v4 + *(_QWORD *)((*v10 & *v4) + 0x90)) = a1;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  *(_QWORD *)((char *)v4 + *(_QWORD *)((*v10 & *v4) + 0x98)) = a4(MEMORY[0x1E0DEE9D8]);
  swift_retain();
  v14 = v4;
  swift_retain();
  *(_QWORD *)((char *)v14 + *(_QWORD *)((*v10 & *v14) + 0xA0)) = sub_1A9084C30((uint64_t)v13);
  *(_QWORD *)((char *)v14 + *(_QWORD *)((*v10 & *v14) + 0xA8)) = sub_1A9084AC8((uint64_t)v13);
  *(_QWORD *)((char *)v14 + *(_QWORD *)((*v10 & *v14) + 0xB0)) = sub_1A91155D4(v13);
  *(_QWORD *)((char *)v14 + *(_QWORD *)((*v10 & *v14) + 0xB8)) = dispatch_group_create();

  v16.receiver = v14;
  v16.super_class = ObjectType;
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t sub_1A937E5B4()
{
  return objectdestroy_113Tm((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor, &qword_1ED2AB028, qword_1ED2AAF88);
}

uint64_t sub_1A937E5D0(uint64_t a1, uint64_t a2)
{
  return sub_1A937F1FC(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1A9373560);
}

uint64_t sub_1A937E5E4()
{
  return objectdestroy_119Tm((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor, &qword_1ED2AB028, qword_1ED2AAF88);
}

void sub_1A937E600()
{
  sub_1A937F3C0((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
}

uint64_t sub_1A937E60C()
{
  return objectdestroy_14Tm_0((uint64_t (*)(_QWORD))MEMORY[0x1E0DF2118]);
}

uint64_t sub_1A937E61C()
{
  return objectdestroy_128Tm((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, &qword_1ED2AB028, qword_1ED2AAF88);
}

uint64_t sub_1A937E640@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v5 = *(_QWORD *)(type metadata accessor for ShazamSignatureBackgroundSessionDescriptor() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(type metadata accessor for ShazamSignatureRequest() - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_QWORD *)(sub_1A93F726C() - 8);
  v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v14 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F75FC() - 8) + 80);
  result = sub_1A9375690(*a1, v2 + v6, v2 + v9, v2 + v12, v2 + ((v12 + v13 + v14) & ~v14));
  *a2 = result;
  return result;
}

uint64_t sub_1A937E70C()
{
  return objectdestroy_14Tm_0((uint64_t (*)(_QWORD))MEMORY[0x1E0DF2118]);
}

uint64_t sub_1A937E718(uint64_t a1)
{
  return sub_1A937F78C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1A915EDE4);
}

uint64_t sub_1A937E724()
{
  return objectdestroy_14Tm_0((uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

id sub_1A937E730()
{
  return sub_1A915FD74();
}

uint64_t sub_1A937E744()
{
  return objectdestroy_14Tm_0((uint64_t (*)(_QWORD))MEMORY[0x1E0DF2118]);
}

uint64_t sub_1A937E750(uint64_t a1)
{
  return sub_1A937F78C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1A915EED4);
}

uint64_t sub_1A937E75C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A937E780()
{
  return sub_1A937F7D8();
}

void sub_1A937E798(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  os_signpost_type_t v7;
  uint8_t *v8;
  os_signpost_id_t v9;
  uint64_t v10;
  NSObject *v11;

  v2 = sub_1A93F75FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2ABE88 != -1)
    swift_once();
  v6 = sub_1A93F762C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED2ABF70);
  v11 = sub_1A93F7620();
  v7 = sub_1A93F894C();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v11, v7, v9, "Loaded asset from URL", "", v8, 2u);
    MEMORY[0x1AF41411C](v8, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {

  }
}

uint64_t sub_1A937E904()
{
  return objectdestroy_92Tm(&qword_1ED2AB218, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, &qword_1ED2AB010, &qword_1ED2AAF80);
}

uint64_t objectdestroy_92Tm(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v22)(uint64_t, uint64_t);
  unint64_t v23;
  uint64_t v24;

  v8 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v24 = sub_1A93F6D80();
  v12 = *(_QWORD *)(v24 - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 64);
  v15 = a2(0);
  v23 = (v13 + v14 + *(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80);
  v16 = v4 + v10;
  swift_release();
  v17 = v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a3) + 60);
  v18 = sub_1A93F726C();
  v19 = *(_QWORD *)(v18 - 8);
  v22 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v22(v17, v18);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v4 + v13, v24);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v4 + v23, 1, v18))
    v22(v4 + v23, v18);
  swift_bridgeObjectRelease();
  v20 = v4 + v23 + *(int *)(v15 + 36);
  if (*(_QWORD *)(v20 + 24))
    __swift_destroy_boxed_opaque_existential_0(v20);
  return swift_deallocObject();
}

uint64_t sub_1A937EB0C(_QWORD *a1)
{
  return sub_1A937EB28(a1, &qword_1ED2AB218, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, (uint64_t (*)(_QWORD, unint64_t, unint64_t, unint64_t))sub_1A93744EC);
}

uint64_t sub_1A937EB28(_QWORD *a1, uint64_t *a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(_QWORD, unint64_t, unint64_t, unint64_t))
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(sub_1A93F6D80() - 8);
  v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(a3(0) - 8) + 80);
  return a4(*a1, v4 + v8, v4 + v11, v4 + ((v11 + v12 + v13) & ~v13));
}

uint64_t sub_1A937EBE0()
{
  return objectdestroy_95Tm(&qword_1ED2AB218, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, &qword_1ED2AB010, &qword_1ED2AAF80);
}

uint64_t objectdestroy_95Tm(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(unint64_t, uint64_t);
  uint64_t v22;

  v8 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = a2(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (v10 + v11 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v22 = *(_QWORD *)(v13 + 64);
  v15 = v4 + v10;
  swift_release();
  v16 = v4 + v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a3) + 60);
  v17 = sub_1A93F726C();
  v18 = *(_QWORD *)(v17 - 8);
  v21 = *(void (**)(unint64_t, uint64_t))(v18 + 8);
  v21(v16, v17);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v18 + 48))(v4 + v14, 1, v17))
    v21(v4 + v14, v17);
  swift_bridgeObjectRelease();
  v19 = v4 + v14 + *(int *)(v12 + 36);
  if (*(_QWORD *)(v19 + 24))
    __swift_destroy_boxed_opaque_existential_0(v19);

  return swift_deallocObject();
}

uint64_t sub_1A937EDB8(uint64_t *a1)
{
  return sub_1A937EDD4(a1, &qword_1ED2AB218, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, (void (*)(uint64_t, _QWORD *))sub_1A9385408);
}

uint64_t sub_1A937EDD4(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(_QWORD), void (*a4)(uint64_t, _QWORD *))
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(a3(0) - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return sub_1A9374B80(*a1, v4 + v10, v4 + v13, *(void **)(v4 + ((*(_QWORD *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFF8)), a2, a4);
}

uint64_t sub_1A937EE78(void *a1)
{
  return sub_1A9375198(a1);
}

uint64_t sub_1A937EE98@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1A93764E0(*a1, *(_QWORD **)(v2 + 16));
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1A937EEC4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = sub_1A9066D74(a3, a4, (uint64_t)&protocol conformance descriptor for DownloadTaskIdentifier<A>);
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for <> DiskAssetCache<A, B>, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

id sub_1A937EF3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = sub_1A9376584(a1, *(_QWORD **)(v2 + 16), *(void **)(v2 + 24));
  *a2 = result;
  return result;
}

uint64_t sub_1A937EF64()
{
  return objectdestroy_110Tm((uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor, &qword_1ED2AB010, &qword_1ED2AAF80);
}

uint64_t objectdestroy_110Tm(uint64_t (*a1)(_QWORD), uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  v7 = v3 + ((v6 + 16) & ~v6);
  swift_release();
  v8 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a2) + 60);
  v9 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A937F058(uint64_t a1, uint64_t a2)
{
  return sub_1A937F06C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor, sub_1A9372D18);
}

uint64_t sub_1A937F06C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a3(0) - 8) + 80);
  return a4(a2, a1, v4 + ((v7 + 16) & ~v7));
}

uint64_t sub_1A937F0C8()
{
  return objectdestroy_113Tm((uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor, &qword_1ED2AB010, &qword_1ED2AAF80);
}

uint64_t objectdestroy_113Tm(uint64_t (*a1)(_QWORD), uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1(0) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v3 + v7;
  swift_release();
  v10 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a2) + 60);
  v11 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A937F1E8(uint64_t a1, uint64_t a2)
{
  return sub_1A937F1FC(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1A9373850);
}

uint64_t sub_1A937F1FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(a3(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a4(a1, a2, v4 + v8, *(_QWORD *)(v4 + v9), *(_QWORD *)(v4 + ((v9 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A937F278()
{
  return objectdestroy_119Tm((uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor, &qword_1ED2AB010, &qword_1ED2AAF80);
}

uint64_t objectdestroy_119Tm(uint64_t (*a1)(_QWORD), uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1(0) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v3 + v7;
  swift_release();
  v10 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a2) + 60);
  v11 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1A937F3B4()
{
  sub_1A937F3C0((uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
}

void sub_1A937F3C0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = *(_QWORD *)(a1(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A9373B78(v1 + v3, *(id *)(v1 + v4), *(_QWORD *)(v1 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void))(v1 + ((((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1A937F424()
{
  return objectdestroy_14Tm_0((uint64_t (*)(_QWORD))MEMORY[0x1E0DF2118]);
}

void sub_1A937F430()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F75FC() - 8) + 80);
  sub_1A937E798(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1A937F460()
{
  return objectdestroy_128Tm((uint64_t (*)(_QWORD))type metadata accessor for TranscriptsBackgroundSessionDescriptor, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, &qword_1ED2AB010, &qword_1ED2AAF80);
}

uint64_t objectdestroy_128Tm(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD), uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(unint64_t, uint64_t);

  v7 = *(_QWORD *)(a1(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = a2(0);
  v11 = *(_QWORD *)(v10 - 8);
  v22 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v25 = *(_QWORD *)(v11 + 64);
  v12 = sub_1A93F726C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v24 = *(_QWORD *)(v13 + 64);
  v26 = sub_1A93F75FC();
  v15 = *(_QWORD *)(v26 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  swift_release();
  v17 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v27 = *(void (**)(unint64_t, uint64_t))(v13 + 8);
  v27(v4 + v8 + *(int *)(v17 + 60), v12);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v4 + v22, 1, v12))
    v27(v4 + v22, v12);
  swift_bridgeObjectRelease();
  v18 = v4 + v22 + *(int *)(v10 + 36);
  if (*(_QWORD *)(v18 + 24))
    __swift_destroy_boxed_opaque_existential_0(v18);
  v19 = (v22 + v25 + v14) & ~v14;
  v20 = (v19 + v24 + v16) & ~v16;
  v27(v4 + v19, v12);
  (*(void (**)(unint64_t, uint64_t))(v15 + 8))(v4 + v20, v26);
  return swift_deallocObject();
}

uint64_t sub_1A937F67C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t result;
  _OWORD v17[3];
  uint64_t v18;

  v5 = *(_QWORD *)(type metadata accessor for TranscriptsBackgroundSessionDescriptor() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(type metadata accessor for TTMLRequest() - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_QWORD *)(sub_1A93F726C() - 8);
  v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v14 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F75FC() - 8) + 80);
  v15 = *(_OWORD *)(a1 + 16);
  v17[0] = *(_OWORD *)a1;
  v17[1] = v15;
  v17[2] = *(_OWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 48);
  result = sub_1A9375DB8((uint64_t)v17, v2 + v6, v2 + v9, v2 + v12, v2 + ((v12 + v13 + v14) & ~v14));
  *a2 = result;
  return result;
}

uint64_t sub_1A937F768()
{
  return objectdestroy_14Tm_0((uint64_t (*)(_QWORD))MEMORY[0x1E0DF2118]);
}

uint64_t sub_1A937F774()
{
  return objectdestroy_14Tm_0((uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1A937F780()
{
  return objectdestroy_14Tm_0((uint64_t (*)(_QWORD))MEMORY[0x1E0DF2118]);
}

uint64_t sub_1A937F78C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F75FC() - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_1A937F7D8()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + 16);
    os_unfair_lock_lock((os_unfair_lock_t)(v1 + 40));
    swift_bridgeObjectRelease();
    v2 = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = v2;
    os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 40));
    return swift_release();
  }
  return result;
}

uint64_t sub_1A937F85C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A93881DC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A937F874@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1A937D47C(a1, *(_QWORD *)(v2 + 16), (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, a2);
}

id sub_1A937F894@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id result;

  result = sub_1A937CE08(a1, *(_QWORD *)(v2 + 16));
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1A937F8C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A93880C0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A937F8D8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1A937D47C(a1, *(_QWORD *)(v2 + 16), (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, a2);
}

uint64_t sub_1A937F8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A937CF44(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1A937F910(uint64_t a1)
{
  uint64_t v1;

  return sub_1A937D1F8(a1, (_QWORD *)(v1 + 16), &qword_1EEABEC10, (void (*)(uint64_t, _QWORD, _QWORD, double))sub_1A93713D4, &qword_1EEABEC18);
}

uint64_t sub_1A937F940(uint64_t a1)
{
  uint64_t v1;

  return sub_1A937D1F8(a1, (_QWORD *)(v1 + 16), &qword_1EEABEC00, (void (*)(uint64_t, _QWORD, _QWORD, double))sub_1A9370EC8, &qword_1EEABEC08);
}

uint64_t sub_1A937F970()
{
  return objectdestroy_224Tm((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
}

uint64_t sub_1A937F97C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A937FB28(a1, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, a2);
}

uint64_t sub_1A937F98C()
{
  return objectdestroy_230Tm((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
}

id sub_1A937F998@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  id result;

  type metadata accessor for ShazamSignatureRequest();
  result = ShazamSignatureRequest.decode(_:)(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

_QWORD *sub_1A937FA04@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr, _QWORD, _QWORD))(v2 + 16))(&v6, *a1, a1[1]);
  if (!v3)
    *a2 = v6;
  return result;
}

uint64_t sub_1A937FA48()
{
  return objectdestroy_224Tm((uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
}

uint64_t objectdestroy_224Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v4 = (v3 + 32) & ~v3;
  swift_release();
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1 + v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1 + v4, v5);
  swift_bridgeObjectRelease();
  v7 = v1 + v4 + *(int *)(v2 + 36);
  if (*(_QWORD *)(v7 + 24))
    __swift_destroy_boxed_opaque_existential_0(v7);
  return swift_deallocObject();
}

uint64_t sub_1A937FB1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A937FB28(a1, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, a2);
}

uint64_t sub_1A937FB28@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(a1, v3 + ((v6 + 32) & ~v6));
  *a3 = result;
  return result;
}

uint64_t objectdestroy_227Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1A937FBB0()
{
  return objectdestroy_230Tm((uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
}

uint64_t objectdestroy_230Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1 + v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1 + v4, v5);
  swift_bridgeObjectRelease();
  v7 = v1 + v4 + *(int *)(v2 + 36);
  if (*(_QWORD *)(v7 + 24))
    __swift_destroy_boxed_opaque_existential_0(v7);
  return swift_deallocObject();
}

void sub_1A937FC7C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for TTMLRequest();
  TranscriptParser.parse(ttmlData:)(a1, a2, a3);
}

uint64_t sub_1A937FCC8()
{
  return sub_1A937CD84();
}

uint64_t sub_1A937FCE0()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;

  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v1);
  v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 != 255)
    sub_1A913A0D8(*(id *)(v0 + 72), v2);
  v3 = *(unsigned __int8 *)(v0 + 96);
  if (v3 != 255)
    sub_1A913A0D8(*(id *)(v0 + 88), v3);
  v4 = *(unsigned __int8 *)(v0 + 112);
  if (v4 != 255)
    sub_1A913A0D8(*(id *)(v0 + 104), v4);
  v5 = *(unsigned __int8 *)(v0 + 128);
  if (v5 != 255)
    sub_1A913A0D8(*(id *)(v0 + 120), v5);
  v6 = *(unsigned __int8 *)(v0 + 144);
  if (v6 != 255)
    sub_1A913A0D8(*(id *)(v0 + 136), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 256))
    __swift_destroy_boxed_opaque_existential_0(v0 + 232);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 304);
  return swift_deallocObject();
}

void sub_1A937FDB4(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1A937A948(a1, a2, v3 + 16, *(_QWORD *)(v3 + 272), *(_QWORD *)(v3 + 280), *(_QWORD *)(v3 + 288), *(unsigned __int8 *)(v3 + 296), v3 + 304, a3);
}

uint64_t sub_1A937FDCC()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 88);
  if (v1 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), v1);
  v2 = *(unsigned __int8 *)(v0 + 120);
  if (v2 != 255)
    sub_1A913A0D8(*(id *)(v0 + 112), v2);
  v3 = *(unsigned __int8 *)(v0 + 136);
  if (v3 != 255)
    sub_1A913A0D8(*(id *)(v0 + 128), v3);
  v4 = *(unsigned __int8 *)(v0 + 152);
  if (v4 != 255)
    sub_1A913A0D8(*(id *)(v0 + 144), v4);
  v5 = *(unsigned __int8 *)(v0 + 168);
  if (v5 != 255)
    sub_1A913A0D8(*(id *)(v0 + 160), v5);
  v6 = *(unsigned __int8 *)(v0 + 184);
  if (v6 != 255)
    sub_1A913A0D8(*(id *)(v0 + 176), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 296))
    __swift_destroy_boxed_opaque_existential_0(v0 + 272);
  return swift_deallocObject();
}

uint64_t sub_1A937FE98@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A937D0B4(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1A937FEB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  v1 = sub_1A93F726C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  v5 = v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  v6 = *(unsigned __int8 *)(v5 + 32);
  if (v6 != 255)
    sub_1A913A0C0(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), v6);
  v7 = *(unsigned __int8 *)(v5 + 64);
  if (v7 != 255)
    sub_1A913A0D8(*(id *)(v5 + 56), v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v8 != 255)
    sub_1A913A0D8(*(id *)(v5 + 72), v8);
  v9 = *(unsigned __int8 *)(v5 + 96);
  if (v9 != 255)
    sub_1A913A0D8(*(id *)(v5 + 88), v9);
  v10 = *(unsigned __int8 *)(v5 + 112);
  if (v10 != 255)
    sub_1A913A0D8(*(id *)(v5 + 104), v10);
  v11 = *(unsigned __int8 *)(v5 + 128);
  if (v11 != 255)
    sub_1A913A0D8(*(id *)(v5 + 120), v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v5 + 240))
    __swift_destroy_boxed_opaque_existential_0(v5 + 216);
  return swift_deallocObject();
}

uint64_t sub_1A937FFD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_1A93F726C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A937BCC0(v1 + v4, *(void **)(v1 + v5), v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8), a1);
}

uint64_t objectdestroy_11Tm_2()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  return swift_deallocObject();
}

uint64_t sub_1A9380060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  v1 = sub_1A93F726C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  v5 = v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  v6 = *(unsigned __int8 *)(v5 + 32);
  if (v6 != 255)
    sub_1A913A0C0(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), v6);
  v7 = *(unsigned __int8 *)(v5 + 64);
  if (v7 != 255)
    sub_1A913A0D8(*(id *)(v5 + 56), v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v8 != 255)
    sub_1A913A0D8(*(id *)(v5 + 72), v8);
  v9 = *(unsigned __int8 *)(v5 + 96);
  if (v9 != 255)
    sub_1A913A0D8(*(id *)(v5 + 88), v9);
  v10 = *(unsigned __int8 *)(v5 + 112);
  if (v10 != 255)
    sub_1A913A0D8(*(id *)(v5 + 104), v10);
  v11 = *(unsigned __int8 *)(v5 + 128);
  if (v11 != 255)
    sub_1A913A0D8(*(id *)(v5 + 120), v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v5 + 240))
    __swift_destroy_boxed_opaque_existential_0(v5 + 216);
  swift_release();
  return swift_deallocObject();
}

void sub_1A9380198(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_1A93F726C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A937C144(a1, a2, v2 + v6, *(void **)(v2 + v7), v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 263) & 0xFFFFFFFFFFFFF8)));
}

void sub_1A9380210(uint64_t a1, unint64_t a2, int a3, void *a4)
{
  uint64_t v4;

  sub_1A937C7C8(a1, a2, a3, a4, *(void (**)(id, unint64_t, uint64_t))(v4 + 16), *(_QWORD *)(v4 + 24), &qword_1EEABEC30, &qword_1EEABEC38);
}

uint64_t *sub_1A9380238(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  int *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  id v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  int *v36;
  uint64_t v37;
  void *v38;
  id v39;
  void (*v41)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_retain();
    swift_retain();
    v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010) + 60);
    v12 = &v9[v11];
    v13 = &v10[v11];
    v14 = sub_1A93F726C();
    v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v41(v12, v13, v14);
    v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80);
    *(_QWORD *)&v12[v15[15]] = *(_QWORD *)&v13[v15[15]];
    *(_QWORD *)&v12[v15[16]] = *(_QWORD *)&v13[v15[16]];
    *(_QWORD *)&v12[v15[17]] = *(_QWORD *)&v13[v15[17]];
    *(_QWORD *)&v12[v15[18]] = *(_QWORD *)&v13[v15[18]];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB218);
    v17 = v16[11];
    v18 = *(void **)&v10[v17];
    *(_QWORD *)&v9[v17] = v18;
    *(_QWORD *)&v9[v16[12]] = *(_QWORD *)&v10[v16[12]];
    *(_QWORD *)&v9[v16[13]] = *(_QWORD *)&v10[v16[13]];
    v19 = a3[6];
    v20 = a3[7];
    v21 = (uint64_t *)((char *)v7 + v19);
    v22 = (uint64_t *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    *(uint64_t *)((char *)v7 + v20) = *(uint64_t *)((char *)a2 + v20);
    v24 = a3[8];
    v25 = a3[9];
    v26 = (uint64_t *)((char *)v7 + v24);
    v27 = (uint64_t *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (char *)v7 + v25;
    v30 = (char *)a2 + v25;
    *(uint64_t *)((char *)v7 + v25) = *(uint64_t *)((char *)a2 + v25);
    v31 = v18;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028) + 60);
    v33 = &v29[v32];
    v34 = &v30[v32];
    v41(&v29[v32], &v30[v32], v14);
    v35 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
    *(_QWORD *)&v33[v35[15]] = *(_QWORD *)&v34[v35[15]];
    *(_QWORD *)&v33[v35[16]] = *(_QWORD *)&v34[v35[16]];
    *(_QWORD *)&v33[v35[17]] = *(_QWORD *)&v34[v35[17]];
    *(_QWORD *)&v33[v35[18]] = *(_QWORD *)&v34[v35[18]];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v36 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB228);
    v37 = v36[11];
    v38 = *(void **)&v30[v37];
    *(_QWORD *)&v29[v37] = v38;
    *(_QWORD *)&v29[v36[12]] = *(_QWORD *)&v30[v36[12]];
    *(_QWORD *)&v29[v36[13]] = *(_QWORD *)&v30[v36[13]];
    v39 = v38;
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_1A93804E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010) + 60);
  v6 = sub_1A93F726C();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v8 = a1 + *(int *)(a2 + 36);
  swift_release();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028);
  v7(v8 + *(int *)(v9 + 60), v6);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return swift_release();
}

_QWORD *sub_1A93806A4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int *v13;
  int *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int *v33;
  int *v34;
  uint64_t v35;
  void *v36;
  id v37;
  void (*v39)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_retain();
  v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010) + 60);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_1A93F726C();
  v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v39(v10, v11, v12);
  v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80);
  *(_QWORD *)&v10[v13[15]] = *(_QWORD *)&v11[v13[15]];
  *(_QWORD *)&v10[v13[16]] = *(_QWORD *)&v11[v13[16]];
  *(_QWORD *)&v10[v13[17]] = *(_QWORD *)&v11[v13[17]];
  *(_QWORD *)&v10[v13[18]] = *(_QWORD *)&v11[v13[18]];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB218);
  v15 = v14[11];
  v16 = *(void **)&v8[v15];
  *(_QWORD *)&v7[v15] = v16;
  *(_QWORD *)&v7[v14[12]] = *(_QWORD *)&v8[v14[12]];
  *(_QWORD *)&v7[v14[13]] = *(_QWORD *)&v8[v14[13]];
  v17 = a3[6];
  v18 = a3[7];
  v19 = (_QWORD *)((char *)a1 + v17);
  v20 = (_QWORD *)((char *)a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  v22 = a3[8];
  v23 = a3[9];
  v24 = (_QWORD *)((char *)a1 + v22);
  v25 = (_QWORD *)((char *)a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = (char *)a1 + v23;
  v28 = (char *)a2 + v23;
  *(_QWORD *)((char *)a1 + v23) = *(_QWORD *)((char *)a2 + v23);
  v29 = v16;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028) + 60);
  v31 = &v27[v30];
  v32 = &v28[v30];
  v39(&v27[v30], &v28[v30], v12);
  v33 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  *(_QWORD *)&v31[v33[15]] = *(_QWORD *)&v32[v33[15]];
  *(_QWORD *)&v31[v33[16]] = *(_QWORD *)&v32[v33[16]];
  *(_QWORD *)&v31[v33[17]] = *(_QWORD *)&v32[v33[17]];
  *(_QWORD *)&v31[v33[18]] = *(_QWORD *)&v32[v33[18]];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v34 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB228);
  v35 = v34[11];
  v36 = *(void **)&v28[v35];
  *(_QWORD *)&v27[v35] = v36;
  *(_QWORD *)&v27[v34[12]] = *(_QWORD *)&v28[v34[12]];
  *(_QWORD *)&v27[v34[13]] = *(_QWORD *)&v28[v34[13]];
  v37 = v36;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1A9380928(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int *v13;
  int *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int *v33;
  int *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void (*v40)(char *, char *, uint64_t);

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010) + 60);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_1A93F726C();
  v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24);
  v40(v10, v11, v12);
  v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80);
  *(_QWORD *)&v10[v13[15]] = *(_QWORD *)&v11[v13[15]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v10[v13[16]] = *(_QWORD *)&v11[v13[16]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v10[v13[17]] = *(_QWORD *)&v11[v13[17]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v10[v13[18]] = *(_QWORD *)&v11[v13[18]];
  swift_retain();
  swift_release();
  v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB218);
  v15 = v14[11];
  v16 = *(void **)&v8[v15];
  v17 = *(void **)&v7[v15];
  *(_QWORD *)&v7[v15] = v16;
  v18 = v16;

  *(_QWORD *)&v7[v14[12]] = *(_QWORD *)&v8[v14[12]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v7[v14[13]] = *(_QWORD *)&v8[v14[13]];
  swift_retain();
  swift_release();
  v19 = a3[6];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  v23 = a3[8];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain();
  swift_release();
  v27 = a3[9];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  *(_QWORD *)((char *)a1 + v27) = *(_QWORD *)((char *)a2 + v27);
  swift_retain();
  swift_release();
  v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028) + 60);
  v31 = &v28[v30];
  v32 = &v29[v30];
  v40(&v28[v30], &v29[v30], v12);
  v33 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  *(_QWORD *)&v31[v33[15]] = *(_QWORD *)&v32[v33[15]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v31[v33[16]] = *(_QWORD *)&v32[v33[16]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v31[v33[17]] = *(_QWORD *)&v32[v33[17]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v31[v33[18]] = *(_QWORD *)&v32[v33[18]];
  swift_retain();
  swift_release();
  v34 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB228);
  v35 = v34[11];
  v36 = *(void **)&v29[v35];
  v37 = *(void **)&v28[v35];
  *(_QWORD *)&v28[v35] = v36;
  v38 = v36;

  *(_QWORD *)&v28[v34[12]] = *(_QWORD *)&v29[v34[12]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v28[v34[13]] = *(_QWORD *)&v29[v34[13]];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_1A9380C68(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  int *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  int *v24;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010) + 60);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_1A93F726C();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80);
  *(_QWORD *)&v10[v14[15]] = *(_QWORD *)&v11[v14[15]];
  *(_QWORD *)&v10[v14[16]] = *(_QWORD *)&v11[v14[16]];
  *(_QWORD *)&v10[v14[17]] = *(_QWORD *)&v11[v14[17]];
  *(_QWORD *)&v10[v14[18]] = *(_QWORD *)&v11[v14[18]];
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB218);
  *(_QWORD *)&v7[v15[11]] = *(_QWORD *)&v8[v15[11]];
  *(_QWORD *)&v7[v15[12]] = *(_QWORD *)&v8[v15[12]];
  *(_QWORD *)&v7[v15[13]] = *(_QWORD *)&v8[v15[13]];
  v16 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  v17 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028) + 60);
  v21 = &v18[v20];
  v22 = &v19[v20];
  v13(&v18[v20], &v19[v20], v12);
  v23 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  *(_QWORD *)&v21[v23[15]] = *(_QWORD *)&v22[v23[15]];
  *(_QWORD *)&v21[v23[16]] = *(_QWORD *)&v22[v23[16]];
  *(_QWORD *)&v21[v23[17]] = *(_QWORD *)&v22[v23[17]];
  *(_QWORD *)&v21[v23[18]] = *(_QWORD *)&v22[v23[18]];
  v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB228);
  *(_QWORD *)&v18[v24[11]] = *(_QWORD *)&v19[v24[11]];
  *(_QWORD *)&v18[v24[12]] = *(_QWORD *)&v19[v24[12]];
  *(_QWORD *)&v18[v24[13]] = *(_QWORD *)&v19[v24[13]];
  return a1;
}

_QWORD *sub_1A9380E38(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  int *v14;
  int *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  int *v25;
  uint64_t v26;
  void *v27;

  *a1 = *a2;
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_release();
  v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB010) + 60);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_1A93F726C();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40);
  v13(v10, v11, v12);
  v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF80);
  *(_QWORD *)&v10[v14[15]] = *(_QWORD *)&v11[v14[15]];
  swift_release();
  *(_QWORD *)&v10[v14[16]] = *(_QWORD *)&v11[v14[16]];
  swift_release();
  *(_QWORD *)&v10[v14[17]] = *(_QWORD *)&v11[v14[17]];
  swift_release();
  *(_QWORD *)&v10[v14[18]] = *(_QWORD *)&v11[v14[18]];
  swift_release();
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB218);
  v16 = v15[11];
  v17 = *(void **)&v7[v16];
  *(_QWORD *)&v7[v16] = *(_QWORD *)&v8[v16];

  *(_QWORD *)&v7[v15[12]] = *(_QWORD *)&v8[v15[12]];
  swift_release();
  *(_QWORD *)&v7[v15[13]] = *(_QWORD *)&v8[v15[13]];
  swift_release();
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_release();
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  swift_release();
  v18 = a3[9];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  swift_release();
  v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028) + 60);
  v22 = &v19[v21];
  v23 = &v20[v21];
  v13(&v19[v21], &v20[v21], v12);
  v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  *(_QWORD *)&v22[v24[15]] = *(_QWORD *)&v23[v24[15]];
  swift_release();
  *(_QWORD *)&v22[v24[16]] = *(_QWORD *)&v23[v24[16]];
  swift_release();
  *(_QWORD *)&v22[v24[17]] = *(_QWORD *)&v23[v24[17]];
  swift_release();
  *(_QWORD *)&v22[v24[18]] = *(_QWORD *)&v23[v24[18]];
  swift_release();
  v25 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB228);
  v26 = v25[11];
  v27 = *(void **)&v19[v26];
  *(_QWORD *)&v19[v26] = *(_QWORD *)&v20[v26];

  *(_QWORD *)&v19[v25[12]] = *(_QWORD *)&v20[v25[12]];
  swift_release();
  *(_QWORD *)&v19[v25[13]] = *(_QWORD *)&v20[v25[13]];
  swift_release();
  return a1;
}

uint64_t sub_1A93810C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A93810D4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB218);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB228);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1A938117C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1A9381188(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB218);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB228);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1A938122C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A93812D0(319);
  if (v0 <= 0x3F)
  {
    sub_1A9381350(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1A93812D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED2AB220)
  {
    v2 = type metadata accessor for TranscriptsBackgroundSessionDescriptor();
    v3 = sub_1A9066CA8(&qword_1ED2AB780, (uint64_t (*)(uint64_t))type metadata accessor for TranscriptsBackgroundSessionDescriptor, (uint64_t)&protocol conformance descriptor for TranscriptsBackgroundSessionDescriptor);
    v4 = type metadata accessor for AssetBackgroundSession(a1, v2, v3, (uint64_t)&protocol witness table for TTMLRequest);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED2AB220);
  }
}

void sub_1A9381350(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED2AB230)
  {
    v2 = type metadata accessor for ShazamSignatureBackgroundSessionDescriptor();
    v3 = sub_1A9066CA8(&qword_1ED2AB7B0, (uint64_t (*)(uint64_t))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor, (uint64_t)&protocol conformance descriptor for ShazamSignatureBackgroundSessionDescriptor);
    v4 = type metadata accessor for AssetBackgroundSession(a1, v2, v3, (uint64_t)&protocol witness table for ShazamSignatureRequest);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED2AB230);
  }
}

void sub_1A93813E0(uint64_t a1)
{
  sub_1A937D7B4(a1);
}

void sub_1A93813F8(uint64_t a1)
{
  sub_1A937D83C(a1);
}

uint64_t sub_1A93814B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A915B858(a1, a2);
}

uint64_t sub_1A9381504(void *a1)
{
  return sub_1A937D684(a1);
}

uint64_t sub_1A9381518(void *a1)
{
  return sub_1A937D704(a1);
}

uint64_t StorageChangeStream.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  type metadata accessor for StorageChangeStream.StorageChange(255, a1, a1, a2);
  v4 = sub_1A93F7998();
  v5 = sub_1A93F7980();
  swift_retain();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95F48], v4);
  sub_1A93F7BF0();
  v6 = sub_1A93F7818();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95AA0], v6);
  v7 = sub_1A93F7B24();
  swift_release();
  result = swift_release();
  *a3 = v5;
  a3[1] = v7;
  return result;
}

uint64_t StorageChangeStream.added(element:)(uint64_t a1, uint64_t a2)
{
  return sub_1A9381644(a1, a2);
}

uint64_t StorageChangeStream.removed(element:)(uint64_t a1, uint64_t a2)
{
  return sub_1A9381644(a1, a2);
}

uint64_t StorageChangeStream.updated(element:)(uint64_t a1, uint64_t a2)
{
  return sub_1A9381644(a1, a2);
}

uint64_t sub_1A9381644(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = type metadata accessor for StorageChangeStream.StorageChange(0, v3, v3, *(_QWORD *)(a2 + 24));
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(_QWORD *)(v3 - 8) + 16))((char *)&v10 - v7, a1, v3, v6);
  swift_storeEnumTagMultiPayload();
  sub_1A93F7974();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t StorageChangeStream.added<A>(elements:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A938171C(a1, a2, a3, a4, (void (*)(char *, uint64_t))StorageChangeStream.added(element:));
}

uint64_t StorageChangeStream.removed<A>(elements:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A938171C(a1, a2, a3, a4, (void (*)(char *, uint64_t))StorageChangeStream.removed(element:));
}

uint64_t sub_1A938171C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  char *v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  __int128 v28;

  v26 = a2;
  v27 = a5;
  v23 = a1;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F8A90();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - v11;
  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v19 = (char *)&v23 - v18;
  v25 = *(_OWORD *)v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v23, a3);
  sub_1A93F81A8();
  swift_getAssociatedConformanceWitness();
  sub_1A93F8A9C();
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v20(v12, 1, v6) != 1)
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    do
    {
      v21(v9, v12, v6);
      v28 = v25;
      v27(v9, v26);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_1A93F8A9C();
    }
    while (v20(v12, 1, v6) != 1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v19, AssociatedTypeWitness);
}

uint64_t StorageChangeStream.updated<A>(elements:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A938171C(a1, a2, a3, a4, (void (*)(char *, uint64_t))StorageChangeStream.updated(element:));
}

uint64_t *sub_1A938195C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if (v6 <= 7 && (unint64_t)(v5 + 1) <= 0x18 && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    v10 = *((unsigned __int8 *)a2 + v5);
    if (v10 >= 3)
    {
      if (v5 <= 3)
        v11 = v5;
      else
        v11 = 4;
      __asm { BR              X13 }
    }
    if (v10 == 2)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 2;
    }
    else if (v10 == 1)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  else
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1A9381A84(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))();
}

uint64_t sub_1A9381A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X12 }
  }
  (*(void (**)(uint64_t))(v4 + 16))(a1);
  *(_BYTE *)(a1 + v5) = v6;
  return a1;
}

uint64_t sub_1A9381B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    v8 = *(unsigned __int8 *)(a2 + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X11 }
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
    *(_BYTE *)(a1 + v7) = v8;
  }
  return a1;
}

uint64_t sub_1A9381C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X12 }
  }
  (*(void (**)(uint64_t))(v4 + 32))(a1);
  *(_BYTE *)(a1 + v5) = v6;
  return a1;
}

uint64_t sub_1A9381CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    v8 = *(unsigned __int8 *)(a2 + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X11 }
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
    *(_BYTE *)(a1 + v7) = v8;
  }
  return a1;
}

uint64_t sub_1A9381DBC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  if (!a2)
    return 0;
  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (a2 < 0xFE)
    goto LABEL_19;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_19;
      goto LABEL_12;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_19;
      goto LABEL_12;
    }
    if (v8 < 2)
    {
LABEL_19:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_19;
LABEL_12:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A9381E74 + 4 * byte_1A94214C9[(v4 - 1)]))();
}

void sub_1A9381EC0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1A938205C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 3u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A9382098 + 4 * byte_1A94214D7[v3]))();
}

void sub_1A93820E0(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (a2 > 2)
  {
    v5 = a2 - 3;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

void NSManagedObjectContext.unsafeCategory(forAdamID:)(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;

  v2 = v1;
  v4 = (void *)sub_1A93F8010();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1A9405950;
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  v6 = sub_1A90A92DC();
  *(_QWORD *)(v5 + 32) = 0x44496D616461;
  *(_QWORD *)(v5 + 40) = 0xE600000000000000;
  v7 = MEMORY[0x1E0DEE1F0];
  *(_QWORD *)(v5 + 96) = MEMORY[0x1E0DEE190];
  *(_QWORD *)(v5 + 104) = v7;
  *(_QWORD *)(v5 + 64) = v6;
  *(_QWORD *)(v5 + 72) = a1;
  v8 = (void *)sub_1A93F8754();
  v9 = objc_msgSend(v2, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_limit_, v4, v8, 0, 1, 1);

  if (!v9)
    goto LABEL_14;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
  v10 = sub_1A93F8310();

  if (!(v10 >> 62))
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v13 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (!v13)
    goto LABEL_10;
LABEL_4:
  if ((v10 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v11 = *(id *)(v10 + 32);
      goto LABEL_7;
    }
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  v11 = (id)MEMORY[0x1AF4129DC](0, v10);
LABEL_7:
  v12 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for MTCategory();
  if (!swift_dynamicCastClass())

}

Swift::OpaquePointer_optional __swiftcall NSManagedObjectContext.unsafeCategories(withRelationshipToPodcastAdamID:)(Swift::Int64 withRelationshipToPodcastAdamID)
{
  void *v1;
  void *v3;
  void *v4;
  id v5;
  Swift::Bool v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  Swift::OpaquePointer_optional result;

  v3 = (void *)sub_1A93F8010();
  v4 = (void *)_s18PodcastsFoundation10MTCategoryC47predicateForCategoriesWithRelationshipToPodcast10withAdamIDSo11NSPredicateCs5Int64V_tFZ_0(withRelationshipToPodcastAdamID);
  v5 = objc_msgSend(v1, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_, v3, v4, 0, 1);

  if (v5)
  {
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
    v7 = sub_1A93F8310();

    v8 = sub_1A9261858(v7);
    swift_bridgeObjectRelease();
    v9 = (void *)v8;
  }
  else
  {
    v9 = 0;
  }
  result.value._rawValue = v9;
  result.is_nil = v6;
  return result;
}

id sub_1A938247C(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;

  v4 = a1;
  v5 = (void *)sub_1A93F8010();
  v6 = (void *)_s18PodcastsFoundation10MTCategoryC47predicateForCategoriesWithRelationshipToPodcast10withAdamIDSo11NSPredicateCs5Int64V_tFZ_0(a3);
  v7 = objc_msgSend(v4, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_, v5, v6, 0, 1);

  if (!v7)
  {

    goto LABEL_5;
  }
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
  v8 = sub_1A93F8310();

  v9 = sub_1A9261858(v8);
  swift_bridgeObjectRelease();
  if (!v9)
  {
LABEL_5:
    v10 = 0;
    return v10;
  }
  type metadata accessor for MTCategory();
  v10 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t dispatch thunk of ImageContentProvider.content(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1A9164CD4;
  return v11(a1, a2, a3, a4);
}

uint64_t static MTEpisode.contentId(from:)(uint64_t a1)
{
  if (objc_msgSend((id)objc_opt_self(), sel_isEmpty_, a1))
    return 0;
  else
    return a1 & ~(a1 >> 63);
}

uint64_t MTEpisode.artworkModel.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint8_t *v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  char v32;
  id v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  id v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  id v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  id v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  char v95;
  __int16 v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  __int16 v101;
  uint64_t v102;
  unint64_t v103;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_uuid);
  if (!v4)
  {
    if (qword_1ED2A3F00 != -1)
      swift_once();
    v22 = sub_1A93F7698();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED2A3EE0);
    v23 = sub_1A93F7674();
    v24 = sub_1A93F879C();
    if (!os_log_type_enabled(v23, v24))
      goto LABEL_17;
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    _os_log_impl(&dword_1A904E000, v23, v24, "Critical issue: Show with nil UUID", v25, 2u);
    v26 = v25;
LABEL_16:
    MEMORY[0x1AF41411C](v26, -1, -1);
LABEL_17:

LABEL_19:
    sub_1A9382CE0(&v80);
    return sub_1A9382D00((uint64_t)&v80, a1);
  }
  v5 = v4;
  v6 = sub_1A93F8040();
  v8 = v7;

  v9 = objc_msgSend(v2, sel_artworkTemplateURL);
  if (!v9)
  {
LABEL_12:
    if (qword_1ED2AD130 != -1)
      swift_once();
    v27 = sub_1A93F7698();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED2AD110);
    swift_bridgeObjectRetain();
    v23 = sub_1A93F7674();
    v28 = sub_1A93F8790();
    if (!os_log_type_enabled(v23, v28))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_19;
    }
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    *(_QWORD *)&v80 = v30;
    *(_DWORD *)v29 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A906436C(v6, v8, (uint64_t *)&v80);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v23, v28, "Unable to construct artwork model, episode (%s) does not have an artworkTemplateURL or invalid size", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v30, -1, -1);
    v26 = v29;
    goto LABEL_16;
  }
  v10 = v9;
  v11 = sub_1A93F8040();
  v13 = v12;

  objc_msgSend(v2, sel_artworkWidth);
  if (v14 <= 10.0 || (objc_msgSend(v2, sel_artworkHeight), v15 <= 10.0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v79 = v11;
  v16 = objc_msgSend(v2, sel_artworkBackgroundColor);
  if (v16)
  {
    v17 = v16;
    v18 = sub_1A93F8040();
    v20 = v19;

    swift_bridgeObjectRetain();
    v21 = sub_1A9393114(v18, v20);
    v77 = v32;
    v78 = v21;
    swift_bridgeObjectRelease();
  }
  else
  {
    v78 = 0;
    v77 = -1;
  }
  v33 = objc_msgSend(v2, sel_artworkTextPrimaryColor);
  if (v33)
  {
    v34 = v33;
    v35 = sub_1A93F8040();
    v37 = v36;

    swift_bridgeObjectRetain();
    v38 = sub_1A9393114(v35, v37);
    v75 = v39;
    v76 = v38;
    swift_bridgeObjectRelease();
  }
  else
  {
    v76 = 0;
    v75 = -1;
  }
  v40 = objc_msgSend(v2, sel_artworkTextSecondaryColor);
  if (v40)
  {
    v41 = v40;
    v42 = sub_1A93F8040();
    v44 = v43;

    swift_bridgeObjectRetain();
    v45 = sub_1A9393114(v42, v44);
    v73 = v46;
    v74 = v45;
    swift_bridgeObjectRelease();
  }
  else
  {
    v74 = 0;
    v73 = -1;
  }
  v47 = objc_msgSend(v2, sel_artworkTextTertiaryColor);
  if (v47)
  {
    v48 = v47;
    v49 = sub_1A93F8040();
    v51 = v50;

    swift_bridgeObjectRetain();
    v52 = sub_1A9393114(v49, v51);
    v71 = v53;
    v72 = v52;
    swift_bridgeObjectRelease();
  }
  else
  {
    v72 = 0;
    v71 = -1;
  }
  v54 = objc_msgSend(v2, sel_artworkTextQuaternaryColor);
  if (v54)
  {
    v55 = v54;
    v56 = sub_1A93F8040();
    v58 = v57;

    swift_bridgeObjectRetain();
    v59 = sub_1A9393114(v56, v58);
    v61 = v60;
    swift_bridgeObjectRelease();
  }
  else
  {
    v59 = 0;
    v61 = -1;
  }
  v62 = objc_msgSend(v2, sel_title);
  if (v62)
  {
    v63 = v62;
    v64 = sub_1A93F8040();
    v66 = v65;

  }
  else
  {
    v64 = 0;
    v66 = 0;
  }
  v67 = qword_1ED2AD2E8;
  swift_bridgeObjectRetain();
  if (v67 != -1)
    swift_once();
  *(_QWORD *)&v80 = v79;
  *((_QWORD *)&v80 + 1) = v13;
  v81 = v6;
  v82 = v8;
  v83 = 0;
  v84 = 0x4082C00000000000;
  v85 = 0x4082C00000000000;
  v86 = v78;
  v87 = v77;
  v88 = v76;
  v89 = v75;
  v90 = v74;
  v91 = v73;
  v92 = v72;
  v93 = v71;
  v94 = v59;
  v95 = v61;
  v96 = 0;
  v97 = 1;
  v98 = v64;
  v99 = v66;
  v100 = byte_1ED2AD2D8;
  v101 = 0;
  v102 = v6;
  v103 = v8;
  nullsub_1(&v80, v68, v69, v70);
  return sub_1A9382D00((uint64_t)&v80, a1);
}

double sub_1A9382CE0(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1A9382D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD250);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t static MTPodcast.importedShowArtworkURL(for:)()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD000000000000016;
}

uint64_t MTPodcast.artworkModel.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  __int16 v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  __int16 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char v80;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_uuid);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1A93F8040();
    v8 = v7;

    v9 = objc_msgSend(v2, sel_artworkTemplateURL);
    v47 = v6;
    if (v9 || (v9 = objc_msgSend(v2, sel_imageURL)) != 0)
    {
      v10 = v9;
      v11 = sub_1A93F8040();
      v42 = v12;
      v43 = v11;

    }
    else
    {
      sub_1A93F8C70();
      swift_bridgeObjectRelease();
      sub_1A93F810C();
      v42 = 0x80000001A944F0E0;
      v43 = 0xD000000000000016;
    }
    v13 = objc_msgSend(v2, sel_artworkPrimaryColor);
    v48 = a1;
    if (v13)
    {
      v14 = v13;
      v15 = sub_1A93F8040();
      v17 = v16;

      swift_bridgeObjectRetain();
      v18 = sub_1A9393114(v15, v17);
      v40 = v24;
      v41 = v18;
      swift_bridgeObjectRelease();
    }
    else
    {
      v41 = 0;
      v40 = -1;
    }
    MTPodcast.artworkTextColors.getter((uint64_t)&v73);
    v46 = v73;
    v25 = v74;
    v26 = v75;
    v27 = v77;
    v28 = v78;
    v29 = v79;
    v44 = v80;
    v45 = v76;
    v30 = objc_msgSend(v2, sel_title);
    if (v30)
    {
      v31 = v30;
      v32 = sub_1A93F8040();
      v34 = v33;

    }
    else
    {
      v32 = 0;
      v34 = 0;
    }
    v35 = qword_1ED2AD2E8;
    swift_bridgeObjectRetain();
    if (v35 != -1)
      swift_once();
    *(_QWORD *)&v49 = v43;
    *((_QWORD *)&v49 + 1) = v42;
    v50 = v47;
    v51 = v8;
    v52 = 1;
    v53 = 0x4082C00000000000;
    v54 = 0x4082C00000000000;
    v55 = v41;
    v56 = v40;
    v57 = v46;
    v58 = v25;
    v59 = v26;
    v60 = v45;
    v61 = v27;
    v62 = v28;
    v63 = v29;
    v64 = v44;
    v65 = 0;
    v66 = 1;
    v67 = v32;
    v68 = v34;
    v69 = byte_1ED2AD2D8;
    v70 = 0;
    v71 = v47;
    v72 = v8;
    nullsub_1(&v49, v36, v37, v38);
    v23 = v48;
  }
  else
  {
    if (qword_1ED2A3F00 != -1)
      swift_once();
    v19 = sub_1A93F7698();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED2A3EE0);
    v20 = sub_1A93F7674();
    v21 = sub_1A93F879C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1A904E000, v20, v21, "Critical issue: Show with nil UUID", v22, 2u);
      MEMORY[0x1AF41411C](v22, -1, -1);
    }

    sub_1A9382CE0(&v49);
    v23 = a1;
  }
  return sub_1A9382D00((uint64_t)&v49, v23);
}

id MTPodcast.artworkTextColors.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A93836E0((SEL *)&selRef_artworkTextPrimaryColor, (SEL *)&selRef_artworkTextSecondaryColor, (SEL *)&selRef_artworkTextTertiaryColor, (SEL *)&selRef_artworkTextQuaternaryColor, a1);
}

uint64_t MTPodcast.uberBackgroundArtworkModel.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint8_t *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  __int16 v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  __int16 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;

  v3 = objc_msgSend(v1, sel_uuid);
  if (!v3)
  {
    if (qword_1ED2A3F00 != -1)
      swift_once();
    v19 = sub_1A93F7698();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED2A3EE0);
    v20 = sub_1A93F7674();
    v21 = sub_1A93F879C();
    if (!os_log_type_enabled(v20, v21))
      goto LABEL_15;
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_1A904E000, v20, v21, "Critical issue: Show with nil UUID", v22, 2u);
    v23 = v22;
LABEL_14:
    MEMORY[0x1AF41411C](v23, -1, -1);
LABEL_15:

LABEL_16:
    sub_1A9382CE0(&v54);
    v28 = a1;
    return sub_1A9382D00((uint64_t)&v54, v28);
  }
  v4 = v3;
  v5 = sub_1A93F8040();
  v7 = v6;

  v8 = objc_msgSend(v1, sel_uberBackgroundImageURL);
  if (!v8)
  {
    if (qword_1ED2AD130 != -1)
      swift_once();
    v24 = sub_1A93F7698();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED2AD110);
    swift_bridgeObjectRetain();
    v20 = sub_1A93F7674();
    v25 = sub_1A93F8790();
    if (!os_log_type_enabled(v20, v25))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    *(_QWORD *)&v54 = v27;
    *(_DWORD *)v26 = 136315138;
    swift_bridgeObjectRetain();
    v78 = sub_1A906436C(v5, v7, (uint64_t *)&v54);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v20, v25, "Unable to construct artwork model, show (%s) does not have required uber background image url", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v27, -1, -1);
    v23 = v26;
    goto LABEL_14;
  }
  v9 = v8;
  v52 = v5;
  v10 = sub_1A93F8040();
  v12 = v11;

  v13 = objc_msgSend(v1, sel_uberBackgroundJoeColor);
  v53 = a1;
  v50 = v12;
  v51 = v10;
  if (v13)
  {
    v14 = v13;
    v15 = sub_1A93F8040();
    v17 = v16;

    swift_bridgeObjectRetain();
    v18 = sub_1A9393114(v15, v17);
    v45 = v29;
    v46 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    v46 = 0;
    v45 = -1;
  }
  MTPodcast.uberBackgroundTextColors.getter((uint64_t)&v78);
  v30 = v78;
  v49 = v79;
  v48 = v80;
  v31 = v81;
  v32 = v82;
  v33 = v83;
  v34 = v84;
  v47 = v85;
  v35 = objc_msgSend(v1, sel_title);
  if (v35)
  {
    v36 = v35;
    v37 = sub_1A93F8040();
    v39 = v38;

  }
  else
  {
    v37 = 0;
    v39 = 0;
  }
  v40 = qword_1ED2AD2E8;
  swift_bridgeObjectRetain();
  if (v40 != -1)
    swift_once();
  *(_QWORD *)&v54 = v51;
  *((_QWORD *)&v54 + 1) = v50;
  v55 = v52;
  v56 = v7;
  v57 = 1;
  v58 = 0x40A0000000000000;
  v59 = 0x40A5580000000000;
  v60 = v46;
  v61 = v45;
  v62 = v30;
  v63 = v49;
  v64 = v48;
  v65 = v31;
  v66 = v32;
  v67 = v33;
  v68 = v34;
  v69 = v47;
  v70 = 3;
  v71 = 1;
  v72 = v37;
  v73 = v39;
  v74 = byte_1ED2AD2D8;
  v75 = 0;
  v76 = v51;
  v77 = v50;
  nullsub_1(&v54, v41, v42, v43);
  v28 = v53;
  return sub_1A9382D00((uint64_t)&v54, v28);
}

id MTPodcast.uberBackgroundTextColors.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A93836E0((SEL *)&selRef_uberArtworkTextPrimaryColor, (SEL *)&selRef_uberArtworkTextSecondaryColor, (SEL *)&selRef_uberArtworkTextTertiaryColor, (SEL *)&selRef_uberArtworkTextQuaternaryColor, a1);
}

id sub_1A93836E0@<X0>(SEL *a1@<X0>, SEL *a2@<X1>, SEL *a3@<X2>, SEL *a4@<X3>, uint64_t a5@<X8>)
{
  void *v5;
  void *v8;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  id result;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  uint64_t v41;

  v8 = v5;
  v10 = objc_msgSend(v5, *a1);
  if (v10)
  {
    v11 = v10;
    v12 = sub_1A93F8040();
    v14 = v13;

    swift_bridgeObjectRetain();
    v15 = sub_1A9393114(v12, v14);
    v17 = v16;
    v41 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    v41 = 0;
    v17 = -1;
  }
  v18 = objc_msgSend(v8, *a2);
  if (v18)
  {
    v19 = v18;
    v20 = sub_1A93F8040();
    v22 = v21;

    swift_bridgeObjectRetain();
    v23 = sub_1A9393114(v20, v22);
    v25 = v24;
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
    v25 = -1;
  }
  v26 = objc_msgSend(v8, *a3);
  if (v26)
  {
    v27 = v26;
    v28 = sub_1A93F8040();
    v30 = v29;

    swift_bridgeObjectRetain();
    v31 = sub_1A9393114(v28, v30);
    v33 = v32;
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = 0;
    v33 = -1;
  }
  result = objc_msgSend(v8, *a4);
  v35 = result;
  if (result)
  {
    v36 = sub_1A93F8040();
    v38 = v37;

    swift_bridgeObjectRetain();
    v35 = (void *)sub_1A9393114(v36, v38);
    v40 = v39;
    result = (id)swift_bridgeObjectRelease();
  }
  else
  {
    v40 = -1;
  }
  *(_QWORD *)a5 = v41;
  *(_BYTE *)(a5 + 8) = v17;
  *(_QWORD *)(a5 + 16) = v23;
  *(_BYTE *)(a5 + 24) = v25;
  *(_QWORD *)(a5 + 32) = v31;
  *(_BYTE *)(a5 + 40) = v33;
  *(_QWORD *)(a5 + 48) = v35;
  *(_BYTE *)(a5 + 56) = v40;
  return result;
}

ValueMetadata *type metadata accessor for MediaAPIProviderFactory()
{
  return &type metadata for MediaAPIProviderFactory;
}

ValueMetadata *type metadata accessor for DefaultProviderFactory()
{
  return &type metadata for DefaultProviderFactory;
}

void sub_1A9383960(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  os_log_type_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;

  if (a1 == 1)
  {
    if (qword_1EEAB6D68 != -1)
      swift_once();
    v3 = sub_1A93F7698();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EEABA690);
    v4 = sub_1A93F879C();
    v5 = sub_1A93F7674();
    v6 = v4;
    if (os_log_type_enabled(v5, v4))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v11 = v8;
      *(_DWORD *)v7 = 136446210;
      sub_1A906436C(0x62694C6C61636F6CLL, 0xEC00000079726172, &v11);
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v5, v6, "Asking for %{public}s in a MAPI-only configuration. This is not supported.", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v8, -1, -1);
      MEMORY[0x1AF41411C](v7, -1, -1);
    }

    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    v9 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MediaRequestController()), sel_init);
    v10 = objc_msgSend(objc_allocWithZone((Class)_s19TaskMetricsDelegateCMa()), sel_init);
    *(_QWORD *)(a2 + 24) = &_s16MediaAPIProviderVN;
    *(_QWORD *)(a2 + 32) = &off_1E54DC680;
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
  }
}

uint64_t sub_1A9383B40(char a1)
{
  char v1;

  if (a1)
    v1 = sub_1A93F90C0();
  else
    v1 = 1;
  swift_bridgeObjectRelease();
  return v1 & 1;
}

id sub_1A9383BD4@<X0>(unsigned __int8 a1@<W0>, _QWORD *a2@<X8>)
{
  ValueMetadata *v3;
  id result;
  id v5;
  _UNKNOWN **v6;

  if (a1 - 1 >= 2)
  {
    v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MediaRequestController()), sel_init);
    result = objc_msgSend(objc_allocWithZone((Class)_s19TaskMetricsDelegateCMa()), sel_init);
    a2[1] = result;
    v6 = &off_1E54DC680;
    v3 = &_s16MediaAPIProviderVN;
  }
  else
  {
    v3 = (ValueMetadata *)_s20LocalLibraryProviderCMa();
    result = (id)swift_allocObject();
    v5 = result;
    v6 = &off_1E54D93C0;
  }
  a2[3] = v3;
  a2[4] = v6;
  *a2 = v5;
  return result;
}

BOOL sub_1A9383C7C(char a1)
{
  return a1 == 2;
}

uint64_t sub_1A9383C90(char a1)
{
  char v1;

  if (a1)
    v1 = sub_1A93F90C0();
  else
    v1 = 1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

void sub_1A9383D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v4[6];

  v4[2] = a4;
  v4[3] = a1;
  v4[4] = a2;
  sub_1A905F5EC((void (*)(uint64_t))sub_1A93847A8, (uint64_t)v4, a3);
}

uint64_t sub_1A9383D80(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9383DC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 128);
  swift_beginAccess();
  v4 = sub_1A93F8A90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1A9383E34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 128);
  swift_beginAccess();
  v4 = sub_1A93F8A90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

void sub_1A9383EAC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[16];
  uint64_t v3;
  uint64_t (*v4)@<X0>(uint64_t@<X8>);
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  v3 = sub_1A93F8A90();
  v4 = sub_1A9383F28;
  v5 = v0;
  sub_1A905F5EC((void (*)(uint64_t))sub_1A93847A8, (uint64_t)v2, v1);
}

uint64_t sub_1A9383F28@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9383DC4(a1);
}

char *SubscriptionSubject.__allocating_init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v6;

  swift_allocObject();
  v6 = sub_1A93844CC(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v6;
}

char *SubscriptionSubject.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;

  v5 = sub_1A93844CC(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v5;
}

uint64_t sub_1A9384000(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A93842E4(a1);
    return swift_release();
  }
  return result;
}

_QWORD *SubscriptionSubject.deinit()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;

  v1 = v0;
  if (v0[3])
  {
    swift_retain();
    sub_1A93F7938();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v2 = (char *)v0 + *(_QWORD *)(*v0 + 128);
  v3 = sub_1A93F8A90();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v1;
}

uint64_t SubscriptionSubject.__deallocating_deinit()
{
  SubscriptionSubject.deinit();
  return swift_deallocClassInstance();
}

void sub_1A938410C(void (*a1)(char *), uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  _QWORD *v15;
  _QWORD v16[6];

  v16[0] = a2;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v6 = sub_1A93F8A90();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v16 - v8;
  v10 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (os_unfair_lock_s *)(v2[2] + 16);
  os_unfair_lock_lock(v14);
  sub_1A9383DC4((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = v5;
    v15[3] = *(_QWORD *)(v4 + 88);
    v15[4] = *(_QWORD *)(v4 + 96);
    v15[5] = a1;
    v15[6] = v16[0];
    v16[4] = sub_1A9384674;
    v16[5] = v15;
    swift_beginAccess();
    swift_getFunctionTypeMetadata1();
    sub_1A93F83D0();
    swift_retain();
    sub_1A93F83AC();
    swift_endAccess();
    os_unfair_lock_unlock(v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v9, v5);
    os_unfair_lock_unlock(v14);
    a1(v13);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v5);
  }
}

uint64_t sub_1A93842E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t FunctionTypeMetadata1;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  char v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  BOOL v17;
  uint64_t result;
  _BYTE v19[24];

  v3 = *(_QWORD *)(*v1 + 80);
  v4 = sub_1A93F8A90();
  MEMORY[0x1E0C80A78](v4);
  v6 = &v19[-v5];
  v7 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v7);
  v8 = *(_QWORD *)(v3 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v3);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v3);
  sub_1A9383E34((uint64_t)v6);
  swift_beginAccess();
  v9 = v1[4];
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  swift_bridgeObjectRetain();
  v11 = sub_1A93F8370();
  swift_beginAccess();
  v1[4] = v11;
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);
  if (!MEMORY[0x1AF4120D0](v9, FunctionTypeMetadata1))
    return swift_bridgeObjectRelease();
  v12 = 0;
  for (i = v9 + 40; ; i += 16)
  {
    v14 = sub_1A93F8388();
    sub_1A93F8340();
    if ((v14 & 1) == 0)
      break;
    v15 = *(void (**)(uint64_t))(i - 8);
    v16 = v12 + 1;
    v17 = __OFADD__(v12, 1);
    result = swift_retain();
    if (v17)
      goto LABEL_11;
    v15(a1);
    swift_release();
    ++v12;
    if (v16 == MEMORY[0x1AF4120D0](v9, FunctionTypeMetadata1))
      return swift_bridgeObjectRelease();
  }
  result = sub_1A93F8CB8();
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_1A93844CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = v3;
  v7 = *(_QWORD *)v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  *((_QWORD *)v4 + 2) = v8;
  *((_QWORD *)v4 + 3) = 0;
  v9 = *(_QWORD *)(v7 + 80);
  swift_getFunctionTypeMetadata1();
  *((_QWORD *)v4 + 4) = sub_1A93F7EC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(&v4[*(_QWORD *)(*(_QWORD *)v4 + 128)], 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v9;
  v11 = *(_QWORD *)(v7 + 88);
  v10[3] = v11;
  v10[4] = a2;
  v10[5] = a3;
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v9;
  v13[3] = v11;
  v13[4] = a2;
  v13[5] = a3;
  v13[6] = v12;
  swift_retain();
  v14 = sub_1A93F7BA8();
  swift_release();
  swift_release();
  swift_release();
  *((_QWORD *)v4 + 3) = v14;
  swift_release();
  return v4;
}

uint64_t sub_1A9384650()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9384674()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_1A9384694()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F8A90();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for SubscriptionSubject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubscriptionSubject);
}

uint64_t method lookup function for SubscriptionSubject()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SubscriptionSubject.value.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of SubscriptionSubject.__allocating_init<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of SubscriptionSubject.getValue(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t sub_1A9384764()
{
  return swift_deallocObject();
}

uint64_t sub_1A9384774()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9384798(uint64_t a1)
{
  return sub_1A9384000(a1);
}

uint64_t sub_1A93847A8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1A93847CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  void *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[6];
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;

  v3 = v2;
  v37 = sub_1A93F7D58();
  v40 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v36 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F7DB8();
  v38 = *(_QWORD *)(v7 - 8);
  v39 = v7;
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTMLRequest();
  v32 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v32 + 64);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1A93F726C();
  v30 = *(_QWORD *)(v31 - 8);
  v12 = *(_QWORD *)(v30 + 64);
  MEMORY[0x1E0C80A78](v31);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - v15;
  v34 = (char *)&v30 - v15;
  sub_1A93859F8((uint64_t (*)(_QWORD, double))type metadata accessor for TTMLRequest, (uint64_t)&v30 - v15);
  sub_1A9385C10(a1, a2);
  v33 = *(_QWORD *)(v2 + qword_1ED2ACE28);
  v17 = *(_OWORD *)(a1 + 16);
  v43 = *(_OWORD *)a1;
  v44 = v17;
  v45 = *(_OWORD *)(a1 + 32);
  v46 = *(_QWORD *)(a1 + 48);
  sub_1A9064630(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v18 = v30;
  v19 = v16;
  v20 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v13, v19, v31);
  v21 = (*(unsigned __int8 *)(v32 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v22 = (v10 + *(unsigned __int8 *)(v18 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v3;
  v24 = v44;
  *(_OWORD *)(v23 + 24) = v43;
  *(_OWORD *)(v23 + 40) = v24;
  *(_OWORD *)(v23 + 56) = v45;
  *(_QWORD *)(v23 + 72) = v46;
  sub_1A9116174((uint64_t)v11, v23 + v21, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v23 + v22, v13, v20);
  aBlock[4] = sub_1A9389E9C;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_72;
  v25 = _Block_copy(aBlock);
  sub_1A9298F10(a1);
  swift_retain();
  v26 = v35;
  sub_1A93F7D88();
  v41 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  v27 = v36;
  v28 = v37;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v26, v27, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v28);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v39);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v34, v20);
  return swift_release();
}

uint64_t sub_1A9384B9C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[7];

  v3 = v2;
  v34 = a1;
  v39 = sub_1A93F7D58();
  v42 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v38 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v40 = *(_QWORD *)(v6 - 8);
  v41 = v6;
  MEMORY[0x1E0C80A78](v6);
  v37 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ShazamSignatureRequest();
  v33 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v33 + 64);
  MEMORY[0x1E0C80A78](v8);
  v31 = (uint64_t)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1A93F726C();
  v30 = *(_QWORD *)(v32 - 8);
  v10 = *(_QWORD *)(v30 + 64);
  MEMORY[0x1E0C80A78](v32);
  v29 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v36 = (char *)&v29 - v12;
  sub_1A93859F8((uint64_t (*)(_QWORD, double))type metadata accessor for ShazamSignatureRequest, (uint64_t)&v29 - v12);
  v14 = v34;
  sub_1A9385D4C(v34, a2);
  v35 = *(_QWORD *)(v2 + qword_1ED2ACE28);
  v15 = a2;
  v16 = v31;
  sub_1A9064630(v15, v31, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v17 = v30;
  v18 = v13;
  v19 = v32;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v18, v32);
  v20 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v21 = (v9 + *(unsigned __int8 *)(v17 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v3;
  *(_QWORD *)(v22 + 24) = v14;
  sub_1A9116174(v16, v22 + v20, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v22 + v21, v29, v19);
  aBlock[4] = sub_1A938A39C;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_6_2;
  v23 = _Block_copy(aBlock);
  v24 = v14;
  swift_retain();
  v25 = v37;
  sub_1A93F7D88();
  v43 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  v26 = v38;
  v27 = v39;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v25, v26, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v27);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v41);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v36, v19);
  return swift_release();
}

uint64_t sub_1A9384F24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __int128 v31;
  void *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t aBlock;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  void *v56;
  void (*v57)();
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v42 = a1;
  v46 = sub_1A93F7D58();
  v49 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v45 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F7DB8();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  MEMORY[0x1E0C80A78](v4);
  v44 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ShazamSignatureRequest();
  v40 = *(_QWORD *)(v6 - 8);
  v41 = *(_QWORD *)(v40 + 64);
  MEMORY[0x1E0C80A78](v6);
  v38 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7158();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1A93F726C();
  v12 = *(_QWORD *)(v37 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v37);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v51 = (char *)&v37 - v16;
  sub_1A92A841C(a2);
  v17 = sub_1A93858EC();
  v19 = v18;
  sub_1A92A8460(a2);
  aBlock = v17;
  v54 = v19;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CAFD78], v8);
  sub_1A90828B0();
  sub_1A93F7260();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  v20 = v51;
  sub_1A93F71C4();
  v43 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21 = v37;
  v43(v14, v37);
  v22 = v50;
  v23 = v42;
  sub_1A9385E58(v42, (__int128 *)a2, (uint64_t (*)(_QWORD, double))type metadata accessor for ShazamSignatureRequest, &qword_1EEABED08, (uint64_t (*)(_QWORD, uint64_t))sub_1A938A69C, (void (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_1A930FC48);
  v39 = *(_QWORD *)(v22 + qword_1ED2ACE28);
  v24 = v38;
  sub_1A9064630(v23, v38, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v25 = *(_OWORD *)(a2 + 16);
  v59 = *(_OWORD *)a2;
  v60 = v25;
  v61 = *(_QWORD *)(a2 + 32);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v20, v21);
  v26 = (*(unsigned __int8 *)(v40 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v27 = (v41 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (*(unsigned __int8 *)(v12 + 80) + v27 + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v50;
  sub_1A9116174(v24, v29 + v26, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v30 = v29 + v27;
  v31 = v60;
  *(_OWORD *)v30 = v59;
  *(_OWORD *)(v30 + 16) = v31;
  *(_QWORD *)(v30 + 32) = v61;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v29 + v28, v14, v21);
  v57 = sub_1A938A658;
  v58 = v29;
  aBlock = MEMORY[0x1E0C809B0];
  v54 = 1107296256;
  v55 = sub_1A908A91C;
  v56 = &block_descriptor_12_3;
  v32 = _Block_copy(&aBlock);
  sub_1A92A841C(a2);
  swift_retain();
  v33 = v44;
  sub_1A93F7D88();
  v52 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  v34 = v45;
  v35 = v46;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v33, v34, v32);
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v48);
  v43(v51, v21);
  return swift_release();
}

uint64_t sub_1A9385408(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __int128 v31;
  void *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t aBlock;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  void *v56;
  void (*v57)();
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v42 = a1;
  v46 = sub_1A93F7D58();
  v49 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v45 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F7DB8();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  MEMORY[0x1E0C80A78](v4);
  v44 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTMLRequest();
  v40 = *(_QWORD *)(v6 - 8);
  v41 = *(_QWORD *)(v40 + 64);
  MEMORY[0x1E0C80A78](v6);
  v38 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7158();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1A93F726C();
  v12 = *(_QWORD *)(v37 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v37);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v51 = (char *)&v37 - v16;
  sub_1A92A841C(a2);
  v17 = sub_1A93858EC();
  v19 = v18;
  sub_1A92A8460(a2);
  aBlock = v17;
  v54 = v19;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CAFD78], v8);
  sub_1A90828B0();
  sub_1A93F7260();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  v20 = v51;
  sub_1A93F71C4();
  v43 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21 = v37;
  v43(v14, v37);
  v22 = v50;
  v23 = v42;
  sub_1A9385E58(v42, (__int128 *)a2, (uint64_t (*)(_QWORD, double))type metadata accessor for TTMLRequest, &qword_1EEABED10, (uint64_t (*)(_QWORD, uint64_t))sub_1A938A9E4, (void (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_1A930FC54);
  v39 = *(_QWORD *)(v22 + qword_1ED2ACE28);
  v24 = v38;
  sub_1A9064630(v23, v38, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v25 = *(_OWORD *)(a2 + 16);
  v59 = *(_OWORD *)a2;
  v60 = v25;
  v61 = *(_QWORD *)(a2 + 32);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v20, v21);
  v26 = (*(unsigned __int8 *)(v40 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v27 = (v41 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (*(unsigned __int8 *)(v12 + 80) + v27 + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v50;
  sub_1A9116174(v24, v29 + v26, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v30 = v29 + v27;
  v31 = v60;
  *(_OWORD *)v30 = v59;
  *(_OWORD *)(v30 + 16) = v31;
  *(_QWORD *)(v30 + 32) = v61;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v29 + v28, v14, v21);
  v57 = sub_1A938A8F8;
  v58 = v29;
  aBlock = MEMORY[0x1E0C809B0];
  v54 = 1107296256;
  v55 = sub_1A908A91C;
  v56 = &block_descriptor_18_3;
  v32 = _Block_copy(&aBlock);
  sub_1A92A841C(a2);
  swift_retain();
  v33 = v44;
  sub_1A93F7D88();
  v52 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  v34 = v45;
  v35 = v46;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v33, v34, v32);
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v48);
  v43(v51, v21);
  return swift_release();
}

unint64_t sub_1A93858EC()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F9060();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

void sub_1A93859E0(uint64_t a1@<X8>)
{
  sub_1A93859F8((uint64_t (*)(_QWORD, double))type metadata accessor for TTMLRequest, a1);
}

void sub_1A93859EC(uint64_t a1@<X8>)
{
  sub_1A93859F8((uint64_t (*)(_QWORD, double))type metadata accessor for ShazamSignatureRequest, a1);
}

void sub_1A93859F8(uint64_t (*a1)(_QWORD, double)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD v13[6];

  v13[3] = a2;
  v4 = sub_1A93F7158();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F726C();
  v13[1] = *(_QWORD *)(v8 - 8);
  v13[2] = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = a1(0, v9);
  v11 = (_QWORD *)(v2 + *(int *)(v10 + 24));
  v12 = v11[1];
  v13[4] = *v11;
  v13[5] = v12;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CAFD78], v4);
  sub_1A90828B0();
  swift_bridgeObjectRetain();
  sub_1A93F7260();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_1A9385B40()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A93F71C4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 120) + 8))(v0, *(_QWORD *)(v1 - 112));
}

uint64_t sub_1A9385C10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  os_unfair_lock_s *v15;
  unint64_t *p_os_unfair_lock_opaque;
  os_unfair_lock_s *v17;
  _OWORD v19[4];
  uint64_t v20;

  v3 = v2;
  v6 = sub_1A93F738C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_OWORD *)(a1 + 16);
  v19[1] = *(_OWORD *)a1;
  v19[2] = v10;
  v19[3] = *(_OWORD *)(a1 + 32);
  v20 = *(_QWORD *)(a1 + 48);
  sub_1A9298F10(a1);
  TranscriptModel.inMemorySize.getter();
  v12 = v11;
  sub_1A93F7374();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABECF8);
  v13 = swift_allocObject();
  v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v13 + 32) = v14;
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(v13 + 72) = v12;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v13 + *(_QWORD *)(*(_QWORD *)v13 + 136), v9, v6);
  v15 = *(os_unfair_lock_s **)(v3 + 16);
  p_os_unfair_lock_opaque = (unint64_t *)&v15[4]._os_unfair_lock_opaque;
  v17 = v15 + 10;
  os_unfair_lock_lock(v15 + 10);
  sub_1A9387E30(p_os_unfair_lock_opaque, v3, v13, a2);
  os_unfair_lock_unlock(v17);
  return swift_release();
}

uint64_t sub_1A9385D4C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  unint64_t *p_os_unfair_lock_opaque;
  os_unfair_lock_s *v16;
  uint64_t v18;

  v3 = v2;
  v6 = sub_1A93F738C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1;
  SHSignature.inMemorySize.getter();
  v12 = v11;
  sub_1A93F7374();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABED00);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = v10;
  *((_QWORD *)v13 + 3) = v12;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v13[*(_QWORD *)(*(_QWORD *)v13 + 136)], v9, v6);
  v14 = *(os_unfair_lock_s **)(v3 + 16);
  p_os_unfair_lock_opaque = (unint64_t *)&v14[4]._os_unfair_lock_opaque;
  v16 = v14 + 10;
  os_unfair_lock_lock(v14 + 10);
  sub_1A9387F0C(p_os_unfair_lock_opaque, v3, (uint64_t)v13, a2);
  os_unfair_lock_unlock(v16);
  return swift_release();
}

uint64_t sub_1A9385E58(uint64_t a1, __int128 *a2, uint64_t (*a3)(_QWORD, double), uint64_t *a4, uint64_t (*a5)(_QWORD, uint64_t), void (*a6)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  void (*v26[2])(uint64_t, unint64_t, uint64_t, uint64_t);
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _OWORD v30[2];
  uint64_t v31;

  v26[0] = a6;
  v12 = sub_1A93F738C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a3(0, v14);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v26 - v18;
  v20 = a2[1];
  v27 = *a2;
  v28 = v20;
  v29 = *((_QWORD *)a2 + 4);
  sub_1A9064630(a1, (uint64_t)v26 - v18, (uint64_t (*)(_QWORD))a3);
  sub_1A93F7374();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v21 = swift_allocObject();
  sub_1A9116174((uint64_t)v19, v21 + *(_QWORD *)(*(_QWORD *)v21 + 120), (uint64_t (*)(_QWORD))a3);
  *(_QWORD *)(v21 + *(_QWORD *)(*(_QWORD *)v21 + 128)) = 1;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v21 + *(_QWORD *)(*(_QWORD *)v21 + 136), v16, v12);
  v22 = *(os_unfair_lock_s **)(v6 + 16);
  v23 = (uint64_t)&v22[4];
  v24 = v22 + 10;
  os_unfair_lock_lock(v22 + 10);
  v30[0] = v27;
  v30[1] = v28;
  v31 = v29;
  sub_1A9387FE8(v23, v6, v21, (uint64_t)v30, a5, v26[0]);
  os_unfair_lock_unlock(v24);
  return swift_release();
}

uint64_t sub_1A9385FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v18 = a2;
  v16 = type metadata accessor for TTMLRequest();
  MEMORY[0x1E0C80A78](v16);
  v3 = sub_1A93F726C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v19 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - v7;
  sub_1A93F71D0();
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1A93F7224();
  v10 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_fileExistsAtPath_, v10);

  if ((v11 & 1) == 0)
    NSFileManager.createDirectory(url:createIntermediates:)((uint64_t)v8, 1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);

  v13 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  sub_1A90D8068(v13, v12);
  sub_1A93F72C0();
  if ((*(_BYTE *)(v17 + qword_1ED2B8A18 + 4) & 1) == 0)
    sub_1A92B7958(*(_DWORD *)(v17 + qword_1ED2B8A18));
  return sub_1A905F180(v13, v12);
}

uint64_t sub_1A9386638(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v18 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1E0C80A78](v18);
  v19 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A93F726C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - v7;
  sub_1A93F71D0();
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1A93F7224();
  v10 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_fileExistsAtPath_, v10);

  if ((v11 & 1) == 0)
    NSFileManager.createDirectory(url:createIntermediates:)((uint64_t)v8, 1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);

  v12 = ShazamSignatureRequest.encode(_:)(a1);
  v14 = v13;
  sub_1A93F72C0();
  if ((*(_BYTE *)(v17 + qword_1ED2B8A18 + 4) & 1) == 0)
    sub_1A92B7958(*(_DWORD *)(v17 + qword_1ED2B8A18));
  return sub_1A905F180((uint64_t)v12, v14);
}

uint64_t sub_1A9386C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  unsigned __int8 v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  unint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a1;
  v23 = a6;
  v21 = a5;
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v20[1] = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v20 - v11;
  sub_1A93F71D0();
  v13 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1A93F7224();
  v14 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_fileExistsAtPath_, v14);

  if ((v15 & 1) == 0)
    NSFileManager.createDirectory(url:createIntermediates:)((uint64_t)v12, 1);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);

  a4(0);
  sub_1A9066CA8(v21, a4, v23);
  v16 = sub_1A93F70B0();
  v18 = v17;
  sub_1A93F72C0();
  if ((*(_BYTE *)(v20[0] + qword_1ED2B8A18 + 4) & 1) == 0)
    sub_1A92B7958(*(_DWORD *)(v20[0] + qword_1ED2B8A18));
  return sub_1A905F180(v16, v18);
}

uint64_t sub_1A93872E8(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t *a3, void (*a4)(char **, char **, char **))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11[2];

  v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = a2(v8);
  v9 = *(_QWORD *)(v8 + 16);
  v11[0] = v8 + 32;
  v11[1] = v9;
  result = sub_1A93882F8(v11, a3, a4);
  *a1 = v8;
  return result;
}

uint64_t ShazamSignatureBackgroundSessionDescriptor.init(caches:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A9387374(a1, a2);
}

uint64_t sub_1A9387374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ShazamSignatureBackgroundSessionDescriptor.caches.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A93873C8(v1, a1);
}

uint64_t sub_1A93873C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id ShazamSignatureBackgroundSessionDescriptor.create(session:delegate:)(void *a1, uint64_t a2)
{
  swift_getObjectType();
  return sub_1A9389670(a1, a2);
}

uint64_t ShazamSignatureBackgroundSessionDescriptor.load(data:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  double v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9160);
  v28 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8F10);
  v29 = *(_QWORD *)(v12 - 8);
  v30 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEC58);
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEC60);
  v32 = *(_QWORD *)(v34 - 8);
  v17 = MEMORY[0x1E0C80A78](v34);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v8, a1, v5, v17);
  sub_1A93F7A58();
  if (qword_1EEAB6D08 != -1)
    swift_once();
  v20 = (void *)qword_1EEAB9E68;
  v35 = (id)qword_1EEAB9E68;
  v21 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1ED2A9158, &qword_1ED2A9160, MEMORY[0x1E0C960B0]);
  sub_1A905FD90();
  v22 = v20;
  sub_1A93F7C80();
  sub_1A90C0C1C((uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
  sub_1A9072534(0, &qword_1EEAB82E8);
  sub_1A9066D74(&qword_1ED2A8F08, &qword_1ED2A8F10, MEMORY[0x1E0C95CB8]);
  v23 = v30;
  sub_1A93F7C20();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEC68);
  sub_1A9066D74(&qword_1EEABEC70, &qword_1EEABEC58, MEMORY[0x1E0C95B48]);
  sub_1A9066D74(&qword_1EEABEC78, &qword_1EEABEC68, MEMORY[0x1E0C960D0]);
  v24 = v33;
  sub_1A93F7BB4();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v24);
  sub_1A9066D74(&qword_1EEABEC80, &qword_1EEABEC60, MEMORY[0x1E0C959F8]);
  v25 = v34;
  v26 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v25);
  return v26;
}

uint64_t sub_1A9387854@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  id v8;

  result = sub_1A93F7278();
  if (!v1)
  {
    v5 = result;
    v6 = v4;
    v7 = objc_allocWithZone(MEMORY[0x1E0CD7500]);
    v8 = sub_1A927ACCC();
    result = sub_1A905F180(v5, v6);
    *a1 = v8;
  }
  return result;
}

uint64_t sub_1A93878D8(void **a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *a1;
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v2 = sub_1A93F7698();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A3F08);
  v3 = v1;
  v4 = v1;
  v5 = sub_1A93F7674();
  v6 = sub_1A93F879C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    v10 = sub_1A93F8094();
    sub_1A906436C(v10, v11, &v13);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A904E000, v5, v6, "Received background wakeup for non-signature (or malformed) content from shazamsignature session; error: %s",
      v7,
      0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v8, -1, -1);
    MEMORY[0x1AF41411C](v7, -1, -1);
  }
  else
  {

  }
  sub_1A9072534(0, &qword_1EEAB82E8);
  return sub_1A93F7A64();
}

uint64_t ShazamSignatureBackgroundSessionDescriptor.stash(asset:for:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB87B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEB60);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  sub_1A9384B9C(a1, a2);
  sub_1A93F7A58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
  sub_1A93F7A34();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1A9066D74(&qword_1EEABEB68, &qword_1EEABEB60, MEMORY[0x1E0C964C8]);
  v12 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

id sub_1A9387C58(void *a1, uint64_t a2)
{
  swift_getObjectType();
  return sub_1A9389670(a1, a2);
}

uint64_t sub_1A9387C98(uint64_t a1)
{
  return ShazamSignatureBackgroundSessionDescriptor.load(data:)(a1);
}

uint64_t sub_1A9387CAC(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB87B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEB60);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  sub_1A9384B9C(v12, a2);
  sub_1A93F7A58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
  sub_1A93F7A34();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1A9066D74(&qword_1EEABEB68, &qword_1EEABEB60, MEMORY[0x1E0C964C8]);
  v13 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

uint64_t sub_1A9387E30(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;

  result = sub_1A938A050(*(_QWORD *)(a3 + 72), a1);
  if ((result & 1) != 0)
  {
    v8 = *(_QWORD *)(a3 + 72);
    v9 = a1[1];
    v10 = __CFADD__(v9, v8);
    v11 = v9 + v8;
    if (v10)
    {
      __break(1u);
    }
    else
    {
      a1[1] = v11;
      v12 = (uint64_t *)(a4 + *(int *)(type metadata accessor for TTMLRequest() + 24));
      v13 = *v12;
      v14 = v12[1];
      swift_bridgeObjectRetain();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v16 = a1[2];
      a1[2] = 0x8000000000000000;
      sub_1A930D7C0(a3, v13, v14, isUniquelyReferenced_nonNull_native);
      a1[2] = v16;
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1A9387F0C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;

  result = sub_1A938A404(*(_QWORD *)(a3 + 24), a1);
  if ((result & 1) != 0)
  {
    v8 = *(_QWORD *)(a3 + 24);
    v9 = a1[1];
    v10 = __CFADD__(v9, v8);
    v11 = v9 + v8;
    if (v10)
    {
      __break(1u);
    }
    else
    {
      a1[1] = v11;
      v12 = (uint64_t *)(a4 + *(int *)(type metadata accessor for ShazamSignatureRequest() + 24));
      v13 = *v12;
      v14 = v12[1];
      swift_bridgeObjectRetain();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v16 = a1[2];
      a1[2] = 0x8000000000000000;
      sub_1A930D7CC(a3, v13, v14, isUniquelyReferenced_nonNull_native);
      a1[2] = v16;
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1A9387FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t), void (*a6)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v19;

  v9 = *(_QWORD *)(*(_QWORD *)a3 + 128);
  result = a5(*(_QWORD *)(a3 + v9), a1);
  if ((result & 1) != 0)
  {
    v11 = *(_QWORD *)(a3 + v9);
    v12 = *(_QWORD *)(a1 + 8);
    v13 = __CFADD__(v12, v11);
    v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(a1 + 8) = v14;
      v15 = sub_1A93858EC();
      v17 = v16;
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v19 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 16) = 0x8000000000000000;
      a6(a3, v15, v17, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(a1 + 16) = v19;
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1A93880C0(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;

  v3 = (uint64_t *)(a2 + *(int *)(type metadata accessor for TTMLRequest() + 24));
  v4 = *v3;
  v5 = v3[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1A9094640(v4, v5);
  v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
    return swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1A93079C8();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v6);
  sub_1A9091124(v6, v10);
  *(_QWORD *)(a1 + 16) = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v11 + 72);
  result = swift_release();
  v14 = *(_QWORD *)(a1 + 8);
  v15 = v14 >= v12;
  v16 = v14 - v12;
  if (v15)
    *(_QWORD *)(a1 + 8) = v16;
  else
    __break(1u);
  return result;
}

uint64_t sub_1A93881DC(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;

  v3 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ShazamSignatureRequest() + 24));
  v4 = *v3;
  v5 = v3[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1A9094640(v4, v5);
  v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
    return swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1A93079D4();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v6);
  sub_1A9091124(v6, v10);
  *(_QWORD *)(a1 + 16) = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v11 + 24);
  result = swift_release();
  v14 = *(_QWORD *)(a1 + 8);
  v15 = v14 >= v12;
  v16 = v14 - v12;
  if (v15)
    *(_QWORD *)(a1 + 8) = v16;
  else
    __break(1u);
  return result;
}

uint64_t sub_1A93882F8(uint64_t *a1, uint64_t *a2, void (*a3)(char **, char **, char **))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  char v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char *v151;
  void (*v152)(char **, char **, char **);
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  void (*v159)(char *, uint64_t, uint64_t);
  int v160;
  uint64_t v161;
  uint64_t v162;

  v152 = a3;
  v158 = sub_1A93F738C();
  v162 = *(_QWORD *)(v158 - 8);
  MEMORY[0x1E0C80A78](v158);
  v157 = (char *)&v141 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v156 = (char *)&v141 - v8;
  v9 = a1[1];
  result = sub_1A93F9054();
  v150 = (char *)v9;
  if (result >= v9)
  {
    if (v9 < 0)
      goto LABEL_138;
    if ((unint64_t)v9 >= 2)
    {
      v153 = v3;
      v155 = *a1;
      v14 = (_QWORD *)(v155 + 24);
      v15 = -1;
      v16 = 1;
      v17 = v156;
      v18 = v158;
      v19 = v157;
      do
      {
        v151 = (char *)v16;
        v20 = *(_QWORD *)(v155 + 24 * v16 + 16);
        v152 = (void (*)(char **, char **, char **))v15;
        v159 = (void (*)(char *, uint64_t, uint64_t))v15;
        v154 = v14;
        do
        {
          v21 = *(v14 - 1);
          v161 = *(v14 - 2);
          v22 = v20 + *(_QWORD *)(*(_QWORD *)v20 + 136);
          swift_beginAccess();
          v23 = *(void (**)(char *, uint64_t, uint64_t))(v162 + 16);
          v23(v17, v22, v18);
          v24 = v21 + *(_QWORD *)(*(_QWORD *)v21 + 136);
          swift_beginAccess();
          v23(v19, v24, v18);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          v160 = sub_1A93F732C();
          v25 = *(void (**)(char *, uint64_t))(v162 + 8);
          v25(v19, v18);
          v25(v17, v18);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          result = swift_bridgeObjectRelease();
          if ((v160 & 1) == 0)
            break;
          if (!v155)
            goto LABEL_142;
          v26 = *v14;
          v27 = v14[1];
          v20 = v14[2];
          *(_OWORD *)v14 = *(_OWORD *)(v14 - 3);
          v14[2] = *(v14 - 1);
          *(v14 - 2) = v27;
          *(v14 - 1) = v20;
          *(v14 - 3) = v26;
          v14 -= 3;
          v28 = __CFADD__(v159, 1);
          v159 = (void (*)(char *, uint64_t, uint64_t))((char *)v159 + 1);
        }
        while (!v28);
        v16 = (uint64_t)(v151 + 1);
        v14 = v154 + 3;
        v15 = (uint64_t)v152 - 1;
      }
      while (v151 + 1 != v150);
    }
    return result;
  }
  if (v9 >= 0)
    v11 = v9;
  else
    v11 = v9 + 1;
  if (v9 < -1)
    goto LABEL_147;
  v145 = result;
  v153 = v3;
  v142 = a1;
  if (v9 < 2)
  {
    v29 = (char *)MEMORY[0x1E0DEE9D8];
    v147 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v144 = MEMORY[0x1E0DEE9D8];
    if (v9 != 1)
    {
      v32 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_104:
      if (v32 >= 2)
      {
        v134 = *v142;
        do
        {
          v135 = v32 - 2;
          if (v32 < 2)
            goto LABEL_133;
          if (!v134)
            goto LABEL_146;
          v136 = *(_QWORD *)&v29[16 * v135 + 32];
          v137 = *(_QWORD *)&v29[16 * v32 + 24];
          v138 = v153;
          sub_1A9388FF4((char *)(v134 + 24 * v136), (char *)(v134 + 24 * *(_QWORD *)&v29[16 * v32 + 16]), v134 + 24 * v137, v147, v152);
          v153 = v138;
          if (v138)
            break;
          if (v137 < v136)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v29 = sub_1A9234330((uint64_t)v29);
          if (v135 >= *((_QWORD *)v29 + 2))
            goto LABEL_135;
          v139 = &v29[16 * v135 + 32];
          *(_QWORD *)v139 = v136;
          *((_QWORD *)v139 + 1) = v137;
          v140 = *((_QWORD *)v29 + 2);
          if (v32 > v140)
            goto LABEL_136;
          memmove(&v29[16 * v32 + 16], &v29[16 * v32 + 32], 16 * (v140 - v32));
          *((_QWORD *)v29 + 2) = v140 - 1;
          v32 = v140 - 1;
        }
        while (v140 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v144 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v12 = v11 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v13 = sub_1A93F837C();
    *(_QWORD *)(v13 + 16) = v12;
    v9 = (uint64_t)v150;
    v144 = v13;
    v147 = (char *)(v13 + 32);
  }
  v30 = 0;
  v31 = (_QWORD *)*a1;
  v143 = *a1 + 64;
  v29 = (char *)MEMORY[0x1E0DEE9D8];
  v154 = v31;
  while (1)
  {
    v33 = v30;
    v34 = v30 + 1;
    v149 = (char *)v30;
    if (v30 + 1 < v9)
    {
      v146 = v29;
      v35 = v31[3 * v34 + 2];
      v36 = &v31[3 * v30];
      v37 = v36[2];
      v161 = v36[1];
      v38 = v35 + *(_QWORD *)(*(_QWORD *)v35 + 136);
      swift_beginAccess();
      v39 = v162;
      v40 = *(void (**)(char *, uint64_t, uint64_t))(v162 + 16);
      v41 = v156;
      v42 = v158;
      v40(v156, v38, v158);
      v43 = v37 + *(_QWORD *)(*(_QWORD *)v37 + 136);
      swift_beginAccess();
      v44 = v157;
      v159 = v40;
      v40(v157, v43, v42);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v160 = sub_1A93F732C();
      v45 = *(void (**)(char *, uint64_t))(v39 + 8);
      v45(v44, v42);
      v46 = v41;
      v33 = (uint64_t)v149;
      v151 = (char *)v45;
      v45(v46, v42);
      swift_release();
      swift_bridgeObjectRelease();
      v9 = (uint64_t)v150;
      swift_release();
      swift_bridgeObjectRelease();
      v34 = v33 + 2;
      if (v33 + 2 < v9)
      {
        v47 = (uint64_t *)(v143 + 24 * v33);
        while (1)
        {
          v155 = v34;
          v48 = *v47;
          v49 = *(v47 - 3);
          v161 = *(v47 - 4);
          v50 = v48 + *(_QWORD *)(*(_QWORD *)v48 + 136);
          swift_beginAccess();
          v51 = v156;
          v52 = v158;
          v53 = v159;
          v159(v156, v50, v158);
          v54 = v49 + *(_QWORD *)(*(_QWORD *)v49 + 136);
          swift_beginAccess();
          v55 = v157;
          v53(v157, v54, v52);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          LODWORD(v54) = sub_1A93F732C();
          v56 = v55;
          v57 = (void (*)(char *, uint64_t))v151;
          ((void (*)(char *, uint64_t))v151)(v56, v52);
          v57(v51, v52);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          if (((v160 ^ v54) & 1) != 0)
            break;
          v34 = v155 + 1;
          v47 += 3;
          v9 = (uint64_t)v150;
          if (v150 == (char *)(v155 + 1))
          {
            v34 = (uint64_t)v150;
            goto LABEL_29;
          }
        }
        v9 = (uint64_t)v150;
        v34 = v155;
LABEL_29:
        v33 = (uint64_t)v149;
      }
      v29 = v146;
      v31 = v154;
      if ((v160 & 1) != 0)
      {
        if (v34 < v33)
          goto LABEL_139;
        if (v33 < v34)
        {
          v58 = 3 * v34;
          v59 = 3 * v33;
          v60 = v34;
          v61 = v33;
          do
          {
            if (v61 != --v60)
            {
              if (!v31)
                goto LABEL_145;
              v62 = &v31[v59];
              v63 = &v31[v58];
              v64 = v31[v59];
              v65 = *(_OWORD *)&v31[v59 + 1];
              v66 = *(_OWORD *)&v31[v58 - 3];
              v62[2] = v31[v58 - 1];
              *(_OWORD *)v62 = v66;
              *(v63 - 3) = v64;
              *((_OWORD *)v63 - 1) = v65;
            }
            ++v61;
            v58 -= 3;
            v59 += 3;
          }
          while (v61 < v60);
        }
      }
    }
    if (v34 < v9)
    {
      if (__OFSUB__(v34, v33))
        goto LABEL_137;
      if (v34 - v33 < v145)
        break;
    }
LABEL_56:
    v81 = v147;
    if (v34 < v33)
      goto LABEL_132;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v29 = sub_1A9233E0C(0, *((_QWORD *)v29 + 2) + 1, 1, v29);
    v83 = *((_QWORD *)v29 + 2);
    v82 = *((_QWORD *)v29 + 3);
    v32 = v83 + 1;
    v31 = v154;
    v155 = v34;
    if (v83 >= v82 >> 1)
    {
      v133 = sub_1A9233E0C((char *)(v82 > 1), v83 + 1, 1, v29);
      v31 = v154;
      v29 = v133;
    }
    *((_QWORD *)v29 + 2) = v32;
    v84 = v29 + 32;
    v85 = &v29[16 * v83 + 32];
    v86 = v155;
    *(_QWORD *)v85 = v33;
    *((_QWORD *)v85 + 1) = v86;
    if (v83)
    {
      while (1)
      {
        v87 = v32 - 1;
        if (v32 >= 4)
        {
          v92 = &v84[16 * v32];
          v93 = *((_QWORD *)v92 - 8);
          v94 = *((_QWORD *)v92 - 7);
          v98 = __OFSUB__(v94, v93);
          v95 = v94 - v93;
          if (v98)
            goto LABEL_121;
          v97 = *((_QWORD *)v92 - 6);
          v96 = *((_QWORD *)v92 - 5);
          v98 = __OFSUB__(v96, v97);
          v90 = v96 - v97;
          v91 = v98;
          if (v98)
            goto LABEL_122;
          v99 = v32 - 2;
          v100 = &v84[16 * v32 - 32];
          v102 = *(_QWORD *)v100;
          v101 = *((_QWORD *)v100 + 1);
          v98 = __OFSUB__(v101, v102);
          v103 = v101 - v102;
          if (v98)
            goto LABEL_124;
          v98 = __OFADD__(v90, v103);
          v104 = v90 + v103;
          if (v98)
            goto LABEL_127;
          if (v104 >= v95)
          {
            v122 = &v84[16 * v87];
            v124 = *(_QWORD *)v122;
            v123 = *((_QWORD *)v122 + 1);
            v98 = __OFSUB__(v123, v124);
            v125 = v123 - v124;
            if (v98)
              goto LABEL_131;
            v115 = v90 < v125;
            goto LABEL_93;
          }
        }
        else
        {
          if (v32 != 3)
          {
            v116 = *((_QWORD *)v29 + 4);
            v117 = *((_QWORD *)v29 + 5);
            v98 = __OFSUB__(v117, v116);
            v109 = v117 - v116;
            v110 = v98;
            goto LABEL_87;
          }
          v89 = *((_QWORD *)v29 + 4);
          v88 = *((_QWORD *)v29 + 5);
          v98 = __OFSUB__(v88, v89);
          v90 = v88 - v89;
          v91 = v98;
        }
        if ((v91 & 1) != 0)
          goto LABEL_123;
        v99 = v32 - 2;
        v105 = &v84[16 * v32 - 32];
        v107 = *(_QWORD *)v105;
        v106 = *((_QWORD *)v105 + 1);
        v108 = __OFSUB__(v106, v107);
        v109 = v106 - v107;
        v110 = v108;
        if (v108)
          goto LABEL_126;
        v111 = &v84[16 * v87];
        v113 = *(_QWORD *)v111;
        v112 = *((_QWORD *)v111 + 1);
        v98 = __OFSUB__(v112, v113);
        v114 = v112 - v113;
        if (v98)
          goto LABEL_129;
        if (__OFADD__(v109, v114))
          goto LABEL_130;
        if (v109 + v114 >= v90)
        {
          v115 = v90 < v114;
LABEL_93:
          if (v115)
            v87 = v99;
          goto LABEL_95;
        }
LABEL_87:
        if ((v110 & 1) != 0)
          goto LABEL_125;
        v118 = &v84[16 * v87];
        v120 = *(_QWORD *)v118;
        v119 = *((_QWORD *)v118 + 1);
        v98 = __OFSUB__(v119, v120);
        v121 = v119 - v120;
        if (v98)
          goto LABEL_128;
        if (v121 < v109)
          goto LABEL_21;
LABEL_95:
        v126 = v87 - 1;
        if (v87 - 1 >= v32)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!v31)
          goto LABEL_144;
        v127 = &v84[16 * v126];
        v128 = *(_QWORD *)v127;
        v129 = &v84[16 * v87];
        v130 = *((_QWORD *)v129 + 1);
        v131 = v153;
        sub_1A9388FF4((char *)&v31[3 * *(_QWORD *)v127], (char *)&v31[3 * *(_QWORD *)v129], (unint64_t)&v31[3 * v130], v81, v152);
        v153 = v131;
        if (v131)
          goto LABEL_115;
        if (v130 < v128)
          goto LABEL_118;
        if (v87 > *((_QWORD *)v29 + 2))
          goto LABEL_119;
        *(_QWORD *)v127 = v128;
        *(_QWORD *)&v84[16 * v126 + 8] = v130;
        v132 = *((_QWORD *)v29 + 2);
        if (v87 >= v132)
          goto LABEL_120;
        v32 = v132 - 1;
        memmove(&v84[16 * v87], v129 + 16, 16 * (v132 - 1 - v87));
        *((_QWORD *)v29 + 2) = v132 - 1;
        v31 = v154;
        if (v132 <= 2)
          goto LABEL_21;
      }
    }
    v32 = 1;
LABEL_21:
    v9 = (uint64_t)v150;
    v30 = v155;
    if (v155 >= (uint64_t)v150)
      goto LABEL_104;
  }
  if (__OFADD__(v33, v145))
    goto LABEL_140;
  if (v33 + v145 >= v9)
    v67 = v9;
  else
    v67 = v33 + v145;
  if (v67 >= v33)
  {
    if (v34 != v67)
    {
      v146 = v29;
      v68 = (char *)&v31[3 * v34];
      v148 = v67;
      do
      {
        v70 = v31[3 * v34 + 2];
        v151 = v68;
        v155 = v34;
        while (1)
        {
          v159 = (void (*)(char *, uint64_t, uint64_t))v33;
          v71 = *((_QWORD *)v68 - 1);
          v161 = *((_QWORD *)v68 - 2);
          v72 = v70 + *(_QWORD *)(*(_QWORD *)v70 + 136);
          swift_beginAccess();
          v73 = *(void (**)(char *, uint64_t, uint64_t))(v162 + 16);
          v74 = v156;
          v75 = v158;
          v73(v156, v72, v158);
          v76 = v71 + *(_QWORD *)(*(_QWORD *)v71 + 136);
          swift_beginAccess();
          v77 = v157;
          v73(v157, v76, v75);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          v160 = sub_1A93F732C();
          v78 = *(void (**)(char *, uint64_t))(v162 + 8);
          v78(v77, v75);
          v78(v74, v75);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          if ((v160 & 1) == 0)
            break;
          v31 = v154;
          if (!v154)
            goto LABEL_143;
          v79 = *(_QWORD *)v68;
          v80 = *((_QWORD *)v68 + 1);
          v70 = *((_QWORD *)v68 + 2);
          *(_OWORD *)v68 = *(_OWORD *)(v68 - 24);
          *((_QWORD *)v68 + 2) = *((_QWORD *)v68 - 1);
          *((_QWORD *)v68 - 2) = v80;
          *((_QWORD *)v68 - 1) = v70;
          *((_QWORD *)v68 - 3) = v79;
          v68 -= 24;
          v33 = (uint64_t)v159 + 1;
          v69 = v155;
          if ((void (*)(char *, uint64_t, uint64_t))v155 == (void (*)(char *, uint64_t, uint64_t))((char *)v159 + 1))
            goto LABEL_49;
        }
        v31 = v154;
        v69 = v155;
LABEL_49:
        v34 = v69 + 1;
        v68 = v151 + 24;
        v33 = (uint64_t)v149;
      }
      while (v34 != v148);
      v34 = v148;
      v29 = v146;
    }
    goto LABEL_56;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t sub_1A9388FF4(char *a1, char *a2, unint64_t a3, char *a4, void (*a5)(char **, char **, char **))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  _OWORD *v26;
  char *v27;
  __int128 v28;
  char *v29;
  __int128 v30;
  char *v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  __int128 v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  __int128 v46;
  char *v47;
  unint64_t v48;
  __int128 v49;
  uint64_t result;
  void (*v51)(char **, char **, char **);
  unint64_t v52;
  unint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;

  v51 = a5;
  v58 = sub_1A93F738C();
  v61 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v57 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v56 = (char *)&v51 - v11;
  v12 = a2 - a1;
  v13 = (a2 - a1) / 24;
  v53 = a3;
  v14 = a3 - (_QWORD)a2;
  v15 = v14 / 24;
  v65 = a1;
  v64 = a4;
  if (v13 >= v14 / 24)
  {
    if (v14 >= -23)
    {
      if (a4 != a2 || &a2[24 * v15] <= a4)
        memmove(a4, a2, 24 * v15);
      v31 = &a4[24 * v15];
      v63 = v31;
      v65 = a2;
      if (v14 >= 24 && a1 < a2)
      {
        v32 = v53 - 24;
        v59 = a4;
        v60 = a1;
        v33 = v57;
        v34 = v58;
        while (1)
        {
          v62 = a2;
          v54 = v31;
          v55 = (char *)(v32 + 24);
          v38 = *((_QWORD *)v31 - 1);
          v39 = *((_QWORD *)a2 - 1);
          v53 = *((_QWORD *)a2 - 2);
          v40 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 136);
          swift_beginAccess();
          v41 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
          v42 = v56;
          v41(v56, v40, v34);
          v43 = v39 + *(_QWORD *)(*(_QWORD *)v39 + 136);
          swift_beginAccess();
          v41(v33, v43, v34);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          LODWORD(v52) = sub_1A93F732C();
          v44 = *(void (**)(char *, uint64_t))(v61 + 8);
          v44(v33, v34);
          v44(v42, v34);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          if ((v52 & 1) != 0)
          {
            v45 = v54;
            v36 = v62 - 24;
            if (v55 != v62 || v32 >= (unint64_t)v62)
            {
              v46 = *(_OWORD *)v36;
              *(_QWORD *)(v32 + 16) = *((_QWORD *)v62 - 1);
              *(_OWORD *)v32 = v46;
            }
            v65 = v36;
            v37 = (unint64_t)v60;
            v31 = v45;
            if (v45 <= v59)
              goto LABEL_41;
          }
          else
          {
            v47 = v62;
            v31 = v54 - 24;
            v63 = v54 - 24;
            if (v55 < v54 || v32 >= (unint64_t)v54)
            {
              v35 = *(_OWORD *)v31;
              *(_QWORD *)(v32 + 16) = *((_QWORD *)v54 - 1);
              *(_OWORD *)v32 = v35;
              v36 = v47;
              v37 = (unint64_t)v60;
              if (v31 <= v59)
                goto LABEL_41;
            }
            else
            {
              v48 = (unint64_t)v59;
              v37 = (unint64_t)v60;
              if (v55 != v54)
              {
                v49 = *(_OWORD *)v31;
                *(_QWORD *)(v32 + 16) = *((_QWORD *)v54 - 1);
                *(_OWORD *)v32 = v49;
              }
              v36 = v47;
              if ((unint64_t)v31 <= v48)
                goto LABEL_41;
            }
          }
          v32 -= 24;
          a2 = v36;
          if ((unint64_t)v36 <= v37)
            goto LABEL_41;
        }
      }
      goto LABEL_41;
    }
  }
  else if (v12 >= -23)
  {
    if (a4 != a1 || &a1[24 * v13] <= a4)
      memmove(a4, a1, 24 * v13);
    v52 = (unint64_t)&a4[24 * v13];
    v63 = (char *)v52;
    if (v12 >= 24 && (unint64_t)a2 < v53)
    {
      v16 = v61;
      v17 = v57;
      do
      {
        v59 = a4;
        v60 = a1;
        v62 = a2;
        v18 = *((_QWORD *)a2 + 2);
        v19 = *((_QWORD *)a4 + 2);
        v55 = (char *)*((_QWORD *)a4 + 1);
        v20 = v18 + *(_QWORD *)(*(_QWORD *)v18 + 136);
        swift_beginAccess();
        v21 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
        v22 = v56;
        v23 = v58;
        v21(v56, v20, v58);
        v24 = v19 + *(_QWORD *)(*(_QWORD *)v19 + 136);
        swift_beginAccess();
        v21(v17, v24, v23);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        LODWORD(v54) = sub_1A93F732C();
        v25 = *(void (**)(char *, uint64_t))(v16 + 8);
        v25(v17, v23);
        v25(v22, v23);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        if ((v54 & 1) != 0)
        {
          a4 = v59;
          v26 = v60;
          v27 = v62 + 24;
          if (v60 < v62 || v60 >= v27 || v60 != v62)
          {
            v28 = *(_OWORD *)v62;
            *((_QWORD *)v60 + 2) = *((_QWORD *)v62 + 2);
            *v26 = v28;
          }
        }
        else
        {
          v29 = v62;
          v26 = v60;
          a4 = v59 + 24;
          if (v60 != v59 || v60 >= a4)
          {
            v30 = *(_OWORD *)v59;
            *((_QWORD *)v60 + 2) = *((_QWORD *)v59 + 2);
            *v26 = v30;
          }
          v64 = a4;
          v27 = v29;
        }
        a1 = (char *)v26 + 24;
        v65 = a1;
        if ((unint64_t)a4 >= v52)
          break;
        a2 = v27;
      }
      while ((unint64_t)v27 < v53);
    }
LABEL_41:
    v51(&v65, &v64, &v63);
    return 1;
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

void sub_1A9389568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  _OWORD v8[3];
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v4;
  v8[2] = *(_OWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 48);
  sub_1A9385FF0((uint64_t)v8, a3);
  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(a1 + qword_1ED2ACE20) + 16);
  v6 = (uint64_t)&v5[4];
  v7 = v5 + 10;
  os_unfair_lock_lock(v5 + 10);
  sub_1A937F8C0(v6);
  os_unfair_lock_unlock(v7);
}

void sub_1A93895F8(uint64_t a1, uint64_t *a2)
{
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  sub_1A9386638(*a2);
  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(a1 + qword_1ED2ACE20) + 16);
  v4 = (uint64_t)&v3[4];
  v5 = v3 + 10;
  os_unfair_lock_lock(v3 + 10);
  sub_1A937F85C(v4);
  os_unfair_lock_unlock(v5);
}

id sub_1A9389670(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_setSessionSendsLaunchEvents_, 1);
  objc_msgSend(a1, sel_setDiscretionary_, 1);
  objc_msgSend(a1, sel_setSharedContainerIdentifier_, CFSTR("243LU875E5.groups.com.apple.podcasts"));
  return objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, a1, a2, 0);
}

_UNKNOWN **sub_1A93896F8()
{
  return &protocol witness table for ShazamSignatureRequest;
}

_UNKNOWN **sub_1A9389704()
{
  return &protocol witness table for ShazamSignatureRequest;
}

uint64_t sub_1A9389710()
{
  return sub_1A9066CA8(&qword_1EEABEB00, (uint64_t (*)(uint64_t))type metadata accessor for ShazamSignatureRequest, (uint64_t)&protocol conformance descriptor for ShazamSignatureRequest);
}

uint64_t sub_1A938973C()
{
  return sub_1A9066CA8(&qword_1EEABEB08, (uint64_t (*)(uint64_t))type metadata accessor for ShazamSignatureRequest, (uint64_t)&protocol conformance descriptor for ShazamSignatureRequest);
}

uint64_t *initializeBufferWithCopyOfBuffer for ShazamSignatureBackgroundSessionDescriptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *(int *)(v4 + 60);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1A93F726C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
    v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
    *(_QWORD *)&v8[v12[15]] = *(_QWORD *)&v9[v12[15]];
    *(_QWORD *)&v8[v12[16]] = *(_QWORD *)&v9[v12[16]];
    *(_QWORD *)&v8[v12[17]] = *(_QWORD *)&v9[v12[17]];
    *(_QWORD *)&v8[v12[18]] = *(_QWORD *)&v9[v12[18]];
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return a1;
}

uint64_t destroy for ShazamSignatureBackgroundSessionDescriptor(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_release();
  v2 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028) + 60);
  v3 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for ShazamSignatureBackgroundSessionDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int *v8;

  *a1 = *a2;
  swift_retain();
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028) + 60);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  *(_QWORD *)&v5[v8[15]] = *(_QWORD *)&v6[v8[15]];
  *(_QWORD *)&v5[v8[16]] = *(_QWORD *)&v6[v8[16]];
  *(_QWORD *)&v5[v8[17]] = *(_QWORD *)&v6[v8[17]];
  *(_QWORD *)&v5[v8[18]] = *(_QWORD *)&v6[v8[18]];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ShazamSignatureBackgroundSessionDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int *v8;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028) + 60);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  *(_QWORD *)&v5[v8[15]] = *(_QWORD *)&v6[v8[15]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v5[v8[16]] = *(_QWORD *)&v6[v8[16]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v5[v8[17]] = *(_QWORD *)&v6[v8[17]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v5[v8[18]] = *(_QWORD *)&v6[v8[18]];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *initializeWithTake for ShazamSignatureBackgroundSessionDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int *v8;

  *a1 = *a2;
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028) + 60);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  *(_QWORD *)&v5[v8[15]] = *(_QWORD *)&v6[v8[15]];
  *(_QWORD *)&v5[v8[16]] = *(_QWORD *)&v6[v8[16]];
  *(_QWORD *)&v5[v8[17]] = *(_QWORD *)&v6[v8[17]];
  *(_QWORD *)&v5[v8[18]] = *(_QWORD *)&v6[v8[18]];
  return a1;
}

_QWORD *assignWithTake for ShazamSignatureBackgroundSessionDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int *v8;

  *a1 = *a2;
  swift_release();
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028) + 60);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED2AAF88);
  *(_QWORD *)&v5[v8[15]] = *(_QWORD *)&v6[v8[15]];
  swift_release();
  *(_QWORD *)&v5[v8[16]] = *(_QWORD *)&v6[v8[16]];
  swift_release();
  *(_QWORD *)&v5[v8[17]] = *(_QWORD *)&v6[v8[17]];
  swift_release();
  *(_QWORD *)&v5[v8[18]] = *(_QWORD *)&v6[v8[18]];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShazamSignatureBackgroundSessionDescriptor()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9389C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ShazamSignatureBackgroundSessionDescriptor()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9389CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB028);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ShazamSignatureBackgroundSessionDescriptor()
{
  uint64_t result;

  result = qword_1ED2AB7B8;
  if (!qword_1ED2AB7B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A9389D20()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93788C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A9389D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for TTMLRequest();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  swift_release();
  sub_1A905F180(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + *(int *)(v1 + 36);
  if (*(_QWORD *)(v8 + 24))
    __swift_destroy_boxed_opaque_existential_0(v8);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((v3 + v4 + v7) & ~v7), v5);
  return swift_deallocObject();
}

void sub_1A9389E9C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = type metadata accessor for TTMLRequest();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  sub_1A93F726C();
  sub_1A9389568(*(_QWORD *)(v0 + 16), v0 + 24, v0 + v2);
}

void sub_1A9389F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7, void (*a8)(os_unfair_lock_s *))
{
  __int128 v10;
  os_unfair_lock_s *v11;
  os_unfair_lock_s *v12;
  os_unfair_lock_s *v13;
  _OWORD v14[2];
  uint64_t v15;

  v10 = *(_OWORD *)(a3 + 16);
  v14[0] = *(_OWORD *)a3;
  v14[1] = v10;
  v15 = *(_QWORD *)(a3 + 32);
  sub_1A9386C94(a2, (uint64_t)v14, a4, a5, a6, a7);
  v11 = *(os_unfair_lock_s **)(*(_QWORD *)(a1 + qword_1ED2ACE20) + 16);
  v12 = v11 + 4;
  v13 = v11 + 10;
  os_unfair_lock_lock(v11 + 10);
  a8(v12);
  os_unfair_lock_unlock(v13);
}

uint64_t sub_1A9389FB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(unint64_t))
{
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  unint64_t v11;

  v5 = sub_1A93858EC();
  v6 = a3(v5);
  result = swift_bridgeObjectRelease();
  if (v6)
  {
    v8 = *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 128));
    result = swift_release();
    v9 = *(_QWORD *)(a1 + 8);
    v10 = v9 >= v8;
    v11 = v9 - v8;
    if (v10)
      *(_QWORD *)(a1 + 8) = v11;
    else
      __break(1u);
  }
  return result;
}

uint64_t sub_1A938A050(unint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v3 = *a2;
  if (*a2 < a1)
    return v3 >= a1;
  v5 = a2[2];
  if (*a2 == a1)
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9E0];
    a2[1] = 0;
    a2[2] = v6;
    return v3 >= a1;
  }
  swift_bridgeObjectRetain_n();
  v7 = sub_1A930BFBC(v5);
  swift_bridgeObjectRelease();
  v29 = v7;
  sub_1A93872E8((uint64_t *)&v29, (uint64_t (*)(uint64_t))sub_1A9234394, &qword_1EEABCDC8, (void (*)(char **, char **, char **))sub_1A923410C);
  swift_bridgeObjectRelease();
  v8 = (uint64_t)v29;
  v9 = v29[2];
  if (!v9)
  {
LABEL_20:
    swift_release();
    return v3 >= a1;
  }
  v10 = a2[1];
  v11 = __CFADD__(v10, a1);
  v12 = v10 + a1;
  if (!v11)
  {
    if (v3 < v12)
    {
      v13 = 0;
      v14 = v29 + 6;
      v27 = v3;
      v28 = v9 - 1;
      while (1)
      {
        v16 = *(v14 - 1);
        v15 = *v14;
        v17 = *(v14 - 2);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        v18 = sub_1A9094640(v17, v16);
        LOBYTE(v17) = v19;
        swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v21 = a2[2];
          v29 = (_QWORD *)v21;
          a2[2] = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1A93079C8();
            v21 = (uint64_t)v29;
          }
          swift_bridgeObjectRelease();
          sub_1A9091124(v18, v21);
          a2[2] = v21;
          swift_bridgeObjectRelease();
          swift_release();
        }
        swift_bridgeObjectRelease();
        v22 = *(_QWORD *)(v15 + 72);
        swift_release();
        v23 = a2[1];
        v11 = v23 >= v22;
        v24 = v23 - v22;
        if (!v11)
          break;
        a2[1] = v24;
        if (v28 == v13)
          goto LABEL_21;
        if ((unint64_t)++v13 >= *(_QWORD *)(v8 + 16))
          goto LABEL_23;
        v11 = __CFADD__(v24, a1);
        v25 = v24 + a1;
        if (v11)
          goto LABEL_24;
        v14 += 3;
        if (*a2 >= v25)
        {
LABEL_21:
          swift_release();
          v3 = v27;
          return v3 >= a1;
        }
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1A938A298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for ShazamSignatureRequest();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  swift_release();

  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + *(int *)(v1 + 36);
  if (*(_QWORD *)(v8 + 24))
    __swift_destroy_boxed_opaque_existential_0(v8);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((v3 + v4 + v7) & ~v7), v5);
  return swift_deallocObject();
}

void sub_1A938A39C()
{
  uint64_t v0;

  type metadata accessor for ShazamSignatureRequest();
  sub_1A93F726C();
  sub_1A93895F8(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24));
}

uint64_t sub_1A938A404(unint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v3 = *a2;
  if (*a2 < a1)
    return v3 >= a1;
  v5 = a2[2];
  if (*a2 == a1)
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9E0];
    a2[1] = 0;
    a2[2] = v6;
    return v3 >= a1;
  }
  swift_bridgeObjectRetain_n();
  v7 = sub_1A930BFC8(v5);
  swift_bridgeObjectRelease();
  v29 = v7;
  sub_1A93872E8((uint64_t *)&v29, (uint64_t (*)(uint64_t))sub_1A92343A8, &qword_1EEABCDD8, (void (*)(char **, char **, char **))sub_1A923410C);
  swift_bridgeObjectRelease();
  v8 = (uint64_t)v29;
  v9 = v29[2];
  if (!v9)
  {
LABEL_20:
    swift_release();
    return v3 >= a1;
  }
  v10 = a2[1];
  v11 = __CFADD__(v10, a1);
  v12 = v10 + a1;
  if (!v11)
  {
    if (v3 < v12)
    {
      v13 = 0;
      v14 = v29 + 6;
      v27 = v3;
      v28 = v9 - 1;
      while (1)
      {
        v16 = *(v14 - 1);
        v15 = *v14;
        v17 = *(v14 - 2);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        v18 = sub_1A9094640(v17, v16);
        LOBYTE(v17) = v19;
        swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v21 = a2[2];
          v29 = (_QWORD *)v21;
          a2[2] = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1A93079D4();
            v21 = (uint64_t)v29;
          }
          swift_bridgeObjectRelease();
          sub_1A9091124(v18, v21);
          a2[2] = v21;
          swift_bridgeObjectRelease();
          swift_release();
        }
        swift_bridgeObjectRelease();
        v22 = *(_QWORD *)(v15 + 24);
        swift_release();
        v23 = a2[1];
        v11 = v23 >= v22;
        v24 = v23 - v22;
        if (!v11)
          break;
        a2[1] = v24;
        if (v28 == v13)
          goto LABEL_21;
        if ((unint64_t)++v13 >= *(_QWORD *)(v8 + 16))
          goto LABEL_23;
        v11 = __CFADD__(v24, a1);
        v25 = v24 + a1;
        if (v11)
          goto LABEL_24;
        v14 += 3;
        if (*a2 >= v25)
        {
LABEL_21:
          swift_release();
          v3 = v27;
          return v3 >= a1;
        }
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1A938A64C()
{
  return objectdestroy_8Tm_4((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
}

void sub_1A938A658()
{
  sub_1A938A91C((uint64_t (*)(uint64_t))type metadata accessor for ShazamSignatureRequest, &qword_1EEABEB08, (uint64_t)&protocol conformance descriptor for ShazamSignatureRequest, (void (*)(os_unfair_lock_s *))sub_1A938A67C);
}

uint64_t sub_1A938A67C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9389FB4(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(unint64_t))sub_1A9131018);
}

uint64_t sub_1A938A69C(unint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v3 = *a2;
  if (*a2 < a1)
    return v3 >= a1;
  v5 = a2[2];
  if (*a2 == a1)
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9E0];
    a2[1] = 0;
    a2[2] = v6;
    return v3 >= a1;
  }
  swift_bridgeObjectRetain_n();
  v7 = sub_1A930C5F8(v5);
  swift_bridgeObjectRelease();
  v29 = v7;
  sub_1A93872E8((uint64_t *)&v29, (uint64_t (*)(uint64_t))sub_1A92343E4, &qword_1EEABCDE8, (void (*)(char **, char **, char **))sub_1A923410C);
  swift_bridgeObjectRelease();
  v8 = (uint64_t)v29;
  v9 = v29[2];
  if (!v9)
  {
LABEL_20:
    swift_release();
    return v3 >= a1;
  }
  v10 = a2[1];
  v11 = __CFADD__(v10, a1);
  v12 = v10 + a1;
  if (!v11)
  {
    if (v3 < v12)
    {
      v13 = 0;
      v14 = v29 + 6;
      v27 = v3;
      v28 = v9 - 1;
      while (1)
      {
        v16 = *(v14 - 1);
        v15 = *v14;
        v17 = *(v14 - 2);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        v18 = sub_1A9094640(v17, v16);
        LOBYTE(v17) = v19;
        swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v21 = a2[2];
          v29 = (_QWORD *)v21;
          a2[2] = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1A930B594();
            v21 = (uint64_t)v29;
          }
          swift_bridgeObjectRelease();
          sub_1A9091124(v18, v21);
          a2[2] = v21;
          swift_bridgeObjectRelease();
          swift_release();
        }
        swift_bridgeObjectRelease();
        v22 = *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 128));
        swift_release();
        v23 = a2[1];
        v11 = v23 >= v22;
        v24 = v23 - v22;
        if (!v11)
          break;
        a2[1] = v24;
        if (v28 == v13)
          goto LABEL_21;
        if ((unint64_t)++v13 >= *(_QWORD *)(v8 + 16))
          goto LABEL_23;
        v11 = __CFADD__(v24, a1);
        v25 = v24 + a1;
        if (v11)
          goto LABEL_24;
        v14 += 3;
        if (*a2 >= v25)
        {
LABEL_21:
          swift_release();
          v3 = v27;
          return v3 >= a1;
        }
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1A938A8EC()
{
  return objectdestroy_8Tm_4((uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
}

void sub_1A938A8F8()
{
  sub_1A938A91C((uint64_t (*)(uint64_t))type metadata accessor for TTMLRequest, &qword_1EEABEBA8, (uint64_t)&protocol conformance descriptor for TTMLRequest, (void (*)(os_unfair_lock_s *))sub_1A938A9C4);
}

void sub_1A938A91C(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3, void (*a4)(os_unfair_lock_s *))
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v9 = *(_QWORD *)(a1(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F726C() - 8) + 80);
  sub_1A9389F04(*(_QWORD *)(v4 + 16), v4 + v10, v4 + v11, v4 + ((v11 + v12 + 40) & ~v12), a1, a2, a3, a4);
}

uint64_t sub_1A938A9C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9389FB4(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(unint64_t))sub_1A9131118);
}

uint64_t sub_1A938A9E4(unint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v3 = *a2;
  if (*a2 < a1)
    return v3 >= a1;
  v5 = a2[2];
  if (*a2 == a1)
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9E0];
    a2[1] = 0;
    a2[2] = v6;
    return v3 >= a1;
  }
  swift_bridgeObjectRetain_n();
  v7 = sub_1A930C604(v5);
  swift_bridgeObjectRelease();
  v29 = v7;
  sub_1A93872E8((uint64_t *)&v29, (uint64_t (*)(uint64_t))sub_1A92343F8, &qword_1EEABCDF8, (void (*)(char **, char **, char **))sub_1A923410C);
  swift_bridgeObjectRelease();
  v8 = (uint64_t)v29;
  v9 = v29[2];
  if (!v9)
  {
LABEL_20:
    swift_release();
    return v3 >= a1;
  }
  v10 = a2[1];
  v11 = __CFADD__(v10, a1);
  v12 = v10 + a1;
  if (!v11)
  {
    if (v3 < v12)
    {
      v13 = 0;
      v14 = v29 + 6;
      v27 = v3;
      v28 = v9 - 1;
      while (1)
      {
        v16 = *(v14 - 1);
        v15 = *v14;
        v17 = *(v14 - 2);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        v18 = sub_1A9094640(v17, v16);
        LOBYTE(v17) = v19;
        swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v21 = a2[2];
          v29 = (_QWORD *)v21;
          a2[2] = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1A930B5A0();
            v21 = (uint64_t)v29;
          }
          swift_bridgeObjectRelease();
          sub_1A9091124(v18, v21);
          a2[2] = v21;
          swift_bridgeObjectRelease();
          swift_release();
        }
        swift_bridgeObjectRelease();
        v22 = *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 128));
        swift_release();
        v23 = a2[1];
        v11 = v23 >= v22;
        v24 = v23 - v22;
        if (!v11)
          break;
        a2[1] = v24;
        if (v28 == v13)
          goto LABEL_21;
        if ((unint64_t)++v13 >= *(_QWORD *)(v8 + 16))
          goto LABEL_23;
        v11 = __CFADD__(v24, a1);
        v25 = v24 + a1;
        if (v11)
          goto LABEL_24;
        v14 += 3;
        if (*a2 >= v25)
        {
LABEL_21:
          swift_release();
          v3 = v27;
          return v3 >= a1;
        }
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t EpisodeDownloadStateRule<>.eraseToAnyEpisodeDownloadStateRule()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)(__int128 *a1, __int128 *a2)@<X8>)
{
  uint64_t v3;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v9, v3, a1, v7);
  return sub_1A938ACC8((uint64_t)v9, a1, a2, a3);
}

uint64_t sub_1A938ACC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(__int128 *a1, __int128 *a2)@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = *(_QWORD *)(a2 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v10 + v9, a1, a2);
  *a4 = sub_1A938B4AC;
  a4[1] = (uint64_t (*)(__int128 *, __int128 *))v10;
  return result;
}

uint64_t AnyEpisodeDownloadStateRule.canMove(from:to:)(__int128 *a1, __int128 *a2)
{
  uint64_t (**v2)(__int128 *, __int128 *);
  char v3;
  char v4;
  uint64_t (*v5)(__int128 *, __int128 *);
  __int128 v7;
  char v8;
  __int128 v9;
  char v10;

  v3 = *((_BYTE *)a1 + 16);
  v4 = *((_BYTE *)a2 + 16);
  v5 = *v2;
  v9 = *a1;
  v10 = v3;
  v7 = *a2;
  v8 = v4;
  return v5(&v9, &v7) & 1;
}

uint64_t sub_1A938ADAC(__int128 *a1, __int128 *a2)
{
  uint64_t (**v2)(__int128 *, __int128 *);
  char v3;
  char v4;
  uint64_t (*v5)(__int128 *, __int128 *);
  __int128 v7;
  char v8;
  __int128 v9;
  char v10;

  v3 = *((_BYTE *)a1 + 16);
  v4 = *((_BYTE *)a2 + 16);
  v5 = *v2;
  v9 = *a1;
  v10 = v3;
  v7 = *a2;
  v8 = v4;
  return v5(&v9, &v7) & 1;
}

uint64_t AlwaysEpisodeStateRule.canMove(from:to:)()
{
  return 1;
}

uint64_t DownloadingRules.canMove(from:to:)(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  BOOL v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;

  v2 = *(unsigned __int8 *)(a2 + 16);
  if ((v2 & 0xC0) != 0x40)
    goto LABEL_9;
  v4 = *(uint64_t *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(char *)(a1 + 16);
  v7 = *(uint64_t *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a1 + 16) >> 6;
  v9 = v8 == 3 && *(_OWORD *)a1 == 0;
  if (v9 && v5 == -64)
  {
    sub_1A9086E7C(0, 0, 0xC0u);
    v11 = 0;
    v12 = 0;
    v13 = 192;
LABEL_13:
    sub_1A9086E7C(v11, v12, v13);
    v10 = 1;
    return v10 & 1;
  }
  sub_1A908850C(*(_QWORD *)a1, v3, v5);
  sub_1A9086E7C(0, 0, 0xC0u);
  sub_1A9086E7C(v4, v3, v5);
  if ((v5 & 0x80000000) != 0)
  {
LABEL_9:
    v10 = 0;
  }
  else
  {
    if (v8 != 1)
    {
      sub_1A908850C(v4, v3, v5);
      sub_1A9086E7C(v4, v3, v5);
      v11 = v7;
      v12 = v6;
      v13 = v2;
      goto LABEL_13;
    }
    sub_1A9086E7C(v4, v3, v5);
    sub_1A9086E7C(v7, v6, v2);
    v10 = (((v3 & 1) == 0) | v6) ^ 1 | ((v3 & 1) == 0) & v6 | (*(double *)&v4 < *(double *)&v7);
  }
  return v10 & 1;
}

uint64_t sub_1A938AF64(uint64_t a1, uint64_t a2)
{
  return DownloadingRules.canMove(from:to:)(a1, a2) & 1;
}

BOOL DownloadedRules.canMove(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  BOOL v5;

  if ((*(_BYTE *)(a2 + 16) & 0xC0) != 0x80)
    return 0;
  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = v4 >> 6 == 3 && *(_OWORD *)a1 == 0;
  if (v5 && v4 == 192)
  {
    sub_1A9086E7C(0, 0, 0xC0u);
    sub_1A9086E7C(0, 0, 0xC0u);
    return 1;
  }
  else
  {
    sub_1A908850C(*(_QWORD *)a1, v3, v4);
    sub_1A9086E7C(0, 0, 0xC0u);
    sub_1A9086E7C(v2, v3, v4);
    return v4 >> 6 != 3;
  }
}

unint64_t sub_1A938B038(uint64_t a1)
{
  unint64_t result;

  result = sub_1A938B05C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A938B05C()
{
  unint64_t result;

  result = qword_1EEABED18;
  if (!qword_1EEABED18)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AnyEpisodeDownloadStateRule, &type metadata for AnyEpisodeDownloadStateRule);
    atomic_store(result, (unint64_t *)&qword_1EEABED18);
  }
  return result;
}

unint64_t sub_1A938B0A0(uint64_t a1)
{
  unint64_t result;

  result = sub_1A938B0C4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A938B0C4()
{
  unint64_t result;

  result = qword_1EEABED40;
  if (!qword_1EEABED40)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AlwaysEpisodeStateRule, &type metadata for AlwaysEpisodeStateRule);
    atomic_store(result, (unint64_t *)&qword_1EEABED40);
  }
  return result;
}

unint64_t sub_1A938B108(uint64_t a1)
{
  unint64_t result;

  result = sub_1A938B12C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A938B12C()
{
  unint64_t result;

  result = qword_1EEABED68;
  if (!qword_1EEABED68)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for DownloadingRules, &type metadata for DownloadingRules);
    atomic_store(result, (unint64_t *)&qword_1EEABED68);
  }
  return result;
}

unint64_t sub_1A938B170(uint64_t a1)
{
  unint64_t result;

  result = sub_1A938B194();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A938B194()
{
  unint64_t result;

  result = qword_1EEABED90;
  if (!qword_1EEABED90)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for DownloadedRules, &type metadata for DownloadedRules);
    atomic_store(result, (unint64_t *)&qword_1EEABED90);
  }
  return result;
}

BOOL sub_1A938B1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  BOOL v5;

  if ((*(_BYTE *)(a2 + 16) & 0xC0) != 0x80)
    return 0;
  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = v4 >> 6 == 3 && *(_OWORD *)a1 == 0;
  if (v5 && v4 == 192)
  {
    sub_1A9086E7C(0, 0, 0xC0u);
    sub_1A9086E7C(0, 0, 0xC0u);
    return 1;
  }
  else
  {
    sub_1A908850C(*(_QWORD *)a1, v3, v4);
    sub_1A9086E7C(0, 0, 0xC0u);
    sub_1A9086E7C(v2, v3, v4);
    return v4 >> 6 != 3;
  }
}

ValueMetadata *type metadata accessor for AlwaysEpisodeStateRule()
{
  return &type metadata for AlwaysEpisodeStateRule;
}

ValueMetadata *type metadata accessor for DownloadingRules()
{
  return &type metadata for DownloadingRules;
}

ValueMetadata *type metadata accessor for DownloadedRules()
{
  return &type metadata for DownloadedRules;
}

uint64_t sub_1A938B2C4(uint64_t a1, uint64_t a2)
{
  return sub_1A938B2E4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

uint64_t sub_1A938B2E4(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  char v17;

  if ((a6 & 0xC0) != 0x40)
    return 0;
  v12 = a3 >> 6;
  if (v12 == 3 && !(a2 | a1) && a3 == 192)
  {
    sub_1A9086E7C(0, 0, 0xC0u);
    v13 = 0;
    v14 = 0;
    v15 = 192;
LABEL_12:
    sub_1A9086E7C(v13, v14, v15);
    v17 = 1;
    return v17 & 1;
  }
  sub_1A908850C(a1, a2, a3);
  sub_1A9086E7C(0, 0, 0xC0u);
  sub_1A9086E7C(a1, a2, a3);
  if ((a3 & 0x80) != 0)
  {
    v17 = 0;
  }
  else
  {
    if (v12 != 1)
    {
      sub_1A908850C(a1, a2, a3);
      sub_1A9086E7C(a1, a2, a3);
      v13 = a4;
      v14 = a5;
      v15 = a6;
      goto LABEL_12;
    }
    sub_1A9086E7C(a1, a2, a3);
    sub_1A9086E7C(a4, a5, a6);
    v17 = (((a2 & 1) == 0) | a5) ^ 1 | ((a2 & 1) == 0) & a5 | (*(double *)&a1 < *(double *)&a4);
  }
  return v17 & 1;
}

uint64_t sub_1A938B454()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1A938B4AC(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  __int128 v7;
  char v8;
  __int128 v9;
  char v10;

  v3 = *(_QWORD *)(v2 + 24);
  v4 = *((_BYTE *)a1 + 16);
  v5 = *((_BYTE *)a2 + 16);
  v9 = *a1;
  v10 = v4;
  v7 = *a2;
  v8 = v5;
  return (*(uint64_t (**)(__int128 *, __int128 *))(*(_QWORD *)(v3 + 8) + 24))(&v9, &v7) & 1;
}

uint64_t PageContextTracker.__allocating_init(historySize:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;

  if ((a2 & 1) != 0)
    a1 = 64;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEDC0);
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 16) = v4;
  return v3;
}

uint64_t static PageContextTracker.defaultHistorySize.getter()
{
  return 64;
}

uint64_t sub_1A938B598()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for PageContextTracker();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 64;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEDC0);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 16) = result;
  qword_1EEABEDB8 = v0;
  return result;
}

uint64_t static PageContextTracker.shared.getter()
{
  if (qword_1EEAB6F68 != -1)
    swift_once();
  return swift_retain();
}

uint64_t PageContextTracker.historySize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t PageContextTracker.value.getter()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (os_unfair_lock_s *)(v1 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v3 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  if (*(_QWORD *)(v3 + 16))
  {
    v4 = *(_QWORD *)(v3 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    v4 = 0;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t PageContextTracker.copy()()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (os_unfair_lock_s *)(v1 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v3 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 24) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEDC0);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v5 + 16) = v6;
  return v5;
}

Swift::Void __swiftcall PageContextTracker.push(_:)(PodcastsFoundation::MetricsPageContext a1)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  os_unfair_lock_s *v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  object = a1.rawValue._object;
  countAndFlagsBits = a1.rawValue._countAndFlagsBits;
  v4 = *(os_unfair_lock_s **)(v1 + 16);
  v5 = (uint64_t)&v4[4];
  v6 = v4 + 6;
  os_unfair_lock_lock(v4 + 6);
  sub_1A938B7B0(v5, countAndFlagsBits, (uint64_t)object, v1);
  os_unfair_lock_unlock(v6);
}

uint64_t sub_1A938B7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  swift_bridgeObjectRetain();
  sub_1A91733AC(0, 0, a2, a3);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v9 = *(_QWORD *)(a4 + 24);
  result = v8 - v9;
  if (__OFSUB__(v8, v9))
  {
    __break(1u);
  }
  else if (result >= 1)
  {
    return sub_1A938B828(result);
  }
  return result;
}

unint64_t sub_1A938B828(unint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  BOOL v3;

  if (result)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
      v3 = v2 >= result;
      result = v2 - result;
      if (v3)
        return sub_1A917429C(result, v2);
    }
    __break(1u);
  }
  return result;
}

PodcastsFoundation::MetricsPageContext_optional __swiftcall PageContextTracker.pop()()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  void *v5;
  PodcastsFoundation::MetricsPageContext_optional result;
  _QWORD v7[2];

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1A938B8AC(v2, v7);
  os_unfair_lock_unlock(v3);
  v4 = v7[0];
  v5 = (void *)v7[1];
  result.value.rawValue._object = v5;
  result.value.rawValue._countAndFlagsBits = v4;
  return result;
}

uint64_t sub_1A938B8AC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)result;
  if (*(_QWORD *)(*(_QWORD *)result + 16))
  {
    v5 = *(_QWORD *)(v3 + 32);
    v4 = *(_QWORD *)(v3 + 40);
    swift_bridgeObjectRetain();
    result = sub_1A917429C(0, 1);
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  *a2 = v5;
  a2[1] = v4;
  return result;
}

Swift::Void __swiftcall PageContextTracker.reset()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9D8];
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
}

uint64_t PageContextTracker.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t PageContextTracker.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PageContextTracker()
{
  return objc_opt_self();
}

uint64_t method lookup function for PageContextTracker()
{
  return swift_lookUpClassMethod();
}

void sub_1A938B9C4()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1A93F8010();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v0);

  if (v1)
    qword_1ED2AA450 = (uint64_t)v1;
  else
    __break(1u);
}

id static NSBundle.podcastsFoundation.getter()
{
  if (qword_1ED2ABD20 != -1)
    swift_once();
  return (id)qword_1ED2AA450;
}

uint64_t sub_1A938BA78(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

uint64_t sub_1A938BA9C(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3;

  v3 = a1;
  return a2(&v3);
}

uint64_t sub_1A938BACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  sub_1A9085C58(a1, a2, a3);
  return v6;
}

uint64_t sub_1A938BB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_projectBox();
  swift_beginAccess();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  swift_endAccess();
  return v6;
}

uint64_t sub_1A938BB90@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *);

  result = sub_1A938BC74();
  if (result)
  {
    v4 = result;
    v5 = v3;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    *(_QWORD *)(result + 24) = v5;
    v6 = sub_1A92613E0;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = result;
  return result;
}

uint64_t sub_1A938BBF4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_1A938BF48;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_1A90858C0(v1);
  return sub_1A90857C0((uint64_t)v4, v3);
}

uint64_t sub_1A938BC74()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;

  v0 = (uint64_t (*)(uint64_t))sub_1A90858D0();
  v1 = swift_release();
  v2 = v0(v1);
  swift_release();
  return v2;
}

uint64_t (*sub_1A938BCC4(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = sub_1A938BC74();
  a1[1] = v3;
  return sub_1A938BCF8;
}

uint64_t sub_1A938BCF8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1A90857C0(*a1, v3);
  sub_1A90858C0(*a1);
  sub_1A90857C0(v2, v3);
  return sub_1A9085818(v2);
}

uint64_t AnyEpisodeStateDataSource.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t AnyEpisodeStateDataSource.__deallocating_deinit()
{
  AnyEpisodeStateDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A938BDC0()
{
  return sub_1A9055750();
}

uint64_t sub_1A938BDE0()
{
  return sub_1A938BC74();
}

uint64_t sub_1A938BE00(uint64_t a1, uint64_t a2)
{
  return sub_1A90857C0(a1, a2);
}

void (*sub_1A938BE20(uint64_t **a1))(_QWORD *a1)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_1A938BCC4(v2);
  return sub_1A914C880;
}

uint64_t sub_1A938BE68(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1A9086F7C(a1, a2, a3 & 1);
}

uint64_t sub_1A938BE94()
{
  return 16;
}

__n128 sub_1A938BEA0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of EpisodeStateDataSourceProtocol.startObservingChanges()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EpisodeStateDataSourceProtocol.refreshControllerStates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EpisodeStateDataSourceProtocol.refreshControllerStates.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of EpisodeStateDataSourceProtocol.refreshControllerStates.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of EpisodeStateDataSourceProtocol.state(for:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a5 + 56))(a1, a2, a3 & 1);
}

uint64_t method lookup function for AnyEpisodeStateDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnyEpisodeStateDataSource.startObservingChanges()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of AnyEpisodeStateDataSource.refreshControllerStates.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of AnyEpisodeStateDataSource.refreshControllerStates.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of AnyEpisodeStateDataSource.refreshControllerStates.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of AnyEpisodeStateDataSource.state(for:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v3 + 184))(a1, a2, a3 & 1);
}

uint64_t sub_1A938BF24()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A938BF48(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1A938BF78()
{
  uint64_t *v0;

  return sub_1A938BB20(v0[5], v0[2], v0[3], v0[4]);
}

uint64_t sub_1A938BF84()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t *initializeBufferWithCopyOfBuffer for FairPlayServerURLConfiguration(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A93F726C();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v8((uint64_t *)((char *)a1 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v7);
    v8((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v7);
    v8((uint64_t *)((char *)a1 + a3[8]), (uint64_t *)((char *)a2 + a3[8]), v7);
  }
  return a1;
}

uint64_t destroy for FairPlayServerURLConfiguration(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_1A93F726C();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  v6(a1 + a2[5], v4);
  v6(a1 + a2[6], v4);
  v6(a1 + a2[7], v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + a2[8], v4);
}

uint64_t initializeWithCopy for FairPlayServerURLConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A93F726C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  return a1;
}

uint64_t assignWithCopy for FairPlayServerURLConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A93F726C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  return a1;
}

uint64_t initializeWithTake for FairPlayServerURLConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A93F726C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  return a1;
}

uint64_t assignWithTake for FairPlayServerURLConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A93F726C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FairPlayServerURLConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A938C3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FairPlayServerURLConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A938C438(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FairPlayServerURLConfiguration()
{
  uint64_t result;

  result = qword_1EEABEF08;
  if (!qword_1EEABEF08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A938C4B4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F726C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A938C524@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  char *v19;
  void (*v20)(uint64_t, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;

  v24 = a1;
  v2 = sub_1A93F726C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v22 - v16;
  sub_1A938C7CC();
  result = sub_1A938C808(kBagKeyLicenseStreamingStart, (uint64_t)v17);
  if (!v1)
  {
    v19 = v17;
    v20 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
    v20(v24, v19, v2);
    sub_1A938C808(kBagKeyLicenseStreamingStop, (uint64_t)v14);
    v23 = (int *)type metadata accessor for FairPlayServerURLConfiguration();
    v20(v24 + v23[5], v14, v2);
    sub_1A938C808(kBagKeyLicenseOfflineStart, (uint64_t)v11);
    v20(v24 + v23[6], v11, v2);
    sub_1A938C808(kBagKeyLicenseOfflineStop, (uint64_t)v8);
    v21 = v24;
    v20(v24 + v23[7], v8, v2);
    sub_1A938C808(kBagKeyLicenseOfflineStopNonce, (uint64_t)v5);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v20)(v21 + v23[8], v5, v2);
  }
  return result;
}

unint64_t sub_1A938C7CC()
{
  unint64_t result;

  result = qword_1EEAC07D0;
  if (!qword_1EEAC07D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEAC07D0);
  }
  return result;
}

uint64_t sub_1A938C808@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE *v14;
  _OWORD v15[2];
  _BYTE v16[24];
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_sharedInstance);
  v8 = objc_msgSend(v7, sel_syncValueForKey_, *a1);

  if (v8)
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, sizeof(v15));
  }
  sub_1A90A4E08((uint64_t)v15, (uint64_t)v16);
  if (v17)
  {
    v9 = sub_1A93F726C();
    v10 = swift_dynamicCast();
    v11 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, v10 ^ 1u, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v9) != 1)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v6, v9);
  }
  else
  {
    sub_1A905FD54((uint64_t)v16, qword_1ED2AC800);
    v13 = sub_1A93F726C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  }
  sub_1A905FD54((uint64_t)v6, &qword_1ED2AD3D0);
  sub_1A938C9EC();
  swift_allocError();
  *v14 = 4;
  return swift_willThrow();
}

unint64_t sub_1A938C9EC()
{
  unint64_t result;

  result = qword_1EEABEF50;
  if (!qword_1EEABEF50)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for FairPlayKeyLoadError, &type metadata for FairPlayKeyLoadError);
    atomic_store(result, (unint64_t *)&qword_1EEABEF50);
  }
  return result;
}

void sub_1A938CA30()
{
  _OWORD *v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v11[2];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[3];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v1);
  v2 = v0[9];
  v18 = v0[8];
  v19[0] = v2;
  *(_OWORD *)((char *)v19 + 10) = *(_OWORD *)((char *)v0 + 154);
  v3 = v0[5];
  v14 = v0[4];
  v15 = v3;
  v4 = v0[7];
  v16 = v0[6];
  v17 = v4;
  v5 = v0[1];
  v11[0] = *v0;
  v11[1] = v5;
  v6 = v0[3];
  v12 = v0[2];
  v13 = v6;
  v7 = v11[0];
  v8 = *((_QWORD *)&v5 + 1);
  v9 = v12;
  v10 = v5;
  if (((1 << v12) & 0x1CC) == 0 && ((1 << v12) & 0x23) == 0)
  {
    sub_1A912D274((uint64_t)v11);
    sub_1A912C880(v7, *((uint64_t *)&v7 + 1), v10, v8, 4u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A912D5B8((uint64_t)v11);
    sub_1A912D274((uint64_t)v11);
    sub_1A912C880(v7, *((uint64_t *)&v7 + 1), v10, v8, 4u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A912D5B8((uint64_t)v11);
    sub_1A938DB90();
    sub_1A938DD0C();
    sub_1A938DC30();
    sub_1A938CF04();
    __asm { BR              X9 }
  }
  __asm { BR              X10 }
}

uint64_t sub_1A938CD00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v6 = v5;
  v7 = v1;
  sub_1A912D274(v0 + 288);
  *(_QWORD *)(v0 + 16) = 0;
  v8 = *(_QWORD *)(v0 + 448);
  if (v8 <= 0 || v4 && (v4 != 8 || v2 | v6 | *(_QWORD *)(v0 + 8) | v3))
  {
    v8 = 0;
    v9 = 1;
  }
  else
  {
    v9 = 0;
  }
  sub_1A912D5B8(v0 + 288);
  v10 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  v13 = sub_1A9112728(v11);
  sub_1A911273C(v11);
  v15 = v14;
  v16 = sub_1A9112858(v11);
  *((_QWORD *)&v20 + 1) = sub_1A911286C(v11);
  *(_QWORD *)&v20 = v16;
  *((_QWORD *)&v19 + 1) = v11;
  *(_QWORD *)&v19 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)&v18 = v11;
  *((_QWORD *)&v18 + 1) = *(_QWORD *)(v0 + 40);
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((__int128 *)(v0 + 240), (char *)(v0 + 239), (char *)(v0 + 238), (char *)(v0 + 237), v12, v13, v15, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v18, v19, (uint64_t)&unk_1E54D6BF0, *(_QWORD *)(v0 + 24), (char *)(v0 + 64), *(_QWORD *)(v0 + 16), 1, v20, v8, v9,
           0,
           v7,
           0,
           0,
           0,
           0,
           0,
           v11,
           0,
           0,
           2);
}

void sub_1A938CE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A912D274(v0 + 288);
  sub_1A912D274(v0 + 288);
  sub_1A912C880(v3, v1, *(_QWORD *)(v0 + 8), v2, 4u);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A912D5B8(v0 + 288);
  JUMPOUT(0x1A938CD10);
}

void sub_1A938CEC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1A912D274((uint64_t)(v0 + 36));
  v4 = v0[55];
  if (v4 >= 1)
  {
    if (v1 | v3 | v0[1] | v2)
      v4 = 0;
    v0[2] = v4;
    JUMPOUT(0x1A938CD18);
  }
  JUMPOUT(0x1A938CD10);
}

void sub_1A938CF04()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[8];
  uint64_t v7;
  char *v8;
  char *v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA360);
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1A93F6EAC();
  MEMORY[0x1E0C80A78](v2);
  v9 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v6 - v5;
  v7 = sub_1A93F6F60();
  v6[7] = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  __asm { BR              X10 }
}

uint64_t sub_1A938D028(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v1 - 144) = a1;
  sub_1A915997C();
  *(_QWORD *)(v3 + 32) = sub_1A93F8B38();
  *(_QWORD *)(v3 + 40) = v4;
  return v3;
}

char *sub_1A938DB90()
{
  uint64_t v0;
  char *v1;
  unint64_t v2;
  unint64_t v3;

  v1 = (char *)*(&off_1E54F89D8 + *(char *)(v0 + 32));
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_1A91182DC(0, *((_QWORD *)v1 + 2) + 1, 1, v1);
  v3 = *((_QWORD *)v1 + 2);
  v2 = *((_QWORD *)v1 + 3);
  if (v3 >= v2 >> 1)
    v1 = sub_1A91182DC((char *)(v2 > 1), v3 + 1, 1, v1);
  *((_QWORD *)v1 + 2) = v3 + 1;
  v1[v3 + 32] = 7;
  return v1;
}

unint64_t sub_1A938DC30()
{
  uint64_t v0;
  int v1;
  uint64_t inited;
  void *v4;

  v1 = 1 << *(_BYTE *)(v0 + 32);
  if ((v1 & 0xDC) != 0)
    return sub_1A91129C4(MEMORY[0x1E0DEE9D8]);
  if ((v1 & 0x22) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7F0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405950;
    *(_BYTE *)(inited + 32) = 3;
    *(_QWORD *)(inited + 40) = &unk_1E54D6BA0;
    *(_BYTE *)(inited + 48) = 1;
    v4 = &unk_1E54D6BC8;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7F0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405950;
    *(_BYTE *)(inited + 32) = 3;
    *(_QWORD *)(inited + 40) = &unk_1E54D6B50;
    *(_BYTE *)(inited + 48) = 1;
    v4 = &unk_1E54D6B78;
  }
  *(_QWORD *)(inited + 56) = v4;
  return sub_1A91129C4(inited);
}

unint64_t sub_1A938DD0C()
{
  uint64_t v0;
  int v1;
  uint64_t inited;
  void *v4;

  v1 = 1 << *(_BYTE *)(v0 + 32);
  if ((v1 & 0xDC) != 0)
    return sub_1A91129C4(MEMORY[0x1E0DEE9D8]);
  if ((v1 & 0x122) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7F0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405520;
    *(_BYTE *)(inited + 32) = 1;
    v4 = &unk_1E54D6B28;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7F0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405520;
    *(_BYTE *)(inited + 32) = 0;
    v4 = &unk_1E54D6B00;
  }
  *(_QWORD *)(inited + 40) = v4;
  return sub_1A91129C4(inited);
}

uint64_t sub_1A938DDBC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA360);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL MTPodcast.shouldBeHiddenFromUpNext.getter()
{
  void *v0;
  double v1;
  _BOOL8 result;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;

  objc_msgSend(v0, sel_lastRemovedFromUpNextDate);
  result = 0;
  if (v1 != 0.0)
  {
    if (!objc_msgSend(v0, sel_subscribed))
      return 1;
    objc_msgSend(v0, sel_latestEpisodeAvailabilityTime);
    v4 = v3;
    objc_msgSend(v0, sel_lastRemovedFromUpNextDate);
    if (v5 >= v4)
    {
      objc_msgSend(v0, sel_addedDate);
      v7 = v6;
      objc_msgSend(v0, sel_lastRemovedFromUpNextDate);
      if (v8 >= v7)
        return 1;
    }
  }
  return result;
}

uint64_t TranscriptData.TimeBombedURLs.init(shazamSignatureURL:ttmlURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  sub_1A908F9F4(a1, a3);
  v5 = a3 + *(int *)(type metadata accessor for TranscriptData.TimeBombedURLs() + 20);
  return sub_1A908F9F4(a2, v5);
}

uint64_t TranscriptData.TimeBombedURLs.shazamSignatureURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A906A3F0(v1, a1);
}

uint64_t TranscriptData.TimeBombedURLs.ttmlURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for TranscriptData.TimeBombedURLs() + 20);
  return sub_1A906A3F0(v3, a1);
}

uint64_t TranscriptData.TimeBombedURLs.inMemorySize.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  char *v33;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v33 - v6;
  v8 = sub_1A93F726C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - v13;
  sub_1A906A3F0(v1, (uint64_t)v7);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v15(v7, 1, v8) == 1)
  {
    sub_1A914149C((uint64_t)v7);
    v16 = 0;
  }
  else
  {
    v33 = v11;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    v17 = sub_1A93F7224();
    v19 = sub_1A9122048(v17, v18);
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = 0;
      v16 = 0;
      do
      {
        v22 = *(_QWORD *)(v19 + 8 * v21 + 32);
        v23 = __OFADD__(v16, v22);
        v16 += v22;
        if (v23)
        {
          __break(1u);
          goto LABEL_23;
        }
        ++v21;
      }
      while (v20 != v21);
      swift_bridgeObjectRelease();
      if (v16 < 0)
        goto LABEL_24;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = 0;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v11 = v33;
  }
  v24 = type metadata accessor for TranscriptData.TimeBombedURLs();
  sub_1A906A3F0(v1 + *(int *)(v24 + 20), (uint64_t)v4);
  if (v15(v4, 1, v8) == 1)
  {
    sub_1A914149C((uint64_t)v4);
    return v16;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v4, v8);
  v25 = sub_1A93F7224();
  v27 = sub_1A9122048(v25, v26);
  v28 = *(_QWORD *)(v27 + 16);
  if (!v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = 0;
LABEL_20:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v16 += v30;
    return v16;
  }
  v29 = 0;
  v30 = 0;
  while (1)
  {
    v31 = *(_QWORD *)(v27 + 8 * v29 + 32);
    v23 = __OFADD__(v30, v31);
    v30 += v31;
    if (v23)
      break;
    if (v28 == ++v29)
    {
      swift_bridgeObjectRelease();
      if (v30 < 0)
        goto LABEL_24;
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t sub_1A938E23C()
{
  _BYTE *v0;

  if (*v0)
    return 0x4C52556C6D7474;
  else
    return 0xD000000000000012;
}

uint64_t sub_1A938E27C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A938F2E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A938E2A0()
{
  sub_1A938E444();
  return sub_1A93F945C();
}

uint64_t sub_1A938E2C8()
{
  sub_1A938E444();
  return sub_1A93F9468();
}

uint64_t TranscriptData.TimeBombedURLs.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEF58);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A938E444();
  sub_1A93F93D8();
  v8[15] = 0;
  sub_1A93F726C();
  sub_1A912312C(&qword_1EEAB7BF8, MEMORY[0x1E0CB0010]);
  sub_1A93F8FE8();
  if (!v1)
  {
    type metadata accessor for TranscriptData.TimeBombedURLs();
    v8[14] = 1;
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A938E444()
{
  unint64_t result;

  result = qword_1EEABEF60;
  if (!qword_1EEABEF60)
  {
    result = MEMORY[0x1AF414014](&unk_1A9421D9C, &_s14TimeBombedURLsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEABEF60);
  }
  return result;
}

uint64_t TranscriptData.TimeBombedURLs.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char v28;
  char v29;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v4);
  v25 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v26 = (char *)&v20 - v7;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEF68);
  v8 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TranscriptData.TimeBombedURLs();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A938E444();
  sub_1A93F93C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v22 = v13;
  v23 = a1;
  v21 = v11;
  v14 = v8;
  sub_1A93F726C();
  v29 = 0;
  sub_1A912312C(&qword_1EEAB7C30, MEMORY[0x1E0CB0038]);
  v16 = (uint64_t)v26;
  v15 = v27;
  sub_1A93F8F34();
  v17 = (uint64_t)v22;
  sub_1A908F9F4(v16, (uint64_t)v22);
  v28 = 1;
  v18 = (uint64_t)v25;
  sub_1A93F8F34();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v15);
  sub_1A908F9F4(v18, v17 + *(int *)(v21 + 20));
  sub_1A938E70C(v17, v24);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  return sub_1A938E750(v17);
}

uint64_t sub_1A938E70C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptData.TimeBombedURLs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A938E750(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TranscriptData.TimeBombedURLs();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A938E78C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TranscriptData.TimeBombedURLs.init(from:)(a1, a2);
}

uint64_t sub_1A938E7A0(_QWORD *a1)
{
  return TranscriptData.TimeBombedURLs.encode(to:)(a1);
}

uint64_t TranscriptDataError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t static TranscriptDataError.== infix(_:_:)()
{
  return 1;
}

uint64_t TranscriptDataError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

unint64_t sub_1A938E828()
{
  unint64_t result;

  result = qword_1EEABEF70;
  if (!qword_1EEABEF70)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for TranscriptDataError, &type metadata for TranscriptDataError);
    atomic_store(result, (unint64_t *)&qword_1EEABEF70);
  }
  return result;
}

uint64_t dispatch thunk of TranscriptTimeBombedURLProvider.timeBombedURLs(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t *initializeBufferWithCopyOfBuffer for ServerTranscript.Attributes.AssetUrls(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A93F726C();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = *(int *)(a3 + 20);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    if (v9((uint64_t *)v14, 1, v7))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for ServerTranscript.Attributes.AssetUrls(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + *(int *)(a2 + 20);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  return result;
}

char *initializeWithCopy for ServerTranscript.Attributes.AssetUrls(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for ServerTranscript.Attributes.AssetUrls(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

char *initializeWithTake for ServerTranscript.Attributes.AssetUrls(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for ServerTranscript.Attributes.AssetUrls(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

uint64_t _s14TimeBombedURLsVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A938F010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s14TimeBombedURLsVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A938F05C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TranscriptDataError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A938F0E0 + 4 * byte_1A9421B40[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A938F100 + 4 * byte_1A9421B45[v4]))();
}

_BYTE *sub_1A938F0E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A938F100(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A938F108(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A938F110(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A938F118(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A938F120(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptDataError()
{
  return &type metadata for TranscriptDataError;
}

uint64_t _s14TimeBombedURLsV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A938F188 + 4 * byte_1A9421B4F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A938F1BC + 4 * byte_1A9421B4A[v4]))();
}

uint64_t sub_1A938F1BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A938F1C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A938F1CCLL);
  return result;
}

uint64_t sub_1A938F1D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A938F1E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A938F1E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A938F1EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14TimeBombedURLsV10CodingKeysOMa()
{
  return &_s14TimeBombedURLsV10CodingKeysON;
}

unint64_t sub_1A938F20C()
{
  unint64_t result;

  result = qword_1EEABEF78;
  if (!qword_1EEABEF78)
  {
    result = MEMORY[0x1AF414014](&unk_1A9421D74, &_s14TimeBombedURLsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEABEF78);
  }
  return result;
}

unint64_t sub_1A938F254()
{
  unint64_t result;

  result = qword_1EEABEF80;
  if (!qword_1EEABEF80)
  {
    result = MEMORY[0x1AF414014](&unk_1A9421CE4, &_s14TimeBombedURLsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEABEF80);
  }
  return result;
}

unint64_t sub_1A938F29C()
{
  unint64_t result;

  result = qword_1EEABEF88;
  if (!qword_1EEABEF88)
  {
    result = MEMORY[0x1AF414014](&unk_1A9421D0C, &_s14TimeBombedURLsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEABEF88);
  }
  return result;
}

uint64_t sub_1A938F2E0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001A944F230 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C52556C6D7474 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id AnalyticsEvent.__allocating_init(name:payload:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v10[6];

  v5 = objc_allocWithZone(v2);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  v10[4] = sub_1A90D2884;
  v10[5] = v6;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1A90AC824;
  v10[3] = &block_descriptor_73;
  v7 = _Block_copy(v10);
  swift_release();
  v8 = objc_msgSend(v5, sel_initWithName_generator_, a1, v7);

  _Block_release(v7);
  return v8;
}

id AnalyticsEvent.name.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___PFAnalyticsEvent_name);
}

uint64_t sub_1A938F4A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___PFAnalyticsEvent_payloadGenerator);
  swift_beginAccess();
  v2 = *v1;
  swift_retain();
  return v2;
}

uint64_t sub_1A938F584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___PFAnalyticsEvent_payloadGenerator);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_release();
}

uint64_t sub_1A938F5E0@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(*a1 + OBJC_IVAR___PFAnalyticsEvent_payloadGenerator);
  swift_beginAccess();
  v5 = *v3;
  v4 = v3[1];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_1A938FBD0;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v6;
  return swift_retain();
}

uint64_t sub_1A938F660(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (**v6)();

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = (uint64_t (**)())(*a2 + OBJC_IVAR___PFAnalyticsEvent_payloadGenerator);
  swift_beginAccess();
  *v6 = sub_1A938FBA0;
  v6[1] = (uint64_t (*)())v5;
  swift_retain();
  return swift_release();
}

uint64_t (*sub_1A938F6F0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id AnalyticsEvent.__allocating_init(name:generator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  objc_super v10;

  v7 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v7[OBJC_IVAR___PFAnalyticsEvent_name] = a1;
  v8 = &v7[OBJC_IVAR___PFAnalyticsEvent_payloadGenerator];
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id AnalyticsEvent.init(name:generator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_super v6;

  *(_QWORD *)&v3[OBJC_IVAR___PFAnalyticsEvent_name] = a1;
  v4 = &v3[OBJC_IVAR___PFAnalyticsEvent_payloadGenerator];
  *(_QWORD *)v4 = a2;
  *((_QWORD *)v4 + 1) = a3;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for AnalyticsEvent();
  return objc_msgSendSuper2(&v6, sel_init);
}

id AnalyticsEvent.init(name:payload:)(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v9[6];

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  v9[4] = sub_1A938FC10;
  v9[5] = v5;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1A90AC824;
  v9[3] = &block_descriptor_7_4;
  v6 = _Block_copy(v9);
  swift_release();
  v7 = objc_msgSend(v2, sel_initWithName_generator_, a1, v6);

  _Block_release(v6);
  return v7;
}

uint64_t sub_1A938F8B0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1A938F928()
{
  uint64_t v0;
  void (**v1)(uint64_t);
  void (*v2)(uint64_t);
  uint64_t v3;

  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  sub_1A93F8040();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  v1 = (void (**)(uint64_t))(v0 + OBJC_IVAR___PFAnalyticsEvent_payloadGenerator);
  swift_beginAccess();
  v2 = *v1;
  v3 = swift_retain();
  v2(v3);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABEFA0);
  sub_1A93F8094();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

id AnalyticsEvent.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AnalyticsEvent.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AnalyticsEvent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnalyticsEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for AnalyticsEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnalyticsEvent.payloadGenerator.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AnalyticsEvent.payloadGenerator.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AnalyticsEvent.payloadGenerator.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AnalyticsEvent.__allocating_init(name:generator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1A938FB58()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A938FB7C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A938FBA0()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_1A938FBD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

id DownloadableURLOptions.__allocating_init(_:nonAppInitiated:)(uint64_t a1, char a2)
{
  objc_class *v2;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;

  v5 = objc_allocWithZone(v2);
  sub_1A93F7170();
  v6 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_init_nonAppInitiated_, v6, a2 & 1);

  v8 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

Swift::Void __swiftcall NSMutableURLRequest.setNonAppInitiated(_:)(Swift::Bool a1)
{
  void *v1;

  objc_msgSend(v1, sel__setNonAppInitiated_, a1);
}

uint64_t DownloadableURLOptions.urlRawString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation22DownloadableURLOptions_urlRawString);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DownloadableURLOptions.url.getter()
{
  return sub_1A93F7248();
}

uint64_t DownloadableURLOptions.nonAppInitiated.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation22DownloadableURLOptions_nonAppInitiated);
  swift_beginAccess();
  return *v1;
}

uint64_t DownloadableURLOptions.nonAppInitiated.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22DownloadableURLOptions_nonAppInitiated);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*DownloadableURLOptions.nonAppInitiated.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id DownloadableURLOptions.init(_:nonAppInitiated:)(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v6;
  id v7;
  uint64_t v8;

  v3 = v2;
  sub_1A93F7170();
  v6 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v3, sel_init_nonAppInitiated_, v6, a2 & 1);

  v8 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

id DownloadableURLOptions.__allocating_init(_:nonAppInitiated:)(uint64_t a1, uint64_t a2, char a3)
{
  objc_class *v3;
  _BYTE *v7;
  _QWORD *v8;
  objc_super v10;

  v7 = objc_allocWithZone(v3);
  v8 = &v7[OBJC_IVAR____TtC18PodcastsFoundation22DownloadableURLOptions_urlRawString];
  *v8 = a1;
  v8[1] = a2;
  v7[OBJC_IVAR____TtC18PodcastsFoundation22DownloadableURLOptions_nonAppInitiated] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id DownloadableURLOptions.init(_:nonAppInitiated:)(uint64_t a1, uint64_t a2, char a3)
{
  _BYTE *v3;
  objc_class *ObjectType;
  _QWORD *v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = &v3[OBJC_IVAR____TtC18PodcastsFoundation22DownloadableURLOptions_urlRawString];
  *v8 = a1;
  v8[1] = a2;
  v3[OBJC_IVAR____TtC18PodcastsFoundation22DownloadableURLOptions_nonAppInitiated] = a3;
  v10.receiver = v3;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

id DownloadableURLOptions.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DownloadableURLOptions.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DownloadableURLOptions.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for DownloadableURLOptions()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DownloadableURLOptions.__allocating_init(_:nonAppInitiated:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t NSManagedObjectContext.shows<A>(for:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;

  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a4;
  v9[3] = v8;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = a1;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1A93F8868();
  v11 = NSManagedObjectContext.performAndPublish<A>(queue:_:)(v10, (uint64_t)sub_1A9390498, (uint64_t)v9, a4);
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_1A9390274()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9390298(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  __CFString *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  unint64_t v14;
  uint64_t v15;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1AF41420C](v3);
  if (!v4)
    return a2(MEMORY[0x1E0DEE9D8]);
  v5 = (void *)v4;
  v6 = (void *)objc_opt_self();
  v7 = CFSTR("MTPodcast");
  v8 = swift_bridgeObjectRetain();
  sub_1A9159F94(v8);
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1A93F85EC();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v6, sel_predicateForPodcastUuids_, v9);

  v11 = MEMORY[0x1E0DEE9D8];
  v12 = (void *)sub_1A93F82F8();
  v13 = objc_msgSend(v5, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_, v7, v10, v12, 1);

  if (v13)
  {
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
    v14 = sub_1A93F8310();

    v15 = sub_1A9261A34(v14);
    swift_bridgeObjectRelease();
    if (v15)
      v11 = v15;
  }
  a2(v11);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9390464()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A9390498()
{
  uint64_t v0;

  return sub_1A9390298(*(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t NSManagedObjectContext.unsafeShows(for:sortDescriptors:limit:)(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  sub_1A93F8040();
  v7 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v8 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  v10 = Array<A>.showCoreDataPredicate()(a1);
  objc_msgSend(v9, sel_setPredicate_, v10);

  if (!(a2 >> 62))
  {
    if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  v14 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_3:
    sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
    v11 = (void *)sub_1A93F82F8();
    objc_msgSend(v9, sel_setSortDescriptors_, v11);

  }
LABEL_4:
  if ((a4 & 1) == 0)
    objc_msgSend(v9, sel_setFetchLimit_, a3);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4260);
  v12 = sub_1A93F89DC();

  return v12;
}

uint64_t NSManagedObjectContext.unsafeShow(for:sortDescriptors:)(void *a1, void *a2, char a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t inited;
  unint64_t v10;
  uint64_t result;
  id v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABDE8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  *(_BYTE *)(inited + 48) = a3;
  sub_1A91599C0(a1, a2, a3);
  v10 = NSManagedObjectContext.unsafeShows(for:sortDescriptors:limit:)(inited, a4, 1, 0);
  swift_setDeallocating();
  result = swift_arrayDestroy();
  if (v4)
    return a4;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    a4 = sub_1A93F8E5C();
    result = swift_bridgeObjectRelease();
    if (!a4)
      goto LABEL_8;
  }
  else
  {
    a4 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a4)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return a4;
    }
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x1AF4129DC](0, v10);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v10 + 32);
LABEL_7:
    a4 = (unint64_t)v12;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  result = NSManagedObjectContext.unsafeShow(for:sortDescriptors:)(a1, a2, a3, a4);
  if (!v4 && !result)
  {
    sub_1A9390800();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1A9390800()
{
  unint64_t result;

  result = qword_1EEABEFB0;
  if (!qword_1EEABEFB0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ShowFetchError, &type metadata for ShowFetchError);
    atomic_store(result, (unint64_t *)&qword_1EEABEFB0);
  }
  return result;
}

uint64_t static ShowFetchError.== infix(_:_:)()
{
  return 1;
}

uint64_t ShowFetchError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t ShowFetchError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

unint64_t sub_1A93908B4()
{
  unint64_t result;

  result = qword_1EEABEFB8;
  if (!qword_1EEABEFB8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ShowFetchError, &type metadata for ShowFetchError);
    atomic_store(result, (unint64_t *)&qword_1EEABEFB8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ShowFetchError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A9390938 + 4 * byte_1A9421E90[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A9390958 + 4 * byte_1A9421E95[v4]))();
}

_BYTE *sub_1A9390938(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A9390958(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9390960(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9390968(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9390970(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9390978(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ShowFetchError()
{
  return &type metadata for ShowFetchError;
}

uint64_t AnyAssetCache.containsAsset(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))() & 1;
}

uint64_t AnyAssetCache.invalidate(at:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t AnyAssetCache.asset(at:)()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t AnyAssetCache.store(asset:at:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A9390A1C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 40) + 24))();
}

uint64_t sub_1A9390A58()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 40) + 32))();
}

uint64_t sub_1A9390A94()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 40) + 40))() & 1;
}

uint64_t sub_1A9390AD4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 40) + 48))();
}

uint64_t sub_1A9390B18()
{
  return AnyAssetCache.invalidate(at:)();
}

_QWORD *sub_1A9390B2C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1A9390BB8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  return a1;
}

uint64_t sub_1A9390C1C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

id MTPodcast.applyFollowedShowSettings(for:)(uint64_t a1)
{
  void *v1;

  objc_msgSend(v1, sel_setNotifications_, 1);
  objc_msgSend(v1, sel_setShowTypeSetting_, a1);
  objc_msgSend(v1, sel_setHidesPlayedEpisodes_, 0);
  objc_msgSend(v1, sel_setEpisodeLimit_, 0x100000001);
  return objc_msgSend(v1, sel_setDeletePlayedEpisodes_, 0xFFFFFFFFLL);
}

Swift::Void __swiftcall MTPodcast.applyUnfollowedShowSettings()()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v0, sel_showTypeInFeed);
  v3 = objc_msgSend(v1, sel_showTypeFromString_, v2);

  objc_msgSend(v0, sel_applyFollowedShowSettingsFor_, v3);
  objc_msgSend(v0, sel_setEpisodeLimit_, 0x100000000);
  objc_msgSend(v0, sel_setNotifications_, 0);
}

uint64_t getEnumTagSinglePayload for ShowSettings(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ShowSettings(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowSettings()
{
  return &type metadata for ShowSettings;
}

unint64_t sub_1A9390F70()
{
  return static MAPIRepresentable.typedIncludes.getter();
}

unint64_t static MAPIRepresentable.typedIncludes.getter()
{
  return sub_1A91129C4(MEMORY[0x1E0DEE9D8]);
}

uint64_t dispatch thunk of MAPIRepresentable.init(mediaObject:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of static MAPIRepresentable.serverContentType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static MAPIRepresentable.typedIncludes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MAPIRepresentable.adamID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MAPIRepresentable.alignID(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

id static AnalyticsEvent.drmKeyRecovered(payload:)(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  __CFString *v5;
  id v6;
  _QWORD v8[6];

  v2 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a1;
  v8[4] = sub_1A90D287C;
  v8[5] = v3;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1A90AC824;
  v8[3] = &block_descriptor_74;
  v4 = _Block_copy(v8);
  v5 = CFSTR("com.apple.podcasts.DRMKeysRecovered");
  swift_bridgeObjectRetain();
  swift_release();
  v6 = objc_msgSend(v2, sel_initWithName_generator_, v5, v4);

  _Block_release(v4);
  return v6;
}

id static AnalyticsEvent.globalRetentionPolicy.getter()
{
  objc_class *v0;
  char *v1;
  id (**v2)();
  __CFString *v3;
  objc_super v5;

  v0 = (objc_class *)type metadata accessor for AnalyticsEvent();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR___PFAnalyticsEvent_name] = CFSTR("com.apple.podcasts.downloads.settings.global.retention-policy");
  v2 = (id (**)())&v1[OBJC_IVAR___PFAnalyticsEvent_payloadGenerator];
  *v2 = sub_1A939146C;
  v2[1] = 0;
  v5.receiver = v1;
  v5.super_class = v0;
  v3 = CFSTR("com.apple.podcasts.downloads.settings.global.retention-policy");
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_1A9391134()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id static AnalyticsEvent.drmKeyRecovered(generator:)(uint64_t a1, uint64_t a2)
{
  objc_class *v4;
  char *v5;
  char *v6;
  __CFString *v7;
  objc_super v9;

  v4 = (objc_class *)type metadata accessor for AnalyticsEvent();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR___PFAnalyticsEvent_name] = CFSTR("com.apple.podcasts.DRMKeysRecovered");
  v6 = &v5[OBJC_IVAR___PFAnalyticsEvent_payloadGenerator];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v9.receiver = v5;
  v9.super_class = v4;
  v7 = CFSTR("com.apple.podcasts.DRMKeysRecovered");
  swift_retain();
  return objc_msgSendSuper2(&v9, sel_init);
}

id sub_1A939146C()
{
  id result;
  id v1;
  uint64_t inited;

  result = PFAnalyticsNumberForGlobalEpisodeLimit();
  if (result)
  {
    v1 = result;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9730);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405520;
    *(_QWORD *)(inited + 32) = 0xD000000000000015;
    *(_QWORD *)(inited + 40) = 0x80000001A944F450;
    *(_QWORD *)(inited + 48) = v1;
    return (id)sub_1A90C1B64(inited);
  }
  return result;
}

id static AnalyticsEvent.episodeMissingDownload()()
{
  __CFString *v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  _QWORD v7[6];

  v0 = CFSTR("com.apple.podcastsEpisodeMissingAsset");
  v1 = sub_1A90C1B64(MEMORY[0x1E0DEE9D8]);
  v2 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  v7[4] = sub_1A9391F40;
  v7[5] = v3;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = sub_1A90AC824;
  v7[3] = &block_descriptor_7_5;
  v4 = _Block_copy(v7);
  swift_release();
  v5 = objc_msgSend(v2, sel_initWithName_generator_, v0, v4);

  _Block_release(v4);
  return v5;
}

id AnalyticsEvent.__allocating_init(cacheDeletedMediaFiles:)(uint64_t a1)
{
  objc_class *v1;
  uint64_t inited;
  id v4;
  __CFString *v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD aBlock[6];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9730);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_QWORD *)(inited + 32) = 0x45646574656C6564;
  *(_QWORD *)(inited + 40) = 0xEF7365646F736970;
  v4 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v5 = CFSTR("com.apple.podcasts.mediaFilesCacheDeleted");
  *(_QWORD *)(inited + 48) = objc_msgSend(v4, sel_initWithInteger_, a1);
  v6 = sub_1A90C1B64(inited);
  v7 = objc_allocWithZone(v1);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v6;
  aBlock[4] = sub_1A9391F40;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A90AC824;
  aBlock[3] = &block_descriptor_14_0;
  v9 = _Block_copy(aBlock);
  swift_release();
  v10 = objc_msgSend(v7, sel_initWithName_generator_, v5, v9);

  _Block_release(v9);
  return v10;
}

id AnalyticsEvent.__allocating_init(cacheDeletedFilesRestored:failed:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t inited;
  id v6;
  __CFString *v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD v14[6];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9730);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405950;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x80000001A944F3F0;
  v6 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v7 = CFSTR("com.apple.podcasts.cacheDeleteRedownloaded");
  *(_QWORD *)(inited + 48) = objc_msgSend(v6, sel_initWithInteger_, a1);
  strcpy((char *)(inited + 56), "failedEpisodes");
  *(_BYTE *)(inited + 71) = -18;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a2);
  v8 = sub_1A90C1B64(inited);
  v9 = objc_allocWithZone(v2);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  v14[4] = sub_1A9391F40;
  v14[5] = v10;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1A90AC824;
  v14[3] = &block_descriptor_21_3;
  v11 = _Block_copy(v14);
  swift_release();
  v12 = objc_msgSend(v9, sel_initWithName_generator_, v7, v11);

  _Block_release(v11);
  return v12;
}

id _s18PodcastsFoundation14AnalyticsEventC25transcriptAlignmentFailed6reasonACSS_tFZ_0()
{
  uint64_t inited;
  __CFString *v1;
  unint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD aBlock[6];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9730);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_QWORD *)(inited + 32) = 0x6E6F73616572;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v1 = CFSTR("com.apple.podcasts.transcriptAlignmentFailed");
  *(_QWORD *)(inited + 48) = sub_1A93F8010();
  v2 = sub_1A90C1B64(inited);
  v3 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  aBlock[4] = sub_1A9391F40;
  aBlock[5] = v4;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A90AC824;
  aBlock[3] = &block_descriptor_66_3;
  v5 = _Block_copy(aBlock);
  swift_release();
  v6 = objc_msgSend(v3, sel_initWithName_generator_, v1, v5);

  _Block_release(v5);
  return v6;
}

id _s18PodcastsFoundation14AnalyticsEventC31downloadedFileHasiPodLibraryURL14discoveryPoint4path6sourceACSS_S2SSgtFZ_0()
{
  uint64_t inited;
  __CFString *v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD aBlock[6];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9730);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A94055A0;
  *(_QWORD *)(inited + 32) = 0x7265766F63736944;
  *(_QWORD *)(inited + 40) = 0xEF746E696F502079;
  v1 = CFSTR("com.apple.podcasts.DownloadedFileHasiPodLibraryURL");
  *(_QWORD *)(inited + 48) = sub_1A93F8010();
  *(_QWORD *)(inited + 56) = 1752457552;
  *(_QWORD *)(inited + 64) = 0xE400000000000000;
  *(_QWORD *)(inited + 72) = sub_1A93F8010();
  *(_QWORD *)(inited + 80) = 0x656372756F53;
  *(_QWORD *)(inited + 88) = 0xE600000000000000;
  swift_bridgeObjectRetain();
  v2 = sub_1A93F8010();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = v2;
  v3 = sub_1A90C1B64(inited);
  v4 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  aBlock[4] = sub_1A9391F40;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A90AC824;
  aBlock[3] = &block_descriptor_59_0;
  v6 = _Block_copy(aBlock);
  swift_release();
  v7 = objc_msgSend(v4, sel_initWithName_generator_, v1, v6);

  _Block_release(v6);
  return v7;
}

id _s18PodcastsFoundation14AnalyticsEventC19darkDownloadsChange7wasDark02isI06reason12previousExitACSb_SbSo06PFDarkG6ReasonV0B04DateVtFZ_0(char a1, char a2, uint64_t a3)
{
  uint64_t inited;
  id v7;
  __CFString *v8;
  double v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD v16[6];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9730);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405760;
  *(_QWORD *)(inited + 32) = 0x6B726144736177;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v7 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v8 = CFSTR("com.apple.podcasts.darkDownloadChange");
  *(_QWORD *)(inited + 48) = objc_msgSend(v7, sel_initWithBool_, a1 & 1);
  *(_QWORD *)(inited + 56) = 0x6B7261447369;
  *(_QWORD *)(inited + 64) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, a2 & 1);
  *(_QWORD *)(inited + 80) = 0x656372756F73;
  *(_QWORD *)(inited + 88) = 0xE600000000000000;
  *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, a3);
  *(_QWORD *)(inited + 104) = 0xD000000000000010;
  *(_QWORD *)(inited + 112) = 0x80000001A944F490;
  sub_1A93F7344();
  *(_QWORD *)(inited + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v9);
  v10 = sub_1A90C1B64(inited);
  v11 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v10;
  v16[4] = sub_1A9391F40;
  v16[5] = v12;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1A90AC824;
  v16[3] = &block_descriptor_38_2;
  v13 = _Block_copy(v16);
  swift_release();
  v14 = objc_msgSend(v11, sel_initWithName_generator_, v8, v13);

  _Block_release(v13);
  return v14;
}

uint64_t sub_1A9391EE4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A9391F5C(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a2 + 16))(a2, a1 & 1);
}

id FairPlayRolloutController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static FairPlayRolloutController.shared.getter()
{
  if (qword_1ED2A7888 != -1)
    swift_once();
  return (id)qword_1ED2A7878;
}

id FairPlayRolloutController.init()()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR___PFFairPlayRolloutController____lazy_storage___internalQueue] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

id FairPlayRolloutController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A9392054()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9392078()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A939209C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A93920C0(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_release();
}

uint64_t MTPodcast.adamId.getter()
{
  void *v0;
  uint64_t v2;

  if ((objc_msgSend((id)objc_opt_self(), sel_isEmpty_, objc_msgSend(v0, sel_storeCollectionId)) & 1) != 0)
    return 0;
  v2 = (uint64_t)objc_msgSend(v0, sel_storeCollectionId);
  return v2 & ~(v2 >> 63);
}

void sub_1A9392148(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  v4 = sub_1A93F738C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1)
  {
    sub_1A93F7380();
    sub_1A93F72D8();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_QWORD *)(v2 + 160) = v12;
    v10 = (_BYTE *)(v2 + 168);
  }
  else
  {
    if (a1)
      return;
    sub_1A93F7380();
    sub_1A93F72D8();
    v9 = v8;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_QWORD *)(v2 + 144) = v9;
    v10 = (_BYTE *)(v2 + 152);
  }
  *v10 = 0;
}

uint64_t sub_1A9392220()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SyncKeysInMemoryStore()
{
  return objc_opt_self();
}

uint64_t sub_1A9392284()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 56);
}

uint64_t sub_1A9392290(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 56) = result;
  return result;
}

uint64_t sub_1A939229C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 57);
}

uint64_t sub_1A93922A8(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 57) = result;
  return result;
}

uint64_t sub_1A93922B4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 58);
}

uint64_t sub_1A93922C0(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 58) = result;
  return result;
}

uint64_t sub_1A93922CC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  if (a1 == 1)
    return *(unsigned __int8 *)(v2 + 17);
  if (a1)
    return 0;
  return *(unsigned __int8 *)(v2 + 16);
}

uint64_t sub_1A93922F4(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  if (a2 == 1)
  {
    *(_BYTE *)(v3 + 17) = result & 1;
  }
  else if (!a2)
  {
    *(_BYTE *)(v3 + 16) = result & 1;
  }
  return result;
}

uint64_t sub_1A939231C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v2 = *v1;
  if (a1 == 1)
  {
    v3 = (uint64_t *)(v2 + 40);
  }
  else
  {
    if (a1)
      return 0;
    v3 = (uint64_t *)(v2 + 24);
  }
  v4 = *v3;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_1A939237C(uint64_t result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;

  v4 = (_QWORD *)*v3;
  if (result == 1)
  {
    v5 = v4 + 5;
    v6 = v4 + 6;
  }
  else
  {
    if (result)
      return result;
    v5 = v4 + 3;
    v6 = v4 + 4;
  }
  *v5 = a2;
  *v6 = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A93923DC(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v1;
  if (result == 1)
  {
    v3 = (_QWORD *)(v2 + 40);
  }
  else
  {
    if (result)
      return result;
    v3 = (_QWORD *)(v2 + 24);
  }
  *v3 = 0;
  v3[1] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9392410(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  if (a1 == 1)
    return *(unsigned __int8 *)(v2 + 60);
  if (a1)
    return 0;
  return *(unsigned __int8 *)(v2 + 59);
}

uint64_t sub_1A9392438(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  if (a2 == 1)
  {
    *(_BYTE *)(v3 + 60) = result & 1;
  }
  else if (!a2)
  {
    *(_BYTE *)(v3 + 59) = result & 1;
  }
  return result;
}

uint64_t sub_1A9392460()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 61);
}

uint64_t sub_1A939246C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 61) = result;
  return result;
}

uint64_t sub_1A9392478()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 64);
}

uint64_t sub_1A9392488(uint64_t result, char a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 64) = result;
  *(_BYTE *)(v3 + 72) = a2 & 1;
  return result;
}

uint64_t sub_1A939249C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A93924CC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A93924E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A9392510(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9392524()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A9392554(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9392568()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 96);
}

uint64_t sub_1A9392578(uint64_t result, char a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 96) = result;
  *(_BYTE *)(v3 + 104) = a2 & 1;
  return result;
}

uint64_t sub_1A939258C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  if (a1 == 1)
  {
    v3 = v2 + 160;
    return *(_QWORD *)v3;
  }
  if (!a1)
  {
    v3 = v2 + 144;
    return *(_QWORD *)v3;
  }
  return 0;
}

void sub_1A93925C8(uint64_t a1)
{
  sub_1A9392148(a1);
}

uint64_t sub_1A93925E8(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE *v3;

  v2 = *v1;
  if (result == 1)
  {
    *(_QWORD *)(v2 + 160) = 0;
    v3 = (_BYTE *)(v2 + 168);
  }
  else
  {
    if (result)
      return result;
    *(_QWORD *)(v2 + 144) = 0;
    v3 = (_BYTE *)(v2 + 152);
  }
  *v3 = 1;
  return result;
}

uint64_t Color.init(descriptor:)(uint64_t a1, unint64_t a2)
{
  return sub_1A9393114(a1, a2);
}

BOOL sub_1A9392630(uint64_t a1, uint64_t a2)
{
  return _s18PodcastsFoundation5ColorO2eeoiySbAC_ACtFZ_0(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

uint64_t static Color.custom(_:)(uint64_t result)
{
  return result;
}

void *static Color.custom(_:)(void *a1)
{
  id v2;

  v2 = a1;
  return a1;
}

uint64_t Color.description.getter(void *a1, char a2)
{
  CGColor *v3;
  CGColorSpace *v4;
  CGColorSpace *v5;

  if (!a2)
    return HexColor.description.getter(a1);
  if (a2 != 1)
    __asm { BR              X9 }
  v3 = a1;
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  v4 = CGColorGetColorSpace(v3);
  if (v4)
  {
    v5 = v4;
    CGColorSpaceCopyName(v4);

  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF120);
  sub_1A93F8094();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  CGColorGetAlpha(v3);
  sub_1A93F85B0();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F8718();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF128);
  sub_1A93F8094();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A913A0D8(a1, 1);
  return 0x28726F6C6F434743;
}

uint64_t sub_1A93928C4()
{
  uint64_t v0;

  return Color.description.getter(*(void **)v0, *(_BYTE *)(v0 + 8));
}

uint64_t Color.debugDescription.getter(void *a1, char a2)
{
  _QWORD v4[2];

  if (a2)
  {
    if (a2 != 1)
      __asm { BR              X9 }
    sub_1A93F8C70();
    swift_bridgeObjectRelease();
    strcpy((char *)v4, "Color.cgColor(");
    HIBYTE(v4[1]) = -18;
    Color.description.getter(a1, 1);
  }
  else
  {
    sub_1A93F8C70();
    swift_bridgeObjectRelease();
    v4[0] = 0x65682E726F6C6F43;
    v4[1] = 0xEF28726F6C6F4378;
    HexColor.debugDescription.getter();
  }
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return v4[0];
}

uint64_t sub_1A9392A4C()
{
  uint64_t v0;

  return Color.debugDescription.getter(*(void **)v0, *(_BYTE *)(v0 + 8));
}

uint64_t Color.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  v2 = sub_1A93F90CC();
  v4 = sub_1A9393114(v2, v3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v4;
}

uint64_t sub_1A9392B34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t result;
  _QWORD v11[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(v11, v11[3]);
  v5 = sub_1A93F90CC();
  v7 = sub_1A9393114(v5, v6);
  v9 = v8;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *(_QWORD *)a2 = v7;
  *(_BYTE *)(a2 + 8) = v9;
  return result;
}

uint64_t Color.encode(to:)(_QWORD *a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  void *v23;

  v6 = sub_1A93F8D18();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  if (a3)
  {
    if (a3 != 1)
      __asm { BR              X9 }
    sub_1A913A9D8(a2, 1);
    sub_1A924AB40((CGColor *)a2);
    if ((v10 & 0x100000000) != 0)
    {
      __swift_project_boxed_opaque_existential_1(v21, v22);
      sub_1A93F9120();
      v19 = 0;
      v20 = 0xE000000000000000;
      sub_1A93F8C70();
      sub_1A93F810C();
      v23 = a2;
      type metadata accessor for CGColor(0);
      v12 = v11;
      sub_1A93F8DE4();
      sub_1A93F810C();
      sub_1A93F8CE8();
      v13 = sub_1A93F8D24();
      swift_allocError();
      v15 = v14;
      v16 = (char *)v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCD50) + 48);
      v15[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF130);
      *v15 = v12;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v9, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v15, *MEMORY[0x1E0DEC4B0], v13);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    }
    LODWORD(v19) = v10;
  }
  else
  {
    LODWORD(v19) = (_DWORD)a2;
  }
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
  sub_1A9393348();
  sub_1A93F9174();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
}

uint64_t sub_1A9392FAC(_QWORD *a1)
{
  uint64_t v1;

  return Color.encode(to:)(a1, *(void **)v1, *(_BYTE *)(v1 + 8));
}

BOOL _s18PodcastsFoundation5ColorO2eeoiySbAC_ACtFZ_0(void *a1, char a2, void *a3, char a4)
{
  char v6;

  if (a2)
  {
    if (a2 != 1)
      __asm { BR              X9 }
    if (a4 == 1)
    {
      type metadata accessor for CGColor(0);
      sub_1A913A9D8(a1, 1);
      sub_1A913A9D8(a3, 1);
      sub_1A939347C();
      v6 = sub_1A93F750C();
      sub_1A913A0D8(a3, 1);
      sub_1A913A0D8(a1, 1);
      return v6 & 1;
    }
    return 0;
  }
  if (a4)
    return 0;
  return (_DWORD)a1 == (_DWORD)a3;
}

uint64_t sub_1A9393114(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t result;

  v3 = a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL;
  if (v3 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A944F7B0 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A944F790 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7261656C63 && a2 == 0xE500000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A944F770 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    result = sub_1A924A79C(a1, a2);
    if (!v2)
      return result;
  }
  return result;
}

unint64_t sub_1A9393348()
{
  unint64_t result;

  result = qword_1EEABF138;
  if (!qword_1EEABF138)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for HexColor, &type metadata for HexColor);
    atomic_store(result, (unint64_t *)&qword_1EEABF138);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Color(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A913A9D8(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for Color(uint64_t a1)
{
  sub_1A913A0D8(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for Color(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A913A9D8(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1A913A0D8(v5, v6);
  return a1;
}

uint64_t assignWithTake for Color(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1A913A0D8(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for Color()
{
  return &type metadata for Color;
}

unint64_t sub_1A939347C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEABF140;
  if (!qword_1EEABF140)
  {
    type metadata accessor for CGColor(255);
    result = MEMORY[0x1AF414014](&unk_1A94049DC, v1);
    atomic_store(result, (unint64_t *)&qword_1EEABF140);
  }
  return result;
}

uint64_t PodcastsContentKeySession.__allocating_init(storeTrackAdamID:)(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  v3 = objc_msgSend(v2, sel_ams_activeiTunesAccount);

  type metadata accessor for PodcastsContentKeySession();
  swift_allocObject();
  return PodcastsContentKeySession.init(storeTrackAdamID:account:)(a1, v3);
}

uint64_t PodcastsContentKeySession.__allocating_init(storeTrackAdamID:account:)(uint64_t a1, void *a2)
{
  swift_allocObject();
  return PodcastsContentKeySession.init(storeTrackAdamID:account:)(a1, a2);
}

uint64_t type metadata accessor for PodcastsContentKeySession()
{
  return objc_opt_self();
}

uint64_t PodcastsContentKeySession.init(storeTrackAdamID:account:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  int v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  int v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  int v39;
  char *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  char *v45;
  void *v46;
  char *v47;
  void *v48;
  void (*v49)(char *, uint64_t);
  void (*v50)(char *, uint64_t);
  uint64_t v52;
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  char *v56;
  id v57;
  id v58;
  id v59;
  id v60;
  char *v61;
  __int128 v62;
  __int128 v63;
  _BYTE v64[24];
  uint64_t v65;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v52 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v52 - v13;
  v15 = sub_1A93F726C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v61 = (char *)&v52 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v52 - v22;
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, a1);
  if (!v24)
  {

LABEL_30:
    type metadata accessor for PodcastsContentKeySession();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v25 = v24;
  if (!a2)
  {

    goto LABEL_30;
  }
  v26 = objc_msgSend(a2, sel_ams_DSID);
  if (!v26)
  {

    goto LABEL_30;
  }
  v56 = v23;
  v27 = v26;
  v28 = (void *)objc_opt_self();
  v59 = v27;
  v29 = objc_msgSend(v28, sel_specificAccountWithDSID_, v27);
  v30 = objc_allocWithZone(MEMORY[0x1E0DDC0A0]);
  v58 = v29;
  v57 = objc_msgSend(v30, sel_initWithIdentity_, v29);
  v60 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (objc_msgSend(v60, sel_syncValueForKey_, CFSTR("fps-cert")))
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    v62 = 0u;
    v63 = 0u;
  }
  sub_1A90A4E08((uint64_t)&v62, (uint64_t)v64);
  if (!v65)
  {
    sub_1A905FD54((uint64_t)v64, qword_1ED2AC800);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    goto LABEL_15;
  }
  v54 = v18;
  v31 = swift_dynamicCast();
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v32(v14, v31 ^ 1u, 1, v15);
  v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v33(v14, 1, v15) == 1)
  {
LABEL_15:

    v35 = (uint64_t)v14;
LABEL_29:
    sub_1A905FD54(v35, &qword_1ED2AD3D0);
    goto LABEL_30;
  }
  v53 = v33;
  v55 = v32;
  v34 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v34(v56, v14, v15);
  if (objc_msgSend(v60, sel_syncValueForKey_, CFSTR("podcasts-license-streaming-start")))
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    v62 = 0u;
    v63 = 0u;
  }
  v36 = v55;
  sub_1A90A4E08((uint64_t)&v62, (uint64_t)v64);
  if (!v65)
  {
    sub_1A905FD54((uint64_t)v64, qword_1ED2AC800);
    v36(v11, 1, 1, v15);
    goto LABEL_22;
  }
  v37 = swift_dynamicCast();
  v36(v11, v37 ^ 1u, 1, v15);
  if (v53(v11, 1, v15) == 1)
  {
LABEL_22:

    (*(void (**)(char *, uint64_t))(v16 + 8))(v56, v15);
    v35 = (uint64_t)v11;
    goto LABEL_29;
  }
  v34(v61, v11, v15);
  if (objc_msgSend(v60, sel_syncValueForKey_, CFSTR("podcasts-license-streaming-stop")))
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    v62 = 0u;
    v63 = 0u;
  }
  sub_1A90A4E08((uint64_t)&v62, (uint64_t)v64);
  v38 = v55;
  if (!v65)
  {
    sub_1A905FD54((uint64_t)v64, qword_1ED2AC800);
    v38(v8, 1, 1, v15);
    goto LABEL_28;
  }
  v39 = swift_dynamicCast();
  v38(v8, v39 ^ 1u, 1, v15);
  if (v53(v8, 1, v15) == 1)
  {
LABEL_28:

    v50 = *(void (**)(char *, uint64_t))(v16 + 8);
    v50(v61, v15);
    v50(v56, v15);
    v35 = (uint64_t)v8;
    goto LABEL_29;
  }
  v40 = v54;
  v34(v54, v8, v15);
  v41 = objc_allocWithZone(MEMORY[0x1E0DDBF40]);
  v42 = v57;
  v43 = objc_msgSend(v41, sel_initWithRequestContext_, v57);
  objc_msgSend(v43, sel_setAdamID_, v25);
  v44 = (void *)sub_1A93F71A0();
  objc_msgSend(v43, sel_setKeyServerURL_, v44);

  v45 = v40;
  v46 = (void *)sub_1A93F71A0();
  objc_msgSend(v43, sel_setStreamingleaseStopURL_, v46);

  v47 = v56;
  v48 = (void *)sub_1A93F71A0();
  objc_msgSend(v43, sel_setKeyCertificateURL_, v48);

  objc_msgSend(v43, sel_setKeyServerProtocolType_, 2);
  v49 = *(void (**)(char *, uint64_t))(v16 + 8);
  v49(v45, v15);
  v49(v61, v15);
  v49(v47, v15);
  *(_QWORD *)(v3 + 16) = v43;
  return v3;
}

id sub_1A9393C84(uint64_t a1, char a2, char a3)
{
  uint64_t v3;

  return objc_msgSend(*(id *)(v3 + 16), sel_addAsset_shouldPreloadKeys_waitForKeyIdentifiers_, a1, a2 & 1, a3 & 1);
}

void sub_1A9393CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[6];

  v5 = *(void **)(v2 + 16);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v8[4] = sub_1A9394034;
  v8[5] = v6;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1A90BF160;
  v8[3] = &block_descriptor_76;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_stopSessionInvalidatingKeys_withCompletion_, 1, v7);
  _Block_release(v7);
}

uint64_t sub_1A9393D6C(id a1, uint64_t (*a2)(id))
{
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v19;

  if (a1)
  {
    v4 = a1;
    if (qword_1ED2A8890 != -1)
      swift_once();
    v5 = sub_1A93F7698();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED2A8878);
    v6 = a1;
    v7 = a1;
    v8 = sub_1A93F7674();
    v9 = sub_1A93F879C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v19 = v11;
      *(_DWORD *)v10 = 136446210;
      swift_getErrorValue();
      v12 = sub_1A93F927C();
      sub_1A906436C(v12, v13, &v19);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v8, v9, "[PodcastsContentKeySession]: Unable to invalidate and stop session with error: %{public}s.", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v11, -1, -1);
      MEMORY[0x1AF41411C](v10, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    if (qword_1ED2A8890 != -1)
      swift_once();
    v14 = sub_1A93F7698();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A8878);
    v15 = sub_1A93F7674();
    v16 = sub_1A93F87B4();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1A904E000, v15, v16, "[PodcastsContentKeySession]: Successfully invalidated and stopped session.", v17, 2u);
      MEMORY[0x1AF41411C](v17, -1, -1);
    }

  }
  return a2(a1);
}

uint64_t sub_1A9394010()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9394034(void *a1)
{
  uint64_t v1;

  return sub_1A9393D6C(a1, *(uint64_t (**)(id))(v1 + 16));
}

id sub_1A939403C()
{
  return sub_1A9394064("[PodcastsContentKeySession]: Pausing FairPlay key session.", (SEL *)&selRef_pauseAutomaticKeyRenewal);
}

id sub_1A9394050()
{
  return sub_1A9394064("[PodcastsContentKeySession]: Resuming FairPlay key session.", (SEL *)&selRef_resumeAutomaticKeyRenewal);
}

id sub_1A9394064(const char *a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  v5 = v2;
  if (qword_1ED2A8890 != -1)
    swift_once();
  v6 = sub_1A93F7698();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A8878);
  v7 = sub_1A93F7674();
  v8 = sub_1A93F87B4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1A904E000, v7, v8, a1, v9, 2u);
    MEMORY[0x1AF41411C](v9, -1, -1);
  }

  return objc_msgSend(*(id *)(v5 + 16), *a2);
}

uint64_t PodcastsContentKeySession.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PodcastsContentKeySession.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t method lookup function for PodcastsContentKeySession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PodcastsContentKeySession.__allocating_init(storeTrackAdamID:account:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PodcastsContentKeySession.add(_:shouldPreloadKeys:waitForKeyIdentifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of PodcastsContentKeySession.invalidate(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of PodcastsContentKeySession.pause()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of PodcastsContentKeySession.resume()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t InterestObserverProvider.favoritedInterestsPublisher.getter()
{
  return swift_retain();
}

uint64_t InterestObserverProvider.favoritedInterestsCountPublisher.getter()
{
  return swift_retain();
}

uint64_t InterestObserverProvider.favoritedInterestsCategoriesPublisher.getter()
{
  return swift_retain();
}

uint64_t InterestObserverProvider.userAppSessionsCountPublisher.getter()
{
  return swift_retain();
}

uint64_t InterestObserverProvider.dismissedInlineSelectionModulePublisher.getter()
{
  return swift_retain();
}

unint64_t static InterestObserverProvider.alreadyDismissedInlineSelectionModuleUserDefaultKey.getter()
{
  return 0xD000000000000027;
}

unint64_t static InterestObserverProvider.userAppSessionsCountUserDefaultKey.getter()
{
  return 0xD000000000000015;
}

uint64_t InterestObserverProvider.__allocating_init(ctx:)(void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  InterestObserverProvider.init(ctx:)(a1);
  return v2;
}

_QWORD *InterestObserverProvider.init(ctx:)(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  char *v41;
  uint64_t v42;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _QWORD v47[2];
  __int128 v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;

  v2 = v1;
  v50 = sub_1A93F8988();
  v52 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v49 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[8] = MEMORY[0x1E0DEE9E8];
  v51 = v2 + 8;
  v2[2] = a1;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v5 = swift_allocObject();
  v48 = xmmword_1A9405520;
  *(_OWORD *)(v5 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  v6 = sub_1A90A92DC();
  *(_QWORD *)(v5 + 64) = v6;
  strcpy((char *)(v5 + 32), "interestValue");
  *(_WORD *)(v5 + 46) = -4864;
  v7 = a1;
  v8 = (void *)sub_1A93F8754();
  v47[1] = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v9 = sub_1A93F8868();
  v10 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v11 = v7;
  v12 = (void *)sub_1A93F8010();
  v13 = objc_msgSend(v10, sel_initWithEntityName_, v12);

  objc_msgSend(v13, sel_setPredicate_, v8);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v14 = (void *)sub_1A93F82F8();
  objc_msgSend(v13, sel_setSortDescriptors_, v14);

  objc_msgSend(v13, sel_setFetchBatchSize_, 0x7FFFFFFFFFFFFFFFLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5808);
  swift_allocObject();
  *((_QWORD *)&v44 + 1) = sub_1A905920C;
  *(_QWORD *)&v44 = 0;
  v15 = sub_1A90C411C(0xD000000000000032, 0x80000001A944F920, (uint64_t)v13, (uint64_t)v11, v9, (uint64_t)sub_1A9394A00, 0, (uint64_t)sub_1A9394A04, v44, 0);
  v16 = sub_1A9150DE8(v15);
  swift_release();
  v2[3] = v16;
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = v48;
  *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v17 + 64) = v6;
  strcpy((char *)(v17 + 32), "interestValue");
  *(_WORD *)(v17 + 46) = -4864;
  v18 = (void *)sub_1A93F8754();
  v19 = v11;
  v20 = sub_1A93F8868();
  v21 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v22 = (void *)sub_1A93F8010();
  v23 = objc_msgSend(v21, sel_initWithEntityName_, v22);

  objc_msgSend(v23, sel_setPredicate_, v18);
  v24 = (void *)sub_1A93F82F8();
  objc_msgSend(v23, sel_setSortDescriptors_, v24);

  objc_msgSend(v23, sel_setFetchBatchSize_, 1);
  objc_msgSend(v23, sel_setIncludesSubentities_, 0);
  objc_msgSend(v23, sel_setIncludesPropertyValues_, 0);
  objc_msgSend(v23, sel_setReturnsObjectsAsFaults_, 1);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8618);
  swift_allocObject();
  *((_QWORD *)&v45 + 1) = sub_1A905920C;
  *(_QWORD *)&v45 = 0;
  v53 = sub_1A90C411C(0xD000000000000020, 0x80000001A944F960, (uint64_t)v23, (uint64_t)v19, v20, (uint64_t)sub_1A90AEBD8, 0, (uint64_t)sub_1A9123748, v45, 0);
  sub_1A91516BC();
  v25 = sub_1A93F7B24();
  swift_release();
  v2[4] = v25;
  v26 = _s18PodcastsFoundation10MTInterestC40predicateForFavoritedInterestsCategoriesSo11NSPredicateCyFZ_0();
  v27 = sub_1A93F8868();
  v28 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v29 = v19;
  v30 = (void *)sub_1A93F8010();
  v31 = objc_msgSend(v28, sel_initWithEntityName_, v30);

  objc_msgSend(v31, sel_setPredicate_, v26);
  v32 = (void *)sub_1A93F82F8();
  objc_msgSend(v31, sel_setSortDescriptors_, v32);

  objc_msgSend(v31, sel_setFetchBatchSize_, 0x7FFFFFFFFFFFFFFFLL);
  swift_allocObject();
  *((_QWORD *)&v46 + 1) = sub_1A905920C;
  *(_QWORD *)&v46 = 0;
  v33 = sub_1A90C411C(0xD00000000000003DLL, 0x80000001A944F990, (uint64_t)v31, (uint64_t)v29, v27, (uint64_t)sub_1A9394A00, 0, (uint64_t)sub_1A9394A04, v46, 0);
  v34 = sub_1A9150DE8(v33);
  swift_release();
  v2[5] = v34;
  v35 = (void *)objc_opt_self();
  v36 = objc_msgSend(v35, sel__applePodcastsFoundationSharedUserDefaults);
  v37 = NSUserDefaults.BOOLPublisher(forKey:)((void *)0xD000000000000027, (void *)0x80000001A944F8D0);

  v2[7] = v37;
  v38 = objc_msgSend(v35, sel__applePodcastsFoundationSharedUserDefaults);
  v39 = NSUserDefaults.integerPublisher(forKey:)((void *)0xD000000000000015, (void *)0x80000001A944F900);

  v2[6] = v39;
  v40 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v41 = v49;
  sub_1A93F8994();

  swift_allocObject();
  swift_weakInit();
  sub_1A906C07C();
  v42 = v50;
  sub_1A93F7D04();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v41, v42);
  swift_beginAccess();
  sub_1A93F7920();
  swift_endAccess();
  swift_release();

  return v2;
}

uint64_t sub_1A9394A08@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  type metadata accessor for MTInterest();
  v4 = swift_dynamicCastClass();
  if (v4)
  {
    v5 = (void *)v4;
    v6 = a1;
    v7 = objc_msgSend(v5, sel_adamID);
    objc_msgSend(v5, sel_interestValue);
    v9 = v8;
    v10 = objc_msgSend(v5, sel_lastUpdatedDate);
    v11 = type metadata accessor for InterestModel();
    sub_1A93F7368();

    *a2 = v7;
    a2[1] = v9;
    v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v13 = a2;
    v14 = 0;
    v15 = v11;
  }
  else
  {
    v15 = type metadata accessor for InterestModel();
    v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
    v13 = a2;
    v14 = 1;
  }
  return v12(v13, v14, 1, v15);
}

uint64_t sub_1A9394B0C(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8))
  {
    type metadata accessor for InterestModel();
    v2 = sub_1A93F735C() ^ 1;
  }
  else
  {
    v2 = 1;
  }
  return v2 & 1;
}

uint64_t sub_1A9394B74()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A9394C94();
    return swift_release();
  }
  return result;
}

uint64_t InterestObserverProvider.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InterestObserverProvider.__deallocating_deinit()
{
  InterestObserverProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A9394C34()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9394C58()
{
  return sub_1A9394B74();
}

uint64_t type metadata accessor for InterestObserverProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for InterestObserverProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InterestObserverProvider.__allocating_init(ctx:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_1A9394C94()
{
  void *v0;
  id v1;
  void *v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  BOOL v8;
  char *v9;
  char v10;
  id v11;
  void *v12;
  void *v13;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel__applePodcastsFoundationSharedUserDefaults);
  v2 = (void *)sub_1A93F8010();
  v3 = (char *)objc_msgSend(v1, sel_integerForKey_, v2);

  if (qword_1ED2A58F8 != -1)
    swift_once();
  v4 = sub_1A93F7698();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED2A58D8);
  v5 = sub_1A93F7674();
  v6 = sub_1A93F87B4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    *(_DWORD *)v7 = 134218240;
    sub_1A93F8AA8();
    *(_WORD *)(v7 + 12) = 2048;
    v8 = __OFADD__(v3, 1);
    v9 = v3 + 1;
    if (v8)
      goto LABEL_12;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v5, v6, "Increasing user app session count from: %ld to %ld.", (uint8_t *)v7, 0x16u);
    MEMORY[0x1AF41411C](v7, -1, -1);

    v10 = 0;
  }
  else
  {

    v8 = __OFADD__(v3, 1);
    v9 = v3 + 1;
    v10 = v8;
  }
  v11 = objc_msgSend(v0, sel__applePodcastsFoundationSharedUserDefaults);
  if ((v10 & 1) == 0)
  {
    v12 = v11;
    v13 = (void *)sub_1A93F8010();
    objc_msgSend(v12, sel_setInteger_forKey_, v9, v13);

    return;
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

_QWORD *sub_1A9394E9C(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  if (a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1A93F8E5C())
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AF4129DC](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_assetURL);
      if (v8)
      {
        v9 = v8;
        v10 = sub_1A93F8040();
        v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_1A907ECFC(0, v3[2] + 1, 1, v3);
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
          v3 = sub_1A907ECFC((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
        v3[2] = v14 + 1;
        v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {

      }
      ++v4;
      if (v7 == v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_1A9395030(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v19[3];
  char *v20;
  char *v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v21 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v20 = (char *)v19 - v10;
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
    return MEMORY[0x1E0DEE9D8];
  v19[2] = v1;
  swift_bridgeObjectRetain();
  v19[1] = a1;
  v12 = a1 + 40;
  v13 = MEMORY[0x1E0DEE9D8];
  do
  {
    swift_bridgeObjectRetain();
    sub_1A93F7248();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_1A905FD54((uint64_t)v5, &qword_1ED2AD3D0);
    }
    else
    {
      v14 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v15 = v20;
      v14(v20, v5, v6);
      v14(v21, v15, v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_1A91198C0(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
      v17 = *(_QWORD *)(v13 + 16);
      v16 = *(_QWORD *)(v13 + 24);
      if (v17 >= v16 >> 1)
        v13 = sub_1A91198C0(v16 > 1, v17 + 1, 1, v13);
      *(_QWORD *)(v13 + 16) = v17 + 1;
      v14((char *)(v13+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v17), v21, v6);
    }
    v12 += 16;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
  return v13;
}

id MediaCacheDeleteProcessorDelegate.managedObjectContext.getter()
{
  id *v0;

  return *v0;
}

id MediaCacheDeleteProcessorDelegate.workQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

uint64_t MediaCacheDeleteProcessorDelegate.didMatch(episodes:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  _QWORD *v13;
  _QWORD *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABAA0);
  v26 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB980);
  v27 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)v1;
  v11 = *(void **)(v1 + 8);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a1;
  v13[3] = v12;
  v13[4] = v11;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v12;
  v14[3] = sub_1A9395A84;
  v14[4] = v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9238);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v15 = v12;
  v16 = v11;
  v17 = v15;
  v18 = sub_1A93F7A94();
  v28 = v16;
  v29 = v18;
  v19 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v5, 1, 1, v19);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1ED2A9230, (uint64_t *)&unk_1ED2A9238, MEMORY[0x1E0C96108]);
  sub_1A905FD90();
  v20 = v16;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v5, &qword_1ED2A1C88);

  swift_release();
  sub_1A9066D74(&qword_1ED2ABA98, &qword_1ED2ABAA0, MEMORY[0x1E0C95CB8]);
  sub_1A93F7B84();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v6);
  sub_1A9066D74(&qword_1ED2AB978, &qword_1ED2AB980, MEMORY[0x1E0C95950]);
  v21 = v25;
  v22 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v21);
  return v22;
}

void sub_1A9395560(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  NSObject *log;
  _QWORD *v40;
  uint64_t v41;

  sub_1A93F8040();
  v5 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v6 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A9405950;
  v9 = sub_1A93F8040();
  v11 = v10;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1A90A92DC();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v11;
  *(_QWORD *)(v8 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
  *(_QWORD *)(v8 + 104) = sub_1A9066D74(&qword_1ED2ABC90, &qword_1ED2AC7A0, MEMORY[0x1E0CB1BE8]);
  *(_QWORD *)(v8 + 72) = a1;
  swift_bridgeObjectRetain();
  v12 = (void *)sub_1A93F8754();
  objc_msgSend(v7, sel_setPredicate_, v12);

  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v13 = sub_1A93F89DC();
  if (v2)
  {

    return;
  }
  v14 = v13;
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v15 = sub_1A93F7698();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED2A3F08);
  swift_bridgeObjectRetain_n();
  v16 = sub_1A93F7674();
  v17 = sub_1A93F879C();
  if (!os_log_type_enabled(v16, v17))
  {

    swift_bridgeObjectRelease_n();
LABEL_25:
    v35 = sub_1A9394E9C(v14);
    swift_bridgeObjectRelease();

    *a2 = v35;
    return;
  }
  v40 = a2;
  v18 = (uint8_t *)swift_slowAlloc();
  v36 = swift_slowAlloc();
  v41 = v36;
  v38 = v18;
  *(_DWORD *)v18 = 136315138;
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1A93F8E5C();
  }
  else
  {
    v19 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  log = v16;
  v37 = v17;
  if (!v19)
  {
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_24:
    swift_bridgeObjectRelease();
    v32 = MEMORY[0x1AF412034](v21, MEMORY[0x1E0DEA968]);
    v34 = v33;
    swift_bridgeObjectRelease();
    sub_1A906436C(v32, v34, &v41);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, log, v37, "Marking episodes for purgeability: %s", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v36, -1, -1);
    MEMORY[0x1AF41411C](v38, -1, -1);

    a2 = v40;
    goto LABEL_25;
  }
  if (v19 >= 1)
  {
    v20 = 0;
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v14 & 0xC000000000000001) != 0)
        v22 = (id)MEMORY[0x1AF4129DC](v20, v14);
      else
        v22 = *(id *)(v14 + 8 * v20 + 32);
      v23 = v22;
      v24 = objc_msgSend(v23, sel_uuid);
      if (v24)
      {
        v25 = v24;
        v26 = sub_1A93F8040();
        v28 = v27;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_1A907ECFC(0, v21[2] + 1, 1, v21);
        v30 = v21[2];
        v29 = v21[3];
        if (v30 >= v29 >> 1)
          v21 = sub_1A907ECFC((_QWORD *)(v29 > 1), v30 + 1, 1, v21);
        v21[2] = v30 + 1;
        v31 = &v21[2 * v30];
        v31[4] = v26;
        v31[5] = v28;
      }
      else
      {

      }
      ++v20;
    }
    while (v19 != v20);
    goto LABEL_24;
  }
  __break(1u);
}

uint64_t sub_1A9395A50()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1A9395A84(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1A9395560(*(_QWORD *)(v1 + 16), a1);
}

void sub_1A9395AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A929B8B4(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1A9395AB0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  int v19;
  int v20;
  Swift::Int32 v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t *boxed_opaque_existential_1;
  NSError *v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  uint64_t v33;
  char *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t);
  id v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  void *v56;
  id v57[3];
  Swift::OpaquePointer_optional v58;

  v57[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v55 = (char *)&v44 - v10;
  result = *a1;
  v12 = *(_QWORD *)(*a1 + 16);
  if (v12)
  {
    v51 = 3221768772;
    v50 = *MEMORY[0x1E0CB3308];
    v45 = swift_bridgeObjectRetain();
    v13 = v45 + 40;
    *(_QWORD *)&v14 = 136315394;
    v48 = v14;
    v47 = MEMORY[0x1E0DEE9B8] + 8;
    v49 = xmmword_1A9405520;
    v53 = v4;
    v54 = v6;
    v46 = v5;
    while (1)
    {
      swift_bridgeObjectRetain();
      sub_1A93F7248();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
        break;
      sub_1A905FD54((uint64_t)v4, &qword_1ED2AD3D0);
LABEL_4:
      v13 += 16;
      if (!--v12)
        return swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v55, v4, v5);
    v15 = (void *)sub_1A93F71A0();
    v16 = (void *)objc_opt_self();
    v57[0] = 0;
    v17 = objc_msgSend(v16, sel_fileHandleForReadingFromURL_error_, v15, v57);

    if (v17)
    {
      v18 = v57[0];
      v19 = objc_msgSend(v17, sel_fileDescriptor);
      v57[0] = (id)98310;
      v20 = ffsctl(v19, v51, v57, 0);
      if (!v20)
      {
        objc_msgSend(v17, sel_closeFile);

        v39 = *(void (**)(char *, uint64_t))(v6 + 8);
LABEL_16:
        v39(v55, v5);
        v6 = v54;
        goto LABEL_4;
      }
      v21 = v20;
      sub_1A9072534(0, &qword_1ED2ABD18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9740);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v49;
      *(_QWORD *)(inited + 32) = sub_1A93F8040();
      *(_QWORD *)(inited + 40) = v23;
      *(_QWORD *)(inited + 72) = v5;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
      (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 16))(boxed_opaque_existential_1, v55, v5);
      v58.value._rawValue = (void *)sub_1A908A4A8(inited);
      NSError.init(fsctlCode:userInfo:)(v25, v21, v58);
      v27 = v26;
      swift_willThrow();
      objc_msgSend(v17, sel_closeFile);

    }
    else
    {
      v28 = v57[0];
      v27 = (void *)sub_1A93F7128();

      swift_willThrow();
    }
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v29 = sub_1A93F7698();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED2A3F08);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v55, v5);
    v30 = v27;
    v31 = v27;
    v32 = sub_1A93F7674();
    v33 = v5;
    v34 = v8;
    v35 = sub_1A93F879C();
    if (os_log_type_enabled(v32, v35))
    {
      v36 = swift_slowAlloc();
      v52 = (void *)swift_slowAlloc();
      v57[0] = v52;
      *(_DWORD *)v36 = v48;
      v37 = sub_1A93F7224();
      *(_QWORD *)(v36 + 4) = sub_1A906436C(v37, v38, (uint64_t *)v57);
      swift_bridgeObjectRelease();
      v39 = *(void (**)(char *, uint64_t))(v6 + 8);
      v39(v34, v33);
      *(_WORD *)(v36 + 12) = 2080;
      v56 = v27;
      v40 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
      v41 = sub_1A93F8094();
      *(_QWORD *)(v36 + 14) = sub_1A906436C(v41, v42, (uint64_t *)v57);
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v32, v35, "Failed to mark episode asset for purgeability (%s): %s", (uint8_t *)v36, 0x16u);
      v43 = v52;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v43, -1, -1);
      MEMORY[0x1AF41411C](v36, -1, -1);

      v4 = v53;
      v8 = v34;
      v5 = v46;
    }
    else
    {

      v39 = *(void (**)(char *, uint64_t))(v6 + 8);
      v39(v34, v33);

      v4 = v53;
      v8 = v34;
      v5 = v33;
    }
    goto LABEL_16;
  }
  return result;
}

void markForPurgeability(_:)()
{
  uint64_t v0;

  v0 = sub_1A93F726C();
  MEMORY[0x1E0C80A78](v0);
  sub_1A92B7958(0x8000);
}

uint64_t MediaCacheDeleteProcessorDelegate.unmatched(episodes:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABAA0);
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB970);
  v31 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB980);
  v32 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v26 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)v1;
  v11 = *(void **)(v1 + 8);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v12;
  v14[3] = sub_1A939705C;
  v14[4] = v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9238);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v15 = v12;
  v16 = sub_1A93F7A94();
  v33 = v11;
  v34 = v16;
  v17 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 1, 1, v17);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1ED2A9230, (uint64_t *)&unk_1ED2A9238, MEMORY[0x1E0C96108]);
  sub_1A905FD90();
  v18 = v11;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v5, &qword_1ED2A1C88);

  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92F0);
  sub_1A9066D74(&qword_1ED2ABA98, &qword_1ED2ABAA0, MEMORY[0x1E0C95CB8]);
  v19 = v27;
  sub_1A93F7B84();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v19);
  v20 = v26;
  v21 = v28;
  sub_1A93F77C4();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v21);
  sub_1A9066D74(&qword_1ED2AB978, &qword_1ED2AB980, MEMORY[0x1E0C95950]);
  v22 = v30;
  v23 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v22);
  return v23;
}

void sub_1A9396628(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  unint64_t v10;
  _QWORD *v11;
  void *v12;

  swift_bridgeObjectRetain();
  v5 = sub_1A930C610(a1);
  swift_bridgeObjectRelease();
  sub_1A93F8040();
  v6 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v7 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  v9 = Array<A>.episodeCoreDataPredicate()((uint64_t)v5);
  objc_msgSend(v8, sel_setPredicate_, v9);

  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1A93F8E5C())
  {
    sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
    v12 = (void *)sub_1A93F82F8();
    objc_msgSend(v8, sel_setSortDescriptors_, v12);

  }
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v10 = sub_1A93F89DC();
  swift_release();

  if (!v2)
  {
    v11 = sub_1A9394E9C(v10);
    swift_bridgeObjectRelease();
    *a2 = v11;
  }
}

unint64_t sub_1A93967D0@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result;

  result = sub_1A9395030(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1A939680C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  void (*v16)(char *, uint64_t);
  void *v17;
  void *v18;
  id v19;
  id v20;
  int v21;
  int v22;
  Swift::Int32 v23;
  uint64_t inited;
  uint64_t v25;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v27;
  NSError *v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  char *v57;
  char *v58;
  void (*v59)(char *, uint64_t, uint64_t);
  void *v60;
  id v61[3];
  Swift::OpaquePointer_optional v62;

  v61[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_1A93F726C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v47 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = *(_QWORD *)(*a1 + 16);
  v47 = *a1;
  if (v13)
  {
    v14 = v12 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v54 = *(_QWORD *)(v3 + 72);
    v59 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v52 = 3221768772;
    v51 = *MEMORY[0x1E0CB3308];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v15 = 136315394;
    v49 = v15;
    v48 = MEMORY[0x1E0DEE9B8] + 8;
    v50 = xmmword_1A9405520;
    v55 = v3;
    v57 = v8;
    v58 = v5;
    v53 = v11;
    while (1)
    {
      v59(v11, v14, v2);
      v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v56(v11, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
        return swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v11, v2);
      v17 = (void *)sub_1A93F71A0();
      v18 = (void *)objc_opt_self();
      v61[0] = 0;
      v19 = objc_msgSend(v18, sel_fileHandleForReadingFromURL_error_, v17, v61, v47, v48);

      if (!v19)
        break;
      v20 = v61[0];
      v21 = objc_msgSend(v19, sel_fileDescriptor);
      v61[0] = 0;
      v22 = ffsctl(v21, v52, v61, 0);
      if (v22)
      {
        v23 = v22;
        sub_1A9072534(0, &qword_1ED2ABD18);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9740);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v50;
        *(_QWORD *)(inited + 32) = sub_1A93F8040();
        *(_QWORD *)(inited + 40) = v25;
        *(_QWORD *)(inited + 72) = v2;
        v8 = v57;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
        v59((char *)boxed_opaque_existential_1, (uint64_t)v8, v2);
        v27 = inited;
        v5 = v58;
        v62.value._rawValue = (void *)sub_1A908A4A8(v27);
        NSError.init(fsctlCode:userInfo:)(v28, v23, v62);
        v30 = v29;
        swift_willThrow();
        objc_msgSend(v19, sel_closeFile);

LABEL_11:
        if (qword_1ED2A3F28 != -1)
          swift_once();
        v32 = sub_1A93F7698();
        __swift_project_value_buffer(v32, (uint64_t)qword_1ED2A3F08);
        v59(v5, (uint64_t)v8, v2);
        v33 = v30;
        v34 = v30;
        v35 = sub_1A93F7674();
        v36 = sub_1A93F879C();
        if (os_log_type_enabled(v35, v36))
        {
          v37 = swift_slowAlloc();
          v38 = (void *)swift_slowAlloc();
          v61[0] = v38;
          *(_DWORD *)v37 = v49;
          v39 = sub_1A93F7224();
          *(_QWORD *)(v37 + 4) = sub_1A906436C(v39, v40, (uint64_t *)v61);
          swift_bridgeObjectRelease();
          v16 = *(void (**)(char *, uint64_t))(v3 + 8);
          v16(v58, v2);
          *(_WORD *)(v37 + 12) = 2080;
          v60 = v30;
          v41 = v30;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
          v42 = sub_1A93F8094();
          *(_QWORD *)(v37 + 14) = sub_1A906436C(v42, v43, (uint64_t *)v61);
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1A904E000, v35, v36, "Failed to remove episode asset purgeability (%s): %s", (uint8_t *)v37, 0x16u);
          swift_arrayDestroy();
          v44 = v38;
          v5 = v58;
          MEMORY[0x1AF41411C](v44, -1, -1);
          MEMORY[0x1AF41411C](v37, -1, -1);

        }
        else
        {

          v16 = *(void (**)(char *, uint64_t))(v3 + 8);
          v16(v5, v2);

        }
        v8 = v57;
        v11 = v53;
        v16(v57, v2);
        goto LABEL_5;
      }
      objc_msgSend(v19, sel_closeFile);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
LABEL_5:
      v3 = v55;
      v14 += v54;
      if (!--v13)
      {
        v56(v11, 1, 1, v2);
        return swift_bridgeObjectRelease();
      }
    }
    v31 = v61[0];
    v30 = (void *)sub_1A93F7128();

    swift_willThrow();
    goto LABEL_11;
  }
  v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  swift_bridgeObjectRetain();
  v45(v11, 1, 1, v2);
  return swift_bridgeObjectRelease();
}

void removePurgeability(for:)()
{
  uint64_t v0;

  v0 = sub_1A93F726C();
  MEMORY[0x1E0C80A78](v0);
  sub_1A92B7B84();
}

uint64_t sub_1A9397038()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A939705C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1A9396628(*(_QWORD *)(v1 + 16), a1);
}

ValueMetadata *type metadata accessor for MediaCacheDeleteProcessorDelegate()
{
  return &type metadata for MediaCacheDeleteProcessorDelegate;
}

uint64_t FeedUpdateType.beginInterval()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  NSObject *v13;
  os_signpost_type_t v14;
  uint64_t result;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint8_t *v17;
  os_signpost_id_t v18;
  uint64_t v19;
  _BYTE v20[16];

  v1 = sub_1A93F75FC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v7 = &v20[-v6];
  v8 = *v0;
  if (qword_1ED2A8670 != -1)
    swift_once();
  v9 = sub_1A93F762C();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A8658);
  v20[15] = v8;
  v10 = sub_1A908D440();
  v12 = v11;
  sub_1A93F7620();
  sub_1A93F75D8();
  v13 = sub_1A93F7620();
  v14 = sub_1A93F8940();
  result = sub_1A93F8A6C();
  if ((result & 1) == 0)
    goto LABEL_7;
  if ((v12 & 1) == 0)
  {
    if (!v10)
    {
      __break(1u);
LABEL_7:

      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 16))(v4, v7, v1);
LABEL_13:
      sub_1A93F765C();
      swift_allocObject();
      v19 = sub_1A93F7650();
      (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v7, v1);
      return v19;
    }
LABEL_12:
    v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 16);
    v16(v4, v7, v1);
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    v18 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v13, v14, v18, (const char *)v10, "Begin Interval", v17, 2u);
    MEMORY[0x1AF41411C](v17, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
    v16(v4, v7, v1);
    goto LABEL_13;
  }
  if (HIDWORD(v10))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v10 >> 11 != 27)
  {
    if (WORD1(v10) <= 0x10u)
    {
      v10 = (unint64_t)sub_1A910F87C();
      goto LABEL_12;
    }
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t FeedUpdateType.endInterval(for:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  NSObject *v15;
  uint64_t result;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint8_t *v20;
  os_signpost_id_t v21;
  void (*v22)(_BYTE *, uint64_t);
  _BYTE v23[12];
  int v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v25 = sub_1A93F7638();
  v1 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v3 = &v23[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1A93F75FC();
  v26 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v23[-v8];
  v10 = *v0;
  if (qword_1ED2A8670 != -1)
    swift_once();
  v11 = sub_1A93F762C();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED2A8658);
  v27 = v10;
  v12 = sub_1A908D440();
  v14 = v13;
  v15 = sub_1A93F7620();
  sub_1A93F7644();
  v24 = sub_1A93F8934();
  result = sub_1A93F8A6C();
  if ((result & 1) == 0)
    goto LABEL_7;
  if ((v14 & 1) == 0)
  {
    if (!v12)
    {
      __break(1u);
LABEL_7:

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v26 + 8))(v9, v4);
    }
    goto LABEL_12;
  }
  if (HIDWORD(v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v12 >> 11 == 27)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  if (WORD1(v12) > 0x10u)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v12 = (unint64_t)sub_1A910F87C();
LABEL_12:
  swift_retain();
  sub_1A93F7668();
  swift_release();
  v17 = v25;
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v1 + 88))(v3, v25) == *MEMORY[0x1E0DF2190])
  {
    v18 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v17);
    v18 = "";
  }
  v19 = v26;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v26 + 16))(v6, v9, v4);
  v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v20 = 0;
  v21 = sub_1A93F75E4();
  _os_signpost_emit_with_name_impl(&dword_1A904E000, v15, (os_signpost_type_t)v24, v21, (const char *)v12, v18, v20, 2u);
  MEMORY[0x1AF41411C](v20, -1, -1);

  v22 = *(void (**)(_BYTE *, uint64_t))(v19 + 8);
  v22(v9, v4);
  return ((uint64_t (*)(_BYTE *, uint64_t))v22)(v6, v4);
}

PodcastsFoundation::FeedUpdateType_optional __swiftcall FeedUpdateType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;
  char v3;

  v2 = 0;
  v3 = 3;
  switch(rawValue)
  {
    case 0:
      goto LABEL_5;
    case 1:
      v2 = 1;
      goto LABEL_5;
    case 2:
      v2 = 2;
LABEL_5:
      v3 = v2;
      goto LABEL_6;
    case 3:
LABEL_6:
      *v1 = v3;
      break;
    case 4:
      *v1 = 4;
      break;
    case 5:
      *v1 = 5;
      break;
    case 6:
      *v1 = 6;
      break;
    case 7:
      *v1 = 7;
      break;
    case 8:
      *v1 = 8;
      break;
    case 9:
      *v1 = 9;
      break;
    case 10:
      *v1 = 10;
      break;
    case 11:
      *v1 = 11;
      break;
    case 12:
      *v1 = 12;
      break;
    case 13:
      *v1 = 13;
      break;
    case 14:
      *v1 = 14;
      break;
    case 15:
      *v1 = 15;
      break;
    case 16:
      *v1 = 16;
      break;
    case 17:
      *v1 = 17;
      break;
    case 18:
      *v1 = 18;
      break;
    case 19:
      *v1 = 19;
      break;
    case 20:
      *v1 = 20;
      break;
    default:
      *v1 = 21;
      break;
  }
  return (PodcastsFoundation::FeedUpdateType_optional)rawValue;
}

uint64_t FeedUpdateType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

PodcastsFoundation::FeedUpdateType_optional sub_1A9397694(Swift::Int *a1)
{
  return FeedUpdateType.init(rawValue:)(*a1);
}

unint64_t sub_1A93976A0()
{
  unint64_t result;

  result = qword_1EEABF208;
  if (!qword_1EEABF208)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for FeedUpdateType, &type metadata for FeedUpdateType);
    atomic_store(result, (unint64_t *)&qword_1EEABF208);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedUpdateType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 20 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 20) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEB)
    return ((uint64_t (*)(void))((char *)&loc_1A9397730 + 4 * byte_1A942243F[v4]))();
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_1A9397764 + 4 * byte_1A942243A[v4]))();
}

uint64_t sub_1A9397764(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A939776C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9397774);
  return result;
}

uint64_t sub_1A9397780(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9397788);
  *(_BYTE *)result = a2 + 20;
  return result;
}

uint64_t sub_1A939778C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9397794(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedUpdateType()
{
  return &type metadata for FeedUpdateType;
}

uint64_t static NSThread.performOnMain(_:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v13;
  uint64_t v14;
  void *v15;
  _QWORD aBlock[6];

  v4 = sub_1A93F7D58();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7DB8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_isMainThread))
    return a1();
  sub_1A9066C6C();
  v13 = (void *)sub_1A93F8868();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  aBlock[4] = sub_1A9055750;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_77;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A90A1130();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D28();
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v11, v7, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1A93979A4()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1A93979C8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)PFCoreAnalyticsChannel), sel_init);
  qword_1ED2A7B88 = (uint64_t)result;
  return result;
}

BOOL sub_1A93979F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1A9397A0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1A9397A20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1A9397A34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

id ManagedObjectContextMonitor.__allocating_init(context:label:sentryLogger:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10)
{
  objc_class *v10;
  id v21;

  v21 = objc_allocWithZone(v10);
  return ManagedObjectContextMonitor.init(context:label:sentryLogger:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1A9397AE8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

BOOL ManagedObjectContextMonitor.ContextLabel.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

uint64_t ManagedObjectContextMonitor.__allocating_init(context:label:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)(void *a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  objc_class *v7;
  id v15;

  v15 = objc_allocWithZone(v7);
  return ManagedObjectContextMonitor.init(context:label:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1A9397BB0()
{
  char *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)&v0[OBJC_IVAR___PFManagedObjectContextMonitor_lock] + 16);
  os_unfair_lock_lock(v1);
  if (!v0[OBJC_IVAR___PFManagedObjectContextMonitor_status])
  {
    if (qword_1ED2AC9E0 != -1)
      swift_once();
    v11 = sub_1A93F7698();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED2AD000);
    v3 = v0;
    v4 = sub_1A93F7674();
    v5 = sub_1A93F879C();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v14 = v7;
      *(_DWORD *)v6 = 136446210;
      v12 = sub_1A93F8CA0();
      sub_1A906436C(v12, v13, &v14);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
LABEL_11:

    goto LABEL_12;
  }
  v0[OBJC_IVAR___PFManagedObjectContextMonitor_status] = 0;
  sub_1A909CD7C();
  if (qword_1ED2AC9E0 != -1)
    swift_once();
  v2 = sub_1A93F7698();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED2AD000);
  v3 = v0;
  v4 = sub_1A93F7674();
  v5 = sub_1A93F87B4();
  if (!os_log_type_enabled(v4, v5))
    goto LABEL_11;
  v6 = (uint8_t *)swift_slowAlloc();
  v7 = swift_slowAlloc();
  v14 = v7;
  *(_DWORD *)v6 = 136446210;
  v8 = sub_1A93F8CA0();
  sub_1A906436C(v8, v9, &v14);
  sub_1A93F8AA8();

  swift_bridgeObjectRelease();
  v10 = " %{public}s - Stopping Core Data hang monitoring.";
LABEL_10:
  _os_log_impl(&dword_1A904E000, v4, v5, v10, v6, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1AF41411C](v7, -1, -1);
  MEMORY[0x1AF41411C](v6, -1, -1);

LABEL_12:
  os_unfair_lock_unlock(v1);
}

void sub_1A9397ED8(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1AF41420C](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_1A9397F40(a1, a3);

  }
}

void sub_1A9397F40(uint64_t a1, double a2)
{
  char *v2;
  char *v3;
  os_unfair_lock_s *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;

  v3 = v2;
  v6 = (os_unfair_lock_s *)(*(_QWORD *)&v3[OBJC_IVAR___PFManagedObjectContextMonitor_lock] + 16);
  os_unfair_lock_lock(v6);
  v7 = *(_QWORD *)&v3[OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer];
  if (v7)
    v8 = v7 == a1;
  else
    v8 = 0;
  if (v8)
  {
    if (*(double *)&v3[OBJC_IVAR___PFManagedObjectContextMonitor_criticalHangDuration] + -2.22044605e-16 >= a2)
    {
      if (*(double *)&v3[OBJC_IVAR___PFManagedObjectContextMonitor_severeHangDuration] + -2.22044605e-16 >= a2)
      {
        if (*(double *)&v3[OBJC_IVAR___PFManagedObjectContextMonitor_shortHangDuration] + -2.22044605e-16 >= a2)
        {
          v34 = 1;
        }
        else
        {
          if (qword_1ED2AC9E0 != -1)
            swift_once();
          v35 = sub_1A93F7698();
          __swift_project_value_buffer(v35, (uint64_t)qword_1ED2AD000);
          v36 = v3;
          v37 = sub_1A93F7674();
          v38 = sub_1A93F879C();
          if (os_log_type_enabled(v37, v38))
          {
            v39 = swift_slowAlloc();
            v40 = swift_slowAlloc();
            v51 = v40;
            *(_DWORD *)v39 = 136446466;
            v41 = sub_1A93F8CA0();
            sub_1A906436C(v41, v42, &v51);
            sub_1A93F8AA8();

            swift_bridgeObjectRelease();
            *(_WORD *)(v39 + 12) = 2050;
            sub_1A93F8AA8();
            _os_log_impl(&dword_1A904E000, v37, v38, "[CD HANG] %{public}s is hanging after %{public}fs.", (uint8_t *)v39, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1AF41411C](v40, -1, -1);
            MEMORY[0x1AF41411C](v39, -1, -1);

          }
          else
          {

          }
          v34 = 2;
        }
      }
      else
      {
        if (qword_1ED2AC9E0 != -1)
          swift_once();
        v26 = sub_1A93F7698();
        __swift_project_value_buffer(v26, (uint64_t)qword_1ED2AD000);
        v27 = v3;
        v28 = sub_1A93F7674();
        v29 = sub_1A93F879C();
        if (os_log_type_enabled(v28, v29))
        {
          v30 = swift_slowAlloc();
          v31 = swift_slowAlloc();
          v51 = v31;
          *(_DWORD *)v30 = 136446466;
          v32 = sub_1A93F8CA0();
          sub_1A906436C(v32, v33, &v51);
          sub_1A93F8AA8();

          swift_bridgeObjectRelease();
          *(_WORD *)(v30 + 12) = 2050;
          sub_1A93F8AA8();
          _os_log_impl(&dword_1A904E000, v28, v29, "[CD HANG] [SEVERE] %{public}s is still hanging after %{public}fs.", (uint8_t *)v30, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v31, -1, -1);
          MEMORY[0x1AF41411C](v30, -1, -1);

        }
        else
        {

        }
        v34 = 3;
      }
    }
    else
    {
      v17 = OBJC_IVAR___PFManagedObjectContextMonitor_loggedFault;
      if ((v3[OBJC_IVAR___PFManagedObjectContextMonitor_loggedFault] & 1) == 0)
      {
        if (qword_1ED2AC9E0 != -1)
          swift_once();
        v18 = sub_1A93F7698();
        __swift_project_value_buffer(v18, (uint64_t)qword_1ED2AD000);
        v19 = v3;
        v20 = sub_1A93F7674();
        v21 = sub_1A93F87A8();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc();
          v23 = swift_slowAlloc();
          v51 = v23;
          *(_DWORD *)v22 = 136446210;
          v24 = sub_1A93F8CA0();
          sub_1A906436C(v24, v25, &v51);
          sub_1A93F8AA8();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A904E000, v20, v21, "Core data hang in %{public}s reached critical duration", v22, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v23, -1, -1);
          MEMORY[0x1AF41411C](v22, -1, -1);

        }
        else
        {

        }
        v3[v17] = 1;
      }
      if (qword_1ED2AC9E0 != -1)
        swift_once();
      v43 = sub_1A93F7698();
      __swift_project_value_buffer(v43, (uint64_t)qword_1ED2AD000);
      v44 = v3;
      v45 = sub_1A93F7674();
      v46 = sub_1A93F879C();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = swift_slowAlloc();
        v48 = swift_slowAlloc();
        v51 = v48;
        *(_DWORD *)v47 = 136446466;
        v49 = sub_1A93F8CA0();
        sub_1A906436C(v49, v50, &v51);
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 12) = 2050;
        sub_1A93F8AA8();
        _os_log_impl(&dword_1A904E000, v45, v46, "[CD HANG] [CRITICAL] %{public}s is still hanging after %{public}fs.", (uint8_t *)v47, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v48, -1, -1);
        MEMORY[0x1AF41411C](v47, -1, -1);

      }
      else
      {

      }
      v34 = 4;
    }
    v3[OBJC_IVAR___PFManagedObjectContextMonitor_status] = v34;
  }
  else
  {
    if (qword_1ED2AC9E0 != -1)
      swift_once();
    v9 = sub_1A93F7698();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED2AD000);
    v10 = v3;
    v11 = sub_1A93F7674();
    v12 = sub_1A93F87B4();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v51 = v14;
      *(_DWORD *)v13 = 136315138;
      v15 = sub_1A93F8CA0();
      sub_1A906436C(v15, v16, &v51);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v11, v12, "%s - Timer fired after the ping ended.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v14, -1, -1);
      MEMORY[0x1AF41411C](v13, -1, -1);

    }
    else
    {

    }
  }
  os_unfair_lock_unlock(v6);
}

id ManagedObjectContextMonitor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ManagedObjectContextMonitor.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ManagedObjectContextMonitor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedObjectContextMonitor(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A9398904()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  void *v5;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 48);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v2)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease_n();
    swift_getObjectType();
    sub_1A93F891C();
    v5 = *(void **)(v0 + 16);
    swift_unknownObjectRelease();

    swift_release();
    swift_bridgeObjectRelease();
    sub_1A90AC3A4(v0 + OBJC_IVAR____TtC18PodcastsFoundationP33_ACA32E4676063C24D8CDAE723F3FF8C510MultiTimer_startDate);
    return v0;
  }
  swift_bridgeObjectRetain_n();
  result = sub_1A93F8E5C();
  v2 = result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        MEMORY[0x1AF4129DC](i, v1);
      else
        swift_retain();
      sub_1A93F7E00();
      swift_release();
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9398A40()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, double);
  double v14;
  double v15;
  void (*v16)(_BYTE *, uint64_t);
  _BYTE v17[24];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v17[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = sub_1A93F738C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v17[-v8];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = result;
    v12 = result + OBJC_IVAR____TtC18PodcastsFoundationP33_ACA32E4676063C24D8CDAE723F3FF8C510MultiTimer_startDate;
    swift_beginAccess();
    sub_1A90A1CA8(v12, (uint64_t)v2);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_1A90AC3A4((uint64_t)v2);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v9, v2, v3);
      v13 = *(void (**)(uint64_t, double))(v11 + 32);
      sub_1A93F7374();
      sub_1A93F72FC();
      v15 = v14;
      v16 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
      v16(v6, v3);
      v13(v11, v15);
      v16(v9, v3);
    }
    return swift_release();
  }
  return result;
}

unint64_t sub_1A9398BF4()
{
  unint64_t result;

  result = qword_1EEABF210;
  if (!qword_1EEABF210)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ManagedObjectContextMonitor.ContextLabel, &type metadata for ManagedObjectContextMonitor.ContextLabel);
    atomic_store(result, (unint64_t *)&qword_1EEABF210);
  }
  return result;
}

uint64_t method lookup function for ManagedObjectContextMonitor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedObjectContextMonitor.__allocating_init(context:label:sentryLogger:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of ManagedObjectContextMonitor.beginMonitoring()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ManagedObjectContextMonitor.endMonitoring()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

ValueMetadata *type metadata accessor for ManagedObjectContextMonitor.ContextLabel()
{
  return &type metadata for ManagedObjectContextMonitor.ContextLabel;
}

uint64_t sub_1A9398C94()
{
  return type metadata accessor for MultiTimer(0);
}

uint64_t storeEnumTagSinglePayload for ManagedObjectContextMonitor.Status(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A9398CE8 + 4 * byte_1A9422575[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A9398D1C + 4 * byte_1A9422570[v4]))();
}

uint64_t sub_1A9398D1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9398D24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9398D2CLL);
  return result;
}

uint64_t sub_1A9398D38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9398D40);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A9398D44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9398D4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManagedObjectContextMonitor.Status()
{
  return &type metadata for ManagedObjectContextMonitor.Status;
}

unint64_t sub_1A9398D6C()
{
  unint64_t result;

  result = qword_1EEABF288;
  if (!qword_1EEABF288)
  {
    result = MEMORY[0x1AF414014](&unk_1A94227BC, &type metadata for ManagedObjectContextMonitor.Status);
    atomic_store(result, (unint64_t *)&qword_1EEABF288);
  }
  return result;
}

_QWORD *sub_1A9398DB0(_QWORD *a1)
{
  return sub_1A907ECFC(0, a1[2], 0, a1);
}

_QWORD *sub_1A9398DC4(_QWORD *a1)
{
  return sub_1A91178E4(0, a1[2], 0, a1);
}

_QWORD *sub_1A9398DD8(_QWORD *a1)
{
  return sub_1A911841C(0, a1[2], 0, a1);
}

uint64_t sub_1A9398DEC(unint64_t a1)
{
  return sub_1A9118B04(0, *(_QWORD *)(a1 + 16), 0, a1);
}

void sub_1A9398E00(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1AF4129E8);
}

uint64_t sub_1A9398E68()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9398E8C()
{
  return sub_1A9398A40();
}

void sub_1A9398EA4(double a1)
{
  void *v2;
  uint64_t inited;
  id v4;
  __CFString *v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD v11[6];

  if (qword_1ED2A7B98 != -1)
    swift_once();
  v2 = (void *)qword_1ED2A7B88;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9730);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405950;
  *(_QWORD *)(inited + 32) = 0x6E6F697461727564;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v4 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v5 = CFSTR("com.apple.podcasts.CoreDataHang");
  *(_QWORD *)(inited + 48) = objc_msgSend(v4, sel_initWithDouble_, a1);
  *(_QWORD *)(inited + 56) = 0x747865746E6F63;
  *(_QWORD *)(inited + 64) = 0xE700000000000000;
  sub_1A9072534(0, &qword_1ED2A95B0);
  *(_QWORD *)(inited + 72) = sub_1A93F8A60();
  v6 = sub_1A90C1B64(inited);
  v7 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v6;
  v11[4] = sub_1A90D287C;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A90AC824;
  v11[3] = &block_descriptor_20;
  v9 = _Block_copy(v11);
  swift_release();
  v10 = objc_msgSend(v7, sel_initWithName_generator_, v5, v9);

  _Block_release(v9);
  objc_msgSend(v2, sel_sendEvent_, v10);

}

uint64_t sub_1A93990A8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A93990CC(uint64_t a1, double a2)
{
  uint64_t v2;

  sub_1A9397ED8(a1, v2, a2);
}

uint64_t sub_1A93990D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A93F762C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id MTPodcast.artwork.getter()
{
  void *v0;
  void *v1;
  id v2;
  id result;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *v29;
  char *v30;
  uint64_t *v31;
  char *v32;
  char *v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  objc_super v42;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_artworkTemplateURL);
  if (v2 || (result = objc_msgSend(v0, sel_imageURL), (v2 = result) != 0))
  {
    v40 = sub_1A93F8040();
    v41 = v4;

    v5 = objc_msgSend(v0, sel_artworkPrimaryColor);
    if (v5)
    {
      v6 = v5;
      v39 = sub_1A93F8040();
      v8 = v7;

    }
    else
    {
      v39 = 0;
      v8 = 0;
    }
    v9 = objc_msgSend(v0, sel_artworkTextPrimaryColor);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1A93F8040();
      v13 = v12;

    }
    else
    {
      v11 = 0;
      v13 = 0;
    }
    v14 = objc_msgSend(v0, sel_artworkTextSecondaryColor);
    if (v14)
    {
      v15 = v14;
      v16 = sub_1A93F8040();
      v18 = v17;

    }
    else
    {
      v16 = 0;
      v18 = 0;
    }
    v19 = objc_msgSend(v0, sel_artworkTextTertiaryColor);
    if (v19)
    {
      v20 = v19;
      v21 = sub_1A93F8040();
      v23 = v22;

    }
    else
    {
      v21 = 0;
      v23 = 0;
    }
    v24 = objc_msgSend(v1, sel_artworkTextQuaternaryColor);
    if (v24)
    {
      v25 = v24;
      v26 = sub_1A93F8040();
      v28 = v27;

    }
    else
    {
      v26 = 0;
      v28 = 0;
    }
    v29 = (objc_class *)type metadata accessor for PlayerArtwork();
    v30 = (char *)objc_allocWithZone(v29);
    v31 = (uint64_t *)&v30[OBJC_IVAR___IMPlayerArtwork_template];
    *v31 = v40;
    v31[1] = v41;
    v32 = &v30[OBJC_IVAR___IMPlayerArtwork_width];
    *(_QWORD *)v32 = 0;
    v32[8] = 1;
    v33 = &v30[OBJC_IVAR___IMPlayerArtwork_height];
    *(_QWORD *)v33 = 0;
    v33[8] = 1;
    v34 = (uint64_t *)&v30[OBJC_IVAR___IMPlayerArtwork_backgroundColor];
    *v34 = v39;
    v34[1] = v8;
    v35 = (uint64_t *)&v30[OBJC_IVAR___IMPlayerArtwork_primaryTextColor];
    *v35 = v11;
    v35[1] = v13;
    v36 = (uint64_t *)&v30[OBJC_IVAR___IMPlayerArtwork_secondaryTextColor];
    *v36 = v16;
    v36[1] = v18;
    v37 = (uint64_t *)&v30[OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor];
    *v37 = v21;
    v37[1] = v23;
    v38 = (uint64_t *)&v30[OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor];
    *v38 = v26;
    v38[1] = v28;
    v42.receiver = v30;
    v42.super_class = v29;
    return objc_msgSendSuper2(&v42, sel_init);
  }
  return result;
}

id MTPodcast.uberArtwork.getter()
{
  void *v0;
  void *v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  objc_class *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  objc_super v43;

  v1 = v0;
  result = objc_msgSend(v0, sel_uberBackgroundImageURL);
  if (result)
  {
    v3 = result;
    v4 = sub_1A93F8040();
    v41 = v5;
    v42 = v4;

    v6 = objc_msgSend(v0, sel_uberBackgroundJoeColor);
    if (v6)
    {
      v7 = v6;
      v40 = sub_1A93F8040();
      v9 = v8;

    }
    else
    {
      v40 = 0;
      v9 = 0;
    }
    v10 = objc_msgSend(v0, sel_uberArtworkTextPrimaryColor);
    if (v10)
    {
      v11 = v10;
      v12 = sub_1A93F8040();
      v14 = v13;

    }
    else
    {
      v12 = 0;
      v14 = 0;
    }
    v15 = objc_msgSend(v0, sel_uberArtworkTextSecondaryColor);
    if (v15)
    {
      v16 = v15;
      v17 = sub_1A93F8040();
      v19 = v18;

    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    v20 = objc_msgSend(v0, sel_uberArtworkTextTertiaryColor);
    if (v20)
    {
      v21 = v20;
      v22 = sub_1A93F8040();
      v24 = v23;

    }
    else
    {
      v22 = 0;
      v24 = 0;
    }
    v25 = objc_msgSend(v1, sel_uberArtworkTextQuaternaryColor);
    if (v25)
    {
      v26 = v25;
      v27 = sub_1A93F8040();
      v29 = v28;

    }
    else
    {
      v27 = 0;
      v29 = 0;
    }
    v30 = (objc_class *)type metadata accessor for PlayerArtwork();
    v31 = (char *)objc_allocWithZone(v30);
    v32 = &v31[OBJC_IVAR___IMPlayerArtwork_template];
    *(_QWORD *)v32 = v42;
    *((_QWORD *)v32 + 1) = v41;
    v33 = &v31[OBJC_IVAR___IMPlayerArtwork_width];
    *(_QWORD *)v33 = 0;
    v33[8] = 1;
    v34 = &v31[OBJC_IVAR___IMPlayerArtwork_height];
    *(_QWORD *)v34 = 0;
    v34[8] = 1;
    v35 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_backgroundColor];
    *v35 = v40;
    v35[1] = v9;
    v36 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_primaryTextColor];
    *v36 = v12;
    v36[1] = v14;
    v37 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_secondaryTextColor];
    *v37 = v17;
    v37[1] = v19;
    v38 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor];
    *v38 = v22;
    v38[1] = v24;
    v39 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor];
    *v39 = v27;
    v39[1] = v29;
    v43.receiver = v31;
    v43.super_class = v30;
    return objc_msgSendSuper2(&v43, sel_init);
  }
  return result;
}

id MTEpisode.artwork.getter()
{
  void *v0;
  void *v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  objc_class *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  objc_super v46;

  v1 = v0;
  result = objc_msgSend(v0, sel_artworkTemplateURL);
  if (result)
  {
    v3 = result;
    v4 = sub_1A93F8040();
    v44 = v5;
    v45 = v4;

    v6 = objc_msgSend(v0, sel_artworkBackgroundColor);
    if (v6)
    {
      v7 = v6;
      v8 = sub_1A93F8040();
      v40 = v9;
      v42 = v8;

    }
    else
    {
      v40 = 0;
      v42 = 0;
    }
    v10 = objc_msgSend(v0, sel_artworkTextPrimaryColor, v40, v42);
    if (v10)
    {
      v11 = v10;
      v12 = sub_1A93F8040();
      v14 = v13;

    }
    else
    {
      v12 = 0;
      v14 = 0;
    }
    v15 = objc_msgSend(v0, sel_artworkTextSecondaryColor);
    if (v15)
    {
      v16 = v15;
      v17 = sub_1A93F8040();
      v19 = v18;

    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    v20 = objc_msgSend(v0, sel_artworkTextTertiaryColor);
    if (v20)
    {
      v21 = v20;
      v22 = sub_1A93F8040();
      v24 = v23;

    }
    else
    {
      v22 = 0;
      v24 = 0;
    }
    v25 = objc_msgSend(v1, sel_artworkTextQuaternaryColor);
    if (v25)
    {
      v26 = v25;
      v27 = sub_1A93F8040();
      v29 = v28;

    }
    else
    {
      v27 = 0;
      v29 = 0;
    }
    v30 = (objc_class *)type metadata accessor for PlayerArtwork();
    v31 = (char *)objc_allocWithZone(v30);
    v32 = &v31[OBJC_IVAR___IMPlayerArtwork_template];
    *(_QWORD *)v32 = v45;
    *((_QWORD *)v32 + 1) = v44;
    v33 = &v31[OBJC_IVAR___IMPlayerArtwork_width];
    *(_QWORD *)v33 = 0x4082C00000000000;
    v33[8] = 0;
    v34 = &v31[OBJC_IVAR___IMPlayerArtwork_height];
    *(_QWORD *)v34 = 0x4082C00000000000;
    v34[8] = 0;
    v35 = &v31[OBJC_IVAR___IMPlayerArtwork_backgroundColor];
    *(_QWORD *)v35 = v43;
    *((_QWORD *)v35 + 1) = v41;
    v36 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_primaryTextColor];
    *v36 = v12;
    v36[1] = v14;
    v37 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_secondaryTextColor];
    *v37 = v17;
    v37[1] = v19;
    v38 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor];
    *v38 = v22;
    v38[1] = v24;
    v39 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor];
    *v39 = v27;
    v39[1] = v29;
    v46.receiver = v31;
    v46.super_class = v30;
    return objc_msgSendSuper2(&v46, sel_init);
  }
  return result;
}

id PlayerArtwork.__allocating_init(from:)(uint64_t a1)
{
  id v1;

  v1 = sub_1A939A108(a1);
  swift_release();
  return v1;
}

uint64_t PlayerArtwork.width.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___IMPlayerArtwork_width);
}

uint64_t PlayerArtwork.height.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___IMPlayerArtwork_height);
}

uint64_t PlayerArtwork.backgroundColor.getter()
{
  return sub_1A9242E28(&OBJC_IVAR___IMPlayerArtwork_backgroundColor);
}

uint64_t PlayerArtwork.primaryTextColor.getter()
{
  return sub_1A9242E28(&OBJC_IVAR___IMPlayerArtwork_primaryTextColor);
}

uint64_t PlayerArtwork.secondaryTextColor.getter()
{
  return sub_1A9242E28(&OBJC_IVAR___IMPlayerArtwork_secondaryTextColor);
}

uint64_t PlayerArtwork.tertiaryTextColor.getter()
{
  return sub_1A9242E28(&OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor);
}

uint64_t PlayerArtwork.quaternaryTextColor.getter()
{
  return sub_1A9242E28(&OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor);
}

id PlayerArtwork.__allocating_init(template:width:height:backgroundColor:primaryTextColor:secondaryTextColor:tertiaryTextColor:quaternaryTextColor:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  objc_class *v16;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  objc_super v35;

  v23 = (char *)objc_allocWithZone(v16);
  v24 = &v23[OBJC_IVAR___IMPlayerArtwork_template];
  *(_QWORD *)v24 = a1;
  *((_QWORD *)v24 + 1) = a2;
  v25 = &v23[OBJC_IVAR___IMPlayerArtwork_width];
  *(_QWORD *)v25 = a3;
  v25[8] = a4 & 1;
  v26 = &v23[OBJC_IVAR___IMPlayerArtwork_height];
  *(_QWORD *)v26 = a5;
  v26[8] = a6 & 1;
  v27 = &v23[OBJC_IVAR___IMPlayerArtwork_backgroundColor];
  *(_QWORD *)v27 = a7;
  *((_QWORD *)v27 + 1) = a8;
  v28 = &v23[OBJC_IVAR___IMPlayerArtwork_primaryTextColor];
  *(_QWORD *)v28 = a9;
  *((_QWORD *)v28 + 1) = a10;
  v29 = &v23[OBJC_IVAR___IMPlayerArtwork_secondaryTextColor];
  *(_QWORD *)v29 = a11;
  *((_QWORD *)v29 + 1) = a12;
  v30 = &v23[OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor];
  *(_QWORD *)v30 = a13;
  *((_QWORD *)v30 + 1) = a14;
  v31 = &v23[OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor];
  *(_QWORD *)v31 = a15;
  *((_QWORD *)v31 + 1) = a16;
  v35.receiver = v23;
  v35.super_class = v16;
  return objc_msgSendSuper2(&v35, sel_init);
}

id PlayerArtwork.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PlayerArtwork.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1A9399B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A939A37C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9399B38()
{
  sub_1A90595EC();
  return sub_1A93F945C();
}

uint64_t sub_1A9399B60()
{
  sub_1A90595EC();
  return sub_1A93F9468();
}

id PlayerArtwork.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlayerArtwork();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t PlayerArtwork.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return PlayerArtwork.init(from:)(a1);
}

unint64_t PlayerArtwork.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  objc_class *v35;
  uint64_t v36;
  _QWORD *v37;
  objc_super v38;
  char v39;

  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9E98);
  v4 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v7);
  v8 = sub_1A90595EC();
  v9 = v1;
  sub_1A93F93C0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);

    type metadata accessor for PlayerArtwork();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v39 = 0;
    v10 = sub_1A93F8F4C();
    v12 = (uint64_t *)&v9[OBJC_IVAR___IMPlayerArtwork_template];
    *v12 = v10;
    v12[1] = v13;
    v39 = 1;
    v14 = sub_1A93F8F1C();
    v15 = &v9[OBJC_IVAR___IMPlayerArtwork_width];
    *(_QWORD *)v15 = v14;
    v15[8] = v16 & 1;
    v39 = 2;
    v17 = sub_1A93F8F1C();
    v18 = &v9[OBJC_IVAR___IMPlayerArtwork_height];
    *(_QWORD *)v18 = v17;
    v18[8] = v19 & 1;
    v39 = 3;
    v20 = sub_1A93F8F04();
    v21 = (uint64_t *)&v9[OBJC_IVAR___IMPlayerArtwork_backgroundColor];
    *v21 = v20;
    v21[1] = v22;
    v39 = 4;
    v23 = sub_1A93F8F04();
    v24 = (uint64_t *)&v9[OBJC_IVAR___IMPlayerArtwork_primaryTextColor];
    *v24 = v23;
    v24[1] = v25;
    v39 = 5;
    v26 = sub_1A93F8F04();
    v27 = (uint64_t *)&v9[OBJC_IVAR___IMPlayerArtwork_secondaryTextColor];
    *v27 = v26;
    v27[1] = v28;
    v39 = 6;
    v29 = sub_1A93F8F04();
    v30 = (uint64_t *)&v9[OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor];
    *v30 = v29;
    v30[1] = v31;
    v39 = 7;
    v32 = sub_1A93F8F04();
    v33 = (uint64_t *)&v9[OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor];
    *v33 = v32;
    v33[1] = v34;

    v35 = (objc_class *)type metadata accessor for PlayerArtwork();
    v38.receiver = v9;
    v38.super_class = v35;
    v8 = (unint64_t)objc_msgSendSuper2(&v38, sel_init);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v36);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  }
  return v8;
}

unint64_t sub_1A939A0B8@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  id v5;
  unint64_t result;

  v5 = objc_allocWithZone((Class)type metadata accessor for PlayerArtwork());
  result = PlayerArtwork.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

id sub_1A939A108(uint64_t a1)
{
  uint64_t v1;
  char v2;
  double v3;
  double v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  char *v14;
  double *v15;
  double *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_super v28;

  v1 = *(_QWORD *)(a1 + 56);
  if (!v1)
    return 0;
  v2 = *(_BYTE *)(a1 + 24);
  v3 = 0.0;
  v4 = 0.0;
  if ((v2 & 1) == 0)
    v4 = (double)*(uint64_t *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_BYTE *)(a1 + 40);
  if ((v6 & 1) == 0)
    v3 = (double)*(uint64_t *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 88);
  v10 = *(_QWORD *)(a1 + 104);
  v23 = *(_QWORD *)(a1 + 80);
  v24 = *(_QWORD *)(a1 + 96);
  v11 = *(_QWORD *)(a1 + 120);
  v27 = *(_QWORD *)(a1 + 128);
  v25 = *(_QWORD *)(a1 + 112);
  v26 = *(_QWORD *)(a1 + 136);
  v12 = (objc_class *)type metadata accessor for PlayerArtwork();
  v13 = (char *)objc_allocWithZone(v12);
  v14 = &v13[OBJC_IVAR___IMPlayerArtwork_template];
  *(_QWORD *)v14 = v5;
  *((_QWORD *)v14 + 1) = v1;
  v15 = (double *)&v13[OBJC_IVAR___IMPlayerArtwork_width];
  *v15 = v4;
  *((_BYTE *)v15 + 8) = v2;
  v16 = (double *)&v13[OBJC_IVAR___IMPlayerArtwork_height];
  *v16 = v3;
  *((_BYTE *)v16 + 8) = v6;
  v17 = &v13[OBJC_IVAR___IMPlayerArtwork_backgroundColor];
  *(_QWORD *)v17 = v7;
  *((_QWORD *)v17 + 1) = v8;
  v18 = &v13[OBJC_IVAR___IMPlayerArtwork_primaryTextColor];
  *(_QWORD *)v18 = v23;
  *((_QWORD *)v18 + 1) = v9;
  v19 = &v13[OBJC_IVAR___IMPlayerArtwork_secondaryTextColor];
  *(_QWORD *)v19 = v24;
  *((_QWORD *)v19 + 1) = v10;
  v20 = &v13[OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor];
  *(_QWORD *)v20 = v25;
  *((_QWORD *)v20 + 1) = v11;
  v21 = &v13[OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor];
  *(_QWORD *)v21 = v27;
  *((_QWORD *)v21 + 1) = v26;
  v28.receiver = v13;
  v28.super_class = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v28, sel_init);
}

uint64_t method lookup function for PlayerArtwork()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlayerArtwork.__allocating_init(template:width:height:backgroundColor:primaryTextColor:secondaryTextColor:tertiaryTextColor:quaternaryTextColor:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(v6 + 144))(a1, a2, a3, a4 & 1, a5, a6 & 1);
}

uint64_t dispatch thunk of PlayerArtwork.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of PlayerArtwork.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

ValueMetadata *type metadata accessor for ArtworkInfoConstants()
{
  return &type metadata for ArtworkInfoConstants;
}

unint64_t sub_1A939A338()
{
  unint64_t result;

  result = qword_1EEABF2D0[0];
  if (!qword_1EEABF2D0[0])
  {
    result = MEMORY[0x1AF414014](&unk_1A9422950, &type metadata for PlayerArtwork.CodingKeys);
    atomic_store(result, qword_1EEABF2D0);
  }
  return result;
}

uint64_t sub_1A939A37C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6574616C706D6574 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874646977 && a2 == 0xE500000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A9450040 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A9450060 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A9450080 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A94500A0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t MetricsField.name.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t static MetricsField.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A93F90C0();
}

uint64_t MetricsField.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t MetricsField.hashValue.getter()
{
  sub_1A93F92DC();
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A939A7AC(uint64_t *a1, uint64_t *a2)
{
  return static MetricsField.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1A939A7C0()
{
  return MetricsField.hashValue.getter();
}

uint64_t sub_1A939A7C8()
{
  return MetricsField.hash(into:)();
}

uint64_t sub_1A939A7D0()
{
  sub_1A93F92DC();
  MetricsField.hash(into:)();
  return sub_1A93F9324();
}

uint64_t MetricsField.debugDescription.getter()
{
  _QWORD v1[2];

  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "MetricsField<");
  sub_1A93F9474();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return v1[0];
}

uint64_t sub_1A939A8E8()
{
  return MetricsField.debugDescription.getter();
}

uint64_t MetricsField.description.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = nullsub_1(a1, a2, a3, a4);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_1A939A92C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = nullsub_1(*v1, v1[1], *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static MetricsField<>.isFamily.getter()
{
  return 0x796C696D61467369;
}

uint64_t static MetricsField<>.isSignedIn.getter()
{
  return 0x64656E6769537369;
}

uint64_t static MetricsField<>.isStudent.getter()
{
  return 0x6E65647574537369;
}

uint64_t static MetricsField<>.isUber.getter()
{
  return 0x726562557369;
}

uint64_t static MetricsField<>.sharedContent.getter()
{
  return 0x6F43646572616873;
}

uint64_t static MetricsField<>.xpAccountsMatch.getter()
{
  return 0x6E756F6363417078;
}

uint64_t static MetricsField<>.eventTime.getter()
{
  return 0x6D6954746E657665;
}

uint64_t static MetricsField<>.pixelRatio.getter()
{
  return 0x7461526C65786970;
}

uint64_t static MetricsField<>.postTime.getter()
{
  return 0x656D695474736F70;
}

uint64_t static MetricsField<>.baseVersion.getter()
{
  return 0x7372655665736162;
}

uint64_t static MetricsField<>.capacityData.getter()
{
  return 0x7974696361706163;
}

unint64_t static MetricsField<>.capacityDataAvailable.getter()
{
  return 0xD000000000000015;
}

uint64_t static MetricsField<>.capacityDisk.getter()
{
  return 0x7974696361706163;
}

uint64_t static MetricsField<>.capacitySystem.getter()
{
  return 0x7974696361706163;
}

unint64_t static MetricsField<>.capacitySystemAvailable.getter()
{
  return 0xD000000000000017;
}

uint64_t static MetricsField<>.featuredContentKind.getter()
{
  return 0x646E694B6366;
}

uint64_t static MetricsField<>.impressionID.getter()
{
  return 0x6973736572706D69;
}

uint64_t static MetricsField<>.impressionIndex.getter()
{
  return 0x6973736572706D69;
}

unint64_t static MetricsField<>.impressionParentID.getter()
{
  return 0xD000000000000012;
}

uint64_t static MetricsField<>.language.getter()
{
  return 0x65676175676E616CLL;
}

unint64_t static MetricsField<>.locationPosition.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsField<>.navigation.getter()
{
  return 0x697461676976616ELL;
}

uint64_t static MetricsField<>.screenHeight.getter()
{
  return 0x65486E6565726373;
}

uint64_t static MetricsField<>.screenWidth.getter()
{
  return 0x69576E6565726373;
}

uint64_t static MetricsField<>.timezoneOffset.getter()
{
  return 0x656E6F7A656D6974;
}

uint64_t static MetricsField<>.xpPostFrequency.getter()
{
  return 0x724674736F507078;
}

unint64_t static MetricsField<>.xpUserIDLifespan.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsField<>.app.getter()
{
  return 7368801;
}

uint64_t static MetricsField<>.appVersion.getter()
{
  return 0x6973726556707061;
}

uint64_t static MetricsField<>.buildFlavor.getter()
{
  return 0x616C46646C697562;
}

uint64_t static MetricsField<>.buyParams.getter()
{
  return 0x6D61726150797562;
}

unint64_t static MetricsField<>.canaryIdentifier.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsField<>.childEventID.getter()
{
  return 0x657645646C696863;
}

uint64_t static MetricsField<>.clientID.getter()
{
  return 0x6449746E65696C63;
}

uint64_t static MetricsField<>.connection.getter()
{
  return 0x697463656E6E6F63;
}

uint64_t static MetricsField<>.deliveryVersion.getter()
{
  return 0x79726576696C6564;
}

uint64_t static MetricsField<>.eligibilityType.getter()
{
  return 0x6C69626967696C65;
}

unint64_t static MetricsField<>.entitlementBadge.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsField<>.hardwareFamily.getter()
{
  return 0x6572617764726168;
}

uint64_t static MetricsField<>.hardwareModel.getter()
{
  return 0x6572617764726168;
}

uint64_t static MetricsField<>.id.getter()
{
  return 25705;
}

uint64_t static MetricsField<>.name.getter()
{
  return 1701667182;
}

uint64_t static MetricsField<>.os.getter()
{
  return 29551;
}

uint64_t static MetricsField<>.osBuildNumber.getter()
{
  return 0x4E646C697542736FLL;
}

uint64_t static MetricsField<>.osVersion.getter()
{
  return 0x6F6973726556736FLL;
}

uint64_t static MetricsField<>.page.getter()
{
  return 1701273968;
}

uint64_t static MetricsField<>.referralApp.getter()
{
  return 0x707041666572;
}

uint64_t static MetricsField<>.resourceRevisionNumber.getter()
{
  return 0x656372756F736572;
}

uint64_t static MetricsField<>.searchTerm.getter()
{
  return 0x6554686372616573;
}

uint64_t static MetricsField<>.shelfCategoryID.getter()
{
  return 0x746143666C656873;
}

uint64_t static MetricsField<>.storefront.getter()
{
  return 0x6F724665726F7473;
}

unint64_t static MetricsField<>.storefrontHeader.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsField<>.term.getter()
{
  return 1836213620;
}

uint64_t static MetricsField<>.userAgent.getter()
{
  return 0x6E65674172657375;
}

uint64_t static MetricsField<>.userID.getter()
{
  return 0x644972657375;
}

uint64_t static MetricsField<>.xpSendMethod.getter()
{
  return 0x654D646E65537078;
}

unint64_t static MetricsField<>.xpClientIDSource.getter()
{
  return 0xD000000000000010;
}

unint64_t static MetricsField<>.xpUserIDSyncState.getter()
{
  return 0xD000000000000011;
}

uint64_t static MetricsField<>.actionURL.getter()
{
  return 0x72556E6F69746361;
}

uint64_t static MetricsField<>.externalReferralURL.getter()
{
  return 0x7255666552747865;
}

uint64_t static MetricsField<>.pageURL.getter()
{
  return 0x6C725565676170;
}

uint64_t static MetricsField<>.openURL.getter()
{
  return 0x6C72556E65706FLL;
}

uint64_t static MetricsField<>.impressionTimes.getter()
{
  return 0x6973736572706D69;
}

uint64_t static MetricsField<>.pageHistory.getter()
{
  return 0x7473694865676170;
}

uint64_t static MetricsField<>.impressions.getter()
{
  return 0x6973736572706D69;
}

uint64_t static MetricsField<>.location.getter()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t static MetricsField<>.viewedInfo.getter()
{
  return 0x6E49646577656976;
}

uint64_t static MetricsField<>.actionDetails.getter()
{
  return 0x65446E6F69746361;
}

uint64_t static MetricsField<>.searchFilters.getter()
{
  return 0x737265746C6966;
}

uint64_t static MetricsField<>.pageDetails.getter()
{
  return 0x6174654465676170;
}

uint64_t static MetricsField<>.actionContext.getter()
{
  return 0x6F436E6F69746361;
}

uint64_t static MetricsField<>.actionResult.getter()
{
  return 0x65526E6F69746361;
}

uint64_t static MetricsField<>.actionType.getter()
{
  return 0x79546E6F69746361;
}

uint64_t static MetricsField<>.kind.getter()
{
  return 1684957547;
}

uint64_t static MetricsField<>.eventVersion.getter()
{
  return 0x726556746E657665;
}

uint64_t static MetricsField<>.idType.getter()
{
  return 0x657079546469;
}

uint64_t static MetricsField<>.offerType.getter()
{
  return 0x707954726566666FLL;
}

uint64_t static MetricsField<>.pageContext.getter()
{
  return 0x746E6F4365676170;
}

uint64_t static MetricsField<>.pageID.getter()
{
  return 0x644965676170;
}

uint64_t static MetricsField<>.pageType.getter()
{
  return 0x6570795465676170;
}

uint64_t static MetricsField<>.pageVariant.getter()
{
  return 0x6972615665676170;
}

uint64_t static MetricsField<>.targetID.getter()
{
  return 0x6449746567726174;
}

uint64_t static MetricsField<>.impressionType.getter()
{
  return 0x6973736572706D69;
}

uint64_t static MetricsField<>.locationType.getter()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t static MetricsField<>.targetType.getter()
{
  return 0x7954746567726174;
}

uint64_t static MetricsField<>.topic.getter()
{
  return 0x6369706F74;
}

void sub_1A939B2E4()
{
  JUMPOUT(0x1AF414014);
}

uint64_t type metadata accessor for MetricsField(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MetricsField);
}

uint64_t AppDependencyKey.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A939B340 + 4 * byte_1A9422AE0[a1]))(0xD00000000000002FLL, 0x80000001A94420B0);
}

unint64_t sub_1A939B340()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_1A939B368()
{
  uint64_t v0;

  return v0 - 5;
}

uint64_t sub_1A939B380(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = AppDependencyKey.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == AppDependencyKey.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A939B408()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1A93F92DC();
  AppDependencyKey.rawValue.getter(v1);
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A939B468(uint64_t a1)
{
  char *v1;

  sub_1A922730C(a1, *v1);
}

uint64_t sub_1A939B470()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1A93F92DC();
  AppDependencyKey.rawValue.getter(v1);
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A939B4CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s18PodcastsFoundation16AppDependencyKeyO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1A939B4F8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = AppDependencyKey.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t _s18PodcastsFoundation16AppDependencyKeyO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1A939B56C()
{
  unint64_t result;

  result = qword_1ED2A5648;
  if (!qword_1ED2A5648)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AppDependencyKey, &type metadata for AppDependencyKey);
    atomic_store(result, (unint64_t *)&qword_1ED2A5648);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppDependencyKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A939B5FC + 4 * byte_1A9422AE9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A939B630 + 4 * byte_1A9422AE4[v4]))();
}

uint64_t sub_1A939B630(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A939B638(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A939B640);
  return result;
}

uint64_t sub_1A939B64C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A939B654);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A939B658(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A939B660(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppDependencyKey()
{
  return &type metadata for AppDependencyKey;
}

uint64_t StorageAnalyticsResponder.init(mediaSpaceCalculator:analyticsChannel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC948);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = 0;
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  return result;
}

Swift::Void __swiftcall StorageAnalyticsResponder.beginObserving()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_1A939B734((uint64_t *)(v3 + 16), v1, v2);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
}

uint64_t sub_1A939B734(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *a1;
  if (*a1)
  {
    swift_release();
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB78);
    sub_1A93F7AD0();
    swift_endAccess();
    *(_QWORD *)(swift_allocObject() + 16) = a3;
    sub_1A939BC2C();
    swift_unknownObjectRetain();
    v10 = sub_1A93F7D04();
    swift_release();
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a1 = v10;
  }
  return result;
}

Swift::Void __swiftcall StorageAnalyticsResponder.endObserving()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  if (*(_QWORD *)(v1 + 16))
  {
    sub_1A93F7938();
    swift_release();
  }
  *(_QWORD *)(v1 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
}

uint64_t destroy for StorageAnalyticsResponder()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_release();
}

_QWORD *_s18PodcastsFoundation25StorageAnalyticsResponderVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for StorageAnalyticsResponder(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for StorageAnalyticsResponder(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for StorageAnalyticsResponder()
{
  return &type metadata for StorageAnalyticsResponder;
}

void sub_1A939BA08(_QWORD *a1, void *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t inited;
  unint64_t v7;
  __CFString *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD aBlock[6];

  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC4E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A94055A0;
  *(_QWORD *)(inited + 32) = 0xD000000000000012;
  *(_QWORD *)(inited + 40) = 0x80000001A9450200;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, v3 >> 20);
  *(_QWORD *)(inited + 56) = 0xD000000000000016;
  *(_QWORD *)(inited + 64) = 0x80000001A9450220;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, v4 >> 20);
  *(_QWORD *)(inited + 80) = 0xD000000000000013;
  *(_QWORD *)(inited + 88) = 0x80000001A9447430;
  *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, v5 >> 20);
  v7 = sub_1A91138A4(inited);
  v8 = CFSTR("com.apple.podcasts.downloads.media.storage.usage");
  sub_1A91755A8(v7);
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v10;
  aBlock[4] = sub_1A90D287C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A90AC824;
  aBlock[3] = &block_descriptor_79;
  v13 = _Block_copy(aBlock);
  swift_release();
  v14 = objc_msgSend(v11, sel_initWithName_generator_, v8, v13);

  _Block_release(v13);
  objc_msgSend(a2, sel_sendEvent_, v14);

}

uint64_t sub_1A939BC00()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1A939BC24(_QWORD *a1)
{
  uint64_t v1;

  sub_1A939BA08(a1, *(void **)(v1 + 16));
}

unint64_t sub_1A939BC2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2ABB68;
  if (!qword_1ED2ABB68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2ABB70);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0C96190], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2ABB68);
  }
  return result;
}

uint64_t sub_1A939BC78()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t NSUserDefaults.BOOLPublisher(forKey:)(void *a1, void *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v38[3];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;

  v38[2] = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F8988();
  v39 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4058);
  v12 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  v41 = v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A3FE8);
  v16 = *(_QWORD *)(v15 - 8);
  v43 = v15;
  v44 = v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A3F88);
  v48 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v42 = (char *)v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A3F98);
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v21 = (char *)v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v2;
  v22[3] = a1;
  v38[1] = a2;
  v22[4] = a2;
  v23 = (void *)objc_opt_self();
  v24 = v2;
  swift_bridgeObjectRetain_n();
  v38[0] = v24;
  v25 = objc_msgSend(v23, sel_defaultCenter);
  sub_1A93F8994();

  sub_1A9066C6C();
  v49 = (id)sub_1A93F8868();
  v26 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v7, 1, 1, v26);
  sub_1A9066CA8((unint64_t *)&qword_1ED2A41D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  sub_1A9066CA8((unint64_t *)&qword_1ED2A1C90, (uint64_t (*)(uint64_t))sub_1A9066C6C, MEMORY[0x1E0DEF7F8]);
  sub_1A93F7C80();
  sub_1A90C0C1C((uint64_t)v7);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v8);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_1A939CE30;
  *(_QWORD *)(v27 + 24) = v22;
  sub_1A9066D74(&qword_1ED2A4050, &qword_1ED2A4058, MEMORY[0x1E0C95CB8]);
  swift_retain();
  v28 = v40;
  sub_1A93F7B84();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4498);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1A9405520;
  v30 = (void *)sub_1A93F8010();
  v31 = v38[0];
  LOBYTE(v10) = objc_msgSend(v38[0], sel_BOOLForKey_, v30);

  *(_BYTE *)(v29 + 32) = (_BYTE)v10;
  sub_1A9066D74(&qword_1ED2A3FE0, &qword_1ED2A3FE8, MEMORY[0x1E0C95950]);
  v33 = v42;
  v32 = v43;
  sub_1A93F7C68();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v32);
  sub_1A9066D74(&qword_1ED2A3F80, &qword_1ED2A3F88, MEMORY[0x1E0C95788]);
  v34 = v46;
  sub_1A93F7CE0();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v34);
  v35 = (void *)sub_1A915087C();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v21, v47);
  v49 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4078);
  sub_1A9066D74(&qword_1ED2A4070, &qword_1ED2A4078, MEMORY[0x1E0C95D90]);
  v36 = sub_1A93F7B24();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v36;
}

uint64_t NSUserDefaults.integerPublisher(forKey:)(void *a1, void *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;

  v39[2] = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F8988();
  v40 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4058);
  v12 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  v42 = v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8C18);
  v16 = *(_QWORD *)(v15 - 8);
  v44 = v15;
  v45 = v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8998);
  v49 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v43 = (char *)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A89A8);
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v21 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v2;
  v22[3] = a1;
  v39[1] = a2;
  v22[4] = a2;
  v23 = (void *)objc_opt_self();
  v24 = v2;
  swift_bridgeObjectRetain_n();
  v39[0] = v24;
  v25 = objc_msgSend(v23, sel_defaultCenter);
  sub_1A93F8994();

  sub_1A9066C6C();
  v50 = (id)sub_1A93F8868();
  v26 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v7, 1, 1, v26);
  sub_1A9066CA8((unint64_t *)&qword_1ED2A41D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  sub_1A9066CA8((unint64_t *)&qword_1ED2A1C90, (uint64_t (*)(uint64_t))sub_1A9066C6C, MEMORY[0x1E0DEF7F8]);
  sub_1A93F7C80();
  sub_1A90C0C1C((uint64_t)v7);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v8);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_1A939D4D0;
  *(_QWORD *)(v27 + 24) = v22;
  sub_1A9066D74(&qword_1ED2A4050, &qword_1ED2A4058, MEMORY[0x1E0C95CB8]);
  swift_retain();
  v28 = v41;
  sub_1A93F7B84();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A44A0);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1A9405520;
  v30 = (void *)sub_1A93F8010();
  v31 = v39[0];
  v32 = objc_msgSend(v39[0], sel_integerForKey_, v30);

  *(_QWORD *)(v29 + 32) = v32;
  sub_1A9066D74(&qword_1ED2A8C10, &qword_1ED2A8C18, MEMORY[0x1E0C95950]);
  v34 = v43;
  v33 = v44;
  sub_1A93F7C68();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v18, v33);
  sub_1A9066D74(&qword_1ED2A8990, &qword_1ED2A8998, MEMORY[0x1E0C95788]);
  v35 = v47;
  sub_1A93F7CE0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v35);
  v36 = (void *)sub_1A9150B30();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v48);
  v50 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A90B8);
  sub_1A9066D74(&qword_1ED2A90B0, &qword_1ED2A90B8, MEMORY[0x1E0C95D90]);
  v37 = sub_1A93F7B24();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v37;
}

uint64_t NSUserDefaults.queryPublisher<A>(_:)(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  _BYTE *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(void);
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v44[16];
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(void);
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v57 = a4;
  v59 = a1;
  v60 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1A93F8988();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30];
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = &v44[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4058);
  v58 = *(_QWORD *)(v13 - 8);
  v50 = v13;
  MEMORY[0x1E0C80A78](v13);
  v45 = &v44[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v52 = sub_1A9066D74(&qword_1ED2A4050, &qword_1ED2A4058, MEMORY[0x1E0C95CB8]);
  v15 = sub_1A93F77DC();
  v61 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v48 = &v44[-v16];
  v17 = (void *)sub_1A93F83D0();
  v18 = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v17);
  v62 = v17;
  v63 = MEMORY[0x1E0DEDCE8];
  v64 = v18;
  v65 = MEMORY[0x1E0DEDD18];
  v19 = (void *)sub_1A93F786C();
  v20 = MEMORY[0x1AF414014](MEMORY[0x1E0C95C10], v19);
  v54 = v15;
  v53 = MEMORY[0x1AF414014](MEMORY[0x1E0C95950], v15);
  v62 = v19;
  v63 = v15;
  v64 = v20;
  v65 = v53;
  v21 = sub_1A93F774C();
  v56 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x1E0C80A78](v21);
  v47 = &v44[-v23];
  v49 = MEMORY[0x1AF414014](MEMORY[0x1E0C95788], v21, v22);
  v51 = sub_1A93F77B8();
  v55 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v46 = &v44[-v24];
  v25 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1A93F8994();

  sub_1A9066C6C();
  v62 = (id)sub_1A93F8868();
  v26 = sub_1A93F882C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v7, 1, 1, v26);
  sub_1A9066CA8((unint64_t *)&qword_1ED2A41D8, v9, MEMORY[0x1E0CB1F20]);
  sub_1A9066CA8((unint64_t *)&qword_1ED2A1C90, (uint64_t (*)(uint64_t))sub_1A9066C6C, MEMORY[0x1E0DEF7F8]);
  v27 = v45;
  sub_1A93F7C80();
  sub_1A90C0C1C((uint64_t)v7);

  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v8);
  v28 = (_QWORD *)swift_allocObject();
  v29 = v57;
  v28[2] = a3;
  v28[3] = v29;
  v31 = v59;
  v30 = v60;
  v28[4] = v59;
  v28[5] = v30;
  swift_retain();
  v32 = v48;
  v33 = v50;
  sub_1A93F7B84();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v58 + 8))(v27, v33);
  sub_1A9245620(a3, a3);
  swift_allocObject();
  v34 = sub_1A93F8334();
  v31();
  sub_1A905318C(v34);
  v35 = v47;
  v36 = v54;
  sub_1A93F7C68();
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v32, v36);
  v37 = v46;
  sub_1A93F7CE0();
  (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v35, v21);
  v38 = v51;
  v39 = MEMORY[0x1AF414014](MEMORY[0x1E0C958E0], v51);
  v40 = (void *)Publisher.bufferedMulticast()(v38, v39);
  (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v37, v38);
  v62 = v40;
  v41 = sub_1A93F78FC();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95D90], v41);
  v42 = sub_1A93F7B24();
  swift_release();
  return v42;
}

uint64_t NSUserDefaults.codablePublisher<A>(forKey:decoding:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v29 = a1;
  v30 = a7;
  v28 = a5;
  v12 = sub_1A93F8A90();
  v13 = sub_1A93F78FC();
  v31 = MEMORY[0x1AF414014](MEMORY[0x1E0C95D90], v13);
  v14 = sub_1A93F7734();
  v32 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v27 - v15;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a4;
  v17[3] = a5;
  v18 = v29;
  v19 = v30;
  v17[4] = a6;
  v17[5] = v19;
  v17[6] = v7;
  v17[7] = v18;
  v17[8] = a2;
  v34 = v19;
  v20 = v7;
  swift_bridgeObjectRetain();
  v21 = MEMORY[0x1AF414014](MEMORY[0x1E0DEE998], v12, &v34);
  v22 = NSUserDefaults.queryPublisher<A>(_:)((void (*)(void))sub_1A939D5CC, (uint64_t)v17, v12, v21);
  swift_release();
  v33 = v22;
  v23 = (_QWORD *)swift_allocObject();
  v24 = v28;
  v23[2] = a4;
  v23[3] = v24;
  v23[4] = a6;
  v23[5] = v19;
  sub_1A93F7B30();
  swift_release();
  swift_release();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95708], v14);
  v25 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v14);
  return v25;
}

void sub_1A939CE30(_BYTE *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  void *v4;

  v3 = *(void **)(v1 + 16);
  v4 = (void *)sub_1A93F8010();
  LOBYTE(v3) = objc_msgSend(v3, sel_BOOLForKey_, v4);

  *a1 = (_BYTE)v3;
}

uint64_t NSUserDefaults.stringPublisher(forKey:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;

  v43[1] = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F8988();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30];
  v44 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4058);
  v13 = *(_QWORD *)(v12 - 8);
  v45 = v12;
  v46 = v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF358);
  v49 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v43[0] = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF360);
  v53 = *(_QWORD *)(v17 - 8);
  v54 = v17;
  MEMORY[0x1E0C80A78](v17);
  v50 = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8378);
  v48 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v47 = (char *)v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v2;
  v20[3] = a1;
  v20[4] = a2;
  v21 = (void *)objc_opt_self();
  v22 = v2;
  swift_bridgeObjectRetain_n();
  v23 = v22;
  v24 = objc_msgSend(v21, sel_defaultCenter);
  sub_1A93F8994();

  sub_1A9066C6C();
  v55 = (id)sub_1A93F8868();
  v25 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v7, 1, 1, v25);
  sub_1A9066CA8((unint64_t *)&qword_1ED2A41D8, v9, MEMORY[0x1E0CB1F20]);
  sub_1A9066CA8((unint64_t *)&qword_1ED2A1C90, (uint64_t (*)(uint64_t))sub_1A9066C6C, MEMORY[0x1E0DEF7F8]);
  sub_1A93F7C80();
  sub_1A90C0C1C((uint64_t)v7);

  v26 = v11;
  v27 = v43[0];
  (*(void (**)(char *, uint64_t))(v44 + 8))(v26, v8);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_1A939D614;
  *(_QWORD *)(v28 + 24) = v20;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
  sub_1A9066D74(&qword_1ED2A4050, &qword_1ED2A4058, MEMORY[0x1E0C95CB8]);
  v29 = v45;
  sub_1A93F7B84();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9728);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1A9405520;
  v31 = (void *)sub_1A93F8010();
  v32 = objc_msgSend(v23, sel_stringForKey_, v31);

  if (v32)
  {
    v33 = sub_1A93F8040();
    v35 = v34;

  }
  else
  {
    v33 = 0;
    v35 = 0;
  }
  *(_QWORD *)(v30 + 32) = v33;
  *(_QWORD *)(v30 + 40) = v35;
  sub_1A9066D74(&qword_1EEABF368, &qword_1EEABF358, MEMORY[0x1E0C95950]);
  v36 = v50;
  v37 = v52;
  sub_1A93F7C68();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v27, v37);
  sub_1A9066D74(&qword_1EEABF370, &qword_1EEABF360, MEMORY[0x1E0C95788]);
  sub_1A939D658();
  v38 = v47;
  v39 = v54;
  sub_1A93F7CE0();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v36, v39);
  v40 = (void *)sub_1A91510B4();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v51);
  v55 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9058);
  sub_1A9066D74(&qword_1ED2A9050, &qword_1ED2A9058, MEMORY[0x1E0C95D90]);
  v41 = sub_1A93F7B24();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v41;
}

void sub_1A939D3EC(void *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (void *)sub_1A93F8010();
  v5 = objc_msgSend(a1, sel_stringForKey_, v4);

  if (v5)
  {
    v6 = sub_1A93F8040();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
}

uint64_t sub_1A939D470()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1A939D494@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v4);
  *a1 = v4;
  return result;
}

void sub_1A939D4D0(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)(v1 + 16);
  v4 = (void *)sub_1A93F8010();
  v5 = objc_msgSend(v3, sel_integerForKey_, v4);

  *a1 = v5;
}

_QWORD *sub_1A939D524@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v4);
  *a1 = v4;
  return result;
}

uint64_t sub_1A939D55C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A939D580()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1A939D5A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A939D5CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return NSUserDefaults.codable<A>(_:for:)(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1A939D600()
{
  return swift_deallocObject();
}

void sub_1A939D614(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1A939D3EC(*(void **)(v1 + 16), a1);
}

double sub_1A939D620@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;

  (*(void (**)(__int128 *__return_ptr))(v1 + 16))(&v4);
  result = *(double *)&v4;
  *a1 = v4;
  return result;
}

unint64_t sub_1A939D658()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEABF378;
  if (!qword_1EEABF378)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A92E0);
    v2 = MEMORY[0x1E0DEA990];
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEE998], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEABF378);
  }
  return result;
}

uint64_t sub_1A939D6C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_OWORD *, uint64_t, uint64_t);
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[9];
  _OWORD v47[2];
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _BYTE v57[26];
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;

  v2 = v1;
  v31 = *(_QWORD *)(v1 + 8);
  v32 = *(_QWORD *)v1;
  v29 = *(_QWORD *)(v1 + 24);
  v30 = *(_QWORD *)(v1 + 16);
  v28 = *(_BYTE *)(v1 + 32);
  v26 = *(_QWORD *)(v1 + 48);
  v39 = *(_QWORD *)(v1 + 72);
  v40 = *(_QWORD *)(v1 + 64);
  v38 = *(_QWORD *)(v1 + 80);
  v44 = *(_QWORD *)(v1 + 96);
  v45 = *(_QWORD *)(v1 + 88);
  v36 = *(void **)(v1 + 40);
  v37 = *(_QWORD *)(v1 + 112);
  v42 = *(_QWORD *)(v1 + 120);
  v43 = *(_QWORD *)(v1 + 104);
  v34 = *(_QWORD *)(v1 + 56);
  v35 = *(_QWORD *)(v1 + 128);
  v33 = *(_QWORD *)(v1 + 136);
  v41 = *(unsigned __int16 *)(v1 + 144) | (*(unsigned __int8 *)(v1 + 146) << 16);
  v25 = *(_QWORD *)(v1 + 160);
  v4 = *(unsigned __int8 *)(v1 + 168);
  v23 = *(_BYTE *)(v1 + 169);
  if (*(_BYTE *)(v1 + 168) && (_DWORD)v4 != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v5 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  v6 = v4;
  if ((v5 & 1) != 0)
  {
LABEL_6:
    v8 = a1[3];
    v7 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v8);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v4, v8, v7);
  }
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v10 + 8))(&v48, v6, v9, v10);
  if (*((_QWORD *)&v49 + 1))
  {
    v11 = (_DWORD *)(v2 + 33);
    v12 = (_QWORD *)(v2 + 147);
    sub_1A905D4AC(&v48, (uint64_t)v58);
    while (1)
    {
      v13 = v59;
      v14 = v60;
      __swift_project_boxed_opaque_existential_1(v58, v59);
      *(_QWORD *)&v48 = v32;
      *((_QWORD *)&v48 + 1) = v31;
      *(_QWORD *)&v49 = v30;
      *((_QWORD *)&v49 + 1) = v29;
      LOBYTE(v50) = v28;
      *(_DWORD *)((char *)&v50 + 1) = *v11;
      DWORD1(v50) = *(_DWORD *)((char *)v11 + 3);
      *((_QWORD *)&v50 + 1) = v36;
      *(_QWORD *)&v51 = v26;
      *((_QWORD *)&v51 + 1) = v34;
      *(_QWORD *)&v52 = v40;
      *((_QWORD *)&v52 + 1) = v39;
      *(_QWORD *)&v53 = v38;
      *((_QWORD *)&v53 + 1) = v45;
      *(_QWORD *)&v54 = v44;
      *((_QWORD *)&v54 + 1) = v43;
      *(_QWORD *)&v55 = v37;
      *((_QWORD *)&v55 + 1) = v42;
      *(_QWORD *)&v56 = v35;
      *((_QWORD *)&v56 + 1) = v33;
      v57[2] = BYTE2(v41);
      *(_WORD *)v57 = v41;
      *(_QWORD *)&v57[3] = *v12;
      *(_QWORD *)&v57[8] = *(_QWORD *)((char *)v12 + 5);
      *(_QWORD *)&v57[16] = v25;
      v57[24] = v4;
      v57[25] = v23;
      LOBYTE(v13) = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v14 + 16))(&v48, v13, v14);
      sub_1A92919D8((uint64_t)a1, (uint64_t)&v48);
      if ((v13 & 1) != 0)
        break;
      v15 = *((_QWORD *)&v49 + 1);
      v16 = v50;
      __swift_project_boxed_opaque_existential_1(&v48, *((uint64_t *)&v49 + 1));
      LOBYTE(v15) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 24))(v6, v15, v16);
      sub_1A9226824((uint64_t)&v48);
      if ((v15 & 1) != 0)
        goto LABEL_14;
      v17 = a1[3];
      v18 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v17);
      v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v6, v17, v18);
    }
    sub_1A9226824((uint64_t)&v48);
LABEL_14:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  }
  else
  {
    sub_1A939E554((uint64_t)&v48);
  }
  v24 = a1[10];
  v22 = a1[11];
  __swift_project_boxed_opaque_existential_1(a1 + 7, v24);
  v19 = a1[5];
  *(_QWORD *)&v48 = v32;
  *((_QWORD *)&v48 + 1) = v31;
  *(_QWORD *)&v49 = v30;
  *((_QWORD *)&v49 + 1) = v29;
  LOBYTE(v50) = v28;
  *((_QWORD *)&v50 + 1) = v36;
  *(_QWORD *)&v51 = v26;
  *((_QWORD *)&v51 + 1) = v34;
  *(_QWORD *)&v52 = v40;
  *((_QWORD *)&v52 + 1) = v39;
  *(_QWORD *)&v53 = v38;
  *((_QWORD *)&v53 + 1) = v45;
  *(_QWORD *)&v54 = v44;
  *((_QWORD *)&v54 + 1) = v43;
  *(_QWORD *)&v55 = v37;
  *((_QWORD *)&v55 + 1) = v42;
  *(_QWORD *)&v56 = v35;
  *((_QWORD *)&v56 + 1) = v33;
  v57[2] = BYTE2(v41);
  *(_WORD *)v57 = v41;
  *(_QWORD *)&v57[8] = v19;
  *(_QWORD *)&v57[16] = v25;
  v57[24] = v6;
  v57[25] = 0;
  v46[8] = v56;
  v47[0] = *(_OWORD *)v57;
  *(_OWORD *)((char *)v47 + 10) = *(_OWORD *)&v57[10];
  v46[4] = v52;
  v46[5] = v53;
  v46[6] = v54;
  v46[7] = v55;
  v46[2] = v50;
  v46[3] = v51;
  v46[0] = v48;
  v46[1] = v49;
  v27 = *(void (**)(_OWORD *, uint64_t, uint64_t))(v22 + 8);
  sub_1A912C880(v32, v31, v30, v29, v28);
  swift_bridgeObjectRetain();
  v20 = v36;
  sub_1A912C8E4(v40, v39, v38, v45, v44, v43, v37, v42, v35, v33, v41);
  v27(v46, v24, v22);
  return sub_1A912D5B8((uint64_t)&v48);
}

uint64_t sub_1A939DB70(uint64_t a1)
{
  __int128 *v1;
  char v3;
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  __int128 v16;
  __int128 v17;
  _OWORD v18[2];
  char v19;

  v3 = 0;
  if (*((_QWORD *)v1 + 19) == *(_QWORD *)(a1 + 152) && *((_QWORD *)v1 + 20) == *(_QWORD *)(a1 + 160))
  {
    v4 = *(unsigned __int8 *)(a1 + 168);
    v16 = v1[1];
    v17 = *v1;
    v5 = *((_BYTE *)v1 + 32);
    v6 = 0x62694C6C61636F6CLL;
    v7 = 0xEC00000079726172;
    if (*((_BYTE *)v1 + 168) != 1)
    {
      v6 = 0x7265666E69;
      v7 = 0xE500000000000000;
    }
    if (*((_BYTE *)v1 + 168))
      v8 = v6;
    else
      v8 = 0x495041616964656DLL;
    if (*((_BYTE *)v1 + 168))
      v9 = v7;
    else
      v9 = 0xE800000000000000;
    v10 = 0x62694C6C61636F6CLL;
    v11 = 0xEC00000079726172;
    if (v4 != 1)
    {
      v10 = 0x7265666E69;
      v11 = 0xE500000000000000;
    }
    if (v4)
      v12 = v10;
    else
      v12 = 0x495041616964656DLL;
    if (v4)
      v13 = v11;
    else
      v13 = 0xE800000000000000;
    if (v8 == v12 && v9 == v13)
    {
      swift_bridgeObjectRelease_n();
LABEL_23:
      v18[0] = v17;
      v18[1] = v16;
      v19 = v5;
      _s18PodcastsFoundation15MediaIdentifierO2eeoiySbAC_ACtFZ_0((uint64_t)v18);
      return v3 & 1;
    }
    v14 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = 0;
    if ((v14 & 1) != 0)
      goto LABEL_23;
  }
  return v3 & 1;
}

uint64_t PodcastsMediaLibrary.Request.mediaIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 32) = v6;
  return sub_1A912C880(v2, v3, v4, v5, v6);
}

void *PodcastsMediaLibrary.Request.account.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 40);
  v2 = v1;
  return v1;
}

uint64_t PodcastsMediaLibrary.Request.sidepack.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.Request.listSettings.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int16 v13;

  v2 = *(_QWORD *)(v1 + 64);
  v3 = *(_QWORD *)(v1 + 72);
  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v1 + 88);
  v6 = *(_QWORD *)(v1 + 96);
  v7 = *(_QWORD *)(v1 + 104);
  v8 = *(_QWORD *)(v1 + 112);
  v9 = *(_QWORD *)(v1 + 120);
  v10 = *(_QWORD *)(v1 + 128);
  v11 = *(_QWORD *)(v1 + 136);
  v12 = *(_BYTE *)(v1 + 146);
  v13 = *(_WORD *)(v1 + 144);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 82) = v12;
  *(_WORD *)(a1 + 80) = v13;
  return sub_1A912C8E4(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v13);
}

uint64_t _s7RequestVwxx(uint64_t a1)
{
  uint64_t result;

  sub_1A912C6B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));

  result = swift_bridgeObjectRelease();
  if (*(_BYTE *)(a1 + 144) != 2)
    return sub_1A90531EC(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  return result;
}

uint64_t _s7RequestVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  void *v9;
  uint64_t v10;
  int v11;
  id v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_1A912C880(*(_QWORD *)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  v9 = *(void **)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v11 = *(unsigned __int16 *)(a2 + 144) | (*(unsigned __int8 *)(a2 + 146) << 16);
  LODWORD(v6) = *(_WORD *)(a2 + 144);
  v12 = v9;
  swift_bridgeObjectRetain();
  if ((_DWORD)v6 == 2)
  {
    v13 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v13;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_DWORD *)(a1 + 143) = *(_DWORD *)(a2 + 143);
    v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
  }
  else
  {
    v15 = *(_QWORD *)(a2 + 64);
    v23 = *(_QWORD *)(a2 + 72);
    v16 = *(_QWORD *)(a2 + 80);
    v17 = *(_QWORD *)(a2 + 88);
    v18 = *(_QWORD *)(a2 + 96);
    v19 = *(_QWORD *)(a2 + 104);
    v20 = *(_QWORD *)(a2 + 112);
    v21 = *(_QWORD *)(a2 + 120);
    v24 = *(_BYTE *)(a2 + 128);
    sub_1A90519B4(v15, v23, v16, v17, v18, v19, v20, v21, v24);
    *(_QWORD *)(a1 + 64) = v15;
    *(_QWORD *)(a1 + 72) = v23;
    *(_QWORD *)(a1 + 80) = v16;
    *(_QWORD *)(a1 + 88) = v17;
    *(_QWORD *)(a1 + 96) = v18;
    *(_QWORD *)(a1 + 104) = v19;
    *(_QWORD *)(a1 + 112) = v20;
    *(_QWORD *)(a1 + 120) = v21;
    *(_BYTE *)(a1 + 128) = v24;
    *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_WORD *)(a1 + 144) = v11;
    *(_BYTE *)(a1 + 146) = BYTE2(v11);
  }
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
  return a1;
}

uint64_t _s7RequestVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  void *v14;
  void *v15;
  id v16;
  _OWORD *v17;
  _OWORD *v18;
  int v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v54;
  char v55;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_1A912C880(*(_QWORD *)a2, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v13 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  sub_1A912C6B4(v9, v10, v11, v12, v13);
  v14 = *(void **)(a1 + 40);
  v15 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v15;
  v16 = v15;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = (_OWORD *)(a1 + 64);
  v18 = (_OWORD *)(a2 + 64);
  v19 = *(unsigned __int8 *)(a2 + 144);
  if (*(_BYTE *)(a1 + 144) != 2)
  {
    if (v19 == 2)
    {
      sub_1A916DE60(a1 + 64);
      v24 = *(_OWORD *)(a2 + 80);
      *v17 = *v18;
      *(_OWORD *)(a1 + 80) = v24;
      v26 = *(_OWORD *)(a2 + 112);
      v25 = *(_OWORD *)(a2 + 128);
      v27 = *(_OWORD *)(a2 + 96);
      *(_DWORD *)(a1 + 143) = *(_DWORD *)(a2 + 143);
      *(_OWORD *)(a1 + 112) = v26;
      *(_OWORD *)(a1 + 128) = v25;
      *(_OWORD *)(a1 + 96) = v27;
      goto LABEL_9;
    }
    v36 = *(_QWORD *)(a2 + 64);
    v37 = *(_QWORD *)(a2 + 72);
    v38 = *(_QWORD *)(a2 + 80);
    v39 = *(_QWORD *)(a2 + 88);
    v40 = *(_QWORD *)(a2 + 96);
    v41 = *(_QWORD *)(a2 + 104);
    v42 = *(_QWORD *)(a2 + 112);
    v43 = *(_QWORD *)(a2 + 120);
    v55 = *(_BYTE *)(a2 + 128);
    sub_1A90519B4(v36, v37, v38, v39, v40, v41, v42, v43, v55);
    v44 = *(_QWORD *)(a1 + 64);
    v45 = *(_QWORD *)(a1 + 72);
    v46 = *(_QWORD *)(a1 + 80);
    v47 = *(_QWORD *)(a1 + 88);
    v48 = *(_QWORD *)(a1 + 96);
    v49 = *(_QWORD *)(a1 + 104);
    v50 = *(_QWORD *)(a1 + 112);
    v51 = *(_QWORD *)(a1 + 120);
    v52 = *(_BYTE *)(a1 + 128);
    *(_QWORD *)(a1 + 64) = v36;
    *(_QWORD *)(a1 + 72) = v37;
    *(_QWORD *)(a1 + 80) = v38;
    *(_QWORD *)(a1 + 88) = v39;
    *(_QWORD *)(a1 + 96) = v40;
    *(_QWORD *)(a1 + 104) = v41;
    *(_QWORD *)(a1 + 112) = v42;
    *(_QWORD *)(a1 + 120) = v43;
    *(_BYTE *)(a1 + 128) = v55;
    sub_1A90531EC(v44, v45, v46, v47, v48, v49, v50, v51, v52);
LABEL_8:
    *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_BYTE *)(a1 + 145) = *(_BYTE *)(a2 + 145);
    *(_BYTE *)(a1 + 146) = *(_BYTE *)(a2 + 146);
    goto LABEL_9;
  }
  if (v19 != 2)
  {
    v28 = *(_QWORD *)(a2 + 64);
    v29 = *(_QWORD *)(a2 + 72);
    v30 = *(_QWORD *)(a2 + 80);
    v31 = *(_QWORD *)(a2 + 88);
    v32 = *(_QWORD *)(a2 + 96);
    v33 = *(_QWORD *)(a2 + 104);
    v34 = *(_QWORD *)(a2 + 112);
    v35 = *(_QWORD *)(a2 + 120);
    v54 = *(_BYTE *)(a2 + 128);
    sub_1A90519B4(v28, v29, v30, v31, v32, v33, v34, v35, v54);
    *(_QWORD *)(a1 + 64) = v28;
    *(_QWORD *)(a1 + 72) = v29;
    *(_QWORD *)(a1 + 80) = v30;
    *(_QWORD *)(a1 + 88) = v31;
    *(_QWORD *)(a1 + 96) = v32;
    *(_QWORD *)(a1 + 104) = v33;
    *(_QWORD *)(a1 + 112) = v34;
    *(_QWORD *)(a1 + 120) = v35;
    *(_BYTE *)(a1 + 128) = v54;
    goto LABEL_8;
  }
  v20 = *(_OWORD *)(a2 + 80);
  *v17 = *v18;
  *(_OWORD *)(a1 + 80) = v20;
  v21 = *(_OWORD *)(a2 + 96);
  v22 = *(_OWORD *)(a2 + 112);
  v23 = *(_OWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 143) = *(_DWORD *)(a2 + 143);
  *(_OWORD *)(a1 + 112) = v22;
  *(_OWORD *)(a1 + 128) = v23;
  *(_OWORD *)(a1 + 96) = v21;
LABEL_9:
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
  return a1;
}

uint64_t _s7RequestVwta(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  unsigned __int8 v10;
  void *v11;
  uint64_t v12;
  int v13;
  int v14;
  __int128 v15;
  __int128 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v27;
  __int128 v28;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_1A912C6B4(v5, v6, v7, v8, v10);
  v11 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v12 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v12;
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(a1 + 144) != 2)
  {
    v13 = *(unsigned __int16 *)(a2 + 144);
    v14 = v13 | (*(unsigned __int8 *)(a2 + 146) << 16);
    if (v13 != 2)
    {
      v17 = *(_BYTE *)(a2 + 128);
      v18 = *(_QWORD *)(a1 + 64);
      v19 = *(_QWORD *)(a1 + 72);
      v20 = *(_QWORD *)(a1 + 80);
      v21 = *(_QWORD *)(a1 + 88);
      v22 = *(_QWORD *)(a1 + 96);
      v23 = *(_QWORD *)(a1 + 104);
      v24 = *(_QWORD *)(a1 + 112);
      v25 = *(_QWORD *)(a1 + 120);
      v26 = *(_BYTE *)(a1 + 128);
      v27 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v27;
      v28 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v28;
      *(_BYTE *)(a1 + 128) = v17;
      sub_1A90531EC(v18, v19, v20, v21, v22, v23, v24, v25, v26);
      *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_BYTE *)(a1 + 144) = v14 & 1;
      *(_BYTE *)(a1 + 145) = BYTE1(v14) & 1;
      *(_BYTE *)(a1 + 146) = BYTE2(v14) & 1;
      goto LABEL_6;
    }
    sub_1A916DE60(a1 + 64);
  }
  v15 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v15;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 143) = *(_DWORD *)(a2 + 143);
  v16 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v16;
LABEL_6:
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
  return a1;
}

uint64_t _s7RequestVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 170))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s7RequestVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 168) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 170) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 170) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

uint64_t _s7RequestV9SortOrderOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A939E48C + 4 * byte_1A9422C37[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A939E4C0 + 4 * byte_1A9422C32[v4]))();
}

uint64_t sub_1A939E4C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A939E4C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A939E4D0);
  return result;
}

uint64_t sub_1A939E4DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A939E4E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A939E4E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A939E4F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7RequestV9SortOrderOMa()
{
  return &_s7RequestV9SortOrderON;
}

unint64_t sub_1A939E510()
{
  unint64_t result;

  result = qword_1EEABF380;
  if (!qword_1EEABF380)
  {
    result = MEMORY[0x1AF414014](&unk_1A9422CA0, &_s7RequestV9SortOrderON);
    atomic_store(result, (unint64_t *)&qword_1EEABF380);
  }
  return result;
}

uint64_t sub_1A939E554(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABB130);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MTSubscriptionSyncType.description.getter(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;

  v1 = 0xD00000000000001DLL;
  v2 = 0xD00000000000001DLL;
  if (a1 == 1)
    v2 = 13174;
  if (a1 != 2)
    v1 = v2;
  if (a1)
    return v1;
  else
    return 12662;
}

uint64_t sub_1A939E5EC()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *v0;
  v2 = 0xD00000000000001DLL;
  v3 = 0xD00000000000001DLL;
  if (*v0 == 1)
    v3 = 13174;
  if (v1 != 2)
    v2 = v3;
  if (v1)
    return v2;
  else
    return 12662;
}

uint64_t sub_1A939E69C()
{
  void *v0;
  char v1;

  v1 = sub_1A93F90C0();

  swift_bridgeObjectRelease();
  return v1 & 1;
}

void ServerPodcastEpisode.priceTypeIsPSUB.getter(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  char v1;

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v1);
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_1A939E738()
{
  char v0;

  v0 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

id static MTEpisode.predicate<A>(forEpisodeStoreTrackIdStrings:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *ObjCClassFromMetadata;
  void *v6;
  id v7;
  unint64_t v9;

  v0 = sub_1A93F81D8();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1A93F8D84();
    v2 = 0;
    do
    {
      v3 = v2 + 1;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, *(_QWORD *)(v0 + 8 * v2 + 32));
      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
      v2 = v3;
    }
    while (v1 != v3);
    v4 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x1E0DEE9D8];
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1A9159A30(v4);
  swift_bridgeObjectRelease();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
  sub_1A90C0B34((unint64_t *)&qword_1ED2A9590, (unint64_t *)&qword_1ED2A4230, 0x1E0CB37E8, MEMORY[0x1E0DEFCF8]);
  v6 = (void *)sub_1A93F85EC();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForEpisodeStoreTrackIds_, v6);

  return v7;
}

id static MTEpisode.predicateForEpisodesWhichShouldBeFeedDeleted(showUUID:forBootstrapGeneration:)()
{
  void *ObjCClassFromMetadata;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v1 = (void *)sub_1A93F8010();
  v2 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForAllEpisodesOnPodcastUuid_, v1);

  v3 = (void *)_sSo9MTEpisodeC18PodcastsFoundationE31predicateForEpisodesNotMatching19bootstrapGenerationSo11NSPredicateC0C04UUIDV_tFZ_0();
  v4 = objc_msgSend(v2, sel_AND_, v3);

  v5 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForFeedDeleted_, 0);
  v6 = objc_msgSend(v4, sel_AND_, v5);

  return v6;
}

id static MTEpisode.predicateForPurgeableEpisodes(globalRetentionPolicy:evaluationDate:calendar:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *EpisodeSo11NSPredicateCyFZ_0;
  id v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = sub_1A93F747C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F738C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v3 + 104))(v5, *MEMORY[0x1E0CB1130], v2, v11);
  sub_1A93F7464();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1A90AC3A4((uint64_t)v8);
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v14 = sub_1A93F7698();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A3F08);
    v15 = sub_1A93F7674();
    v16 = sub_1A93F879C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1A904E000, v15, v16, "Unable to move the date cursor 45 days back. Purgeability is undefined while this is true, so no episodes will be marked as purgeable", v17, 2u);
      MEMORY[0x1AF41411C](v17, -1, -1);
    }

    return objc_msgSend((id)objc_opt_self(), sel_falsePredicate);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1A940BE60;
    v20 = sub_1A93F8040();
    v22 = v21;
    v44 = a1;
    v23 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
    v24 = sub_1A90A92DC();
    *(_QWORD *)(v19 + 64) = v24;
    *(_QWORD *)(v19 + 32) = v20;
    *(_QWORD *)(v19 + 40) = v22;
    v25 = sub_1A93F8040();
    *(_QWORD *)(v19 + 96) = v23;
    *(_QWORD *)(v19 + 104) = v24;
    *(_QWORD *)(v19 + 72) = v25;
    *(_QWORD *)(v19 + 80) = v26;
    v27 = sub_1A93F8040();
    *(_QWORD *)(v19 + 136) = v23;
    *(_QWORD *)(v19 + 144) = v24;
    *(_QWORD *)(v19 + 112) = v27;
    *(_QWORD *)(v19 + 120) = v28;
    v29 = sub_1A93F8040();
    *(_QWORD *)(v19 + 176) = v23;
    *(_QWORD *)(v19 + 184) = v24;
    *(_QWORD *)(v19 + 152) = v29;
    *(_QWORD *)(v19 + 160) = v30;
    v31 = v13;
    v32 = sub_1A93F7314();
    *(_QWORD *)(v19 + 216) = sub_1A9072534(0, &qword_1ED2ABD08);
    *(_QWORD *)(v19 + 224) = sub_1A90C0B34(&qword_1ED2ABD10, &qword_1ED2ABD08, 0x1E0C99D68, MEMORY[0x1E0DEFD08]);
    *(_QWORD *)(v19 + 192) = v32;
    v33 = (void *)sub_1A93F8754();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1A9422D00;
    *(_QWORD *)(v34 + 32) = _sSo9MTEpisodeC18PodcastsFoundationE43predicateForAutomaticallyDownloadedEpisodesSo11NSPredicateCyFZ_0();
    *(_QWORD *)(v34 + 40) = _sSo9MTEpisodeC18PodcastsFoundationE24predicateForStoreEpisodeSo11NSPredicateCyFZ_0();
    *(_QWORD *)(v34 + 48) = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_predicateForSaved_, 0);
    *(_QWORD *)(v34 + 56) = sub_1A939FEC8(v44);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1A940EB90;
    *(_QWORD *)(v35 + 32) = objc_msgSend(v33, "NOT");
    EpisodeSo11NSPredicateCyFZ_0 = (void *)_sSo9MTEpisodeC18PodcastsFoundationE25predicateForUpNextEpisodeSo11NSPredicateCyFZ_0();
    v37 = objc_msgSend(EpisodeSo11NSPredicateCyFZ_0, "NOT");

    *(_QWORD *)(v35 + 40) = v37;
    v45 = v35;
    sub_1A93F8328();
    v38 = (void *)sub_1A93F82F8();
    swift_bridgeObjectRelease();
    v39 = (void *)objc_opt_self();
    v40 = objc_msgSend(v39, sel_orPredicateWithSubpredicates_, v38);

    *(_QWORD *)(v34 + 64) = v40;
    v45 = v34;
    sub_1A93F8328();
    v41 = (void *)sub_1A93F82F8();
    swift_bridgeObjectRelease();
    v42 = objc_msgSend(v39, sel_andPredicateWithSubpredicates_, v41);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v31, v9);
    return v42;
  }
}

id static MTEpisode.predicateForShowDetailEpisodes(showUUID:hidePlayedEpisodes:seasonToShow:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v8 = (void *)objc_opt_self();
  v9 = (void *)sub_1A93F8010();
  v10 = objc_msgSend(v8, sel_predicateForAllEpisodesOnPodcastUuid_, v9);

  v11 = v10;
  v12 = objc_msgSend(v8, sel_predicateForEpisodeTypeFilter_, 5);
  v13 = objc_msgSend(v11, sel_AND_, v12);

  if ((a3 & 1) != 0)
  {
    v14 = v13;
    v15 = objc_msgSend(v8, sel_predicateForVisuallyPlayed_, 0);
    v13 = objc_msgSend(v14, sel_AND_, v15);

  }
  if ((a5 & 1) != 0)
    return v13;
  v16 = objc_msgSend(v8, sel_predicateForSeasonNumber_, a4);
  v17 = objc_msgSend(v13, sel_AND_, v16);

  return v17;
}

uint64_t *sub_1A939F0E8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unsigned __int8 *v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  _QWORD v26[2];

  v3 = *result;
  v4 = result[1];
  v5 = HIBYTE(v4) & 0xF;
  v6 = *result & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0)
    v7 = HIBYTE(v4) & 0xF;
  else
    v7 = *result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    v21 = 1;
LABEL_47:
    *(_QWORD *)a2 = v7;
    *(_BYTE *)(a2 + 8) = v21 & 1;
    return result;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1A92DA254(v3, v4, 10);
    v11 = v25;
    result = (uint64_t *)swift_bridgeObjectRelease();
LABEL_44:
    v21 = v11 & 1;
    if ((v11 & 1) != 0)
      v7 = 0;
    else
      v7 = v9;
    goto LABEL_47;
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((v3 & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_1A93F8D48();
    result = (uint64_t *)sub_1A92DA234(v8, v6, 10);
    v9 = (uint64_t)result;
    v11 = v10 & 1;
    goto LABEL_44;
  }
  v26[0] = *result;
  v26[1] = v4 & 0xFFFFFFFFFFFFFFLL;
  if (v3 == 43)
  {
    if (!v5)
      goto LABEL_58;
    if (v5 == 1 || (BYTE1(v3) - 48) > 9u)
      goto LABEL_31;
    v9 = (BYTE1(v3) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(v3) - 48) > 9u)
        goto LABEL_31;
      v9 = 10 * (BYTE1(v3) - 48) + (BYTE2(v3) - 48);
      v12 = v5 - 3;
      if (v12)
      {
        v13 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          v14 = *v13 - 48;
          if (v14 > 9)
            goto LABEL_31;
          v15 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            goto LABEL_31;
          v9 = v15 + v14;
          if (__OFADD__(v15, v14))
            goto LABEL_31;
          v11 = 0;
          ++v13;
          if (!--v12)
            goto LABEL_44;
        }
      }
    }
LABEL_43:
    v11 = 0;
    goto LABEL_44;
  }
  if (v3 != 45)
  {
    if (!v5 || (v3 - 48) > 9u)
      goto LABEL_31;
    v9 = (v3 - 48);
    if (v5 != 1)
    {
      if ((BYTE1(v3) - 48) > 9u)
        goto LABEL_31;
      v9 = 10 * (v3 - 48) + (BYTE1(v3) - 48);
      v16 = v5 - 2;
      if (v16)
      {
        v17 = (unsigned __int8 *)v26 + 2;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            goto LABEL_31;
          v19 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            goto LABEL_31;
          v9 = v19 + v18;
          if (__OFADD__(v19, v18))
            goto LABEL_31;
          v11 = 0;
          ++v17;
          if (!--v16)
            goto LABEL_44;
        }
      }
    }
    goto LABEL_43;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(v3) - 48) <= 9u)
    {
      if (v5 == 2)
      {
        v11 = 0;
        v9 = -(uint64_t)(BYTE1(v3) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(v3) - 48) <= 9u)
      {
        v9 = -10 * (BYTE1(v3) - 48) - (BYTE2(v3) - 48);
        v20 = v5 - 3;
        if (!v20)
          goto LABEL_43;
        v22 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          v23 = *v22 - 48;
          if (v23 > 9)
            break;
          v24 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            break;
          v9 = v24 - v23;
          if (__OFSUB__(v24, v23))
            break;
          v11 = 0;
          ++v22;
          if (!--v20)
            goto LABEL_44;
        }
      }
    }
LABEL_31:
    v9 = 0;
    v11 = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

uint64_t static MTEpisode.predicateForAllEpisodes(forPodcast:)(void *a1, uint64_t a2, char a3)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;

  if (a3)
  {
    if (a3 == 1)
    {
      v4 = (void *)objc_opt_self();
      v5 = (void *)sub_1A93F8010();
      v6 = objc_msgSend(v4, sel_predicateForAllEpisodesOnPodcastUuid_, v5);

      return (uint64_t)v6;
    }
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1A9405950;
    v18 = sub_1A93F8040();
    v20 = v19;
    *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v17 + 64) = sub_1A90A92DC();
    *(_QWORD *)(v17 + 32) = v18;
    *(_QWORD *)(v17 + 40) = v20;
    *(_QWORD *)(v17 + 96) = sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
    *(_QWORD *)(v17 + 104) = sub_1A90C0B34((unint64_t *)&qword_1EEAB9F48, (unint64_t *)&qword_1ED2A41B8, 0x1E0C97B90, MEMORY[0x1E0DEFD08]);
    *(_QWORD *)(v17 + 72) = a1;
    v21 = a1;
  }
  else
  {
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1A94055A0;
    v9 = sub_1A93F8040();
    v11 = v10;
    v12 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
    v13 = sub_1A90A92DC();
    *(_QWORD *)(v8 + 64) = v13;
    *(_QWORD *)(v8 + 32) = v9;
    *(_QWORD *)(v8 + 40) = v11;
    v14 = sub_1A93F8040();
    *(_QWORD *)(v8 + 96) = v12;
    *(_QWORD *)(v8 + 104) = v13;
    *(_QWORD *)(v8 + 72) = v14;
    *(_QWORD *)(v8 + 80) = v15;
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, a1);
    *(_QWORD *)(v8 + 136) = sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
    *(_QWORD *)(v8 + 144) = sub_1A90C0B34((unint64_t *)&qword_1ED2A4240, (unint64_t *)&qword_1ED2A4230, 0x1E0CB37E8, MEMORY[0x1E0DEFD08]);
    *(_QWORD *)(v8 + 112) = v16;
  }
  return sub_1A93F8754();
}

uint64_t MTEpisodeTypeFilter.encode(to:)(_QWORD *a1)
{
  return sub_1A939F6DC(a1);
}

uint64_t MTEpisodeTypeFilter.init(from:)(_QWORD *a1)
{
  return sub_1A939F780(a1);
}

uint64_t sub_1A939F6A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A939F838(a1, a2);
}

uint64_t sub_1A939F6B4(_QWORD *a1)
{
  return sub_1A939F8F4(a1);
}

uint64_t MTEpisodePubDateLimit.encode(to:)(_QWORD *a1)
{
  return sub_1A939F6DC(a1);
}

uint64_t sub_1A939F6DC(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F915C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t MTEpisodePubDateLimit.init(from:)(_QWORD *a1)
{
  return sub_1A939F780(a1);
}

uint64_t sub_1A939F780(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_1A93F90F0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1A939F838@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  v5 = sub_1A93F90F0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v5;
  return result;
}

uint64_t sub_1A939F8F4(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F915C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t _sSo9MTEpisodeC18PodcastsFoundationE31predicateForEpisodesNotMatching19bootstrapGenerationSo11NSPredicateC0C04UUIDV_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A94055A0;
  v1 = sub_1A93F8040();
  v3 = v2;
  v4 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  v5 = sub_1A90A92DC();
  *(_QWORD *)(v0 + 64) = v5;
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v3;
  v6 = sub_1A93F8040();
  *(_QWORD *)(v0 + 96) = v4;
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 72) = v6;
  *(_QWORD *)(v0 + 80) = v7;
  v8 = sub_1A93F73B0();
  *(_QWORD *)(v0 + 136) = sub_1A9072534(0, &qword_1ED2A9470);
  *(_QWORD *)(v0 + 144) = sub_1A90C0B34(&qword_1ED2A9478, &qword_1ED2A9470, 0x1E0CB3A28, MEMORY[0x1E0DEFD08]);
  *(_QWORD *)(v0 + 112) = v8;
  return sub_1A93F8754();
}

uint64_t _sSo9MTEpisodeC18PodcastsFoundationE23predicateForAllEpisodes10forPodcastSo11NSPredicateCSo9MTPodcastC_tFZ_0(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  v1 = objc_msgSend(a1, sel_objectID);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A9405950;
  v3 = sub_1A93F8040();
  v5 = v4;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1A90A92DC();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v2 + 96) = sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
  *(_QWORD *)(v2 + 104) = sub_1A90C0B34((unint64_t *)&qword_1EEAB9F48, (unint64_t *)&qword_1ED2A41B8, 0x1E0C97B90, MEMORY[0x1E0DEFD08]);
  *(_QWORD *)(v2 + 72) = v1;
  v6 = v1;
  v7 = sub_1A93F8754();

  return v7;
}

id _sSo9MTEpisodeC18PodcastsFoundationE43predicateForAutomaticallyDownloadedEpisodesSo11NSPredicateCyFZ_0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A940EB90;
  v1 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 32) = objc_msgSend(v1, sel_predicateForDownloaded_excludeHidden_, 1, 1);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A940EB90;
  *(_QWORD *)(v2 + 32) = objc_msgSend(v1, sel_predicateForDownloadBehavior_, 0);
  *(_QWORD *)(v2 + 40) = objc_msgSend(v1, sel_predicateForDownloadBehavior_, 1);
  sub_1A93F8328();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  v3 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_orPredicateWithSubpredicates_, v3);

  *(_QWORD *)(v0 + 40) = v5;
  sub_1A93F8328();
  v6 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v4, sel_andPredicateWithSubpredicates_, v6);

  return v7;
}

id _sSo9MTEpisodeC18PodcastsFoundationE24predicateForStoreEpisodeSo11NSPredicateCyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A94055A0;
  v1 = sub_1A93F8040();
  v3 = v2;
  v4 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  v5 = sub_1A90A92DC();
  *(_QWORD *)(v0 + 64) = v5;
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v3;
  v6 = sub_1A93F8040();
  *(_QWORD *)(v0 + 96) = v4;
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 72) = v6;
  *(_QWORD *)(v0 + 80) = v7;
  v8 = MEMORY[0x1E0DEDCD8];
  *(_QWORD *)(v0 + 136) = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(v0 + 144) = v8;
  *(_QWORD *)(v0 + 112) = 1000000000000;
  v9 = (void *)sub_1A93F8754();
  v10 = objc_msgSend((id)objc_opt_self(), sel_notPredicateWithSubpredicate_, v9);

  return v10;
}

id sub_1A939FEC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A940BE60;
  v3 = sub_1A93F8040();
  v5 = v4;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v7 = sub_1A90A92DC();
  *(_QWORD *)(v2 + 64) = v7;
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  v8 = sub_1A93F8040();
  *(_QWORD *)(v2 + 96) = v6;
  *(_QWORD *)(v2 + 104) = v7;
  *(_QWORD *)(v2 + 72) = v8;
  *(_QWORD *)(v2 + 80) = v9;
  v10 = MEMORY[0x1E0DEDC60];
  v11 = MEMORY[0x1E0DEDCD8];
  *(_QWORD *)(v2 + 136) = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(v2 + 144) = v11;
  *(_QWORD *)(v2 + 112) = 0x100000001;
  *(_QWORD *)(v2 + 176) = v10;
  *(_QWORD *)(v2 + 184) = v11;
  *(_QWORD *)(v2 + 152) = a1;
  *(_QWORD *)(v2 + 216) = v10;
  *(_QWORD *)(v2 + 224) = v11;
  *(_QWORD *)(v2 + 192) = 0;
  v12 = (void *)sub_1A93F8754();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1A94055A0;
  v14 = sub_1A93F8040();
  *(_QWORD *)(v13 + 56) = v6;
  *(_QWORD *)(v13 + 64) = v7;
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 40) = v15;
  v16 = sub_1A93F8040();
  *(_QWORD *)(v13 + 96) = v6;
  *(_QWORD *)(v13 + 104) = v7;
  *(_QWORD *)(v13 + 72) = v16;
  *(_QWORD *)(v13 + 80) = v17;
  *(_QWORD *)(v13 + 136) = v10;
  *(_QWORD *)(v13 + 144) = v11;
  *(_QWORD *)(v13 + 112) = 0;
  v18 = (void *)sub_1A93F8754();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1A940EB90;
  *(_QWORD *)(v19 + 32) = v12;
  *(_QWORD *)(v19 + 40) = v18;
  sub_1A93F8328();
  v20 = v12;
  v21 = v18;
  v22 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  v23 = (void *)objc_opt_self();
  v24 = objc_msgSend(v23, sel_orPredicateWithSubpredicates_, v22);

  v25 = objc_msgSend(v23, sel_notPredicateWithSubpredicate_, v24);
  return v25;
}

uint64_t _sSo9MTEpisodeC18PodcastsFoundationE25predicateForUpNextEpisodeSo11NSPredicateCyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A94055A0;
  v1 = sub_1A93F8040();
  v3 = v2;
  v4 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  v5 = sub_1A90A92DC();
  *(_QWORD *)(v0 + 64) = v5;
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v3;
  v6 = sub_1A93F8040();
  *(_QWORD *)(v0 + 96) = v4;
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 72) = v6;
  *(_QWORD *)(v0 + 80) = v7;
  v8 = sub_1A93F8040();
  *(_QWORD *)(v0 + 136) = v4;
  *(_QWORD *)(v0 + 144) = v5;
  *(_QWORD *)(v0 + 112) = v8;
  *(_QWORD *)(v0 + 120) = v9;
  return sub_1A93F8754();
}

uint64_t sub_1A93A0290()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A93A033C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___MTSeasonFeedRequest_seasons);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A93A038C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___MTSeasonFeedRequest_seasons);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A93A03F4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id SeasonFeedRequest.__allocating_init(storeID:seasons:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  _BYTE *v5;
  objc_super v7;

  v5 = objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR___MTSeasonFeedRequest_seasons] = a2;
  *(_QWORD *)&v5[OBJC_IVAR___MTPartialFeedRequest_limit] = 25;
  *(_QWORD *)&v5[OBJC_IVAR___MTPartialFeedRequest_sections] = MEMORY[0x1E0DEE9D8];
  v5[OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for BaseFeedRequest();
  return objc_msgSendSuper2(&v7, sel_init);
}

id SeasonFeedRequest.init(storeID:seasons:)(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR___MTSeasonFeedRequest_seasons] = a2;
  *(_QWORD *)&v2[OBJC_IVAR___MTPartialFeedRequest_limit] = 25;
  *(_QWORD *)&v2[OBJC_IVAR___MTPartialFeedRequest_sections] = MEMORY[0x1E0DEE9D8];
  v2[OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for BaseFeedRequest();
  return objc_msgSendSuper2(&v4, sel_init);
}

int64_t sub_1A93A0644@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t inited;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  int64_t result;
  char v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  __int128 v33;
  int64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37[126];
  char v38;
  char v39;
  char v40;
  __int128 v41[2];
  uint64_t v42;
  char v43;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = 0;
  memset(v41, 0, sizeof(v41));
  v43 = 4;
  v40 = 1;
  v39 = 1;
  v38 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A47B0);
  inited = swift_initStackObject();
  v33 = xmmword_1A9405520;
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_BYTE *)(inited + 32) = 2;
  *(_QWORD *)(inited + 40) = &unk_1E54D68F8;
  v32 = sub_1A9112F9C(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF390);
  v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = v33;
  *(_BYTE *)(v8 + 32) = 0;
  v9 = (_QWORD *)(v2 + OBJC_IVAR___MTPartialFeedRequest_limit);
  swift_beginAccess();
  *(_QWORD *)(v8 + 40) = *v9;
  sub_1A9112FB0(v8);
  v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = v33;
  v35 = *(_QWORD *)(v2 + OBJC_IVAR___MTBaseFeedRequest_storeID);
  *(_QWORD *)(v12 + 32) = sub_1A93F9060();
  *(_QWORD *)(v12 + 40) = v13;
  v37[0] = 1;
  sub_1A93A0AA8();
  v31 = v11;
  if ((v14 & 1) != 0)
  {
    v19 = a1;
    v21 = MEMORY[0x1E0DEE9D8];
    goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7740);
  v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = v33;
  *(_BYTE *)(v15 + 32) = 1;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v33;
  v35 = 0;
  v36 = 0xE000000000000000;
  result = sub_1A93A0AA8();
  if ((v18 & 1) == 0)
  {
    v19 = a1;
    v34 = result;
    sub_1A93F9060();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    v20 = v36;
    *(_QWORD *)(v16 + 32) = v35;
    *(_QWORD *)(v16 + 40) = v20;
    *(_QWORD *)(v15 + 40) = v16;
    v21 = v15;
LABEL_5:
    v22 = sub_1A9112998(v21);
    v23 = MEMORY[0x1E0DEE9D8];
    v24 = sub_1A93F726C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v6, 1, 1, v24);
    v25 = sub_1A9112728(v23);
    v26 = sub_1A9112844(v23);
    v27 = sub_1A9112844(v23);
    *((_QWORD *)&v30 + 1) = sub_1A911286C(v23);
    *(_QWORD *)&v30 = v22;
    *(_QWORD *)&v29 = v27;
    *((_QWORD *)&v29 + 1) = v23;
    *(_QWORD *)&v28 = v23;
    *((_QWORD *)&v28 + 1) = v26;
    return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v41, &v40, &v39, &v38, v32, v25, v31, v23, v19, v28, v29, v23, v12, v37, 0, 1, v30, 0, 1,
             0,
             (uint64_t)v6,
             0,
             0,
             0,
             0,
             0,
             v23,
             0,
             0,
             2);
  }
  __break(1u);
  return result;
}

char *sub_1A93A0978(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v6 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9114B88(a3, (uint64_t)v8);
  objc_allocWithZone((Class)type metadata accessor for SeasonFeedResponse());
  swift_bridgeObjectRetain();
  return SeasonFeedResponse.init(jsonArray:request:params:)(a1, (char *)a2, (uint64_t)v8);
}

char *SeasonFeedResponse.__allocating_init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return SeasonFeedResponse.init(jsonArray:request:params:)(a1, a2, a3);
}

uint64_t sub_1A93A0A60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___MTSeasonFeedRequest_seasons;
  swift_beginAccess();
  return *(_QWORD *)(*(_QWORD *)v1 + 16);
}

int64_t sub_1A93A0AA8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t result;
  unint64_t v5;
  unint64_t v6;
  int64x2_t v7;
  int64x2_t *v8;
  unint64_t v9;
  int64x2_t v10;
  int8x16_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t *v14;
  int64_t v15;
  int64_t v16;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___MTSeasonFeedRequest_seasons);
  swift_beginAccess();
  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 16);
  if (!v3)
    return 0;
  result = *(_QWORD *)(v2 + 32);
  v5 = v3 - 1;
  if (v3 == 1)
    return result;
  if (v3 >= 5)
  {
    v6 = v5 & 0xFFFFFFFFFFFFFFFCLL | 1;
    v7 = vdupq_n_s64(result);
    v8 = (int64x2_t *)(v2 + 56);
    v9 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    v10 = v7;
    do
    {
      v7 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v7, v8[-1]), (int8x16_t)v7, (int8x16_t)v8[-1]);
      v10 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v10, *v8), (int8x16_t)v10, *(int8x16_t *)v8);
      v8 += 2;
      v9 -= 4;
    }
    while (v9);
    v11 = vbslq_s8((int8x16_t)vcgtq_s64(v7, v10), (int8x16_t)v7, (int8x16_t)v10);
    v12 = vextq_s8(v11, v11, 8uLL).u64[0];
    result = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v11.i64[0], v12), *(int8x8_t *)v11.i8, (int8x8_t)v12);
    if (v5 == (v5 & 0xFFFFFFFFFFFFFFFCLL))
      return result;
  }
  else
  {
    v6 = 1;
  }
  v13 = v3 - v6;
  v14 = (int64_t *)(v2 + 8 * v6 + 32);
  do
  {
    v16 = *v14++;
    v15 = v16;
    if (result <= v16)
      result = v15;
    --v13;
  }
  while (v13);
  return result;
}

uint64_t type metadata accessor for SeasonFeedResponse()
{
  uint64_t result;

  result = qword_1EEABF3F0;
  if (!qword_1EEABF3F0)
    return swift_getSingletonMetadata();
  return result;
}

void SeasonFeedRequest.__allocating_init(storeID:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void SeasonFeedRequest.init(storeID:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1A93A0C58()
{
  return swift_bridgeObjectRelease();
}

id SeasonFeedRequest.__deallocating_deinit(uint64_t a1)
{
  return sub_1A913E33C(a1, type metadata accessor for SeasonFeedRequest);
}

char *SeasonFeedResponse.init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void **v13;
  void *v14;
  void *v15;
  char *v16;
  char *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  objc_class *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __objc2_class *v39;
  char v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v50[2];
  _BYTE v51[40];
  __int128 v52;
  __int128 v53;
  objc_super v54;

  v7 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v50[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v50[-1] - v11;
  v3[OBJC_IVAR___MTSeasonFeedResponse_seasonHasMoreEpisodes] = 0;
  sub_1A9114B88(a3, (uint64_t)&v50[-1] - v11);
  sub_1A9114B88((uint64_t)v12, (uint64_t)v9);
  v13 = (void **)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(_QWORD *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1A9114B88((uint64_t)v9, (uint64_t)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params]);
  v14 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  v15 = *v13;
  *v13 = v14;
  v16 = v3;
  v17 = a2;
  v18 = v14;

  v19 = MEMORY[0x1E0DEE9D8];
  v20 = sub_1A91154C8(MEMORY[0x1E0DEE9D8]);
  v21 = &v16[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(_QWORD *)v21 = v19;
  *((_QWORD *)v21 + 1) = v20;
  *((_QWORD *)v21 + 2) = v19;
  *((_QWORD *)v21 + 3) = 0;

  v22 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v54.receiver = v16;
  v54.super_class = v22;
  v23 = (char *)objc_msgSendSuper2(&v54, sel_init);
  sub_1A9114C30((uint64_t)v9);
  sub_1A9114C30((uint64_t)v12);
  v24 = &v23[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response];
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v24 + 16))
  {
    v25 = *(_QWORD *)(*(_QWORD *)v24 + 32);
    v50[0] = 1635017060;
    v50[1] = 0xE400000000000000;
    v26 = v23;
    swift_bridgeObjectRetain();
    sub_1A93F8C1C();
    if (*(_QWORD *)(v25 + 16) && (v27 = sub_1A90A597C((uint64_t)v51), (v28 & 1) != 0))
    {
      sub_1A906443C(*(_QWORD *)(v25 + 56) + 32 * v27, (uint64_t)&v52);
    }
    else
    {
      v52 = 0u;
      v53 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1A90A5908((uint64_t)v51);
    if (*((_QWORD *)&v53 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC490);
      if ((swift_dynamicCast() & 1) != 0)
      {
        if (!*(_QWORD *)(v50[0] + 16))
        {
LABEL_43:

          swift_bridgeObjectRelease();
          goto LABEL_44;
        }
        v29 = *(_QWORD *)(v50[0] + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        strcpy((char *)v50, "attributes");
        BYTE3(v50[1]) = 0;
        HIDWORD(v50[1]) = -369098752;
        sub_1A93F8C1C();
        if (*(_QWORD *)(v29 + 16) && (v30 = sub_1A90A597C((uint64_t)v51), (v31 & 1) != 0))
        {
          sub_1A906443C(*(_QWORD *)(v29 + 56) + 32 * v30, (uint64_t)&v52);
        }
        else
        {
          v52 = 0u;
          v53 = 0u;
        }
        sub_1A90A5908((uint64_t)v51);
        if (*((_QWORD *)&v53 + 1))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92B0);
          if ((swift_dynamicCast() & 1) == 0)
            goto LABEL_28;
          v32 = v50[0];
          strcpy((char *)v50, "episodeCount");
          BYTE5(v50[1]) = 0;
          HIWORD(v50[1]) = -5120;
          sub_1A93F8C1C();
          if (*(_QWORD *)(v32 + 16) && (v33 = sub_1A90A597C((uint64_t)v51), (v34 & 1) != 0))
          {
            sub_1A906443C(*(_QWORD *)(v32 + 56) + 32 * v33, (uint64_t)&v52);
          }
          else
          {
            v52 = 0u;
            v53 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_1A90A5908((uint64_t)v51);
          if (*((_QWORD *)&v53 + 1))
          {
            if ((swift_dynamicCast() & 1) != 0)
            {
              v35 = v50[0];
              v36 = *(_QWORD *)(a3 + 64);
              if (*(_QWORD *)(v36 + 16))
              {
                sub_1A912E244(0);
                v38 = v35;
                v39 = &OBJC_METACLASS____TtC18PodcastsFoundation21SyncKeysInMemoryStore;
                if ((v40 & 1) != 0)
                  v38 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v37);
              }
              else
              {
                v38 = v50[0];
                v39 = &OBJC_METACLASS____TtC18PodcastsFoundation21SyncKeysInMemoryStore;
              }
              v26[(unint64_t)v39[23].isa] = v38 < v35;
            }
LABEL_28:
            strcpy((char *)v50, "relationships");
            HIWORD(v50[1]) = -4864;
            sub_1A93F8C1C();
            if (*(_QWORD *)(v29 + 16) && (v41 = sub_1A90A597C((uint64_t)v51), (v42 & 1) != 0))
            {
              sub_1A906443C(*(_QWORD *)(v29 + 56) + 32 * v41, (uint64_t)&v52);
            }
            else
            {
              v52 = 0u;
              v53 = 0u;
            }
            swift_bridgeObjectRelease();
            sub_1A90A5908((uint64_t)v51);
            if (*((_QWORD *)&v53 + 1))
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92B0);
              if ((swift_dynamicCast() & 1) == 0)
                goto LABEL_42;
              v43 = v50[0];
              strcpy((char *)v50, "episodes");
              BYTE1(v50[1]) = 0;
              WORD1(v50[1]) = 0;
              HIDWORD(v50[1]) = -402653184;
              sub_1A93F8C1C();
              if (*(_QWORD *)(v43 + 16) && (v44 = sub_1A90A597C((uint64_t)v51), (v45 & 1) != 0))
              {
                sub_1A906443C(*(_QWORD *)(v43 + 56) + 32 * v44, (uint64_t)&v52);
              }
              else
              {
                v52 = 0u;
                v53 = 0u;
              }
              swift_bridgeObjectRelease();
              sub_1A90A5908((uint64_t)v51);
              if (*((_QWORD *)&v53 + 1))
              {
                if ((swift_dynamicCast() & 1) != 0)
                {
                  v46 = v50[0];
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9720);
                  v47 = swift_allocObject();
                  *(_OWORD *)(v47 + 16) = xmmword_1A9405520;
                  *(_QWORD *)(v47 + 32) = v46;
                  *(_QWORD *)v24 = v47;
                  goto LABEL_43;
                }
LABEL_42:
                *(_QWORD *)v24 = v19;
                goto LABEL_43;
              }
            }
            sub_1A90A593C((uint64_t)&v52);
            goto LABEL_42;
          }
        }
        sub_1A90A593C((uint64_t)&v52);
        goto LABEL_28;
      }

    }
    else
    {

      sub_1A90A593C((uint64_t)&v52);
    }
  }
  else
  {

  }
LABEL_44:
  sub_1A9114C30(a3);
  return v23;
}

uint64_t type metadata accessor for SeasonFeedRequest()
{
  return objc_opt_self();
}

char *sub_1A93A12CC(unint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  uint64_t (**v8)();
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  uint64_t (**v12)();
  id v13;
  objc_super v15;

  v3 = sub_1A93A15D4(a1);
  v5 = v4;
  v6 = (objc_class *)type metadata accessor for GenericDataSourceSection();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = (uint64_t (**)())&v7[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  *v8 = sub_1A9123748;
  v8[1] = 0;
  v9 = (uint64_t *)&v7[OBJC_IVAR___MTGenericDataSourceSection_storedTitle];
  *v9 = v3;
  v9[1] = v5;
  v15.receiver = v7;
  v15.super_class = v6;
  v10 = (char *)objc_msgSendSuper2(&v15, sel_init);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = a1;
  v12 = (uint64_t (**)())&v10[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  swift_beginAccess();
  *v12 = sub_1A93A19D0;
  v12[1] = (uint64_t (*)())v11;
  v13 = v1;
  swift_release();
  return v10;
}

uint64_t sub_1A93A13BC(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for PartialFeedRequest();
  result = swift_dynamicCastClassUnconditional();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  v5 = result + OBJC_IVAR___MTPartialFeedRequest_sections;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v5 + 16) <= a2)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v6 = *(_QWORD *)(*(_QWORD *)v5 + 8 * a2 + 32);
  if (!v6)
    return 0;
  if (v6 != 1)
    goto LABEL_12;
  if ((*(_BYTE *)(a1 + OBJC_IVAR___MTSeasonFeedResponse_seasonHasMoreEpisodes) & 1) != 0)
    return 1;
  type metadata accessor for SeasonFeedRequest();
  v7 = swift_dynamicCastClassUnconditional() + OBJC_IVAR___MTSeasonFeedRequest_seasons;
  swift_beginAccess();
  return *(_QWORD *)(*(_QWORD *)v7 + 16) > 1uLL;
}

uint64_t sub_1A93A15D4(unint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  char v19;
  int64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD058);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(void **)&v1[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request];
  type metadata accessor for PartialFeedRequest();
  v10 = swift_dynamicCastClassUnconditional();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v11 = v10 + OBJC_IVAR___MTPartialFeedRequest_sections;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v11 + 16) <= a1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v12 = *(_QWORD *)(*(_QWORD *)v11 + 8 * a1 + 32);
  if (!v12)
  {
    sub_1A913D488(a1, 0);
    type metadata accessor for ServerPodcastEpisode();
    v13 = (void *)swift_dynamicCastClassUnconditional();
    swift_storeEnumTagMultiPayload();
    v14 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
    type metadata accessor for EyebrowBuilder(0);
    v15 = swift_allocObject();
    v1 = v13;
    v16 = sub_1A913E36C((uint64_t)v1, 1, (uint64_t)v8, 0, 1, 0, 0, (uint64_t)v5, 1, 0, v15);
    swift_beginAccess();
    v17 = *(_QWORD *)(v16 + 16);
    if (*(_QWORD *)(v16 + 24))
    {
      swift_bridgeObjectRetain();
LABEL_15:
      swift_release();

      return v17;
    }
    if (qword_1ED2AD260 == -1)
    {
LABEL_14:
      v17 = sub_1A93F7044();
      goto LABEL_15;
    }
LABEL_20:
    swift_once();
    goto LABEL_14;
  }
  if (v12 != 1)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  type metadata accessor for SeasonFeedRequest();
  if (!swift_dynamicCastClass())
    return 0;
  v18 = sub_1A93A0AA8();
  if ((v19 & 1) != 0)
    return 0;
  v20 = v18;
  v21 = qword_1ED2AD260;
  v22 = v9;
  if (v21 != -1)
    swift_once();
  sub_1A93F7044();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v23 = swift_allocObject();
  v24 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v23 + 16) = xmmword_1A9405520;
  v25 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v23 + 56) = v24;
  *(_QWORD *)(v23 + 64) = v25;
  *(_QWORD *)(v23 + 32) = v20;
  v17 = sub_1A93F801C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

id SeasonFeedResponse.__deallocating_deinit()
{
  return sub_1A913E33C(0, type metadata accessor for SeasonFeedResponse);
}

uint64_t sub_1A93A19AC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A93A19D0()
{
  uint64_t v0;

  return sub_1A93A13BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1A93A19D8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___MTSeasonFeedRequest_seasons);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for SeasonFeedRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SeasonFeedRequest.seasons.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of SeasonFeedRequest.seasons.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of SeasonFeedRequest.seasons.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of SeasonFeedRequest.__allocating_init(storeID:seasons:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t dispatch thunk of SeasonFeedRequest.numberOfSeasons.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of SeasonFeedRequest.latestSeason.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t sub_1A93A1AEC()
{
  return type metadata accessor for SeasonFeedResponse();
}

uint64_t sub_1A93A1AF4()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for SeasonFeedResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t MetricsWidgetContext.widgetID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsWidgetContext.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsWidgetContext.size.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t MetricsWidgetContext.subjectID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall MetricsWidgetContext.init(widgetID:name:size:subjectID:)(PodcastsFoundation::MetricsWidgetContext *__return_ptr retstr, Swift::String widgetID, Swift::String name, Swift::Int size, Swift::String_optional subjectID)
{
  retstr->widgetID = widgetID;
  retstr->name = name;
  retstr->size = size;
  retstr->subjectID = subjectID;
}

uint64_t sub_1A93A1BEC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A93A1C1C + 4 * byte_1A9422E50[*v0]))(0x4449746567646977, 0xE800000000000000);
}

uint64_t sub_1A93A1C1C()
{
  return 1701667182;
}

uint64_t sub_1A93A1C2C()
{
  return 1702521203;
}

uint64_t sub_1A93A1C3C()
{
  return 0x497463656A627573;
}

uint64_t sub_1A93A1C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93A296C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93A1C7C()
{
  sub_1A93A2580();
  return sub_1A93F945C();
}

uint64_t sub_1A93A1CA4()
{
  sub_1A93A2580();
  return sub_1A93F9468();
}

uint64_t MetricsWidgetContext.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[6];
  char v16;
  char v17;
  char v18;
  char v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A49D0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[2];
  v15[4] = v1[3];
  v15[5] = v8;
  v9 = v1[4];
  v15[2] = v1[5];
  v15[3] = v9;
  v15[1] = v1[6];
  v10 = a1[3];
  v11 = a1;
  v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_1A93A2580();
  sub_1A93F93D8();
  v19 = 0;
  sub_1A93F9000();
  if (!v2)
  {
    v18 = 1;
    sub_1A93F9000();
    v17 = 2;
    sub_1A93F9024();
    v16 = 3;
    sub_1A93F8FB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t MetricsWidgetContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC010);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93A2580();
  sub_1A93F93C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v28 = 0;
  v9 = sub_1A93F8F4C();
  v11 = v10;
  v24 = v9;
  v27 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_1A93F8F4C();
  v14 = v13;
  v22 = v12;
  v26 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v21 = sub_1A93F8F70();
  v25 = 3;
  v15 = sub_1A93F8F04();
  v18 = v17;
  v19 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  v20 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v20;
  a2[4] = v21;
  a2[5] = v19;
  a2[6] = v18;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A93A20CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MetricsWidgetContext.init(from:)(a1, a2);
}

uint64_t sub_1A93A20E0(_QWORD *a1)
{
  return MetricsWidgetContext.encode(to:)(a1);
}

Swift::String_optional __swiftcall MetricsWidgetContext.encodeToString()()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  Swift::String_optional result;

  sub_1A93F6DEC();
  swift_allocObject();
  sub_1A93F6DE0();
  sub_1A93A25C4();
  v0 = sub_1A93F6DD4();
  v2 = v1;
  swift_release();
  v3 = sub_1A93F72A8();
  v5 = v4;
  sub_1A905F180(v0, v2);
  v6 = v3;
  v7 = v5;
  result.value._object = v7;
  result.value._countAndFlagsBits = v6;
  return result;
}

double static MetricsWidgetContext.decodeFromString(_:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  double result;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  if (!a1 || (v3 = sub_1A93F7284(), v4 >> 60 == 15))
  {
    *(_QWORD *)(a2 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  else
  {
    v5 = v3;
    v6 = v4;
    sub_1A93F6DA4();
    swift_allocObject();
    sub_1A93F6D98();
    sub_1A93A2608();
    sub_1A93F6D8C();
    sub_1A9069F9C(v5, v6);
    swift_release();
    *(_OWORD *)a2 = v8;
    *(_QWORD *)(a2 + 16) = v9;
    *(_QWORD *)(a2 + 24) = v10;
    result = *(double *)&v11;
    *(_OWORD *)(a2 + 32) = v11;
    *(_QWORD *)(a2 + 48) = v12;
  }
  return result;
}

unint64_t MetricsWidgetContext.metricsDictionary.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  _OWORD v15[2];
  __int128 v16;
  uint64_t v17;
  unint64_t v18;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9740);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 32) = 0x6449746567646977;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v9 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(inited + 16) = xmmword_1A94055A0;
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v1;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = 1701667182;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  *(_QWORD *)(inited + 96) = v4;
  *(_QWORD *)(inited + 104) = v3;
  *(_QWORD *)(inited + 120) = v9;
  *(_QWORD *)(inited + 128) = 1702521203;
  *(_QWORD *)(inited + 168) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 136) = 0xE400000000000000;
  *(_QWORD *)(inited + 144) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_1A908A4A8(inited);
  v18 = v10;
  if (v7)
  {
    v11 = v10;
    v17 = v9;
    *(_QWORD *)&v16 = v5;
    *((_QWORD *)&v16 + 1) = v7;
    sub_1A908A5DC(&v16, v15);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1A930E0CC(v15, 0x497463656A627573, 0xE900000000000064, isUniquelyReferenced_nonNull_native);
    v13 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A9130A4C(0x497463656A627573, 0xE900000000000064, &v16);
    sub_1A90A593C((uint64_t)&v16);
    return v18;
  }
  return v13;
}

uint64_t _s18PodcastsFoundation20MetricsWidgetContextV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v7 = a2[2];
  v8 = a2[3];
  v10 = a2[4];
  v9 = a2[5];
  v11 = a2[6];
  if (*a1 == *a2 && a1[1] == a2[1] || (v12 = sub_1A93F90C0(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8)
    {
      if (v4 != v10)
        return 0;
LABEL_10:
      if (v6)
      {
        if (!v11 || (v5 != v9 || v6 != v11) && (sub_1A93F90C0() & 1) == 0)
          return 0;
      }
      else if (v11)
      {
        return 0;
      }
      return 1;
    }
    v14 = sub_1A93F90C0();
    result = 0;
    if ((v14 & 1) != 0 && v4 == v10)
      goto LABEL_10;
  }
  return result;
}

unint64_t sub_1A93A2580()
{
  unint64_t result;

  result = qword_1ED2AD1C0;
  if (!qword_1ED2AD1C0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9422FE8, &type metadata for MetricsWidgetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2AD1C0);
  }
  return result;
}

unint64_t sub_1A93A25C4()
{
  unint64_t result;

  result = qword_1ED2A4970;
  if (!qword_1ED2A4970)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsWidgetContext, &type metadata for MetricsWidgetContext);
    atomic_store(result, (unint64_t *)&qword_1ED2A4970);
  }
  return result;
}

unint64_t sub_1A93A2608()
{
  unint64_t result;

  result = qword_1ED2ABE78;
  if (!qword_1ED2ABE78)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsWidgetContext, &type metadata for MetricsWidgetContext);
    atomic_store(result, (unint64_t *)&qword_1ED2ABE78);
  }
  return result;
}

uint64_t destroy for MetricsWidgetContext()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MetricsWidgetContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MetricsWidgetContext(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MetricsWidgetContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for MetricsWidgetContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A93A2814 + 4 * byte_1A9422E59[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A93A2848 + 4 * byte_1A9422E54[v4]))();
}

uint64_t sub_1A93A2848(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93A2850(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93A2858);
  return result;
}

uint64_t sub_1A93A2864(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93A286CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A93A2870(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93A2878(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsWidgetContext.CodingKeys()
{
  return &type metadata for MetricsWidgetContext.CodingKeys;
}

unint64_t sub_1A93A2898()
{
  unint64_t result;

  result = qword_1EEABF400;
  if (!qword_1EEABF400)
  {
    result = MEMORY[0x1AF414014](&unk_1A9422FC0, &type metadata for MetricsWidgetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABF400);
  }
  return result;
}

unint64_t sub_1A93A28E0()
{
  unint64_t result;

  result = qword_1ED2AD1D0;
  if (!qword_1ED2AD1D0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9422F30, &type metadata for MetricsWidgetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2AD1D0);
  }
  return result;
}

unint64_t sub_1A93A2928()
{
  unint64_t result;

  result = qword_1ED2AD1C8;
  if (!qword_1ED2AD1C8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9422F58, &type metadata for MetricsWidgetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2AD1C8);
  }
  return result;
}

uint64_t sub_1A93A296C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4449746567646977 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x497463656A627573 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t static EpisodeStateIdentifier.generateIdsFrom(uuid:contentId:)(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  return sub_1A93A3638(a1, a2, a3, a4 & 1);
}

uint64_t EpisodeStateIdentifier.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
  {
    sub_1A93F92E8();
    return sub_1A93F7FBC();
  }
  else
  {
    sub_1A93F92E8();
    return sub_1A93F930C();
  }
}

uint64_t EpisodeStateIdentifier.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  if ((a3 & 1) != 0)
    sub_1A93F7FBC();
  else
    sub_1A93F930C();
  return sub_1A93F9324();
}

uint64_t sub_1A93A2C00()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1A93F92DC();
  sub_1A93F92E8();
  if (v1 == 1)
    sub_1A93F7FBC();
  else
    sub_1A93F930C();
  return sub_1A93F9324();
}

uint64_t sub_1A93A2C84()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16) == 1)
  {
    sub_1A93F92E8();
    return sub_1A93F7FBC();
  }
  else
  {
    sub_1A93F92E8();
    return sub_1A93F930C();
  }
}

uint64_t sub_1A93A2CF8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 112);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t sub_1A93A2D64(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120));
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t EpisodeStateMachine.rules.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A93A2DC4()
{
  sub_1A9087648();
  return swift_unknownObjectRetain();
}

uint64_t sub_1A93A2DD8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136));
  swift_beginAccess();
  *v3 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1A93A2E28())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1A93A2E6C(uint64_t a1)
{
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD v5[5];

  v2 = *v1;
  v5[3] = a1;
  v3 = type metadata accessor for EpisodeStateMachine(0, v2[10], v2[11], v2[12]);
  return Lockable.locked<A>(perform:)((void (*)(uint64_t))sub_1A93A3AF8, (uint64_t)v5, v3, MEMORY[0x1E0DEE9C0] + 8, (uint64_t)&protocol witness table for EpisodeStateMachine<A, B>);
}

uint64_t sub_1A93A2EE0(uint64_t **a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;

  v2 = *a1;
  swift_beginAccess();
  type metadata accessor for StateMachineChangeObserverAction(255, v2[10], v2[11], v2[12]);
  v3 = sub_1A93F83D0();
  swift_bridgeObjectRetain();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF60], v3);
  v4 = sub_1A93F8D54();
  v5 = (uint64_t *)((char *)a1 + (*a1)[15]);
  swift_beginAccess();
  *v5 = v4;
  return swift_bridgeObjectRelease();
}

BOOL sub_1A93A2FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  _BYTE v17[24];

  v10 = MEMORY[0x1AF41420C]();
  swift_unknownObjectRelease();
  v11 = type metadata accessor for StateMachineChangeObserverAction(0, a3, a4, a5);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v17, a1, v11);
  if (v10)
  {
    v13 = MEMORY[0x1AF41420C](v17);
    if (v13)
    {
      v14 = v13;
      swift_unknownObjectRelease();
      v15 = v14 != a2;
    }
    else
    {
      v15 = 1;
    }
  }
  else
  {
    v15 = 0;
  }
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v17, v11);
  return v15;
}

uint64_t sub_1A93A30B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  _QWORD aBlock[5];
  uint64_t v13;

  v1 = sub_1A93F7D58();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F7DB8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9066C6C();
  v9 = (void *)sub_1A93F8868();
  aBlock[4] = sub_1A93A3D24;
  v13 = v0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_80;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A90A1130();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D28();
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v8, v4, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A93A3264(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EpisodeStateMachine(0, *(_QWORD *)(*(_QWORD *)a1 + 80), *(_QWORD *)(*(_QWORD *)a1 + 88), *(_QWORD *)(*(_QWORD *)a1 + 96));
  Lockable.locked<A>(perform:)((void (*)(uint64_t))sub_1A93A3D2C, a1, v2, MEMORY[0x1E0DEE9C0] + 8, (uint64_t)&protocol witness table for EpisodeStateMachine<A, B>);
  MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeStateMachine<A, B>, v2);
  sub_1A93F7950();
  sub_1A93F7A10();
  return swift_release();
}

uint64_t sub_1A93A330C(uint64_t **a1)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t **);
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD v20[2];

  v2 = *a1;
  v3 = (uint64_t *)((char *)a1 + (*a1)[15]);
  swift_beginAccess();
  v4 = *v3;
  v5 = type metadata accessor for StateMachineChangeObserverAction(0, v2[10], v2[11], v2[12]);
  v6 = swift_bridgeObjectRetain();
  if (MEMORY[0x1AF4120D0](v6, v5))
  {
    v7 = 0;
    v8 = v4 + 32;
    while (1)
    {
      v9 = sub_1A93F8388();
      result = sub_1A93F8340();
      if ((v9 & 1) == 0)
        break;
      v11 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_10;
      v12 = *(_QWORD *)(v5 - 8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v12 + 16))(v20, v8, v5);
      v13 = MEMORY[0x1AF41420C](v20);
      swift_unknownObjectRelease();
      if (v13)
      {
        v14 = (void (*)(uint64_t **))v20[1];
        swift_retain();
        v14(a1);
        swift_release();
      }
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v20, v5);
      ++v7;
      v8 += 24;
      if (v11 == MEMORY[0x1AF4120D0](v4, v5))
        goto LABEL_8;
    }
    result = sub_1A93F8CB8();
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    v15 = (uint64_t **)((char *)a1 + (*a1)[15]);
    v16 = swift_beginAccess();
    v20[0] = *v15;
    MEMORY[0x1E0C80A78](v16);
    v17 = sub_1A93F83D0();
    swift_bridgeObjectRetain();
    MEMORY[0x1AF414014](MEMORY[0x1E0DEAF60], v17);
    v18 = sub_1A93F8D54();
    v19 = (uint64_t *)((char *)a1 + (*a1)[15]);
    swift_beginAccess();
    *v19 = v18;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *EpisodeStateMachine.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A9086E08(v0[2], v0[3], *((_BYTE *)v0 + 32));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 112));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t EpisodeStateMachine.__deallocating_deinit()
{
  EpisodeStateMachine.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A93A35F4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  type metadata accessor for EpisodeStateMachine(0, a1[10], a1[11], a1[12]);
  result = sub_1A93F7950();
  *a2 = result;
  return result;
}

uint64_t sub_1A93A3638(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  if (!a2)
  {
LABEL_15:
    v9 = MEMORY[0x1E0DEE9E8];
    goto LABEL_16;
  }
  v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v8 = a1 & 0xFFFFFFFFFFFFLL;
  v9 = MEMORY[0x1E0DEE9E8];
  if (!v8)
  {
LABEL_16:
    if ((a4 & 1) != 0)
      return v9;
    goto LABEL_37;
  }
  sub_1A93F92DC();
  sub_1A93F92E8();
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  v10 = sub_1A93F9324();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v12) & 1) != 0)
  {
    v13 = ~v11;
    v14 = *(_QWORD *)(v9 + 48);
    while (1)
    {
      v15 = v14 + 24 * v12;
      if (*(_BYTE *)(v15 + 16) == 1)
      {
        v16 = *(_QWORD *)v15 == a1 && *(_QWORD *)(v15 + 8) == a2;
        if (v16 || (sub_1A93F90C0() & 1) != 0)
          break;
      }
      v12 = (v12 + 1) & v13;
      if (((*(_QWORD *)(v9 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v12) & 1) == 0)
        goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_18:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v40 = v9;
  v19 = *(_QWORD *)(v9 + 16);
  v18 = *(_QWORD *)(v9 + 24);
  result = swift_bridgeObjectRetain();
  if (v18 <= v19)
  {
    if (isUniquelyReferenced_nonNull_native)
      sub_1A909E810();
    else
      sub_1A909EB48();
    v9 = v40;
    sub_1A93F92DC();
    sub_1A93F92E8();
    sub_1A93F7FBC();
    result = sub_1A93F9324();
    v21 = -1 << *(_BYTE *)(v40 + 32);
    v12 = result & ~v21;
    if (((*(_QWORD *)(v40 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
    {
      v22 = ~v21;
      v23 = *(_QWORD *)(v40 + 48);
      do
      {
        v24 = v23 + 24 * v12;
        if (*(_BYTE *)(v24 + 16) == 1)
        {
          if (*(_QWORD *)v24 == a1 && *(_QWORD *)(v24 + 8) == a2)
            goto LABEL_56;
          result = sub_1A93F90C0();
          if ((result & 1) != 0)
            goto LABEL_56;
        }
        v12 = (v12 + 1) & v22;
      }
      while (((*(_QWORD *)(v40 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
  }
  else if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    v9 = MEMORY[0x1E0DEE9E8];
  }
  else
  {
    result = (uint64_t)sub_1A92387B8();
    v9 = v40;
  }
  *(_QWORD *)(v9 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v12;
  v26 = *(_QWORD *)(v9 + 48) + 24 * v12;
  *(_QWORD *)v26 = a1;
  *(_QWORD *)(v26 + 8) = a2;
  *(_BYTE *)(v26 + 16) = 1;
  v27 = *(_QWORD *)(v9 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (v28)
  {
    __break(1u);
    goto LABEL_61;
  }
  *(_QWORD *)(v9 + 16) = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((a4 & 1) != 0)
    return v9;
LABEL_37:
  if (!a3 || a3 == 1000000000000)
    return v9;
  sub_1A93F92DC();
  sub_1A93F92E8();
  sub_1A93F930C();
  v30 = sub_1A93F9324();
  v31 = -1 << *(_BYTE *)(v9 + 32);
  a4 = v30 & ~v31;
  if (((*(_QWORD *)(v9 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
  {
    v32 = ~v31;
    do
    {
      v33 = *(_QWORD *)(v9 + 48) + 24 * a4;
      if ((*(_BYTE *)(v33 + 16) & 1) == 0 && *(_QWORD *)v33 == a3)
        return v9;
      a4 = (a4 + 1) & v32;
    }
    while (((*(_QWORD *)(v9 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  if (*(_QWORD *)(v9 + 24) > *(_QWORD *)(v9 + 16))
  {
    if ((result & 1) == 0)
      result = (uint64_t)sub_1A92387B8();
    goto LABEL_57;
  }
  if ((_DWORD)result)
    sub_1A909E810();
  else
    sub_1A909EB48();
  sub_1A93F92DC();
  sub_1A93F92E8();
  sub_1A93F930C();
  result = sub_1A93F9324();
  v34 = -1 << *(_BYTE *)(v9 + 32);
  a4 = result & ~v34;
  if (((*(_QWORD *)(v9 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
  {
    v35 = ~v34;
    while (1)
    {
      v36 = *(_QWORD *)(v9 + 48) + 24 * a4;
      if ((*(_BYTE *)(v36 + 16) & 1) == 0 && *(_QWORD *)v36 == a3)
        break;
      a4 = (a4 + 1) & v35;
      if (((*(_QWORD *)(v9 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) == 0)
        goto LABEL_57;
    }
LABEL_56:
    result = sub_1A93F924C();
    __break(1u);
  }
LABEL_57:
  *(_QWORD *)(v9 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << a4;
  v37 = *(_QWORD *)(v9 + 48) + 24 * a4;
  *(_QWORD *)v37 = a3;
  *(_QWORD *)(v37 + 8) = 0;
  *(_BYTE *)(v37 + 16) = 0;
  v38 = *(_QWORD *)(v9 + 16);
  v28 = __OFADD__(v38, 1);
  v39 = v38 + 1;
  if (!v28)
  {
    *(_QWORD *)(v9 + 16) = v39;
    swift_bridgeObjectRelease();
    return v9;
  }
LABEL_61:
  __break(1u);
  return result;
}

uint64_t sub_1A93A3AF8()
{
  uint64_t v0;

  return sub_1A93A2EE0(*(uint64_t ***)(v0 + 16));
}

uint64_t sub_1A93A3B10@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1A9087648();
  return swift_unknownObjectRetain();
}

uint64_t sub_1A93A3B38()
{
  uint64_t v0;

  v0 = swift_unknownObjectRetain();
  return sub_1A93A2DD8(v0);
}

uint64_t sub_1A93A3B60()
{
  return 24;
}

__n128 sub_1A93A3B6C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t dispatch thunk of static EpisodeState.initialState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EpisodeState.dictionaryKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t assignWithCopy for EpisodeStateIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A9086E60(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A9086E08(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for EpisodeStateIdentifier(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A9086E08(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeStateIdentifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeStateIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A93A3CBC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

uint64_t dispatch thunk of EpisodeStateRule.canMove(from:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t method lookup function for EpisodeStateMachine()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EpisodeStateMachine.lock.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of EpisodeStateMachine.lock.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of EpisodeStateMachine.lock.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of EpisodeStateMachine.__allocating_init(identifier:initialState:rules:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 + 224))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of EpisodeStateMachine.transition(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of EpisodeStateMachine.removeStateTransitionActions(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t sub_1A93A3D24()
{
  uint64_t v0;

  return sub_1A93A3264(v0);
}

uint64_t sub_1A93A3D2C()
{
  uint64_t **v0;

  return sub_1A93A330C(v0);
}

BOOL sub_1A93A3D44()
{
  uint64_t v0;

  v0 = MEMORY[0x1AF41420C]();
  if (v0)
    swift_unknownObjectRelease();
  return v0 != 0;
}

BOOL sub_1A93A3D80(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A93A2FDC(a1, v1[5], v1[2], v1[3], v1[4]);
}

uint64_t sub_1A93A3DA0()
{
  uint64_t v0;
  _QWORD v2[4];
  char v3;

  (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(v2, *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC800);
  if ((swift_dynamicCast() & 1) != 0 && v3 != 2)
    return v3 & 1;
  else
    return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_1A93A3E24()
{
  _QWORD *v0;
  uint64_t *v1;
  _QWORD v3[4];
  uint64_t v4;

  (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD))(v0[8] + 8))(v3, v0[6], v0[2], v0[3]);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC800);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9350);
  if (swift_dynamicCast())
  {
    v1 = &v4;
  }
  else
  {
    v4 = 0;
    v1 = v0 + 4;
  }
  return *v1;
}

uint64_t sub_1A93A3EBC()
{
  _QWORD *v0;
  int v1;
  uint64_t *v2;
  _QWORD v4[4];
  uint64_t v5;

  (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD))(v0[7] + 8))(v4, v0[5], v0[2], v0[3]);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC800);
  v1 = swift_dynamicCast();
  if ((v1 & 1) == 0)
    v5 = 0;
  v2 = v0 + 4;
  if (v1)
    v2 = &v5;
  return *v2;
}

uint64_t sub_1A93A3F40(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  if (*((_BYTE *)a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_1A93A3F70 + 4 * byte_1A9423210[v2]))();
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return v2 == *(_QWORD *)a2;
}

uint64_t sub_1A93A3FC0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000011;
  if (*v0 != 1)
    v1 = 0xD000000000000013;
  if (*v0)
    return v1;
  else
    return 0x20646F70656D6F48;
}

char *SiriDonator.__allocating_init(backgroundTaskManager:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return SiriDonator.init(backgroundTaskManager:)(a1);
}

char *SiriDonator.init(backgroundTaskManager:)(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  id v20;
  id v21;
  uint64_t *v22;
  uint64_t v23;
  objc_class *v24;
  char *v25;
  id v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  objc_super v48;
  uint64_t v49;

  v46 = a1;
  v2 = sub_1A93F8850();
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  MEMORY[0x1E0C80A78](v2);
  v38 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F8988();
  v36 = *(_QWORD *)(v4 - 8);
  v37 = v4;
  MEMORY[0x1E0C80A78](v4);
  v35 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8ED0);
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F8808();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1A93F885C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v14);
  v45 = OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_workQueue;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v15 = v1;
  sub_1A93F7DA0();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF8D8], v10);
  v49 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v9, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  *(_QWORD *)(v44 + v45) = sub_1A93F888C();
  v16 = v46;
  *(_QWORD *)&v15[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_podcastsUpdateSubscription] = 0;
  v17 = OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator__throttleInterval;
  v18 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A6FF0);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = 0xD00000000000001CLL;
  v19[3] = 0x80000001A9450390;
  v19[4] = 0x4014000000000000;
  v19[5] = v18;
  v19[6] = &type metadata for DoubleTransform;
  v19[7] = &off_1E54DAA50;
  *(_QWORD *)&v15[v17] = v19;
  *(_QWORD *)&v15[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_backgroundTaskManager] = v16;
  v20 = objc_allocWithZone((Class)type metadata accessor for MediaRequestController());
  swift_unknownObjectRetain();
  v21 = objc_msgSend(v20, sel_init);
  *(_QWORD *)&v15[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_mediaRequestController] = v21;
  v22 = (uint64_t *)&v15[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator__donationInProgress];
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BC0);
  v23 = swift_allocObject();
  *(_DWORD *)(v23 + 20) = 0;
  *(_BYTE *)(v23 + 16) = 0;
  *v22 = v23;

  v24 = (objc_class *)type metadata accessor for SiriDonator();
  v48.receiver = v15;
  v48.super_class = v24;
  v25 = (char *)objc_msgSendSuper2(&v48, sel_init);
  if (os_feature_enabled_homepod_siri_donation_from_apns()
    && (objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod) & 1) != 0)
  {

    swift_unknownObjectRelease();
  }
  else
  {
    v26 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    v27 = v35;
    sub_1A93F8994();

    swift_retain();
    sub_1A90CF1F8();
    swift_release();
    v28 = v38;
    sub_1A93F8844();
    v47 = *(_QWORD *)&v25[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_workQueue];
    sub_1A9066CA8((unint64_t *)&qword_1ED2A41D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
    sub_1A905FD90();
    v29 = v41;
    v30 = v37;
    sub_1A93F7CA4();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v40);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v30);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1A9066D74(&qword_1ED2A8EC8, &qword_1ED2A8ED0, MEMORY[0x1E0C95C28]);
    v31 = v43;
    v32 = sub_1A93F7D04();
    swift_unknownObjectRelease();
    swift_release();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v31);
    *(_QWORD *)&v25[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_podcastsUpdateSubscription] = v32;
    swift_release();
  }
  return v25;
}

uint64_t sub_1A93A461C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1A93A4640(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1AF41420C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_1A9077A14();

  }
}

void sub_1A93A4690(uint64_t a1)
{
  uint64_t v1;

  sub_1A93A4640(a1, v1);
}

void sub_1A93A46C8(unint64_t a1, void *a2, uint64_t a3, void *a4, NSObject *a5, char a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  NSObject *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  BOOL v56;
  void *v57;
  void *v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  NSObject *v75;
  unint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *group;
  char *v83;
  _BYTE v84[40];
  _BYTE v85[24];
  ValueMetadata *v86;
  _UNKNOWN **v87;
  _QWORD v88[5];
  uint64_t v89[2];
  _QWORD v90[7];

  v13 = a3 + 16;
  swift_beginAccess();
  v14 = MEMORY[0x1AF41420C](v13);
  if (v14)
  {
    v83 = (char *)v14;
    if (a2)
    {
      v15 = a2;
      if (qword_1ED2A8778 != -1)
        swift_once();
      v16 = sub_1A93F7698();
      __swift_project_value_buffer(v16, (uint64_t)qword_1ED2A8758);
      v17 = a4;
      v18 = a2;
      v19 = v17;
      v20 = a2;
      v21 = sub_1A93F7674();
      v22 = sub_1A93F879C();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        v78 = (_QWORD *)swift_slowAlloc();
        v80 = swift_slowAlloc();
        v89[0] = v80;
        *(_DWORD *)v23 = 141558531;
        sub_1A93F8AA8();
        *(_WORD *)(v23 + 12) = 2081;
        v24 = objc_msgSend(v19, sel_description);
        v25 = sub_1A93F8040();
        v27 = v26;

        sub_1A906436C(v25, v27, v89);
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 22) = 2112;
        v88[0] = sub_1A93F711C();
        sub_1A93F8AA8();
        *v78 = v88[0];

        _os_log_impl(&dword_1A904E000, v21, v22, "Cannot create donation job - Could not get siri shared user id's for iTunes account: %{private,mask.hash}s with error: %@", (uint8_t *)v23, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v78, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v80, -1, -1);
        MEMORY[0x1AF41411C](v23, -1, -1);
      }
      else
      {

      }
      dispatch_group_leave(a5);

LABEL_41:
      return;
    }
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v66 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
      if (!v66)
        goto LABEL_35;
      v81 = a7;
      group = a5;
      swift_bridgeObjectRetain();
      v39 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
      v44 = MEMORY[0x1E0DEE9D8];
      if (!v39)
        goto LABEL_24;
      v89[0] = MEMORY[0x1E0DEE9D8];
      sub_1A93F8D84();
      if (v39 < 0)
      {
        __break(1u);
        goto LABEL_35;
      }
    }
    else
    {
      v39 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v39)
        goto LABEL_35;
      v81 = a7;
      group = a5;
      v89[0] = MEMORY[0x1E0DEE9D8];
      sub_1A93F8D84();
    }
    v40 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v41 = (id)MEMORY[0x1AF4129DC](v40, a1);
      else
        v41 = *(id *)(a1 + 8 * v40 + 32);
      v42 = v41;
      ++v40;
      v43 = objc_msgSend(v41, sel_first);

      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
    }
    while (v39 != v40);
    v44 = v89[0];
LABEL_24:
    v89[0] = v44;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EEABF4C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
    a5 = group;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v45 = v88[0];
      if (qword_1ED2A8778 != -1)
        swift_once();
      v46 = sub_1A93F7698();
      __swift_project_value_buffer(v46, (uint64_t)qword_1ED2A8758);
      v47 = a4;
      swift_bridgeObjectRetain();
      v48 = sub_1A93F7674();
      v49 = sub_1A93F87B4();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = swift_slowAlloc();
        v79 = swift_slowAlloc();
        v89[0] = v79;
        *(_DWORD *)v50 = 134218499;
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 12) = 2160;
        sub_1A93F8AA8();
        *(_WORD *)(v50 + 22) = 2081;
        v51 = objc_msgSend(v47, sel_description, v50 + 24);
        v52 = sub_1A93F8040();
        v53 = v45;
        v55 = v54;

        v88[0] = sub_1A906436C(v52, v55, v89);
        sub_1A93F8AA8();

        v45 = v53;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v48, v49, "Received %ld siri shared user id's for iTunes account: %{private,mask.hash}s)", (uint8_t *)v50, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v79, -1, -1);
        MEMORY[0x1AF41411C](v50, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease();
      }
      v56 = (a6 & 1) == 0;
      v57 = *(void **)&v83[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_mediaRequestController];
      v88[3] = type metadata accessor for MediaRequestController();
      v88[4] = &protocol witness table for MediaRequestController;
      v88[0] = v57;
      v58 = *(void **)&v83[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_workQueue];
      v86 = &_s11KoaProviderVN;
      v87 = &off_1E54FE1C8;
      LOBYTE(v89[0]) = v56;
      v90[5] = v45;
      v90[6] = v58;
      sub_1A905DC3C((uint64_t)v85, (uint64_t)v90);
      sub_1A905DC3C((uint64_t)v88, (uint64_t)v84);
      _s11DataFetcherCMa();
      v59 = swift_allocObject();
      *(_QWORD *)(v59 + 88) = 0;
      *(_QWORD *)(v59 + 96) = 0;
      *(_BYTE *)(v59 + 16) = v56;
      *(_QWORD *)(v59 + 24) = v47;
      sub_1A905DC3C((uint64_t)v84, v59 + 32);
      v60 = objc_allocWithZone(MEMORY[0x1E0D42BF8]);
      v61 = v58;
      v62 = v47;
      v63 = v61;
      v64 = v57;
      v65 = objc_msgSend(v60, sel_init);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v84);
      *(_QWORD *)(v59 + 72) = v65;
      *(_QWORD *)(v59 + 80) = v63;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v85);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v88);
      v89[1] = v59;
      os_unfair_lock_lock((os_unfair_lock_t)(v81 + 24));
      sub_1A93A51E4((_QWORD **)(v81 + 16), (uint64_t)v89);
      os_unfair_lock_unlock((os_unfair_lock_t)(v81 + 24));
      dispatch_group_leave(group);

      sub_1A9058034((uint64_t)v89);
      return;
    }
LABEL_35:
    if (qword_1ED2A8778 != -1)
      swift_once();
    v67 = sub_1A93F7698();
    __swift_project_value_buffer(v67, (uint64_t)qword_1ED2A8758);
    v68 = a4;
    v69 = sub_1A93F7674();
    v70 = sub_1A93F879C();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = swift_slowAlloc();
      v72 = swift_slowAlloc();
      v89[0] = v72;
      *(_DWORD *)v71 = 141558275;
      sub_1A93F8AA8();
      *(_WORD *)(v71 + 12) = 2081;
      v73 = objc_msgSend(v68, sel_description);
      v74 = sub_1A93F8040();
      v75 = a5;
      v77 = v76;

      v88[0] = sub_1A906436C(v74, v77, v89);
      sub_1A93F8AA8();

      a5 = v75;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v69, v70, "Cannot create donation job - No siri shared user ids on HomePod device for iTunes account : %{private,mask.hash}s", (uint8_t *)v71, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v72, -1, -1);
      MEMORY[0x1AF41411C](v71, -1, -1);

    }
    else
    {

    }
    dispatch_group_leave(a5);
    goto LABEL_41;
  }
  if (qword_1ED2A8778 != -1)
    swift_once();
  v28 = sub_1A93F7698();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED2A8758);
  v29 = a4;
  v30 = sub_1A93F7674();
  v31 = sub_1A93F879C();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v89[0] = v33;
    *(_DWORD *)v32 = 141558275;
    sub_1A93F8AA8();
    *(_WORD *)(v32 + 12) = 2081;
    v34 = objc_msgSend(v29, sel_description);
    v35 = sub_1A93F8040();
    v36 = a5;
    v38 = v37;

    v88[0] = sub_1A906436C(v35, v38, v89);
    sub_1A93F8AA8();

    a5 = v36;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v30, v31, "Error getting self during update for iTunes account: %{private,mask.hash}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v33, -1, -1);
    MEMORY[0x1AF41411C](v32, -1, -1);

  }
  else
  {

  }
  dispatch_group_leave(a5);
}

__n128 sub_1A93A51E4(_QWORD **a1, uint64_t a2)
{
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  __n128 result;
  __int128 v8;
  __int128 v9;
  _OWORD v10[4];
  uint64_t v11;

  sub_1A9057F7C(a2, (uint64_t)v10);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1A9119DA4(0, v3[2] + 1, 1, v3);
  v5 = v3[2];
  v4 = v3[3];
  if (v5 >= v4 >> 1)
    v3 = sub_1A9119DA4((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
  v3[2] = v5 + 1;
  v6 = &v3[9 * v5];
  *((_OWORD *)v6 + 2) = v10[0];
  result = (__n128)v10[1];
  v8 = v10[2];
  v9 = v10[3];
  v6[12] = v11;
  *((_OWORD *)v6 + 4) = v8;
  *((_OWORD *)v6 + 5) = v9;
  *((__n128 *)v6 + 3) = result;
  *a1 = v3;
  return result;
}

void sub_1A93A52C0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF4B8);
  v5 = sub_1A93F8310();
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();

}

id SiriDonator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SiriDonator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SiriDonator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SiriDonator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A93A546C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t method lookup function for SiriDonator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriDonator.__allocating_init(backgroundTaskManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of SiriDonator.startDonation()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t storeEnumTagSinglePayload for SiriDonator.DonationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A93A550C + 4 * byte_1A942321A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A93A5540 + 4 * byte_1A9423215[v4]))();
}

uint64_t sub_1A93A5540(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93A5548(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93A5550);
  return result;
}

uint64_t sub_1A93A555C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93A5564);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A93A5568(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93A5570(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SiriDonator.DonationType()
{
  return &type metadata for SiriDonator.DonationType;
}

unint64_t sub_1A93A5590()
{
  unint64_t result;

  result = qword_1EEABF4A0;
  if (!qword_1EEABF4A0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94232D0, &type metadata for SiriDonator.DonationType);
    atomic_store(result, (unint64_t *)&qword_1EEABF4A0);
  }
  return result;
}

_BYTE *sub_1A93A55D4(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_1A93A55E0()
{
  return swift_deallocObject();
}

uint64_t sub_1A93A55F0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A93A563C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A93A5670(uint64_t a1)
{
  return sub_1A90D4E18(a1);
}

uint64_t sub_1A93A5678()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A93A56A4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void (**)(_QWORD))(v0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v2(*(_QWORD *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
}

uint64_t sub_1A93A56E4()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1A93A5720(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1A93A46C8(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(NSObject **)(v2 + 32), *(_BYTE *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

ValueMetadata *type metadata accessor for SiriDonator.DonationError()
{
  return &type metadata for SiriDonator.DonationError;
}

uint64_t Publisher.asResult()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1A93F9390();
  v4 = sub_1A93F77DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - v6;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_1A93F7B84();
  swift_release();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v10 = sub_1A93F7A4C();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95950], v4);
  MEMORY[0x1AF414014](MEMORY[0x1E0C960B0], v10);
  sub_1A93F7BB4();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A93A5930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1A93F9390();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A93A5A04()
{
  return swift_deallocObject();
}

uint64_t sub_1A93A5A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A93A5930(a1, a2);
}

uint64_t sub_1A93A5A1C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v7;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v3 = sub_1A93F9390();
  v4 = MEMORY[0x1E0C80A78](v3);
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))((char *)&v7 - v5, a1, AssociatedTypeWitness, v4);
  swift_storeEnumTagMultiPayload();
  return sub_1A93F7A58();
}

uint64_t sub_1A93A5B3C()
{
  return swift_deallocObject();
}

uint64_t sub_1A93A5B4C(uint64_t a1)
{
  return sub_1A93A5A1C(a1);
}

uint64_t Publisher.nonNilValues<A>()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  sub_1A93F7B30();
  return swift_release();
}

uint64_t sub_1A93A5BD0()
{
  return swift_deallocObject();
}

uint64_t sub_1A93A5BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1A93F8A90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_1A93A5C28()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1A93F9390();
  v2 = sub_1A93F77DC();
  v3 = sub_1A93F7A4C();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95950], v2);
  MEMORY[0x1AF414014](MEMORY[0x1E0C960B0], v3);
  v0 = sub_1A93F77F4();
  return MEMORY[0x1AF414014](MEMORY[0x1E0C959F8], v0);
}

void sub_1A93A5D48()
{
  sub_1A93F7734();
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A93A5D74()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A93A5D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 80);
  if (v9 >= 2)
    v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v10 = -2;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1A93A5E24()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A93A5E30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24) + 80) = a2 + 2;
  return result;
}

uint64_t type metadata accessor for DefaultListBuilder()
{
  uint64_t result;

  result = qword_1EEABF520;
  if (!qword_1EEABF520)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A93A5EF0()
{
  unint64_t v0;

  sub_1A90D74AC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

double sub_1A93A5F6C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  int *v17;
  unsigned int (*v18)(char *, uint64_t, int *);
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint8_t *v45;
  double result;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  __int16 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v56 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v56 - v10;
  if (!MTPlaybackContinuousPlaybackEnabled())
  {
    if (qword_1ED2A87A0 != -1)
      swift_once();
    v19 = sub_1A93F7698();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED2A8780);
    v20 = sub_1A93F7674();
    v21 = sub_1A93F87B4();
    if (!os_log_type_enabled(v20, v21))
      goto LABEL_22;
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    v23 = "Continuous playback disabled. Returning nil settings";
    goto LABEL_21;
  }
  v12 = type metadata accessor for DefaultListBuilder();
  v13 = v1 + *(int *)(v12 + 24);
  v14 = *(unsigned __int16 *)(v13 + 80);
  v15 = v14 | (*(unsigned __int8 *)(v13 + 82) << 16);
  if (v14 == 2)
  {
    v16 = v1 + *(int *)(v12 + 20);
    sub_1A9315F8C(v16, (uint64_t)v11);
    v17 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v18 = *(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v17 - 1) + 48);
    if (v18(v11, 1, v17) == 1)
    {
      sub_1A9242934((uint64_t)v11);
LABEL_17:
      if (qword_1ED2A87A0 != -1)
        swift_once();
      v53 = sub_1A93F7698();
      __swift_project_value_buffer(v53, (uint64_t)qword_1ED2A8780);
      v20 = sub_1A93F7674();
      v21 = sub_1A93F87B4();
      if (!os_log_type_enabled(v20, v21))
        goto LABEL_22;
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      v23 = "Missing information to generate a new list settings for intent. Returning nil.";
LABEL_21:
      _os_log_impl(&dword_1A904E000, v20, v21, v23, v22, 2u);
      MEMORY[0x1AF41411C](v22, -1, -1);
LABEL_22:

      result = 0.0;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_BYTE *)(a1 + 82) = 0;
      *(_WORD *)(a1 + 80) = 2;
      return result;
    }
    v49 = &v11[v17[37]];
    v50 = *(_QWORD *)v49;
    v51 = *((_QWORD *)v49 + 1);
    swift_bridgeObjectRetain();
    sub_1A916E4E4((uint64_t)v11);
    if (!v51)
      goto LABEL_17;
    sub_1A9315F8C(v16, (uint64_t)v8);
    if (v18(v8, 1, v17) == 1)
    {
      sub_1A9242934((uint64_t)v8);
      v52 = 17;
    }
    else
    {
      v52 = v8[v17[39]];
      sub_1A916E4E4((uint64_t)v8);
    }
    sub_1A9315F8C(v16, (uint64_t)v5);
    if (v18(v5, 1, v17) == 1)
    {
      sub_1A9242934((uint64_t)v5);
      v54 = 0;
    }
    else
    {
      v54 = v5[v17[40]];
      sub_1A916E4E4((uint64_t)v5);
    }
    if (v52 == 17)
      v55 = 2;
    else
      v55 = v52;
    *(_QWORD *)a1 = v50;
    *(_QWORD *)(a1 + 8) = v51;
    result = 0.0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_QWORD *)(a1 + 64) = (v55 << 8) | 2;
    *(_QWORD *)(a1 + 72) = 3;
    *(_BYTE *)(a1 + 82) = 0;
    *(_WORD *)(a1 + 80) = v54;
  }
  else
  {
    v24 = *(_QWORD *)v13;
    v25 = *(_QWORD *)(v13 + 8);
    v26 = *(_QWORD *)(v13 + 16);
    v27 = *(_QWORD *)(v13 + 24);
    v29 = *(_QWORD *)(v13 + 32);
    v28 = *(_QWORD *)(v13 + 40);
    v30 = *(_QWORD *)(v13 + 48);
    v31 = *(_QWORD *)(v13 + 56);
    v34 = v13 + 64;
    v32 = *(_QWORD *)(v13 + 64);
    v33 = *(_QWORD *)(v34 + 8);
    v58 = (unsigned __int16)v32;
    v60 = v30;
    v61 = v28;
    v59 = v31;
    sub_1A90519B4(v24, v25, v26, v27, v29, v28, v30, v31, v32);
    if (qword_1ED2A87A0 != -1)
      swift_once();
    v35 = sub_1A93F7698();
    __swift_project_value_buffer(v35, (uint64_t)qword_1ED2A8780);
    v36 = sub_1A93F7674();
    v37 = sub_1A93F87B4();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v57 = v29;
      v39 = v27;
      v40 = v26;
      v41 = v25;
      v42 = v24;
      v43 = v33;
      v44 = v38;
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_1A904E000, v36, v37, "We already have base settings. Using passed in EpisodeListSettings for intent", v38, 2u);
      v45 = v44;
      v33 = v43;
      v24 = v42;
      v25 = v41;
      v26 = v40;
      v27 = v39;
      v29 = v57;
      MEMORY[0x1AF41411C](v45, -1, -1);
    }

    *(_QWORD *)a1 = v24;
    *(_QWORD *)(a1 + 8) = v25;
    *(_QWORD *)(a1 + 16) = v26;
    *(_QWORD *)(a1 + 24) = v27;
    v47 = v61;
    *(_QWORD *)(a1 + 32) = v29;
    *(_QWORD *)(a1 + 40) = v47;
    v48 = v59;
    *(_QWORD *)(a1 + 48) = v60;
    *(_QWORD *)(a1 + 56) = v48;
    *(_QWORD *)(a1 + 64) = v58;
    *(_QWORD *)(a1 + 72) = v33;
    *(_WORD *)(a1 + 80) = v15 & 0x101;
    *(_BYTE *)(a1 + 82) = (v15 & 0x1010101u) >> 16;
  }
  return result;
}

PodcastsFoundation::PodcastEpisodeAttributes::EpisodeType_optional PodcastEpisodeAttributes.episodeType.getter@<W0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  Swift::String v5;
  PodcastsFoundation::PodcastEpisodeAttributes::EpisodeType_optional result;
  char v7;
  char v8;

  v3 = *(void **)(v1 + 168);
  if (v3)
  {
    v4 = *(_QWORD *)(v1 + 160);
    swift_bridgeObjectRetain();
    v5._countAndFlagsBits = v4;
    v5._object = v3;
    result.value = PodcastEpisodeAttributes.EpisodeType.init(rawValue:)(v5).value;
    v7 = v8;
    if (v8 == 3)
      v7 = 0;
  }
  else
  {
    v7 = 0;
  }
  *a1 = v7;
  return result;
}

uint64_t PodcastEpisodeAttributes.EpisodeType.mtEpisodeType.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t PodcastEpisodeAttributes.uti.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v10;
  char v11;

  v1 = sub_1A93F759C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + 280);
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + 272);
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = v6;
    v7._object = v5;
    PodcastEpisodeAttributes.MediaKind.init(rawValue:)(v7);
    if (v11 != 5)
    {
      if (v11 == 1)
      {
        sub_1A93F7590();
        goto LABEL_6;
      }
      if (v11)
        return 0;
    }
  }
  sub_1A93F7584();
LABEL_6:
  v8 = sub_1A93F753C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v8;
}

BOOL MediaAttributes.contentRatingResolved.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(void))(a2 + 96))();
  if (!v2)
    return 0;
  v3 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  return v3 == 1;
}

uint64_t PodcastEpisodeAttributes.releaseDateResolved.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A93A9DDC(&OBJC_IVAR____TtC18PodcastsFoundation24PodcastEpisodeAttributes____lazy_storage___releaseDateResolved, (void (*)(uint64_t))sub_1A93AC570, a1);
}

uint64_t ServerArtwork.urlResolved.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  if (!*(_QWORD *)(v1 + 56) || (*(_BYTE *)(v1 + 24) & 1) != 0 || (*(_BYTE *)(v1 + 40) & 1) != 0)
  {
    v3 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 1, 1, v3);
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 16);
    v6 = *(_QWORD *)(v1 + 32);
    type metadata accessor for ArtworkFormatter();
    return static ArtworkFormatter.formatArtworkUrl(string:for:cropCode:fileExtension:)(0, a1, (double)v5, (double)v6);
  }
}

PodcastsFoundation::PodcastAttributes::DisplayType_optional PodcastAttributes.displayTypeResolved.getter@<W0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  Swift::String v5;
  PodcastsFoundation::PodcastAttributes::DisplayType_optional result;
  char v7;
  char v8;

  v4 = *(_QWORD *)(v1 + 56);
  v3 = *(void **)(v1 + 64);
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = v4;
  v5._object = v3;
  result.value = PodcastAttributes.DisplayType.init(rawValue:)(v5).value;
  v7 = v8;
  if (v8 == 3)
    v7 = 0;
  *a1 = v7;
  return result;
}

uint64_t PodcastAttributes.DisplayType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1684627824;
  if (*v0 != 1)
    v1 = 0x646972627968;
  if (*v0)
    return v1;
  else
    return 1701147238;
}

uint64_t Kind.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6269726373627573;
  else
    return 7628135;
}

uint64_t PriceType.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aStdq_11[8 * *v0];
}

uint64_t PodcastEpisodeAttributes.AvailabilityDates.free.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  char v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 1;
  PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v10, v4);
  v5 = sub_1A93F738C();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    v9 = 0;
    PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v9, a1);
    return sub_1A905FD54((uint64_t)v4, (uint64_t *)&unk_1ED2AD360);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, v4, v5);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
}

uint64_t PodcastEpisodeAttributes.AvailabilityDates.paid.getter@<X0>(char *a1@<X8>)
{
  char v2;

  v2 = 2;
  return PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v2, a1);
}

uint64_t PodcastEpisodeAttributes.EpisodeType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x72656C69617274;
  if (*v0 != 1)
    v1 = 0x73756E6F62;
  if (*v0)
    return v1;
  else
    return 1819047270;
}

uint64_t String.posixTimestampToDate()@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  if (qword_1ED2A93B0 != -1)
    swift_once();
  v2 = (void *)qword_1ED2A93A8;
  v3 = (void *)sub_1A93F8010();
  v4 = objc_msgSend(v2, sel_dateFromString_, v3);

  if (v4)
  {
    sub_1A93F7368();

    v5 = sub_1A93F738C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1A93F738C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

BOOL PodcastAttributes.isSerialShowTypeInFeed.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  if (*(_QWORD *)(v0 + 144))
    v1 = (void *)sub_1A93F8010();
  else
    v1 = 0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_showTypeFromString_, v1);

  return v2 == (id)2;
}

uint64_t PodcastEpisodeAttributes.ChannelKind.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 30324;
  if (*v0 != 1)
    v1 = 1937204590;
  if (*v0)
    return v1;
  else
    return 0x636973756DLL;
}

PodcastsFoundation::PriceType_optional __swiftcall PriceType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::PriceType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PodcastEpisodeAttributes.episodeArtwork.getter()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;

  v1 = *(_QWORD *)(v0 + 128);
  if (!v1)
    return swift_retain();
  v2 = *(_QWORD *)(v0 + 120) == 0x65646F73697065 && v1 == 0xE700000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
    return swift_retain();
  else
    return 0;
}

id ServerPodcastEpisode.__allocating_init(id:type:href:attributes:relationships:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  objc_class *v8;
  char *v17;
  void **v18;
  char *v19;
  char *v20;
  char *v21;
  void *v22;
  id v23;
  id v24;
  objc_class *v26;
  objc_super v27;

  v17 = (char *)objc_allocWithZone(v8);
  v18 = (void **)&v17[OBJC_IVAR___MTServerPodcastEpisode_relationships];
  *(_QWORD *)&v17[OBJC_IVAR___MTServerPodcastEpisode_relationships] = 0;
  v19 = &v17[OBJC_IVAR___MTServerPodcastEpisode_id];
  *(_QWORD *)v19 = a1;
  *((_QWORD *)v19 + 1) = a2;
  v20 = &v17[OBJC_IVAR___MTServerPodcastEpisode_type];
  *(_QWORD *)v20 = a3;
  *((_QWORD *)v20 + 1) = a4;
  v21 = &v17[OBJC_IVAR___MTServerPodcastEpisode_href];
  *(_QWORD *)v21 = a5;
  *((_QWORD *)v21 + 1) = a6;
  *(_QWORD *)&v17[OBJC_IVAR___MTServerPodcastEpisode_attributes] = a7;
  swift_beginAccess();
  v22 = *v18;
  *v18 = a8;
  swift_retain();
  v23 = a8;

  v27.receiver = v17;
  v27.super_class = v26;
  v24 = objc_msgSendSuper2(&v27, sel_init);
  swift_release();

  return v24;
}

PodcastsFoundation::PodcastEpisodeAttributes::MediaKind_optional PodcastEpisodeAttributes.mediaKindResolved.getter@<W0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  Swift::String v5;
  PodcastsFoundation::PodcastEpisodeAttributes::MediaKind_optional result;
  char v7;
  char v8;

  v3 = *(void **)(v1 + 280);
  if (v3)
  {
    v4 = *(_QWORD *)(v1 + 272);
    swift_bridgeObjectRetain();
    v5._countAndFlagsBits = v4;
    v5._object = v3;
    result.value = PodcastEpisodeAttributes.MediaKind.init(rawValue:)(v5).value;
    v7 = v8;
    if (v8 == 5)
      v7 = 0;
  }
  else
  {
    v7 = 0;
  }
  *a1 = v7;
  return result;
}

uint64_t ServerPodcastBase.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastBase.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_type);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastBase.attributes.getter()
{
  return swift_retain();
}

uint64_t ServerPodcastBase.relationships.getter()
{
  return swift_retain();
}

uint64_t sub_1A93A6D98()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A93A6DBC + 4 * byte_1A9423470[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1A93A6DBC()
{
  return 1701869940;
}

uint64_t sub_1A93A6DCC()
{
  return 0x7475626972747461;
}

uint64_t sub_1A93A6DE8()
{
  return 0x6E6F6974616C6572;
}

uint64_t sub_1A93A6E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93B53A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93A6E30()
{
  sub_1A93B442C();
  return sub_1A93F945C();
}

uint64_t sub_1A93A6E58()
{
  sub_1A93B442C();
  return sub_1A93F9468();
}

id ServerPodcastBase.__deallocating_deinit()
{
  return sub_1A91D2A44(type metadata accessor for ServerPodcastBase);
}

uint64_t sub_1A93A6EEC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4440);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B442C();
  sub_1A93F93D8();
  LOBYTE(v12) = 0;
  sub_1A93F9000();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1A93F9000();
    v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
    HIBYTE(v11) = 2;
    type metadata accessor for PodcastAttributes(0);
    sub_1A9066CE8(&qword_1ED2A24E0, 255, type metadata accessor for PodcastAttributes, (uint64_t)&protocol conformance descriptor for PodcastAttributes);
    sub_1A93F8FE8();
    v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships);
    HIBYTE(v11) = 3;
    type metadata accessor for PodcastRelationships();
    sub_1A9066CE8(&qword_1ED2A2C88, v9, (uint64_t (*)(uint64_t))type metadata accessor for PodcastRelationships, (uint64_t)&protocol conformance descriptor for PodcastRelationships);
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t ServerPodcastBase.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ServerPodcastBase.init(from:)(a1);
}

unint64_t ServerPodcastBase.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  objc_super v23;
  char v24;
  uint64_t v25;

  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A43D8);
  v4 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v7);
  v8 = sub_1A93B442C();
  v9 = v1;
  sub_1A93F93C0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);

    type metadata accessor for ServerPodcastBase();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v25) = 0;
    v10 = sub_1A93F8F4C();
    v12 = v9;
    v13 = (uint64_t *)&v9[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id];
    *v13 = v10;
    v13[1] = v14;
    LOBYTE(v25) = 1;
    v15 = sub_1A93F8F4C();
    v16 = (uint64_t *)&v12[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_type];
    *v16 = v15;
    v16[1] = v17;
    type metadata accessor for PodcastAttributes(0);
    v24 = 2;
    sub_1A9066CE8(&qword_1ED2A24E8, 255, type metadata accessor for PodcastAttributes, (uint64_t)&protocol conformance descriptor for PodcastAttributes);
    sub_1A93F8F34();
    *(_QWORD *)&v12[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes] = v25;
    type metadata accessor for PodcastRelationships();
    v24 = 3;
    sub_1A9066CE8(&qword_1ED2A2C90, v18, (uint64_t (*)(uint64_t))type metadata accessor for PodcastRelationships, (uint64_t)&protocol conformance descriptor for PodcastRelationships);
    sub_1A93F8F34();
    *(_QWORD *)&v12[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships] = v25;

    v19 = (objc_class *)type metadata accessor for ServerPodcastBase();
    v23.receiver = v12;
    v23.super_class = v19;
    v8 = (unint64_t)objc_msgSendSuper2(&v23, sel_init);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v21);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  }
  return v8;
}

uint64_t sub_1A93A7460@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 120))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1A93A748C(_QWORD *a1)
{
  return sub_1A93A6EEC(a1);
}

uint64_t sub_1A93A74AC()
{
  return sub_1A9220A84();
}

uint64_t sub_1A93A74B8(uint64_t a1)
{
  return sub_1A9220AD4(a1, &OBJC_IVAR___MTServerPodcast_episodes);
}

uint64_t (*sub_1A93A74C4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t ServerPodcast.__allocating_init(from:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  unint64_t v4;
  _QWORD v6[5];

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___MTServerPodcast_episodes] = 0;
  sub_1A905DC3C(a1, (uint64_t)v6);
  v4 = ServerPodcastBase.init(from:)(v6);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

unint64_t ServerPodcast.init(from:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  _QWORD v5[5];

  *(_QWORD *)(v1 + OBJC_IVAR___MTServerPodcast_episodes) = 0;
  sub_1A905DC3C(a1, (uint64_t)v5);
  v3 = ServerPodcastBase.init(from:)(v5);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v3;
}

uint64_t sub_1A93A75E8()
{
  return swift_bridgeObjectRelease();
}

id ServerPodcast.__deallocating_deinit()
{
  return sub_1A91D2A44(type metadata accessor for ServerPodcast);
}

uint64_t sub_1A93A7614()
{
  return sub_1A93A8B10();
}

uint64_t sub_1A93A7620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A93A8B60(a1, a2, a3, &OBJC_IVAR___MTServerPodcast_episodes);
}

uint64_t (*sub_1A93A762C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t ServerPodcastEpisode.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_id);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_type);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.href.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_href);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.attributes.getter()
{
  return swift_retain();
}

void sub_1A93A7740(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

void *sub_1A93A77A0()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1A93A77EC(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_1A93A783C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id ServerPodcastEpisode.init(id:type:href:attributes:relationships:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  char *v8;
  void **v10;
  char *v11;
  char *v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  objc_super v18;

  v10 = (void **)&v8[OBJC_IVAR___MTServerPodcastEpisode_relationships];
  *(_QWORD *)&v8[OBJC_IVAR___MTServerPodcastEpisode_relationships] = 0;
  v11 = &v8[OBJC_IVAR___MTServerPodcastEpisode_id];
  *(_QWORD *)v11 = a1;
  *((_QWORD *)v11 + 1) = a2;
  v12 = &v8[OBJC_IVAR___MTServerPodcastEpisode_type];
  *(_QWORD *)v12 = a3;
  *((_QWORD *)v12 + 1) = a4;
  v13 = &v8[OBJC_IVAR___MTServerPodcastEpisode_href];
  *(_QWORD *)v13 = a5;
  *((_QWORD *)v13 + 1) = a6;
  *(_QWORD *)&v8[OBJC_IVAR___MTServerPodcastEpisode_attributes] = a7;
  swift_beginAccess();
  v14 = *v10;
  *v10 = a8;
  swift_retain();
  v15 = a8;

  v18.receiver = v8;
  v18.super_class = (Class)type metadata accessor for ServerPodcastEpisode();
  v16 = objc_msgSendSuper2(&v18, sel_init);
  swift_release();

  return v16;
}

void sub_1A93A7960(void *a1)
{
  uint64_t v1;
  void **v3;
  char *v4;
  id v5;
  void *v6;
  void **v7;
  char *v8;
  id v9;
  char *v10;
  id v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  id v17;
  uint64_t v18;

  v3 = (void **)(v1 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
  swift_beginAccess();
  v4 = (char *)*v3;
  if (*v3
    || (v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PodcastEpisodeRelationships()), sel_init),
        v6 = *v3,
        *v3 = v5,
        v6,
        (v4 = (char *)*v3) != 0))
  {
    v7 = (void **)&v4[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast];
    swift_beginAccess();
    if (*v7)
    {
      v8 = (char *)*v3;
      if (!*v3)
        return;
    }
    else
    {
      v9 = objc_allocWithZone((Class)type metadata accessor for PodcastRelationshipContainer());
      v10 = v4;
      v11 = objc_msgSend(v9, sel_init);
      v12 = *v7;
      *v7 = v11;

      v8 = (char *)*v3;
      if (!*v3)
        return;
    }
    v13 = &v8[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast];
    swift_beginAccess();
    v14 = *(_QWORD *)v13;
    if (*(_QWORD *)v13)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1A9405960;
      *(_QWORD *)(v15 + 32) = a1;
      v18 = v15;
      sub_1A93F8328();
      v16 = (uint64_t *)(v14 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
      swift_beginAccess();
      *v16 = v18;
      v17 = a1;
      swift_bridgeObjectRelease();
    }
  }
}

void ServerPodcastEpisode.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1A93A7B3C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A93A7B60 + 4 * byte_1A9423474[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1A93A7B60()
{
  return 1701869940;
}

uint64_t sub_1A93A7B70()
{
  return 1717924456;
}

uint64_t sub_1A93A7B80()
{
  return 0x7475626972747461;
}

uint64_t sub_1A93A7B9C()
{
  return 0x6E6F6974616C6572;
}

uint64_t sub_1A93A7BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93B5560(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93A7BE4()
{
  sub_1A93B4524();
  return sub_1A93F945C();
}

uint64_t sub_1A93A7C0C()
{
  sub_1A93B4524();
  return sub_1A93F9468();
}

id ServerPodcastEpisode.__deallocating_deinit()
{
  return sub_1A91D2A44(type metadata accessor for ServerPodcastEpisode);
}

uint64_t sub_1A93A7CB4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF5C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B4524();
  sub_1A93F93D8();
  LOBYTE(v14) = 0;
  sub_1A93F9000();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1A93F9000();
    LOBYTE(v14) = 2;
    sub_1A93F9000();
    v14 = *(_QWORD *)(v3 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
    LOBYTE(v13) = 3;
    type metadata accessor for PodcastEpisodeAttributes(0);
    sub_1A9066CE8(&qword_1EEABDA08, 255, type metadata accessor for PodcastEpisodeAttributes, (uint64_t)&protocol conformance descriptor for PodcastEpisodeAttributes);
    sub_1A93F9030();
    v9 = (uint64_t *)(v3 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
    swift_beginAccess();
    v13 = *v9;
    v12[15] = 4;
    type metadata accessor for PodcastEpisodeRelationships();
    sub_1A9066CE8(&qword_1EEABDA10, v10, (uint64_t (*)(uint64_t))type metadata accessor for PodcastEpisodeRelationships, (uint64_t)&protocol conformance descriptor for PodcastEpisodeRelationships);
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

char *ServerPodcastEpisode.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ServerPodcastEpisode.init(from:)(a1);
}

char *ServerPodcastEpisode.init(from:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void **v9;
  void *v10;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void **v22;
  void *v23;
  objc_class *v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  objc_super v28;
  uint64_t v29;
  void *v30;

  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A43E8);
  v4 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (void **)&v1[OBJC_IVAR___MTServerPodcastEpisode_relationships];
  *(_QWORD *)&v1[OBJC_IVAR___MTServerPodcastEpisode_relationships] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B4524();
  v7 = v1;
  sub_1A93F93C0();
  if (v2)
  {
    v9 = v27;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v10 = *v9;

    type metadata accessor for ServerPodcastEpisode();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v29) = 0;
    v8 = sub_1A93F8F4C();
    v12 = (uint64_t *)&v7[OBJC_IVAR___MTServerPodcastEpisode_id];
    *v12 = v8;
    v12[1] = v13;
    LOBYTE(v29) = 1;
    v14 = sub_1A93F8F4C();
    v15 = (uint64_t *)&v7[OBJC_IVAR___MTServerPodcastEpisode_type];
    *v15 = v14;
    v15[1] = v16;
    LOBYTE(v29) = 2;
    v17 = sub_1A93F8F4C();
    v18 = (uint64_t *)&v7[OBJC_IVAR___MTServerPodcastEpisode_href];
    *v18 = v17;
    v18[1] = v19;
    type metadata accessor for PodcastEpisodeAttributes(0);
    LOBYTE(v30) = 3;
    sub_1A9066CE8(&qword_1ED2A3178, 255, type metadata accessor for PodcastEpisodeAttributes, (uint64_t)&protocol conformance descriptor for PodcastEpisodeAttributes);
    sub_1A93F8F7C();
    *(_QWORD *)&v7[OBJC_IVAR___MTServerPodcastEpisode_attributes] = v29;
    type metadata accessor for PodcastEpisodeRelationships();
    LOBYTE(v29) = 4;
    sub_1A9066CE8(qword_1ED2A3420, v20, (uint64_t (*)(uint64_t))type metadata accessor for PodcastEpisodeRelationships, (uint64_t)&protocol conformance descriptor for PodcastEpisodeRelationships);
    sub_1A93F8F34();
    v21 = v30;
    v22 = v27;
    swift_beginAccess();
    v23 = *v22;
    *v22 = v21;

    v24 = (objc_class *)type metadata accessor for ServerPodcastEpisode();
    v28.receiver = v7;
    v28.super_class = v24;
    v7 = (char *)objc_msgSendSuper2(&v28, sel_init);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_1A93A8310@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A93A8BD0(a1, type metadata accessor for ServerPodcastEpisode, (uint64_t (*)(uint64_t))ServerPodcastEpisode.init(from:), a2);
}

uint64_t sub_1A93A8334(_QWORD *a1)
{
  return sub_1A93A7CB4(a1);
}

uint64_t ServerPodcastStation.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_id);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastStation.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_type);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastStation.attributes.getter()
{
  return swift_retain();
}

uint64_t sub_1A93A83EC()
{
  return sub_1A9220A84();
}

uint64_t sub_1A93A83F8(uint64_t a1)
{
  return sub_1A9220AD4(a1, &OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_episodes);
}

uint64_t (*sub_1A93A8404())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A93A8448()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A93A846C + 4 * byte_1A9423479[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1A93A846C()
{
  return 1701869940;
}

uint64_t sub_1A93A847C()
{
  return 0x7475626972747461;
}

uint64_t sub_1A93A8498()
{
  return 0x7365646F73697065;
}

uint64_t sub_1A93A84B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93B5774(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93A84D4()
{
  sub_1A93B459C();
  return sub_1A93F945C();
}

uint64_t sub_1A93A84FC()
{
  sub_1A93B459C();
  return sub_1A93F9468();
}

id ServerPodcastStation.__deallocating_deinit()
{
  return sub_1A91D2A44(type metadata accessor for ServerPodcastStation);
}

uint64_t sub_1A93A8590(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t *v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF5E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B459C();
  sub_1A93F93D8();
  LOBYTE(v14) = 0;
  sub_1A93F9000();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1A93F9000();
    v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_attributes);
    LOBYTE(v13) = 2;
    type metadata accessor for PodcastStationAttributes();
    sub_1A9066CE8(&qword_1EEABF5F8, v9, (uint64_t (*)(uint64_t))type metadata accessor for PodcastStationAttributes, (uint64_t)&protocol conformance descriptor for PodcastStationAttributes);
    sub_1A93F9030();
    v10 = (uint64_t *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_episodes);
    swift_beginAccess();
    v13 = *v10;
    v12[15] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAF78);
    sub_1A93B4600();
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

id ServerPodcastStation.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ServerPodcastStation.init(from:)(a1);
}

id ServerPodcastStation.init(from:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  objc_class *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  objc_super v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v1;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF600);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1;
  v25 = &v3[OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_episodes];
  *(_QWORD *)v25 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B459C();
  v8 = v3;
  v9 = v7;
  sub_1A93F93C0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);

    swift_bridgeObjectRelease();
    type metadata accessor for ServerPodcastStation();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v10 = v5;
    LOBYTE(v27) = 0;
    v11 = v23;
    v12 = sub_1A93F8F4C();
    v14 = (uint64_t *)&v8[OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_id];
    *v14 = v12;
    v14[1] = v15;
    LOBYTE(v27) = 1;
    v16 = sub_1A93F8F4C();
    v17 = (uint64_t *)&v8[OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_type];
    *v17 = v16;
    v17[1] = v18;
    type metadata accessor for PodcastStationAttributes();
    LOBYTE(v28) = 2;
    sub_1A9066CE8(&qword_1EEABF608, v19, (uint64_t (*)(uint64_t))type metadata accessor for PodcastStationAttributes, (uint64_t)&protocol conformance descriptor for PodcastStationAttributes);
    sub_1A93F8F7C();
    *(_QWORD *)&v8[OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_attributes] = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAF78);
    LOBYTE(v27) = 3;
    sub_1A93B467C();
    sub_1A93F8F34();
    v20 = v28;
    v21 = v25;
    swift_beginAccess();
    *(_QWORD *)v21 = v20;

    swift_bridgeObjectRelease();
    v22 = (objc_class *)type metadata accessor for ServerPodcastStation();
    v26.receiver = v8;
    v26.super_class = v22;
    v9 = objc_msgSendSuper2(&v26, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  }
  return v9;
}

uint64_t sub_1A93A8B04()
{
  return sub_1A93A8B10();
}

uint64_t sub_1A93A8B10()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A93A8B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A93A8B60(a1, a2, a3, &OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_episodes);
}

uint64_t sub_1A93A8B60(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  _QWORD *v6;

  v6 = (_QWORD *)(v4 + *a4);
  swift_beginAccess();
  *v6 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A93A8BAC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A93A8BD0(a1, type metadata accessor for ServerPodcastStation, (uint64_t (*)(uint64_t))ServerPodcastStation.init(from:), a2);
}

uint64_t sub_1A93A8BD0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  id v8;
  uint64_t result;

  v8 = objc_allocWithZone((Class)a2());
  result = a3(a1);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1A93A8C24(_QWORD *a1)
{
  return sub_1A93A8590(a1);
}

uint64_t sub_1A93A8C44()
{
  _BYTE *v0;

  if (*v0)
    return 0x74726F6873;
  else
    return 0x647261646E617473;
}

uint64_t sub_1A93A8C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93B5910(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93A8CA0()
{
  sub_1A93B46F8();
  return sub_1A93F945C();
}

uint64_t sub_1A93A8CC8()
{
  sub_1A93B46F8();
  return sub_1A93F9468();
}

uint64_t ServerDescription.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ServerDescription.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A93A8D40(_QWORD *a1)
{
  return sub_1A93AEC6C(a1, &qword_1ED2A4438, (void (*)(void))sub_1A93B46F8, (uint64_t)&type metadata for ServerDescription.CodingKeys, (uint64_t)MEMORY[0x1E0DED090]);
}

uint64_t ServerDescription.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ServerDescription.init(from:)(a1);
  return v2;
}

uint64_t ServerDescription.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A43D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B46F8();
  sub_1A93F93C0();
  if (v2)
  {
    type metadata accessor for ServerDescription();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v16 = 0;
    *(_QWORD *)(v1 + 16) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 24) = v9;
    v15 = 1;
    v11 = sub_1A93F8F04();
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v3 + 32) = v11;
    *(_QWORD *)(v3 + 40) = v13;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1A93A8F44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A93AEF80(a1, (void (*)(void))type metadata accessor for ServerDescription, (uint64_t (*)(uint64_t))ServerDescription.init(from:), a2);
}

uint64_t sub_1A93A8F68(_QWORD *a1)
{
  return sub_1A93A8D40(a1);
}

uint64_t ServerArtwork.width.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ServerArtwork.height.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t ServerArtwork.url.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerArtwork.bgColor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerArtwork.textColor1.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerArtwork.textColor2.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerArtwork.textColor3.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerArtwork.textColor4.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 ServerArtwork.__allocating_init(width:height:url:bgColor:textColor1:textColor2:textColor3:textColor4:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __n128 a11, uint64_t a12, uint64_t a13)
{
  uint64_t v20;
  __n128 result;

  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  *(_BYTE *)(v20 + 24) = a2 & 1;
  *(_QWORD *)(v20 + 32) = a3;
  *(_BYTE *)(v20 + 40) = a4 & 1;
  *(_QWORD *)(v20 + 48) = a5;
  *(_QWORD *)(v20 + 56) = a6;
  *(_QWORD *)(v20 + 64) = a7;
  *(_QWORD *)(v20 + 72) = a8;
  *(_OWORD *)(v20 + 80) = a9;
  *(_OWORD *)(v20 + 96) = a10;
  result = a11;
  *(__n128 *)(v20 + 112) = a11;
  *(_QWORD *)(v20 + 128) = a12;
  *(_QWORD *)(v20 + 136) = a13;
  return result;
}

uint64_t ServerArtwork.init(width:height:url:bgColor:textColor1:textColor2:textColor3:textColor4:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __int128 a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  *(_QWORD *)(v13 + 16) = a1;
  *(_BYTE *)(v13 + 24) = a2 & 1;
  *(_QWORD *)(v13 + 32) = a3;
  *(_BYTE *)(v13 + 40) = a4 & 1;
  *(_QWORD *)(v13 + 48) = a5;
  *(_QWORD *)(v13 + 56) = a6;
  *(_QWORD *)(v13 + 64) = a7;
  *(_QWORD *)(v13 + 72) = a8;
  *(_OWORD *)(v13 + 80) = a9;
  *(_OWORD *)(v13 + 96) = a10;
  *(_OWORD *)(v13 + 112) = a11;
  *(_QWORD *)(v13 + 128) = a12;
  *(_QWORD *)(v13 + 136) = a13;
  return v13;
}

uint64_t sub_1A93A91B4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A93A91E0 + 4 * byte_1A942347D[*v0]))(0x6874646977, 0xE500000000000000);
}

uint64_t sub_1A93A91E0()
{
  return 0x746867696568;
}

uint64_t sub_1A93A91F4()
{
  return 7107189;
}

uint64_t sub_1A93A9204()
{
  return 0x726F6C6F436762;
}

uint64_t sub_1A93A921C()
{
  return 0x6F6C6F4374786574;
}

uint64_t sub_1A93A9238()
{
  return 0x6F6C6F4374786574;
}

uint64_t sub_1A93A9258()
{
  return 0x6F6C6F4374786574;
}

uint64_t sub_1A93A9278()
{
  return 0x6F6C6F4374786574;
}

uint64_t sub_1A93A9298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93B59F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93A92BC()
{
  sub_1A93B4970();
  return sub_1A93F945C();
}

uint64_t sub_1A93A92E4()
{
  sub_1A93B4970();
  return sub_1A93F9468();
}

uint64_t ServerArtwork.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ServerArtwork.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ServerArtwork.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4410);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B4970();
  sub_1A93F93D8();
  v8[15] = 0;
  sub_1A93F8FDC();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A93F8FDC();
    v8[13] = 2;
    sub_1A93F8FB8();
    v8[12] = 3;
    sub_1A93F8FB8();
    v8[11] = 4;
    sub_1A93F8FB8();
    v8[10] = 5;
    sub_1A93F8FB8();
    v8[9] = 6;
    sub_1A93F8FB8();
    v8[8] = 7;
    sub_1A93F8FB8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ServerArtwork.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ServerArtwork.init(from:)(a1);
  return v2;
}

uint64_t ServerArtwork.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v3 = v1;
  v20[1] = *(_QWORD *)v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A43A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B4970();
  sub_1A93F93C0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v28 = 0;
    *(_QWORD *)(v1 + 16) = sub_1A93F8F28();
    *(_BYTE *)(v1 + 24) = v9 & 1;
    v27 = 1;
    *(_QWORD *)(v1 + 32) = sub_1A93F8F28();
    *(_BYTE *)(v1 + 40) = v10 & 1;
    v26 = 2;
    *(_QWORD *)(v1 + 48) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 56) = v12;
    v25 = 3;
    *(_QWORD *)(v1 + 64) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 72) = v13;
    v24 = 4;
    *(_QWORD *)(v1 + 80) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 88) = v14;
    v23 = 5;
    *(_QWORD *)(v1 + 96) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 104) = v15;
    v22 = 6;
    *(_QWORD *)(v1 + 112) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 120) = v16;
    v21 = 7;
    v17 = sub_1A93F8F04();
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v3 + 128) = v17;
    *(_QWORD *)(v3 + 136) = v19;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1A93A9930@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A921568C(a1, (uint64_t (*)(uint64_t))ServerArtwork.init(from:), a2);
}

uint64_t sub_1A93A9950(_QWORD *a1)
{
  return ServerArtwork.encode(to:)(a1);
}

uint64_t sub_1A93A9970(uint64_t *a1, uint64_t *a2)
{
  return _s18PodcastsFoundation13ServerArtworkC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

id sub_1A93A9980()
{
  id result;

  result = sub_1A93A999C();
  qword_1ED2A93A8 = (uint64_t)result;
  return result;
}

id sub_1A93A999C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1F48);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A93F7404();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  sub_1A93F73EC();
  v8 = (void *)sub_1A93F73F8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v7, sel_setLocale_, v8);

  v9 = (void *)sub_1A93F8010();
  objc_msgSend(v7, sel_setDateFormat_, v9);

  sub_1A93F74A0();
  v10 = sub_1A93F74C4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v2, 1, v10) != 1)
  {
    v12 = (void *)sub_1A93F74AC();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v2, v10);
  }
  objc_msgSend(v7, sel_setTimeZone_, v12);

  return v7;
}

id static NSDateFormatter.posixTimestampFormatter.getter()
{
  if (qword_1ED2A93B0 != -1)
    swift_once();
  return (id)qword_1ED2A93A8;
}

uint64_t PodcastAttributes.artistName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.url.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.subscribable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

PodcastsFoundation::PodcastAttributes::DisplayType_optional __swiftcall PodcastAttributes.DisplayType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (PodcastsFoundation::PodcastAttributes::DisplayType_optional)sub_1A91B2AB0(v1);
}

PodcastsFoundation::PodcastAttributes::DisplayType_optional sub_1A93A9C00(Swift::String *a1)
{
  return PodcastAttributes.DisplayType.init(rawValue:)(*a1);
}

uint64_t PodcastAttributes.displayType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.feedUrl.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.description.getter()
{
  return swift_retain();
}

uint64_t PodcastAttributes.artwork.getter()
{
  return swift_retain();
}

uint64_t PodcastAttributes.copyright.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.kind.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.editorialArtwork.getter()
{
  return swift_retain();
}

uint64_t PodcastAttributes.releaseDateTime.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.contentRating.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.websiteUrl.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.genreNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastAttributes.seasonNumbers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastAttributes.offers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastAttributes.upsell.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 232);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.releaseDateResolved.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A93A9DDC(&OBJC_IVAR____TtC18PodcastsFoundation17PodcastAttributes____lazy_storage___releaseDateResolved, (void (*)(uint64_t))sub_1A93A9F5C, a1);
}

uint64_t sub_1A93A9DDC@<X0>(_QWORD *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C60);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v17[-v11];
  v13 = v3 + *a1;
  swift_beginAccess();
  sub_1A9062170(v13, (uint64_t)v12, &qword_1ED2A5C60);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1)
    return sub_1A9062F08((uint64_t)v12, a3, (uint64_t *)&unk_1ED2AD360);
  sub_1A905FD54((uint64_t)v12, &qword_1ED2A5C60);
  a2(v3);
  sub_1A9062170(a3, (uint64_t)v9, (uint64_t *)&unk_1ED2AD360);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
  swift_beginAccess();
  sub_1A93AC6F0((uint64_t)v9, v13);
  return swift_endAccess();
}

uint64_t sub_1A93A9F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 168))
  {
    if (qword_1ED2A93B0 != -1)
      swift_once();
    v7 = (void *)qword_1ED2A93A8;
    v8 = (void *)sub_1A93F8010();
    v9 = objc_msgSend(v7, sel_dateFromString_, v8);

    if (v9)
    {
      sub_1A93F7368();

      v10 = sub_1A93F738C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 1, v10);
    }
    else
    {
      v13 = sub_1A93F738C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
    }
    return sub_1A9062F08((uint64_t)v6, a2, (uint64_t *)&unk_1ED2AD360);
  }
  else
  {
    v11 = sub_1A93F738C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
}

uint64_t sub_1A93AA0DC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A93AA114 + 4 * byte_1A9423485[a1]))(0x614E747369747261, 0xEA0000000000656DLL);
}

uint64_t sub_1A93AA114()
{
  return 7107189;
}

uint64_t sub_1A93AA124()
{
  return 0x6269726373627573;
}

uint64_t sub_1A93AA144()
{
  return 0x5479616C70736964;
}

uint64_t sub_1A93AA164()
{
  return 0x6C725564656566;
}

uint64_t sub_1A93AA17C()
{
  return 1701667182;
}

uint64_t sub_1A93AA18C()
{
  return 0x7470697263736564;
}

uint64_t sub_1A93AA1AC()
{
  return 0x6B726F77747261;
}

uint64_t sub_1A93AA1C4()
{
  return 0x6867697279706F63;
}

uint64_t sub_1A93AA1E0()
{
  return 1684957547;
}

unint64_t sub_1A93AA1F0()
{
  return 0xD000000000000010;
}

uint64_t sub_1A93AA20C()
{
  return 0x44657361656C6572;
}

uint64_t sub_1A93AA230()
{
  return 0x52746E65746E6F63;
}

uint64_t sub_1A93AA254()
{
  return 0x5565746973626577;
}

uint64_t sub_1A93AA26C()
{
  return 0x6D614E65726E6567;
}

uint64_t sub_1A93AA284()
{
  return 0x754E6E6F73616573;
}

uint64_t sub_1A93AA2A8()
{
  return 0x73726566666FLL;
}

uint64_t sub_1A93AA2BC()
{
  return 0x6C6C65737075;
}

uint64_t sub_1A93AA2D0()
{
  unsigned __int8 *v0;

  return sub_1A93AA0DC(*v0);
}

uint64_t sub_1A93AA2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93B5CF8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A93AA2FC(_BYTE *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_1A93AA308()
{
  sub_1A93B49B4();
  return sub_1A93F945C();
}

uint64_t sub_1A93AA330()
{
  sub_1A93B49B4();
  return sub_1A93F9468();
}

uint64_t PodcastAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A905FD54(v0 + OBJC_IVAR____TtC18PodcastsFoundation17PodcastAttributes____lazy_storage___releaseDateResolved, &qword_1ED2A5C60);
  return v0;
}

uint64_t PodcastAttributes.__deallocating_deinit()
{
  return sub_1A93ACF20((void (*)(void))PodcastAttributes.deinit);
}

uint64_t PodcastAttributes.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4430);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B49B4();
  sub_1A93F93D8();
  LOBYTE(v14) = 0;
  sub_1A93F8FB8();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1A93F8FB8();
    LOBYTE(v14) = 2;
    sub_1A93F8FC4();
    LOBYTE(v14) = 3;
    sub_1A93F9000();
    LOBYTE(v14) = 4;
    sub_1A93F8FB8();
    LOBYTE(v14) = 5;
    sub_1A93F8FB8();
    v14 = v3[13];
    HIBYTE(v13) = 6;
    type metadata accessor for ServerDescription();
    sub_1A9066CE8(&qword_1ED2A2638, v9, (uint64_t (*)(uint64_t))type metadata accessor for ServerDescription, (uint64_t)&protocol conformance descriptor for ServerDescription);
    sub_1A93F8FE8();
    v14 = v3[14];
    HIBYTE(v13) = 7;
    type metadata accessor for ServerArtwork();
    sub_1A9066CE8(&qword_1ED2A1FF8, v10, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
    sub_1A93F8FE8();
    LOBYTE(v14) = 8;
    sub_1A93F8FB8();
    LOBYTE(v14) = 9;
    sub_1A93F8FB8();
    v14 = v3[19];
    HIBYTE(v13) = 10;
    type metadata accessor for PodcastEditorialArtworkContainer();
    sub_1A9066CE8(&qword_1ED2A3858, v11, (uint64_t (*)(uint64_t))type metadata accessor for PodcastEditorialArtworkContainer, (uint64_t)&protocol conformance descriptor for PodcastEditorialArtworkContainer);
    sub_1A93F8FE8();
    LOBYTE(v14) = 11;
    sub_1A93F8FB8();
    LOBYTE(v14) = 12;
    sub_1A93F8FB8();
    LOBYTE(v14) = 13;
    sub_1A93F8FB8();
    v14 = v3[26];
    HIBYTE(v13) = 14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
    sub_1A93B4AD4(&qword_1ED2A4140, &qword_1ED2AD3D8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1A93F8FE8();
    v14 = v3[27];
    HIBYTE(v13) = 15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9338);
    sub_1A93B4AD4(&qword_1ED2AA188, &qword_1ED2A9338, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
    sub_1A93F8FE8();
    v14 = v3[28];
    HIBYTE(v13) = 16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A40F8);
    sub_1A93B4A38();
    sub_1A93F8FE8();
    LOBYTE(v14) = 17;
    sub_1A93F8FB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PodcastAttributes.__allocating_init(from:)(uint64_t a1)
{
  return sub_1A93AD594(a1, (void (*)(uint64_t))PodcastAttributes.init(from:));
}

_QWORD *PodcastAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  v2 = v1;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A43C8);
  v4 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1 + OBJC_IVAR____TtC18PodcastsFoundation17PodcastAttributes____lazy_storage___releaseDateResolved;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B49B4();
  v38 = v6;
  v9 = (_QWORD *)v2;
  v10 = v40;
  sub_1A93F93C0();
  if (v10)
  {
    sub_1A905FD54(v2 + OBJC_IVAR____TtC18PodcastsFoundation17PodcastAttributes____lazy_storage___releaseDateResolved, &qword_1ED2A5C60);
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v42) = 0;
    *(_QWORD *)(v2 + 16) = sub_1A93F8F04();
    *(_QWORD *)(v2 + 24) = v11;
    LOBYTE(v42) = 1;
    *(_QWORD *)(v2 + 32) = sub_1A93F8F04();
    *(_QWORD *)(v2 + 40) = v12;
    LOBYTE(v42) = 2;
    *(_BYTE *)(v2 + 48) = sub_1A93F8F10();
    LOBYTE(v42) = 3;
    *(_QWORD *)(v2 + 56) = sub_1A93F8F4C();
    *(_QWORD *)(v2 + 64) = v14;
    LOBYTE(v42) = 4;
    *(_QWORD *)(v2 + 72) = sub_1A93F8F04();
    *(_QWORD *)(v2 + 80) = v15;
    LOBYTE(v42) = 5;
    *(_QWORD *)(v2 + 88) = sub_1A93F8F04();
    *(_QWORD *)(v2 + 96) = v16;
    type metadata accessor for ServerDescription();
    v41 = 6;
    sub_1A9066CE8(&qword_1ED2A2640, v17, (uint64_t (*)(uint64_t))type metadata accessor for ServerDescription, (uint64_t)&protocol conformance descriptor for ServerDescription);
    sub_1A93F8F34();
    v37 = (_QWORD *)v2;
    *(_QWORD *)(v2 + 104) = v42;
    type metadata accessor for ServerArtwork();
    v41 = 7;
    sub_1A9066CE8(&qword_1ED2A2000, v18, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
    sub_1A93F8F34();
    v19 = v37;
    v37[14] = v42;
    LOBYTE(v42) = 8;
    v19[15] = sub_1A93F8F04();
    v19[16] = v20;
    LOBYTE(v42) = 9;
    v21 = sub_1A93F8F04();
    v22 = v37;
    v37[17] = v21;
    v22[18] = v23;
    type metadata accessor for PodcastEditorialArtworkContainer();
    v41 = 10;
    sub_1A9066CE8(&qword_1ED2A3860, v24, (uint64_t (*)(uint64_t))type metadata accessor for PodcastEditorialArtworkContainer, (uint64_t)&protocol conformance descriptor for PodcastEditorialArtworkContainer);
    sub_1A93F8F34();
    v37[19] = v42;
    LOBYTE(v42) = 11;
    v25 = sub_1A93F8F04();
    v26 = v37;
    v37[20] = v25;
    v26[21] = v27;
    LOBYTE(v42) = 12;
    v28 = sub_1A93F8F04();
    v29 = v37;
    v37[22] = v28;
    v29[23] = v30;
    LOBYTE(v42) = 13;
    v31 = sub_1A93F8F04();
    v32 = v37;
    v37[24] = v31;
    v32[25] = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
    v41 = 14;
    sub_1A93B4AD4(&qword_1ED2A4148, &qword_1ED2AD3D8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1A93F8F34();
    v37[26] = v42;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9338);
    v41 = 15;
    sub_1A93B4AD4((unint64_t *)&unk_1ED2A9340, &qword_1ED2A9338, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAF40]);
    sub_1A93F8F34();
    v37[27] = v42;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A40F8);
    v41 = 16;
    sub_1A93B4B30();
    sub_1A93F8F34();
    v37[28] = v42;
    LOBYTE(v42) = 17;
    v34 = sub_1A93F8F04();
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v38, v39);
    v9 = v37;
    v37[29] = v34;
    v9[30] = v36;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v9;
}

uint64_t sub_1A93AB3E8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 48);
}

uint64_t sub_1A93AB3F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A93AB424()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A93AB454()
{
  return swift_retain();
}

uint64_t sub_1A93AB460()
{
  return swift_retain();
}

uint64_t sub_1A93AB46C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A93AB49C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A93AB4D0@<X0>(uint64_t a1@<X8>)
{
  return PodcastAttributes.releaseDateResolved.getter(a1);
}

uint64_t sub_1A93AB4F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1A93AB520()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 184))
    return 0;
  swift_bridgeObjectRetain();
  v1 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  return v1 == 1;
}

uint64_t sub_1A93AB584()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A93AB590@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A93AE5BC(a1, (uint64_t (*)(uint64_t))PodcastAttributes.init(from:), a2);
}

uint64_t sub_1A93AB5AC(_QWORD *a1)
{
  return PodcastAttributes.encode(to:)(a1);
}

uint64_t sub_1A93AB5CC()
{
  return sub_1A925CD90();
}

uint64_t sub_1A93AB5EC()
{
  return sub_1A93F7FBC();
}

uint64_t sub_1A93AB60C()
{
  return sub_1A925CE0C();
}

uint64_t sub_1A93AB62C@<X0>(BOOL *a1@<X8>)
{
  return sub_1A925CE60(a1);
}

void sub_1A93AB638(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "showPageTall");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1A93AB65C()
{
  return 0x65676150776F6873;
}

uint64_t sub_1A93AB67C@<X0>(BOOL *a1@<X8>)
{
  return sub_1A925CEEC(a1);
}

uint64_t sub_1A93AB688()
{
  sub_1A93B4BAC();
  return sub_1A93F945C();
}

uint64_t sub_1A93AB6B0()
{
  sub_1A93B4BAC();
  return sub_1A93F9468();
}

uint64_t PodcastEditorialArtworkContainer.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t PodcastEditorialArtworkContainer.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t PodcastEditorialArtworkContainer.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4400);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B4BAC();
  sub_1A93F93D8();
  v10[1] = *(_QWORD *)(v2 + 16);
  type metadata accessor for ServerArtwork();
  sub_1A9066CE8(&qword_1ED2A1FF8, v8, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
  sub_1A93F8FE8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PodcastEditorialArtworkContainer.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PodcastEditorialArtworkContainer.init(from:)(a1);
  return v2;
}

uint64_t PodcastEditorialArtworkContainer.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4398);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B4BAC();
  sub_1A93F93C0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for ServerArtwork();
    sub_1A9066CE8(&qword_1ED2A2000, v7, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
    sub_1A93F8F34();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v4);
    *(_QWORD *)(v1 + 16) = v11;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_1A93AB9E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A921568C(a1, (uint64_t (*)(uint64_t))PodcastEditorialArtworkContainer.init(from:), a2);
}

uint64_t sub_1A93ABA00(_QWORD *a1)
{
  return PodcastEditorialArtworkContainer.encode(to:)(a1);
}

uint64_t PodcastEpisodeAttributes.feedUrl.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastEpisodeAttributes.offers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastEpisodeAttributes.artwork.getter()
{
  return swift_retain();
}

uint64_t PodcastEpisodeAttributes.copyright.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastEpisodeAttributes.firstAvailableDates.getter()
{
  return swift_retain();
}

uint64_t PodcastEpisodeAttributes.contentRating.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 216);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastEpisodeAttributes.genreNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastEpisodeAttributes.channelKind.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 256);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastEpisodeAttributes.channelKind.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 256) = a1;
  *(_QWORD *)(v2 + 264) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*PodcastEpisodeAttributes.channelKind.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

PodcastsFoundation::PodcastEpisodeAttributes::ChannelKind_optional __swiftcall PodcastEpisodeAttributes.ChannelKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (PodcastsFoundation::PodcastEpisodeAttributes::ChannelKind_optional)sub_1A91B2AB0(v1);
}

uint64_t sub_1A93ABBA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92F89E8(*a1, *a2);
}

uint64_t sub_1A93ABBB0()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A93ABC38()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A93ABC9C()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::PodcastEpisodeAttributes::ChannelKind_optional sub_1A93ABD20(Swift::String *a1)
{
  return PodcastEpisodeAttributes.ChannelKind.init(rawValue:)(*a1);
}

void sub_1A93ABD2C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE200000000000000;
  v5 = 30324;
  if (v2 != 1)
  {
    v5 = 1937204590;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x636973756DLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

PodcastsFoundation::PodcastEpisodeAttributes::EpisodeType_optional __swiftcall PodcastEpisodeAttributes.EpisodeType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (PodcastsFoundation::PodcastEpisodeAttributes::EpisodeType_optional)sub_1A91B2AB0(v1);
}

uint64_t sub_1A93ABD80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92F8AD0(*a1, *a2);
}

uint64_t sub_1A93ABD8C()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A93ABE20()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A93ABE90()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::PodcastEpisodeAttributes::EpisodeType_optional sub_1A93ABF20(Swift::String *a1)
{
  return PodcastEpisodeAttributes.EpisodeType.init(rawValue:)(*a1);
}

void sub_1A93ABF2C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x72656C69617274;
  if (v2 != 1)
  {
    v5 = 0x73756E6F62;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1819047270;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

PodcastsFoundation::PodcastEpisodeAttributes::MediaKind_optional __swiftcall PodcastEpisodeAttributes.MediaKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::PodcastEpisodeAttributes::MediaKind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PodcastEpisodeAttributes.MediaKind.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A93AC004 + 4 * byte_1A9423497[*v0]))(0x6F69647561, 0xE500000000000000);
}

uint64_t sub_1A93AC004()
{
  return 0x6F65646976;
}

uint64_t sub_1A93AC014()
{
  return 0x6567616D69;
}

uint64_t sub_1A93AC024()
{
  return 0x746E656D75636F64;
}

uint64_t sub_1A93AC03C()
{
  return 0x6C616E7265747865;
}

void sub_1A93AC054(char *a1)
{
  sub_1A92F8880(*a1);
}

void sub_1A93AC060()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A93AC0A8()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A93AC120()
{
  __asm { BR              X10 }
}

uint64_t sub_1A93AC158()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A93AC1BC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A93AC200()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::PodcastEpisodeAttributes::MediaKind_optional sub_1A93AC278(Swift::String *a1)
{
  return PodcastEpisodeAttributes.MediaKind.init(rawValue:)(*a1);
}

uint64_t sub_1A93AC284()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A93AC2B0 + 4 * byte_1A94234AB[*v0]))();
}

void sub_1A93AC2B0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6F65646976;
  a1[1] = v1;
}

void sub_1A93AC2C4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6567616D69;
  a1[1] = v1;
}

void sub_1A93AC2D8(_QWORD *a1@<X8>)
{
  *a1 = 0x746E656D75636F64;
  a1[1] = 0xE800000000000000;
}

void sub_1A93AC2F4(_QWORD *a1@<X8>)
{
  *a1 = 0x6C616E7265747865;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1A93AC310()
{
  sub_1A93BBB50();
  return sub_1A93F82BC();
}

uint64_t sub_1A93AC36C()
{
  sub_1A93BBB50();
  return sub_1A93F828C();
}

uint64_t PodcastEpisodeAttributes.assetUrl.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 288);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastEpisodeAttributes.durationInMilliseconds.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 304);
}

uint64_t PodcastEpisodeAttributes.guid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 320);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastEpisodeAttributes.episodeNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 336);
}

uint64_t PodcastEpisodeAttributes.seasonNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 352);
}

uint64_t PodcastEpisodeAttributes.inLibrary.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 361);
}

uint64_t sub_1A93AC448(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C60);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9062170(a1, (uint64_t)v14, (uint64_t *)&unk_1ED2AD360);
  v15 = *a2;
  sub_1A9062F08((uint64_t)v14, (uint64_t)v10, (uint64_t *)&unk_1ED2AD360);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  v16 = v15 + *a5;
  swift_beginAccess();
  sub_1A93AC6F0((uint64_t)v10, v16);
  return swift_endAccess();
}

uint64_t sub_1A93AC570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 200))
  {
    if (qword_1ED2A93B0 != -1)
      swift_once();
    v7 = (void *)qword_1ED2A93A8;
    v8 = (void *)sub_1A93F8010();
    v9 = objc_msgSend(v7, sel_dateFromString_, v8);

    if (v9)
    {
      sub_1A93F7368();

      v10 = sub_1A93F738C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 1, v10);
    }
    else
    {
      v13 = sub_1A93F738C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
    }
    return sub_1A9062F08((uint64_t)v6, a2, (uint64_t *)&unk_1ED2AD360);
  }
  else
  {
    v11 = sub_1A93F738C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
}

uint64_t sub_1A93AC6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t PodcastEpisodeAttributes.__allocating_init(artistName:url:subscribable:feedUrl:offers:name:itunesTitle:description:artworkOrigin:artwork:copyright:kind:fullDescription:releaseDateTime:firstAvailableDates:contentRating:websiteUrl:genreNames:mediaKind:assetUrl:durationInMilliseconds:guid:episodeNumber:seasonNumber:inLibrary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __int128 a11, __int128 a12, __int128 a13, __int128 a14, __int128 a15, __int128 a16, __int128 a17, __int128 a18, uint64_t a19, uint64_t a20,__int128 a21,__int128 a22,uint64_t a23,char a24,__int128 a25,uint64_t a26,char a27,uint64_t a28,char a29,char a30)
{
  uint64_t v32;

  v32 = swift_allocObject();
  PodcastEpisodeAttributes.init(artistName:url:subscribable:feedUrl:offers:name:itunesTitle:description:artworkOrigin:artwork:copyright:kind:fullDescription:releaseDateTime:firstAvailableDates:contentRating:websiteUrl:genreNames:mediaKind:assetUrl:durationInMilliseconds:guid:episodeNumber:seasonNumber:inLibrary:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24 & 1,
    a25,
    a26,
    a27 & 1,
    a28,
    a29 & 1,
    a30);
  return v32;
}

uint64_t PodcastEpisodeAttributes.init(artistName:url:subscribable:feedUrl:offers:name:itunesTitle:description:artworkOrigin:artwork:copyright:kind:fullDescription:releaseDateTime:firstAvailableDates:contentRating:websiteUrl:genreNames:mediaKind:assetUrl:durationInMilliseconds:guid:episodeNumber:seasonNumber:inLibrary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __int128 a11, __int128 a12, __int128 a13, __int128 a14, __int128 a15, __int128 a16, __int128 a17, __int128 a18, uint64_t a19, uint64_t a20,__int128 a21,__int128 a22,uint64_t a23,char a24,__int128 a25,uint64_t a26,char a27,uint64_t a28,char a29,char a30)
{
  uint64_t v30;
  uint64_t v37;
  uint64_t v38;

  v37 = v30 + OBJC_IVAR____TtC18PodcastsFoundation24PodcastEpisodeAttributes____lazy_storage___releaseDateResolved;
  *(_QWORD *)(v30 + 256) = 0;
  *(_QWORD *)(v30 + 264) = 0;
  v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 1, v38);
  *(_QWORD *)(v30 + 16) = a1;
  *(_QWORD *)(v30 + 24) = a2;
  *(_QWORD *)(v30 + 32) = a3;
  *(_QWORD *)(v30 + 40) = a4;
  *(_BYTE *)(v30 + 48) = a5;
  *(_QWORD *)(v30 + 56) = a6;
  *(_QWORD *)(v30 + 64) = a7;
  *(_QWORD *)(v30 + 72) = a8;
  *(_OWORD *)(v30 + 80) = a9;
  *(_OWORD *)(v30 + 96) = a10;
  *(_OWORD *)(v30 + 112) = a11;
  *(_OWORD *)(v30 + 128) = a12;
  *(_OWORD *)(v30 + 144) = a13;
  *(_OWORD *)(v30 + 160) = a14;
  *(_OWORD *)(v30 + 176) = a15;
  *(_OWORD *)(v30 + 192) = a16;
  *(_OWORD *)(v30 + 208) = a17;
  *(_OWORD *)(v30 + 224) = a18;
  *(_QWORD *)(v30 + 240) = a19;
  *(_QWORD *)(v30 + 248) = a20;
  *(_OWORD *)(v30 + 272) = a21;
  *(_OWORD *)(v30 + 288) = a22;
  *(_QWORD *)(v30 + 304) = a23;
  *(_BYTE *)(v30 + 312) = a24 & 1;
  *(_OWORD *)(v30 + 320) = a25;
  *(_QWORD *)(v30 + 336) = a26;
  *(_BYTE *)(v30 + 344) = a27 & 1;
  *(_QWORD *)(v30 + 352) = a28;
  *(_BYTE *)(v30 + 360) = a29 & 1;
  *(_BYTE *)(v30 + 361) = a30;
  return v30;
}

uint64_t sub_1A93ACAC8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A93ACB00 + 4 * byte_1A94234B0[a1]))(0x614E747369747261, 0xEA0000000000656DLL);
}

uint64_t sub_1A93ACB00()
{
  return 7107189;
}

uint64_t sub_1A93ACB10()
{
  return 0x6269726373627573;
}

uint64_t sub_1A93ACB30()
{
  return 0x6C725564656566;
}

uint64_t sub_1A93ACB48()
{
  return 0x73726566666FLL;
}

uint64_t sub_1A93ACB5C()
{
  return 1701667182;
}

uint64_t sub_1A93ACB6C()
{
  return 0x695473656E757469;
}

uint64_t sub_1A93ACB8C()
{
  return 0x7470697263736564;
}

uint64_t sub_1A93ACBAC()
{
  return 0x4F6B726F77747261;
}

uint64_t sub_1A93ACBD0()
{
  return 0x6B726F77747261;
}

uint64_t sub_1A93ACBE8()
{
  return 0x6867697279706F63;
}

uint64_t sub_1A93ACC08()
{
  return 1684957547;
}

uint64_t sub_1A93ACC18()
{
  return 0x637365446C6C7566;
}

uint64_t sub_1A93ACC3C()
{
  return 0x44657361656C6572;
}

unint64_t sub_1A93ACC60()
{
  return 0xD000000000000013;
}

uint64_t sub_1A93ACC7C()
{
  return 0x52746E65746E6F63;
}

uint64_t sub_1A93ACCA0()
{
  return 0x5565746973626577;
}

uint64_t sub_1A93ACCB8()
{
  return 0x6D614E65726E6567;
}

uint64_t sub_1A93ACCD0()
{
  return 0x4B6C656E6E616863;
}

uint64_t sub_1A93ACCF0()
{
  return 0x6E694B616964656DLL;
}

uint64_t sub_1A93ACD0C()
{
  return 0x6C72557465737361;
}

unint64_t sub_1A93ACD24()
{
  return 0xD000000000000016;
}

uint64_t sub_1A93ACD44()
{
  return 1684632935;
}

uint64_t sub_1A93ACD54()
{
  return 0x4E65646F73697065;
}

uint64_t sub_1A93ACD78()
{
  return 0x754E6E6F73616573;
}

uint64_t sub_1A93ACD98()
{
  return 0x72617262694C6E69;
}

uint64_t sub_1A93ACDB8()
{
  unsigned __int8 *v0;

  return sub_1A93ACAC8(*v0);
}

uint64_t sub_1A93ACDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93B64AC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A93ACDE4(_BYTE *a1@<X8>)
{
  *a1 = 26;
}

uint64_t sub_1A93ACDF0()
{
  sub_1A93B4BF0();
  return sub_1A93F945C();
}

uint64_t sub_1A93ACE18()
{
  sub_1A93B4BF0();
  return sub_1A93F9468();
}

uint64_t PodcastEpisodeAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A905FD54(v0 + OBJC_IVAR____TtC18PodcastsFoundation24PodcastEpisodeAttributes____lazy_storage___releaseDateResolved, &qword_1ED2A5C60);
  return v0;
}

uint64_t PodcastEpisodeAttributes.__deallocating_deinit()
{
  return sub_1A93ACF20((void (*)(void))PodcastEpisodeAttributes.deinit);
}

uint64_t sub_1A93ACF20(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t PodcastEpisodeAttributes.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF610);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B4BF0();
  sub_1A93F93D8();
  LOBYTE(v13) = 0;
  sub_1A93F8FB8();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1A93F8FB8();
    LOBYTE(v13) = 2;
    sub_1A93F8FC4();
    LOBYTE(v13) = 3;
    sub_1A93F8FB8();
    v13 = v3[9];
    v14 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4128);
    sub_1A93B4C34();
    sub_1A93F8FE8();
    LOBYTE(v13) = 5;
    sub_1A93F8FB8();
    LOBYTE(v13) = 6;
    sub_1A93F8FB8();
    v13 = v3[14];
    v14 = 7;
    type metadata accessor for ServerDescription();
    sub_1A9066CE8(&qword_1ED2A2638, v9, (uint64_t (*)(uint64_t))type metadata accessor for ServerDescription, (uint64_t)&protocol conformance descriptor for ServerDescription);
    sub_1A93F8FE8();
    LOBYTE(v13) = 8;
    sub_1A93F8FB8();
    v13 = v3[17];
    v14 = 9;
    type metadata accessor for ServerArtwork();
    sub_1A9066CE8(&qword_1ED2A1FF8, v10, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
    sub_1A93F8FE8();
    LOBYTE(v13) = 10;
    sub_1A93F8FB8();
    LOBYTE(v13) = 11;
    sub_1A93F8FB8();
    LOBYTE(v13) = 12;
    sub_1A93F8FB8();
    LOBYTE(v13) = 13;
    sub_1A93F8FB8();
    v13 = v3[26];
    v14 = 14;
    type metadata accessor for PodcastEpisodeAttributes.AvailabilityDates();
    sub_1A9066CE8(&qword_1EEABF628, v11, (uint64_t (*)(uint64_t))type metadata accessor for PodcastEpisodeAttributes.AvailabilityDates, (uint64_t)&protocol conformance descriptor for PodcastEpisodeAttributes.AvailabilityDates);
    sub_1A93F8FE8();
    LOBYTE(v13) = 15;
    sub_1A93F8FB8();
    LOBYTE(v13) = 16;
    sub_1A93F8FB8();
    v13 = v3[31];
    v14 = 17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
    sub_1A93B4AD4(&qword_1ED2A4140, &qword_1ED2AD3D8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1A93F8FE8();
    swift_beginAccess();
    v14 = 18;
    swift_bridgeObjectRetain();
    sub_1A93F8FB8();
    swift_bridgeObjectRelease();
    v14 = 19;
    sub_1A93F8FB8();
    v14 = 20;
    sub_1A93F8FB8();
    v14 = 21;
    sub_1A93F8FD0();
    v14 = 22;
    sub_1A93F8FB8();
    v14 = 23;
    sub_1A93F8FDC();
    v14 = 24;
    sub_1A93F8FDC();
    v14 = 25;
    sub_1A93F8FC4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PodcastEpisodeAttributes.__allocating_init(from:)(uint64_t a1)
{
  return sub_1A93AD594(a1, (void (*)(uint64_t))PodcastEpisodeAttributes.init(from:));
}

uint64_t sub_1A93AD594(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;

  v4 = swift_allocObject();
  a2(a1);
  return v4;
}

_QWORD *PodcastEpisodeAttributes.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v3 = v1;
  v39 = *v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A43F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v1 + 33;
  v1[32] = 0;
  v1[33] = 0;
  v9 = (char *)v1 + OBJC_IVAR____TtC18PodcastsFoundation24PodcastEpisodeAttributes____lazy_storage___releaseDateResolved;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B4BF0();
  sub_1A93F93C0();
  if (v2)
  {
    swift_bridgeObjectRelease();
    sub_1A905FD54((uint64_t)v3 + OBJC_IVAR____TtC18PodcastsFoundation24PodcastEpisodeAttributes____lazy_storage___releaseDateResolved, &qword_1ED2A5C60);
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v40) = 0;
    v3[2] = sub_1A93F8F04();
    v3[3] = v11;
    LOBYTE(v40) = 1;
    v3[4] = sub_1A93F8F04();
    v3[5] = v13;
    LOBYTE(v40) = 2;
    *((_BYTE *)v3 + 48) = sub_1A93F8F10();
    LOBYTE(v40) = 3;
    v3[7] = sub_1A93F8F04();
    v3[8] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4128);
    v41 = 4;
    sub_1A93B4CF0();
    sub_1A93F8F34();
    v3[9] = v40;
    LOBYTE(v40) = 5;
    v3[10] = sub_1A93F8F04();
    v3[11] = v15;
    LOBYTE(v40) = 6;
    v3[12] = sub_1A93F8F04();
    v3[13] = v16;
    type metadata accessor for ServerDescription();
    v41 = 7;
    sub_1A9066CE8(&qword_1ED2A2640, v17, (uint64_t (*)(uint64_t))type metadata accessor for ServerDescription, (uint64_t)&protocol conformance descriptor for ServerDescription);
    sub_1A93F8F34();
    v3[14] = v40;
    LOBYTE(v40) = 8;
    v3[15] = sub_1A93F8F04();
    v3[16] = v18;
    type metadata accessor for ServerArtwork();
    v41 = 9;
    sub_1A9066CE8(&qword_1ED2A2000, v19, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
    sub_1A93F8F34();
    v3[17] = v40;
    LOBYTE(v40) = 10;
    v3[18] = sub_1A93F8F04();
    v3[19] = v20;
    LOBYTE(v40) = 11;
    v3[20] = sub_1A93F8F04();
    v3[21] = v21;
    LOBYTE(v40) = 12;
    v3[22] = sub_1A93F8F04();
    v3[23] = v22;
    LOBYTE(v40) = 13;
    v3[24] = sub_1A93F8F04();
    v3[25] = v23;
    type metadata accessor for PodcastEpisodeAttributes.AvailabilityDates();
    v41 = 14;
    sub_1A9066CE8(&qword_1ED2A7630, v24, (uint64_t (*)(uint64_t))type metadata accessor for PodcastEpisodeAttributes.AvailabilityDates, (uint64_t)&protocol conformance descriptor for PodcastEpisodeAttributes.AvailabilityDates);
    sub_1A93F8F34();
    v3[26] = v40;
    LOBYTE(v40) = 15;
    v3[27] = sub_1A93F8F04();
    v3[28] = v25;
    LOBYTE(v40) = 16;
    v3[29] = sub_1A93F8F04();
    v3[30] = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
    v41 = 17;
    sub_1A93B4AD4(&qword_1ED2A4148, &qword_1ED2AD3D8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1A93F8F34();
    v3[31] = v40;
    LOBYTE(v40) = 18;
    v27 = sub_1A93F8F04();
    v29 = v28;
    swift_beginAccess();
    v30 = v38;
    v3[32] = v27;
    *v30 = v29;
    swift_bridgeObjectRelease();
    v41 = 19;
    v3[34] = sub_1A93F8F04();
    v3[35] = v31;
    v41 = 20;
    v3[36] = sub_1A93F8F04();
    v3[37] = v32;
    v41 = 21;
    v3[38] = sub_1A93F8F1C();
    *((_BYTE *)v3 + 312) = v33 & 1;
    v41 = 22;
    v3[40] = sub_1A93F8F04();
    v3[41] = v34;
    v41 = 23;
    v3[42] = sub_1A93F8F28();
    *((_BYTE *)v3 + 344) = v35 & 1;
    v41 = 24;
    v3[44] = sub_1A93F8F28();
    *((_BYTE *)v3 + 360) = v36 & 1;
    v41 = 25;
    LOBYTE(v27) = sub_1A93F8F10();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *((_BYTE *)v3 + 361) = v27;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1A93AE3E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A93AE418()
{
  return swift_retain();
}

uint64_t sub_1A93AE424()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A93AE454()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A93AE484()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A93AE4B4@<X0>(uint64_t a1@<X8>)
{
  return PodcastEpisodeAttributes.releaseDateResolved.getter(a1);
}

uint64_t sub_1A93AE4D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 216);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1A93AE504()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 224))
    return 0;
  swift_bridgeObjectRetain();
  v1 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  return v1 == 1;
}

uint64_t sub_1A93AE564()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 232);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A93AE594()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A93AE5A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A93AE5BC(a1, (uint64_t (*)(uint64_t))PodcastEpisodeAttributes.init(from:), a2);
}

uint64_t sub_1A93AE5BC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t result;

  v7 = swift_allocObject();
  result = a2(a1);
  if (!v3)
    *a3 = v7;
  return result;
}

uint64_t sub_1A93AE61C(_QWORD *a1)
{
  return PodcastEpisodeAttributes.encode(to:)(a1);
}

PodcastsFoundation::Kind_optional __swiftcall Kind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  PodcastsFoundation::Kind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_1A93AE69C(char *a1, char *a2)
{
  return sub_1A92F824C(*a1, *a2);
}

uint64_t sub_1A93AE6A8()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A93AE724()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A93AE77C()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::Kind_optional sub_1A93AE7F4(Swift::String *a1)
{
  return Kind.init(rawValue:)(*a1);
}

void sub_1A93AE800(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 7628135;
  if (*v1)
    v2 = 0x6269726373627573;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xE900000000000065;
  *a1 = v2;
  a1[1] = v3;
}

PodcastsFoundation::PriceType_optional __swiftcall PriceType.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  PodcastsFoundation::PriceType_optional result;
  char v4;

  v2 = v1;
  result.value = PriceType.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

PodcastsFoundation::PriceType_optional __swiftcall PriceType.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 4;
  return (PodcastsFoundation::PriceType_optional)intValue;
}

void *static PriceType.allCases.getter()
{
  return &unk_1E54D7B48;
}

uint64_t PriceType.intValue.getter()
{
  return 0;
}

uint64_t PriceType.stringValue.getter()
{
  char *v0;

  return *(_QWORD *)&aStdq_11[8 * *v0];
}

uint64_t sub_1A93AE8AC(char *a1, char *a2)
{
  return sub_1A92F7FDC(*a1, *a2);
}

uint64_t sub_1A93AE8B8()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A93AE910()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A93AE93C()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::PriceType_optional sub_1A93AE990(Swift::String *a1)
{
  return PriceType.init(rawValue:)(*a1);
}

void sub_1A93AE99C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = *(_QWORD *)&aStdq_11[8 * *v1];
  a1[1] = 0xE400000000000000;
}

void sub_1A93AE9B8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E54D7528;
}

uint64_t sub_1A93AE9C8()
{
  sub_1A93BBB0C();
  return sub_1A93F82BC();
}

uint64_t sub_1A93AEA24()
{
  sub_1A93BBB0C();
  return sub_1A93F828C();
}

uint64_t sub_1A93AEA70()
{
  char *v0;

  return *(_QWORD *)&aStdq_11[8 * *v0];
}

PodcastsFoundation::PriceType_optional sub_1A93AEA88@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  PodcastsFoundation::PriceType_optional result;
  char v5;

  result.value = PriceType.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

uint64_t sub_1A93AEABC()
{
  sub_1A93BBAC8();
  return sub_1A93F945C();
}

uint64_t sub_1A93AEAE4()
{
  sub_1A93BBAC8();
  return sub_1A93F9468();
}

PodcastsFoundation::PriceType_optional _s18PodcastsFoundation19PodcastEpisodeOfferC12typeResolvedAA9PriceTypeOSgvg_0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v2;
  v3._object = v1;
  return PriceType.init(rawValue:)(v3);
}

uint64_t sub_1A93AEB50()
{
  _BYTE *v0;

  if (*v0)
    return 1684957547;
  else
    return 1701869940;
}

uint64_t sub_1A93AEB74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93B6FE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93AEB98()
{
  sub_1A93B4D6C();
  return sub_1A93F945C();
}

uint64_t sub_1A93AEBC0()
{
  sub_1A93B4D6C();
  return sub_1A93F9468();
}

uint64_t PodcastShowOffer.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PodcastShowOffer.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A93AEC38(_QWORD *a1)
{
  return sub_1A93AEC6C(a1, &qword_1ED2A4420, (void (*)(void))sub_1A93B4D6C, (uint64_t)&type metadata for PodcastShowOffer.CodingKeys, (uint64_t)MEMORY[0x1E0DED0F0]);
}

uint64_t sub_1A93AEC6C(_QWORD *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t, uint64_t, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  char v21;
  char v22;

  v20[0] = a5;
  v7 = v5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  v13 = (void (*)(uint64_t, uint64_t, char *, uint64_t))v20[0];
  sub_1A93F93D8();
  v14 = v7[2];
  v15 = v7[3];
  v22 = 0;
  v16 = v20[1];
  v13(v14, v15, &v22, v9);
  if (!v16)
  {
    v17 = v7[4];
    v18 = v7[5];
    v21 = 1;
    v13(v17, v18, &v21, v9);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t PodcastShowOffer.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PodcastShowOffer.init(from:)(a1);
  return v2;
}

uint64_t PodcastShowOffer.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A43B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B4D6C();
  sub_1A93F93C0();
  if (v2)
  {
    type metadata accessor for PodcastShowOffer();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v16 = 0;
    *(_QWORD *)(v1 + 16) = sub_1A93F8F4C();
    *(_QWORD *)(v1 + 24) = v9;
    v15 = 1;
    v11 = sub_1A93F8F4C();
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v3 + 32) = v11;
    *(_QWORD *)(v3 + 40) = v13;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1A93AEF5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A93AEF80(a1, (void (*)(void))type metadata accessor for PodcastShowOffer, (uint64_t (*)(uint64_t))PodcastShowOffer.init(from:), a2);
}

uint64_t sub_1A93AEF80@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;

  a2();
  v8 = swift_allocObject();
  result = a3(a1);
  if (!v4)
    *a4 = v8;
  return result;
}

uint64_t sub_1A93AEFE0(_QWORD *a1)
{
  return sub_1A93AEC38(a1);
}

uint64_t sub_1A93AF004@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  swift_bridgeObjectRetain();
  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t PodcastEpisodeOffer.durationInMilliseconds.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t sub_1A93AF078()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A93AF0A0 + 4 * byte_1A94234CA[*v0]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1A93AF0A0()
{
  return 1684957547;
}

uint64_t sub_1A93AF0AC()
{
  return 0x6C7255736C68;
}

unint64_t sub_1A93AF0C0()
{
  return 0xD000000000000016;
}

uint64_t sub_1A93AF0DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93B70B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93AF100()
{
  sub_1A93B4DB0();
  return sub_1A93F945C();
}

uint64_t sub_1A93AF128()
{
  sub_1A93B4DB0();
  return sub_1A93F9468();
}

uint64_t PodcastEpisodeOffer.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PodcastEpisodeOffer.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PodcastEpisodeOffer.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF630);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B4DB0();
  sub_1A93F93D8();
  v8[15] = 0;
  sub_1A93F9000();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A93F9000();
    v8[13] = 2;
    sub_1A93F8FB8();
    v8[12] = 3;
    sub_1A93F8FD0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PodcastEpisodeOffer.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PodcastEpisodeOffer.init(from:)(a1);
  return v2;
}

_QWORD *PodcastEpisodeOffer.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;

  v3 = v1;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A43E0);
  v5 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B4DB0();
  sub_1A93F93C0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v8 = v5;
    v22 = 0;
    v9 = v18;
    v1[2] = sub_1A93F8F4C();
    v1[3] = v10;
    v21 = 1;
    v1[4] = sub_1A93F8F4C();
    v1[5] = v11;
    v20 = 2;
    v1[6] = sub_1A93F8F04();
    v1[7] = v12;
    v19 = 3;
    v14 = sub_1A93F8F1C();
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    v3[8] = v14;
    *((_BYTE *)v3 + 72) = v16 & 1;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1A93AF594@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A921568C(a1, (uint64_t (*)(uint64_t))PodcastEpisodeOffer.init(from:), a2);
}

uint64_t sub_1A93AF5B4(_QWORD *a1)
{
  return PodcastEpisodeOffer.encode(to:)(a1);
}

uint64_t PodcastEpisodeAttributes.AvailabilityDates.subscript.getter@<X0>(char *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t, uint64_t);
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[2];
  char *v43;
  char *v44;
  char *v45;

  v3 = v2;
  v45 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v42 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v42 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v42 - v14;
  v16 = sub_1A93F738C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v43 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v42 - v20;
  v22 = *a1;
  v42[1] = v3 + 24;
  swift_beginAccess();
  v23 = *(_QWORD *)(v3 + 24);
  if (*(_QWORD *)(v23 + 16) && (v24 = sub_1A912E498(v22), (v25 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v15, *(_QWORD *)(v23 + 56) + *(_QWORD *)(v17 + 72) * v24, v16);
    v26 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v26(v15, 0, 1, v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
    {
      v27 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      v27(v21, v15, v16);
      swift_endAccess();
      v28 = v45;
      v27(v45, v21, v16);
      v29 = v28;
      v30 = 0;
      return v26(v29, v30, 1, v16);
    }
  }
  else
  {
    v26 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v26(v15, 1, 1, v16);
  }
  sub_1A905FD54((uint64_t)v15, (uint64_t *)&unk_1ED2AD360);
  swift_endAccess();
  if (*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16))
  {
    sub_1A912E498(v22);
    if ((v31 & 1) != 0)
    {
      v32 = qword_1ED2A93B0;
      swift_bridgeObjectRetain();
      if (v32 != -1)
        swift_once();
      v33 = (void *)qword_1ED2A93A8;
      v34 = (void *)sub_1A93F8010();
      v35 = objc_msgSend(v33, sel_dateFromString_, v34);

      if (v35)
      {
        sub_1A93F7368();

        v36 = 0;
      }
      else
      {
        v36 = 1;
      }
      v26(v9, v36, 1, v16);
      sub_1A9062F08((uint64_t)v9, (uint64_t)v12, (uint64_t *)&unk_1ED2AD360);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) != 1)
      {
        v38 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
        v39 = v43;
        v38(v43, v12, v16);
        v40 = (uint64_t)v44;
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v44, v39, v16);
        v26((char *)v40, 0, 1, v16);
        swift_beginAccess();
        sub_1A927C3D8(v40, v22);
        swift_endAccess();
        v41 = v45;
        v38(v45, v39, v16);
        v29 = v41;
        v30 = 0;
        return v26(v29, v30, 1, v16);
      }
      sub_1A905FD54((uint64_t)v12, (uint64_t *)&unk_1ED2AD360);
    }
  }
  v29 = v45;
  v30 = 1;
  return v26(v29, v30, 1, v16);
}

uint64_t PodcastEpisodeAttributes.AvailabilityDates.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1A93B7244(a1);
}

uint64_t PodcastEpisodeAttributes.AvailabilityDates.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  v5 = *(_QWORD *)(v1 + 16);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF638);
  sub_1A93B750C();
  sub_1A93F9174();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
}

uint64_t PodcastEpisodeAttributes.AvailabilityDates.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PodcastEpisodeAttributes.AvailabilityDates.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A93AFAC0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1A93B7244(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A93AFAE8(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  v6 = *(_QWORD *)(v2 + 16);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF638);
  sub_1A93B750C();
  sub_1A93F9174();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

uint64_t sub_1A93AFB9C()
{
  return 1701667182;
}

uint64_t sub_1A93AFBAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A93F90C0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A93AFC30()
{
  sub_1A93B7578();
  return sub_1A93F945C();
}

uint64_t sub_1A93AFC58()
{
  sub_1A93B7578();
  return sub_1A93F9468();
}

uint64_t PodcastStationAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PodcastStationAttributes.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PodcastStationAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF648);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7578();
  sub_1A93F93D8();
  sub_1A93F8FB8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t PodcastStationAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PodcastStationAttributes.init(from:)(a1);
  return v2;
}

uint64_t PodcastStationAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v1;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF658);
  v5 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7578();
  sub_1A93F93C0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v8 = v14;
    v10 = sub_1A93F8F04();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v8);
    *(_QWORD *)(v3 + 16) = v10;
    *(_QWORD *)(v3 + 24) = v12;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1A93AFF28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A921568C(a1, (uint64_t (*)(uint64_t))PodcastStationAttributes.init(from:), a2);
}

uint64_t sub_1A93AFF48(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF648);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7578();
  sub_1A93F93D8();
  sub_1A93F8FB8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t PodcastRelationships.channel.getter()
{
  return swift_retain();
}

uint64_t PodcastRelationships.categories.getter()
{
  return swift_retain();
}

uint64_t sub_1A93B0040(char *a1, char *a2)
{
  return sub_1A92F9184(*a1, *a2);
}

uint64_t sub_1A93B004C()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A93B00D0()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A93B0130()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A93B01B0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1A93B020C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x69726F6765746163;
  if (*v1)
    v2 = 0x6C656E6E616863;
  v3 = 0xEA00000000007365;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A93B0250()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C656E6E616863;
  else
    return 0x69726F6765746163;
}

uint64_t sub_1A93B0290@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1A93B02F0()
{
  sub_1A93B75BC();
  return sub_1A93F945C();
}

uint64_t sub_1A93B0318()
{
  sub_1A93B75BC();
  return sub_1A93F9468();
}

uint64_t PodcastRelationships.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PodcastRelationships.init(from:)(a1);
  return v2;
}

uint64_t PodcastRelationships.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABDC0);
  v4 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B75BC();
  sub_1A93F93C0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v7 = v4;
    type metadata accessor for PodcastChannelRelationshipContainer();
    v13 = 1;
    sub_1A9066CE8(&qword_1ED2A3AF0, v8, (uint64_t (*)(uint64_t))type metadata accessor for PodcastChannelRelationshipContainer, (uint64_t)&protocol conformance descriptor for PodcastChannelRelationshipContainer);
    v9 = v12;
    sub_1A93F8F34();
    *(_QWORD *)(v1 + 16) = v14;
    type metadata accessor for PodcastCategoriesRelationshipContainer();
    v13 = 0;
    sub_1A9066CE8(&qword_1ED2AB778, v10, (uint64_t (*)(uint64_t))type metadata accessor for PodcastCategoriesRelationshipContainer, (uint64_t)&protocol conformance descriptor for PodcastCategoriesRelationshipContainer);
    sub_1A93F8F34();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v9);
    *(_QWORD *)(v1 + 24) = v14;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t PodcastRelationships.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t PodcastRelationships.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t PodcastRelationships.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF660);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B75BC();
  sub_1A93F93D8();
  v13 = *(_QWORD *)(v3 + 24);
  HIBYTE(v12) = 0;
  type metadata accessor for PodcastCategoriesRelationshipContainer();
  sub_1A9066CE8(&qword_1EEABF668, v9, (uint64_t (*)(uint64_t))type metadata accessor for PodcastCategoriesRelationshipContainer, (uint64_t)&protocol conformance descriptor for PodcastCategoriesRelationshipContainer);
  sub_1A93F8FE8();
  if (!v2)
  {
    v13 = *(_QWORD *)(v3 + 16);
    HIBYTE(v12) = 1;
    type metadata accessor for PodcastChannelRelationshipContainer();
    sub_1A9066CE8(&qword_1ED2A3AE8, v10, (uint64_t (*)(uint64_t))type metadata accessor for PodcastChannelRelationshipContainer, (uint64_t)&protocol conformance descriptor for PodcastChannelRelationshipContainer);
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A93B0740@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A921568C(a1, (uint64_t (*)(uint64_t))PodcastRelationships.init(from:), a2);
}

uint64_t sub_1A93B0760(_QWORD *a1)
{
  return PodcastRelationships.encode(to:)(a1);
}

uint64_t sub_1A93B0780@<X0>(BOOL *a1@<X8>)
{
  return sub_1A925CE60(a1);
}

uint64_t sub_1A93B078C@<X0>(BOOL *a1@<X8>)
{
  return sub_1A925CEEC(a1);
}

uint64_t sub_1A93B0798()
{
  sub_1A93B7640();
  return sub_1A93F945C();
}

uint64_t sub_1A93B07C0()
{
  sub_1A93B7640();
  return sub_1A93F9468();
}

uint64_t PodcastChannelRelationshipContainer.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PodcastChannelRelationshipContainer.init(from:)(a1);
  return v2;
}

uint64_t PodcastChannelRelationshipContainer.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v1;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A43A0);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7640();
  sub_1A93F93C0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
    v9 = (uint64_t)a1;
  }
  else
  {
    v8 = a1;
    v24 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A40E8);
    sub_1A93B7684(&qword_1ED2A40F0, &qword_1ED2A40E8, &qword_1ED2A2220, &qword_1ED2A2228);
    sub_1A93F8F34();
    v11 = v7;
    v22 = v1;
    v12 = MEMORY[0x1E0DEE9D8];
    if (v25)
      v13 = v25;
    else
      v13 = MEMORY[0x1E0DEE9D8];
    v25 = MEMORY[0x1E0DEE9D8];
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      v15 = 0;
      v16 = v24;
      v17 = (uint64_t)v8;
      do
      {
        v18 = *(void **)(v13 + 8 * v15 + 32);
        if (v18)
        {
          v19 = v18;
          MEMORY[0x1AF412004]();
          if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A93F834C();
          sub_1A93F8394();
          sub_1A93F8328();
          v16 = v24;
        }
        ++v15;
      }
      while (v14 != v15);
      swift_bridgeObjectRelease();
      v12 = v25;
    }
    else
    {
      v16 = v24;
      v17 = (uint64_t)v8;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v23);
    v20 = v22;
    *(_QWORD *)(v22 + 16) = v12;
    v3 = v20;
    v9 = v17;
  }
  __swift_destroy_boxed_opaque_existential_0(v9);
  return v3;
}

uint64_t PodcastChannelRelationshipContainer.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4408);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7640();
  sub_1A93F93D8();
  v9[1] = *(_QWORD *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A40D8);
  sub_1A93B76FC();
  sub_1A93F9030();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A93B0BA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A921568C(a1, (uint64_t (*)(uint64_t))PodcastChannelRelationshipContainer.init(from:), a2);
}

uint64_t sub_1A93B0BC0(_QWORD *a1)
{
  return PodcastChannelRelationshipContainer.encode(to:)(a1);
}

uint64_t sub_1A93B0BE0@<X0>(BOOL *a1@<X8>)
{
  return sub_1A925CE60(a1);
}

uint64_t sub_1A93B0BEC@<X0>(BOOL *a1@<X8>)
{
  return sub_1A925CEEC(a1);
}

uint64_t sub_1A93B0BF8()
{
  sub_1A93B777C();
  return sub_1A93F945C();
}

uint64_t sub_1A93B0C20()
{
  sub_1A93B777C();
  return sub_1A93F9468();
}

uint64_t PodcastCategoriesRelationshipContainer.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PodcastCategoriesRelationshipContainer.init(from:)(a1);
  return v2;
}

uint64_t PodcastCategoriesRelationshipContainer.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v1;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF670);
  v5 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B777C();
  sub_1A93F93C0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
    v9 = (uint64_t)a1;
  }
  else
  {
    v8 = a1;
    v22 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF680);
    sub_1A93B7684(&qword_1EEABF688, &qword_1EEABF680, &qword_1EEABF690, &qword_1EEABF698);
    sub_1A93F8F34();
    v20 = v1;
    v11 = MEMORY[0x1E0DEE9D8];
    if (v23)
      v12 = v23;
    else
      v12 = MEMORY[0x1E0DEE9D8];
    v23 = MEMORY[0x1E0DEE9D8];
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      swift_bridgeObjectRetain();
      v14 = 0;
      v15 = v22;
      v16 = (uint64_t)v8;
      do
      {
        if (*(_QWORD *)(v12 + 8 * v14 + 32))
        {
          v17 = swift_retain();
          MEMORY[0x1AF412004](v17);
          if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A93F834C();
          sub_1A93F8394();
          sub_1A93F8328();
          v15 = v22;
        }
        ++v14;
      }
      while (v13 != v14);
      swift_bridgeObjectRelease();
      v11 = v23;
    }
    else
    {
      v15 = v22;
      v16 = (uint64_t)v8;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v21);
    v18 = v20;
    *(_QWORD *)(v20 + 16) = v11;
    v3 = v18;
    v9 = v16;
  }
  __swift_destroy_boxed_opaque_existential_0(v9);
  return v3;
}

uint64_t PodcastCategoriesRelationshipContainer.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF6A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B777C();
  sub_1A93F93D8();
  v9[1] = *(_QWORD *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE9F8);
  sub_1A93B77C0();
  sub_1A93F9030();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A93B0FFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A921568C(a1, (uint64_t (*)(uint64_t))PodcastCategoriesRelationshipContainer.init(from:), a2);
}

uint64_t sub_1A93B101C(_QWORD *a1)
{
  return PodcastCategoriesRelationshipContainer.encode(to:)(a1);
}

uint64_t PodcastEpisodeRelationships.playbackPosition.getter()
{
  return swift_retain();
}

void *PodcastEpisodeRelationships.podcast.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

uint64_t PodcastEpisodeRelationships.transcripts.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_transcripts);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A93B110C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92F8634(*a1, *a2);
}

uint64_t sub_1A93B1118()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A93B11C4()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A93B124C()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A93B12F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A93B5358();
  *a1 = result;
  return result;
}

void sub_1A93B1320(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;

  v2 = *v1;
  v3 = 0x80000001A9441C60;
  v4 = 0xE700000000000000;
  v5 = 0x74736163646F70;
  if (v2 != 1)
  {
    v5 = 0x697263736E617274;
    v4 = 0xEB00000000737470;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0xD000000000000011;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_1A93B138C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x74736163646F70;
  if (*v0 != 1)
    v1 = 0x697263736E617274;
  if (*v0)
    return v1;
  else
    return 0xD000000000000011;
}

uint64_t sub_1A93B13F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A93B5358();
  *a1 = result;
  return result;
}

uint64_t sub_1A93B1418()
{
  sub_1A93B7840();
  return sub_1A93F945C();
}

uint64_t sub_1A93B1440()
{
  sub_1A93B7840();
  return sub_1A93F9468();
}

uint64_t PodcastEpisodeRelationships.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF6C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7840();
  sub_1A93F93D8();
  v16 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_playbackPosition);
  LOBYTE(v15) = 0;
  type metadata accessor for PodcastPlaybackPositionContainer();
  sub_1A9066CE8(&qword_1EEABF6D0, v9, (uint64_t (*)(uint64_t))type metadata accessor for PodcastPlaybackPositionContainer, (uint64_t)&protocol conformance descriptor for PodcastPlaybackPositionContainer);
  sub_1A93F8FE8();
  if (!v2)
  {
    v10 = (uint64_t *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast);
    swift_beginAccess();
    v15 = *v10;
    v14 = 1;
    type metadata accessor for PodcastRelationshipContainer();
    sub_1A9066CE8(&qword_1EEAB9618, v11, (uint64_t (*)(uint64_t))type metadata accessor for PodcastRelationshipContainer, (uint64_t)&protocol conformance descriptor for PodcastRelationshipContainer);
    sub_1A93F8FE8();
    v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_transcripts);
    v14 = 2;
    sub_1A93B78A4();
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id PodcastEpisodeRelationships.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return PodcastEpisodeRelationships.init(from:)(a1);
}

id PodcastEpisodeRelationships.init(from:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v13;
  void *v14;
  void **v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  objc_class *ObjectType;
  id *v23;
  objc_super v24;
  char v25;
  uint64_t v26;
  void *v27;

  ObjectType = (objc_class *)swift_getObjectType();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C00);
  v4 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (id *)&v1[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast];
  *(_QWORD *)&v1[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast] = 0;
  v7 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1A93B7840();
  v8 = v1;
  v20 = v6;
  sub_1A93F93C0();
  if (v2)
  {
    v11 = v23;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    v17 = *v11;

    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for PodcastPlaybackPositionContainer();
    LOBYTE(v27) = 0;
    sub_1A9066CE8(&qword_1ED2A5800, v9, (uint64_t (*)(uint64_t))type metadata accessor for PodcastPlaybackPositionContainer, (uint64_t)&protocol conformance descriptor for PodcastPlaybackPositionContainer);
    v10 = v19;
    sub_1A93F8F34();
    *(_QWORD *)&v8[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_playbackPosition] = v26;
    type metadata accessor for PodcastRelationshipContainer();
    LOBYTE(v26) = 1;
    sub_1A9066CE8(qword_1ED2A5750, v13, (uint64_t (*)(uint64_t))type metadata accessor for PodcastRelationshipContainer, (uint64_t)&protocol conformance descriptor for PodcastRelationshipContainer);
    sub_1A93F8F34();
    v14 = v27;
    v15 = v23;
    swift_beginAccess();
    v16 = *v15;
    *v15 = v14;

    v25 = 2;
    sub_1A93B78E8();
    sub_1A93F8F34();
    *(_QWORD *)&v8[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_transcripts] = v27;

    v24.receiver = v8;
    v24.super_class = ObjectType;
    v17 = objc_msgSendSuper2(&v24, sel_init);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v20, v10);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  }
  return v17;
}

uint64_t sub_1A93B19CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A92219E0(a1, (uint64_t (*)(uint64_t))PodcastEpisodeRelationships.init(from:), a2);
}

uint64_t sub_1A93B19E8(_QWORD *a1)
{
  return PodcastEpisodeRelationships.encode(to:)(a1);
}

uint64_t ServerTranscript.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_id);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerTranscript.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_type);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerTranscript.attributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9064630(v1 + OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_attributes, a1, type metadata accessor for ServerTranscript.Attributes);
}

id ServerTranscript.__allocating_init(id:type:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  char *v11;
  char *v12;
  char *v13;
  id v14;
  objc_super v16;

  v11 = (char *)objc_allocWithZone(v5);
  v12 = &v11[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_id];
  *(_QWORD *)v12 = a1;
  *((_QWORD *)v12 + 1) = a2;
  v13 = &v11[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_type];
  *(_QWORD *)v13 = a3;
  *((_QWORD *)v13 + 1) = a4;
  sub_1A9064630(a5, (uint64_t)&v11[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_attributes], type metadata accessor for ServerTranscript.Attributes);
  v16.receiver = v11;
  v16.super_class = v5;
  v14 = objc_msgSendSuper2(&v16, sel_init);
  sub_1A9064714(a5, type metadata accessor for ServerTranscript.Attributes);
  return v14;
}

id ServerTranscript.init(id:type:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  objc_class *ObjectType;
  char *v12;
  char *v13;
  id v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  v12 = &v5[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_id];
  *(_QWORD *)v12 = a1;
  *((_QWORD *)v12 + 1) = a2;
  v13 = &v5[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_type];
  *(_QWORD *)v13 = a3;
  *((_QWORD *)v13 + 1) = a4;
  sub_1A9064630(a5, (uint64_t)&v5[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_attributes], type metadata accessor for ServerTranscript.Attributes);
  v16.receiver = v5;
  v16.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v16, sel_init);
  sub_1A9064714(a5, type metadata accessor for ServerTranscript.Attributes);
  return v14;
}

uint64_t ServerTranscript.Attributes.ttmlToken.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerTranscript.Attributes.ttmlAssetUrls.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A93B1C84(type metadata accessor for ServerTranscript.Attributes, (uint64_t)type metadata accessor for ServerTranscript.Attributes.AssetUrls, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A9064630, a1);
}

uint64_t sub_1A93B1C84@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;

  v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

uint64_t ServerTranscript.Attributes.init(ttmlToken:ttmlAssetUrls:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v6 = type metadata accessor for ServerTranscript.Attributes(0);
  return sub_1A9116174(a3, (uint64_t)a4 + *(int *)(v6 + 20), type metadata accessor for ServerTranscript.Attributes.AssetUrls);
}

uint64_t ServerTranscript.Attributes.AssetUrls.ttml.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9062170(v1, a1, &qword_1ED2AD3D0);
}

uint64_t ServerTranscript.Attributes.AssetUrls.signature.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A93B1C84(type metadata accessor for ServerTranscript.Attributes.AssetUrls, (uint64_t)&qword_1ED2AD3D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A9062170, a1);
}

uint64_t ServerTranscript.Attributes.AssetUrls.init(ttml:signature:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  sub_1A9062F08(a1, a3, &qword_1ED2AD3D0);
  v5 = type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
  return sub_1A9062F08(a2, a3 + *(int *)(v5 + 20), &qword_1ED2AD3D0);
}

uint64_t sub_1A93B1DB0()
{
  _BYTE *v0;

  if (*v0)
    return 0x727574616E676973;
  else
    return 1819112564;
}

uint64_t sub_1A93B1DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93BB5D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93B1E0C()
{
  sub_1A93B7954();
  return sub_1A93F945C();
}

uint64_t sub_1A93B1E34()
{
  sub_1A93B7954();
  return sub_1A93F9468();
}

uint64_t ServerTranscript.Attributes.AssetUrls.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF6F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7954();
  sub_1A93F93D8();
  v8[15] = 0;
  sub_1A93F726C();
  sub_1A9066CE8(&qword_1EEAB7BF8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
  sub_1A93F8FE8();
  if (!v1)
  {
    type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
    v8[14] = 1;
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ServerTranscript.Attributes.AssetUrls.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char v28;
  char v29;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v4);
  v25 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v26 = (char *)&v20 - v7;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF700);
  v8 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7954();
  sub_1A93F93C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v22 = v13;
  v23 = a1;
  v21 = v11;
  v14 = v8;
  sub_1A93F726C();
  v29 = 0;
  sub_1A9066CE8(&qword_1EEAB7C30, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  v15 = (uint64_t)v26;
  v16 = v27;
  sub_1A93F8F34();
  v17 = (uint64_t)v22;
  sub_1A9062F08(v15, (uint64_t)v22, &qword_1ED2AD3D0);
  v28 = 1;
  v18 = (uint64_t)v25;
  sub_1A93F8F34();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v16);
  sub_1A9062F08(v18, v17 + *(int *)(v21 + 20), &qword_1ED2AD3D0);
  sub_1A9064630(v17, v24, type metadata accessor for ServerTranscript.Attributes.AssetUrls);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  return sub_1A9064714(v17, type metadata accessor for ServerTranscript.Attributes.AssetUrls);
}

uint64_t sub_1A93B2274@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ServerTranscript.Attributes.AssetUrls.init(from:)(a1, a2);
}

uint64_t sub_1A93B2288(_QWORD *a1)
{
  return ServerTranscript.Attributes.AssetUrls.encode(to:)(a1);
}

BOOL static ServerTranscript.Attributes.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  uint64_t v5;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1A93F90C0() & 1) == 0)
    return 0;
  v5 = *(int *)(type metadata accessor for ServerTranscript.Attributes(0) + 20);
  return _s18PodcastsFoundation16ServerTranscriptC10AttributesV9AssetUrlsV2eeoiySbAG_AGtFZ_0((uint64_t)a1 + v5, (uint64_t)a2 + v5);
}

uint64_t sub_1A93B2308()
{
  _BYTE *v0;

  if (*v0)
    return 0x657373416C6D7474;
  else
    return 0x656B6F546C6D7474;
}

uint64_t sub_1A93B2354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93BB6C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93B2378()
{
  sub_1A93B7998();
  return sub_1A93F945C();
}

uint64_t sub_1A93B23A0()
{
  sub_1A93B7998();
  return sub_1A93F9468();
}

uint64_t ServerTranscript.Attributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF708);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7998();
  sub_1A93F93D8();
  v8[15] = 0;
  sub_1A93F9000();
  if (!v1)
  {
    type metadata accessor for ServerTranscript.Attributes(0);
    v8[14] = 1;
    type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
    sub_1A9066CE8(&qword_1EEABF718, 255, type metadata accessor for ServerTranscript.Attributes.AssetUrls, (uint64_t)&protocol conformance descriptor for ServerTranscript.Attributes.AssetUrls);
    sub_1A93F9030();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ServerTranscript.Attributes.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  char v23;

  v18 = a2;
  v19 = type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
  MEMORY[0x1E0C80A78](v19);
  v20 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF720);
  v5 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ServerTranscript.Attributes(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7998();
  sub_1A93F93C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v17 = a1;
  v11 = v5;
  v13 = (uint64_t)v20;
  v12 = v21;
  v23 = 0;
  *v10 = sub_1A93F8F4C();
  v10[1] = v14;
  v22 = 1;
  sub_1A9066CE8(&qword_1EEABF728, 255, type metadata accessor for ServerTranscript.Attributes.AssetUrls, (uint64_t)&protocol conformance descriptor for ServerTranscript.Attributes.AssetUrls);
  sub_1A93F8F7C();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v12);
  sub_1A9116174(v13, (uint64_t)v10 + *(int *)(v8 + 20), type metadata accessor for ServerTranscript.Attributes.AssetUrls);
  sub_1A9064630((uint64_t)v10, v18, type metadata accessor for ServerTranscript.Attributes);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  return sub_1A9064714((uint64_t)v10, type metadata accessor for ServerTranscript.Attributes);
}

uint64_t sub_1A93B2778@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ServerTranscript.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1A93B278C(_QWORD *a1)
{
  return ServerTranscript.Attributes.encode(to:)(a1);
}

BOOL sub_1A93B27A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  BOOL v6;

  v6 = *a1 == *a2 && a1[1] == a2[1];
  return (v6 || (sub_1A93F90C0() & 1) != 0)
      && static ServerTranscript.Attributes.AssetUrls.== infix(_:_:)((uint64_t)a1 + *(int *)(a3 + 20), (uint64_t)a2 + *(int *)(a3 + 20));
}

id ServerTranscript.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ServerTranscript.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1A93B2888()
{
  sub_1A93B79DC();
  return sub_1A93F945C();
}

uint64_t sub_1A93B28B0()
{
  sub_1A93B79DC();
  return sub_1A93F9468();
}

uint64_t ServerTranscript.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF730);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B79DC();
  sub_1A93F93D8();
  v8[15] = 0;
  sub_1A93F9000();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A93F9000();
    v8[13] = 2;
    type metadata accessor for ServerTranscript.Attributes(0);
    sub_1A9066CE8(&qword_1EEABF740, 255, type metadata accessor for ServerTranscript.Attributes, (uint64_t)&protocol conformance descriptor for ServerTranscript.Attributes);
    sub_1A93F9030();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

id ServerTranscript.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ServerTranscript.init(from:)(a1);
}

id ServerTranscript.init(from:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  objc_class *ObjectType;
  uint64_t v30;
  objc_super v31;
  char v32;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = type metadata accessor for ServerTranscript.Attributes(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF748);
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1A93B79DC();
  v27 = v2;
  v11 = v30;
  sub_1A93F93C0();
  if (v11)
  {
    v24 = ObjectType;
    v16 = v27;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);

    swift_deallocPartialClassInstance();
  }
  else
  {
    v12 = (uint64_t)v6;
    v13 = v7;
    v32 = 0;
    v14 = v26;
    v15 = sub_1A93F8F4C();
    v18 = v27;
    v19 = (uint64_t *)&v27[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_id];
    *v19 = v15;
    v19[1] = v20;
    v32 = 1;
    v21 = sub_1A93F8F4C();
    v22 = (uint64_t *)&v18[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_type];
    *v22 = v21;
    v22[1] = v23;
    v32 = 2;
    sub_1A9066CE8(&qword_1EEABF750, 255, type metadata accessor for ServerTranscript.Attributes, (uint64_t)&protocol conformance descriptor for ServerTranscript.Attributes);
    sub_1A93F8F7C();
    sub_1A9116174(v12, (uint64_t)&v18[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_attributes], type metadata accessor for ServerTranscript.Attributes);

    v31.receiver = v18;
    v31.super_class = ObjectType;
    v24 = objc_msgSendSuper2(&v31, sel_init);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  }
  return v24;
}

uint64_t sub_1A93B2E00@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A92219E0(a1, (uint64_t (*)(uint64_t))ServerTranscript.init(from:), a2);
}

uint64_t sub_1A93B2E1C(_QWORD *a1)
{
  return ServerTranscript.encode(to:)(a1);
}

uint64_t PodcastRelationshipContainer.data.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A93B2E84@<X0>(BOOL *a1@<X8>)
{
  return sub_1A925CE60(a1);
}

uint64_t sub_1A93B2E90@<X0>(BOOL *a1@<X8>)
{
  return sub_1A925CEEC(a1);
}

uint64_t sub_1A93B2E9C()
{
  sub_1A93B7A20();
  return sub_1A93F945C();
}

uint64_t sub_1A93B2EC4()
{
  sub_1A93B7A20();
  return sub_1A93F9468();
}

id PodcastRelationshipContainer.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return PodcastRelationshipContainer.init(from:)(a1);
}

id PodcastRelationshipContainer.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  id v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  id v17;
  objc_class *v18;
  void *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t ObjectType;
  objc_super v24;
  uint64_t v25;

  ObjectType = swift_getObjectType();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF758);
  v4 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v22 = a1;
  v8 = __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1A93B7A20();
  v9 = v1;
  v10 = v8;
  sub_1A93F93C0();
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v20 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF768);
    sub_1A93B7684(&qword_1EEABF770, &qword_1EEABF768, &qword_1EEABF778, &qword_1EEABF780);
    sub_1A93F8F34();
    v12 = MEMORY[0x1E0DEE9D8];
    if (v25)
      v13 = v25;
    else
      v13 = MEMORY[0x1E0DEE9D8];
    v25 = MEMORY[0x1E0DEE9D8];
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      for (i = 0; i != v14; ++i)
      {
        v16 = *(void **)(v13 + 8 * i + 32);
        if (v16)
        {
          v17 = v16;
          MEMORY[0x1AF412004]();
          if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A93F834C();
          sub_1A93F8394();
          sub_1A93F8328();
        }
      }
      swift_bridgeObjectRelease();
      v12 = v25;
    }
    v18 = (objc_class *)ObjectType;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v21);
    v19 = v20;
    *(_QWORD *)&v20[OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data] = v12;

    v24.receiver = v19;
    v24.super_class = v18;
    v10 = objc_msgSendSuper2(&v24, sel_init);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  }
  return v10;
}

uint64_t PodcastRelationshipContainer.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v10;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF788);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7A20();
  sub_1A93F93D8();
  v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
  swift_beginAccess();
  v10 = *v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF790);
  sub_1A93B7A64();
  sub_1A93F9030();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A93B3350@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A92219E0(a1, (uint64_t (*)(uint64_t))PodcastRelationshipContainer.init(from:), a2);
}

uint64_t sub_1A93B336C(_QWORD *a1)
{
  return PodcastRelationshipContainer.encode(to:)(a1);
}

uint64_t PodcastPlaybackPositionContainer.data.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A93B3394()
{
  sub_1A93B7AE0();
  return sub_1A93F945C();
}

uint64_t sub_1A93B33BC()
{
  sub_1A93B7AE0();
  return sub_1A93F9468();
}

uint64_t PodcastPlaybackPositionContainer.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _s18PodcastsFoundation35PodcastChannelRelationshipContainerCfD_0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PodcastPlaybackPositionContainer.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF7A8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7AE0();
  sub_1A93F93D8();
  v9[1] = *(_QWORD *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF7B8);
  sub_1A93B7B24();
  sub_1A93F9030();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PodcastPlaybackPositionContainer.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PodcastPlaybackPositionContainer.init(from:)(a1);
  return v2;
}

uint64_t PodcastPlaybackPositionContainer.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF7D0);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7AE0();
  sub_1A93F93C0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF7B8);
    sub_1A93B7BC0();
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v4);
    *(_QWORD *)(v1 + 16) = v10;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_1A93B36D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A921568C(a1, (uint64_t (*)(uint64_t))PodcastPlaybackPositionContainer.init(from:), a2);
}

uint64_t sub_1A93B36F0(_QWORD *a1)
{
  return PodcastPlaybackPositionContainer.encode(to:)(a1);
}

uint64_t PodcastPlaybackPositionData.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastPlaybackPositionData.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastPlaybackPositionData.href.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastPlaybackPositionData.attributes.getter()
{
  return swift_retain();
}

uint64_t sub_1A93B379C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A93B37C0 + 4 * byte_1A94234CE[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1A93B37C0()
{
  return 1701869940;
}

uint64_t sub_1A93B37D0()
{
  return 1717924456;
}

uint64_t sub_1A93B37E0()
{
  return 0x7475626972747461;
}

uint64_t sub_1A93B37FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93BB7E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93B3820()
{
  sub_1A93B7C3C();
  return sub_1A93F945C();
}

uint64_t sub_1A93B3848()
{
  sub_1A93B7C3C();
  return sub_1A93F9468();
}

uint64_t PodcastPlaybackPositionData.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t PodcastPlaybackPositionData.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t PodcastPlaybackPositionData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF7E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7C3C();
  sub_1A93F93D8();
  v15 = 0;
  sub_1A93F9000();
  if (!v2)
  {
    v14 = 1;
    sub_1A93F9000();
    v13 = 2;
    sub_1A93F9000();
    v12 = *(_QWORD *)(v3 + 64);
    v11[15] = 3;
    type metadata accessor for PodcastPlaybackPositionDataAttributes();
    sub_1A9066CE8(&qword_1EEABF7F8, v9, (uint64_t (*)(uint64_t))type metadata accessor for PodcastPlaybackPositionDataAttributes, (uint64_t)&protocol conformance descriptor for PodcastPlaybackPositionDataAttributes);
    sub_1A93F9030();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PodcastPlaybackPositionData.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PodcastPlaybackPositionData.init(from:)(a1);
  return v2;
}

_QWORD *PodcastPlaybackPositionData.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  char v15;
  char v16;
  char v17;
  char v18;

  v14[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF800);
  v4 = *(_QWORD *)(v14[0] - 8);
  MEMORY[0x1E0C80A78](v14[0]);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7C3C();
  sub_1A93F93C0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v7 = v4;
    v18 = 0;
    v8 = v14[0];
    v1[2] = sub_1A93F8F4C();
    v1[3] = v9;
    v17 = 1;
    v1[4] = sub_1A93F8F4C();
    v1[5] = v10;
    v16 = 2;
    v1[6] = sub_1A93F8F4C();
    v1[7] = v11;
    type metadata accessor for PodcastPlaybackPositionDataAttributes();
    v15 = 3;
    sub_1A9066CE8(&qword_1EEABF808, v12, (uint64_t (*)(uint64_t))type metadata accessor for PodcastPlaybackPositionDataAttributes, (uint64_t)&protocol conformance descriptor for PodcastPlaybackPositionDataAttributes);
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v8);
    v1[8] = v14[1];
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_1A93B3D1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A921568C(a1, (uint64_t (*)(uint64_t))PodcastPlaybackPositionData.init(from:), a2);
}

uint64_t sub_1A93B3D3C(_QWORD *a1)
{
  return PodcastPlaybackPositionData.encode(to:)(a1);
}

double PodcastPlaybackPositionDataAttributes.positionInMilliseconds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t PodcastPlaybackPositionDataAttributes.completed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

unint64_t sub_1A93B3D6C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000013;
  if (*v0 == 1)
    v1 = 0x6574656C706D6F63;
  if (*v0)
    return v1;
  else
    return 0xD000000000000016;
}

uint64_t sub_1A93B3DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93BB96C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93B3DF4()
{
  sub_1A93B7CA0();
  return sub_1A93F945C();
}

uint64_t sub_1A93B3E1C()
{
  sub_1A93B7CA0();
  return sub_1A93F9468();
}

uint64_t PodcastPlaybackPositionDataAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PodcastPlaybackPositionDataAttributes.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PodcastPlaybackPositionDataAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF810);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7CA0();
  sub_1A93F93D8();
  v8[15] = 0;
  sub_1A93F9018();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A93F900C();
    v8[13] = 2;
    sub_1A93F8FB8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PodcastPlaybackPositionDataAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PodcastPlaybackPositionDataAttributes.init(from:)(a1);
  return v2;
}

uint64_t PodcastPlaybackPositionDataAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;

  v3 = v1;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF820);
  v5 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93B7CA0();
  sub_1A93F93C0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v8 = v5;
    v19 = 0;
    v9 = v16;
    sub_1A93F8F64();
    *(_QWORD *)(v1 + 16) = v10;
    v18 = 1;
    *(_BYTE *)(v1 + 24) = sub_1A93F8F58() & 1;
    v17 = 2;
    v12 = sub_1A93F8F04();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    *(_QWORD *)(v3 + 32) = v12;
    *(_QWORD *)(v3 + 40) = v14;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1A93B41AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A921568C(a1, (uint64_t (*)(uint64_t))PodcastPlaybackPositionDataAttributes.init(from:), a2);
}

uint64_t sub_1A93B41CC(_QWORD *a1)
{
  return PodcastPlaybackPositionDataAttributes.encode(to:)(a1);
}

uint64_t OptionalElement.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A93F8A90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t OptionalElement.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v16;
  _QWORD v17[2];
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  uint64_t v22;

  v22 = a4;
  v8 = sub_1A93F8A90();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v17[1] = a3;
  v18 = (char *)v17 - v10;
  v12 = type metadata accessor for OptionalElement(0, a2, a3, v11);
  v19 = *(_QWORD *)(v12 - 8);
  v20 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v17 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v4)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(v14, 1, 1, a2);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    sub_1A93F9108();
    v16 = v18;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(v18, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v16, v8);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v22, v14, v20);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1A93B43F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return OptionalElement.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t type metadata accessor for ServerPodcastBase()
{
  return objc_opt_self();
}

unint64_t sub_1A93B442C()
{
  unint64_t result;

  result = qword_1ED2A26F8;
  if (!qword_1ED2A26F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94263B4, &type metadata for ServerPodcastBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A26F8);
  }
  return result;
}

uint64_t type metadata accessor for PodcastAttributes(uint64_t a1)
{
  return sub_1A9062BFC(a1, (uint64_t *)&unk_1ED2A6938);
}

uint64_t type metadata accessor for PodcastRelationships()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ServerPodcast()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ServerPodcastEpisode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PodcastRelationshipContainer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PodcastEpisodeRelationships()
{
  return objc_opt_self();
}

unint64_t sub_1A93B4524()
{
  unint64_t result;

  result = qword_1ED2A2D40;
  if (!qword_1ED2A2D40)
  {
    result = MEMORY[0x1AF414014](&unk_1A9426364, &type metadata for ServerPodcastEpisode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A2D40);
  }
  return result;
}

uint64_t type metadata accessor for PodcastEpisodeAttributes(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1ED2A76E8);
}

uint64_t type metadata accessor for ServerPodcastStation()
{
  return objc_opt_self();
}

unint64_t sub_1A93B459C()
{
  unint64_t result;

  result = qword_1EEABF5F0;
  if (!qword_1EEABF5F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9426314, &type metadata for ServerPodcastStation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABF5F0);
  }
  return result;
}

uint64_t type metadata accessor for PodcastStationAttributes()
{
  return objc_opt_self();
}

unint64_t sub_1A93B4600()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EEABAF80;
  if (!qword_1EEABAF80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABAF78);
    v3 = sub_1A9066CE8(&qword_1EEABAF88, v2, (uint64_t (*)(uint64_t))type metadata accessor for ServerPodcastEpisode, (uint64_t)&protocol conformance descriptor for ServerPodcastEpisode);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEABAF80);
  }
  return result;
}

unint64_t sub_1A93B467C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EEABAFA8;
  if (!qword_1EEABAFA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABAF78);
    v3 = sub_1A9066CE8(qword_1ED2A2D58, v2, (uint64_t (*)(uint64_t))type metadata accessor for ServerPodcastEpisode, (uint64_t)&protocol conformance descriptor for ServerPodcastEpisode);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF40], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEABAFA8);
  }
  return result;
}

unint64_t sub_1A93B46F8()
{
  unint64_t result;

  result = qword_1ED2A2620;
  if (!qword_1ED2A2620)
  {
    result = MEMORY[0x1AF414014](&unk_1A94262C4, &type metadata for ServerDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A2620);
  }
  return result;
}

uint64_t type metadata accessor for ServerDescription()
{
  return objc_opt_self();
}

uint64_t _s18PodcastsFoundation13ServerArtworkC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  v5 = *(_BYTE *)(a2 + 40);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
      v5 = 1;
    if ((v5 & 1) != 0)
      return 0;
  }
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a2 + 56);
  if (v6)
  {
    if (!v7)
      return 0;
    if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48) || v6 != v7)
    {
      v8 = sub_1A93F90C0();
      result = 0;
      if ((v8 & 1) == 0)
        return result;
    }
  }
  else if (v7)
  {
    return 0;
  }
  v10 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a2 + 72);
  if (v10)
  {
    if (!v11)
      return 0;
    if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64) || v10 != v11)
    {
      v12 = sub_1A93F90C0();
      result = 0;
      if ((v12 & 1) == 0)
        return result;
    }
  }
  else if (v11)
  {
    return 0;
  }
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_QWORD *)(a2 + 88);
  if (v13)
  {
    if (!v14)
      return 0;
    if (*(_QWORD *)(a1 + 80) != *(_QWORD *)(a2 + 80) || v13 != v14)
    {
      v15 = sub_1A93F90C0();
      result = 0;
      if ((v15 & 1) == 0)
        return result;
    }
  }
  else if (v14)
  {
    return 0;
  }
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a2 + 104);
  if (v16)
  {
    if (!v17)
      return 0;
    if (*(_QWORD *)(a1 + 96) != *(_QWORD *)(a2 + 96) || v16 != v17)
    {
      v18 = sub_1A93F90C0();
      result = 0;
      if ((v18 & 1) == 0)
        return result;
    }
  }
  else if (v17)
  {
    return 0;
  }
  v19 = *(_QWORD *)(a1 + 120);
  v20 = *(_QWORD *)(a2 + 120);
  if (v19)
  {
    if (v20)
    {
      if (*(_QWORD *)(a1 + 112) != *(_QWORD *)(a2 + 112) || v19 != v20)
      {
        v21 = sub_1A93F90C0();
        result = 0;
        if ((v21 & 1) == 0)
          return result;
      }
      goto LABEL_50;
    }
    return 0;
  }
  if (v20)
    return 0;
LABEL_50:
  v22 = *(_QWORD *)(a1 + 136);
  v23 = *(_QWORD *)(a2 + 136);
  result = (v22 | v23) == 0;
  if (v22 && v23)
  {
    if (*(_QWORD *)(a1 + 128) == *(_QWORD *)(a2 + 128) && v22 == v23)
      return 1;
    else
      return sub_1A93F90C0();
  }
  return result;
}

unint64_t sub_1A93B4970()
{
  unint64_t result;

  result = qword_1ED2A1FE0;
  if (!qword_1ED2A1FE0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9426274, &type metadata for ServerArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A1FE0);
  }
  return result;
}

unint64_t sub_1A93B49B4()
{
  unint64_t result;

  result = qword_1ED2A24C8;
  if (!qword_1ED2A24C8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9426224, &type metadata for PodcastAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A24C8);
  }
  return result;
}

uint64_t type metadata accessor for ServerArtwork()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PodcastEditorialArtworkContainer()
{
  return objc_opt_self();
}

unint64_t sub_1A93B4A38()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED2A4100;
  if (!qword_1ED2A4100)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A40F8);
    v3 = sub_1A9066CE8(&qword_1ED2A2260, v2, (uint64_t (*)(uint64_t))type metadata accessor for PodcastShowOffer, (uint64_t)&protocol conformance descriptor for PodcastShowOffer);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED2A4100);
  }
  return result;
}

uint64_t type metadata accessor for PodcastShowOffer()
{
  return objc_opt_self();
}

uint64_t sub_1A93B4AD4(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x1AF414014](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A93B4B30()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED2A4108;
  if (!qword_1ED2A4108)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A40F8);
    v3 = sub_1A9066CE8(&qword_1ED2A2268, v2, (uint64_t (*)(uint64_t))type metadata accessor for PodcastShowOffer, (uint64_t)&protocol conformance descriptor for PodcastShowOffer);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF40], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED2A4108);
  }
  return result;
}

unint64_t sub_1A93B4BAC()
{
  unint64_t result;

  result = qword_1ED2A3840;
  if (!qword_1ED2A3840)
  {
    result = MEMORY[0x1AF414014](&unk_1A94261D4, &type metadata for PodcastEditorialArtworkContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A3840);
  }
  return result;
}

unint64_t sub_1A93B4BF0()
{
  unint64_t result;

  result = qword_1ED2A3160;
  if (!qword_1ED2A3160)
  {
    result = MEMORY[0x1AF414014](&unk_1A9426184, &type metadata for PodcastEpisodeAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A3160);
  }
  return result;
}

unint64_t sub_1A93B4C34()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EEABF618;
  if (!qword_1EEABF618)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A4128);
    v3 = sub_1A9066CE8(&qword_1EEABF620, v2, (uint64_t (*)(uint64_t))type metadata accessor for PodcastEpisodeOffer, (uint64_t)&protocol conformance descriptor for PodcastEpisodeOffer);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEABF618);
  }
  return result;
}

uint64_t type metadata accessor for PodcastEpisodeOffer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PodcastEpisodeAttributes.AvailabilityDates()
{
  return objc_opt_self();
}

unint64_t sub_1A93B4CF0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED2A4130;
  if (!qword_1ED2A4130)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A4128);
    v3 = sub_1A9066CE8(&qword_1ED2A29B8, v2, (uint64_t (*)(uint64_t))type metadata accessor for PodcastEpisodeOffer, (uint64_t)&protocol conformance descriptor for PodcastEpisodeOffer);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF40], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED2A4130);
  }
  return result;
}

unint64_t sub_1A93B4D6C()
{
  unint64_t result;

  result = qword_1ED2A2248;
  if (!qword_1ED2A2248)
  {
    result = MEMORY[0x1AF414014](&unk_1A9426134, &type metadata for PodcastShowOffer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A2248);
  }
  return result;
}

unint64_t sub_1A93B4DB0()
{
  unint64_t result;

  result = qword_1ED2A29A0;
  if (!qword_1ED2A29A0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94260E4, &type metadata for PodcastEpisodeOffer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A29A0);
  }
  return result;
}

BOOL _s18PodcastsFoundation16ServerTranscriptC10AttributesV9AssetUrlsV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  _BYTE *v30;
  void (*v31)(_BYTE *, uint64_t);
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v39;
  char v40;
  uint64_t v41;
  void (*v42)(_BYTE *, uint64_t);
  _BYTE v43[4];
  int v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  _BYTE *v51;

  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v46 = &v43[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABB2A8);
  MEMORY[0x1E0C80A78](v7);
  v51 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v43[-v10];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v12);
  v45 = &v43[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v49 = &v43[-v15];
  MEMORY[0x1E0C80A78](v16);
  v50 = &v43[-v17];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v43[-v19];
  MEMORY[0x1E0C80A78](v21);
  v23 = &v43[-v22];
  MEMORY[0x1E0C80A78](v24);
  v26 = &v43[-v25];
  v47 = a1;
  sub_1A9062170(a1, (uint64_t)&v43[-v25], &qword_1ED2AD3D0);
  v48 = a2;
  sub_1A9062170(a2, (uint64_t)v23, &qword_1ED2AD3D0);
  v27 = (uint64_t)&v11[*(int *)(v7 + 48)];
  sub_1A9062170((uint64_t)v26, (uint64_t)v11, &qword_1ED2AD3D0);
  sub_1A9062170((uint64_t)v23, v27, &qword_1ED2AD3D0);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v28((uint64_t)v11, 1, v4) != 1)
  {
    sub_1A9062170((uint64_t)v11, (uint64_t)v20, &qword_1ED2AD3D0);
    if (v28(v27, 1, v4) != 1)
    {
      v30 = v46;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 32))(v46, v27, v4);
      sub_1A9066CE8(&qword_1EEAB8218, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v44 = sub_1A93F8004();
      v31 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
      v31(v30, v4);
      sub_1A905FD54((uint64_t)v23, &qword_1ED2AD3D0);
      sub_1A905FD54((uint64_t)v26, &qword_1ED2AD3D0);
      v31(v20, v4);
      sub_1A905FD54((uint64_t)v11, &qword_1ED2AD3D0);
      if ((v44 & 1) == 0)
        return 0;
      goto LABEL_8;
    }
    sub_1A905FD54((uint64_t)v23, &qword_1ED2AD3D0);
    sub_1A905FD54((uint64_t)v26, &qword_1ED2AD3D0);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v20, v4);
LABEL_6:
    v29 = (uint64_t)v11;
LABEL_14:
    sub_1A905FD54(v29, &qword_1EEABB2A8);
    return 0;
  }
  sub_1A905FD54((uint64_t)v23, &qword_1ED2AD3D0);
  sub_1A905FD54((uint64_t)v26, &qword_1ED2AD3D0);
  if (v28(v27, 1, v4) != 1)
    goto LABEL_6;
  sub_1A905FD54((uint64_t)v11, &qword_1ED2AD3D0);
LABEL_8:
  v32 = type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
  v33 = v50;
  sub_1A9062170(v47 + *(int *)(v32 + 20), (uint64_t)v50, &qword_1ED2AD3D0);
  v34 = v49;
  sub_1A9062170(v48 + *(int *)(v32 + 20), (uint64_t)v49, &qword_1ED2AD3D0);
  v35 = v51;
  v36 = (uint64_t)&v51[*(int *)(v7 + 48)];
  sub_1A9062170((uint64_t)v33, (uint64_t)v51, &qword_1ED2AD3D0);
  sub_1A9062170((uint64_t)v34, v36, &qword_1ED2AD3D0);
  if (v28((uint64_t)v35, 1, v4) == 1)
  {
    sub_1A905FD54((uint64_t)v34, &qword_1ED2AD3D0);
    sub_1A905FD54((uint64_t)v33, &qword_1ED2AD3D0);
    if (v28(v36, 1, v4) == 1)
    {
      sub_1A905FD54((uint64_t)v35, &qword_1ED2AD3D0);
      return 1;
    }
    goto LABEL_13;
  }
  v37 = v45;
  sub_1A9062170((uint64_t)v35, (uint64_t)v45, &qword_1ED2AD3D0);
  if (v28(v36, 1, v4) == 1)
  {
    sub_1A905FD54((uint64_t)v34, &qword_1ED2AD3D0);
    sub_1A905FD54((uint64_t)v33, &qword_1ED2AD3D0);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v37, v4);
LABEL_13:
    v29 = (uint64_t)v35;
    goto LABEL_14;
  }
  v39 = v46;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 32))(v46, v36, v4);
  sub_1A9066CE8(&qword_1EEAB8218, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
  v40 = sub_1A93F8004();
  v41 = (uint64_t)v34;
  v42 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v42(v39, v4);
  sub_1A905FD54(v41, &qword_1ED2AD3D0);
  sub_1A905FD54((uint64_t)v33, &qword_1ED2AD3D0);
  v42(v37, v4);
  sub_1A905FD54((uint64_t)v35, &qword_1ED2AD3D0);
  return (v40 & 1) != 0;
}

uint64_t sub_1A93B5358()
{
  unint64_t v0;

  v0 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1A93B53A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A93B5560(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1717924456 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A93B5774(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365646F73697065 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A93B5910(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x647261646E617473 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74726F6873 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A93B59F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F6C6F436762 && a2 == 0xE700000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xEA00000000003172 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xEA00000000003272 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xEA00000000003372 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xEA00000000003472)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1A93B5CF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6269726373627573 && a2 == 0xEC000000656C6261 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5479616C70736964 && a2 == 0xEB00000000657079 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C725564656566 && a2 == 0xE700000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6867697279706F63 && a2 == 0xE900000000000074 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A9441C20 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x44657361656C6572 && a2 == 0xEF656D6954657461 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x52746E65746E6F63 && a2 == 0xED0000676E697461 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x5565746973626577 && a2 == 0xEA00000000006C72 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6D614E65726E6567 && a2 == 0xEA00000000007365 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x754E6E6F73616573 && a2 == 0xED0000737265626DLL || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x73726566666FLL && a2 == 0xE600000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6C6C65737075 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 17;
    else
      return 18;
  }
}

uint64_t sub_1A93B64AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6269726373627573 && a2 == 0xEC000000656C6261 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C725564656566 && a2 == 0xE700000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73726566666FLL && a2 == 0xE600000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x695473656E757469 && a2 == 0xEB00000000656C74 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x4F6B726F77747261 && a2 == 0xED00006E69676972 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6867697279706F63 && a2 == 0xE900000000000074 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x637365446C6C7566 && a2 == 0xEF6E6F6974706972 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x44657361656C6572 && a2 == 0xEF656D6954657461 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A9441CC0 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x52746E65746E6F63 && a2 == 0xED0000676E697461 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x5565746973626577 && a2 == 0xEA00000000006C72 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6D614E65726E6567 && a2 == 0xEA00000000007365 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x4B6C656E6E616863 && a2 == 0xEB00000000646E69 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x6E694B616964656DLL && a2 == 0xE900000000000064 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6C72557465737361 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A9441D40 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 1684632935 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x4E65646F73697065 && a2 == 0xED00007265626D75 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x754E6E6F73616573 && a2 == 0xEC0000007265626DLL || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x72617262694C6E69 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 25;
    else
      return 26;
  }
}

uint64_t sub_1A93B6FE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A93B70B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C7255736C68 && a2 == 0xE600000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A9441D40)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A93B7244(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _BYTE *v11;
  char v12;
  uint64_t v13;
  _BYTE *v14;
  char isUniquelyReferenced_nonNull_native;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A96C0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93BBAC8();
  sub_1A93F93C0();
  if (v1)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return v2;
  }
  else
  {
    v34 = v5;
    v35 = a1;
    v8 = 0;
    v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v10 = &unk_1E54D7000;
    v11 = &unk_1E54D7B70;
    v36 = v4;
    v37 = v7;
    while (v8 < v10[368])
    {
      v41 = v11[v8 + 32];
      v12 = v41;
      v38 = sub_1A93F8F4C();
      v39 = v13;
      v14 = v11;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v40 = v9;
      v17 = sub_1A912E498(v12);
      v18 = v9[2];
      v19 = (v16 & 1) == 0;
      v20 = v18 + v19;
      if (__OFADD__(v18, v19))
        goto LABEL_20;
      v21 = v16;
      if (v9[3] >= v20)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1A930B758();
      }
      else
      {
        sub_1A9306660(v20, isUniquelyReferenced_nonNull_native);
        v22 = sub_1A912E498(v12);
        if ((v21 & 1) != (v23 & 1))
          goto LABEL_22;
        v17 = v22;
      }
      v11 = v14;
      v9 = v40;
      if ((v21 & 1) != 0)
      {
        v24 = (uint64_t *)(v40[7] + 16 * v17);
        swift_bridgeObjectRelease();
        v25 = v39;
        *v24 = v38;
        v24[1] = v25;
      }
      else
      {
        v40[(v17 >> 6) + 8] |= 1 << v17;
        *(_BYTE *)(v9[6] + v17) = v12;
        v26 = (uint64_t *)(v9[7] + 16 * v17);
        v27 = v39;
        *v26 = v38;
        v26[1] = v27;
        v28 = v9[2];
        v29 = __OFADD__(v28, 1);
        v30 = v28 + 1;
        if (v29)
          goto LABEL_21;
        v9[2] = v30;
      }
      swift_bridgeObjectRelease();
      v10 = (_QWORD *)&unk_1E54D7000;
      if (++v8 == 4)
      {
        (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v36);
        type metadata accessor for PodcastEpisodeAttributes.AvailabilityDates();
        v2 = swift_allocObject();
        v31 = MEMORY[0x1E0DEE9E0];
        *(_QWORD *)(v2 + 16) = v9;
        *(_QWORD *)(v2 + 24) = v31;
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
        return v2;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    result = sub_1A93F9258();
    __break(1u);
  }
  return result;
}

unint64_t sub_1A93B750C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEABF640;
  if (!qword_1EEABF640)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABF638);
    v2[0] = sub_1A92890FC();
    v2[1] = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEABF640);
  }
  return result;
}

unint64_t sub_1A93B7578()
{
  unint64_t result;

  result = qword_1EEABF650;
  if (!qword_1EEABF650)
  {
    result = MEMORY[0x1AF414014](&unk_1A9426094, &type metadata for PodcastStationAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABF650);
  }
  return result;
}

unint64_t sub_1A93B75BC()
{
  unint64_t result;

  result = qword_1ED2AB1D8;
  if (!qword_1ED2AB1D8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9426044, &type metadata for PodcastRelationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2AB1D8);
  }
  return result;
}

uint64_t type metadata accessor for PodcastChannelRelationshipContainer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PodcastCategoriesRelationshipContainer()
{
  return objc_opt_self();
}

unint64_t sub_1A93B7640()
{
  unint64_t result;

  result = qword_1ED2A3AD0;
  if (!qword_1ED2A3AD0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425FF4, &type metadata for PodcastChannelRelationshipContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A3AD0);
  }
  return result;
}

uint64_t sub_1A93B7684(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = sub_1A9066D74(a3, a4, (uint64_t)&protocol conformance descriptor for OptionalElement<A>);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF40], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A93B76FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED2A40E0;
  if (!qword_1ED2A40E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A40D8);
    v2 = sub_1A9066CE8(&qword_1ED2A2100, 255, (uint64_t (*)(uint64_t))type metadata accessor for ServerChannel, (uint64_t)&protocol conformance descriptor for ServerChannel);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED2A40E0);
  }
  return result;
}

unint64_t sub_1A93B777C()
{
  unint64_t result;

  result = qword_1EEABF678;
  if (!qword_1EEABF678)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425FA4, &type metadata for PodcastCategoriesRelationshipContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABF678);
  }
  return result;
}

unint64_t sub_1A93B77C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEABF6A8;
  if (!qword_1EEABF6A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABE9F8);
    v2 = sub_1A9066CE8(&qword_1EEABF6B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for ServerCategory, (uint64_t)&protocol conformance descriptor for ServerCategory);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEABF6A8);
  }
  return result;
}

unint64_t sub_1A93B7840()
{
  unint64_t result;

  result = qword_1ED2A5718;
  if (!qword_1ED2A5718)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425F54, &type metadata for PodcastEpisodeRelationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A5718);
  }
  return result;
}

uint64_t type metadata accessor for PodcastPlaybackPositionContainer()
{
  return objc_opt_self();
}

unint64_t sub_1A93B78A4()
{
  unint64_t result;

  result = qword_1EEABF6D8;
  if (!qword_1EEABF6D8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeTranscriptContainer, &type metadata for EpisodeTranscriptContainer);
    atomic_store(result, (unint64_t *)&qword_1EEABF6D8);
  }
  return result;
}

unint64_t sub_1A93B78E8()
{
  unint64_t result;

  result = qword_1ED2A56F0;
  if (!qword_1ED2A56F0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeTranscriptContainer, &type metadata for EpisodeTranscriptContainer);
    atomic_store(result, (unint64_t *)&qword_1ED2A56F0);
  }
  return result;
}

uint64_t type metadata accessor for ServerTranscript.Attributes(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1EEABF9B0);
}

uint64_t type metadata accessor for ServerTranscript.Attributes.AssetUrls(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1EEABFA40);
}

unint64_t sub_1A93B7954()
{
  unint64_t result;

  result = qword_1EEABF6F8;
  if (!qword_1EEABF6F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425F04, &type metadata for ServerTranscript.Attributes.AssetUrls.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABF6F8);
  }
  return result;
}

unint64_t sub_1A93B7998()
{
  unint64_t result;

  result = qword_1EEABF710;
  if (!qword_1EEABF710)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425EB4, &type metadata for ServerTranscript.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABF710);
  }
  return result;
}

unint64_t sub_1A93B79DC()
{
  unint64_t result;

  result = qword_1EEABF738;
  if (!qword_1EEABF738)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425E64, &type metadata for ServerTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABF738);
  }
  return result;
}

unint64_t sub_1A93B7A20()
{
  unint64_t result;

  result = qword_1EEABF760;
  if (!qword_1EEABF760)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425E14, &type metadata for PodcastRelationshipContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABF760);
  }
  return result;
}

unint64_t sub_1A93B7A64()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EEABF798;
  if (!qword_1EEABF798)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABF790);
    v3 = sub_1A9066CE8(&qword_1EEABF7A0, v2, (uint64_t (*)(uint64_t))type metadata accessor for ServerPodcastBase, (uint64_t)&protocol conformance descriptor for ServerPodcastBase);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEABF798);
  }
  return result;
}

unint64_t sub_1A93B7AE0()
{
  unint64_t result;

  result = qword_1EEABF7B0;
  if (!qword_1EEABF7B0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425DC4, &type metadata for PodcastPlaybackPositionContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABF7B0);
  }
  return result;
}

unint64_t sub_1A93B7B24()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EEABF7C0;
  if (!qword_1EEABF7C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABF7B8);
    v3 = sub_1A9066CE8(&qword_1EEABF7C8, v2, (uint64_t (*)(uint64_t))type metadata accessor for PodcastPlaybackPositionData, (uint64_t)&protocol conformance descriptor for PodcastPlaybackPositionData);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEABF7C0);
  }
  return result;
}

uint64_t type metadata accessor for PodcastPlaybackPositionData()
{
  return objc_opt_self();
}

unint64_t sub_1A93B7BC0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EEABF7D8;
  if (!qword_1EEABF7D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABF7B8);
    v3 = sub_1A9066CE8(&qword_1EEABF7E0, v2, (uint64_t (*)(uint64_t))type metadata accessor for PodcastPlaybackPositionData, (uint64_t)&protocol conformance descriptor for PodcastPlaybackPositionData);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF40], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEABF7D8);
  }
  return result;
}

unint64_t sub_1A93B7C3C()
{
  unint64_t result;

  result = qword_1EEABF7F0;
  if (!qword_1EEABF7F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425D74, &type metadata for PodcastPlaybackPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABF7F0);
  }
  return result;
}

uint64_t type metadata accessor for PodcastPlaybackPositionDataAttributes()
{
  return objc_opt_self();
}

unint64_t sub_1A93B7CA0()
{
  unint64_t result;

  result = qword_1EEABF818;
  if (!qword_1EEABF818)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425D24, &type metadata for PodcastPlaybackPositionDataAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABF818);
  }
  return result;
}

uint64_t type metadata accessor for OptionalElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionalElement);
}

unint64_t sub_1A93B7CF4()
{
  unint64_t result;

  result = qword_1EEABF828;
  if (!qword_1EEABF828)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastAttributes.DisplayType, &type metadata for PodcastAttributes.DisplayType);
    atomic_store(result, (unint64_t *)&qword_1EEABF828);
  }
  return result;
}

unint64_t sub_1A93B7D3C()
{
  unint64_t result;

  result = qword_1EEABF830;
  if (!qword_1EEABF830)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastEpisodeAttributes.ChannelKind, &type metadata for PodcastEpisodeAttributes.ChannelKind);
    atomic_store(result, (unint64_t *)&qword_1EEABF830);
  }
  return result;
}

unint64_t sub_1A93B7D84()
{
  unint64_t result;

  result = qword_1EEABF838;
  if (!qword_1EEABF838)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastEpisodeAttributes.EpisodeType, &type metadata for PodcastEpisodeAttributes.EpisodeType);
    atomic_store(result, (unint64_t *)&qword_1EEABF838);
  }
  return result;
}

unint64_t sub_1A93B7DCC()
{
  unint64_t result;

  result = qword_1EEABF840;
  if (!qword_1EEABF840)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastEpisodeAttributes.MediaKind, &type metadata for PodcastEpisodeAttributes.MediaKind);
    atomic_store(result, (unint64_t *)&qword_1EEABF840);
  }
  return result;
}

unint64_t sub_1A93B7E14()
{
  unint64_t result;

  result = qword_1EEABF848;
  if (!qword_1EEABF848)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for Kind, &type metadata for Kind);
    atomic_store(result, (unint64_t *)&qword_1EEABF848);
  }
  return result;
}

unint64_t sub_1A93B7E5C()
{
  unint64_t result;

  result = qword_1ED2A8630;
  if (!qword_1ED2A8630)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PriceType, &type metadata for PriceType);
    atomic_store(result, (unint64_t *)&qword_1ED2A8630);
  }
  return result;
}

uint64_t sub_1A93B7EA0()
{
  return sub_1A9066D74(&qword_1EEABF850, &qword_1ED2A5B08, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1A93B7ED0()
{
  unint64_t result;

  result = qword_1ED2A8640;
  if (!qword_1ED2A8640)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PriceType, &type metadata for PriceType);
    atomic_store(result, (unint64_t *)&qword_1ED2A8640);
  }
  return result;
}

unint64_t sub_1A93B7F18()
{
  unint64_t result;

  result = qword_1ED2A8638;
  if (!qword_1ED2A8638)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PriceType, &type metadata for PriceType);
    atomic_store(result, (unint64_t *)&qword_1ED2A8638);
  }
  return result;
}

uint64_t sub_1A93B7F5C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_3Tm(a1, &OBJC_IVAR___MTServerPodcast_episodes, a2);
}

uint64_t sub_1A93B7F68(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A921FC34(a1, a2, a3, a4, &OBJC_IVAR___MTServerPodcast_episodes);
}

id sub_1A93B7F84@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1A93B7FD8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_3Tm(a1, &OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_episodes, a2);
}

uint64_t sub_1A93B7FE4(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A921FC34(a1, a2, a3, a4, &OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_episodes);
}

uint64_t sub_1A93B8000@<X0>(uint64_t a1@<X8>)
{
  return PodcastAttributes.releaseDateResolved.getter(a1);
}

uint64_t sub_1A93B8020(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A93AC448(a1, a2, a3, a4, &OBJC_IVAR____TtC18PodcastsFoundation17PodcastAttributes____lazy_storage___releaseDateResolved);
}

uint64_t sub_1A93B803C@<X0>(uint64_t a1@<X8>)
{
  return PodcastEpisodeAttributes.releaseDateResolved.getter(a1);
}

uint64_t sub_1A93B805C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A93AC448(a1, a2, a3, a4, &OBJC_IVAR____TtC18PodcastsFoundation24PodcastEpisodeAttributes____lazy_storage___releaseDateResolved);
}

uint64_t dispatch thunk of MediaObjectEpisodeBucket.episodes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MediaObjectEpisodeBucket.episodes.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of MediaObjectEpisodeBucket.episodes.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t method lookup function for ServerPodcastBase()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ServerPodcastBase.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t method lookup function for ServerPodcast()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ServerPodcast.episodes.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ServerPodcast.episodes.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ServerPodcast.episodes.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t method lookup function for ServerPodcastEpisode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ServerPodcastEpisode.relationships.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ServerPodcastEpisode.relationships.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ServerPodcastEpisode.relationships.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ServerPodcastEpisode.__allocating_init(id:type:href:attributes:relationships:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ServerPodcastEpisode.setPodcastRelationship(podcast:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ServerPodcastEpisode.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ServerPodcastEpisode.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t method lookup function for ServerPodcastStation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ServerPodcastStation.episodes.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ServerPodcastStation.episodes.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ServerPodcastStation.episodes.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ServerPodcastStation.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ServerPodcastStation.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t method lookup function for ServerDescription()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ServerDescription.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ServerDescription.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for ServerArtwork()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ServerArtwork.__allocating_init(width:height:url:bgColor:textColor1:textColor2:textColor3:textColor4:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD))(v4 + 144))(a1, a2 & 1, a3, a4 & 1);
}

uint64_t dispatch thunk of ServerArtwork.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of MediaAttributes.artistName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MediaAttributes.url.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MediaAttributes.subscribable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MediaAttributes.feedUrl.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MediaAttributes.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MediaAttributes.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of MediaAttributes.artwork.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of MediaAttributes.copyright.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of MediaAttributes.kind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of MediaAttributes.releaseDateTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of MediaAttributes.releaseDateResolved.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of MediaAttributes.contentRating.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of MediaAttributes.contentRatingResolved.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))() & 1;
}

uint64_t dispatch thunk of MediaAttributes.websiteUrl.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of MediaAttributes.genreNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_1A93B83C4()
{
  return type metadata accessor for PodcastAttributes(0);
}

void sub_1A93B83CC()
{
  unint64_t v0;

  sub_1A93B849C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for PodcastAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PodcastAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

void sub_1A93B849C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED2A5C68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED2AD360);
    v0 = sub_1A93F8A90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED2A5C68);
  }
}

ValueMetadata *type metadata accessor for PodcastAttributes.DisplayType()
{
  return &type metadata for PodcastAttributes.DisplayType;
}

uint64_t method lookup function for PodcastEditorialArtworkContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A93B8514()
{
  return type metadata accessor for PodcastEpisodeAttributes(0);
}

void sub_1A93B851C()
{
  unint64_t v0;

  sub_1A93B849C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for PodcastEpisodeAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PodcastEpisodeAttributes.__allocating_init(artistName:url:subscribable:feedUrl:offers:name:itunesTitle:description:artworkOrigin:artwork:copyright:kind:fullDescription:releaseDateTime:firstAvailableDates:contentRating:websiteUrl:genreNames:mediaKind:assetUrl:durationInMilliseconds:guid:episodeNumber:seasonNumber:inLibrary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 296))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t dispatch thunk of PodcastEpisodeAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

ValueMetadata *type metadata accessor for PodcastEpisodeAttributes.ChannelKind()
{
  return &type metadata for PodcastEpisodeAttributes.ChannelKind;
}

ValueMetadata *type metadata accessor for PodcastEpisodeAttributes.EpisodeType()
{
  return &type metadata for PodcastEpisodeAttributes.EpisodeType;
}

ValueMetadata *type metadata accessor for PodcastEpisodeAttributes.MediaKind()
{
  return &type metadata for PodcastEpisodeAttributes.MediaKind;
}

ValueMetadata *type metadata accessor for Kind()
{
  return &type metadata for Kind;
}

ValueMetadata *type metadata accessor for PriceType()
{
  return &type metadata for PriceType;
}

uint64_t method lookup function for PodcastShowOffer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PodcastShowOffer.typeResolved.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of PodcastShowOffer.kindResolved.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of PodcastShowOffer.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of PodcastShowOffer.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t method lookup function for PodcastEpisodeOffer()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for PodcastEpisodeAttributes.AvailabilityDates()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for PodcastStationAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PodcastStationAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for PodcastRelationships()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PodcastRelationships.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for PodcastChannelRelationshipContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for PodcastCategoriesRelationshipContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for PodcastEpisodeRelationships()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A93B8814()
{
  return type metadata accessor for ServerTranscript(0);
}

uint64_t type metadata accessor for ServerTranscript(uint64_t a1)
{
  return sub_1A9062BFC(a1, (uint64_t *)&unk_1EEABF948);
}

uint64_t sub_1A93B8830()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ServerTranscript.Attributes(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ServerTranscript()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ServerTranscript.__allocating_init(id:type:attributes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ServerTranscript.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t *initializeBufferWithCopyOfBuffer for ServerTranscript.Attributes(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1A93F726C();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    v14 = *(int *)(type metadata accessor for ServerTranscript.Attributes.AssetUrls(0) + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    if (v11(v16, 1, v9))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for ServerTranscript.Attributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = v4 + *(int *)(type metadata accessor for ServerTranscript.Attributes.AssetUrls(0) + 20);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return result;
}

_QWORD *initializeWithCopy for ServerTranscript.Attributes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1A93F726C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  v12 = *(int *)(type metadata accessor for ServerTranscript.Attributes.AssetUrls(0) + 20);
  v13 = &v6[v12];
  v14 = &v7[v12];
  if (v10(v14, 1, v8))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v14, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithCopy for ServerTranscript.Attributes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F726C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(type metadata accessor for ServerTranscript.Attributes.AssetUrls(0) + 20);
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = v11(v16, 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for ServerTranscript.Attributes(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  v11 = *(int *)(type metadata accessor for ServerTranscript.Attributes.AssetUrls(0) + 20);
  v12 = &v5[v11];
  v13 = &v6[v11];
  if (v9(v13, 1, v7))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v13, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for ServerTranscript.Attributes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = *(int *)(type metadata accessor for ServerTranscript.Attributes.AssetUrls(0) + 20);
  v17 = &v8[v16];
  v18 = &v9[v16];
  v19 = v12(v17, 1, v10);
  v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v17, v18, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerTranscript.Attributes()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A93B9130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ServerTranscript.Attributes()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A93B91B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A93B922C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ServerTranscript.Attributes.AssetUrls(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ServerTranscript.Attributes.AssetUrls()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A93B92AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ServerTranscript.Attributes.AssetUrls()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A93B92F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t method lookup function for PodcastRelationshipContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for PodcastPlaybackPositionContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for PodcastPlaybackPositionData()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for PodcastPlaybackPositionDataAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A93B936C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F8A90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A93B93D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_1A93B94B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return result;
}

void *sub_1A93B950C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1A93B95A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

void *sub_1A93B9684(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1A93B971C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

uint64_t sub_1A93B97FC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v7);
      if (v10)
        goto LABEL_15;
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2)
          goto LABEL_24;
LABEL_8:
        v10 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_24;
LABEL_15:
        v12 = (v10 - 1) << v9;
        if (v7 > 3)
          v12 = 0;
        if ((_DWORD)v7)
        {
          if (v7 <= 3)
            v13 = v7;
          else
            v13 = 4;
          __asm { BR              X12 }
        }
        return v6 + v12 + 1;
      }
      v10 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_24:
  if (v5 < 2)
    return 0;
  v14 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

void sub_1A93B993C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (v8)
  {
    v10 = *(_QWORD *)(v7 + 64);
  }
  else
  {
    v9 = 0;
    v10 = *(_QWORD *)(v7 + 64) + 1;
  }
  v11 = a3 >= v9;
  v12 = a3 - v9;
  if (v12 != 0 && v11)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_14;
      goto LABEL_21;
    }
    v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_14:
        v14 = ~v9 + a2;
        if (v10 < 4)
        {
          if ((_DWORD)v10)
          {
            v15 = v14 & ~(-1 << (8 * v10));
            bzero(a1, v10);
            if ((_DWORD)v10 == 3)
            {
              *a1 = v15;
              *((_BYTE *)a1 + 2) = BYTE2(v15);
            }
            else if ((_DWORD)v10 == 2)
            {
              *a1 = v15;
            }
            else
            {
              *(_BYTE *)a1 = v15;
            }
          }
        }
        else
        {
          bzero(a1, v10);
          *(_DWORD *)a1 = v14;
        }
        __asm { BR              X10 }
      }
LABEL_21:
      __asm { BR              X11 }
    }
    if (v13 >= 0x100)
      v6 = 2;
    else
      v6 = v13 > 1;
  }
  if (v9 < a2)
    goto LABEL_14;
  goto LABEL_21;
}

void sub_1A93B9AE4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1A93B9AEC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

ValueMetadata *type metadata accessor for PodcastPlaybackPositionDataAttributes.CodingKeys()
{
  return &type metadata for PodcastPlaybackPositionDataAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastPlaybackPositionData.CodingKeys()
{
  return &type metadata for PodcastPlaybackPositionData.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastPlaybackPositionContainer.CodingKeys()
{
  return &type metadata for PodcastPlaybackPositionContainer.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastRelationshipContainer.CodingKeys()
{
  return &type metadata for PodcastRelationshipContainer.CodingKeys;
}

ValueMetadata *type metadata accessor for ServerTranscript.CodingKeys()
{
  return &type metadata for ServerTranscript.CodingKeys;
}

ValueMetadata *type metadata accessor for ServerTranscript.Attributes.CodingKeys()
{
  return &type metadata for ServerTranscript.Attributes.CodingKeys;
}

ValueMetadata *type metadata accessor for ServerTranscript.Attributes.AssetUrls.CodingKeys()
{
  return &type metadata for ServerTranscript.Attributes.AssetUrls.CodingKeys;
}

uint64_t _s18PodcastsFoundation17PodcastAttributesC11DisplayTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A93B9BD0 + 4 * byte_1A94234E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A93B9C04 + 4 * byte_1A94234E0[v4]))();
}

uint64_t sub_1A93B9C04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93B9C0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93B9C14);
  return result;
}

uint64_t sub_1A93B9C20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93B9C28);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A93B9C2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93B9C34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PodcastEpisodeRelationships.CodingKeys()
{
  return &type metadata for PodcastEpisodeRelationships.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastCategoriesRelationshipContainer.CodingKeys()
{
  return &type metadata for PodcastCategoriesRelationshipContainer.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastChannelRelationshipContainer.CodingKeys()
{
  return &type metadata for PodcastChannelRelationshipContainer.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastRelationships.CodingKeys()
{
  return &type metadata for PodcastRelationships.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastStationAttributes.CodingKeys()
{
  return &type metadata for PodcastStationAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastEpisodeOffer.CodingKeys()
{
  return &type metadata for PodcastEpisodeOffer.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastShowOffer.CodingKeys()
{
  return &type metadata for PodcastShowOffer.CodingKeys;
}

uint64_t getEnumTagSinglePayload for PodcastEpisodeAttributes.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE7)
    goto LABEL_17;
  if (a2 + 25 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 25) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 25;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 25;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 25;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v8 = v6 - 26;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastEpisodeAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_1A93B9D8C + 4 * byte_1A94234EF[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_1A93B9DC0 + 4 * byte_1A94234EA[v4]))();
}

uint64_t sub_1A93B9DC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93B9DC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93B9DD0);
  return result;
}

uint64_t sub_1A93B9DDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93B9DE4);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_1A93B9DE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93B9DF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PodcastEpisodeAttributes.CodingKeys()
{
  return &type metadata for PodcastEpisodeAttributes.CodingKeys;
}

uint64_t _s18PodcastsFoundation32PodcastPlaybackPositionContainerC10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A93B9E4C + 4 * byte_1A94234F4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A93B9E6C + 4 * byte_1A94234F9[v4]))();
}

_BYTE *sub_1A93B9E4C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A93B9E6C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A93B9E74(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A93B9E7C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A93B9E84(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A93B9E8C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PodcastEditorialArtworkContainer.CodingKeys()
{
  return &type metadata for PodcastEditorialArtworkContainer.CodingKeys;
}

uint64_t getEnumTagSinglePayload for PodcastAttributes.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1A93B9F84 + 4 * byte_1A9423503[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1A93B9FB8 + 4 * byte_1A94234FE[v4]))();
}

uint64_t sub_1A93B9FB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93B9FC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93B9FC8);
  return result;
}

uint64_t sub_1A93B9FD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93B9FDCLL);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1A93B9FE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93B9FE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PodcastAttributes.CodingKeys()
{
  return &type metadata for PodcastAttributes.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ServerArtwork.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A93BA050 + 4 * byte_1A942350D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A93BA084 + 4 * byte_1A9423508[v4]))();
}

uint64_t sub_1A93BA084(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93BA08C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93BA094);
  return result;
}

uint64_t sub_1A93BA0A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93BA0A8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A93BA0AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93BA0B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerArtwork.CodingKeys()
{
  return &type metadata for ServerArtwork.CodingKeys;
}

uint64_t _s18PodcastsFoundation4KindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A93BA11C + 4 * byte_1A9423517[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A93BA150 + 4 * byte_1A9423512[v4]))();
}

uint64_t sub_1A93BA150(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93BA158(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93BA160);
  return result;
}

uint64_t sub_1A93BA16C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93BA174);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A93BA178(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93BA180(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerDescription.CodingKeys()
{
  return &type metadata for ServerDescription.CodingKeys;
}

ValueMetadata *type metadata accessor for ServerPodcastStation.CodingKeys()
{
  return &type metadata for ServerPodcastStation.CodingKeys;
}

uint64_t _s18PodcastsFoundation24PodcastEpisodeAttributesC9MediaKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A93BA1F8 + 4 * byte_1A9423521[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A93BA22C + 4 * byte_1A942351C[v4]))();
}

uint64_t sub_1A93BA22C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93BA234(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93BA23CLL);
  return result;
}

uint64_t sub_1A93BA248(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93BA250);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A93BA254(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93BA25C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerPodcastEpisode.CodingKeys()
{
  return &type metadata for ServerPodcastEpisode.CodingKeys;
}

uint64_t _s18PodcastsFoundation9PriceTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A93BA2C4 + 4 * byte_1A942352B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A93BA2F8 + 4 * byte_1A9423526[v4]))();
}

uint64_t sub_1A93BA2F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93BA300(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93BA308);
  return result;
}

uint64_t sub_1A93BA314(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93BA31CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A93BA320(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93BA328(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerPodcastBase.CodingKeys()
{
  return &type metadata for ServerPodcastBase.CodingKeys;
}

unint64_t sub_1A93BA348()
{
  unint64_t result;

  result = qword_1EEABFB30;
  if (!qword_1EEABFB30)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424C94, &type metadata for ServerPodcastBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFB30);
  }
  return result;
}

unint64_t sub_1A93BA390()
{
  unint64_t result;

  result = qword_1EEABFB38;
  if (!qword_1EEABFB38)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424D4C, &type metadata for ServerPodcastEpisode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFB38);
  }
  return result;
}

unint64_t sub_1A93BA3D8()
{
  unint64_t result;

  result = qword_1EEABFB40;
  if (!qword_1EEABFB40)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424E04, &type metadata for ServerPodcastStation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFB40);
  }
  return result;
}

unint64_t sub_1A93BA420()
{
  unint64_t result;

  result = qword_1EEABFB48;
  if (!qword_1EEABFB48)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424EBC, &type metadata for ServerDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFB48);
  }
  return result;
}

unint64_t sub_1A93BA468()
{
  unint64_t result;

  result = qword_1EEABFB50;
  if (!qword_1EEABFB50)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424F74, &type metadata for ServerArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFB50);
  }
  return result;
}

unint64_t sub_1A93BA4B0()
{
  unint64_t result;

  result = qword_1EEABFB58;
  if (!qword_1EEABFB58)
  {
    result = MEMORY[0x1AF414014](&unk_1A942502C, &type metadata for PodcastAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFB58);
  }
  return result;
}

unint64_t sub_1A93BA4F8()
{
  unint64_t result;

  result = qword_1EEABFB60;
  if (!qword_1EEABFB60)
  {
    result = MEMORY[0x1AF414014](&unk_1A942511C, &type metadata for PodcastEditorialArtworkContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFB60);
  }
  return result;
}

unint64_t sub_1A93BA540()
{
  unint64_t result;

  result = qword_1EEABFB68;
  if (!qword_1EEABFB68)
  {
    result = MEMORY[0x1AF414014](&unk_1A94251D4, &type metadata for PodcastEpisodeAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFB68);
  }
  return result;
}

unint64_t sub_1A93BA588()
{
  unint64_t result;

  result = qword_1EEABFB70;
  if (!qword_1EEABFB70)
  {
    result = MEMORY[0x1AF414014](&unk_1A942528C, &type metadata for PodcastShowOffer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFB70);
  }
  return result;
}

unint64_t sub_1A93BA5D0()
{
  unint64_t result;

  result = qword_1EEABFB78;
  if (!qword_1EEABFB78)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425344, &type metadata for PodcastEpisodeOffer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFB78);
  }
  return result;
}

unint64_t sub_1A93BA618()
{
  unint64_t result;

  result = qword_1EEABFB80;
  if (!qword_1EEABFB80)
  {
    result = MEMORY[0x1AF414014](&unk_1A94253FC, &type metadata for PodcastStationAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFB80);
  }
  return result;
}

unint64_t sub_1A93BA660()
{
  unint64_t result;

  result = qword_1EEABFB88;
  if (!qword_1EEABFB88)
  {
    result = MEMORY[0x1AF414014](&unk_1A94254EC, &type metadata for PodcastRelationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFB88);
  }
  return result;
}

unint64_t sub_1A93BA6A8()
{
  unint64_t result;

  result = qword_1EEABFB90;
  if (!qword_1EEABFB90)
  {
    result = MEMORY[0x1AF414014](&unk_1A94255DC, &type metadata for PodcastChannelRelationshipContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFB90);
  }
  return result;
}

unint64_t sub_1A93BA6F0()
{
  unint64_t result;

  result = qword_1EEABFB98;
  if (!qword_1EEABFB98)
  {
    result = MEMORY[0x1AF414014](&unk_1A94256CC, &type metadata for PodcastCategoriesRelationshipContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFB98);
  }
  return result;
}

unint64_t sub_1A93BA738()
{
  unint64_t result;

  result = qword_1EEABFBA0;
  if (!qword_1EEABFBA0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94257BC, &type metadata for PodcastEpisodeRelationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFBA0);
  }
  return result;
}

unint64_t sub_1A93BA780()
{
  unint64_t result;

  result = qword_1EEABFBA8;
  if (!qword_1EEABFBA8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425874, &type metadata for ServerTranscript.Attributes.AssetUrls.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFBA8);
  }
  return result;
}

unint64_t sub_1A93BA7C8()
{
  unint64_t result;

  result = qword_1EEABFBB0;
  if (!qword_1EEABFBB0)
  {
    result = MEMORY[0x1AF414014](&unk_1A942592C, &type metadata for ServerTranscript.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFBB0);
  }
  return result;
}

unint64_t sub_1A93BA810()
{
  unint64_t result;

  result = qword_1EEABFBB8;
  if (!qword_1EEABFBB8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94259E4, &type metadata for ServerTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFBB8);
  }
  return result;
}

unint64_t sub_1A93BA858()
{
  unint64_t result;

  result = qword_1EEABFBC0;
  if (!qword_1EEABFBC0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425AD4, &type metadata for PodcastRelationshipContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFBC0);
  }
  return result;
}

unint64_t sub_1A93BA8A0()
{
  unint64_t result;

  result = qword_1EEABFBC8;
  if (!qword_1EEABFBC8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425B8C, &type metadata for PodcastPlaybackPositionContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFBC8);
  }
  return result;
}

unint64_t sub_1A93BA8E8()
{
  unint64_t result;

  result = qword_1EEABFBD0;
  if (!qword_1EEABFBD0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425C44, &type metadata for PodcastPlaybackPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFBD0);
  }
  return result;
}

unint64_t sub_1A93BA930()
{
  unint64_t result;

  result = qword_1EEABFBD8;
  if (!qword_1EEABFBD8)
  {
    result = MEMORY[0x1AF414014]("}c\r<", &type metadata for PodcastPlaybackPositionDataAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFBD8);
  }
  return result;
}

unint64_t sub_1A93BA978()
{
  unint64_t result;

  result = qword_1EEABFBE0;
  if (!qword_1EEABFBE0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425C6C, &type metadata for PodcastPlaybackPositionDataAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFBE0);
  }
  return result;
}

unint64_t sub_1A93BA9C0()
{
  unint64_t result;

  result = qword_1EEABFBE8;
  if (!qword_1EEABFBE8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425C94, &type metadata for PodcastPlaybackPositionDataAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFBE8);
  }
  return result;
}

unint64_t sub_1A93BAA08()
{
  unint64_t result;

  result = qword_1EEABFBF0;
  if (!qword_1EEABFBF0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425BB4, &type metadata for PodcastPlaybackPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFBF0);
  }
  return result;
}

unint64_t sub_1A93BAA50()
{
  unint64_t result;

  result = qword_1EEABFBF8;
  if (!qword_1EEABFBF8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425BDC, &type metadata for PodcastPlaybackPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFBF8);
  }
  return result;
}

unint64_t sub_1A93BAA98()
{
  unint64_t result;

  result = qword_1EEABFC00;
  if (!qword_1EEABFC00)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425AFC, &type metadata for PodcastPlaybackPositionContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC00);
  }
  return result;
}

unint64_t sub_1A93BAAE0()
{
  unint64_t result;

  result = qword_1EEABFC08;
  if (!qword_1EEABFC08)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425B24, &type metadata for PodcastPlaybackPositionContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC08);
  }
  return result;
}

unint64_t sub_1A93BAB28()
{
  unint64_t result;

  result = qword_1EEABFC10;
  if (!qword_1EEABFC10)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425A0C, &type metadata for PodcastRelationshipContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC10);
  }
  return result;
}

unint64_t sub_1A93BAB70()
{
  unint64_t result;

  result = qword_1EEABFC18;
  if (!qword_1EEABFC18)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425A34, &type metadata for PodcastRelationshipContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC18);
  }
  return result;
}

unint64_t sub_1A93BABB8()
{
  unint64_t result;

  result = qword_1EEABFC20;
  if (!qword_1EEABFC20)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425954, &type metadata for ServerTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC20);
  }
  return result;
}

unint64_t sub_1A93BAC00()
{
  unint64_t result;

  result = qword_1EEABFC28;
  if (!qword_1EEABFC28)
  {
    result = MEMORY[0x1AF414014](&unk_1A942597C, &type metadata for ServerTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC28);
  }
  return result;
}

unint64_t sub_1A93BAC48()
{
  unint64_t result;

  result = qword_1EEABFC30;
  if (!qword_1EEABFC30)
  {
    result = MEMORY[0x1AF414014](&unk_1A942589C, &type metadata for ServerTranscript.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC30);
  }
  return result;
}

unint64_t sub_1A93BAC90()
{
  unint64_t result;

  result = qword_1EEABFC38;
  if (!qword_1EEABFC38)
  {
    result = MEMORY[0x1AF414014](&unk_1A94258C4, &type metadata for ServerTranscript.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC38);
  }
  return result;
}

unint64_t sub_1A93BACD8()
{
  unint64_t result;

  result = qword_1EEABFC40;
  if (!qword_1EEABFC40)
  {
    result = MEMORY[0x1AF414014](&unk_1A94257E4, &type metadata for ServerTranscript.Attributes.AssetUrls.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC40);
  }
  return result;
}

unint64_t sub_1A93BAD20()
{
  unint64_t result;

  result = qword_1EEABFC48;
  if (!qword_1EEABFC48)
  {
    result = MEMORY[0x1AF414014](&unk_1A942580C, &type metadata for ServerTranscript.Attributes.AssetUrls.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC48);
  }
  return result;
}

unint64_t sub_1A93BAD68()
{
  unint64_t result;

  result = qword_1ED2A5728;
  if (!qword_1ED2A5728)
  {
    result = MEMORY[0x1AF414014](&unk_1A94256F4, &type metadata for PodcastEpisodeRelationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A5728);
  }
  return result;
}

unint64_t sub_1A93BADB0()
{
  unint64_t result;

  result = qword_1ED2A5720;
  if (!qword_1ED2A5720)
  {
    result = MEMORY[0x1AF414014](&unk_1A942571C, &type metadata for PodcastEpisodeRelationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A5720);
  }
  return result;
}

unint64_t sub_1A93BADF8()
{
  unint64_t result;

  result = qword_1EEABFC50;
  if (!qword_1EEABFC50)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425604, &type metadata for PodcastCategoriesRelationshipContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC50);
  }
  return result;
}

unint64_t sub_1A93BAE40()
{
  unint64_t result;

  result = qword_1EEABFC58;
  if (!qword_1EEABFC58)
  {
    result = MEMORY[0x1AF414014](&unk_1A942562C, &type metadata for PodcastCategoriesRelationshipContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC58);
  }
  return result;
}

unint64_t sub_1A93BAE88()
{
  unint64_t result;

  result = qword_1ED2A3AE0;
  if (!qword_1ED2A3AE0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425514, &type metadata for PodcastChannelRelationshipContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A3AE0);
  }
  return result;
}

unint64_t sub_1A93BAED0()
{
  unint64_t result;

  result = qword_1ED2A3AD8;
  if (!qword_1ED2A3AD8)
  {
    result = MEMORY[0x1AF414014](&unk_1A942553C, &type metadata for PodcastChannelRelationshipContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A3AD8);
  }
  return result;
}

unint64_t sub_1A93BAF18()
{
  unint64_t result;

  result = qword_1ED2AB1E8;
  if (!qword_1ED2AB1E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425424, &type metadata for PodcastRelationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2AB1E8);
  }
  return result;
}

unint64_t sub_1A93BAF60()
{
  unint64_t result;

  result = qword_1ED2AB1E0;
  if (!qword_1ED2AB1E0)
  {
    result = MEMORY[0x1AF414014](&unk_1A942544C, &type metadata for PodcastRelationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2AB1E0);
  }
  return result;
}

unint64_t sub_1A93BAFA8()
{
  unint64_t result;

  result = qword_1EEABFC60;
  if (!qword_1EEABFC60)
  {
    result = MEMORY[0x1AF414014](&unk_1A942536C, &type metadata for PodcastStationAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC60);
  }
  return result;
}

unint64_t sub_1A93BAFF0()
{
  unint64_t result;

  result = qword_1EEABFC68;
  if (!qword_1EEABFC68)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425394, &type metadata for PodcastStationAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC68);
  }
  return result;
}

unint64_t sub_1A93BB038()
{
  unint64_t result;

  result = qword_1ED2A29B0;
  if (!qword_1ED2A29B0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94252B4, &type metadata for PodcastEpisodeOffer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A29B0);
  }
  return result;
}

unint64_t sub_1A93BB080()
{
  unint64_t result;

  result = qword_1ED2A29A8;
  if (!qword_1ED2A29A8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94252DC, &type metadata for PodcastEpisodeOffer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A29A8);
  }
  return result;
}

unint64_t sub_1A93BB0C8()
{
  unint64_t result;

  result = qword_1ED2A2258;
  if (!qword_1ED2A2258)
  {
    result = MEMORY[0x1AF414014](&unk_1A94251FC, &type metadata for PodcastShowOffer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A2258);
  }
  return result;
}

unint64_t sub_1A93BB110()
{
  unint64_t result;

  result = qword_1ED2A2250;
  if (!qword_1ED2A2250)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425224, &type metadata for PodcastShowOffer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A2250);
  }
  return result;
}

unint64_t sub_1A93BB158()
{
  unint64_t result;

  result = qword_1ED2A3170;
  if (!qword_1ED2A3170)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425144, &type metadata for PodcastEpisodeAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A3170);
  }
  return result;
}

unint64_t sub_1A93BB1A0()
{
  unint64_t result;

  result = qword_1ED2A3168;
  if (!qword_1ED2A3168)
  {
    result = MEMORY[0x1AF414014](&unk_1A942516C, &type metadata for PodcastEpisodeAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A3168);
  }
  return result;
}

unint64_t sub_1A93BB1E8()
{
  unint64_t result;

  result = qword_1ED2A3850;
  if (!qword_1ED2A3850)
  {
    result = MEMORY[0x1AF414014](&unk_1A9425054, &type metadata for PodcastEditorialArtworkContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A3850);
  }
  return result;
}

unint64_t sub_1A93BB230()
{
  unint64_t result;

  result = qword_1ED2A3848;
  if (!qword_1ED2A3848)
  {
    result = MEMORY[0x1AF414014](&unk_1A942507C, &type metadata for PodcastEditorialArtworkContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A3848);
  }
  return result;
}

unint64_t sub_1A93BB278()
{
  unint64_t result;

  result = qword_1ED2A24D8;
  if (!qword_1ED2A24D8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424F9C, &type metadata for PodcastAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A24D8);
  }
  return result;
}

unint64_t sub_1A93BB2C0()
{
  unint64_t result;

  result = qword_1ED2A24D0;
  if (!qword_1ED2A24D0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424FC4, &type metadata for PodcastAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A24D0);
  }
  return result;
}

unint64_t sub_1A93BB308()
{
  unint64_t result;

  result = qword_1ED2A1FF0;
  if (!qword_1ED2A1FF0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424EE4, &type metadata for ServerArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A1FF0);
  }
  return result;
}

unint64_t sub_1A93BB350()
{
  unint64_t result;

  result = qword_1ED2A1FE8;
  if (!qword_1ED2A1FE8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424F0C, &type metadata for ServerArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A1FE8);
  }
  return result;
}

unint64_t sub_1A93BB398()
{
  unint64_t result;

  result = qword_1ED2A2630;
  if (!qword_1ED2A2630)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424E2C, &type metadata for ServerDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A2630);
  }
  return result;
}

unint64_t sub_1A93BB3E0()
{
  unint64_t result;

  result = qword_1ED2A2628;
  if (!qword_1ED2A2628)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424E54, &type metadata for ServerDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A2628);
  }
  return result;
}

unint64_t sub_1A93BB428()
{
  unint64_t result;

  result = qword_1EEABFC70;
  if (!qword_1EEABFC70)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424D74, &type metadata for ServerPodcastStation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC70);
  }
  return result;
}

unint64_t sub_1A93BB470()
{
  unint64_t result;

  result = qword_1EEABFC78;
  if (!qword_1EEABFC78)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424D9C, &type metadata for ServerPodcastStation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFC78);
  }
  return result;
}

unint64_t sub_1A93BB4B8()
{
  unint64_t result;

  result = qword_1ED2A2D50;
  if (!qword_1ED2A2D50)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424CBC, &type metadata for ServerPodcastEpisode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A2D50);
  }
  return result;
}

unint64_t sub_1A93BB500()
{
  unint64_t result;

  result = qword_1ED2A2D48;
  if (!qword_1ED2A2D48)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424CE4, &type metadata for ServerPodcastEpisode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A2D48);
  }
  return result;
}

unint64_t sub_1A93BB548()
{
  unint64_t result;

  result = qword_1ED2A2708;
  if (!qword_1ED2A2708)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424C04, &type metadata for ServerPodcastBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A2708);
  }
  return result;
}

unint64_t sub_1A93BB590()
{
  unint64_t result;

  result = qword_1ED2A2700;
  if (!qword_1ED2A2700)
  {
    result = MEMORY[0x1AF414014](&unk_1A9424C2C, &type metadata for ServerPodcastBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A2700);
  }
  return result;
}

uint64_t sub_1A93BB5D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1819112564 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x727574616E676973 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A93BB6C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656B6F546C6D7474 && a2 == 0xE90000000000006ELL;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657373416C6D7474 && a2 == 0xED0000736C725574)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A93BB7E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1717924456 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A93BB96C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001A9441D70 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A9441D90)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1A93BBAC8()
{
  unint64_t result;

  result = qword_1ED2A8648;
  if (!qword_1ED2A8648)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PriceType, &type metadata for PriceType);
    atomic_store(result, (unint64_t *)&qword_1ED2A8648);
  }
  return result;
}

unint64_t sub_1A93BBB0C()
{
  unint64_t result;

  result = qword_1ED2A5860;
  if (!qword_1ED2A5860)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PriceType, &type metadata for PriceType);
    atomic_store(result, (unint64_t *)&qword_1ED2A5860);
  }
  return result;
}

unint64_t sub_1A93BBB50()
{
  unint64_t result;

  result = qword_1EEABFC80;
  if (!qword_1EEABFC80)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastEpisodeAttributes.MediaKind, &type metadata for PodcastEpisodeAttributes.MediaKind);
    atomic_store(result, (unint64_t *)&qword_1EEABFC80);
  }
  return result;
}

uint64_t dispatch thunk of ServerPodcastBase.__allocating_init(from:)()
{
  return dispatch thunk of PodcastShowOffer.__allocating_init(from:)();
}

uint64_t dispatch thunk of PodcastEditorialArtworkContainer.__allocating_init(from:)()
{
  return dispatch thunk of PodcastStationAttributes.__allocating_init(from:)();
}

uint64_t dispatch thunk of PodcastChannelRelationshipContainer.__allocating_init(from:)()
{
  return dispatch thunk of PodcastStationAttributes.__allocating_init(from:)();
}

uint64_t dispatch thunk of PodcastCategoriesRelationshipContainer.__allocating_init(from:)()
{
  return dispatch thunk of PodcastStationAttributes.__allocating_init(from:)();
}

uint64_t dispatch thunk of PodcastEpisodeRelationships.__allocating_init(from:)()
{
  return dispatch thunk of ServerDescription.__allocating_init(from:)();
}

uint64_t dispatch thunk of PodcastEpisodeOffer.__allocating_init(from:)()
{
  return dispatch thunk of ServerTranscript.__allocating_init(from:)();
}

uint64_t dispatch thunk of PodcastRelationshipContainer.__allocating_init(from:)()
{
  return dispatch thunk of PodcastStationAttributes.__allocating_init(from:)();
}

uint64_t dispatch thunk of PodcastPlaybackPositionContainer.__allocating_init(from:)()
{
  return dispatch thunk of PodcastStationAttributes.__allocating_init(from:)();
}

uint64_t dispatch thunk of PodcastPlaybackPositionData.__allocating_init(from:)()
{
  return dispatch thunk of ServerTranscript.__allocating_init(from:)();
}

uint64_t dispatch thunk of PodcastPlaybackPositionDataAttributes.__allocating_init(from:)()
{
  return dispatch thunk of ServerDescription.__allocating_init(from:)();
}

id FairPlayInvalidationManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t FairPlayInvalidationManager.invalidateFairPlayKey(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  ObjectType = swift_getObjectType();
  v8 = sub_1A93F7D58();
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A93F7DB8();
  v11 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v3 + OBJC_IVAR___PFFairPlayInvalidationManager_internalQueue);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a1;
  v15[6] = ObjectType;
  aBlock[4] = sub_1A93BDDF8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_82;
  v16 = _Block_copy(aBlock);
  swift_retain();
  sub_1A90858C0(a2);
  sub_1A93F7D88();
  v21 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v13, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
  swift_release();
  return swift_release();
}

void sub_1A93BBF2C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(uint64_t, void (*)(void *, char), _QWORD *, uint64_t, uint64_t);
  char *v24;
  void *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;

  v9 = a1 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x1AF41420C](v9);
  if (v10)
  {
    v11 = (char *)v10;
    if (qword_1ED2A8890 != -1)
      swift_once();
    v12 = sub_1A93F7698();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A8878);
    v13 = sub_1A93F7674();
    v14 = sub_1A93F8790();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v27 = a5;
      v16 = swift_slowAlloc();
      v28 = v16;
      *(_DWORD *)v15 = 136315651;
      sub_1A906436C(0xD000000000000031, 0x80000001A9450C30, &v28);
      sub_1A93F8AA8();
      *(_WORD *)(v15 + 12) = 2160;
      sub_1A93F8AA8();
      *(_WORD *)(v15 + 22) = 2081;
      v17 = sub_1A93F9060();
      sub_1A906436C(v17, v18, &v28);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v13, v14, "%s Invalidating keys for adamId: %{private,mask.hash}s", (uint8_t *)v15, 0x20u);
      swift_arrayDestroy();
      v19 = v16;
      a5 = v27;
      MEMORY[0x1AF41411C](v19, -1, -1);
      MEMORY[0x1AF41411C](v15, -1, -1);
    }

    v20 = *(_QWORD *)&v11[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher + 24];
    v21 = *(_QWORD *)&v11[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher + 32];
    __swift_project_boxed_opaque_existential_1(&v11[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher], v20);
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v11;
    v22[3] = a2;
    v22[4] = a3;
    v22[5] = a4;
    v22[6] = a5;
    v23 = *(void (**)(uint64_t, void (*)(void *, char), _QWORD *, uint64_t, uint64_t))(v21 + 8);
    v24 = v11;
    sub_1A90858C0((uint64_t)a2);
    v23(a4, sub_1A93BEB90, v22, v20, v21);

    swift_release();
  }
  else if (a2)
  {
    sub_1A93BEAA0();
    v25 = (void *)swift_allocError();
    *v26 = 0;
    a2();

  }
}

void sub_1A93BC21C(id a1, char a2, uint64_t a3, void (*a4)(id), uint64_t a5, uint64_t a6)
{
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t aBlock[6];
  uint64_t v22;

  if ((a2 & 1) != 0)
  {
    if (!a4)
      goto LABEL_9;
    v11 = a1;
    a4(a1);
    v12 = a1;
  }
  else
  {
    v9 = *(void **)(a3 + OBJC_IVAR___PFFairPlayInvalidationManager_keyLoader);
    if (a4)
    {
      aBlock[4] = (uint64_t)a4;
      aBlock[5] = a5;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1A90BF160;
      aBlock[3] = (uint64_t)&block_descriptor_41_3;
      v10 = _Block_copy(aBlock);
      sub_1A92B89B0(a1);
      sub_1A90858C0((uint64_t)a4);
      swift_release();
    }
    else
    {
      v13 = a1;
      v10 = 0;
    }
    objc_msgSend(v9, sel_stopKeyRequestWithAsset_completion_, a1, v10);
    _Block_release(v10);
    v12 = a1;
  }
  sub_1A91B8E14(v12);
LABEL_9:
  if (qword_1ED2A8890 != -1)
    swift_once();
  v14 = sub_1A93F7698();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A8878);
  v15 = sub_1A93F7674();
  v16 = sub_1A93F8790();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    aBlock[0] = v18;
    *(_DWORD *)v17 = 136315651;
    v22 = sub_1A906436C(0xD000000000000031, 0x80000001A9450C30, aBlock);
    sub_1A93F8AA8();
    *(_WORD *)(v17 + 12) = 2160;
    v22 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v17 + 22) = 2081;
    v22 = a6;
    v19 = sub_1A93F9060();
    v22 = sub_1A906436C(v19, v20, aBlock);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v15, v16, "%s Finished invalidating keys for adamId: %{private,mask.hash}s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v18, -1, -1);
    MEMORY[0x1AF41411C](v17, -1, -1);
  }

}

uint64_t FairPlayInvalidationManager.markAllFairPlayKeysForInvalidation(shouldRemove:completion:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  ObjectType = swift_getObjectType();
  v8 = sub_1A93F7D58();
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A93F7DB8();
  v11 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v3 + OBJC_IVAR___PFFairPlayInvalidationManager_internalQueue);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = a2;
  *(_QWORD *)(v15 + 32) = a3;
  *(_BYTE *)(v15 + 40) = a1;
  *(_QWORD *)(v15 + 48) = ObjectType;
  aBlock[4] = sub_1A93BE484;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_10_7;
  v16 = _Block_copy(aBlock);
  swift_retain();
  sub_1A90858C0(a2);
  sub_1A93F7D88();
  v21 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v13, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
  swift_release();
  return swift_release();
}

void sub_1A93BC868(uint64_t a1, void (*a2)(void), uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(void (*)(_QWORD *, char), uint64_t, uint64_t, uint64_t);
  char *v23;
  void *v24;
  _BYTE *v25;
  char v26;
  uint64_t v27;

  v9 = a1 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x1AF41420C](v9);
  if (v10)
  {
    v11 = (char *)v10;
    if (qword_1ED2A8890 != -1)
      swift_once();
    v12 = sub_1A93F7698();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A8878);
    v13 = sub_1A93F7674();
    v14 = sub_1A93F8790();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v26 = a4;
      v16 = a5;
      v17 = swift_slowAlloc();
      v27 = v17;
      *(_DWORD *)v15 = 136315138;
      sub_1A906436C(0xD000000000000031, 0x80000001A9450C30, &v27);
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v13, v14, "%s Invalidating all FairPlay keys.", v15, 0xCu);
      swift_arrayDestroy();
      v18 = v17;
      a5 = v16;
      a4 = v26;
      MEMORY[0x1AF41411C](v18, -1, -1);
      MEMORY[0x1AF41411C](v15, -1, -1);
    }

    v19 = *(_QWORD *)&v11[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher + 24];
    v20 = *(_QWORD *)&v11[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher + 32];
    __swift_project_boxed_opaque_existential_1(&v11[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher], v19);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = a2;
    *(_QWORD *)(v21 + 24) = a3;
    *(_QWORD *)(v21 + 32) = v11;
    *(_BYTE *)(v21 + 40) = a4 & 1;
    *(_QWORD *)(v21 + 48) = a5;
    v22 = *(void (**)(void (*)(_QWORD *, char), uint64_t, uint64_t, uint64_t))(v20 + 32);
    sub_1A90858C0((uint64_t)a2);
    v23 = v11;
    v22(sub_1A93BEB30, v21, v19, v20);

    swift_release();
  }
  else if (a2)
  {
    sub_1A93BEAA0();
    v24 = (void *)swift_allocError();
    *v25 = 0;
    a2();

  }
}

void sub_1A93BCAE8(_QWORD *a1, char a2, void (*a3)(_QWORD *), uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(_BYTE *, char *, uint64_t);
  char v30;
  void (*v31)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  _BYTE v49[12];
  int v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_QWORD);
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;

  v11 = sub_1A93F726C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v49[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v15);
  v17 = &v49[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a2 & 1) != 0)
  {
    v32 = a1;
    if (qword_1ED2A8890 != -1)
      swift_once();
    v33 = sub_1A93F7698();
    __swift_project_value_buffer(v33, (uint64_t)qword_1ED2A8878);
    v34 = a1;
    v35 = a1;
    v36 = sub_1A93F7674();
    v37 = sub_1A93F879C();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc();
      v39 = a1;
      v40 = swift_slowAlloc();
      v56 = v40;
      *(_DWORD *)v38 = 136315394;
      v55 = sub_1A906436C(0xD000000000000031, 0x80000001A9450C30, &v56);
      sub_1A93F8AA8();
      *(_WORD *)(v38 + 12) = 2082;
      swift_getErrorValue();
      v41 = sub_1A93F927C();
      v55 = sub_1A906436C(v41, v42, &v56);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A909CFC0(v39, 1);
      sub_1A909CFC0(v39, 1);
      _os_log_impl(&dword_1A904E000, v36, v37, "%s Unable to fetch downloaded FairPlay episodes with error: %{public}s.", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      v43 = v40;
      a1 = v39;
      MEMORY[0x1AF41411C](v43, -1, -1);
      MEMORY[0x1AF41411C](v38, -1, -1);

      if (!a3)
        goto LABEL_18;
    }
    else
    {
      sub_1A909CFC0(a1, 1);
      sub_1A909CFC0(a1, 1);

      if (!a3)
      {
LABEL_18:
        sub_1A909CFC0(a1, 1);
        return;
      }
    }
    v44 = a1;
    a3(a1);
    sub_1A909CFC0(a1, 1);
    goto LABEL_18;
  }
  v50 = a6;
  v53 = (void (*)(_QWORD))a3;
  v18 = qword_1ED2A8890;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = sub_1A93F7698();
  v51 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED2A8878);
  v20 = sub_1A93F7674();
  v21 = sub_1A93F8790();
  v22 = os_log_type_enabled(v20, v21);
  v52 = a4;
  v54 = a1;
  if (v22)
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v56 = v24;
    *(_DWORD *)v23 = 136315138;
    v55 = sub_1A906436C(0xD000000000000031, 0x80000001A9450C30, &v56);
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v20, v21, "%s Fetched downloaded FairPlay data. Marking to invalidate keys.", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v24, -1, -1);
    v25 = v23;
    a1 = v54;
    MEMORY[0x1AF41411C](v25, -1, -1);
  }

  v26 = a1[2];
  if (v26)
  {
    v27 = (char *)a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v28 = *(_QWORD *)(v12 + 72);
    v29 = *(void (**)(_BYTE *, char *, uint64_t))(v12 + 16);
    v30 = v50 & 1;
    while (1)
    {
      v29(v17, v27, v11);
      v31 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v31(v17, 0, 1, v11);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11) == 1)
        break;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v14, v17, v11);
      _s18PodcastsFoundation27FairPlayInvalidationManagerC010markKeyForE02at12shouldRemovey0B03URLV_SbtF_0((uint64_t)v14, v30);
      (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
      v27 += v28;
      if (!--v26)
        goto LABEL_20;
    }
  }
  else
  {
    v31 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v12 + 56);
LABEL_20:
    v31(v17, 1, 1, v11);
  }
  sub_1A909CFC0(v54, 0);
  v45 = sub_1A93F7674();
  v46 = sub_1A93F8790();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc();
    v48 = swift_slowAlloc();
    v56 = v48;
    *(_DWORD *)v47 = 136315138;
    v55 = sub_1A906436C(0xD000000000000031, 0x80000001A9450C30, &v56);
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v45, v46, "%s Finished marking all FairPlay keys for invalidation.", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v48, -1, -1);
    MEMORY[0x1AF41411C](v47, -1, -1);
  }

  if (v53)
    v53(0);
}

uint64_t FairPlayInvalidationManager.removalAllFairPlayKeys(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  ObjectType = swift_getObjectType();
  v6 = sub_1A93F7D58();
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7DB8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(_QWORD *)(v2 + OBJC_IVAR___PFFairPlayInvalidationManager_internalQueue);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a1;
  v14[4] = a2;
  v14[5] = ObjectType;
  aBlock[4] = sub_1A93BE4A0;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_17_6;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1A90858C0(a1);
  sub_1A93F7D88();
  v19 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v12, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_release();
  return swift_release();
}

void sub_1A93BD3DC(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(void (*)(unint64_t, char), _QWORD *, uint64_t, uint64_t);
  char *v19;
  void *v20;
  _BYTE *v21;
  uint64_t v22;

  v7 = a1 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1AF41420C](v7);
  if (v8)
  {
    v9 = (char *)v8;
    if (qword_1ED2A8890 != -1)
      swift_once();
    v10 = sub_1A93F7698();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A8878);
    v11 = sub_1A93F7674();
    v12 = sub_1A93F8790();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v22 = v14;
      *(_DWORD *)v13 = 136315138;
      sub_1A906436C(0xD000000000000031, 0x80000001A9450C30, &v22);
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v11, v12, "%s Removing all FairPlay keys.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v14, -1, -1);
      MEMORY[0x1AF41411C](v13, -1, -1);
    }

    v15 = *(_QWORD *)&v9[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher + 24];
    v16 = *(_QWORD *)&v9[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher + 32];
    __swift_project_boxed_opaque_existential_1(&v9[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher], v15);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v9;
    v17[3] = a2;
    v17[4] = a3;
    v17[5] = a4;
    v18 = *(void (**)(void (*)(unint64_t, char), _QWORD *, uint64_t, uint64_t))(v16 + 16);
    v19 = v9;
    sub_1A90858C0((uint64_t)a2);
    v18(sub_1A93BEAEC, v17, v15, v16);

    swift_release();
  }
  else if (a2)
  {
    sub_1A93BEAA0();
    v20 = (void *)swift_allocError();
    *v21 = 0;
    a2();

  }
}

void sub_1A93BD63C(unint64_t a1, char a2, uint64_t a3, void (*a4)(unint64_t))
{
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;

  if ((a2 & 1) != 0)
  {
    v10 = (id)a1;
    if (qword_1ED2A8890 != -1)
      swift_once();
    v11 = sub_1A93F7698();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED2A8878);
    v12 = (id)a1;
    v13 = (id)a1;
    v14 = sub_1A93F7674();
    v15 = sub_1A93F879C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v21 = v17;
      *(_DWORD *)v16 = 136315394;
      sub_1A906436C(0xD000000000000031, 0x80000001A9450C30, &v21);
      sub_1A93F8AA8();
      *(_WORD *)(v16 + 12) = 2082;
      swift_getErrorValue();
      v18 = sub_1A93F927C();
      sub_1A906436C(v18, v19, &v21);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A909CFC0((id)a1, 1);
      sub_1A909CFC0((id)a1, 1);
      _os_log_impl(&dword_1A904E000, v14, v15, "%s Unable to remove all FairPlay keys with error %{public}s.", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v17, -1, -1);
      MEMORY[0x1AF41411C](v16, -1, -1);

      if (!a4)
        goto LABEL_17;
    }
    else
    {
      sub_1A909CFC0((id)a1, 1);
      sub_1A909CFC0((id)a1, 1);

      if (!a4)
      {
LABEL_17:
        sub_1A909CFC0((id)a1, 1);
        return;
      }
    }
    v20 = (id)a1;
    a4(a1);
    sub_1A909CFC0((id)a1, 1);
    goto LABEL_17;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1A93F8E5C();
    if (!v6)
      goto LABEL_19;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v6)
      goto LABEL_19;
  }
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v8 = (id)MEMORY[0x1AF4129DC](i, a1);
    else
      v8 = *(id *)(a1 + 8 * i + 32);
    v9 = v8;

  }
LABEL_19:
  sub_1A909CFC0((id)a1, 0);
  if (a4)
    a4(0);
}

id FairPlayInvalidationManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1A93BDACC(void *a1, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char *v10;
  void *v11;
  objc_class *v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  objc_class *v17;
  char *v18;
  id v19;
  id v20;
  char *v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  objc_class *ObjectType;
  objc_super v29;
  objc_super v30;
  _QWORD v31[5];
  objc_super v32;

  v26 = a1;
  v27 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v25 = sub_1A93F885C();
  v4 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F8808();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v9);
  v24 = OBJC_IVAR___PFFairPlayInvalidationManager_internalQueue;
  v23[1] = sub_1A9066C6C();
  v10 = a3;
  sub_1A93F7D7C();
  v31[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v8, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D0], v25);
  v11 = (void *)sub_1A93F888C();
  *(_QWORD *)&a3[v24] = v11;
  v12 = (objc_class *)type metadata accessor for DispatchingFairPlayKeyLoading();
  v13 = (char *)objc_allocWithZone(v12);
  v14 = v26;
  *(_QWORD *)&v13[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance] = v26;
  *(_QWORD *)&v13[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_responseQueue] = v11;
  v32.receiver = v13;
  v32.super_class = v12;
  v15 = v11;
  v16 = v14;
  *(_QWORD *)&v10[OBJC_IVAR___PFFairPlayInvalidationManager_keyLoader] = objc_msgSendSuper2(&v32, sel_init);
  v31[3] = type metadata accessor for CoreDataFairPlayEpisodeDataFetcher();
  v31[4] = &off_1E54F44F0;
  v31[0] = v27;
  v17 = (objc_class *)type metadata accessor for DispatchingFairPlayEpisodeDataFetching();
  v18 = (char *)objc_allocWithZone(v17);
  sub_1A905DC3C((uint64_t)v31, (uint64_t)&v18[OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance]);
  *(_QWORD *)&v18[OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_responseQueue] = v15;
  v30.receiver = v18;
  v30.super_class = v17;
  v19 = v15;
  swift_retain();
  v20 = objc_msgSendSuper2(&v30, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);

  v21 = &v10[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher];
  *((_QWORD *)v21 + 3) = v17;
  *((_QWORD *)v21 + 4) = &off_1E54ED678;
  *(_QWORD *)v21 = v20;

  v29.receiver = v10;
  v29.super_class = ObjectType;
  return objc_msgSendSuper2(&v29, sel_init);
}

uint64_t sub_1A93BDDCC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A93BDDF0()
{
  return objectdestroy_2Tm_3();
}

void sub_1A93BDDF8()
{
  uint64_t v0;

  sub_1A93BBF2C(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void _s18PodcastsFoundation27FairPlayInvalidationManagerC010markKeyForE02at12shouldRemovey0B03URLV_SbtF_0(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v3 = sub_1A93F7218();
  v5 = v4;
  if (qword_1ED2A8890 != -1)
    swift_once();
  v6 = sub_1A93F7698();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A8878);
  swift_bridgeObjectRetain_n();
  v7 = sub_1A93F7674();
  v8 = sub_1A93F87B4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v29 = v10;
    *(_DWORD *)v9 = 136315651;
    sub_1A906436C(0xD000000000000031, 0x80000001A9450C30, &v29);
    sub_1A93F8AA8();
    *(_WORD *)(v9 + 12) = 2160;
    sub_1A93F8AA8();
    *(_WORD *)(v9 + 22) = 2081;
    swift_bridgeObjectRetain();
    sub_1A906436C(v3, v5, &v29);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v7, v8, "%s Invalidating FairPlay key at: %{private,mask.hash}s.", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v10, -1, -1);
    MEMORY[0x1AF41411C](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = (void *)objc_opt_self();
  v12 = (void *)sub_1A93F8010();

  if ((a2 & 1) != 0)
  {
    v13 = objc_allocWithZone(MEMORY[0x1E0DDBF68]);
    swift_bridgeObjectRetain();
    v14 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v13, sel_initWithPath_, v14);

    swift_bridgeObjectRetain_n();
    v16 = sub_1A93F7674();
    v17 = sub_1A93F87B4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v29 = v19;
      *(_DWORD *)v18 = 136315651;
      sub_1A906436C(0xD000000000000031, 0x80000001A9450C30, &v29);
      sub_1A93F8AA8();
      *(_WORD *)(v18 + 12) = 2160;
      sub_1A93F8AA8();
      *(_WORD *)(v18 + 22) = 2081;
      swift_bridgeObjectRetain();
      sub_1A906436C(v3, v5, &v29);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A904E000, v16, v17, "%s Removing key from %{private,mask.hash}s.", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v19, -1, -1);
      MEMORY[0x1AF41411C](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v20 = objc_msgSend(v15, sel_removeAllKeys);
    if (v20)
    {
      v21 = v20;
      swift_bridgeObjectRetain();
      v22 = v21;
      v23 = sub_1A93F7674();
      v24 = sub_1A93F879C();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = swift_slowAlloc();
        v26 = swift_slowAlloc();
        v29 = v26;
        *(_DWORD *)v25 = 136315907;
        sub_1A906436C(0xD000000000000031, 0x80000001A9450C30, &v29);
        sub_1A93F8AA8();
        *(_WORD *)(v25 + 12) = 2160;
        sub_1A93F8AA8();
        *(_WORD *)(v25 + 22) = 2081;
        swift_bridgeObjectRetain();
        sub_1A906436C(v3, v5, &v29);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v25 + 32) = 2082;
        swift_getErrorValue();
        v27 = sub_1A93F927C();
        sub_1A906436C(v27, v28, &v29);
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v23, v24, "%s Unable to remove key from %{private,mask.hash}s with error: %{public}s.", (uint8_t *)v25, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v26, -1, -1);
        MEMORY[0x1AF41411C](v25, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      swift_bridgeObjectRelease();

    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A93BE47C()
{
  return objectdestroy_2Tm_3();
}

void sub_1A93BE484()
{
  uint64_t v0;

  sub_1A93BC868(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1A93BE498()
{
  return objectdestroy_2Tm_3();
}

void sub_1A93BE4A0()
{
  uint64_t v0;

  sub_1A93BD3DC(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t _s18PodcastsFoundation27FairPlayInvalidationManagerC9removeKey3fors5Error_pSgAA0cD5AssetC_tF_0(void *a1)
{
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v28;

  if (qword_1ED2A8890 != -1)
    swift_once();
  v2 = sub_1A93F7698();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A8878);
  v3 = a1;
  v4 = sub_1A93F7674();
  v5 = sub_1A93F8790();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v28 = v7;
    *(_DWORD *)v6 = 136315651;
    sub_1A906436C(0xD000000000000031, 0x80000001A9450C30, &v28);
    sub_1A93F8AA8();
    *(_WORD *)(v6 + 12) = 2160;
    sub_1A93F8AA8();
    *(_WORD *)(v6 + 22) = 2049;
    sub_1A93F8AA8();

    _os_log_impl(&dword_1A904E000, v4, v5, "%s Removing FairPlay key for %{private,mask.hash}lld.", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v7, -1, -1);
    MEMORY[0x1AF41411C](v6, -1, -1);

  }
  else
  {

  }
  if (*(_QWORD *)&v3[OBJC_IVAR___PFFairPlayAsset_keyStore]
    && (objc_opt_self(), (v8 = swift_dynamicCastObjCClass()) != 0))
  {
    v9 = (void *)v8;
    swift_unknownObjectRetain();
    v10 = objc_msgSend(v9, sel_removeAllKeys);
    v11 = (uint64_t)v10;
    if (v10)
    {
      v12 = v10;
      v13 = v3;
      v14 = v12;
      v15 = sub_1A93F7674();
      v16 = sub_1A93F8790();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v18 = swift_slowAlloc();
        v28 = v18;
        *(_DWORD *)v17 = 136315907;
        sub_1A906436C(0xD000000000000031, 0x80000001A9450C30, &v28);
        sub_1A93F8AA8();
        *(_WORD *)(v17 + 12) = 2160;
        sub_1A93F8AA8();
        *(_WORD *)(v17 + 22) = 2049;
        sub_1A93F8AA8();

        *(_WORD *)(v17 + 32) = 2082;
        swift_getErrorValue();
        v19 = sub_1A93F927C();
        sub_1A906436C(v19, v20, &v28);
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v15, v16, "%s Unable to remove FairPlay key for %{private,mask.hash}lld with error %{public}s.", (uint8_t *)v17, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v18, -1, -1);
        MEMORY[0x1AF41411C](v17, -1, -1);

      }
      else
      {

      }
    }
    swift_unknownObjectRelease();
  }
  else
  {
    v21 = v3;
    v22 = sub_1A93F7674();
    v23 = sub_1A93F8790();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v28 = v25;
      *(_DWORD *)v24 = 136315651;
      sub_1A906436C(0xD000000000000031, 0x80000001A9450C30, &v28);
      sub_1A93F8AA8();
      *(_WORD *)(v24 + 12) = 2160;
      sub_1A93F8AA8();
      *(_WORD *)(v24 + 22) = 2049;
      sub_1A93F8AA8();

      _os_log_impl(&dword_1A904E000, v22, v23, "%s Unable to remove FairPlay key for %{private,mask.hash}lld, no key store found.", (uint8_t *)v24, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v25, -1, -1);
      MEMORY[0x1AF41411C](v24, -1, -1);

    }
    else
    {

    }
    sub_1A93BEAA0();
    v11 = swift_allocError();
    *v26 = 1;
  }
  return v11;
}

uint64_t method lookup function for FairPlayInvalidationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A93BEA7C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

unint64_t sub_1A93BEAA0()
{
  unint64_t result;

  result = qword_1EEABFCA0;
  if (!qword_1EEABFCA0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9426514, &type metadata for FairPlayInvalidationError);
    atomic_store(result, (unint64_t *)&qword_1EEABFCA0);
  }
  return result;
}

uint64_t sub_1A93BEAE4()
{
  return objectdestroy_31Tm_0();
}

void sub_1A93BEAEC(unint64_t a1, char a2)
{
  uint64_t v2;

  sub_1A93BD63C(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void (**)(unint64_t))(v2 + 24));
}

uint64_t sub_1A93BEAFC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();

  return swift_deallocObject();
}

void sub_1A93BEB30(_QWORD *a1, char a2)
{
  uint64_t v2;

  sub_1A93BCAE8(a1, a2 & 1, *(void (**)(_QWORD *))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40));
}

uint64_t sub_1A93BEB48()
{
  return objectdestroy_31Tm_0();
}

uint64_t objectdestroy_31Tm_0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void sub_1A93BEB90(void *a1, char a2)
{
  uint64_t v2;

  sub_1A93BC21C(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void (**)(id))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t storeEnumTagSinglePayload for FairPlayInvalidationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A93BEBF0 + 4 * byte_1A9426435[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A93BEC24 + 4 * asc_1A9426430[v4]))();
}

uint64_t sub_1A93BEC24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93BEC2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93BEC34);
  return result;
}

uint64_t sub_1A93BEC40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93BEC48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A93BEC4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93BEC54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FairPlayInvalidationError()
{
  return &type metadata for FairPlayInvalidationError;
}

unint64_t sub_1A93BEC74()
{
  unint64_t result;

  result = qword_1EEABFCA8;
  if (!qword_1EEABFCA8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94264EC, &type metadata for FairPlayInvalidationError);
    atomic_store(result, (unint64_t *)&qword_1EEABFCA8);
  }
  return result;
}

uint64_t MTEpisodeType.helperEpisodeType.getter(uint64_t a1)
{
  unsigned int v1;

  if (a1 == 1)
    v1 = 2;
  else
    v1 = 1;
  if (a1 == 2)
    return 0;
  else
    return v1;
}

uint64_t ForegroundSessionSource.session.getter()
{
  return swift_retain();
}

uint64_t sub_1A93BECE4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t ForegroundSessionSource.init(sessionBuilder:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1A93BED10()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + v3);
  return swift_deallocObject();
}

void sub_1A93BED94(uint64_t a1, os_unfair_lock_s *a2, const char *a3, uint64_t a4, int a5)
{
  os_unfair_lock_s *v8;
  os_unfair_lock_s *v9;

  v8 = a2 + 4;
  v9 = a2 + 10;
  os_unfair_lock_lock(a2 + 10);
  sub_1A93BEDFC(v8, a3, a4, a5);
  os_unfair_lock_unlock(v9);
}

uint64_t sub_1A93BEDFC(_QWORD *a1, const char *a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  const char *v26;
  char *v27;
  char v28;
  char v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  os_signpost_id_t v36;
  void (*v37)(char *, uint64_t);
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  _QWORD *v47;
  char *v48;
  char *v49;
  const char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v8 = sub_1A93F7638();
  v50 = *(const char **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v49 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1A93F75FC();
  v55 = *(_QWORD *)(v53 - 8);
  v10 = MEMORY[0x1E0C80A78](v53);
  v48 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v39 - v12;
  v14 = sub_1A93F762C();
  result = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    v46 = a4;
    v51 = (char *)a2;
    v52 = v16;
    v54 = v4;
    v44 = a1[1];
    v45 = v8;
    v47 = a1;
    v19 = a1[2];
    if (qword_1ED2A86B0 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A8698);
    v21 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v18, v20, v14);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v22 = sub_1A93F7620();
    sub_1A93F7644();
    v43 = sub_1A93F8934();
    if ((sub_1A93F8A6C() & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v53);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v14);
      swift_bridgeObjectRelease();
      result = swift_release();
LABEL_17:
      v38 = v47;
      *v47 = 0;
      v38[1] = 0;
      v38[2] = 0;
      return result;
    }
    v40 = v18;
    v41 = v14;
    v42 = v19;
    if ((v46 & 1) == 0)
    {
      v23 = v54;
      if (v51)
      {
        v24 = v22;
        v25 = v45;
        v27 = v49;
        v26 = v50;
LABEL_13:
        v54 = v23;
        swift_retain();
        sub_1A93F7668();
        swift_release();
        if ((*((unsigned int (**)(char *, uint64_t))v26 + 11))(v27, v25) == *MEMORY[0x1E0DF2190])
        {
          v28 = 0;
          v29 = 0;
          v50 = "[Error] Interval already ended";
        }
        else
        {
          (*((void (**)(char *, uint64_t))v26 + 1))(v27, v25);
          v50 = "[identifier=%{name=identifier}s] SUCCESS";
          v29 = 2;
          v28 = 1;
        }
        v30 = v48;
        v31 = v53;
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v48, v13, v53);
        v32 = swift_slowAlloc();
        v33 = swift_slowAlloc();
        v57 = v33;
        *(_BYTE *)v32 = v29;
        *(_BYTE *)(v32 + 1) = v28;
        *(_WORD *)(v32 + 2) = 2080;
        v34 = v13;
        v35 = v42;
        swift_bridgeObjectRetain();
        v56 = sub_1A906436C(v44, v35, &v57);
        sub_1A93F8AA8();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        v36 = sub_1A93F75E4();
        _os_signpost_emit_with_name_impl(&dword_1A904E000, v24, (os_signpost_type_t)v43, v36, v51, v50, (uint8_t *)v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v33, -1, -1);
        MEMORY[0x1AF41411C](v32, -1, -1);

        v37 = *(void (**)(char *, uint64_t))(v55 + 8);
        v37(v34, v31);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v41);
        swift_bridgeObjectRelease();
        swift_release();
        result = ((uint64_t (*)(char *, uint64_t))v37)(v30, v31);
        goto LABEL_17;
      }
LABEL_22:
      swift_bridgeObjectRelease_n();
      result = swift_release_n();
      __break(1u);
      return result;
    }
    v23 = v54;
    if ((unint64_t)v51 >> 32)
    {
      __break(1u);
    }
    else
    {
      v24 = v22;
      v25 = v45;
      v27 = v49;
      v26 = v50;
      if (v51 >> 11 == 27)
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      if (v51 >> 16 <= 0x10)
      {
        v51 = sub_1A910F87C();
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1A93BF2AC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD))
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C48);
  return a2(a1, *(_QWORD *)(a1 + *(int *)(v4 + 48)));
}

uint64_t sub_1A93BF2FC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v8 = *a1;
  v9 = a1[1];
  v10 = a2[3];
  v11 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  Trace.emit(event:)((uint64_t)"DECODE", 6, 2, v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 + 8) + 40))(v8, v9, a4);
  v12 = a2[3];
  v13 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v12);
  if (!v15)
    return Trace.emit(event:)((uint64_t)"DECODED", 7, 2, v12, v13);
  Trace.emit(event:)((uint64_t)"DECODE-FAILED", 13, 2, v12, v13);
  return swift_willThrow();
}

uint64_t sub_1A93BF428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A93BF494(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[2];
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1A93BF2FC(a1, v1 + 4, (uint64_t)v1 + ((v3 + 72) & ~v3), v2, v1[3]);
}

BOOL static ForegroundSessionSource.SourceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ForegroundSessionSource.SourceError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t ForegroundSessionSource.SourceError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A93BF554()
{
  sub_1A93F92DC();
  ForegroundSessionSource.SourceError.hash(into:)();
  return sub_1A93F9324();
}

void sub_1A93BF58C()
{
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A93BF59C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A93BF5E8 + 4 * byte_1A9426569[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A93BF61C + 4 * byte_1A9426564[v4]))();
}

uint64_t sub_1A93BF61C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93BF624(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93BF62CLL);
  return result;
}

uint64_t sub_1A93BF638(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93BF640);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A93BF644(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93BF64C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for ForegroundSessionSource.SourceError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ForegroundSessionSource.SourceError);
}

void sub_1A93BF664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A4798);
  swift_getAssociatedTypeWitness();
  sub_1A9066D74(&qword_1ED2A59E8, &qword_1ED2A4798, MEMORY[0x1E0C95B78]);
  v0 = sub_1A93F783C();
  v1 = MEMORY[0x1AF414014](MEMORY[0x1E0C95B48], v0);
  type metadata accessor for EmitLifecycle(255, v0, v1, v2);
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A93BF71C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_1A93F726C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + v5 + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);

  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v1);
  return swift_deallocObject();
}

uint64_t sub_1A93BF7D0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  return swift_deallocObject();
}

uint64_t sub_1A93BF7FC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A93BF820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_1A93F726C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + v5 + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);

  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A93BF8E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A93BF90C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A93BF930()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t EpisodePlayStateRule<>.eraseToAnyEpisodePlayStateRule()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v3;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v9, v3, a1, v7);
  return sub_1A93BF9FC((uint64_t)v9, a1, a2, a3);
}

uint64_t sub_1A93BF9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)()@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = *(_QWORD *)(a2 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v10 + v9, a1, a2);
  *a4 = sub_1A93BFFAC;
  a4[1] = (uint64_t (*)())v10;
  return result;
}

uint64_t AnyEpisodePlayStateRule.canMove(from:to:)()
{
  uint64_t (**v0)(void);

  return (*v0)() & 1;
}

uint64_t sub_1A93BFAB0()
{
  uint64_t (**v0)(void);

  return (*v0)() & 1;
}

uint64_t NoTransitionEpisodePlayStateRule.canMove(from:to:)()
{
  return 0;
}

unint64_t sub_1A93BFADC(uint64_t a1)
{
  unint64_t result;

  result = sub_1A93BFB00();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A93BFB00()
{
  unint64_t result;

  result = qword_1EEABFD60;
  if (!qword_1EEABFD60)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AnyEpisodePlayStateRule, &type metadata for AnyEpisodePlayStateRule);
    atomic_store(result, (unint64_t *)&qword_1EEABFD60);
  }
  return result;
}

unint64_t sub_1A93BFB44(uint64_t a1)
{
  unint64_t result;

  result = sub_1A93BFB68();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A93BFB68()
{
  unint64_t result;

  result = qword_1EEABFD88;
  if (!qword_1EEABFD88)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NoTransitionEpisodePlayStateRule, &type metadata for NoTransitionEpisodePlayStateRule);
    atomic_store(result, (unint64_t *)&qword_1EEABFD88);
  }
  return result;
}

ValueMetadata *type metadata accessor for NoTransitionEpisodePlayStateRule()
{
  return &type metadata for NoTransitionEpisodePlayStateRule;
}

BOOL sub_1A93BFBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int EnumCaseMultiPayload;
  uint64_t v12;

  v4 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - v8;
  sub_1A90891E4(a2, (uint64_t)&v12 - v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    swift_storeEnumTagMultiPayload();
    _s18PodcastsFoundation16EpisodePlayStateO2eeoiySbAC_ACtFZ_0(a1, (uint64_t)v6);
    v9 = v6;
  }
  sub_1A9089264((uint64_t)v9);
  return EnumCaseMultiPayload == 3;
}

BOOL sub_1A93BFC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int EnumCaseMultiPayload;
  uint64_t v12;

  v4 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - v8;
  sub_1A90891E4(a2, (uint64_t)&v12 - v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    sub_1A90AC3A4((uint64_t)v9);
    swift_storeEnumTagMultiPayload();
    _s18PodcastsFoundation16EpisodePlayStateO2eeoiySbAC_ACtFZ_0(a1, (uint64_t)v6);
    v9 = v6;
  }
  sub_1A9089264((uint64_t)v9);
  return EnumCaseMultiPayload == 2;
}

BOOL sub_1A93BFD84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int EnumCaseMultiPayload;
  uint64_t v12;

  v4 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - v8;
  sub_1A90891E4(a2, (uint64_t)&v12 - v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_storeEnumTagMultiPayload();
    _s18PodcastsFoundation16EpisodePlayStateO2eeoiySbAC_ACtFZ_0(a1, (uint64_t)v6);
    v9 = v6;
  }
  sub_1A9089264((uint64_t)v9);
  return EnumCaseMultiPayload == 1;
}

BOOL sub_1A93BFE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int EnumCaseMultiPayload;
  uint64_t v12;

  v4 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - v8;
  sub_1A90891E4(a2, (uint64_t)&v12 - v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1A9089264((uint64_t)v9);
  if (EnumCaseMultiPayload == 4)
  {
    swift_storeEnumTagMultiPayload();
    _s18PodcastsFoundation16EpisodePlayStateO2eeoiySbAC_ACtFZ_0(a1, (uint64_t)v6);
    sub_1A9089264((uint64_t)v6);
  }
  return EnumCaseMultiPayload == 4;
}

uint64_t sub_1A93BFF54()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1A93BFFAC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 8) + 24))() & 1;
}

uint64_t SearchTrie.add<A>(matchCandidate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)&v40 - v11;
  result = sub_1A93F86C4();
  if ((result & 1) != 0)
    return result;
  v40 = v10;
  v14 = *(_QWORD *)(v3 + OBJC_IVAR___MTSearchTrie_rootNode);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  swift_retain();
  sub_1A93F81A8();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1A93F8A9C();
  v15 = v45;
  v16 = v12;
  if (!v45)
  {
    v23 = v14;
LABEL_22:
    (*(void (**)(char *, uint64_t))(v40 + 8))(v16, AssociatedTypeWitness);
    *(_BYTE *)(v23 + 16) = 1;
    return swift_release();
  }
  v17 = v44;
  v41 = v12;
  while (1)
  {
    v19 = (_QWORD *)(v14 + 24);
    swift_beginAccess();
    v20 = *(_QWORD *)(v14 + 24);
    if (*(_QWORD *)(v20 + 16))
    {
      v21 = sub_1A9067870(v17, v15);
      if ((v22 & 1) != 0)
      {
        v23 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v21);
        swift_retain();
        goto LABEL_6;
      }
    }
    v24 = AssociatedTypeWitness;
    type metadata accessor for SearchTrie.Node();
    v23 = swift_allocObject();
    *(_BYTE *)(v23 + 16) = 0;
    *(_QWORD *)(v23 + 24) = MEMORY[0x1E0DEE9E0];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v43 = (_QWORD *)*v19;
    v26 = v43;
    *v19 = 0x8000000000000000;
    v28 = sub_1A9067870(v17, v15);
    v29 = v26[2];
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (v26[3] >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v35 = v43;
        if ((v27 & 1) == 0)
          goto LABEL_17;
      }
      else
      {
        sub_1A930B904();
        v35 = v43;
        if ((v32 & 1) == 0)
          goto LABEL_17;
      }
    }
    else
    {
      sub_1A905A200(v31, isUniquelyReferenced_nonNull_native);
      v33 = sub_1A9067870(v17, v15);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_26;
      v28 = v33;
      v35 = v43;
      if ((v32 & 1) == 0)
      {
LABEL_17:
        v35[(v28 >> 6) + 8] |= 1 << v28;
        v36 = (uint64_t *)(v35[6] + 16 * v28);
        *v36 = v17;
        v36[1] = v15;
        *(_QWORD *)(v35[7] + 8 * v28) = v23;
        v37 = v35[2];
        v38 = __OFADD__(v37, 1);
        v39 = v37 + 1;
        if (v38)
          goto LABEL_25;
        v35[2] = v39;
        swift_bridgeObjectRetain();
        goto LABEL_5;
      }
    }
    v18 = v35[7];
    swift_release();
    *(_QWORD *)(v18 + 8 * v28) = v23;
LABEL_5:
    *v19 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    AssociatedTypeWitness = v24;
    v16 = v41;
LABEL_6:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1A93F8A9C();
    v17 = v44;
    v15 = v45;
    v14 = v23;
    if (!v45)
      goto LABEL_22;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t SearchTrie.fullMatch<A>(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)&v22 - v11;
  if ((sub_1A93F86C4() & 1) != 0)
    return 0;
  v14 = *(_QWORD *)(v3 + OBJC_IVAR___MTSearchTrie_rootNode);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  swift_retain();
  sub_1A93F81A8();
  swift_getAssociatedConformanceWitness();
  sub_1A93F8A9C();
  v15 = v24;
  if (v24)
  {
    v16 = v23;
    while (1)
    {
      swift_beginAccess();
      v17 = *(_QWORD *)(v14 + 24);
      if (!*(_QWORD *)(v17 + 16))
        break;
      v18 = sub_1A9067870(v16, v15);
      if ((v19 & 1) == 0)
        break;
      v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v18);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1A93F8A9C();
      v16 = v23;
      v15 = v24;
      v14 = v20;
      if (!v24)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
    return 0;
  }
  else
  {
    v20 = v14;
LABEL_11:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
    v13 = *(unsigned __int8 *)(v20 + 16);
    swift_release();
  }
  return v13;
}

uint64_t SearchTrie.containsMatch<A>(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  char *v10;
  uint64_t inited;
  unint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v37 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405960;
  v40 = OBJC_IVAR___MTSearchTrie_rootNode;
  v41 = v2;
  *(_QWORD *)(inited + 32) = *(_QWORD *)(v2 + OBJC_IVAR___MTSearchTrie_rootNode);
  v44 = inited;
  sub_1A93F8328();
  v12 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, a2);
  swift_retain();
  sub_1A93F81A8();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v42 = v10;
  v43 = AssociatedTypeWitness;
  result = sub_1A93F8A9C();
  v15 = v46;
  if (!v46)
  {
LABEL_35:
    (*(void (**)(char *, uint64_t))(v38 + 8))(v42, v43);
    swift_bridgeObjectRelease();
    return 0;
  }
  v16 = v45;
  v39 = AssociatedConformanceWitness;
  while (1)
  {
    v45 = MEMORY[0x1E0DEE9D8];
    if (v12 >> 62)
      break;
    v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17)
      goto LABEL_7;
LABEL_29:
    swift_bridgeObjectRelease();
    v31 = *(_QWORD *)(v41 + v40);
    swift_beginAccess();
    v32 = *(_QWORD *)(v31 + 24);
    if (*(_QWORD *)(v32 + 16) && (v33 = sub_1A9067870(v16, v15), (v34 & 1) != 0))
    {
      v35 = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v33);
      swift_retain();
      swift_bridgeObjectRelease();
      if ((*(_BYTE *)(v35 + 16) & 1) != 0)
      {
LABEL_38:
        swift_release();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v42, v43);
        return 1;
      }
      v36 = swift_retain();
      MEMORY[0x1AF412004](v36);
      if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1A93F834C();
      sub_1A93F8394();
      sub_1A93F8328();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v12 = v45;
    result = sub_1A93F8A9C();
    v16 = v45;
    v15 = v46;
    if (!v46)
      goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  v17 = sub_1A93F8E5C();
  result = swift_bridgeObjectRelease();
  if (!v17)
    goto LABEL_29;
LABEL_7:
  if ((v12 & 0xC000000000000001) != 0)
  {
    v18 = 0;
    while (1)
    {
      result = MEMORY[0x1AF4129DC](v18, v12);
      v19 = v18 + 1;
      if (__OFADD__(v18, 1))
        break;
      v20 = result;
      swift_beginAccess();
      v21 = *(_QWORD *)(v20 + 24);
      if (*(_QWORD *)(v21 + 16) && (v22 = sub_1A9067870(v16, v15), (v23 & 1) != 0))
      {
        if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22) + 16) & 1) != 0)
          goto LABEL_37;
        v24 = swift_retain_n();
        MEMORY[0x1AF412004](v24);
        if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A93F834C();
        sub_1A93F8394();
        sub_1A93F8328();
        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v18;
      if (v19 == v17)
        goto LABEL_29;
    }
    __break(1u);
  }
  else
  {
    v25 = 0;
    while (1)
    {
      v26 = v25 + 1;
      if (__OFADD__(v25, 1))
        break;
      v27 = *(_QWORD *)(v12 + 8 * v25 + 32);
      result = swift_beginAccess();
      v28 = *(_QWORD *)(v27 + 24);
      if (*(_QWORD *)(v28 + 16))
      {
        result = sub_1A9067870(v16, v15);
        if ((v29 & 1) != 0)
        {
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * result) + 16) == 1)
          {
            swift_retain();
LABEL_37:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_38;
          }
          swift_retain_n();
          v30 = swift_retain();
          MEMORY[0x1AF412004](v30);
          if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A93F834C();
          sub_1A93F8394();
          sub_1A93F8328();
          swift_release();
          result = swift_release();
        }
      }
      ++v25;
      if (v26 == v17)
        goto LABEL_29;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A93C0AB4()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id SearchTrie.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SearchTrie.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR___MTSearchTrie_rootNode;
  type metadata accessor for SearchTrie.Node();
  v3 = swift_allocObject();
  *(_BYTE *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v0[v2] = v3;
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id SearchTrie.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall SearchTrie.add(matchCandidate:)(NSString matchCandidate)
{
  uint64_t v1;
  unint64_t v2;

  v1 = sub_1A93F8040();
  sub_1A9059F34(v1, v2);
  swift_bridgeObjectRelease();
}

uint64_t NSString.containsMatch(in:)()
{
  char v0;

  sub_1A93F8040();
  v0 = sub_1A90672F4();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t StringProtocol.containsMatch(in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return SearchTrie.containsMatch<A>(for:)(v2, a2) & 1;
}

uint64_t type metadata accessor for SearchTrie()
{
  return objc_opt_self();
}

uint64_t sub_1A93C0C70(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_delegate);
  swift_beginAccess();
  *v4 = v2;
  v4[1] = v3;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_1A93C0CD8()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t (*sub_1A93C0D24())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1A93C0D68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  _QWORD *v7;
  int64_t v8;
  int v9;
  int v10;
  char v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_unfair_lock_s *v32;
  os_unfair_lock_s *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[6];

  v2 = sub_1A93F7D58();
  v48 = *(_QWORD *)(v2 - 8);
  v49 = v2;
  MEMORY[0x1E0C80A78](v2);
  v47 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F7DB8();
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  MEMORY[0x1E0C80A78](v4);
  v44 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1A929E920(0, v6, 0);
    v7 = (_QWORD *)aBlock[0];
    v8 = sub_1A93C161C(a1);
    v10 = v9;
    v12 = (os_unfair_lock_s *)(v11 & 1);
    while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_26;
      if (*(_DWORD *)(a1 + 36) != v10)
        goto LABEL_27;
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v8);
      aBlock[0] = v7;
      v15 = v7[2];
      v14 = v7[3];
      if (v15 >= v14 >> 1)
      {
        sub_1A929E920(v14 > 1, v15 + 1, 1);
        v7 = (_QWORD *)aBlock[0];
      }
      v7[2] = v15 + 1;
      v7[v15 + 4] = v13 & ~(v13 >> 63);
      v16 = sub_1A93C16C0(v8, v10, v12 & 1, a1);
      v8 = v16;
      v10 = v17;
      v12 = (os_unfair_lock_s *)(v18 & 1);
      if (!--v6)
      {
        sub_1A91344E0(v16, v17, v18 & 1);
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    os_unfair_lock_unlock(v12);
    __break(1u);
  }
  else
  {
LABEL_11:
    v19 = v7[2];
    v20 = MEMORY[0x1E0DEE9D8];
    if (v19)
    {
      v21 = v7 + 4;
      v22 = MEMORY[0x1E0DEE9D8];
      do
      {
        v26 = *v21++;
        v25 = v26;
        if (v26)
          v27 = v25 == 1000000000000;
        else
          v27 = 1;
        if (!v27)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          aBlock[0] = v22;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1A929E920(0, *(_QWORD *)(v22 + 16) + 1, 1);
            v22 = aBlock[0];
          }
          v24 = *(_QWORD *)(v22 + 16);
          v23 = *(_QWORD *)(v22 + 24);
          if (v24 >= v23 >> 1)
          {
            sub_1A929E920(v23 > 1, v24 + 1, 1);
            v22 = aBlock[0];
          }
          *(_QWORD *)(v22 + 16) = v24 + 1;
          *(_QWORD *)(v22 + 8 * v24 + 32) = v25;
        }
        --v19;
      }
      while (v19);
    }
    else
    {
      v22 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    v29 = sub_1A915A644(v22);
    v30 = swift_release();
    v31 = v43;
    MEMORY[0x1E0C80A78](v30);
    *(&v43 - 2) = v31;
    *(&v43 - 1) = v29;
    v33 = v32 + 4;
    os_unfair_lock_lock(v32 + 4);
    sub_1A93C17A4(aBlock);
    v34 = aBlock[0];
    os_unfair_lock_unlock(v33);
    swift_bridgeObjectRelease();
    v35 = (uint64_t *)(v31 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_delegate);
    swift_beginAccess();
    v37 = *v35;
    v36 = v35[1];
    v38 = (_QWORD *)swift_allocObject();
    v38[2] = v37;
    v38[3] = v36;
    v38[4] = v34;
    aBlock[4] = sub_1A93C17E8;
    aBlock[5] = v38;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_84;
    v39 = _Block_copy(aBlock);
    swift_unknownObjectRetain_n();
    v40 = v44;
    sub_1A93F7D88();
    v50 = v20;
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
    v41 = v47;
    v42 = v49;
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v40, v41, v39);
    _Block_release(v39);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v41, v42);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v46);
    swift_release();
  }
}

uint64_t sub_1A93C11F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_currentlyAddingShows);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_currentlyAddingShows) = a2;
  swift_bridgeObjectRetain();
  v5 = swift_bridgeObjectRetain();
  result = sub_1A93C14A0(v5);
  *a3 = v4;
  return result;
}

uint64_t sub_1A93C1254(uint64_t result, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v4;
  _QWORD *v5;

  if (result)
  {
    ObjectType = swift_getObjectType();
    v4 = swift_bridgeObjectRetain();
    v5 = sub_1A90BF298(v4);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(a2 + 8))(v5, ObjectType, a2);
    return swift_release();
  }
  return result;
}

id AddingPodcastStateDataSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id AddingPodcastStateDataSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AddingPodcastStateDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double AddingPodcastStateDataSource.state(for:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  double result;
  __int128 v6;
  _OWORD v7[2];
  uint64_t v8;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_lock)
                          + 16);
  os_unfair_lock_lock(v3);
  sub_1A914C8CC((void (*)(_OWORD *__return_ptr))sub_1A93C17F4, (uint64_t)v7);
  os_unfair_lock_unlock(v3);
  v4 = v8;
  result = *(double *)v7;
  v6 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v4;
  return result;
}

void AddingPodcastStateDataSource.state(for:)(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[3] = 0;
  a1[4] = 0;
  a1[2] = 3;
}

uint64_t (*sub_1A93C145C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A93C14A0(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  int64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = result;
  i = 0;
  v4 = result + 56;
  v5 = -1 << *(_BYTE *)(result + 32);
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(63 - v5) >> 6;
  if (v7)
    goto LABEL_7;
LABEL_8:
  v11 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v11 < v8)
    {
      v12 = *(_QWORD *)(v4 + 8 * v11);
      v13 = i + 1;
      if (v12)
        goto LABEL_21;
      v13 = i + 2;
      if (i + 2 >= v8)
        return sub_1A9120240();
      v12 = *(_QWORD *)(v4 + 8 * v13);
      if (v12)
        goto LABEL_21;
      v13 = i + 3;
      if (i + 3 >= v8)
        return sub_1A9120240();
      v12 = *(_QWORD *)(v4 + 8 * v13);
      if (v12)
      {
LABEL_21:
        v7 = (v12 - 1) & v12;
        v10 = __clz(__rbit64(v12)) + (v13 << 6);
        for (i = v13; ; v10 = v9 | (i << 6))
        {
          v15 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10);
          if (sub_1A9093070(v15, *v1))
          {
            result = sub_1A926F948(v15);
            if (!v7)
              goto LABEL_8;
          }
          else
          {
            result = sub_1A90920C8(&v16, v15);
            if (!v7)
              goto LABEL_8;
          }
LABEL_7:
          v9 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
      }
      v14 = i + 4;
      if (i + 4 < v8)
      {
        v12 = *(_QWORD *)(v4 + 8 * v14);
        if (v12)
        {
          v13 = i + 4;
          goto LABEL_21;
        }
        while (1)
        {
          v13 = v14 + 1;
          if (__OFADD__(v14, 1))
            goto LABEL_27;
          if (v13 >= v8)
            return sub_1A9120240();
          v12 = *(_QWORD *)(v4 + 8 * v13);
          ++v14;
          if (v12)
            goto LABEL_21;
        }
      }
    }
    return sub_1A9120240();
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A93C161C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1A93C16C0(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1A93C17A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A93C11F0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1A93C17BC()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A93C17E8()
{
  uint64_t v0;

  return sub_1A93C1254(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

BOOL sub_1A93C17F4@<W0>(_QWORD *a1@<X8>)
{
  return sub_1A93C18E0(a1);
}

uint64_t sub_1A93C1808@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  _OWORD *v3;

  v3 = (_OWORD *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_delegate);
  swift_beginAccess();
  *a2 = *v3;
  return swift_unknownObjectRetain();
}

uint64_t method lookup function for AddingPodcastStateDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AddingPodcastStateDataSource.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AddingPodcastStateDataSource.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AddingPodcastStateDataSource.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AddingPodcastStateDataSource.updateAddingShows(storeCollectionIds:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

BOOL sub_1A93C18E0@<W0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _BOOL8 result;
  uint64_t v4;

  result = sub_1A9093070(*(_QWORD *)(v1 + 24), *(_QWORD *)(*(_QWORD *)(v1 + 16)+ OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_currentlyAddingShows));
  v4 = 3;
  *a1 = 0;
  a1[1] = 0;
  if (result)
    v4 = 1;
  a1[3] = 0;
  a1[4] = 0;
  a1[2] = v4;
  return result;
}

double sub_1A93C1930@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A914C8CC(*(void (**)(_OWORD *__return_ptr))(v1 + 16), a1);
}

BOOL static AssetLifetime.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t AssetLifetime.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

PodcastsFoundation::AssetLifetime_optional __swiftcall AssetLifetime.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (PodcastsFoundation::AssetLifetime_optional)rawValue;
}

PodcastsFoundation::AssetLifetime_optional sub_1A93C1978(Swift::Int *a1)
{
  return AssetLifetime.init(rawValue:)(*a1);
}

uint64_t sub_1A93C1980()
{
  sub_1A93C1B2C();
  return sub_1A93F82D4();
}

uint64_t sub_1A93C19DC()
{
  sub_1A93C1B2C();
  return sub_1A93F82A4();
}

unint64_t sub_1A93C1A2C()
{
  unint64_t result;

  result = qword_1EEABFDD8;
  if (!qword_1EEABFDD8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AssetLifetime, &type metadata for AssetLifetime);
    atomic_store(result, (unint64_t *)&qword_1EEABFDD8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AssetLifetime(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A93C1ABC + 4 * byte_1A94268D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A93C1AF0 + 4 * byte_1A94268D0[v4]))();
}

uint64_t sub_1A93C1AF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93C1AF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93C1B00);
  return result;
}

uint64_t sub_1A93C1B0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93C1B14);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A93C1B18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93C1B20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1A93C1B2C()
{
  unint64_t result;

  result = qword_1EEABFDE0;
  if (!qword_1EEABFDE0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AssetLifetime, &type metadata for AssetLifetime);
    atomic_store(result, (unint64_t *)&qword_1EEABFDE0);
  }
  return result;
}

uint64_t MetricsTargetID.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t MetricsTargetID.init(_:)()
{
  sub_1A915997C();
  return sub_1A93F8B38();
}

uint64_t MetricsTargetID.adamID.getter(unint64_t a1, unint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRetain();
  v4 = sub_1A931883C(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t MetricsTargetID.debugDescription.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD00000000000001BLL;
}

unint64_t sub_1A93C1CF4()
{
  return MetricsTargetID.debugDescription.getter();
}

uint64_t MetricsTargetID.description.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t MetricsTargetID.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_1A93F90CC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsTargetID.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F912C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

unint64_t static MetricsTargetID.alreadyASubscriber.getter()
{
  return 0xD000000000000012;
}

uint64_t static MetricsTargetID.applePodcasts.getter()
{
  return 0x646F50656C707041;
}

uint64_t static MetricsTargetID.browse.getter()
{
  return 0x6573776F7242;
}

uint64_t static MetricsTargetID.cancel.getter()
{
  return 0x6C65636E6163;
}

uint64_t static MetricsTargetID.categories.getter()
{
  return 0x69726F6765746143;
}

uint64_t static MetricsTargetID.channels.getter()
{
  return 0x736C656E6E616843;
}

uint64_t static MetricsTargetID.clear.getter()
{
  return 0x7261656C43;
}

uint64_t static MetricsTargetID.close.getter()
{
  return 0x65736F6C63;
}

uint64_t static MetricsTargetID.continue.getter()
{
  return 0x65756E69746E6F63;
}

uint64_t static MetricsTargetID.done.getter()
{
  return 1701736260;
}

uint64_t static MetricsTargetID.downloaded.getter()
{
  return 0x64616F6C6E776F44;
}

uint64_t static MetricsTargetID.downloading.getter()
{
  return 0x64616F6C6E776F44;
}

unint64_t static MetricsTargetID.getRecommendations.getter()
{
  return 0xD000000000000012;
}

uint64_t static MetricsTargetID.hideChapters.getter()
{
  return 0x7061684365646968;
}

uint64_t static MetricsTargetID.hideTranscript.getter()
{
  return 0x6E61725465646968;
}

uint64_t static MetricsTargetID.latestEpisodes.getter()
{
  return 0x704574736574614CLL;
}

uint64_t static MetricsTargetID.library.getter()
{
  return 0x7972617262694CLL;
}

uint64_t static MetricsTargetID.listen.getter()
{
  return 0x6E657473694CLL;
}

uint64_t static MetricsTargetID.notNow.getter()
{
  return 0x776F4E746F6ELL;
}

uint64_t static MetricsTargetID.recentlyUpdated.getter()
{
  return 0x796C746E65636552;
}

uint64_t static MetricsTargetID.rssEpisode.getter()
{
  return 0x6F73697045535352;
}

uint64_t static MetricsTargetID.saved.getter()
{
  return 0x6465766153;
}

uint64_t static MetricsTargetID.search.getter()
{
  return 0x686372616553;
}

unint64_t static MetricsTargetID.searchTranscript.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsTargetID.seeAll.getter()
{
  return 0x6C6C41656553;
}

unint64_t static MetricsTargetID.seeAllMyChannels.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsTargetID.showChapters.getter()
{
  return 0x70616843776F6873;
}

uint64_t static MetricsTargetID.shows.getter()
{
  return 0x73776F6853;
}

uint64_t static MetricsTargetID.showTranscript.getter()
{
  return 0x6E617254776F6873;
}

unint64_t static MetricsTargetID.viewSubscriptionFAQs.getter()
{
  return 0xD000000000000014;
}

uint64_t static MetricsTargetID.viewTranscript.getter()
{
  return 0x6E61725477656976;
}

uint64_t static MetricsTargetID.yourLibrary.getter()
{
  return 0x7262694C72756F59;
}

unint64_t sub_1A93C21E0()
{
  unint64_t result;

  result = qword_1EEABFDE8;
  if (!qword_1EEABFDE8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsTargetID, &type metadata for MetricsTargetID);
    atomic_store(result, (unint64_t *)&qword_1EEABFDE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsTargetID()
{
  return &type metadata for MetricsTargetID;
}

uint64_t dispatch thunk of DownloadedArtifactEffectApplicator.apply(effect:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1A93C223C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
    sub_1A9094640(a1, a2);
  else
    v3 = 0;
  return v3 & 1;
}

uint64_t sub_1A93C2270(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_1A93C2714(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A93C2750 + 4 * byte_1A9426C52[a1]))(0xD000000000000019, 0x80000001A9450F30);
}

uint64_t sub_1A93C2750()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_1A93C276C()
{
  uint64_t v0;

  return v0 + 1;
}

uint64_t sub_1A93C28B4()
{
  return 0x706F546863746177;
}

uint64_t sub_1A93C28D8()
{
  return 0x5574736163646F70;
}

uint64_t sub_1A93C28FC()
{
  sub_1A93C6534();
  return sub_1A93F945C();
}

uint64_t sub_1A93C2924()
{
  sub_1A93C6534();
  return sub_1A93F9468();
}

uint64_t sub_1A93C294C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7265746C6966;
  if (*v0 != 1)
    v1 = 0x796C6C6175736976;
  if (*v0)
    return v1;
  else
    return 0x5574736163646F70;
}

uint64_t sub_1A93C29B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93C6688(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93C29DC()
{
  sub_1A93C64F0();
  return sub_1A93F945C();
}

uint64_t sub_1A93C2A04()
{
  sub_1A93C64F0();
  return sub_1A93F9468();
}

uint64_t sub_1A93C2A2C()
{
  sub_1A93C639C();
  return sub_1A93F945C();
}

uint64_t sub_1A93C2A54()
{
  sub_1A93C639C();
  return sub_1A93F9468();
}

uint64_t sub_1A93C2A7C()
{
  sub_1A93C6358();
  return sub_1A93F945C();
}

uint64_t sub_1A93C2AA4()
{
  sub_1A93C6358();
  return sub_1A93F9468();
}

uint64_t sub_1A93C2ACC()
{
  return 0x5574736163646F70;
}

uint64_t sub_1A93C2AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x5574736163646F70 && a2 == 0xEB00000000734952)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A93F90C0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A93C2B98()
{
  sub_1A93C6644();
  return sub_1A93F945C();
}

uint64_t sub_1A93C2BC0()
{
  sub_1A93C6644();
  return sub_1A93F9468();
}

uint64_t sub_1A93C2BE8()
{
  unsigned __int8 *v0;

  return sub_1A93C2714(*v0);
}

uint64_t sub_1A93C2BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93C6810(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A93C2C14(_BYTE *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_1A93C2C20()
{
  sub_1A93C6248();
  return sub_1A93F945C();
}

uint64_t sub_1A93C2C48()
{
  sub_1A93C6248();
  return sub_1A93F9468();
}

uint64_t sub_1A93C2C70()
{
  sub_1A93C6600();
  return sub_1A93F945C();
}

uint64_t sub_1A93C2C98()
{
  sub_1A93C6600();
  return sub_1A93F9468();
}

uint64_t sub_1A93C2CC0()
{
  sub_1A93C65BC();
  return sub_1A93F945C();
}

uint64_t sub_1A93C2CE8()
{
  sub_1A93C65BC();
  return sub_1A93F9468();
}

uint64_t sub_1A93C2D10()
{
  sub_1A93C63E0();
  return sub_1A93F945C();
}

uint64_t sub_1A93C2D38()
{
  sub_1A93C63E0();
  return sub_1A93F9468();
}

uint64_t sub_1A93C2D60()
{
  _BYTE *v0;

  if (*v0)
    return 0x656761506C6C7566;
  else
    return 0xD000000000000014;
}

uint64_t sub_1A93C2DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93C6E9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93C2DCC()
{
  sub_1A93C6468();
  return sub_1A93F945C();
}

uint64_t sub_1A93C2DF4()
{
  sub_1A93C6468();
  return sub_1A93F9468();
}

uint64_t sub_1A93C2E1C()
{
  sub_1A93C6424();
  return sub_1A93F945C();
}

uint64_t sub_1A93C2E44()
{
  sub_1A93C6424();
  return sub_1A93F9468();
}

uint64_t sub_1A93C2E6C()
{
  sub_1A93C6578();
  return sub_1A93F945C();
}

uint64_t sub_1A93C2E94()
{
  sub_1A93C6578();
  return sub_1A93F9468();
}

uint64_t sub_1A93C2EBC()
{
  _BYTE *v0;

  if (*v0)
    return 0x7265746C6966;
  else
    return 0x5574736163646F70;
}

uint64_t sub_1A93C2EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93C6FA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93C2F20()
{
  sub_1A93C6314();
  return sub_1A93F945C();
}

uint64_t sub_1A93C2F48()
{
  sub_1A93C6314();
  return sub_1A93F9468();
}

uint64_t sub_1A93C2F70()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A93C2FA8 + 4 * byte_1A9426C61[*v0]))(0x556E6F6974617473, 0xEB00000000646975);
}

uint64_t sub_1A93C2FA8()
{
  return 0x536E6F6974617473;
}

uint64_t sub_1A93C2FCC()
{
  return 0x656C746974;
}

uint64_t sub_1A93C2FE0()
{
  return 0x5574736163646F70;
}

uint64_t sub_1A93C2FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93C70A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93C3018()
{
  sub_1A93C64AC();
  return sub_1A93F945C();
}

uint64_t sub_1A93C3040()
{
  sub_1A93C64AC();
  return sub_1A93F9468();
}

uint64_t sub_1A93C3068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x5574736163646F70 && a2 == 0xEB00000000646975)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A93F90C0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A93C3114()
{
  sub_1A93C62D0();
  return sub_1A93F945C();
}

uint64_t sub_1A93C313C()
{
  sub_1A93C62D0();
  return sub_1A93F9468();
}

uint64_t sub_1A93C3164()
{
  sub_1A93C628C();
  return sub_1A93F945C();
}

uint64_t sub_1A93C318C()
{
  sub_1A93C628C();
  return sub_1A93F9468();
}

void EpisodeListType.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD v18[3];
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;

  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFDF0);
  v21 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v20 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFDF8);
  v39 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v53 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFE00);
  v36 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v55 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFE08);
  v38 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v51 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFE10);
  v18[2] = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v18[1] = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFE18);
  v24 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v23 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFE20);
  v27 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v26 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFE28);
  v35 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v46 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFE30);
  v37 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v49 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFE38);
  v34 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v45 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFE40);
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v42 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFE48);
  v30 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v29 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFE50);
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFE58);
  v32 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFE60);
  MEMORY[0x1E0C80A78](v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABFE68);
  v57 = *(_QWORD *)(v15 - 8);
  v58 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v18 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93C6248();
  v60 = v17;
  sub_1A93F93D8();
  sub_1A905466C(v59, (uint64_t)&v61);
  __asm { BR              X10 }
}

uint64_t sub_1A93C36F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v4 - 176) = 0;
  sub_1A93C6644();
  v5 = *(_QWORD *)(v4 - 208);
  v6 = *(_QWORD *)(v4 - 184);
  sub_1A93F8FAC();
  *(_QWORD *)(v4 - 176) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92F0);
  sub_1A93C9D48(&qword_1EEABFEF8, &qword_1EEAB7BF8, MEMORY[0x1E0CB0010], MEMORY[0x1E0DEAF10]);
  sub_1A93F9030();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 216) + 8))(v6, v5);
}

uint64_t EpisodeListType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _BYTE v5[72];

  result = sub_1A93C72A0(a1, (uint64_t)v5);
  if (!v2)
    return sub_1A905466C((uint64_t)v5, a2);
  return result;
}

uint64_t sub_1A93C40DC(uint64_t a1, uint64_t a2)
{
  char v3;
  _BYTE v5[72];
  _BYTE v6[72];

  sub_1A905466C(a1, (uint64_t)v5);
  sub_1A905466C(a2, (uint64_t)v6);
  static EpisodeListType.== infix(_:_:)((uint64_t)v5);
  return v3 & 1;
}

uint64_t sub_1A93C4124@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _BYTE v5[72];

  result = sub_1A93C72A0(a1, (uint64_t)v5);
  if (!v2)
    return sub_1A905466C((uint64_t)v5, a2);
  return result;
}

void sub_1A93C4168(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[72];

  sub_1A905466C(v1, (uint64_t)v3);
  EpisodeListType.encode(to:)(a1);
}

void sub_1A93C41B4()
{
  uint64_t v0;
  _BYTE v1[72];

  sub_1A905466C(v0, (uint64_t)v1);
  EpisodeListType.description.getter();
}

uint64_t EpisodeListType.libraryShowUUID.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[7];
  unsigned __int8 v4;

  sub_1A905466C(v0, (uint64_t)v3);
  v1 = 0;
  if (v4 <= 8u)
  {
    if (((1 << v4) & 0x1CE) != 0)
    {
      v1 = v3[0];
    }
    else
    {
      if (v4 != 4)
        return v1;
      v1 = v3[6];
    }
    swift_bridgeObjectRetain();
  }
  return v1;
}

_QWORD *EpisodeListType.importantKeys.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v16 = MEMORY[0x1E0DEE9D8];
  sub_1A905466C(v0, (uint64_t)&v17);
  if (v25 != 9
    || (v1 = v21 | v20 | v19, v23 | v24 | v17 | v22 | v1 | v18)
    && ((v2 = v23 | v24 | v22 | v1 | v18, v17 != 1) || v2)
    && (v17 != 3 || v2))
  {
    sub_1A913669C(MEMORY[0x1E0DEE9D8]);
    return (_QWORD *)v16;
  }
  else
  {
    v3 = sub_1A93F8040();
    v5 = v4;
    swift_bridgeObjectRetain();
    v6 = sub_1A907ECFC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v7 = v6[2];
    v8 = v6[3];
    v9 = v7 + 1;
    if (v7 >= v8 >> 1)
    {
      v15 = v7 + 1;
      v12 = v6;
      v13 = v6[2];
      v14 = sub_1A907ECFC((_QWORD *)(v8 > 1), v7 + 1, 1, v12);
      v7 = v13;
      v9 = v15;
      v6 = v14;
    }
    v6[2] = v9;
    v10 = &v6[2 * v7];
    v10[4] = v3;
    v10[5] = v5;
    swift_bridgeObjectRelease();
  }
  return v6;
}

void EpisodeListType.sortTypeFromUserDefaults.getter()
{
  uint64_t v0;
  _QWORD v1[8];

  sub_1A905466C(v0, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1A93C4430()
{
  return 0;
}

void sub_1A93C46AC()
{
  JUMPOUT(0x1A93C4690);
}

void sub_1A93C46B4()
{
  JUMPOUT(0x1A93C4690);
}

void sub_1A93C46BC(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;

  v11 = a8 | a7 | a6;
  if (a10 | a11 | a1 | a9 | v11 | a5)
  {
    v12 = a10 | a11 | a9 | v11 | a5;
    if (a1 != 1 || v12)
    {
      if (a1 == 2 && !v12)
        JUMPOUT(0x1A93C44B0);
      if (a1 == 3 && !v12)
        JUMPOUT(0x1A93C4684);
    }
  }
  JUMPOUT(0x1A93C4690);
}

void EpisodeListType.sortTypeFromUserDefaults.setter()
{
  uint64_t v0;
  _QWORD v1[8];

  sub_1A905466C(v0, (uint64_t)v1);
  __asm { BR              X11 }
}

void sub_1A93C4800()
{
  unsigned __int8 v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  _OWORD v16[2];
  __int128 v17;
  uint64_t v18;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel__applePodcastsFoundationSharedUserDefaults);
  v3 = objc_msgSend(v2, sel_episodeListSortTypeDictionary);

  if (v3)
  {
    v4 = MEMORY[0x1E0DEA968];
    v5 = sub_1A93F7EFC();

    v18 = v4;
    *(_QWORD *)&v17 = EpisodeSortType.rawValue.getter(v0);
    *((_QWORD *)&v17 + 1) = v6;
    sub_1A908A5DC(&v17, v16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = v5;
    sub_1A930E0CC(v16, 0x6B72616D6B6F6F62, 0xE900000000000073, isUniquelyReferenced_nonNull_native);
    v8 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9740);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405520;
    *(_QWORD *)(inited + 32) = 0x6B72616D6B6F6F62;
    *(_QWORD *)(inited + 40) = 0xE900000000000073;
    v10 = EpisodeSortType.rawValue.getter(v0);
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v10;
    *(_QWORD *)(inited + 56) = v11;
    v8 = sub_1A908A4A8(inited);
  }
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v1, sel__applePodcastsFoundationSharedUserDefaults);
  if (v8)
  {
    swift_bridgeObjectRetain();
    v13 = (void *)sub_1A93F7ED8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v12, sel_setEpisodeListSortTypeDictionary_, v13, v15);

  v14 = objc_msgSend(v1, sel__applePodcastsFoundationSharedUserDefaults);
  objc_msgSend(v14, sel_synchronize);
  swift_bridgeObjectRelease();

}

void EpisodeListType.defaultSortType.getter()
{
  uint64_t v0;
  _QWORD v1[8];

  sub_1A905466C(v0, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1A93C4B10()
{
  uint64_t v0;

  return v0;
}

void *EpisodeListType.allowedSortTypes.getter()
{
  uint64_t v0;
  void *result;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;

  sub_1A905466C(v0, (uint64_t)&v5);
  if (v13 < 9u)
    return (void *)MEMORY[0x1E0DEE9D8];
  v2 = v9 | v8 | v7;
  if (!(v11 | v12 | v5 | v10 | v2 | v6))
    return &unk_1E54D7C68;
  v3 = v11 | v12 | v10 | v2 | v6;
  result = (void *)MEMORY[0x1E0DEE9D8];
  if ((unint64_t)(v5 - 1) > 1 || v3)
  {
    if (v5 != 3 || v3)
    {
      if (v3)
        v4 = 0;
      else
        v4 = v5 == 4;
      if (v4)
        return &unk_1E54D7C40;
    }
    else
    {
      return &unk_1E54D7C90;
    }
  }
  return result;
}

void (*EpisodeListType.sortTypeFromUserDefaults.modify(uint64_t a1))()
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  EpisodeListType.sortTypeFromUserDefaults.getter();
  *(_BYTE *)(a1 + 8) = v3;
  return sub_1A93C4CCC;
}

void sub_1A93C4CCC()
{
  EpisodeListType.sortTypeFromUserDefaults.setter();
}

uint64_t EpisodeListType.shouldMatchShowSorting.getter()
{
  uint64_t v0;
  _BYTE v2[64];
  unsigned __int8 v3;

  sub_1A905466C(v0, (uint64_t)v2);
  return (v3 < 9uLL) & (0x1CEu >> v3);
}

void *EpisodeListType.availableSortTypes.getter()
{
  uint64_t v0;
  void *result;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;

  sub_1A905466C(v0, (uint64_t)&v5);
  if (v13 < 9u)
    return (void *)MEMORY[0x1E0DEE9D8];
  v2 = v9 | v8 | v7;
  if (!(v11 | v12 | v5 | v10 | v2 | v6))
    return &unk_1E54D7CE0;
  v3 = v11 | v12 | v10 | v2 | v6;
  result = (void *)MEMORY[0x1E0DEE9D8];
  if ((unint64_t)(v5 - 1) > 1 || v3)
  {
    if (v5 != 3 || v3)
    {
      if (v3)
        v4 = 0;
      else
        v4 = v5 == 4;
      if (v4)
        return &unk_1E54D7CB8;
    }
    else
    {
      return &unk_1E54D7D08;
    }
  }
  return result;
}

uint64_t EpisodeListType.pubDateLimit.getter()
{
  uint64_t v0;
  int8x16_t v1;
  uint64_t v2;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  _QWORD v13[4];
  int8x16_t v14;
  int8x16_t v15;
  char v16;

  sub_1A905466C(v0, (uint64_t)v13);
  if (v16 != 9)
    return 3;
  v1 = vorrq_s8(v14, v15);
  v2 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | v13[3] | v13[2] | v13[1];
  if (v13[0] != 3 || v2 != 0)
    return 3;
  v5 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  v6 = objc_msgSend(v5, sel_dictionaryForKey_, CFSTR("kEpisodeListPubDateLimitKey"));

  if (v6)
  {
    v7 = sub_1A93F7EFC();

    if (*(_QWORD *)(v7 + 16) && (v8 = sub_1A9094640(0x704574736574616CLL, 0xEE007365646F7369), (v9 & 1) != 0))
    {
      sub_1A906443C(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v11);
    }
    else
    {
      v11 = 0u;
      v12 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v12 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
        return v10;
    }
    else
    {
      sub_1A90A593C((uint64_t)&v11);
    }
  }
  return 2;
}

void EpisodeListType.pubDateLimit.setter()
{
  uint64_t v0;
  _QWORD v1[8];

  sub_1A905466C(v0, (uint64_t)v1);
  __asm { BR              X11 }
}

void sub_1A93C4FE8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  id v6;
  void *v7;
  id v8;
  _OWORD v9[2];
  __int128 v10;
  uint64_t v11;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel__applePodcastsFoundationSharedUserDefaults);
  v3 = objc_msgSend(v2, sel_dictionaryForKey_, CFSTR("kEpisodeListPubDateLimitKey"));

  if (v3)
  {
    v4 = sub_1A93F7EFC();

  }
  else
  {
    v4 = sub_1A908A4A8(MEMORY[0x1E0DEE9D8]);
  }
  v11 = MEMORY[0x1E0DEB418];
  *(_QWORD *)&v10 = v0;
  sub_1A908A5DC(&v10, v9);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1A930E0CC(v9, 0x6B72616D6B6F6F62, 0xE900000000000073, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v1, sel__applePodcastsFoundationSharedUserDefaults, v4);
  v7 = (void *)sub_1A93F7ED8();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setObject_forKey_, v7, CFSTR("kEpisodeListPubDateLimitKey"));

  v8 = objc_msgSend(v1, sel__applePodcastsFoundationSharedUserDefaults);
  objc_msgSend(v8, sel_synchronize);

}

uint64_t EpisodeListType.defaultPubDateLimit.getter()
{
  uint64_t v0;
  int8x16_t v1;
  uint64_t v2;
  BOOL v3;
  _QWORD v5[4];
  int8x16_t v6;
  int8x16_t v7;
  char v8;

  sub_1A905466C(v0, (uint64_t)v5);
  if (v8 == 9
    && ((v1 = vorrq_s8(v6, v7),
         v2 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | v5[3] | v5[2] | v5[1],
         v5[0] == 3)
      ? (v3 = v2 == 0)
      : (v3 = 0),
        v3))
  {
    return 2;
  }
  else
  {
    return 3;
  }
}

void (*EpisodeListType.pubDateLimit.modify(uint64_t *a1))()
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = EpisodeListType.pubDateLimit.getter();
  return sub_1A93C5320;
}

void sub_1A93C5320()
{
  EpisodeListType.pubDateLimit.setter();
}

uint64_t EpisodeListType.hidePlayedEpisodes.getter()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v13[8];

  sub_1A905466C(v0, (uint64_t)&v4);
  if (v12 == 1 || v12 == 6)
    goto LABEL_6;
  if (v12 != 9)
    return 0;
  v2 = v8 | v9 | v10;
  if (!(v6 | v5 | v4 | v7 | v2 | v11) || (result = 0, (unint64_t)(v4 - 3) <= 1) && !(v6 | v5 | v7 | v2 | v11))
  {
LABEL_6:
    sub_1A905466C(v0, (uint64_t)v13);
    __asm { BR              X11 }
  }
  return result;
}

void sub_1A93C5480(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 a6, __int128 a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v21 = v20[5];
  v22 = v20[6] | v20[7];
  v23 = v20[4] | v20[3] | a19;
  if (v22 | a1 | v21 | v23 | a18)
  {
    v24 = v22 | v21 | v23 | a18;
    if (a1 != 1 || v24)
    {
      if (a1 == 2 && !v24)
        goto LABEL_25;
      if (a1 != 3 || v24)
      {
        if (a1 != 4 || v24)
          goto LABEL_25;
        v19 = 0xE900000000000073;
        v25 = 0x6B72616D6B6F6F62;
      }
      else
      {
        v19 = 0xEE007365646F7369;
        v25 = 0x704574736574616CLL;
      }
    }
    else
    {
      v19 = 0xEE00646579616C50;
      v25 = 0x796C746E65636572;
    }
    a2 = v25;
  }
  v26 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  v27 = objc_msgSend(v26, sel_dictionaryForKey_, CFSTR("kEpisodeListHidePlayedEpisodesKey"));

  if (v27)
  {
    v28 = sub_1A93F7EFC();

    if (*(_QWORD *)(v28 + 16))
    {
      v29 = sub_1A9094640(a2, v19);
      if ((v30 & 1) != 0)
      {
        sub_1A906443C(*(_QWORD *)(v28 + 56) + 32 * v29, (uint64_t)&a6);
      }
      else
      {
        a6 = 0u;
        a7 = 0u;
      }
    }
    else
    {
      a6 = 0u;
      a7 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&a7 + 1))
    {
      if (swift_dynamicCast())
        JUMPOUT(0x1A93C5460);
    }
    else
    {
      sub_1A90A593C((uint64_t)&a6);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_25:
  JUMPOUT(0x1A93C53E0);
}

void EpisodeListType.hidePlayedEpisodes.setter()
{
  uint64_t v0;
  _QWORD v1[8];

  sub_1A905466C(v0, (uint64_t)v1);
  __asm { BR              X11 }
}

void sub_1A93C5708()
{
  char v0;
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  id v6;
  void *v7;
  id v8;
  _OWORD v9[2];
  __int128 v10;
  uint64_t v11;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel__applePodcastsFoundationSharedUserDefaults);
  v3 = objc_msgSend(v2, sel_dictionaryForKey_, CFSTR("kEpisodeListHidePlayedEpisodesKey"));

  if (v3)
  {
    v4 = sub_1A93F7EFC();

  }
  else
  {
    v4 = sub_1A908A4A8(MEMORY[0x1E0DEE9D8]);
  }
  v11 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v10) = v0 & 1;
  sub_1A908A5DC(&v10, v9);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1A930E0CC(v9, 0x6B72616D6B6F6F62, 0xE900000000000073, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v1, sel__applePodcastsFoundationSharedUserDefaults, v4);
  v7 = (void *)sub_1A93F7ED8();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setObject_forKey_, v7, CFSTR("kEpisodeListHidePlayedEpisodesKey"));

  v8 = objc_msgSend(v1, sel__applePodcastsFoundationSharedUserDefaults);
  objc_msgSend(v8, sel_synchronize);

}

BOOL EpisodeListType.allowsHidePlayedEpisodes.getter()
{
  uint64_t v0;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  sub_1A905466C(v0, (uint64_t)&v6);
  if (v14 == 1 || v14 == 6)
    return 1;
  if (v14 != 9)
    return 0;
  v3 = v10 | v9 | v8;
  if (!(v12 | v13 | v6 | v11 | v3 | v7))
    return 1;
  v4 = v12 | v13 | v11 | v3 | v7;
  if (v6 == 3 && !v4)
    return 1;
  return v6 == 4 && v4 == 0;
}

BOOL _s18PodcastsFoundation15EpisodeListTypeO21allowsPubDateLimitingSbvg_0()
{
  uint64_t v0;
  int8x16_t v1;
  uint64_t v2;
  uint64_t v6;
  int8x16_t v7;
  int8x16_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  sub_1A905466C(v0, (uint64_t)&v6);
  v1 = vorrq_s8(v7, v8);
  v2 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | v9 | v10 | v11;
  return v6 == 3 && v2 == 0 && v12 == 9;
}

void (*EpisodeListType.hidePlayedEpisodes.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = EpisodeListType.hidePlayedEpisodes.getter() & 1;
  return sub_1A93C5AD8;
}

void sub_1A93C5AD8()
{
  EpisodeListType.hidePlayedEpisodes.setter();
}

BOOL EpisodeListType.showsHidePlayedEpisodesControls.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BOOL8 result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  sub_1A905466C(v0, (uint64_t)&v3);
  result = 0;
  if (v11 == 9)
  {
    v1 = v7 | v6 | v5;
    if (!(v9 | v10 | v3 | v8 | v1 | v4) || (unint64_t)(v3 - 3) <= 1 && !(v9 | v10 | v8 | v1 | v4))
      return 1;
  }
  return result;
}

BOOL EpisodeListType.supportsEpisodeOrderFreezing.getter()
{
  uint64_t v0;
  _BYTE v2[72];

  sub_1A905466C(v0, (uint64_t)v2);
  return v2[64] == 5;
}

uint64_t EpisodeListType.shelfImpressionMetricsID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  sub_1A905466C(v0, (uint64_t)&v4);
  if (v12 == 5)
    return 0x7478654E7055;
  if (v12 != 9)
    return 0;
  v1 = v8 | v7 | v6;
  if (!(v10 | v11 | v4 | v9 | v1 | v5))
    return 0x64616F6C6E776F44;
  v2 = v10 | v11 | v9 | v1 | v5;
  if (v4 == 1 && !v2)
    return 0x796C746E65636552;
  if (v4 == 3 && !v2)
    return 0x704574736574614CLL;
  if (v4 == 4 && v2 == 0)
    return 0x6465766153;
  return 0;
}

void _s18PodcastsFoundation15EpisodeListTypeO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  _QWORD v1[8];

  sub_1A905466C(a1, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1A93C5D3C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v4;
  char v5;

  sub_1A905466C(v1, (uint64_t)&v4);
  if (v5)
    v2 = 0;
  else
    v2 = sub_1A9147398(v0, v4);
  return v2 & 1;
}

unint64_t sub_1A93C6248()
{
  unint64_t result;

  result = qword_1EEABFE70;
  if (!qword_1EEABFE70)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427D68, &type metadata for EpisodeListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFE70);
  }
  return result;
}

unint64_t sub_1A93C628C()
{
  unint64_t result;

  result = qword_1EEABFE78;
  if (!qword_1EEABFE78)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427D18, &type metadata for EpisodeListType.WatchTopLevelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFE78);
  }
  return result;
}

unint64_t sub_1A93C62D0()
{
  unint64_t result;

  result = qword_1EEABFE80;
  if (!qword_1EEABFE80)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427CC8, &type metadata for EpisodeListType.UnfollowedLibraryShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFE80);
  }
  return result;
}

unint64_t sub_1A93C6314()
{
  unint64_t result;

  result = qword_1EEABFE88;
  if (!qword_1EEABFE88)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427C78, &type metadata for EpisodeListType.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFE88);
  }
  return result;
}

unint64_t sub_1A93C6358()
{
  unint64_t result;

  result = qword_1EEABFE90;
  if (!qword_1EEABFE90)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427C28, &type metadata for EpisodeListType.BookmarksFromShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFE90);
  }
  return result;
}

unint64_t sub_1A93C639C()
{
  unint64_t result;

  result = qword_1EEABFE98;
  if (!qword_1EEABFE98)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427BD8, &type metadata for EpisodeListType.BookmarksCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFE98);
  }
  return result;
}

unint64_t sub_1A93C63E0()
{
  unint64_t result;

  result = qword_1EEABFEA0;
  if (!qword_1EEABFEA0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427B88, &type metadata for EpisodeListType.LatestEpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFEA0);
  }
  return result;
}

unint64_t sub_1A93C6424()
{
  unint64_t result;

  result = qword_1EEABFEA8;
  if (!qword_1EEABFEA8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427B38, &type metadata for EpisodeListType.PrototypeUpNextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFEA8);
  }
  return result;
}

unint64_t sub_1A93C6468()
{
  unint64_t result;

  result = qword_1EEABFEB0;
  if (!qword_1EEABFEB0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427AE8, &type metadata for EpisodeListType.ListenNowUpNextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFEB0);
  }
  return result;
}

unint64_t sub_1A93C64AC()
{
  unint64_t result;

  result = qword_1EEABFEB8;
  if (!qword_1EEABFEB8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427A98, &type metadata for EpisodeListType.StationShowEpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFEB8);
  }
  return result;
}

unint64_t sub_1A93C64F0()
{
  unint64_t result;

  result = qword_1EEABFEC0;
  if (!qword_1EEABFEC0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427A48, &type metadata for EpisodeListType.AllAvailableFilteredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFEC0);
  }
  return result;
}

unint64_t sub_1A93C6534()
{
  unint64_t result;

  result = qword_1EEABFED0;
  if (!qword_1EEABFED0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94279F8, &type metadata for EpisodeListType.AllAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFED0);
  }
  return result;
}

unint64_t sub_1A93C6578()
{
  unint64_t result;

  result = qword_1EEABFED8;
  if (!qword_1EEABFED8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94279A8, &type metadata for EpisodeListType.RecentlyPlayedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFED8);
  }
  return result;
}

unint64_t sub_1A93C65BC()
{
  unint64_t result;

  result = qword_1EEABFEE0;
  if (!qword_1EEABFEE0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427958, &type metadata for EpisodeListType.DownloadedFromShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFEE0);
  }
  return result;
}

unint64_t sub_1A93C6600()
{
  unint64_t result;

  result = qword_1EEABFEE8;
  if (!qword_1EEABFEE8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427908, &type metadata for EpisodeListType.DownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFEE8);
  }
  return result;
}

unint64_t sub_1A93C6644()
{
  unint64_t result;

  result = qword_1EEABFEF0;
  if (!qword_1EEABFEF0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94278B8, &type metadata for EpisodeListType.CategoryPageFromYourShowsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFEF0);
  }
  return result;
}

uint64_t sub_1A93C6688(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x5574736163646F70 && a2 == 0xEB00000000646975;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265746C6966 && a2 == 0xE600000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x796C6C6175736976 && a2 == 0xEE00646579616C50)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A93C6810(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000019 && a2 == 0x80000001A9450F30 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEA00000000006465 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A9450F50 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x796C746E65636572 && a2 == 0xEE00646579616C50 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C696176416C6C61 && a2 == 0xEC000000656C6261 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A9450F70 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A9450F90 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F4E6E657473696CLL && a2 == 0xEF7478654E705577 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7079746F746F7270 && a2 == 0xEF7478654E705565 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x704574736574616CLL && a2 == 0xEE007365646F7369 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6B72616D6B6F6F62 && a2 == 0xE900000000000073 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A9450FB0 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 2003789939 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A9450FD0 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x706F546863746177 && a2 == 0xED00006C6576654CLL)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v5 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t sub_1A93C6E9C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001A9450FF0 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656761506C6C7566 && a2 == 0xEC0000007473694CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A93C6FA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x5574736163646F70 && a2 == 0xEB00000000646975;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265746C6966 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A93C70A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x556E6F6974617473 && a2 == 0xEB00000000646975;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x536E6F6974617473 && a2 == 0xEF64697555776F68 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5574736163646F70 && a2 == 0xEB00000000646975)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A93C72A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD v34[5];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;

  v72 = a2;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0050);
  v59 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v70 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0058);
  v41 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v71 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0060);
  v42 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v76 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0068);
  v40 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v69 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0070);
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v68 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0078);
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v67 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0080);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v66 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0088);
  v39 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v75 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0090);
  v62 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v74 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0098);
  v36 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v73 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC00A0);
  v38 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v65 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC00A8);
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v63 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC00B0);
  v37 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v64 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC00B8);
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC00C0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC00C8);
  v22 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v24 = (char *)v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1[3];
  v79 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_1A93C6248();
  v26 = v80;
  sub_1A93F93C0();
  v80 = v26;
  if (!v26)
  {
    v34[2] = v17;
    v34[3] = v21;
    v34[1] = v19;
    v35 = v22;
    v27 = sub_1A93F8F94();
    if (*(_QWORD *)(v27 + 16) == 1)
    {
      v34[4] = v24;
      __asm { BR              X10 }
    }
    v28 = sub_1A93F8D00();
    v29 = swift_allocError();
    v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7C28);
    *v31 = &type metadata for EpisodeListType;
    v32 = v78;
    sub_1A93F8EF8();
    sub_1A93F8CE8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v31, *MEMORY[0x1E0DEC450], v28);
    v80 = v29;
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v32);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
}

void sub_1A93C8854(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;
  _BYTE v4[72];

  sub_1A905466C(a1, (uint64_t)v4);
  EpisodeListType.sortTypeFromUserDefaults.getter();
  *a2 = v3;
}

void sub_1A93C888C(uint64_t a1, uint64_t a2)
{
  _BYTE v2[72];

  sub_1A905466C(a2, (uint64_t)v2);
  EpisodeListType.sortTypeFromUserDefaults.setter();
}

uint64_t sub_1A93C88CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  _BYTE v4[72];

  sub_1A905466C(a1, (uint64_t)v4);
  result = EpisodeListType.pubDateLimit.getter();
  *a2 = result;
  return result;
}

void sub_1A93C8904(uint64_t a1, uint64_t a2)
{
  _BYTE v2[72];

  sub_1A905466C(a2, (uint64_t)v2);
  EpisodeListType.pubDateLimit.setter();
}

uint64_t sub_1A93C8944@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;
  _BYTE v4[72];

  sub_1A905466C(a1, (uint64_t)v4);
  result = EpisodeListType.hidePlayedEpisodes.getter();
  *a2 = result & 1;
  return result;
}

void sub_1A93C8980(uint64_t a1, uint64_t a2)
{
  _BYTE v2[72];

  sub_1A905466C(a2, (uint64_t)v2);
  EpisodeListType.hidePlayedEpisodes.setter();
}

uint64_t initializeWithCopy for EpisodeListType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1A90519B4(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for EpisodeListType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1A90519B4(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  sub_1A90531EC(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for EpisodeListType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_BYTE *)(a2 + 64);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_BYTE *)(a1 + 64);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 64) = v3;
  sub_1A90531EC(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeListType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF7 && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 247);
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 9)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeListType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 247;
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A93C8C10(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 64) <= 8u)
    return *(unsigned __int8 *)(a1 + 64);
  else
    return (*(_DWORD *)a1 + 9);
}

uint64_t sub_1A93C8C28(uint64_t result, unsigned int a2)
{
  if (a2 >= 9)
  {
    *(_QWORD *)result = a2 - 9;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_QWORD *)(result + 56) = 0;
    LOBYTE(a2) = 9;
  }
  *(_BYTE *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListType()
{
  return &type metadata for EpisodeListType;
}

uint64_t getEnumTagSinglePayload for EpisodeListType.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeListType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1A93C8D40 + 4 * byte_1A9426CCD[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1A93C8D74 + 4 * byte_1A9426CC8[v4]))();
}

uint64_t sub_1A93C8D74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93C8D7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93C8D84);
  return result;
}

uint64_t sub_1A93C8D90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93C8D98);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1A93C8D9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93C8DA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListType.CodingKeys()
{
  return &type metadata for EpisodeListType.CodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.CategoryPageFromYourShowsCodingKeys()
{
  return &type metadata for EpisodeListType.CategoryPageFromYourShowsCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.DownloadedCodingKeys()
{
  return &type metadata for EpisodeListType.DownloadedCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.DownloadedFromShowCodingKeys()
{
  return &type metadata for EpisodeListType.DownloadedFromShowCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.RecentlyPlayedCodingKeys()
{
  return &type metadata for EpisodeListType.RecentlyPlayedCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.AllAvailableCodingKeys()
{
  return &type metadata for EpisodeListType.AllAvailableCodingKeys;
}

uint64_t storeEnumTagSinglePayload for EpisodeListType.AllAvailableFilteredCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A93C8E60 + 4 * byte_1A9426CD7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A93C8E94 + 4 * byte_1A9426CD2[v4]))();
}

uint64_t sub_1A93C8E94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93C8E9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93C8EA4);
  return result;
}

uint64_t sub_1A93C8EB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93C8EB8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A93C8EBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93C8EC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListType.AllAvailableFilteredCodingKeys()
{
  return &type metadata for EpisodeListType.AllAvailableFilteredCodingKeys;
}

uint64_t storeEnumTagSinglePayload for EpisodeListType.StationShowEpisodesCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A93C8F2C + 4 * byte_1A9426CE1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A93C8F60 + 4 * byte_1A9426CDC[v4]))();
}

uint64_t sub_1A93C8F60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93C8F68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93C8F70);
  return result;
}

uint64_t sub_1A93C8F7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93C8F84);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A93C8F88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93C8F90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListType.StationShowEpisodesCodingKeys()
{
  return &type metadata for EpisodeListType.StationShowEpisodesCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.ListenNowUpNextCodingKeys()
{
  return &type metadata for EpisodeListType.ListenNowUpNextCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.PrototypeUpNextCodingKeys()
{
  return &type metadata for EpisodeListType.PrototypeUpNextCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.LatestEpisodesCodingKeys()
{
  return &type metadata for EpisodeListType.LatestEpisodesCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.BookmarksCodingKeys()
{
  return &type metadata for EpisodeListType.BookmarksCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.BookmarksFromShowCodingKeys()
{
  return &type metadata for EpisodeListType.BookmarksFromShowCodingKeys;
}

uint64_t _s18PodcastsFoundation15EpisodeListTypeO25ListenNowUpNextCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A93C904C + 4 * byte_1A9426CEB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A93C9080 + 4 * byte_1A9426CE6[v4]))();
}

uint64_t sub_1A93C9080(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93C9088(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93C9090);
  return result;
}

uint64_t sub_1A93C909C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93C90A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A93C90A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93C90B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListType.ShowCodingKeys()
{
  return &type metadata for EpisodeListType.ShowCodingKeys;
}

uint64_t _s18PodcastsFoundation15EpisodeListTypeO35CategoryPageFromYourShowsCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A93C910C + 4 * byte_1A9426CF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A93C912C + 4 * byte_1A9426CF5[v4]))();
}

_BYTE *sub_1A93C910C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A93C912C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A93C9134(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A93C913C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A93C9144(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A93C914C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListType.UnfollowedLibraryShowCodingKeys()
{
  return &type metadata for EpisodeListType.UnfollowedLibraryShowCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.WatchTopLevelCodingKeys()
{
  return &type metadata for EpisodeListType.WatchTopLevelCodingKeys;
}

unint64_t sub_1A93C917C()
{
  unint64_t result;

  result = qword_1EEABFF00;
  if (!qword_1EEABFF00)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427088, &type metadata for EpisodeListType.UnfollowedLibraryShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF00);
  }
  return result;
}

unint64_t sub_1A93C91C4()
{
  unint64_t result;

  result = qword_1EEABFF08;
  if (!qword_1EEABFF08)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427140, &type metadata for EpisodeListType.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF08);
  }
  return result;
}

unint64_t sub_1A93C920C()
{
  unint64_t result;

  result = qword_1EEABFF10;
  if (!qword_1EEABFF10)
  {
    result = MEMORY[0x1AF414014](&unk_1A94271F8, &type metadata for EpisodeListType.BookmarksFromShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF10);
  }
  return result;
}

unint64_t sub_1A93C9254()
{
  unint64_t result;

  result = qword_1EEABFF18;
  if (!qword_1EEABFF18)
  {
    result = MEMORY[0x1AF414014](&unk_1A94273A0, &type metadata for EpisodeListType.ListenNowUpNextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF18);
  }
  return result;
}

unint64_t sub_1A93C929C()
{
  unint64_t result;

  result = qword_1EEABFF20;
  if (!qword_1EEABFF20)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427458, &type metadata for EpisodeListType.StationShowEpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF20);
  }
  return result;
}

unint64_t sub_1A93C92E4()
{
  unint64_t result;

  result = qword_1EEABFF28;
  if (!qword_1EEABFF28)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427510, &type metadata for EpisodeListType.AllAvailableFilteredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF28);
  }
  return result;
}

unint64_t sub_1A93C932C()
{
  unint64_t result;

  result = qword_1EEABFF30;
  if (!qword_1EEABFF30)
  {
    result = MEMORY[0x1AF414014](&unk_1A94275C8, &type metadata for EpisodeListType.AllAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF30);
  }
  return result;
}

unint64_t sub_1A93C9374()
{
  unint64_t result;

  result = qword_1EEABFF38;
  if (!qword_1EEABFF38)
  {
    result = MEMORY[0x1AF414014](&unk_1A94276D0, &type metadata for EpisodeListType.DownloadedFromShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF38);
  }
  return result;
}

unint64_t sub_1A93C93BC()
{
  unint64_t result;

  result = qword_1EEABFF40;
  if (!qword_1EEABFF40)
  {
    result = MEMORY[0x1AF414014](&unk_1A94277D8, &type metadata for EpisodeListType.CategoryPageFromYourShowsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF40);
  }
  return result;
}

unint64_t sub_1A93C9404()
{
  unint64_t result;

  result = qword_1EEABFF48;
  if (!qword_1EEABFF48)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427890, &type metadata for EpisodeListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF48);
  }
  return result;
}

unint64_t sub_1A93C944C()
{
  unint64_t result;

  result = qword_1EEABFF50;
  if (!qword_1EEABFF50)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427748, &type metadata for EpisodeListType.CategoryPageFromYourShowsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF50);
  }
  return result;
}

unint64_t sub_1A93C9494()
{
  unint64_t result;

  result = qword_1EEABFF58;
  if (!qword_1EEABFF58)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427770, &type metadata for EpisodeListType.CategoryPageFromYourShowsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF58);
  }
  return result;
}

unint64_t sub_1A93C94DC()
{
  unint64_t result;

  result = qword_1EEABFF60;
  if (!qword_1EEABFF60)
  {
    result = MEMORY[0x1AF414014](&unk_1A94276F8, &type metadata for EpisodeListType.DownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF60);
  }
  return result;
}

unint64_t sub_1A93C9524()
{
  unint64_t result;

  result = qword_1EEABFF68;
  if (!qword_1EEABFF68)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427720, &type metadata for EpisodeListType.DownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF68);
  }
  return result;
}

unint64_t sub_1A93C956C()
{
  unint64_t result;

  result = qword_1EEABFF70;
  if (!qword_1EEABFF70)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427640, &type metadata for EpisodeListType.DownloadedFromShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF70);
  }
  return result;
}

unint64_t sub_1A93C95B4()
{
  unint64_t result;

  result = qword_1EEABFF78;
  if (!qword_1EEABFF78)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427668, &type metadata for EpisodeListType.DownloadedFromShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF78);
  }
  return result;
}

unint64_t sub_1A93C95FC()
{
  unint64_t result;

  result = qword_1EEABFF80;
  if (!qword_1EEABFF80)
  {
    result = MEMORY[0x1AF414014](&unk_1A94275F0, &type metadata for EpisodeListType.RecentlyPlayedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF80);
  }
  return result;
}

unint64_t sub_1A93C9644()
{
  unint64_t result;

  result = qword_1EEABFF88;
  if (!qword_1EEABFF88)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427618, &type metadata for EpisodeListType.RecentlyPlayedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF88);
  }
  return result;
}

unint64_t sub_1A93C968C()
{
  unint64_t result;

  result = qword_1EEABFF90;
  if (!qword_1EEABFF90)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427538, &type metadata for EpisodeListType.AllAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF90);
  }
  return result;
}

unint64_t sub_1A93C96D4()
{
  unint64_t result;

  result = qword_1EEABFF98;
  if (!qword_1EEABFF98)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427560, &type metadata for EpisodeListType.AllAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFF98);
  }
  return result;
}

unint64_t sub_1A93C971C()
{
  unint64_t result;

  result = qword_1EEABFFA0;
  if (!qword_1EEABFFA0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427480, &type metadata for EpisodeListType.AllAvailableFilteredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFFA0);
  }
  return result;
}

unint64_t sub_1A93C9764()
{
  unint64_t result;

  result = qword_1EEABFFA8;
  if (!qword_1EEABFFA8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94274A8, &type metadata for EpisodeListType.AllAvailableFilteredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFFA8);
  }
  return result;
}

unint64_t sub_1A93C97AC()
{
  unint64_t result;

  result = qword_1EEABFFB0;
  if (!qword_1EEABFFB0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94273C8, &type metadata for EpisodeListType.StationShowEpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFFB0);
  }
  return result;
}

unint64_t sub_1A93C97F4()
{
  unint64_t result;

  result = qword_1EEABFFB8;
  if (!qword_1EEABFFB8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94273F0, &type metadata for EpisodeListType.StationShowEpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFFB8);
  }
  return result;
}

unint64_t sub_1A93C983C()
{
  unint64_t result;

  result = qword_1EEABFFC0;
  if (!qword_1EEABFFC0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427310, &type metadata for EpisodeListType.ListenNowUpNextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFFC0);
  }
  return result;
}

unint64_t sub_1A93C9884()
{
  unint64_t result;

  result = qword_1EEABFFC8;
  if (!qword_1EEABFFC8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427338, &type metadata for EpisodeListType.ListenNowUpNextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFFC8);
  }
  return result;
}

unint64_t sub_1A93C98CC()
{
  unint64_t result;

  result = qword_1EEABFFD0;
  if (!qword_1EEABFFD0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94272C0, &type metadata for EpisodeListType.PrototypeUpNextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFFD0);
  }
  return result;
}

unint64_t sub_1A93C9914()
{
  unint64_t result;

  result = qword_1EEABFFD8;
  if (!qword_1EEABFFD8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94272E8, &type metadata for EpisodeListType.PrototypeUpNextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFFD8);
  }
  return result;
}

unint64_t sub_1A93C995C()
{
  unint64_t result;

  result = qword_1EEABFFE0;
  if (!qword_1EEABFFE0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427270, &type metadata for EpisodeListType.LatestEpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFFE0);
  }
  return result;
}

unint64_t sub_1A93C99A4()
{
  unint64_t result;

  result = qword_1EEABFFE8;
  if (!qword_1EEABFFE8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427298, &type metadata for EpisodeListType.LatestEpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFFE8);
  }
  return result;
}

unint64_t sub_1A93C99EC()
{
  unint64_t result;

  result = qword_1EEABFFF0;
  if (!qword_1EEABFFF0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427220, &type metadata for EpisodeListType.BookmarksCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFFF0);
  }
  return result;
}

unint64_t sub_1A93C9A34()
{
  unint64_t result;

  result = qword_1EEABFFF8;
  if (!qword_1EEABFFF8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427248, &type metadata for EpisodeListType.BookmarksCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABFFF8);
  }
  return result;
}

unint64_t sub_1A93C9A7C()
{
  unint64_t result;

  result = qword_1EEAC0000;
  if (!qword_1EEAC0000)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427168, &type metadata for EpisodeListType.BookmarksFromShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0000);
  }
  return result;
}

unint64_t sub_1A93C9AC4()
{
  unint64_t result;

  result = qword_1EEAC0008;
  if (!qword_1EEAC0008)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427190, &type metadata for EpisodeListType.BookmarksFromShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0008);
  }
  return result;
}

unint64_t sub_1A93C9B0C()
{
  unint64_t result;

  result = qword_1EEAC0010;
  if (!qword_1EEAC0010)
  {
    result = MEMORY[0x1AF414014](&unk_1A94270B0, &type metadata for EpisodeListType.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0010);
  }
  return result;
}

unint64_t sub_1A93C9B54()
{
  unint64_t result;

  result = qword_1EEAC0018;
  if (!qword_1EEAC0018)
  {
    result = MEMORY[0x1AF414014](&unk_1A94270D8, &type metadata for EpisodeListType.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0018);
  }
  return result;
}

unint64_t sub_1A93C9B9C()
{
  unint64_t result;

  result = qword_1EEAC0020;
  if (!qword_1EEAC0020)
  {
    result = MEMORY[0x1AF414014](&unk_1A9426FF8, &type metadata for EpisodeListType.UnfollowedLibraryShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0020);
  }
  return result;
}

unint64_t sub_1A93C9BE4()
{
  unint64_t result;

  result = qword_1EEAC0028;
  if (!qword_1EEAC0028)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427020, &type metadata for EpisodeListType.UnfollowedLibraryShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0028);
  }
  return result;
}

unint64_t sub_1A93C9C2C()
{
  unint64_t result;

  result = qword_1EEAC0030;
  if (!qword_1EEAC0030)
  {
    result = MEMORY[0x1AF414014](&unk_1A9426FA8, &type metadata for EpisodeListType.WatchTopLevelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0030);
  }
  return result;
}

unint64_t sub_1A93C9C74()
{
  unint64_t result;

  result = qword_1EEAC0038;
  if (!qword_1EEAC0038)
  {
    result = MEMORY[0x1AF414014](&unk_1A9426FD0, &type metadata for EpisodeListType.WatchTopLevelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0038);
  }
  return result;
}

unint64_t sub_1A93C9CBC()
{
  unint64_t result;

  result = qword_1EEAC0040;
  if (!qword_1EEAC0040)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427800, &type metadata for EpisodeListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0040);
  }
  return result;
}

unint64_t sub_1A93C9D04()
{
  unint64_t result;

  result = qword_1EEAC0048;
  if (!qword_1EEAC0048)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427828, &type metadata for EpisodeListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0048);
  }
  return result;
}

uint64_t sub_1A93C9D48(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A92F0);
    v10 = sub_1A9066CA8(a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], a3);
    result = MEMORY[0x1AF414014](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

id EpisodeListSettings.playPredicate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  char v5;
  id v6;
  id v7;
  id v8;
  id result;
  id v10;
  id v11;
  id v12;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(unsigned __int8 *)(v0 + 64);
  if (v3 == 2)
  {
    v10 = EpisodeListSettings.predicate.getter();
    v11 = objc_msgSend((id)objc_opt_self(), sel_predicateForEpisodeTypeFilter_, 5);
    v12 = objc_msgSend(v10, sel_AND_, v11);

    return v12;
  }
  if (v3 == 7)
  {
    sub_1A912C900(v2, v1);
    v4 = EpisodeUserFilter.canonical.getter(v2, v1);
    if (!v5)
    {
LABEL_6:
      v6 = EpisodeListSettings.predicate.getter();
      v7 = objc_msgSend((id)objc_opt_self(), sel_predicateForEpisodeTypeFilter_, 5);
      v8 = objc_msgSend(v6, sel_AND_, v7);

      sub_1A912C738(v2, v1);
      return v8;
    }
    if (v5 != 2)
    {
      sub_1A912C738(v4, 1);
      result = (id)sub_1A93F8E14();
      __break(1u);
      return result;
    }
    if (v4 < 2)
      goto LABEL_6;
    sub_1A912C738(v2, v1);
  }
  return EpisodeListSettings.predicate.getter();
}

uint64_t EpisodeListSettings.listType.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A93CA918(a1, v1);
}

uint64_t (*EpisodeListSettings.listType.modify())()
{
  return nullsub_1;
}

uint64_t EpisodeListSettings.sort.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 65) = result;
  return result;
}

uint64_t (*EpisodeListSettings.sort.modify())()
{
  return nullsub_1;
}

uint64_t EpisodeListSettings.pubDateLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t EpisodeListSettings.pubDateLimit.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

uint64_t (*EpisodeListSettings.pubDateLimit.modify())()
{
  return nullsub_1;
}

uint64_t EpisodeListSettings.hidePlayedEpisodes.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t EpisodeListSettings.hidePlayedEpisodes.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 80) = result;
  return result;
}

uint64_t (*EpisodeListSettings.hidePlayedEpisodes.modify())()
{
  return nullsub_1;
}

uint64_t EpisodeListSettings.hideTrailers.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t EpisodeListSettings.hideTrailers.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 81) = result;
  return result;
}

uint64_t (*EpisodeListSettings.hideTrailers.modify())()
{
  return nullsub_1;
}

uint64_t EpisodeListSettings.hideVideoEpisodes.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 82);
}

uint64_t EpisodeListSettings.hideVideoEpisodes.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 82) = result;
  return result;
}

uint64_t (*EpisodeListSettings.hideVideoEpisodes.modify())()
{
  return nullsub_1;
}

uint64_t sub_1A93CA10C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A93CA140 + 4 * byte_1A9427DCA[a1]))(0x657079547473696CLL, 0xE800000000000000);
}

uint64_t sub_1A93CA140()
{
  return 1953656691;
}

uint64_t sub_1A93CA150()
{
  return 0x4C65746144627570;
}

unint64_t sub_1A93CA170()
{
  return 0xD000000000000012;
}

uint64_t sub_1A93CA190()
{
  return 0x6961725465646968;
}

unint64_t sub_1A93CA1B0()
{
  return 0xD000000000000011;
}

uint64_t sub_1A93CA1CC()
{
  unsigned __int8 *v0;

  return sub_1A93CA10C(*v0);
}

uint64_t sub_1A93CA1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93CAEDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93CA1F8()
{
  sub_1A93CAAB8();
  return sub_1A93F945C();
}

uint64_t sub_1A93CA220()
{
  sub_1A93CAAB8();
  return sub_1A93F9468();
}

uint64_t EpisodeListSettings.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  _DWORD v16[6];
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  int v29;
  char v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC00E0);
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v19 = v1[1];
  v20 = v6;
  v18 = v1[2];
  v7 = *((_QWORD *)v1 + 6);
  v8 = *((_QWORD *)v1 + 7);
  v9 = *((_BYTE *)v1 + 64);
  v29 = *((unsigned __int8 *)v1 + 65);
  v17 = *((_QWORD *)v1 + 9);
  v10 = *((unsigned __int8 *)v1 + 80);
  v16[4] = *((unsigned __int8 *)v1 + 81);
  v16[5] = v10;
  v16[3] = *((unsigned __int8 *)v1 + 82);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93CAAB8();
  sub_1A93F93D8();
  v23 = v20;
  v24 = v19;
  v25 = v18;
  v26 = v7;
  v27 = v8;
  v11 = v5;
  v28 = v9;
  v30 = 0;
  sub_1A93CAAFC();
  v12 = v22;
  sub_1A93F9030();
  if (v12)
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v5, v3);
  v14 = v17;
  v15 = v21;
  LOBYTE(v23) = v29;
  v30 = 1;
  sub_1A9289184();
  sub_1A93F9030();
  *(_QWORD *)&v23 = v14;
  v30 = 2;
  type metadata accessor for MTEpisodePubDateLimit(0);
  sub_1A93CAB84(&qword_1EEAC00F8, (uint64_t)&protocol conformance descriptor for MTEpisodePubDateLimit);
  sub_1A93F9030();
  LOBYTE(v23) = 3;
  sub_1A93F900C();
  LOBYTE(v23) = 4;
  sub_1A93F900C();
  LOBYTE(v23) = 5;
  sub_1A93F900C();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v11, v3);
}

uint64_t EpisodeListSettings.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  int v50;
  char v51;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0100);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93CAAB8();
  sub_1A93F93C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v51 = 0;
  sub_1A93CAB40();
  sub_1A93F8F7C();
  v35 = a2;
  v10 = v45;
  v9 = v46;
  v11 = v47;
  v51 = 1;
  v50 = v49;
  v38 = v42;
  v39 = v41;
  v36 = v43;
  v37 = v44;
  v40 = v48;
  sub_1A90519B4(v41, v42, v43, v44, v45, v46, v47, v48, v49);
  sub_1A928934C();
  sub_1A93F8F7C();
  v32 = v11;
  v33 = v9;
  v34 = v10;
  v12 = v38;
  v13 = v39;
  LODWORD(v9) = v41;
  type metadata accessor for MTEpisodePubDateLimit(0);
  v51 = 2;
  sub_1A93CAB84(&qword_1EEAC0110, (uint64_t)&protocol conformance descriptor for MTEpisodePubDateLimit);
  sub_1A93F8F7C();
  v31 = v9;
  v14 = v41;
  LOBYTE(v41) = 3;
  v30 = sub_1A93F8F58();
  LOBYTE(v41) = 4;
  v29 = sub_1A93F8F58();
  LOBYTE(v41) = 5;
  v15 = sub_1A93F8F58();
  v29 &= 1u;
  v30 &= 1u;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v15 & 1;
  v17 = v35;
  *v35 = v13;
  v17[1] = v12;
  v18 = v12;
  v19 = v14;
  v20 = v36;
  v21 = v37;
  v17[2] = v36;
  v17[3] = v21;
  v23 = v33;
  v22 = v34;
  v17[4] = v34;
  v17[5] = v23;
  v24 = v32;
  v25 = v40;
  v17[6] = v32;
  v17[7] = v25;
  v26 = v50;
  *((_BYTE *)v17 + 64) = v50;
  *((_BYTE *)v17 + 65) = v31;
  v17[9] = v19;
  *((_BYTE *)v17 + 80) = v30;
  *((_BYTE *)v17 + 81) = v29;
  *((_BYTE *)v17 + 82) = v16;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_1A90531EC(v39, v18, v20, v21, v22, v23, v24, v40, v26);
}

uint64_t sub_1A93CA8B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return EpisodeListSettings.init(from:)(a1, a2);
}

uint64_t sub_1A93CA8C8(_QWORD *a1)
{
  return EpisodeListSettings.encode(to:)(a1);
}

uint64_t sub_1A93CA8DC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for EpisodeListType(a2, a1);
  return a2;
}

uint64_t sub_1A93CA918(uint64_t a1, uint64_t a2)
{
  assignWithTake for EpisodeListType(a2, a1);
  return a2;
}

uint64_t _s18PodcastsFoundation19EpisodeListSettingsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4;
  uint64_t v5;
  unsigned __int8 v6;
  int v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t result;
  unsigned int v21;
  unsigned __int8 v22;
  _BYTE v23[72];
  _BYTE v24[80];

  sub_1A905466C(a1, (uint64_t)v23);
  v4 = *(_BYTE *)(a1 + 65);
  v5 = *(_QWORD *)(a1 + 72);
  v22 = *(_BYTE *)(a1 + 80);
  v6 = *(_BYTE *)(a1 + 81);
  v7 = *(unsigned __int8 *)(a1 + 82);
  sub_1A905466C(a2, (uint64_t)v24);
  v8 = *(_BYTE *)(a2 + 65);
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(_BYTE *)(a2 + 80);
  v11 = *(_BYTE *)(a2 + 81);
  v12 = *(unsigned __int8 *)(a2 + 82);
  _s18PodcastsFoundation15EpisodeListTypeO2eeoiySbAC_ACtFZ_0((uint64_t)v23);
  if ((v13 & 1) == 0)
    return 0;
  v14 = EpisodeSortType.rawValue.getter(v4);
  v16 = v15;
  if (v14 != EpisodeSortType.rawValue.getter(v8) || v16 != v17)
  {
    v19 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v19 & 1) == 0)
      return result;
    if (v5 == v9)
      goto LABEL_8;
    return 0;
  }
  swift_bridgeObjectRelease_n();
  if (v5 != v9)
    return 0;
LABEL_8:
  if (((v6 ^ v11) & 1) != 0)
    v21 = 0;
  else
    v21 = v7 ^ v12 ^ 1;
  if (((v22 ^ v10) & 1) != 0)
    return 0;
  else
    return v21;
}

unint64_t sub_1A93CAAB8()
{
  unint64_t result;

  result = qword_1EEAC00E8;
  if (!qword_1EEAC00E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427F78, &type metadata for EpisodeListSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC00E8);
  }
  return result;
}

unint64_t sub_1A93CAAFC()
{
  unint64_t result;

  result = qword_1EEAC00F0;
  if (!qword_1EEAC00F0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeListType, &type metadata for EpisodeListType);
    atomic_store(result, (unint64_t *)&qword_1EEAC00F0);
  }
  return result;
}

unint64_t sub_1A93CAB40()
{
  unint64_t result;

  result = qword_1EEAC0108;
  if (!qword_1EEAC0108)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeListType, &type metadata for EpisodeListType);
    atomic_store(result, (unint64_t *)&qword_1EEAC0108);
  }
  return result;
}

uint64_t sub_1A93CAB84(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for MTEpisodePubDateLimit(255);
    result = MEMORY[0x1AF414014](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t assignWithCopy for EpisodeListSettings(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v22;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v22 = *(_BYTE *)(a2 + 64);
  sub_1A90519B4(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v22);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v22;
  sub_1A90531EC(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_BYTE *)(a1 + 82) = *(_BYTE *)(a2 + 82);
  return a1;
}

uint64_t assignWithTake for EpisodeListSettings(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  __int128 v15;

  v4 = *(_BYTE *)(a2 + 64);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_BYTE *)(a1 + 64);
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v15;
  *(_BYTE *)(a1 + 64) = v4;
  sub_1A90531EC(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_BYTE *)(a1 + 82) = *(_BYTE *)(a2 + 82);
  return a1;
}

uint64_t storeEnumTagSinglePayload for EpisodeListSettings.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A93CAD84 + 4 * byte_1A9427DE7[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A93CADB8 + 4 * byte_1A9427DE2[v4]))();
}

uint64_t sub_1A93CADB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93CADC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93CADC8);
  return result;
}

uint64_t sub_1A93CADD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93CADDCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A93CADE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93CADE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListSettings.CodingKeys()
{
  return &type metadata for EpisodeListSettings.CodingKeys;
}

unint64_t sub_1A93CAE08()
{
  unint64_t result;

  result = qword_1EEAC0118;
  if (!qword_1EEAC0118)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427F50, &type metadata for EpisodeListSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0118);
  }
  return result;
}

unint64_t sub_1A93CAE50()
{
  unint64_t result;

  result = qword_1EEAC0120;
  if (!qword_1EEAC0120)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427EC0, &type metadata for EpisodeListSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0120);
  }
  return result;
}

unint64_t sub_1A93CAE98()
{
  unint64_t result;

  result = qword_1EEAC0128;
  if (!qword_1EEAC0128)
  {
    result = MEMORY[0x1AF414014](&unk_1A9427EE8, &type metadata for EpisodeListSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0128);
  }
  return result;
}

uint64_t sub_1A93CAEDC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657079547473696CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953656691 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C65746144627570 && a2 == 0xEC00000074696D69 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A9451060 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6961725465646968 && a2 == 0xEC0000007372656CLL || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A9451080)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

unint64_t sub_1A93CB178()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2AAF60;
  if (!qword_1ED2AAF60)
  {
    v1 = sub_1A93F7410();
    result = MEMORY[0x1AF414014](MEMORY[0x1E0CB0F10], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2AAF60);
  }
  return result;
}

uint64_t sub_1A93CB1C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A93CB1F8 + 4 * byte_1A9427FF0[a1]))(0x7972617262696CLL, 0xE700000000000000);
}

uint64_t sub_1A93CB1F8()
{
  return 0x74736163646F70;
}

uint64_t sub_1A93CB20C()
{
  return 0x7365646F73697065;
}

uint64_t sub_1A93CB224()
{
  return 0x6970456C61636F6CLL;
}

uint64_t sub_1A93CB248()
{
  return 0x646F506C61636F6CLL;
}

uint64_t sub_1A93CB268()
{
  return 0x6E6F6974617473;
}

uint64_t sub_1A93CB27C()
{
  return 0x746F687370616E73;
}

uint64_t sub_1A93CB294()
{
  return 0x657551616964656DLL;
}

unint64_t sub_1A93CB2B0()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1A93CB2CC()
{
  unsigned __int8 *v0;

  return sub_1A93CB1C4(*v0);
}

uint64_t sub_1A93CB2D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93CE72C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A93CB2F8(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1A93CB304()
{
  sub_1A93CD66C();
  return sub_1A93F945C();
}

uint64_t sub_1A93CB32C()
{
  sub_1A93CD66C();
  return sub_1A93F9468();
}

uint64_t sub_1A93CB354()
{
  return 7562345;
}

uint64_t sub_1A93CB368()
{
  sub_1A93CD908();
  return sub_1A93F945C();
}

uint64_t sub_1A93CB390()
{
  sub_1A93CD908();
  return sub_1A93F9468();
}

uint64_t sub_1A93CB3B8()
{
  sub_1A93CD990();
  return sub_1A93F945C();
}

uint64_t sub_1A93CB3E0()
{
  sub_1A93CD990();
  return sub_1A93F9468();
}

uint64_t sub_1A93CB408()
{
  sub_1A93CD8C4();
  return sub_1A93F945C();
}

uint64_t sub_1A93CB430()
{
  sub_1A93CD8C4();
  return sub_1A93F9468();
}

uint64_t sub_1A93CB45C()
{
  sub_1A93CD880();
  return sub_1A93F945C();
}

uint64_t sub_1A93CB484()
{
  sub_1A93CD880();
  return sub_1A93F9468();
}

uint64_t sub_1A93CB4AC()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x696669746E656469;
}

uint64_t sub_1A93CB4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93CEB1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93CB518()
{
  sub_1A93CD738();
  return sub_1A93F945C();
}

uint64_t sub_1A93CB540()
{
  sub_1A93CD738();
  return sub_1A93F9468();
}

uint64_t sub_1A93CB568()
{
  sub_1A93CD94C();
  return sub_1A93F945C();
}

uint64_t sub_1A93CB590()
{
  sub_1A93CD94C();
  return sub_1A93F9468();
}

uint64_t sub_1A93CB5B8()
{
  sub_1A93CD77C();
  return sub_1A93F945C();
}

uint64_t sub_1A93CB5E0()
{
  sub_1A93CD77C();
  return sub_1A93F9468();
}

uint64_t sub_1A93CB608()
{
  _BYTE *v0;

  if (*v0)
    return 0x496C616974696E69;
  else
    return 25705;
}

uint64_t sub_1A93CB63C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93CEC20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93CB660()
{
  sub_1A93CD83C();
  return sub_1A93F945C();
}

uint64_t sub_1A93CB688()
{
  sub_1A93CD83C();
  return sub_1A93F9468();
}

uint64_t sub_1A93CB6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 7562345 && a2 == 0xE300000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A93F90C0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A93CB734()
{
  sub_1A93CD6B0();
  return sub_1A93F945C();
}

uint64_t sub_1A93CB75C()
{
  sub_1A93CD6B0();
  return sub_1A93F9468();
}

void MediaIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0148);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v33 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0150);
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v35 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0158);
  v31 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  MEMORY[0x1E0C80A78](v5);
  v30 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0160);
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  MEMORY[0x1E0C80A78](v7);
  v27 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0168);
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v22 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0170);
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v21 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0178);
  v19 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v18 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0180);
  v16[2] = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0188);
  MEMORY[0x1E0C80A78](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0190);
  v41 = *(_QWORD *)(v13 - 8);
  v42 = v13;
  MEMORY[0x1E0C80A78](v13);
  v14 = *v1;
  v39 = v1[1];
  v40 = v14;
  v16[1] = v1[2];
  v16[0] = v1[3];
  v15 = *((unsigned __int8 *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93CD66C();
  sub_1A93F93D8();
  __asm { BR              X9 }
}

uint64_t sub_1A93CBAD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 - 72) = 1;
  sub_1A93CD94C();
  v3 = *(_QWORD *)(v2 - 112);
  sub_1A93F8FAC();
  *(_QWORD *)(v2 - 72) = *(_QWORD *)(v2 - 128);
  sub_1A9210228();
  v4 = *(_QWORD *)(v2 - 312);
  sub_1A93F9030();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 320) + 8))(v0, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v1, v3);
}

void sub_1A93CC024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 72) = 0;
  sub_1A93CD990();
  v5 = *(_QWORD *)(v4 - 112);
  sub_1A93F8FAC();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 120) + 8))(v2, v5);
  JUMPOUT(0x1A93CC000);
}

uint64_t MediaIdentifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD v30[5];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;

  v48 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0228);
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  MEMORY[0x1E0C80A78](v3);
  v54 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0230);
  v6 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  v45 = v6;
  MEMORY[0x1E0C80A78](v5);
  v53 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0238);
  v9 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  v41 = v9;
  MEMORY[0x1E0C80A78](v8);
  v47 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0240);
  v49 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v52 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0248);
  v37 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v46 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0250);
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v51 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0258);
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v50 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0260);
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0268);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0270);
  v19 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v21 = (char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_1A93CD66C();
  v23 = v57;
  sub_1A93F93C0();
  if (!v23)
  {
    v30[3] = v18;
    v30[1] = v16;
    v30[2] = v15;
    v30[4] = 0;
    v57 = v19;
    v24 = sub_1A93F8F94();
    if (*(_QWORD *)(v24 + 16) == 1)
    {
      v30[0] = v21;
      __asm { BR              X10 }
    }
    v25 = sub_1A93F8D00();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7C28);
    *v27 = &type metadata for MediaIdentifier;
    v28 = v55;
    sub_1A93F8EF8();
    sub_1A93F8CE8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x1E0DEC450], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v21, v28);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v56);
}

uint64_t sub_1A93CCF48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaIdentifier.init(from:)(a1, a2);
}

void sub_1A93CCF5C(_QWORD *a1)
{
  MediaIdentifier.encode(to:)(a1);
}

void _s18PodcastsFoundation15MediaIdentifierO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

BOOL sub_1A93CCFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  int v9;

  if (v9)
  {
    sub_1A912C880(v1, v0, v2, v3, v9);
    sub_1A912C6B4(v7, v5, v4, v6, v8);
    sub_1A912C6B4(v1, v0, v2, v3, v9);
    return 0;
  }
  else
  {
    sub_1A912C6B4(v7, v5, v4, v6, 0);
    sub_1A912C6B4(v1, v0, v2, v3, 0);
    return v7 == v1;
  }
}

unint64_t sub_1A93CD66C()
{
  unint64_t result;

  result = qword_1EEAC0198;
  if (!qword_1EEAC0198)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428BE0, &type metadata for MediaIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0198);
  }
  return result;
}

unint64_t sub_1A93CD6B0()
{
  unint64_t result;

  result = qword_1EEAC01A0;
  if (!qword_1EEAC01A0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428B90, &type metadata for MediaIdentifier.UniversalEpisodeIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC01A0);
  }
  return result;
}

unint64_t sub_1A93CD6F4()
{
  unint64_t result;

  result = qword_1EEAC01B8;
  if (!qword_1EEAC01B8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for UniversalEpisodeIdentifier, &type metadata for UniversalEpisodeIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EEAC01B8);
  }
  return result;
}

unint64_t sub_1A93CD738()
{
  unint64_t result;

  result = qword_1EEAC01C0;
  if (!qword_1EEAC01C0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428B40, &type metadata for MediaIdentifier.MediaQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC01C0);
  }
  return result;
}

unint64_t sub_1A93CD77C()
{
  unint64_t result;

  result = qword_1EEAC01D0;
  if (!qword_1EEAC01D0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428AF0, &type metadata for MediaIdentifier.SnapshotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC01D0);
  }
  return result;
}

uint64_t sub_1A93CD7C0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEAC01D8);
    v10 = sub_1A93CDA18(a2, a3);
    result = MEMORY[0x1AF414014](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A93CD83C()
{
  unint64_t result;

  result = qword_1EEAC01E8;
  if (!qword_1EEAC01E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428AA0, &type metadata for MediaIdentifier.StationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC01E8);
  }
  return result;
}

unint64_t sub_1A93CD880()
{
  unint64_t result;

  result = qword_1EEAC01F0;
  if (!qword_1EEAC01F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428A50, &type metadata for MediaIdentifier.LocalPodcastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC01F0);
  }
  return result;
}

unint64_t sub_1A93CD8C4()
{
  unint64_t result;

  result = qword_1EEAC01F8;
  if (!qword_1EEAC01F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428A00, &type metadata for MediaIdentifier.LocalEpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC01F8);
  }
  return result;
}

unint64_t sub_1A93CD908()
{
  unint64_t result;

  result = qword_1EEAC0200;
  if (!qword_1EEAC0200)
  {
    result = MEMORY[0x1AF414014](&unk_1A94289B0, &type metadata for MediaIdentifier.EpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0200);
  }
  return result;
}

unint64_t sub_1A93CD94C()
{
  unint64_t result;

  result = qword_1EEAC0218;
  if (!qword_1EEAC0218)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428960, &type metadata for MediaIdentifier.PodcastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0218);
  }
  return result;
}

unint64_t sub_1A93CD990()
{
  unint64_t result;

  result = qword_1EEAC0220;
  if (!qword_1EEAC0220)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428910, &type metadata for MediaIdentifier.LibraryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0220);
  }
  return result;
}

unint64_t sub_1A93CD9D4()
{
  unint64_t result;

  result = qword_1EEAC0280;
  if (!qword_1EEAC0280)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for UniversalEpisodeIdentifier, &type metadata for UniversalEpisodeIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EEAC0280);
  }
  return result;
}

uint64_t sub_1A93CDA18(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(255);
    result = MEMORY[0x1AF414014](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for MediaIdentifier(uint64_t a1)
{
  return sub_1A912C6B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for MediaIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A912C880(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for MediaIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A912C880(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1A912C6B4(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for MediaIdentifier(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1A912C6B4(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaIdentifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF8 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 248);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 8)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 248;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A93CDC14(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 7u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 8);
}

uint64_t sub_1A93CDC2C(uint64_t result, unsigned int a2)
{
  if (a2 >= 8)
  {
    *(_QWORD *)result = a2 - 8;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 8;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MediaIdentifier()
{
  return &type metadata for MediaIdentifier;
}

uint64_t storeEnumTagSinglePayload for MediaIdentifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1A93CDCA4 + 4 * byte_1A942802C[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1A93CDCD8 + 4 * byte_1A9428027[v4]))();
}

uint64_t sub_1A93CDCD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93CDCE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93CDCE8);
  return result;
}

uint64_t sub_1A93CDCF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93CDCFCLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1A93CDD00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93CDD08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaIdentifier.CodingKeys()
{
  return &type metadata for MediaIdentifier.CodingKeys;
}

ValueMetadata *type metadata accessor for MediaIdentifier.LibraryCodingKeys()
{
  return &type metadata for MediaIdentifier.LibraryCodingKeys;
}

ValueMetadata *type metadata accessor for MediaIdentifier.PodcastCodingKeys()
{
  return &type metadata for MediaIdentifier.PodcastCodingKeys;
}

ValueMetadata *type metadata accessor for MediaIdentifier.EpisodesCodingKeys()
{
  return &type metadata for MediaIdentifier.EpisodesCodingKeys;
}

ValueMetadata *type metadata accessor for MediaIdentifier.LocalEpisodesCodingKeys()
{
  return &type metadata for MediaIdentifier.LocalEpisodesCodingKeys;
}

ValueMetadata *type metadata accessor for MediaIdentifier.LocalPodcastCodingKeys()
{
  return &type metadata for MediaIdentifier.LocalPodcastCodingKeys;
}

ValueMetadata *type metadata accessor for MediaIdentifier.StationCodingKeys()
{
  return &type metadata for MediaIdentifier.StationCodingKeys;
}

ValueMetadata *type metadata accessor for MediaIdentifier.SnapshotCodingKeys()
{
  return &type metadata for MediaIdentifier.SnapshotCodingKeys;
}

uint64_t _s18PodcastsFoundation15MediaIdentifierO17StationCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A93CDDE8 + 4 * byte_1A9428036[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A93CDE1C + 4 * byte_1A9428031[v4]))();
}

uint64_t sub_1A93CDE1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93CDE24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93CDE2CLL);
  return result;
}

uint64_t sub_1A93CDE38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93CDE40);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A93CDE44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93CDE4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaIdentifier.MediaQueryCodingKeys()
{
  return &type metadata for MediaIdentifier.MediaQueryCodingKeys;
}

uint64_t _s18PodcastsFoundation15MediaIdentifierO17PodcastCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A93CDEA8 + 4 * byte_1A942803B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A93CDEC8 + 4 * byte_1A9428040[v4]))();
}

_BYTE *sub_1A93CDEA8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A93CDEC8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A93CDED0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A93CDED8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A93CDEE0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A93CDEE8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MediaIdentifier.UniversalEpisodeIdentifiersCodingKeys()
{
  return &type metadata for MediaIdentifier.UniversalEpisodeIdentifiersCodingKeys;
}

unint64_t sub_1A93CDF08()
{
  unint64_t result;

  result = qword_1EEAC02A0;
  if (!qword_1EEAC02A0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94282D8, &type metadata for MediaIdentifier.UniversalEpisodeIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC02A0);
  }
  return result;
}

unint64_t sub_1A93CDF50()
{
  unint64_t result;

  result = qword_1EEAC02A8;
  if (!qword_1EEAC02A8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428390, &type metadata for MediaIdentifier.MediaQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC02A8);
  }
  return result;
}

unint64_t sub_1A93CDF98()
{
  unint64_t result;

  result = qword_1EEAC02B0;
  if (!qword_1EEAC02B0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428448, &type metadata for MediaIdentifier.SnapshotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC02B0);
  }
  return result;
}

unint64_t sub_1A93CDFE0()
{
  unint64_t result;

  result = qword_1EEAC02B8;
  if (!qword_1EEAC02B8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428500, &type metadata for MediaIdentifier.StationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC02B8);
  }
  return result;
}

unint64_t sub_1A93CE028()
{
  unint64_t result;

  result = qword_1EEAC02C0;
  if (!qword_1EEAC02C0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94285B8, &type metadata for MediaIdentifier.LocalPodcastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC02C0);
  }
  return result;
}

unint64_t sub_1A93CE070()
{
  unint64_t result;

  result = qword_1EEAC02C8;
  if (!qword_1EEAC02C8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428670, &type metadata for MediaIdentifier.LocalEpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC02C8);
  }
  return result;
}

unint64_t sub_1A93CE0B8()
{
  unint64_t result;

  result = qword_1EEAC02D0;
  if (!qword_1EEAC02D0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428728, &type metadata for MediaIdentifier.EpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC02D0);
  }
  return result;
}

unint64_t sub_1A93CE100()
{
  unint64_t result;

  result = qword_1EEAC02D8;
  if (!qword_1EEAC02D8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94287E0, &type metadata for MediaIdentifier.PodcastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC02D8);
  }
  return result;
}

unint64_t sub_1A93CE148()
{
  unint64_t result;

  result = qword_1EEAC02E0;
  if (!qword_1EEAC02E0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94288E8, &type metadata for MediaIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC02E0);
  }
  return result;
}

unint64_t sub_1A93CE190()
{
  unint64_t result;

  result = qword_1EEAC02E8;
  if (!qword_1EEAC02E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428808, &type metadata for MediaIdentifier.LibraryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC02E8);
  }
  return result;
}

unint64_t sub_1A93CE1D8()
{
  unint64_t result;

  result = qword_1EEAC02F0;
  if (!qword_1EEAC02F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428830, &type metadata for MediaIdentifier.LibraryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC02F0);
  }
  return result;
}

unint64_t sub_1A93CE220()
{
  unint64_t result;

  result = qword_1EEAC02F8;
  if (!qword_1EEAC02F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428750, &type metadata for MediaIdentifier.PodcastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC02F8);
  }
  return result;
}

unint64_t sub_1A93CE268()
{
  unint64_t result;

  result = qword_1EEAC0300;
  if (!qword_1EEAC0300)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428778, &type metadata for MediaIdentifier.PodcastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0300);
  }
  return result;
}

unint64_t sub_1A93CE2B0()
{
  unint64_t result;

  result = qword_1EEAC0308;
  if (!qword_1EEAC0308)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428698, &type metadata for MediaIdentifier.EpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0308);
  }
  return result;
}

unint64_t sub_1A93CE2F8()
{
  unint64_t result;

  result = qword_1EEAC0310;
  if (!qword_1EEAC0310)
  {
    result = MEMORY[0x1AF414014](&unk_1A94286C0, &type metadata for MediaIdentifier.EpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0310);
  }
  return result;
}

unint64_t sub_1A93CE340()
{
  unint64_t result;

  result = qword_1EEAC0318;
  if (!qword_1EEAC0318)
  {
    result = MEMORY[0x1AF414014](&unk_1A94285E0, &type metadata for MediaIdentifier.LocalEpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0318);
  }
  return result;
}

unint64_t sub_1A93CE388()
{
  unint64_t result;

  result = qword_1EEAC0320;
  if (!qword_1EEAC0320)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428608, &type metadata for MediaIdentifier.LocalEpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0320);
  }
  return result;
}

unint64_t sub_1A93CE3D0()
{
  unint64_t result;

  result = qword_1EEAC0328;
  if (!qword_1EEAC0328)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428528, &type metadata for MediaIdentifier.LocalPodcastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0328);
  }
  return result;
}

unint64_t sub_1A93CE418()
{
  unint64_t result;

  result = qword_1EEAC0330;
  if (!qword_1EEAC0330)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428550, &type metadata for MediaIdentifier.LocalPodcastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0330);
  }
  return result;
}

unint64_t sub_1A93CE460()
{
  unint64_t result;

  result = qword_1EEAC0338;
  if (!qword_1EEAC0338)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428470, &type metadata for MediaIdentifier.StationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0338);
  }
  return result;
}

unint64_t sub_1A93CE4A8()
{
  unint64_t result;

  result = qword_1EEAC0340;
  if (!qword_1EEAC0340)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428498, &type metadata for MediaIdentifier.StationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0340);
  }
  return result;
}

unint64_t sub_1A93CE4F0()
{
  unint64_t result;

  result = qword_1EEAC0348;
  if (!qword_1EEAC0348)
  {
    result = MEMORY[0x1AF414014](&unk_1A94283B8, &type metadata for MediaIdentifier.SnapshotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0348);
  }
  return result;
}

unint64_t sub_1A93CE538()
{
  unint64_t result;

  result = qword_1EEAC0350;
  if (!qword_1EEAC0350)
  {
    result = MEMORY[0x1AF414014](&unk_1A94283E0, &type metadata for MediaIdentifier.SnapshotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0350);
  }
  return result;
}

unint64_t sub_1A93CE580()
{
  unint64_t result;

  result = qword_1EEAC0358;
  if (!qword_1EEAC0358)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428300, &type metadata for MediaIdentifier.MediaQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0358);
  }
  return result;
}

unint64_t sub_1A93CE5C8()
{
  unint64_t result;

  result = qword_1EEAC0360;
  if (!qword_1EEAC0360)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428328, &type metadata for MediaIdentifier.MediaQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0360);
  }
  return result;
}

unint64_t sub_1A93CE610()
{
  unint64_t result;

  result = qword_1EEAC0368;
  if (!qword_1EEAC0368)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428248, &type metadata for MediaIdentifier.UniversalEpisodeIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0368);
  }
  return result;
}

unint64_t sub_1A93CE658()
{
  unint64_t result;

  result = qword_1EEAC0370;
  if (!qword_1EEAC0370)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428270, &type metadata for MediaIdentifier.UniversalEpisodeIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0370);
  }
  return result;
}

unint64_t sub_1A93CE6A0()
{
  unint64_t result;

  result = qword_1EEAC0378;
  if (!qword_1EEAC0378)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428858, &type metadata for MediaIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0378);
  }
  return result;
}

unint64_t sub_1A93CE6E8()
{
  unint64_t result;

  result = qword_1EEAC0380;
  if (!qword_1EEAC0380)
  {
    result = MEMORY[0x1AF414014](&unk_1A9428880, &type metadata for MediaIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0380);
  }
  return result;
}

uint64_t sub_1A93CE72C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7972617262696CLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736163646F70 && a2 == 0xE700000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365646F73697065 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6970456C61636F6CLL && a2 == 0xED00007365646F73 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646F506C61636F6CLL && a2 == 0xEC00000074736163 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F6974617473 && a2 == 0xE700000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746F687370616E73 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x657551616964656DLL && a2 == 0xEA00000000007972 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001A94510A0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_1A93CEB1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEB00000000737265;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A94510C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A93CEC20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496C616974696E69 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t ServerPodcastEpisode.isRestricted.getter()
{
  uint64_t v0;
  uint64_t v1;

  if ((objc_msgSend((id)objc_opt_self(), sel_isExplicitContentAllowed) & 1) != 0)
  {
    LOBYTE(v1) = 0;
  }
  else
  {
    if (!*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 224)
      || (swift_bridgeObjectRetain(), v1 = sub_1A93F8ED4(), swift_bridgeObjectRelease(), v1 != 1))
    {
      LOBYTE(v1) = sub_1A93F90C0();
    }
    swift_bridgeObjectRelease();
  }
  return v1 & 1;
}

BOOL static StorePurchaseError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StorePurchaseError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t StorePurchaseError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

id StorePurchaseTask.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id StorePurchaseTask.init()()
{
  char *v0;
  char *v1;
  objc_class *v2;
  objc_super v4;

  v1 = &v0[OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate];
  v2 = (objc_class *)type metadata accessor for StorePurchaseTask();
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  v4.receiver = v0;
  v4.super_class = v2;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1A93CEF4C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1A93CF000(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate;
  swift_beginAccess();
  sub_1A93CF0A0((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_1A93CEFB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate;
  swift_beginAccess();
  return sub_1A93CF000(v3, a1);
}

uint64_t sub_1A93CF000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A2EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A93CF048(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate;
  swift_beginAccess();
  sub_1A93CF0A0(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1A93CF0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A2EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1A93CF0E8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1A93CF130(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t *a5, void *a6, uint64_t a7, void (*a8)(void), uint64_t a9)
{
  unint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;

  v13 = *a5;
  v14 = objc_allocWithZone(MEMORY[0x1E0CFDA08]);
  swift_bridgeObjectRetain();
  v15 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_initWithString_, v15);

  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDBE0]), sel_initWithPurchaseType_buyParams_, 3, v16);
  objc_msgSend(v17, sel_setUserInitiated_, v13 & 1);
  objc_msgSend(v17, sel_setRequiresAccount_, (v13 >> 1) & 1);
  if (a6)
    a6 = (void *)sub_1A93F7ED8();
  objc_msgSend(v17, sel_setMetricsOverlay_, a6);

  if (a4)
    a4 = (void *)sub_1A93F8010();
  objc_msgSend(v17, sel_setPresentingSceneIdentifier_, a4);

  sub_1A93CF8CC(v17, a7, a8, a9);
}

uint64_t sub_1A93CF2B8(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  _QWORD *v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  _QWORD *v35;
  NSObject *v36;
  _QWORD *v37;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  NSObject *v47;

  v46 = a4;
  v8 = sub_1A93F7698();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v39 - v13;
  if (a2)
  {
    v15 = (void *)sub_1A93F711C();
    if (qword_1ED2AC4B8 != -1)
      swift_once();
    v16 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A1E40);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v16, v8);
    v17 = a3;
    v18 = v15;
    v19 = v17;
    v20 = v18;
    v21 = sub_1A93F7674();
    v22 = sub_1A93F879C();
    v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      v24 = swift_slowAlloc();
      v43 = v9;
      v25 = v24;
      v40 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v25 = 138412546;
      v44 = a2;
      v45 = a5;
      v47 = v20;
      v42 = v23;
      v41 = v8;
      v26 = v20;
      sub_1A93F8AA8();
      v27 = v40;
      *v40 = v20;

      *(_WORD *)(v25 + 12) = 2112;
      v28 = objc_msgSend(v19, sel_buyParams);
      v47 = v28;
      v8 = v41;
      sub_1A93F8AA8();
      v27[1] = v28;
      a2 = v44;

      _os_log_impl(&dword_1A904E000, v21, (os_log_type_t)v42, "Purchase completed with error: %@. buyParams %@", (uint8_t *)v25, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v27, -1, -1);
      v29 = v25;
      v9 = v43;
      MEMORY[0x1AF41411C](v29, -1, -1);
    }
    else
    {

      v21 = v20;
    }

  }
  else
  {
    if (qword_1ED2AC4B8 != -1)
      swift_once();
    v30 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A1E40);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, v30, v8);
    v31 = a3;
    v21 = sub_1A93F7674();
    v32 = sub_1A93F87B4();
    if (os_log_type_enabled(v21, v32))
    {
      v44 = 0;
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v43 = v9;
      v35 = (_QWORD *)v34;
      v45 = a5;
      *(_DWORD *)v33 = 138412290;
      v36 = -[NSObject buyParams](v31, sel_buyParams);
      v47 = v36;
      a2 = v44;
      sub_1A93F8AA8();
      *v35 = v36;

      _os_log_impl(&dword_1A904E000, v21, v32, "Purchase completed successfully %@", v33, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      v37 = v35;
      v9 = v43;
      MEMORY[0x1AF41411C](v37, -1, -1);
      MEMORY[0x1AF41411C](v33, -1, -1);
    }
    else
    {

      v21 = v31;
    }
    v11 = v14;
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v46(a2);
}

id StorePurchaseTask.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StorePurchaseTask();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1A93CF770@<X0>(_QWORD *a1@<X8>)
{
  objc_class *v1;
  id result;

  result = objc_msgSend(objc_allocWithZone(v1), sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_1A93CF7A4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate;
  swift_beginAccess();
  return sub_1A93CF000(v3, a1);
}

uint64_t sub_1A93CF7F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate;
  swift_beginAccess();
  sub_1A93CF0A0(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1A93CF854())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1A93CF89C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t *a5, void *a6, uint64_t a7, void (*a8)(void), uint64_t a9)
{
  sub_1A93CF130(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1A93CF8CC(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  id v34;
  void (*v35)(void);
  void *v36;
  _BYTE *v37;
  void *v38;
  id v39;
  _QWORD *v40;
  void *v41;
  NSObject *v42;
  uint64_t v43;
  void (*v44)(void);
  uint64_t v45;
  uint64_t v46;
  __int128 aBlock;
  void (*v48)(uint64_t, void *, void *);
  void *v49;
  uint64_t (*v50)(uint64_t, uint64_t);
  _QWORD *v51;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;

  v45 = a4;
  v8 = sub_1A93F7698();
  v46 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v43 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v43 - v13;
  v15 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  v16 = objc_msgSend(v15, sel_ams_activeiTunesAccount);

  objc_msgSend(a1, sel_setAccount_, v16);
  v17 = v4 + OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate;
  swift_beginAccess();
  sub_1A93CF000(v17, (uint64_t)&aBlock);
  if (v49)
  {
    sub_1A905D4AC(&aBlock, (uint64_t)v52);
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = 0;
    v19 = v53;
    v20 = v54;
    __swift_project_boxed_opaque_existential_1(v52, v53);
    *(_QWORD *)(v18 + 16) = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v20 + 32))(a1, a2, v19, v20);
    v28 = v46;
    if (qword_1ED2AC4B8 != -1)
      swift_once();
    v29 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A1E40);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v14, v29, v8);
    v30 = a1;
    v31 = sub_1A93F7674();
    v32 = sub_1A93F87B4();
    if (os_log_type_enabled(v31, v32))
    {
      v43 = v18;
      v33 = (uint8_t *)swift_slowAlloc();
      v44 = (void (*)(void))swift_slowAlloc();
      *(_DWORD *)v33 = 138412290;
      v34 = -[NSObject buyParams](v30, sel_buyParams);
      *(_QWORD *)&aBlock = v34;
      v18 = v43;
      sub_1A93F8AA8();
      v35 = v44;
      *(_QWORD *)v44 = v34;

      _os_log_impl(&dword_1A904E000, v31, v32, "Starting purchase with buyParams: %@", v33, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v35, -1, -1);
      v28 = v46;
      MEMORY[0x1AF41411C](v33, -1, -1);
    }
    else
    {

      v31 = v30;
    }

    (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v8);
    v38 = *(void **)(v18 + 16);
    if (v38)
    {
      v39 = objc_msgSend(v38, sel_performPurchase);
      v40 = (_QWORD *)swift_allocObject();
      v40[2] = v30;
      v40[3] = a3;
      v40[4] = v45;
      v40[5] = v18;
      v50 = sub_1A93D0540;
      v51 = v40;
      *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v48 = sub_1A906FD4C;
      v49 = &block_descriptor_85;
      v41 = _Block_copy(&aBlock);
      v42 = v30;
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v39, sel_addFinishBlock_, v41);
      _Block_release(v41);
      swift_release();

    }
    else
    {
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
  }
  else
  {
    v44 = a3;
    sub_1A905FD54((uint64_t)&aBlock, &qword_1ED2A2EB8);
    if (qword_1ED2AC4B8 != -1)
      swift_once();
    v21 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A1E40);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v11, v21, v8);
    v22 = a1;
    v23 = sub_1A93F7674();
    v24 = sub_1A93F879C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v25 = 138412290;
      v27 = -[NSObject buyParams](v22, sel_buyParams);
      v52[0] = v27;
      sub_1A93F8AA8();
      *v26 = v27;

      _os_log_impl(&dword_1A904E000, v23, v24, "Failed to purchase because there is no UI delegate, buyParams: %@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v26, -1, -1);
      MEMORY[0x1AF41411C](v25, -1, -1);
    }
    else
    {

      v23 = v22;
    }

    (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v8);
    sub_1A93D04A4();
    v36 = (void *)swift_allocError();
    *v37 = 0;
    v44();

  }
}

uint64_t sub_1A93D0138()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v0 = objc_allocWithZone(MEMORY[0x1E0CFDA08]);
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  if (objc_msgSend(v2, sel_parameterForKey_, *MEMORY[0x1E0CFD7E8]))
  {
    sub_1A93F8B44();

    swift_unknownObjectRelease();
  }
  else
  {

    memset(v5, 0, sizeof(v5));
  }
  sub_1A90A4E08((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast())
      return v4;
    else
      return 0;
  }
  else
  {
    sub_1A905FD54((uint64_t)v6, qword_1ED2AC800);
    return 0;
  }
}

unint64_t sub_1A93D026C()
{
  unint64_t result;

  result = qword_1EEAC0390;
  if (!qword_1EEAC0390)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for StorePurchaseError, &type metadata for StorePurchaseError);
    atomic_store(result, (unint64_t *)&qword_1EEAC0390);
  }
  return result;
}

uint64_t sub_1A93D02B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate;
  swift_beginAccess();
  return sub_1A93CF000(v3, a2);
}

uint64_t storeEnumTagSinglePayload for StorePurchaseError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A93D0354 + 4 * byte_1A9428C45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A93D0388 + 4 * byte_1A9428C40[v4]))();
}

uint64_t sub_1A93D0388(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93D0390(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93D0398);
  return result;
}

uint64_t sub_1A93D03A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93D03ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A93D03B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93D03B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StorePurchaseError()
{
  return &type metadata for StorePurchaseError;
}

uint64_t dispatch thunk of StorePurchaseDelegate.handle(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of StorePurchaseDelegate.createAMSUIPurchaseTask(from:senderWindow:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t method lookup function for StorePurchaseTask()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StorePurchaseTask.uiDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of StorePurchaseTask.uiDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of StorePurchaseTask.uiDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of StorePurchaseTask.productId(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of StorePurchaseTask.purchaseItem(with:presentingSceneIdentifier:options:metricsOverlay:senderWindow:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

unint64_t sub_1A93D04A4()
{
  unint64_t result;

  result = qword_1EEAC0398;
  if (!qword_1EEAC0398)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for StorePurchaseError, &type metadata for StorePurchaseError);
    atomic_store(result, (unint64_t *)&qword_1EEAC0398);
  }
  return result;
}

uint64_t sub_1A93D04E8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A93D050C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A93D0540(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A93CF2B8(a1, a2, *(void **)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t ImageCacheDeleteLevels.original.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ImageCacheDeleteLevels.resizes.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

PodcastsFoundation::ImageCacheDeleteLevels __swiftcall ImageCacheDeleteLevels.init(original:resizes:)(PodcastsFoundation::CacheDeleteUrgency original, PodcastsFoundation::CacheDeleteUrgency resizes)
{
  PodcastsFoundation::CacheDeleteUrgency *v2;
  PodcastsFoundation::ImageCacheDeleteLevels result;

  *v2 = original;
  *((_BYTE *)v2 + 1) = resizes;
  result.original = original;
  return result;
}

uint64_t getEnumTagSinglePayload for ImageCacheDeleteLevels(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 65283 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65283 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65283;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65283;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65283;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageCacheDeleteLevels(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65283 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65283 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A93D0648 + 4 * byte_1A9428DA5[v4]))();
  *a1 = a2 - 253;
  return ((uint64_t (*)(void))((char *)sub_1A93D067C + 4 * byte_1A9428DA0[v4]))();
}

uint64_t sub_1A93D067C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A93D0684(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1A93D068CLL);
  return result;
}

uint64_t sub_1A93D0698(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1A93D06A0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A93D06A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A93D06AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImageCacheDeleteLevels()
{
  return &type metadata for ImageCacheDeleteLevels;
}

unint64_t static String.CloudSyncKeys.podcastsDomainVersionKey.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1A93D06E4()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A93F8040();
  qword_1ED2A5AE8 = result;
  unk_1ED2A5AF0 = v1;
  return result;
}

uint64_t static String.CloudSyncKeys.isLibrarySyncEnabled.getter()
{
  return sub_1A93D099C(&qword_1ED2A47A0, &qword_1ED2A5AE8);
}

unint64_t static String.CloudSyncKeys.subscriptionSyncIsDirty.getter()
{
  return 0xD000000000000014;
}

unint64_t static String.CloudSyncKeys.subscriptionV1LastSyncTimestamp.getter()
{
  return 0xD00000000000002ELL;
}

unint64_t static String.CloudSyncKeys.subscriptionV3SyncIsDirty.getter()
{
  return 0xD000000000000016;
}

unint64_t static String.CloudSyncKeys.subscriptionV3LastSyncTimestamp.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t static String.CloudSyncKeys.subscriptionV1SyncVersion.getter()
{
  return 0x6556636E7953544DLL;
}

uint64_t static String.CloudSyncKeys.subscriptionV3SyncVersion.getter()
{
  return 0x6556636E7953544DLL;
}

unint64_t static String.CloudSyncKeys.syncVersionFlagsKeyPath.getter()
{
  return 0xD000000000000010;
}

unint64_t static String.CloudSyncKeys.nonFollowedShowsSyncIsDirty.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static String.CloudSyncKeys.nonFollowedShowsLastSyncTimestamp.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t static String.CloudSyncKeys.nonFollowedShowsSyncVersion.getter()
{
  return 0xD000000000000024;
}

unint64_t static String.CloudSyncKeys.interestSyncIsDirty.getter()
{
  return 0xD000000000000016;
}

unint64_t static String.CloudSyncKeys.interestLastSyncTimestamp.getter()
{
  return 0xD000000000000024;
}

unint64_t static String.CloudSyncKeys.interestSyncVersion.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static String.CloudSyncKeys.playlistSyncIsDirty.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static String.CloudSyncKeys.bookmarksSyncIsDirty.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static String.CloudSyncKeys.bookmarksDRMSyncIsDirty.getter()
{
  return 0xD000000000000020;
}

unint64_t static String.Processor.base.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_1A93D091C()
{
  uint64_t result;

  sub_1A93F8C70();
  result = swift_bridgeObjectRelease();
  qword_1ED2AA160 = 0xD000000000000045;
  unk_1ED2AA168 = 0x80000001A9451250;
  return result;
}

uint64_t static String.Processor.predicateConstructionBatchSize.getter()
{
  return sub_1A93D099C(&qword_1ED2AA178, &qword_1ED2AA160);
}

uint64_t sub_1A93D099C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t static String.Processor.minimumDeviceSpace.getter()
{
  return sub_1A93D099C(&qword_1ED2A92D0, &qword_1ED2A92B8);
}

unint64_t static String.Processor.AutoDownload.base.getter()
{
  return 0xD000000000000033;
}

uint64_t sub_1A93D0A28(uint64_t a1)
{
  return sub_1A93D0AA4(a1, 0x80000001A9451190, qword_1ED2AA148, &qword_1ED2AA148[1]);
}

uint64_t static String.Processor.AutoDownload.debounceInterval.getter()
{
  return sub_1A93D099C(&qword_1ED2AA158, qword_1ED2AA148);
}

unint64_t static String.Processor.AssetRemoval.base.getter()
{
  return 0xD000000000000033;
}

uint64_t sub_1A93D0A84(uint64_t a1)
{
  return sub_1A93D0AA4(a1, 0x80000001A94511D0, qword_1ED2AA128, &qword_1ED2AA128[1]);
}

uint64_t sub_1A93D0AA4(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t result;

  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  result = sub_1A93F810C();
  *a3 = 0xD000000000000033;
  *a4 = a2;
  return result;
}

uint64_t static String.Processor.AssetRemoval.debounceInterval.getter()
{
  return sub_1A93D099C(&qword_1ED2AA140, qword_1ED2AA128);
}

unint64_t static String.Account.lastSignedInDSIDKey.getter()
{
  return 0xD000000000000016;
}

ValueMetadata *type metadata accessor for String.CloudSyncKeys()
{
  return &type metadata for String.CloudSyncKeys;
}

ValueMetadata *type metadata accessor for String.Processor()
{
  return &type metadata for String.Processor;
}

ValueMetadata *type metadata accessor for String.Processor.AutoDownload()
{
  return &type metadata for String.Processor.AutoDownload;
}

ValueMetadata *type metadata accessor for String.Processor.AssetRemoval()
{
  return &type metadata for String.Processor.AssetRemoval;
}

ValueMetadata *type metadata accessor for String.Account()
{
  return &type metadata for String.Account;
}

uint64_t CoreDataDownloadPersistence.__allocating_init(libraryContext:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

id CoreDataDownloadPersistence.libraryContext.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t CoreDataDownloadPersistence.init(libraryContext:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1A93D0C04(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD v12[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8E20);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v2;
  *(_QWORD *)(v8 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9228);
  swift_allocObject();
  swift_retain();
  v9 = a1;
  v12[1] = sub_1A93F7A94();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8EA0);
  sub_1A9066D74((unint64_t *)&unk_1ED2A9218, &qword_1ED2A9228, MEMORY[0x1E0C96108]);
  sub_1A9066D74((unint64_t *)&unk_1ED2A8E90, &qword_1ED2A8EA0, MEMORY[0x1E0C95C10]);
  sub_1A93F7C50();
  swift_release();
  sub_1A9066D74(&qword_1ED2A8E18, &qword_1ED2A8E20, MEMORY[0x1E0C95B78]);
  v10 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10;
}

uint64_t CoreDataDownloadPersistence.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CoreDataDownloadPersistence.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t method lookup function for CoreDataDownloadPersistence()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreDataDownloadPersistence.__allocating_init(libraryContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of CoreDataDownloadPersistence.information(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t sub_1A93D0E20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A93D0E44()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

BOOL static TimeSpan.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TimeSpan.hash(into:)()
{
  return sub_1A93F92E8();
}

BOOL static TimeSpan.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t TimeSpan.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t AbbreviatedTimeIntervalFormatter.Configuration.init(relativeTo:currentYearReferenceDate:allowedSpan:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v7 = *a3;
  v8 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration();
  v9 = *(int *)(v8 + 24);
  v10 = sub_1A93F738C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(a4, a1, v10);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(a4 + *(int *)(v8 + 20), a2, v10);
  *(_BYTE *)(a4 + v9) = v7;
  return result;
}

void sub_1A93D0FA0(uint64_t a1)
{
  sub_1A90C45A8(a1, 0x64204D4D4DLL, 0xE500000000000000, &qword_1ED2A81E0);
}

uint64_t static AbbreviatedTimeIntervalFormatter.string(from:relativeTo:currentYearReferenceDate:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD058);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F738C();
  v10 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v8, a1, v9);
  v11 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration();
  v10(&v8[*(int *)(v11 + 20)], a2, v9);
  v8[*(int *)(v11 + 24)] = 6;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 0, 1, v11);
  v12 = _s18PodcastsFoundation32AbbreviatedTimeIntervalFormatterO6string4from13configurationSSSd_AC13ConfigurationVSgtFZ_0((uint64_t)v8, a3);
  sub_1A93D10DC((uint64_t)v8);
  return v12;
}

uint64_t sub_1A93D10DC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD058);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A93D1120()
{
  unint64_t result;

  result = qword_1EEAC03A0;
  if (!qword_1EEAC03A0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for TimeSpan, &type metadata for TimeSpan);
    atomic_store(result, (unint64_t *)&qword_1EEAC03A0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TimeSpan(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A93D11B0 + 4 * byte_1A9428ED5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A93D11E4 + 4 * byte_1A9428ED0[v4]))();
}

uint64_t sub_1A93D11E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93D11EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A93D11F4);
  return result;
}

uint64_t sub_1A93D1200(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A93D1208);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A93D120C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93D1214(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TimeSpan()
{
  return &type metadata for TimeSpan;
}

ValueMetadata *type metadata accessor for AbbreviatedTimeIntervalFormatter()
{
  return &type metadata for AbbreviatedTimeIntervalFormatter;
}

_QWORD *initializeBufferWithCopyOfBuffer for AbbreviatedTimeIntervalFormatter.Configuration(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A93F738C();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((_QWORD *)((char *)a1 + *(int *)(a3 + 20)), (_QWORD *)((char *)a2 + *(int *)(a3 + 20)), v7);
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for AbbreviatedTimeIntervalFormatter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_1A93F738C();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t initializeWithCopy for AbbreviatedTimeIntervalFormatter.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A93F738C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for AbbreviatedTimeIntervalFormatter.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A93F738C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for AbbreviatedTimeIntervalFormatter.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A93F738C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for AbbreviatedTimeIntervalFormatter.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A93F738C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1A93D1540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = sub_1A93F738C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 6u)
    v9 = 6;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  v10 = v9 - 6;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 6u)
    return v10;
  else
    return 0;
}

uint64_t sub_1A93D15C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A93F738C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 6;
  return result;
}

uint64_t sub_1A93D163C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A93D1680()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);

  return swift_deallocObject();
}

uint64_t sub_1A93D16BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A93D16F4(*a1, (_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1A93D16F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  id *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  os_log_t v52;
  uint64_t v53;
  __CFString *v54;
  unint64_t v55;
  id v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  os_log_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t aBlock[6];
  uint64_t v70;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v64 - v15;
  v68 = *v3;
  sub_1A93D1EE0(a1);
  if (!v19)
  {
    if (qword_1ED2A3F00 != -1)
      swift_once();
    v21 = sub_1A93F7698();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED2A3EE0);
    swift_bridgeObjectRetain_n();
    v22 = sub_1A93F7674();
    v23 = sub_1A93F8790();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      aBlock[0] = v25;
      *(_DWORD *)v24 = 136315138;
      swift_bridgeObjectRetain();
      v66 = a3;
      v26 = sub_1A93F7F08();
      v28 = v27;
      swift_bridgeObjectRelease();
      v70 = sub_1A906436C(v26, v28, aBlock);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v22, v23, "Skipping download check for episode, no asset URL and/or episodeUuid: %s", v24, 0xCu);
      a3 = v66;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v25, -1, -1);
      MEMORY[0x1AF41411C](v24, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_24;
  }
  v20 = v18;
  v67 = v17;
  sub_1A93F7248();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A905FD54((uint64_t)v9, &qword_1ED2AD3D0);
LABEL_24:
    v41 = type metadata accessor for DownloadConsistency.Issue(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(a3, 1, 1, v41);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
  v29 = sub_1A93F723C();
  if (v30)
  {
    if (v29 == 0x62696C2D646F7069 && v30 == 0xEC00000079726172)
    {
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    v32 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0)
      goto LABEL_23;
  }
  if ((sub_1A93F7140() & 1) == 0)
  {
LABEL_23:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  v66 = a3;
  v33 = a2[9];
  __swift_project_boxed_opaque_existential_1(a2 + 5, a2[8]);
  v34 = sub_1A93F7224();
  v35 = (*(uint64_t (**)(uint64_t))(v33 + 32))(v34);
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    a3 = v66;
    if (qword_1ED2A3F00 != -1)
      swift_once();
    v36 = sub_1A93F7698();
    __swift_project_value_buffer(v36, (uint64_t)qword_1ED2A3EE0);
    v37 = sub_1A93F7674();
    v38 = sub_1A93F8790();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_1A904E000, v37, v38, "Download check for episode passed, asset was verified by the environment", v39, 2u);
      v40 = v39;
      a3 = v66;
      MEMORY[0x1AF41411C](v40, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    goto LABEL_24;
  }
  if (qword_1ED2A3F00 != -1)
    swift_once();
  v43 = sub_1A93F7698();
  __swift_project_value_buffer(v43, (uint64_t)qword_1ED2A3EE0);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  swift_bridgeObjectRetain_n();
  v44 = sub_1A93F7674();
  v45 = sub_1A93F8784();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = swift_slowAlloc();
    v65 = swift_slowAlloc();
    aBlock[0] = v65;
    *(_DWORD *)v46 = 136315394;
    v64 = v44;
    swift_bridgeObjectRetain();
    v70 = sub_1A906436C(v67, v20, aBlock);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v46 + 12) = 2080;
    v47 = sub_1A93F7224();
    v70 = sub_1A906436C(v47, v48, aBlock);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    v49 = *(void (**)(char *, uint64_t))(v11 + 8);
    v50 = v13;
    v51 = v67;
    v49(v50, v10);
    v52 = v64;
    _os_log_impl(&dword_1A904E000, v64, v45, "Found missing artifact for episode %s, expected path: %s", (uint8_t *)v46, 0x16u);
    v53 = v65;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v53, -1, -1);
    MEMORY[0x1AF41411C](v46, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    v49 = *(void (**)(char *, uint64_t))(v11 + 8);
    v49(v13, v10);

    v51 = v67;
  }
  v54 = CFSTR("com.apple.podcastsEpisodeMissingAsset");
  v55 = sub_1A90C1B64(MEMORY[0x1E0DEE9D8]);
  v56 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = v55;
  aBlock[4] = (uint64_t)sub_1A90D287C;
  aBlock[5] = v57;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A90AC824;
  aBlock[3] = (uint64_t)&block_descriptor_87;
  v58 = _Block_copy(aBlock);
  swift_release();
  v59 = objc_msgSend(v56, sel_initWithName_generator_, v54, v58);

  _Block_release(v58);
  objc_msgSend(v68, sel_sendEvent_, v59);

  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190);
  v61 = v66;
  v62 = (uint64_t *)(v66 + *(int *)(v60 + 48));
  *v62 = v51;
  v62[1] = v20;
  sub_1A93F73D4();
  v49(v16, v10);
  v63 = type metadata accessor for DownloadConsistency.Issue(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v61, 0, 1, v63);
}

uint64_t sub_1A93D1EE0(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v8;
  _BYTE v9[40];
  __int128 v10;
  __int128 v11;

  v8 = sub_1A93F8040();
  sub_1A93F8C1C();
  if (*(_QWORD *)(a1 + 16) && (v2 = sub_1A90A597C((uint64_t)v9), (v3 & 1) != 0))
  {
    sub_1A906443C(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v10);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  sub_1A90A5908((uint64_t)v9);
  if (!*((_QWORD *)&v11 + 1))
    goto LABEL_15;
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v4 = v8;
  sub_1A93F8040();
  sub_1A93F8C1C();
  if (*(_QWORD *)(a1 + 16) && (v5 = sub_1A90A597C((uint64_t)v9), (v6 & 1) != 0))
  {
    sub_1A906443C(*(_QWORD *)(a1 + 56) + 32 * v5, (uint64_t)&v10);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  sub_1A90A5908((uint64_t)v9);
  if (!*((_QWORD *)&v11 + 1))
  {
    swift_bridgeObjectRelease();
LABEL_15:
    sub_1A905FD54((uint64_t)&v10, qword_1ED2AC800);
    return 0;
  }
  if ((swift_dynamicCast() & 1) != 0)
    return v4;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A93D207C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t dispatch thunk of FairPlayKeySessionProviding.session(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

id sub_1A93D20B8(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v8[0] = 0;
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_donatorWithItemType_originAppId_userId_error_, a1, v2, v3, v8);

  if (v4)
  {
    v5 = v8[0];
  }
  else
  {
    v6 = v8[0];
    sub_1A93F7128();

    swift_willThrow();
  }
  return v4;
}

uint64_t sub_1A93D21D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_1A93D21DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *_s11KoaProviderVMa()
{
  return &_s11KoaProviderVN;
}

uint64_t AlignmentRequest.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t inited;
  Swift::String_optional v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9728);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405950;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x80000001A944B1C0;
  v5 = URL.md5()();
  *(Swift::String_optional *)(inited + 48) = v5;
  v6 = sub_1A907ECFC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v8 = v6[2];
  v7 = v6[3];
  v9 = v8 + 1;
  if (v8 >= v7 >> 1)
    v6 = sub_1A907ECFC((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
  v6[2] = v9;
  v10 = &v6[2 * v8];
  v10[4] = 0xD000000000000010;
  v10[5] = 0x80000001A944B1C0;
  if (v5.value._object)
  {
    v11 = v6[3];
    swift_bridgeObjectRetain();
    if (v9 >= v11 >> 1)
      v6 = sub_1A907ECFC((_QWORD *)(v11 > 1), v8 + 2, 1, v6);
    v6[2] = v8 + 2;
    *(Swift::String_optional *)&v6[2 * v9 + 4] = v5;
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
  sub_1A90819B0();
  v12 = sub_1A93F7FE0();
  v14 = v13;
  v15 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
  result = swift_bridgeObjectRelease();
  *a2 = v12;
  a2[1] = v14;
  return result;
}

uint64_t AlignmentRequest.key.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AlignmentRequest.inMemorySize.getter()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v1 = *v0;
  v2 = v0[1];
  swift_bridgeObjectRetain();
  v3 = sub_1A9122048(v1, v2);
  result = swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      v8 = *(_QWORD *)(v3 + 8 * v6 + 32);
      v9 = __OFADD__(v7, v8);
      v7 += v8;
      if (v9)
      {
        __break(1u);
        return result;
      }
      ++v6;
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
    if ((v7 & 0x8000000000000000) == 0)
      return v7;
    sub_1A93F8E08();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  return 0;
}

void AlignmentRequest.fileFormat.getter(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t AlignmentRequest.encode(_:)()
{
  uint64_t v0;

  sub_1A93F70C8();
  swift_allocObject();
  sub_1A93F70BC();
  type metadata accessor for AssetReaderTimelineAlignment();
  sub_1A93D278C(&qword_1EEAC03A8, (uint64_t)&protocol conformance descriptor for AssetReaderTimelineAlignment);
  v0 = sub_1A93F70B0();
  swift_release();
  return v0;
}

uint64_t AlignmentRequest.decode(_:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1A93F7098();
  swift_allocObject();
  sub_1A93F708C();
  type metadata accessor for AssetReaderTimelineAlignment();
  sub_1A93D278C(&qword_1EEAC03B0, (uint64_t)&protocol conformance descriptor for AssetReaderTimelineAlignment);
  sub_1A93F7080();
  result = swift_release();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1A93D2624()
{
  uint64_t v0;

  sub_1A93F70C8();
  swift_allocObject();
  sub_1A93F70BC();
  type metadata accessor for AssetReaderTimelineAlignment();
  sub_1A93D278C(&qword_1EEAC03A8, (uint64_t)&protocol conformance descriptor for AssetReaderTimelineAlignment);
  v0 = sub_1A93F70B0();
  swift_release();
  return v0;
}

uint64_t sub_1A93D26CC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  sub_1A93F7098();
  swift_allocObject();
  sub_1A93F708C();
  type metadata accessor for AssetReaderTimelineAlignment();
  sub_1A93D278C(&qword_1EEAC03B0, (uint64_t)&protocol conformance descriptor for AssetReaderTimelineAlignment);
  sub_1A93F7080();
  result = swift_release();
  if (!v1)
    *a1 = v4;
  return result;
}

uint64_t sub_1A93D278C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AssetReaderTimelineAlignment();
    result = MEMORY[0x1AF414014](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AlignmentRequest()
{
  return &type metadata for AlignmentRequest;
}

uint64_t DownloadConsistency.IssueResolution.init(issue:strategy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;

  sub_1A9116174(a1, a3, type metadata accessor for DownloadConsistency.Issue);
  result = type metadata accessor for DownloadConsistency.IssueResolution(0);
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_1A93D2820(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  __int128 v5[2];

  sub_1A905DC3C(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR___PFDownloadConsistency_identifier;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(v3);
  sub_1A905D4AC(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1A93D288C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR___PFDownloadConsistency_identifier;
  swift_beginAccess();
  return sub_1A905DC3C(v3, a1);
}

uint64_t DownloadConsistency.resolutionStrategy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A905DC3C(v1 + OBJC_IVAR___PFDownloadConsistency_resolutionStrategy, a1);
}

uint64_t DownloadConsistency.effectApplicator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A905DC3C(v1 + OBJC_IVAR___PFDownloadConsistency_effectApplicator, a1);
}

uint64_t DownloadConsistency.environment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A90708E8(v1 + OBJC_IVAR___PFDownloadConsistency_environment, a1);
}

id DownloadConsistency.__allocating_init(issueIdentifier:resolutionStrategy:effectApplicator:downloadEnvironment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  objc_class *v5;
  char *v10;
  id v11;
  objc_super v13;

  v5 = v4;
  v10 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v10[OBJC_IVAR___PFDownloadConsistency_listener] = 0;
  sub_1A905DC3C(a1, (uint64_t)&v10[OBJC_IVAR___PFDownloadConsistency_identifier]);
  sub_1A905DC3C(a2, (uint64_t)&v10[OBJC_IVAR___PFDownloadConsistency_resolutionStrategy]);
  sub_1A905DC3C(a3, (uint64_t)&v10[OBJC_IVAR___PFDownloadConsistency_effectApplicator]);
  sub_1A90708E8(a4, (uint64_t)&v10[OBJC_IVAR___PFDownloadConsistency_environment]);
  v13.receiver = v10;
  v13.super_class = v5;
  v11 = objc_msgSendSuper2(&v13, sel_init);
  sub_1A90CF508(a4);
  __swift_destroy_boxed_opaque_existential_0(a3);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v11;
}

id DownloadConsistency.init(issueIdentifier:resolutionStrategy:effectApplicator:downloadEnvironment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  id v9;
  objc_super v11;

  *(_QWORD *)&v4[OBJC_IVAR___PFDownloadConsistency_listener] = 0;
  sub_1A905DC3C(a1, (uint64_t)&v4[OBJC_IVAR___PFDownloadConsistency_identifier]);
  sub_1A905DC3C(a2, (uint64_t)&v4[OBJC_IVAR___PFDownloadConsistency_resolutionStrategy]);
  sub_1A905DC3C(a3, (uint64_t)&v4[OBJC_IVAR___PFDownloadConsistency_effectApplicator]);
  sub_1A90708E8(a4, (uint64_t)&v4[OBJC_IVAR___PFDownloadConsistency_environment]);
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for DownloadConsistency();
  v9 = objc_msgSendSuper2(&v11, sel_init);
  sub_1A90CF508(a4);
  __swift_destroy_boxed_opaque_existential_0(a3);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v9;
}

uint64_t sub_1A93D2AF8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1A93D2B1C()
{
  swift_release();
  return swift_deallocObject();
}

BOOL sub_1A93D2B40(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)(a1 + *(int *)(type metadata accessor for DownloadConsistency.IssueResolution(0) + 20))
                   + 16) != 0;
}

void sub_1A93D2B78(void **a1, void (*a2)(void *))
{
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;

  v3 = *a1;
  if (qword_1ED2A3F00 != -1)
    swift_once();
  v4 = sub_1A93F7698();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED2A3EE0);
  v5 = v3;
  v6 = v3;
  v7 = sub_1A93F7674();
  v8 = sub_1A93F8784();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8FE8);
    v12 = sub_1A93F8094();
    sub_1A906436C(v12, v13, &v15);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A904E000, v7, v8, "Finished addressing consistency issues with completion: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v10, -1, -1);
    MEMORY[0x1AF41411C](v9, -1, -1);

    if (!a2)
      return;
  }
  else
  {

    if (!a2)
      return;
  }
  if (v3)
  {
    v14 = v3;
    sub_1A90858C0((uint64_t)a2);
    a2(v3);
    sub_1A9085818((uint64_t)a2);

  }
  else
  {
    swift_retain();
    a2(0);
    sub_1A9085818((uint64_t)a2);
  }
}

void sub_1A93D2DAC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (qword_1ED2A3F00 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2A3EE0);
  swift_bridgeObjectRetain_n();
  v1 = sub_1A93F7674();
  v2 = sub_1A93F8790();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v10 = v4;
    *(_DWORD *)v3 = 136315138;
    v5 = type metadata accessor for DownloadedAssetEffect();
    v6 = swift_bridgeObjectRetain();
    v7 = MEMORY[0x1AF412034](v6, v5);
    v9 = v8;
    swift_bridgeObjectRelease();
    sub_1A906436C(v7, v9, &v10);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v1, v2, "Applied corrective effects to environment: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v4, -1, -1);
    MEMORY[0x1AF41411C](v3, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1A93D2F78()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OBJC_IVAR___PFDownloadConsistency_listener;
  if (*(_QWORD *)(v0 + OBJC_IVAR___PFDownloadConsistency_listener))
  {
    swift_retain();
    sub_1A93F7938();
    swift_release();
  }
  *(_QWORD *)(v0 + v1) = 0;
  return swift_release();
}

uint64_t sub_1A93D3034(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[5];
  uint64_t v46;

  v35 = a3;
  v36 = a2;
  v4 = type metadata accessor for DownloadConsistency.IssueResolution(0);
  v34 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v34 + 64);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8E78);
  v8 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  v38 = v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A8D68);
  v12 = *(_QWORD *)(v11 - 8);
  v39 = v11;
  v40 = v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8928);
  v43 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8D30);
  v44 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v45[0] = *(_QWORD *)(a1 + *(int *)(v4 + 20));
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9308);
  sub_1A9066D74(&qword_1ED2A9310, &qword_1ED2A9308, MEMORY[0x1E0DEAF38]);
  sub_1A93F7860();
  sub_1A9064630(a1, (uint64_t)v6, type metadata accessor for DownloadConsistency.IssueResolution);
  sub_1A90708E8(v35, (uint64_t)v45);
  v19 = (*(unsigned __int8 *)(v34 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v20 = (v5 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  v22 = v36;
  *(_QWORD *)(v21 + 16) = v36;
  sub_1A9116174((uint64_t)v6, v21 + v19, type metadata accessor for DownloadConsistency.IssueResolution);
  v23 = v21 + v20;
  v24 = v45[3];
  *(_OWORD *)(v23 + 32) = v45[2];
  *(_OWORD *)(v23 + 48) = v24;
  *(_OWORD *)(v23 + 64) = v45[4];
  *(_QWORD *)(v23 + 80) = v46;
  v25 = v45[1];
  *(_OWORD *)v23 = v45[0];
  *(_OWORD *)(v23 + 16) = v25;
  v26 = v22;
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9028);
  sub_1A9066D74(&qword_1ED2A8E70, &qword_1ED2A8E78, MEMORY[0x1E0C95C10]);
  sub_1A9066D74(&qword_1ED2A9020, &qword_1ED2A9028, MEMORY[0x1E0C95D90]);
  v27 = v37;
  sub_1A93F7D34();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v27);
  type metadata accessor for DownloadedAssetEffect();
  sub_1A9066D74(&qword_1ED2A8D60, (uint64_t *)&unk_1ED2A8D68, MEMORY[0x1E0C95B78]);
  v28 = v39;
  sub_1A93F7B30();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v28);
  sub_1A9066D74(&qword_1ED2A8920, &qword_1ED2A8928, MEMORY[0x1E0C95708]);
  v29 = v41;
  sub_1A93F7C38();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v29);
  sub_1A9066D74(&qword_1ED2A8D28, &qword_1ED2A8D30, MEMORY[0x1E0C95B60]);
  v30 = v42;
  v31 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v30);
  return v31;
}

uint64_t sub_1A93D3444()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);

  return swift_deallocObject();
}

uint64_t sub_1A93D3480(uint64_t a1)
{
  uint64_t v1;

  return sub_1A93D3034(a1, *(void **)(v1 + 16), v1 + 24);
}

uint64_t sub_1A93D348C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

void sub_1A93D34B8(void **a1)
{
  uint64_t v1;

  sub_1A93D2B78(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1A93D34C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A93D795C(a1, a2);
}

uint64_t sub_1A93D34C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v44 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8B88);
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  MEMORY[0x1E0C80A78](v5);
  v45 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8C48);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v46 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for DownloadConsistency.IssueResolution(0);
  MEMORY[0x1E0C80A78](v41);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v39 - v13;
  v15 = type metadata accessor for DownloadedAssetEffect();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v39 - v19;
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v21 = sub_1A93F7698();
  __swift_project_value_buffer(v21, (uint64_t)qword_1ED2A3F08);
  v43 = a1;
  sub_1A9064630(a1, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for DownloadedAssetEffect);
  sub_1A9064630(a2, (uint64_t)v14, type metadata accessor for DownloadConsistency.IssueResolution);
  v22 = sub_1A93F7674();
  v23 = sub_1A93F8790();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v39 = v8;
    v25 = v24;
    v26 = swift_slowAlloc();
    v50 = v26;
    *(_DWORD *)v25 = 136315394;
    v40 = v7;
    sub_1A9064630((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for DownloadedAssetEffect);
    v27 = sub_1A93F8094();
    v49 = sub_1A906436C(v27, v28, &v50);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9064714((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for DownloadedAssetEffect);
    *(_WORD *)(v25 + 12) = 2080;
    sub_1A9064630((uint64_t)v14, (uint64_t)v11, type metadata accessor for DownloadConsistency.IssueResolution);
    v29 = sub_1A93F8094();
    v49 = sub_1A906436C(v29, v30, &v50);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    v7 = v40;
    sub_1A9064714((uint64_t)v14, type metadata accessor for DownloadConsistency.IssueResolution);
    _os_log_impl(&dword_1A904E000, v22, v23, "Applying (%s for resolution: %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v26, -1, -1);
    v31 = v25;
    v8 = v39;
    MEMORY[0x1AF41411C](v31, -1, -1);
  }
  else
  {
    sub_1A9064714((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for DownloadedAssetEffect);
    sub_1A9064714((uint64_t)v14, type metadata accessor for DownloadConsistency.IssueResolution);
  }

  v32 = *(_QWORD *)(v42 + OBJC_IVAR___PFDownloadConsistency_effectApplicator + 24);
  v33 = *(_QWORD *)(v42 + OBJC_IVAR___PFDownloadConsistency_effectApplicator + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v42 + OBJC_IVAR___PFDownloadConsistency_effectApplicator), v32);
  v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8))(v43, v44, v32, v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9038);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A70F0);
  sub_1A9066D74(&qword_1ED2A9030, &qword_1ED2A9038, MEMORY[0x1E0C95D90]);
  v34 = v45;
  sub_1A93F7B84();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9170);
  sub_1A9066D74(&qword_1ED2A8B80, &qword_1ED2A8B88, MEMORY[0x1E0C95950]);
  sub_1A9066D74(&qword_1ED2A9168, &qword_1ED2A9170, MEMORY[0x1E0C960B0]);
  v35 = v46;
  v36 = v48;
  sub_1A93F7BB4();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v36);
  sub_1A9066D74(&qword_1ED2A8C40, &qword_1ED2A8C48, MEMORY[0x1E0C959F8]);
  v37 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v35, v7);
  return v37;
}

uint64_t sub_1A93D39DC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A70F0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  if (qword_1ED2A3F00 != -1)
    swift_once();
  v8 = sub_1A93F7698();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A3EE0);
  v9 = v7;
  v10 = v7;
  v11 = sub_1A93F7674();
  v12 = sub_1A93F879C();
  if (os_log_type_enabled(v11, v12))
  {
    v20[1] = a2;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v21 = (uint64_t)v7;
    v22 = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    v16 = sub_1A93F8094();
    v21 = sub_1A906436C(v16, v17, &v22);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A904E000, v11, v12, "Failed to apply effect to the environment: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v14, -1, -1);
    MEMORY[0x1AF41411C](v13, -1, -1);
  }
  else
  {

  }
  v18 = type metadata accessor for DownloadedAssetEffect();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
  return sub_1A93F7A58();
}

id DownloadConsistency.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DownloadConsistency.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DownloadConsistency.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownloadConsistency();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t DownloadConsistency.Issue.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  char *v15;
  uint64_t v16;

  v1 = v0;
  v2 = sub_1A93F726C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F73E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DownloadConsistency.Issue(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9064630(v1, (uint64_t)v12, v13);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    v15 = &v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v15, v2);
    sub_1A93F92E8();
    sub_1A9066CA8((unint64_t *)&qword_1ED2A1F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    sub_1A93F7FB0();
    sub_1A9066CA8(&qword_1EEAB9148, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    sub_1A93F7FB0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_1A93F92E8();
    sub_1A9066CA8((unint64_t *)&qword_1ED2A1F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    sub_1A93F7FB0();
    sub_1A93F7FBC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_1A93D3FDC()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000022;
  if (*v0 != 1)
    v1 = 0x4164656E776F6E75;
  if (*v0)
    return v1;
  else
    return 0xD00000000000001ELL;
}

uint64_t sub_1A93D4044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93D7410(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93D4068()
{
  sub_1A93D5D5C();
  return sub_1A93F945C();
}

uint64_t sub_1A93D4090()
{
  sub_1A93D5D5C();
  return sub_1A93F9468();
}

uint64_t sub_1A93D40B8()
{
  _BYTE *v0;

  if (*v0)
    return 0x5565646F73697065;
  else
    return 12383;
}

uint64_t sub_1A93D40F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93D7574(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93D4114()
{
  sub_1A93D5E28();
  return sub_1A93F945C();
}

uint64_t sub_1A93D413C()
{
  sub_1A93D5E28();
  return sub_1A93F9468();
}

uint64_t sub_1A93D4164()
{
  sub_1A93D5DE4();
  return sub_1A93F945C();
}

uint64_t sub_1A93D418C()
{
  sub_1A93D5DE4();
  return sub_1A93F9468();
}

uint64_t sub_1A93D41B4()
{
  _BYTE *v0;

  if (*v0)
    return 1701603686;
  else
    return 12383;
}

uint64_t sub_1A93D41DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A93D7664(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A93D4200()
{
  sub_1A93D5DA0();
  return sub_1A93F945C();
}

uint64_t sub_1A93D4228()
{
  sub_1A93D5DA0();
  return sub_1A93F9468();
}

uint64_t DownloadConsistency.Issue.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int EnumCaseMultiPayload;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;

  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC03F0);
  v57 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v56 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1A93F726C();
  v58 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v63 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC03F8);
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  MEMORY[0x1E0C80A78](v4);
  v53 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0400);
  v6 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_1A93F73E0();
  v70 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v60 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v52 = (char *)&v51 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v51 - v13;
  v15 = type metadata accessor for DownloadConsistency.Issue(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0408);
  v65 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93D5D5C();
  v66 = v19;
  sub_1A93F93D8();
  sub_1A9064630(v68, (uint64_t)v17, type metadata accessor for DownloadConsistency.Issue);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v68 = v6;
    v63 = *(char **)&v17[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190) + 48)];
    v33 = v70;
    v34 = v67;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v14, v17, v67);
    v73 = 0;
    sub_1A93D5E28();
    v28 = v69;
    v29 = v66;
    sub_1A93F8FAC();
    v72 = 0;
    sub_1A9066CA8(&qword_1EEAC0420, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    v35 = v64;
    sub_1A93F9030();
    if (v35)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v8, v62);
      v32 = *(void (**)(char *, uint64_t))(v33 + 8);
    }
    else
    {
      v71 = 1;
      sub_1A93F9000();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v8, v62);
      v32 = *(void (**)(char *, uint64_t))(v70 + 8);
    }
    v47 = v14;
    v48 = v34;
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v21 = &v17[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190) + 48)];
    v23 = *(char **)v21;
    v22 = *((_QWORD *)v21 + 1);
    v63 = v23;
    v68 = v22;
    v24 = v70;
    v25 = v52;
    v26 = v67;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v52, v17, v67);
    v76 = 1;
    sub_1A93D5DE4();
    v27 = v53;
    v28 = v69;
    v29 = v66;
    sub_1A93F8FAC();
    v75 = 0;
    sub_1A9066CA8(&qword_1EEAC0420, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    v30 = v55;
    v31 = v64;
    sub_1A93F9030();
    if (v31)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v27, v30);
      v32 = *(void (**)(char *, uint64_t))(v24 + 8);
    }
    else
    {
      v74 = 1;
      sub_1A93F9000();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v27, v30);
      v32 = *(void (**)(char *, uint64_t))(v70 + 8);
    }
    v47 = v25;
    v48 = v26;
LABEL_13:
    v32(v47, v48);
    return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v29, v28);
  }
  v36 = &v17[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48)];
  v37 = v60;
  v38 = v17;
  v39 = v67;
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v60, v38, v67);
  v40 = v58;
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v63, v36, v61);
  v79 = 2;
  sub_1A93D5DA0();
  v41 = v56;
  v42 = v69;
  v43 = v66;
  sub_1A93F8FAC();
  v78 = 0;
  sub_1A9066CA8(&qword_1EEAC0420, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  v44 = v59;
  v45 = v64;
  sub_1A93F9030();
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v41, v44);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v63, v61);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v37, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v43, v42);
  }
  else
  {
    v49 = v70;
    v77 = 1;
    sub_1A9066CA8(&qword_1EEAB7BF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    v50 = v61;
    sub_1A93F9030();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v41, v44);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v63, v50);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v60, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v43, v69);
  }
}

uint64_t DownloadConsistency.Issue.hashValue.getter()
{
  sub_1A93F92DC();
  DownloadConsistency.Issue.hash(into:)();
  return sub_1A93F9324();
}

uint64_t DownloadConsistency.Issue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  _QWORD *v72;
  char *v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;

  v60 = a2;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0438);
  v66 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v70 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0440);
  v64 = *(_QWORD *)(v4 - 8);
  v65 = v4;
  MEMORY[0x1E0C80A78](v4);
  v69 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0448);
  v61 = *(_QWORD *)(v6 - 8);
  v62 = v6;
  MEMORY[0x1E0C80A78](v6);
  v68 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAC0450);
  v67 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DownloadConsistency.Issue(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v55 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v55 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v55 - v20;
  v22 = a1[3];
  v72 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_1A93D5D5C();
  v23 = v73;
  sub_1A93F93C0();
  if (v23)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v72);
  v73 = v15;
  v58 = v18;
  v59 = v12;
  v25 = v68;
  v24 = v69;
  v27 = v70;
  v26 = v71;
  v57 = v21;
  v28 = sub_1A93F8F94();
  v29 = (char *)v28;
  v30 = v26;
  if (*(_QWORD *)(v28 + 16) != 1)
  {
    v34 = sub_1A93F8D00();
    swift_allocError();
    v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7C28);
    *v36 = v10;
    sub_1A93F8EF8();
    sub_1A93F8CE8();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v36, *MEMORY[0x1E0DEC450], v34);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v9, v30);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v72);
  }
  if (*(_BYTE *)(v28 + 32))
  {
    if (*(_BYTE *)(v28 + 32) == 1)
    {
      v79 = 1;
      sub_1A93D5DE4();
      v31 = v24;
      v32 = v26;
      sub_1A93F8EEC();
      sub_1A93F73E0();
      v78 = 0;
      sub_1A9066CA8(&qword_1EEAC0458, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
      v33 = v65;
      sub_1A93F8F7C();
      v77 = 1;
      v41 = sub_1A93F8F4C();
      v56 = 0;
      v45 = v44;
      v70 = (char *)v41;
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190);
      v47 = (uint64_t)v73;
      v48 = &v73[*(int *)(v46 + 48)];
      (*(void (**)(char *, uint64_t))(v64 + 8))(v31, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v9, v32);
      *(_QWORD *)v48 = v70;
      *((_QWORD *)v48 + 1) = v45;
      swift_storeEnumTagMultiPayload();
      v49 = v47;
    }
    else
    {
      v82 = 2;
      sub_1A93D5DA0();
      sub_1A93F8EEC();
      v73 = v9;
      sub_1A93F73E0();
      v81 = 0;
      sub_1A9066CA8(&qword_1EEAC0458, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
      v39 = (uint64_t)v59;
      v40 = v63;
      sub_1A93F8F7C();
      v69 = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88);
      sub_1A93F726C();
      v80 = 1;
      sub_1A9066CA8(&qword_1EEAB7C30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
      sub_1A93F8F7C();
      v43 = v67;
      v56 = 0;
      (*(void (**)(char *, uint64_t))(v66 + 8))(v27, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v73, v71);
      swift_storeEnumTagMultiPayload();
      v49 = v39;
    }
  }
  else
  {
    v76 = 0;
    sub_1A93D5E28();
    sub_1A93F8EEC();
    sub_1A93F73E0();
    v75 = 0;
    sub_1A9066CA8(&qword_1EEAC0458, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v49 = (uint64_t)v58;
    v37 = v62;
    sub_1A93F8F7C();
    v74 = 1;
    v42 = sub_1A93F8F4C();
    v56 = 0;
    v50 = v42;
    v73 = v51;
    v52 = (uint64_t *)(v49 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190) + 48));
    (*(void (**)(char *, uint64_t))(v61 + 8))(v25, v37);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v9, v26);
    v53 = v73;
    *v52 = v50;
    v52[1] = (uint64_t)v53;
    swift_storeEnumTagMultiPayload();
  }
  v54 = (uint64_t)v57;
  sub_1A9116174(v49, (uint64_t)v57, type metadata accessor for DownloadConsistency.Issue);
  sub_1A9116174(v54, v60, type metadata accessor for DownloadConsistency.Issue);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v72);
}

uint64_t sub_1A93D5220@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DownloadConsistency.Issue.init(from:)(a1, a2);
}

uint64_t sub_1A93D5234(_QWORD *a1)
{
  return DownloadConsistency.Issue.encode(to:)(a1);
}

uint64_t sub_1A93D524C()
{
  sub_1A93F92DC();
  DownloadConsistency.Issue.hash(into:)();
  return sub_1A93F9324();
}

uint64_t sub_1A93D528C()
{
  sub_1A93F92DC();
  DownloadConsistency.Issue.hash(into:)();
  return sub_1A93F9324();
}

uint64_t DownloadConsistency.IssueResolution.issue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9064630(v1, a1, type metadata accessor for DownloadConsistency.Issue);
}

uint64_t DownloadConsistency.IssueResolution.strategy.getter()
{
  type metadata accessor for DownloadConsistency.IssueResolution(0);
  return swift_bridgeObjectRetain();
}

uint64_t DownloadConsistency.IssueResolution.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  DownloadConsistency.Issue.hash(into:)();
  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for DownloadConsistency.IssueResolution(0) + 20));
  swift_bridgeObjectRetain();
  sub_1A93D5584(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static DownloadConsistency.IssueResolution.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((_s18PodcastsFoundation19DownloadConsistencyC5IssueO2eeoiySbAE_AEtFZ_0(a1, a2) & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for DownloadConsistency.IssueResolution(0) + 20);
  return sub_1A91470D8(*(_QWORD *)(a1 + v4), *(_QWORD *)(a2 + v4));
}

uint64_t DownloadConsistency.IssueResolution.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  sub_1A93F92DC();
  DownloadConsistency.Issue.hash(into:)();
  v1 = type metadata accessor for DownloadConsistency.IssueResolution(0);
  sub_1A93D5584((uint64_t)v3, *(_QWORD *)(v0 + *(int *)(v1 + 20)));
  return sub_1A93F9324();
}

uint64_t sub_1A93D53F0(uint64_t a1)
{
  uint64_t v1;
  _BYTE v4[72];

  sub_1A93F92DC();
  DownloadConsistency.Issue.hash(into:)();
  sub_1A93D5584((uint64_t)v4, *(_QWORD *)(v1 + *(int *)(a1 + 20)));
  return sub_1A93F9324();
}

uint64_t sub_1A93D5440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  DownloadConsistency.Issue.hash(into:)();
  return sub_1A93D5584(a1, *(_QWORD *)(v2 + *(int *)(a2 + 20)));
}

uint64_t sub_1A93D5478(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v5[72];

  sub_1A93F92DC();
  DownloadConsistency.Issue.hash(into:)();
  sub_1A93D5584((uint64_t)v5, *(_QWORD *)(v2 + *(int *)(a2 + 20)));
  return sub_1A93F9324();
}

uint64_t sub_1A93D54C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_s18PodcastsFoundation19DownloadConsistencyC5IssueO2eeoiySbAE_AEtFZ_0(a1, a2) & 1) != 0)
    return sub_1A91470D8(*(_QWORD *)(a1 + *(int *)(a3 + 20)), *(_QWORD *)(a2 + *(int *)(a3 + 20)));
  else
    return 0;
}

uint64_t static DownloadConsistency.IssueResolutionError.== infix(_:_:)()
{
  return 1;
}

uint64_t DownloadConsistency.IssueResolutionError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t DownloadConsistency.IssueResolutionError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A93D5584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_1A93F726C();
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x1E0C80A78](v4);
  v23 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DownloadedAssetEffect();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - v11;
  v13 = *(_QWORD *)(a2 + 16);
  v26 = a1;
  result = sub_1A93F92E8();
  if (v13)
  {
    v15 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v16 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_1A9064630(v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DownloadedAssetEffect);
      sub_1A9064630((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DownloadedAssetEffect);
      if (swift_getEnumCaseMultiPayload() > 1)
      {
        v18 = v24;
        v17 = v25;
        v19 = v16;
        v20 = v6;
        v21 = v23;
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v23, v9, v25);
        sub_1A93F92E8();
        sub_1A9066CA8(&qword_1EEAB9148, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
        sub_1A93F7FB0();
        v22 = v21;
        v6 = v20;
        v16 = v19;
        (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
      }
      else
      {
        sub_1A93F92E8();
        sub_1A93F7FBC();
        swift_bridgeObjectRelease();
      }
      result = sub_1A9064714((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DownloadedAssetEffect);
      v15 += v16;
      --v13;
    }
    while (v13);
  }
  return result;
}

uint64_t _s18PodcastsFoundation19DownloadConsistencyC5IssueO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  char v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  char v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  void (*v67)(char *, uint64_t);
  char v69;
  void (*v70)(char *, uint64_t);
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v4 = sub_1A93F726C();
  v76 = *(_QWORD *)(v4 - 8);
  v77 = v4;
  MEMORY[0x1E0C80A78](v4);
  v74 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v75 = (char *)&v72 - v7;
  v8 = sub_1A93F73E0();
  v78 = *(_QWORD *)(v8 - 8);
  v79 = v8;
  MEMORY[0x1E0C80A78](v8);
  v73 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v72 = (char *)&v72 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v72 - v13;
  v15 = type metadata accessor for DownloadConsistency.Issue(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v72 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v72 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(qword_1EEAC04D8);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = (uint64_t)&v26[*(int *)(v27 + 48)];
  sub_1A9064630(a1, (uint64_t)v26, type metadata accessor for DownloadConsistency.Issue);
  sub_1A9064630(a2, v28, type metadata accessor for DownloadConsistency.Issue);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1A9064630((uint64_t)v26, (uint64_t)v23, type metadata accessor for DownloadConsistency.Issue);
    v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190) + 48);
    v44 = *(_QWORD *)&v23[v42];
    v43 = *(_QWORD *)&v23[v42 + 8];
    if (swift_getEnumCaseMultiPayload())
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    v62 = *(_QWORD *)(v28 + v42);
    v61 = *(_QWORD *)(v28 + v42 + 8);
    v63 = v78;
    v64 = v28;
    v65 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v14, v64, v79);
    v66 = sub_1A93F73BC();
    v67 = *(void (**)(char *, uint64_t))(v63 + 8);
    v67(v23, v65);
    if ((v66 & 1) == 0)
    {
      v67(v14, v65);
      swift_bridgeObjectRelease();
LABEL_29:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    if (v44 == v62 && v43 == v61)
    {
      swift_bridgeObjectRelease_n();
      v67(v14, v65);
      goto LABEL_35;
    }
    v69 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v67(v14, v65);
    if ((v69 & 1) != 0)
      goto LABEL_35;
LABEL_30:
    sub_1A9064714((uint64_t)v26, type metadata accessor for DownloadConsistency.Issue);
    goto LABEL_31;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1A9064630((uint64_t)v26, (uint64_t)v20, type metadata accessor for DownloadConsistency.Issue);
    v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190) + 48);
    v32 = *(_QWORD *)&v20[v30];
    v31 = *(_QWORD *)&v20[v30 + 8];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v34 = *(_QWORD *)(v28 + v30);
      v33 = *(_QWORD *)(v28 + v30 + 8);
      v35 = v78;
      v36 = v79;
      v37 = v72;
      (*(void (**)(void))(v78 + 32))();
      v38 = sub_1A93F73BC();
      v39 = *(void (**)(char *, uint64_t))(v35 + 8);
      v39(v20, v36);
      if ((v38 & 1) != 0)
      {
        if (v32 != v34 || v31 != v33)
        {
          v41 = sub_1A93F90C0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v39(v37, v36);
          if ((v41 & 1) != 0)
            goto LABEL_35;
          goto LABEL_30;
        }
        swift_bridgeObjectRelease_n();
        v39(v37, v36);
LABEL_35:
        sub_1A9064714((uint64_t)v26, type metadata accessor for DownloadConsistency.Issue);
        v58 = 1;
        return v58 & 1;
      }
      v39(v37, v36);
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    swift_bridgeObjectRelease();
    v23 = v20;
LABEL_18:
    (*(void (**)(char *, uint64_t))(v78 + 8))(v23, v79);
    sub_1A905FD54((uint64_t)v26, qword_1EEAC04D8);
LABEL_31:
    v58 = 0;
    return v58 & 1;
  }
  sub_1A9064630((uint64_t)v26, (uint64_t)v17, type metadata accessor for DownloadConsistency.Issue);
  v45 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48);
  v46 = &v17[v45];
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    (*(void (**)(char *, uint64_t))(v76 + 8))(&v17[v45], v77);
    v23 = v17;
    goto LABEL_18;
  }
  v72 = (char *)(v28 + v45);
  v48 = v78;
  v47 = v79;
  v49 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v73, v28, v79);
  v50 = v76;
  v51 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
  v52 = v77;
  v51(v75, v46, v77);
  v53 = v74;
  v51(v74, v72, v52);
  v54 = v49;
  v55 = sub_1A93F73BC();
  v56 = *(void (**)(char *, uint64_t))(v48 + 8);
  v56(v17, v47);
  if ((v55 & 1) == 0)
  {
    v70 = *(void (**)(char *, uint64_t))(v50 + 8);
    v70(v53, v52);
    v70(v75, v52);
    v56(v54, v47);
    goto LABEL_30;
  }
  v57 = v75;
  v58 = MEMORY[0x1AF410F0C](v75, v53);
  v59 = v54;
  v60 = *(void (**)(char *, uint64_t))(v50 + 8);
  v60(v53, v52);
  v60(v57, v52);
  v56(v59, v47);
  sub_1A9064714((uint64_t)v26, type metadata accessor for DownloadConsistency.Issue);
  return v58 & 1;
}

unint64_t sub_1A93D5D5C()
{
  unint64_t result;

  result = qword_1EEAC0410;
  if (!qword_1EEAC0410)
  {
    result = MEMORY[0x1AF414014](&unk_1A94298D8, &type metadata for DownloadConsistency.Issue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0410);
  }
  return result;
}

unint64_t sub_1A93D5DA0()
{
  unint64_t result;

  result = qword_1EEAC0418;
  if (!qword_1EEAC0418)
  {
    result = MEMORY[0x1AF414014](&unk_1A9429888, &type metadata for DownloadConsistency.Issue.UnownedAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0418);
  }
  return result;
}

unint64_t sub_1A93D5DE4()
{
  unint64_t result;

  result = qword_1EEAC0428;
  if (!qword_1EEAC0428)
  {
    result = MEMORY[0x1AF414014](&unk_1A9429838, &type metadata for DownloadConsistency.Issue.MissingMediaLibraryEpisodeArtifactCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0428);
  }
  return result;
}

unint64_t sub_1A93D5E28()
{
  unint64_t result;

  result = qword_1EEAC0430;
  if (!qword_1EEAC0430)
  {
    result = MEMORY[0x1AF414014](&unk_1A94297E8, &type metadata for DownloadConsistency.Issue.MissingCoreDataEpisodeArtifactCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAC0430);
  }
  return result;
}

uint64_t sub_1A93D5E6C()
{
  return sub_1A9066CA8(&qword_1EEAC0460, type metadata accessor for DownloadConsistency.Issue, (uint64_t)&protocol conformance descriptor for DownloadConsistency.Issue);
}

uint64_t sub_1A93D5E98()
{
  return sub_1A9066CA8(&qword_1EEAC0468, type metadata accessor for DownloadConsistency.IssueResolution, (uint64_t)&protocol conformance descriptor for DownloadConsistency.IssueResolution);
}

unint64_t sub_1A93D5EC8()
{
  unint64_t result;

  result = qword_1EEAC0470;
  if (!qword_1EEAC0470)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for DownloadConsistency.IssueResolutionError, &type metadata for DownloadConsistency.IssueResolutionError);
    atomic_store(result, (unint64_t *)&qword_1EEAC0470);
  }
  return result;
}

uint64_t sub_1A93D5F0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR___PFDownloadConsistency_identifier;
  swift_beginAccess();
  return sub_1A905DC3C(v3, a2);
}

uint64_t method lookup function for DownloadConsistency()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DownloadConsistency.identifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of DownloadConsistency.__allocating_init(issueIdentifier:resolutionStrategy:effectApplicator:downloadEnvironment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DownloadConsistency.beginEnforcement(completionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of DownloadConsistency.endEnforcement()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t *initializeBufferWithCopyOfBuffer for DownloadConsistency.Issue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v12 = sub_1A93F73E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_1A93F726C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      v6 = sub_1A93F73E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190) + 48);
      v8 = (uint64_t *)((char *)a1 + v7);
      v9 = (uint64_t *)((char *)a2 + v7);
      v10 = v9[1];
      *v8 = *v9;
      v8[1] = v10;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for DownloadConsistency.Issue(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v4 = sub_1A93F73E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48);
    v6 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else if (result <= 1)
  {
    v3 = sub_1A93F73E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DownloadConsistency.Issue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v9 = sub_1A93F73E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48);
    v11 = a1 + v10;
    v12 = a2 + v10;
    v13 = sub_1A93F726C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    v4 = sub_1A93F73E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190) + 48);
    v6 = (_QWORD *)(a1 + v5);
    v7 = (_QWORD *)(a2 + v5);
    v8 = v7[1];
    *v6 = *v7;
    v6[1] = v8;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for DownloadConsistency.Issue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1A9064714(a1, type metadata accessor for DownloadConsistency.Issue);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v8 = sub_1A93F73E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48);
      v10 = a1 + v9;
      v11 = a2 + v9;
      v12 = sub_1A93F726C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      v4 = sub_1A93F73E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
      v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190) + 48);
      v6 = (_QWORD *)(a1 + v5);
      v7 = (_QWORD *)(a2 + v5);
      *v6 = *v7;
      v6[1] = v7[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for DownloadConsistency.Issue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_1A93F73E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48);
    v8 = a1 + v7;
    v9 = a2 + v7;
    v10 = sub_1A93F726C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  }
  else
  {
    v4 = sub_1A93F73E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190);
    *(_OWORD *)(a1 + *(int *)(v5 + 48)) = *(_OWORD *)(a2 + *(int *)(v5 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for DownloadConsistency.Issue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1A9064714(a1, type metadata accessor for DownloadConsistency.Issue);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_1A93F73E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48);
      v8 = a1 + v7;
      v9 = a2 + v7;
      v10 = sub_1A93F726C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    }
    else
    {
      v4 = sub_1A93F73E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190);
      *(_OWORD *)(a1 + *(int *)(v5 + 48)) = *(_OWORD *)(a2 + *(int *)(v5 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for DownloadConsistency.IssueResolution(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for DownloadConsistency.Issue(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v13 = sub_1A93F73E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_1A93F726C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      v7 = sub_1A93F73E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190) + 48);
      v9 = (uint64_t *)((char *)a1 + v8);
      v10 = (uint64_t *)((char *)a2 + v8);
      v11 = v10[1];
      *v9 = *v10;
      v9[1] = v11;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DownloadConsistency.IssueResolution(uint64_t a1)
{
  unsigned int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for DownloadConsistency.Issue(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v4 = sub_1A93F73E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48);
    v6 = sub_1A93F726C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    v3 = sub_1A93F73E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DownloadConsistency.IssueResolution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  type metadata accessor for DownloadConsistency.Issue(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v11 = sub_1A93F73E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48);
    v13 = a1 + v12;
    v14 = a2 + v12;
    v15 = sub_1A93F726C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    v6 = sub_1A93F73E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190) + 48);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    v10 = v9[1];
    *v8 = *v9;
    v8[1] = v10;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

