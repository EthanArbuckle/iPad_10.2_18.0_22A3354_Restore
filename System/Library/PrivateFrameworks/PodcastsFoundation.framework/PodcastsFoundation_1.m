void *sub_1A9129E70(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  unint64_t v26;
  void *result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  unint64_t v41;
  id v42;
  void *v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  unint64_t v53;
  id v54;
  void *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[2];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  const __CFString *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  _BYTE v71[176];
  void *v72[23];

  v69 = a2;
  v8 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v63 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v64 = (uint64_t)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v62 = (uint64_t)v59 - v11;
  v12 = (void *)MEMORY[0x1E0DEE9D8];
  v68 = *(_QWORD *)(a1 + 16);
  if (v68)
  {
    v60 = a4;
    v61 = a5;
    v67 = a1 + 32;
    v66 = CFSTR("MTEpisode");
    v59[1] = a1;
    swift_bridgeObjectRetain();
    v13 = 0;
    v14 = (uint64_t)v12;
    while (1)
    {
      v15 = v67 + 40 * v13;
      v16 = *(_QWORD *)v15;
      v17 = *(_QWORD *)(v15 + 8);
      v19 = *(_QWORD *)(v15 + 16);
      v18 = *(_QWORD *)(v15 + 24);
      if (*(_BYTE *)(v15 + 32) == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A912AC00(v16, v17, v19, v18, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v20 = (void *)objc_opt_self();
        v21 = (void *)sub_1A93F8010();
        swift_bridgeObjectRelease();
        v22 = (void *)sub_1A93F8010();
        swift_bridgeObjectRelease();
        v23 = objc_msgSend(v20, sel_predicateForEpisodeGuid_onFeedURL_, v21, v22);

        v24 = objc_msgSend(v69, sel_objectsInEntity_predicate_sortDescriptors_, v66, v23, 0);
        if (v24)
        {
          v25 = v24;
          v65 = v23;
          sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
          v26 = sub_1A93F8310();

          v72[0] = v12;
          v70 = v14;
          if (v26 >> 62)
          {
            swift_bridgeObjectRetain();
            sub_1A93F8E5C();
            swift_bridgeObjectRelease();
            sub_1A93F8D84();
            swift_bridgeObjectRetain();
            v28 = sub_1A93F8E5C();
            result = (void *)swift_bridgeObjectRelease();
            if (v28)
            {
LABEL_9:
              if ((v26 & 0xC000000000000001) != 0)
              {
                v29 = 0;
                while (1)
                {
                  result = (void *)MEMORY[0x1AF4129DC](v29, v26);
                  v30 = v29 + 1;
                  if (__OFADD__(v29, 1))
                    break;
                  objc_opt_self();
                  if (!swift_dynamicCastObjCClass())
                    goto LABEL_25;
                  sub_1A93F8D60();
                  sub_1A93F8D90();
                  sub_1A93F8D9C();
                  sub_1A93F8D6C();
                  ++v29;
                  if (v30 == v28)
                    goto LABEL_31;
                }
                __break(1u);
                goto LABEL_73;
              }
              v37 = 0;
              while (1)
              {
                v38 = v37 + 1;
                if (__OFADD__(v37, 1))
                  break;
                v39 = *(void **)(v26 + 32 + 8 * v37);
                objc_opt_self();
                if (!swift_dynamicCastObjCClass())
                  goto LABEL_26;
                v40 = v39;
                sub_1A93F8D60();
                sub_1A93F8D90();
                sub_1A93F8D9C();
                result = (void *)sub_1A93F8D6C();
                ++v37;
                if (v38 == v28)
                  goto LABEL_31;
              }
LABEL_74:
              __break(1u);
              goto LABEL_75;
            }
          }
          else
          {
            result = (void *)sub_1A93F8D84();
            v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v28)
              goto LABEL_9;
          }
LABEL_31:
          v41 = (unint64_t)v72[0];
          result = (void *)swift_bridgeObjectRelease();
          if ((v41 & 0x8000000000000000) != 0 || (v41 & 0x4000000000000000) != 0)
          {
            swift_bridgeObjectRetain();
            v57 = sub_1A93F8E5C();
            result = (void *)swift_release();
            v12 = (void *)MEMORY[0x1E0DEE9D8];
            v14 = v70;
            if (!v57)
              goto LABEL_65;
          }
          else
          {
            v12 = (void *)MEMORY[0x1E0DEE9D8];
            v14 = v70;
            if (!*(_QWORD *)(v41 + 16))
              goto LABEL_65;
          }
          if ((v41 & 0xC000000000000001) != 0)
          {
            v42 = (id)MEMORY[0x1AF4129DC](0, v41);
          }
          else
          {
            if (!*(_QWORD *)(v41 + 16))
              goto LABEL_77;
            v42 = *(id *)(v41 + 32);
          }
          v43 = v42;
          swift_release();
          v44 = v43;
          sub_1A927EC28(v44, v64);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v14 = sub_1A9117A2C(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
          v46 = *(_QWORD *)(v14 + 16);
          v45 = *(_QWORD *)(v14 + 24);
          if (v46 >= v45 >> 1)
            v14 = sub_1A9117A2C(v45 > 1, v46 + 1, 1, v14);
          *(_QWORD *)(v14 + 16) = v46 + 1;
          v48 = v63;
          v47 = v64;
LABEL_57:
          sub_1A912AB38(v47, v14+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v46);

          goto LABEL_4;
        }
      }
      else
      {
        sub_1A912C470(v16, v17, v19, v18, 0);
        result = (void *)objc_opt_self();
        if (v16 < 0)
          goto LABEL_76;
        v23 = objc_msgSend(result, sel_predicateForEpisodeStoreTrackId_, v16);
        v31 = objc_msgSend(v69, sel_objectsInEntity_predicate_sortDescriptors_, v66, v23, 0);
        if (v31)
        {
          v32 = v31;
          v65 = v23;
          sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
          v33 = sub_1A93F8310();

          v72[0] = v12;
          v70 = v14;
          if (v33 >> 62)
          {
            swift_bridgeObjectRetain();
            sub_1A93F8E5C();
            swift_bridgeObjectRelease();
            sub_1A93F8D84();
            swift_bridgeObjectRetain();
            v34 = sub_1A93F8E5C();
            result = (void *)swift_bridgeObjectRelease();
            if (v34)
            {
LABEL_19:
              if ((v33 & 0xC000000000000001) != 0)
              {
                v35 = 0;
                while (1)
                {
                  result = (void *)MEMORY[0x1AF4129DC](v35, v33);
                  v36 = v35 + 1;
                  if (__OFADD__(v35, 1))
                    break;
                  objc_opt_self();
                  if (!swift_dynamicCastObjCClass())
                  {
LABEL_25:
                    swift_unknownObjectRelease();
                    goto LABEL_26;
                  }
                  sub_1A93F8D60();
                  sub_1A93F8D90();
                  sub_1A93F8D9C();
                  sub_1A93F8D6C();
                  ++v35;
                  if (v36 == v34)
                    goto LABEL_46;
                }
LABEL_73:
                __break(1u);
                goto LABEL_74;
              }
              v49 = 0;
              while (1)
              {
                v50 = v49 + 1;
                if (__OFADD__(v49, 1))
                  break;
                v51 = *(void **)(v33 + 32 + 8 * v49);
                objc_opt_self();
                if (!swift_dynamicCastObjCClass())
                {
LABEL_26:

                  swift_bridgeObjectRelease();
                  swift_release();
                  v12 = (void *)MEMORY[0x1E0DEE9D8];
                  v14 = v70;
                  goto LABEL_4;
                }
                v52 = v51;
                sub_1A93F8D60();
                sub_1A93F8D90();
                sub_1A93F8D9C();
                result = (void *)sub_1A93F8D6C();
                ++v49;
                if (v50 == v34)
                  goto LABEL_46;
              }
LABEL_75:
              __break(1u);
LABEL_76:
              __break(1u);
LABEL_77:
              __break(1u);
LABEL_78:
              __break(1u);
              return result;
            }
          }
          else
          {
            result = (void *)sub_1A93F8D84();
            v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v34)
              goto LABEL_19;
          }
LABEL_46:
          v53 = (unint64_t)v72[0];
          result = (void *)swift_bridgeObjectRelease();
          if ((v53 & 0x8000000000000000) != 0 || (v53 & 0x4000000000000000) != 0)
          {
            swift_bridgeObjectRetain();
            v58 = sub_1A93F8E5C();
            result = (void *)swift_release();
            v12 = (void *)MEMORY[0x1E0DEE9D8];
            v14 = v70;
            if (!v58)
            {
LABEL_65:

              swift_release();
              goto LABEL_4;
            }
          }
          else
          {
            v12 = (void *)MEMORY[0x1E0DEE9D8];
            v14 = v70;
            if (!*(_QWORD *)(v53 + 16))
              goto LABEL_65;
          }
          if ((v53 & 0xC000000000000001) != 0)
          {
            v54 = (id)MEMORY[0x1AF4129DC](0, v53);
          }
          else
          {
            if (!*(_QWORD *)(v53 + 16))
              goto LABEL_78;
            v54 = *(id *)(v53 + 32);
          }
          v55 = v54;
          swift_release();
          v44 = v55;
          sub_1A927EC28(v44, v62);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v14 = sub_1A9117A2C(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
          v46 = *(_QWORD *)(v14 + 16);
          v56 = *(_QWORD *)(v14 + 24);
          if (v46 >= v56 >> 1)
            v14 = sub_1A9117A2C(v56 > 1, v46 + 1, 1, v14);
          *(_QWORD *)(v14 + 16) = v46 + 1;
          v47 = v62;
          v48 = v63;
          goto LABEL_57;
        }
      }

LABEL_4:
      if (++v13 == v68)
      {
        swift_bridgeObjectRelease();
        a4 = v60;
        a5 = v61;
        if (!*(_QWORD *)(v14 + 16))
          goto LABEL_71;
LABEL_69:
        sub_1A912AC30((uint64_t)v72);
        sub_1A9062F08((uint64_t)v72, (uint64_t)v71, &qword_1EEAB7DD8);
        sub_1A912BFA8(v14, (uint64_t)v71, a4, a5);
        return (void *)swift_bridgeObjectRelease();
      }
    }
  }
  v14 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    goto LABEL_69;
LABEL_71:
  swift_bridgeObjectRelease();
  v72[0] = (void *)5;
  return (void *)sub_1A912C240(v72, a4, a5);
}

uint64_t sub_1A912A740()
{
  return swift_deallocClassInstance();
}

uint64_t _s20LocalLibraryProviderCMa()
{
  return objc_opt_self();
}

void sub_1A912A770(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_1A91243C4(a1, a2, a3);
}

BOOL sub_1A912A790(uint64_t a1)
{
  return *(_BYTE *)(a1 + 32) != 0;
}

uint64_t sub_1A912A7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1A912A7B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  *v3 = v0;
  v3[1] = sub_1A912A85C;
  return sub_1A93F9078();
}

uint64_t sub_1A912A85C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_1A912A8AC(uint64_t a1)
{
  uint64_t v1;

  sub_1A9128204(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A912A8B4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(unint64_t, uint64_t, uint64_t);
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v18 = *(_QWORD *)(v2 + 64);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v20 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  v19 = v3;
  v6 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v0 + v3 + v1[12];
  v8 = sub_1A93F726C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease();
  v11 = v6 + v1[16];
  if (!v10(v11, 1, v8))
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  swift_release();
  v12 = v6 + v1[20];
  v13 = sub_1A93F738C();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v6 + v1[36];
  if (!v10(v15, 1, v8))
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v15, v8);
  v16 = (v18 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v20 + 8))(v0 + ((v16 + v5 + 8) & ~v5), v21);
  return swift_deallocObject();
}

uint64_t sub_1A912AB38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1A912AB7C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
  sub_1A9128404(v0 + v2, *(void **)(v0 + v3));
}

uint64_t sub_1A912ABF4()
{
  return sub_1A912D1B4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9129E70);
}

uint64_t sub_1A912AC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

double sub_1A912AC30(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 1;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 154) = 0u;
  return result;
}

void sub_1A912AC58(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char v19;
  void *v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = a1[2];
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v7 = a1[4];
  v6 = (void *)a1[5];
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)*a3;
  v9 = sub_1A9093570(v7);
  v11 = v8[2];
  v12 = (v10 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
    goto LABEL_24;
  v14 = v9;
  v15 = v10;
  v16 = v8[3];
  v17 = v6;
  if (v16 >= v13)
  {
    if ((a2 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1A9306F68();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v22 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v14 >> 6) + 64) |= 1 << v14;
    v23 = 8 * v14;
    *(_QWORD *)(v22[6] + v23) = v7;
    *(_QWORD *)(v22[7] + v23) = v17;
    v24 = v22[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v22[2] = v26;
    v27 = v3 - 1;
    if (v3 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    v28 = (void **)(a1 + 7);
    while (1)
    {
      v30 = (uint64_t)*(v28 - 1);
      v29 = *v28;
      v31 = (_QWORD *)*a3;
      v32 = sub_1A9093570(v30);
      v34 = v31[2];
      v35 = (v33 & 1) == 0;
      v36 = v34 + v35;
      if (__OFADD__(v34, v35))
        break;
      v37 = v32;
      v38 = v33;
      v39 = v31[3];
      v17 = v29;
      if (v39 < v36)
      {
        sub_1A92FE0BC(v36, 1);
        v40 = sub_1A9093570(v30);
        if ((v38 & 1) != (v41 & 1))
          goto LABEL_26;
        v37 = v40;
      }
      if ((v38 & 1) != 0)
        goto LABEL_10;
      v42 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v37 >> 6) + 64) |= 1 << v37;
      v43 = 8 * v37;
      *(_QWORD *)(v42[6] + v43) = v30;
      *(_QWORD *)(v42[7] + v43) = v17;
      v44 = v42[2];
      v25 = __OFADD__(v44, 1);
      v45 = v44 + 1;
      if (v25)
        goto LABEL_25;
      v42[2] = v45;
      v28 += 2;
      if (!--v27)
        goto LABEL_23;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1A92FE0BC(v13, a2 & 1);
  v18 = sub_1A9093570(v7);
  if ((v15 & 1) == (v19 & 1))
  {
    v14 = v18;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v20 = (void *)swift_allocError();
    swift_willThrow();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1A93F9258();
  __break(1u);
LABEL_27:
  sub_1A93F8C70();
  sub_1A93F810C();
  sub_1A93F8DE4();
  sub_1A93F810C();
  sub_1A93F8E14();
  __break(1u);
}

void sub_1A912AFB8(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  id v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  void *v19;
  id v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  if (!a1[2])
  {
    swift_bridgeObjectRelease();
    return;
  }
  v43 = a1[2];
  v7 = a1[4];
  v6 = a1[5];
  v8 = (void *)a1[6];
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)*a3;
  swift_bridgeObjectRetain();
  v10 = v8;
  v12 = sub_1A912E12C(v7, v6);
  v13 = v9[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
    goto LABEL_23;
  v16 = v11;
  if (v9[3] >= v15)
  {
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1A9307108();
      if ((v16 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v21 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    v22 = (uint64_t *)(v21[6] + 16 * v12);
    *v22 = v7;
    v22[1] = v6;
    *(_QWORD *)(v21[7] + 8 * v12) = v10;
    v23 = v21[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v21[2] = v25;
    v26 = v43 - 1;
    if (v43 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v27 = (void **)(a1 + 9);
    while (1)
    {
      v29 = (uint64_t)*(v27 - 2);
      v28 = (uint64_t)*(v27 - 1);
      v30 = *v27;
      v31 = (_QWORD *)*a3;
      swift_bridgeObjectRetain();
      v10 = v30;
      v32 = sub_1A912E12C(v29, v28);
      v34 = v31[2];
      v35 = (v33 & 1) == 0;
      v24 = __OFADD__(v34, v35);
      v36 = v34 + v35;
      if (v24)
        break;
      v37 = v33;
      if (v31[3] < v36)
      {
        sub_1A92FE698(v36, 1);
        v32 = sub_1A912E12C(v29, v28);
        if ((v37 & 1) != (v38 & 1))
          goto LABEL_25;
      }
      if ((v37 & 1) != 0)
        goto LABEL_10;
      v39 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      v40 = (uint64_t *)(v39[6] + 16 * v32);
      *v40 = v29;
      v40[1] = v28;
      *(_QWORD *)(v39[7] + 8 * v32) = v10;
      v41 = v39[2];
      v24 = __OFADD__(v41, 1);
      v42 = v41 + 1;
      if (v24)
        goto LABEL_24;
      v39[2] = v42;
      v27 += 3;
      if (!--v26)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1A92FE698(v15, a2 & 1);
  v17 = sub_1A912E12C(v7, v6);
  if ((v16 & 1) == (v18 & 1))
  {
    v12 = v17;
    if ((v16 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v19 = (void *)swift_allocError();
    swift_willThrow();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
  sub_1A93F9258();
  __break(1u);
LABEL_26:
  sub_1A93F8C70();
  sub_1A93F810C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
  sub_1A93F8DE4();
  sub_1A93F810C();
  sub_1A93F8E14();
  __break(1u);
}

void sub_1A912B350(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char v19;
  void *v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = a1[2];
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v7 = a1[4];
  v6 = (void *)a1[5];
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)*a3;
  v9 = sub_1A906C424(v7);
  v11 = v8[2];
  v12 = (v10 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
    goto LABEL_24;
  v14 = v9;
  v15 = v10;
  v16 = v8[3];
  v17 = v6;
  if (v16 >= v13)
  {
    if ((a2 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1A93072B4();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v22 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v14 >> 6) + 64) |= 1 << v14;
    v23 = 8 * v14;
    *(_QWORD *)(v22[6] + v23) = v7;
    *(_QWORD *)(v22[7] + v23) = v17;
    v24 = v22[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v22[2] = v26;
    v27 = v3 - 1;
    if (v3 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    v28 = (void **)(a1 + 7);
    while (1)
    {
      v30 = (uint64_t)*(v28 - 1);
      v29 = *v28;
      v31 = (_QWORD *)*a3;
      v32 = sub_1A906C424(v30);
      v34 = v31[2];
      v35 = (v33 & 1) == 0;
      v36 = v34 + v35;
      if (__OFADD__(v34, v35))
        break;
      v37 = v32;
      v38 = v33;
      v39 = v31[3];
      v17 = v29;
      if (v39 < v36)
      {
        sub_1A92FE9C4(v36, 1);
        v40 = sub_1A906C424(v30);
        if ((v38 & 1) != (v41 & 1))
          goto LABEL_26;
        v37 = v40;
      }
      if ((v38 & 1) != 0)
        goto LABEL_10;
      v42 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v37 >> 6) + 64) |= 1 << v37;
      v43 = 8 * v37;
      *(_QWORD *)(v42[6] + v43) = v30;
      *(_QWORD *)(v42[7] + v43) = v17;
      v44 = v42[2];
      v25 = __OFADD__(v44, 1);
      v45 = v44 + 1;
      if (v25)
        goto LABEL_25;
      v42[2] = v45;
      v28 += 2;
      if (!--v27)
        goto LABEL_23;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1A92FE9C4(v13, a2 & 1);
  v18 = sub_1A906C424(v7);
  if ((v15 & 1) == (v19 & 1))
  {
    v14 = v18;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v20 = (void *)swift_allocError();
    swift_willThrow();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1A93F9258();
  __break(1u);
LABEL_27:
  sub_1A93F8C70();
  sub_1A93F810C();
  sub_1A93F8DE4();
  sub_1A93F810C();
  sub_1A93F8E14();
  __break(1u);
}

uint64_t sub_1A912B6B0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v12 = MEMORY[0x1E0DEE9D8];
    result = sub_1A929E3E4(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v12;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1AF4129DC](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      swift_getAtKeyPath();
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      if (v9 >= v8 >> 1)
        sub_1A929E3E4(v8 > 1, v9 + 1, 1);
      ++v5;
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v11;
      *(_QWORD *)(v10 + 40) = v7;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A912B818(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  id v7;
  __int128 v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v13 = MEMORY[0x1E0DEE9D8];
    result = sub_1A929E400(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v13;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1AF4129DC](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      swift_getAtKeyPath();
      v8 = v12;
      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1A929E400(v9 > 1, v10 + 1, 1);
        v8 = v12;
      }
      ++v5;
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 24 * v10;
      *(_OWORD *)(v11 + 32) = v8;
      *(_QWORD *)(v11 + 48) = v7;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A912B990(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v12 = MEMORY[0x1E0DEE9D8];
    result = sub_1A929E438(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v12;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1AF4129DC](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      swift_getAtKeyPath();
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      if (v9 >= v8 >> 1)
        sub_1A929E438(v8 > 1, v9 + 1, 1);
      ++v5;
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v11;
      *(_QWORD *)(v10 + 40) = v7;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A912BAF8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  uint64_t v7;
  char v8;
  id v9;
  uint64_t v10;

  result = MEMORY[0x1E0DEE9D8];
  v10 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v4; ++i)
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v7 = sub_1A9093570(*(_QWORD *)(a1 + 8 * i + 32));
        if ((v8 & 1) != 0)
        {
          v9 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v7);
          MEMORY[0x1AF412004]();
          if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A93F834C();
          sub_1A93F8394();
          sub_1A93F8328();
        }
      }
    }
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_1A912BBF8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  result = MEMORY[0x1E0DEE9D8];
  v13 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v7 = *(v6 - 1);
        v8 = *v6;
        swift_bridgeObjectRetain();
        v9 = sub_1A912E12C(v7, v8);
        if ((v10 & 1) != 0)
        {
          v11 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v9);
          v12 = swift_bridgeObjectRelease();
          MEMORY[0x1AF412004](v12);
          if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A93F834C();
          sub_1A93F8394();
          sub_1A93F8328();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_1A912BD18(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  uint64_t v7;
  char v8;
  id v9;
  uint64_t v10;

  result = MEMORY[0x1E0DEE9D8];
  v10 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v4; ++i)
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v7 = sub_1A906C424(*(_QWORD *)(a1 + 8 * i + 32));
        if ((v8 & 1) != 0)
        {
          v9 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v7);
          MEMORY[0x1AF412004]();
          if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A93F834C();
          sub_1A93F8394();
          sub_1A93F8328();
        }
      }
    }
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_1A912BE18(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9[3];
  uint64_t v10;

  v10 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_16;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
    while (1)
    {
      v2 = 0;
      v3 = v8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x1AF4129DC](v2, a1);
LABEL_9:
        v5 = v4;
        v6 = v2 + 1;
        if (__OFADD__(v2, 1))
          goto LABEL_15;
        v9[2] = (uint64_t)v4;
        swift_getAtKeyPath();
        if ((sub_1A90920C8(v9, v9[1]) & 1) != 0)
        {
          sub_1A93F8D60();
          sub_1A93F8D90();
          v3 = v8;
          sub_1A93F8D9C();
          sub_1A93F8D6C();
        }
        else
        {

        }
        ++v2;
        if (v6 == v3)
          return v10;
      }
      if (v2 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v8 = sub_1A93F8E5C();
      if (!v8)
        return MEMORY[0x1E0DEE9D8];
    }
    v4 = *(id *)(a1 + 8 * v2 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A912BFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];
  _BYTE v22[184];

  v8 = sub_1A93F7D58();
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A93F7DB8();
  v11 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9062F08(a2, (uint64_t)v22, &qword_1EEAB7DD8);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v14 = (void *)sub_1A93F8868();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a1;
  sub_1A9062F08((uint64_t)v22, (uint64_t)(v15 + 5), &qword_1EEAB7DD8);
  aBlock[4] = sub_1A912C754;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_19;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A912C764((uint64_t)v22);
  swift_release();
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v19);
}

uint64_t sub_1A912C240(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v6 = sub_1A93F7D58();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1A93F7DB8();
  v10 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v14 = (void *)sub_1A93F8868();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v13;
  v15[3] = a2;
  v15[4] = a3;
  aBlock[4] = sub_1A912C4D4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_13;
  v16 = _Block_copy(aBlock);
  sub_1A912C4E0(v13);
  swift_retain();
  swift_release();
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v7, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v12, v9, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v18);
}

uint64_t sub_1A912C470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A912C4A0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  if ((unint64_t)v1 >= 7)

  swift_release();
  return swift_deallocObject();
}

void sub_1A912C4D4()
{
  uint64_t v0;

  sub_1A91274C4(*(void **)(v0 + 16), *(void (**)(_BYTE *))(v0 + 24));
}

id sub_1A912C4E0(id result)
{
  if ((unint64_t)result >= 7)
    return result;
  return result;
}

uint64_t sub_1A912C4F0(uint64_t result)
{
  *(_BYTE *)(result + 179) = 1;
  return result;
}

void sub_1A912C4FC(id a1)
{
  if ((unint64_t)a1 >= 7)

}

uint64_t sub_1A912C50C(uint64_t result)
{
  *(_BYTE *)(result + 179) = 0;
  return result;
}

uint64_t sub_1A912C514(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(void **)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 88);
  v15 = *(_OWORD *)(a1 + 72);
  v13 = *(_OWORD *)(a1 + 104);
  v11 = *(_OWORD *)(a1 + 136);
  v12 = *(_OWORD *)(a1 + 120);
  v10 = *(_OWORD *)(a1 + 152);
  swift_bridgeObjectRelease();
  sub_1A912C600(v16, v2, v3, v4, v5, v6, v7, v8, v15, *((uint64_t *)&v15 + 1), v14, SBYTE8(v14), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10);
  return a1;
}

uint64_t sub_1A912C600(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19)
{
  if (a6 != (void *)1)
  {
    sub_1A912C6B4(result, a2, a3, a4, a5);

    swift_bridgeObjectRelease();
    return sub_1A912C71C(a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
  }
  return result;
}

uint64_t sub_1A912C6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 <= 7u)
  {
    if (((1 << a5) & 0xE6) != 0 || a5 == 3)
      return swift_bridgeObjectRelease();
    if (a5 == 4)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1A912C71C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, char a11)
{
  if (a11 != 2)
    return sub_1A90531EC(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return a1;
}

uint64_t sub_1A912C738(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 1)
    return swift_release();
  return result;
}

uint64_t sub_1A912C74C()
{
  return objectdestroy_15Tm();
}

uint64_t sub_1A912C754()
{
  uint64_t v0;

  return sub_1A9127340(*(void (**)(_BYTE *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + 40);
}

uint64_t sub_1A912C764(uint64_t a1)
{
  sub_1A912C7CC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_OWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_OWORD *)(a1 + 144));
  return a1;
}

uint64_t sub_1A912C7CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19)
{
  id v20;

  if (a6 != (void *)1)
  {
    sub_1A912C880(result, a2, a3, a4, a5);
    swift_bridgeObjectRetain();
    v20 = a6;
    return sub_1A912C8E4(a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
  }
  return result;
}

uint64_t sub_1A912C880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 <= 7u)
  {
    if (((1 << a5) & 0xE6) == 0 && a5 != 3)
    {
      if (a5 != 4)
        return result;
      swift_bridgeObjectRetain();
    }
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A912C8E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, char a11)
{
  if (a11 != 2)
    return sub_1A90519B4(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return a1;
}

uint64_t sub_1A912C900(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 1)
    return swift_retain();
  return result;
}

uint64_t sub_1A912C914()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A912C950()
{
  uint64_t v0;

  return sub_1A91295A0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1A912C968()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

char *keypath_get_selector_persistentID()
{
  return sel_persistentID;
}

id sub_1A912C998@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_persistentID);
  *a2 = result;
  return result;
}

id sub_1A912C9C8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPersistentID_, *a1);
}

uint64_t sub_1A912C9DC(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11[5];
  uint64_t v12;

  v12 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x1AF4129DC](v3, a1);
LABEL_9:
        v5 = v4;
        v6 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_15;
        v11[4] = (uint64_t)v4;
        swift_getAtKeyPath();
        v7 = v11[2];
        v8 = v11[3];
        swift_bridgeObjectRetain();
        v9 = sub_1A9327704(v11, v7, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
        {
          sub_1A93F8D60();
          sub_1A93F8D90();
          sub_1A93F8D9C();
          sub_1A93F8D6C();
        }
        else
        {

        }
        ++v3;
        if (v6 == v2)
          return v12;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v2 = sub_1A93F8E5C();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A912CB5C(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9[3];
  uint64_t v10;

  v10 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_16;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
    while (1)
    {
      v2 = 0;
      v3 = v8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x1AF4129DC](v2, a1);
LABEL_9:
        v5 = v4;
        v6 = v2 + 1;
        if (__OFADD__(v2, 1))
          goto LABEL_15;
        v9[2] = (uint64_t)v4;
        swift_getAtKeyPath();
        if ((sub_1A93278CC(v9, v9[1]) & 1) != 0)
        {
          sub_1A93F8D60();
          sub_1A93F8D90();
          v3 = v8;
          sub_1A93F8D9C();
          sub_1A93F8D6C();
        }
        else
        {

        }
        ++v2;
        if (v6 == v3)
          return v10;
      }
      if (v2 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v8 = sub_1A93F8E5C();
      if (!v8)
        return MEMORY[0x1E0DEE9D8];
    }
    v4 = *(id *)(a1 + 8 * v2 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A912CCF0()
{
  return sub_1A912D1B4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A91287B8);
}

uint64_t sub_1A912CCFC(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _OWORD v40[2];

  v6 = sub_1A93F7D58();
  v28 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7DB8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[9];
  v38 = a1[8];
  v39 = v13;
  v40[0] = a1[10];
  *(_DWORD *)((char *)v40 + 15) = *(_DWORD *)((char *)a1 + 175);
  v14 = a1[5];
  v34 = a1[4];
  v35 = v14;
  v15 = a1[7];
  v36 = a1[6];
  v37 = v15;
  v16 = a1[1];
  v30 = *a1;
  v31 = v16;
  v17 = a1[3];
  v32 = a1[2];
  v33 = v17;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v18 = (void *)sub_1A93F8868();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  v20 = v39;
  *(_OWORD *)(v19 + 160) = v38;
  *(_OWORD *)(v19 + 176) = v20;
  *(_OWORD *)(v19 + 192) = v40[0];
  *(_DWORD *)(v19 + 207) = *(_DWORD *)((char *)v40 + 15);
  v21 = v35;
  *(_OWORD *)(v19 + 96) = v34;
  *(_OWORD *)(v19 + 112) = v21;
  v22 = v37;
  *(_OWORD *)(v19 + 128) = v36;
  *(_OWORD *)(v19 + 144) = v22;
  v23 = v31;
  *(_OWORD *)(v19 + 32) = v30;
  *(_OWORD *)(v19 + 48) = v23;
  v24 = v33;
  *(_OWORD *)(v19 + 64) = v32;
  *(_OWORD *)(v19 + 80) = v24;
  aBlock[4] = sub_1A912D3D0;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_53;
  v25 = _Block_copy(aBlock);
  swift_retain();
  sub_1A912D3DC((uint64_t)&v30);
  swift_release();
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v12, v8, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1A912CFDC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  if (a1 >> 62)
  {
LABEL_22:
    v17 = a3;
    swift_bridgeObjectRetain();
    v5 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    a3 = v17;
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      v19 = a3;
      for (i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v7 = (id)MEMORY[0x1AF4129DC](i, a1);
        else
          v7 = *(id *)(a1 + 8 * i + 32);
        v8 = v7;
        v9 = objc_msgSend(v7, sel_uuid);
        if (v9)
        {
          v10 = v9;
          v11 = sub_1A93F8040();
          v13 = v12;

          if (v11 == a2 && v13 == v19)
          {

            swift_bridgeObjectRelease();
            return i;
          }
          v15 = sub_1A93F90C0();

          swift_bridgeObjectRelease();
          if ((v15 & 1) != 0)
            return i;
          v16 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
        }
        else
        {

          v16 = i + 1;
          if (__OFADD__(i, 1))
            goto LABEL_21;
        }
        if (v16 == v5)
          return 0;
      }
    }
  }
  return 0;
}

uint64_t sub_1A912D16C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A912D1A8()
{
  return sub_1A912D1B4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9126D6C);
}

uint64_t sub_1A912D1B4(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1A912D1C8()
{
  uint64_t v0;

  swift_release();
  sub_1A912C6B4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));

  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v0 + 184) != 2)
    sub_1A90531EC(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_BYTE *)(v0 + 168));
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A912D25C()
{
  uint64_t v0;

  return sub_1A91271F0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + 40, *(_QWORD **)(v0 + 216), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232));
}

uint64_t sub_1A912D274(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(void **)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 96);
  v12 = *(_QWORD *)(a1 + 88);
  v13 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 136);
  v9 = *(_WORD *)(a1 + 144);
  sub_1A912C880(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_bridgeObjectRetain();
  v10 = v2;
  sub_1A912C8E4(v15, v14, v13, v12, v3, v4, v5, v7, v6, v8, v9);
  return a1;
}

uint64_t sub_1A912D334()
{
  return objectdestroy_15Tm();
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 80) != 1)
  {
    sub_1A912C6B4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));

    swift_bridgeObjectRelease();
    if (*(_BYTE *)(v0 + 184) != 2)
      sub_1A90531EC(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_BYTE *)(v0 + 168));
  }
  return swift_deallocObject();
}

uint64_t sub_1A912D3D0()
{
  uint64_t v0;

  return sub_1A9127420(*(void (**)(_BYTE *))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32);
}

uint64_t sub_1A912D3DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(void **)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 88);
  v15 = *(_OWORD *)(a1 + 72);
  v13 = *(_OWORD *)(a1 + 104);
  v11 = *(_OWORD *)(a1 + 136);
  v12 = *(_OWORD *)(a1 + 120);
  v10 = *(_OWORD *)(a1 + 152);
  swift_bridgeObjectRetain();
  sub_1A912C7CC(v16, v2, v3, v4, v5, v6, v7, v8, v15, *((uint64_t *)&v15 + 1), v14, SBYTE8(v14), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10);
  return a1;
}

char *keypath_get_selector_uuid()
{
  return sel_uuid;
}

uint64_t sub_1A912D4DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A912D518()
{
  return sub_1A912D6C8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A91268F0);
}

uint64_t sub_1A912D524()
{
  uint64_t v0;

  sub_1A912C6B4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v0 + 160) != 2)
    sub_1A90531EC(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 144));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_1A912D5A8()
{
  uint64_t v0;

  return sub_1A9125488((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
}

uint64_t sub_1A912D5B8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(void **)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 96);
  v11 = *(_QWORD *)(a1 + 88);
  v12 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 136);
  v9 = *(_WORD *)(a1 + 144);
  sub_1A912C6B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));

  swift_bridgeObjectRelease();
  sub_1A912C71C(v14, v13, v12, v11, v3, v4, v5, v7, v6, v8, v9);
  return a1;
}

uint64_t sub_1A912D678()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A912D6BC()
{
  return sub_1A912D6C8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9124D14);
}

uint64_t sub_1A912D6C8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_1A912D6DC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1A9072534(255, a2);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

char *keypath_get_selector_storeTrackId()
{
  return sel_storeTrackId;
}

id sub_1A912D728@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_storeTrackId);
  *a2 = result;
  return result;
}

id sub_1A912D758(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStoreTrackId_, *a1);
}

uint64_t *sub_1A912D76C@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X8>)
{
  *a2 = *result & ~(*result >> 63);
  return result;
}

uint64_t sub_1A912D77C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A912D7A0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A91249A0(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(_QWORD *))(v1 + 24));
}

uint64_t sub_1A912D7AC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

uint64_t sub_1A912D7E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  sub_1A912C6B4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));

  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v0 + 192) != 2)
    sub_1A90531EC(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_BYTE *)(v0 + 176));
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A912D87C()
{
  uint64_t v0;

  return sub_1A9126480(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v0 + 48, *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
}

uint64_t sub_1A912D8B0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1A912C6B4(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));

  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v0 + 200) != 2)
    sub_1A90531EC(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_BYTE *)(v0 + 184));
  return swift_deallocObject();
}

void sub_1A912D934()
{
  uint64_t v0;

  sub_1A9125D84(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v0 + 56);
}

uint64_t sub_1A912D990(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1A91307CC(a1, (uint64_t)sub_1A913078C, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t RemoteSyncTypeWithUnknownSyncProperties.encodeUnknownSyncProperties()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A93F6DEC();
  swift_allocObject();
  sub_1A93F6DE0();
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBA0);
  sub_1A9130B4C(&qword_1ED2ABBA8, (uint64_t (*)(void))sub_1A912DB10, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
  v4 = sub_1A93F6DD4();
  swift_release();
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1A912DB10()
{
  unint64_t result;

  result = qword_1ED2AAF70;
  if (!qword_1ED2AAF70)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AnyCodable, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_1ED2AAF70);
  }
  return result;
}

uint64_t Dictionary<>.flatteningUnknownSyncProperties<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  v8 = v7(a3, a4);
  if (!*(_QWORD *)(a2 + 16)
    || (v10 = sub_1A9067718(v8, v9, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A9067790), (v11 & 1) == 0))
  {
    v18 = 0u;
    v19 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1A906443C(*(_QWORD *)(a2 + 56) + 32 * v10, (uint64_t)&v18);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v19 + 1))
  {
LABEL_7:
    sub_1A90A593C((uint64_t)&v18);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    return a2;
  }
  swift_bridgeObjectRetain();
  v12 = v7(a3, a4);
  sub_1A9130A4C(v12, v13, &v18);
  swift_bridgeObjectRelease();
  sub_1A90A593C((uint64_t)&v18);
  sub_1A93F6DA4();
  swift_allocObject();
  sub_1A93F6D98();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBA0);
  sub_1A9130B4C(&qword_1ED2ABBB0, (uint64_t (*)(void))sub_1A9130BC0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
  sub_1A93F6D8C();
  v15 = sub_1A9131208(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  a2 = sub_1A912D990(v15, a2);
  swift_release();
  sub_1A905F180(v16, v17);
  swift_bridgeObjectRelease();
  return a2;
}

void sub_1A912DD74(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = *a1;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A912DDCC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  v1 = sub_1A93F9324();
  return sub_1A912E97C(v0, v1);
}

uint64_t sub_1A912DE60(char *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1A931C224(*(_QWORD *)(v1 + 40), *a1);
  return sub_1A912EB78((uint64_t)a1, v3);
}

void sub_1A912DE90(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = *a1;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A912DEE4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  v1 = sub_1A93F9324();
  return sub_1A912EDBC(v0, v1);
}

void sub_1A912DF5C(char a1)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A912DFB0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  v1 = sub_1A93F9324();
  return sub_1A912EF78(v0, v1);
}

void sub_1A912E028(char a1)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A912E084()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  v1 = sub_1A93F9324();
  return sub_1A912F134(v0, v1);
}

unint64_t sub_1A912E12C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A93F92DC();
  sub_1A93F92F4();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1A93F7FBC();
    swift_bridgeObjectRelease();
  }
  v4 = sub_1A93F9324();
  return sub_1A912F378(a1, a2, v4);
}

unint64_t sub_1A912E1BC(uint64_t a1)
{
  uint64_t v2;

  sub_1A93F92DC();
  type metadata accessor for CFString(0);
  sub_1A9066CA8((unint64_t *)&unk_1ED2ABC98, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1A94048C8);
  sub_1A93F7518();
  v2 = sub_1A93F9324();
  return sub_1A912F440(a1, v2);
}

void sub_1A912E244(char a1)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A912E29C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  v1 = sub_1A93F9324();
  return sub_1A912F580(v0, v1);
}

unint64_t sub_1A912E330(int a1)
{
  int v2;
  uint64_t v3;

  v2 = a1;
  sub_1A93F92DC();
  sub_1A93F92E8();
  if (v2 != 2)
    sub_1A93F92F4();
  v3 = sub_1A93F9324();
  return sub_1A912F77C(a1, v3);
}

unint64_t sub_1A912E3B4(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1A93F6D80();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50];
  sub_1A9066CA8(&qword_1EEAB7E28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], MEMORY[0x1E0CADF60]);
  v3 = sub_1A93F7FA4();
  return sub_1A9130254(a1, v3, v2, &qword_1EEAB7E30, MEMORY[0x1E0CADF68]);
}

unint64_t sub_1A912E44C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A93F8A30();
  return sub_1A9130384(a1, v2, (unint64_t *)&qword_1ED2A41B8);
}

unint64_t sub_1A912E498(char a1)
{
  uint64_t v2;

  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  v2 = sub_1A93F9324();
  return sub_1A912F814(a1, v2);
}

unint64_t sub_1A912E508(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A93F8A30();
  return sub_1A912F8FC(a1, v2);
}

unint64_t sub_1A912E538(uint64_t *a1)
{
  uint64_t v2;

  sub_1A93F92DC();
  sub_1A93F930C();
  sub_1A93F7FBC();
  sub_1A93F9300();
  v2 = sub_1A93F9324();
  return sub_1A912FA04(a1, v2);
}

unint64_t sub_1A912E5B4(uint64_t a1)
{
  uint64_t v2;

  sub_1A93F8040();
  sub_1A93F92DC();
  sub_1A93F7FBC();
  v2 = sub_1A93F9324();
  swift_bridgeObjectRelease();
  return sub_1A912FBD8(a1, v2);
}

uint64_t sub_1A912E634(uint64_t a1)
{
  uint64_t v2;

  sub_1A93F92DC();
  URLTrackIdentifier.ArgumentKey.rawValue.getter();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  v2 = sub_1A93F9324();
  return sub_1A912FD4C(a1, v2);
}

unint64_t sub_1A912E6AC(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1A93F73E0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1A9066CA8((unint64_t *)&qword_1ED2A1F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v3 = sub_1A93F7FA4();
  return sub_1A9130254(a1, v3, v2, (unint64_t *)&unk_1EEABC520, MEMORY[0x1E0CB09D0]);
}

unint64_t sub_1A912E744(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A93F8A30();
  return sub_1A9130384(a1, v2, (unint64_t *)&qword_1ED2A4230);
}

uint64_t sub_1A912E790(uint64_t a1)
{
  return sub_1A909350C(a1, (void (*)(uint64_t))MEMORY[0x1E0DEDF10], (uint64_t (*)(uint64_t, uint64_t))sub_1A9093584);
}

unint64_t sub_1A912E7A4(__int128 *a1)
{
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  _BYTE v6[72];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[2];

  v2 = a1[3];
  v9 = a1[2];
  v10 = v2;
  v11[0] = a1[4];
  *(_OWORD *)((char *)v11 + 11) = *(__int128 *)((char *)a1 + 75);
  v3 = a1[1];
  v7 = *a1;
  v8 = v3;
  sub_1A93F92DC();
  EpisodeStateModel.hash(into:)((uint64_t)v6);
  v4 = sub_1A93F9324();
  return sub_1A9130494(a1, v4);
}

unint64_t sub_1A912E820(uint64_t a1)
{
  return sub_1A912E858(a1, (void (*)(_BYTE *))ShazamSignatureRequest.hash(into:), (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(char *, uint64_t))_s18PodcastsFoundation22ShazamSignatureRequestV2eeoiySbAC_ACtFZ_0);
}

unint64_t sub_1A912E83C(uint64_t a1)
{
  return sub_1A912E858(a1, (void (*)(_BYTE *))TTMLRequest.hash(into:), (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, (uint64_t (*)(char *, uint64_t))_s18PodcastsFoundation11TTMLRequestV2eeoiySbAC_ACtFZ_0);
}

unint64_t sub_1A912E858(uint64_t a1, void (*a2)(_BYTE *), uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, uint64_t))
{
  uint64_t v8;
  _BYTE v10[72];

  sub_1A93F92DC();
  a2(v10);
  v8 = sub_1A93F9324();
  return sub_1A91305C8(a1, v8, a3, a4);
}

unint64_t sub_1A912E8D8(_OWORD *a1)
{
  uint64_t v2;

  sub_1A93F92DC();
  ArtworkRequest.hash(into:)();
  v2 = sub_1A93F9324();
  return sub_1A91306D4(a1, v2);
}

unint64_t sub_1A912E930(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A93F8A30();
  return sub_1A9130384(a1, v2, &qword_1ED2A95B0);
}

uint64_t sub_1A912E97C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_1A912EB78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_1A912EDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_1A912EF78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_1A912F134(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1A912F378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = ~v5;
    v10 = *(_QWORD *)(v3 + 48);
    do
    {
      v11 = (_QWORD *)(v10 + 16 * v6);
      v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          v13 = *v11 == a1 && v12 == a2;
          if (v13 || (sub_1A93F90C0() & 1) != 0)
            return v6;
        }
      }
      else if (!a2)
      {
        return v6;
      }
      v6 = (v6 + 1) & v9;
    }
    while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_1A912F440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CFString(0);
    v6 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_1A9066CA8((unint64_t *)&unk_1ED2ABC98, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1A94048C8);
    v7 = v6;
    v8 = sub_1A93F750C();

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = sub_1A93F750C();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_1A912F580(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1A912F77C(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  int v7;
  _BOOL4 v8;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + result);
      if (v7 == 2)
      {
        if (a1 == 2)
          return result;
      }
      else
      {
        v8 = (v7 & 1) == 0;
        if (a1 != 2 && ((a1 ^ v8) & 1) != 0)
          return result;
      }
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1A912F814(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    v6 = *(_QWORD *)&aStdq_1[8 * a1];
    while (*(_QWORD *)&aStdq_1[8 * *(char *)(*(_QWORD *)(v2 + 48) + v4)] != v6)
    {
      v7 = sub_1A93F90C0();
      swift_bridgeObjectRelease_n();
      if ((v7 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1A912F8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for FairPlayAsset();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_1A93F8A3C();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_1A93F8A3C();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1A912FA04(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  float v11;
  float v12;
  _BYTE v14[72];
  _BYTE v15[72];
  _BYTE v16[8];
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[8];
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[9];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      sub_1A91314A4(*(_QWORD *)(v2 + 48) + 72 * v4, (uint64_t)v22);
      v7 = v22[0];
      v8 = *a1;
      sub_1A91314A4((uint64_t)v22, (uint64_t)v19);
      sub_1A91314A4((uint64_t)a1, (uint64_t)v16);
      if (v7 != v8)
        break;
      if (v20 == v17 && v21 == v18)
      {
        sub_1A91314E0((uint64_t)v19);
        sub_1A91314E0((uint64_t)v16);
        sub_1A91314A4((uint64_t)v22, (uint64_t)v15);
        sub_1A91314A4((uint64_t)a1, (uint64_t)v14);
      }
      else
      {
        v10 = sub_1A93F90C0();
        sub_1A91314E0((uint64_t)v19);
        sub_1A91314E0((uint64_t)v16);
        sub_1A91314A4((uint64_t)v22, (uint64_t)v15);
        sub_1A91314A4((uint64_t)a1, (uint64_t)v14);
        if ((v10 & 1) == 0)
          goto LABEL_4;
      }
      v11 = flt_1A9406340[v15[24]];
      v12 = flt_1A9406340[v14[24]];
      sub_1A91314E0((uint64_t)v14);
      sub_1A91314E0((uint64_t)v15);
      sub_1A91314E0((uint64_t)v22);
      if (v11 == v12)
        return v4;
LABEL_5:
      v4 = (v4 + 1) & v6;
      if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
        return v4;
    }
    sub_1A91314E0((uint64_t)v19);
    sub_1A91314E0((uint64_t)v16);
    sub_1A91314A4((uint64_t)v22, (uint64_t)v15);
    sub_1A91314A4((uint64_t)a1, (uint64_t)v14);
LABEL_4:
    sub_1A91314E0((uint64_t)v14);
    sub_1A91314E0((uint64_t)v15);
    sub_1A91314E0((uint64_t)v22);
    goto LABEL_5;
  }
  return v4;
}

unint64_t sub_1A912FBD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1A93F8040();
    v8 = v7;
    if (v6 == sub_1A93F8040() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1A93F8040();
          v15 = v14;
          if (v13 == sub_1A93F8040() && v15 == v16)
            break;
          v18 = sub_1A93F90C0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_1A912FD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1A9130254(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_1A9066CA8(v21, v20, v22);
      v17 = sub_1A93F8004();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1A9130384(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1A9072534(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_1A93F8A3C();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_1A93F8A3C();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1A9130494(_OWORD *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  __int16 v18;
  char v19;
  __int128 v20;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int16 v35;
  char v36;
  _OWORD v37[4];
  _OWORD v38[2];

  v3 = a1[3];
  v37[2] = a1[2];
  v37[3] = v3;
  v38[0] = a1[4];
  *(_OWORD *)((char *)v38 + 11) = *(_OWORD *)((char *)a1 + 75);
  v4 = a1[1];
  v37[0] = *a1;
  v37[1] = v4;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  v6 = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      v8 = *(_QWORD *)(v2 + 48) + 96 * v6;
      v9 = *(_BYTE *)(v8 + 8);
      v10 = *(_BYTE *)(v8 + 9);
      v11 = *(_BYTE *)(v8 + 10);
      v12 = *(_BYTE *)(v8 + 11);
      v13 = *(_BYTE *)(v8 + 12);
      v14 = *(_BYTE *)(v8 + 13);
      v15 = *(_QWORD *)(v8 + 32);
      v16 = *(_BYTE *)(v8 + 40);
      v17 = *(_QWORD *)(v8 + 80);
      v18 = *(_WORD *)(v8 + 88);
      v19 = *(_BYTE *)(v8 + 90);
      v22 = *(_QWORD *)v8;
      v23 = v9;
      v24 = v10;
      v25 = v11;
      v26 = v12;
      v27 = v13;
      v28 = v14;
      v29 = *(_OWORD *)(v8 + 16);
      v30 = v15;
      v31 = v16;
      v20 = *(_OWORD *)(v8 + 64);
      v32 = *(_OWORD *)(v8 + 48);
      v33 = v20;
      v34 = v17;
      v36 = v19;
      v35 = v18;
      if (_s18PodcastsFoundation17EpisodeStateModelV2eeoiySbAC_ACtFZ_0((uint64_t)&v22, (uint64_t)v37))
        break;
      v6 = (v6 + 1) & v7;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_1A91305C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, uint64_t))
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;

  v9 = a3(0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - v11;
  v13 = -1 << *(_BYTE *)(v4 + 32);
  v14 = a2 & ~v13;
  if (((*(_QWORD *)(v4 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v10 + 72);
    do
    {
      sub_1A9064630(*(_QWORD *)(v4 + 48) + v16 * v14, (uint64_t)v12, a3);
      v17 = a4(v12, a1);
      sub_1A9064714((uint64_t)v12, a3);
      if ((v17 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
    }
    while (((*(_QWORD *)(v4 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_1A91306D4(_OWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  BOOL v7;
  _OWORD v9[16];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1A9131434(*(_QWORD *)(v2 + 48) + (v4 << 8), (uint64_t)v9);
      v7 = _s18PodcastsFoundation14ArtworkRequestV2eeoiySbAC_ACtFZ_0(v9, a1);
      sub_1A9131470((uint64_t)v9);
      if (v7)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1A913078C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  sub_1A906443C((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A91307CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  char v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t result;
  _BYTE v29[32];
  _OWORD v30[2];
  _OWORD v31[2];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v34 = a1;
  v35 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v36 = v8;
  v37 = 0;
  v38 = v11 & v9;
  v39 = a2;
  v40 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A92D0DDC(&v32);
  v12 = *((_QWORD *)&v32 + 1);
  if (!*((_QWORD *)&v32 + 1))
  {
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1A9120240();
    return swift_release();
  }
  while (1)
  {
    v14 = v32;
    sub_1A908A5DC(&v33, v31);
    v15 = *a5;
    v17 = sub_1A9067718(v14, v12, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A9067790);
    v18 = *(_QWORD *)(v15 + 16);
    v19 = (v16 & 1) == 0;
    if (__OFADD__(v18, v19))
      break;
    v20 = v16;
    if (*(_QWORD *)(v15 + 24) >= v18 + v19)
    {
      if ((a4 & 1) != 0)
      {
        if ((v16 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_1A9306F64();
        if ((v20 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_1A92FE0B8();
      v21 = sub_1A9067718(v14, v12, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A9067790);
      if ((v20 & 1) != (v22 & 1))
        goto LABEL_22;
      v17 = v21;
      if ((v20 & 1) != 0)
      {
LABEL_6:
        sub_1A906443C(*(_QWORD *)(*a5 + 56) + 32 * v17, (uint64_t)v29);
        sub_1A906443C((uint64_t)v29, (uint64_t)v30);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
        swift_bridgeObjectRelease();
        v13 = (_OWORD *)(*(_QWORD *)(*a5 + 56) + 32 * v17);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
        sub_1A908A5DC(v30, v13);
        goto LABEL_7;
      }
    }
    v23 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v17 >> 6) + 64) |= 1 << v17;
    v24 = (uint64_t *)(v23[6] + 16 * v17);
    *v24 = v14;
    v24[1] = v12;
    sub_1A908A5DC(v31, (_OWORD *)(v23[7] + 32 * v17));
    v25 = v23[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_21;
    v23[2] = v27;
LABEL_7:
    sub_1A92D0DDC(&v32);
    v12 = *((_QWORD *)&v32 + 1);
    a4 = 1;
    if (!*((_QWORD *)&v32 + 1))
      goto LABEL_19;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

double sub_1A9130A4C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1A9067718(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A9067790);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A9306F64();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1A908A5DC((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_1A91A95FC(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1A9130B4C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2ABBA0);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x1AF414014](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A9130BC0()
{
  unint64_t result;

  result = qword_1ED2AAF78;
  if (!qword_1ED2AAF78)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AnyCodable, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_1ED2AAF78);
  }
  return result;
}

uint64_t sub_1A9130C04@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1A912E498(a1);
  v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    v16 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A930842C();
      v10 = v16;
    }
    v11 = *(_QWORD *)(v10 + 56);
    v12 = sub_1A93F738C();
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 32))(a2, v11 + *(_QWORD *)(v13 + 72) * v6, v12);
    sub_1A91AA14C(v6, v10);
    *v3 = v10;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, v12);
  }
  else
  {
    v15 = sub_1A93F738C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
  }
}

uint64_t sub_1A9130D1C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v3 = sub_1A906C428(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A9308A00();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v5);
  sub_1A91AA550(v5, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

double sub_1A9130DB0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1A927D890(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A9306F64();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1A908A5DC((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_1A91A95FC(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1A9130EA0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1A912E3B4(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A930A658();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_1A93F6D80();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_1A91AB728(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A9130F84(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v3 = sub_1A906C428(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A930A87C();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v5);
  sub_1A91AA540(v5, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1A9131018(uint64_t a1, uint64_t a2)
{
  return sub_1A913102C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1A9091124, (void (*)(void))sub_1A930B594);
}

uint64_t sub_1A913102C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), void (*a4)(void))
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v7 = v4;
  swift_bridgeObjectRetain();
  v10 = sub_1A9067718(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A9067790);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v7;
  v16 = *v7;
  *v7 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a4();
    v13 = v16;
  }
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v10);
  a3(v10, v13);
  *v7 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1A9131118(uint64_t a1, uint64_t a2)
{
  return sub_1A913102C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1A9091124, (void (*)(void))sub_1A930B5A0);
}

uint64_t sub_1A913112C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1A9067718(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A9067790);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A930BC60();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1A90904CC(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A9131208(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  __int128 v24;
  _BYTE v25[40];
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9680);
  result = sub_1A93F8E74();
  v3 = (_QWORD *)result;
  v4 = 0;
  v26 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v22 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v23 = (unint64_t)(v6 + 63) >> 6;
  v9 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v10 | (v4 << 6); ; i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(v26 + 48) + 16 * i);
    v16 = *v15;
    v17 = v15[1];
    sub_1A9131514(*(_QWORD *)(v26 + 56) + 40 * i, (uint64_t)v25);
    swift_bridgeObjectRetain();
    AnyCodable.value.getter();
    sub_1A9131550((uint64_t)v25);
    *(_QWORD *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v18 = (_QWORD *)(v3[6] + 16 * i);
    *v18 = v16;
    v18[1] = v17;
    result = (uint64_t)sub_1A908A5DC(&v24, (_OWORD *)(v3[7] + 32 * i));
    v19 = v3[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v21;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v12 >= v23)
      return (uint64_t)v3;
    v13 = *(_QWORD *)(v22 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v23)
        return (uint64_t)v3;
      v13 = *(_QWORD *)(v22 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v23)
          return (uint64_t)v3;
        v13 = *(_QWORD *)(v22 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_18:
    v8 = (v13 - 1) & v13;
  }
  v14 = v12 + 3;
  if (v14 >= v23)
    return (uint64_t)v3;
  v13 = *(_QWORD *)(v22 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v23)
      return (uint64_t)v3;
    v13 = *(_QWORD *)(v22 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t dispatch thunk of RemoteSyncTypeWithUnknownSyncProperties.unknownSyncProperties.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static RemoteSyncTypeWithUnknownSyncProperties.unknownSyncKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A9131434(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ArtworkRequest(a2, a1);
  return a2;
}

uint64_t sub_1A9131470(uint64_t a1)
{
  destroy for ArtworkRequest(a1);
  return a1;
}

uint64_t sub_1A91314A4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TranscriptRequest(a2, a1);
  return a2;
}

uint64_t sub_1A91314E0(uint64_t a1)
{
  destroy for TranscriptRequest(a1);
  return a1;
}

uint64_t sub_1A9131514(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyCodable(a2, a1);
  return a2;
}

uint64_t sub_1A9131550(uint64_t a1)
{
  destroy for AnyCodable(a1);
  return a1;
}

uint64_t DatabasePropertyPublisher.objectsToObserve.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DatabasePropertyPublisher.entitiesToObserve.getter()
{
  return swift_bridgeObjectRetain();
}

id DatabasePropertyPublisher.notificationCenter.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t DatabasePropertyPublisher.init(objectsToObserve:entitiesToObserve:notificationCenter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB08);
  swift_allocObject();
  v8 = a3;
  v9 = sub_1A93F798C();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABD98);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9E8];
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC948);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = 0;
  *a4 = a1;
  a4[1] = a2;
  a4[2] = v8;
  a4[3] = v9;
  a4[4] = v10;
  a4[5] = result;
  return result;
}

uint64_t sub_1A9131660()
{
  _OWORD *v0;
  __int128 v1;
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void (*v32)(_QWORD *, _QWORD);
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void (*v60)(_QWORD *, _QWORD);
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  __int128 v74;
  uint64_t v75;
  void *v76;
  void *v77;
  id v78;
  id v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  void (*v88)(_QWORD *, _QWORD);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD v104[5];
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  _OWORD v108[4];

  v1 = v0[1];
  v108[0] = *v0;
  v108[1] = v1;
  v108[2] = v0[2];
  result = sub_1A93F6E70();
  if (!result)
    return result;
  v3 = result;
  v107 = MEMORY[0x1E0DEE9D8];
  v98 = sub_1A93F8040();
  sub_1A93F8C1C();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1A90A597C((uint64_t)v104), (v5 & 1) != 0))
  {
    sub_1A906443C(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v105);
  }
  else
  {
    v105 = 0u;
    v106 = 0u;
  }
  sub_1A90A5908((uint64_t)v104);
  if (*((_QWORD *)&v106 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9360);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v90 = v3;
      sub_1A9132880((uint64_t)v108);
      v6 = sub_1A913331C(v98, (uint64_t)v108);
      v89 = 0;
      sub_1A913447C((uint64_t)v108);
      v95 = v6 & 0xC000000000000001;
      if ((v6 & 0xC000000000000001) != 0)
      {
        v7 = sub_1A93F8BBC();
        if (v7)
        {
LABEL_10:
          v99 = MEMORY[0x1E0DEE9D8];
          sub_1A929E478(0, v7 & ~(v7 >> 63), 0);
          if (v95)
          {
            result = sub_1A93F8B80();
            v9 = 1;
          }
          else
          {
            result = sub_1A929B060(v6);
            v9 = v12 & 1;
          }
          *(_QWORD *)&v105 = result;
          *((_QWORD *)&v105 + 1) = v8;
          LOBYTE(v106) = v9;
          if (v7 < 0)
          {
            __break(1u);
            goto LABEL_99;
          }
          v92 = v6;
          do
          {
            while (1)
            {
              v18 = v105;
              v19 = v106;
              sub_1A929ADEC(v105, *((uint64_t *)&v105 + 1), v106, v6);
              v21 = v20;
              v22 = objc_msgSend(v20, sel_entity);
              v23 = objc_msgSend(v22, sel_name);

              if (v23)
              {
                v24 = sub_1A93F8040();
                v26 = v25;

              }
              else
              {
                v24 = 0;
                v26 = 0xE000000000000000;
              }
              v27 = objc_msgSend(v21, sel_objectID, v89);

              v28 = v99;
              result = swift_isUniquelyReferenced_nonNull_native();
              if ((result & 1) == 0)
              {
                result = sub_1A929E478(0, *(_QWORD *)(v99 + 16) + 1, 1);
                v28 = v99;
              }
              v30 = *(_QWORD *)(v28 + 16);
              v29 = *(_QWORD *)(v28 + 24);
              if (v30 >= v29 >> 1)
              {
                result = sub_1A929E478(v29 > 1, v30 + 1, 1);
                v28 = v99;
              }
              *(_QWORD *)(v28 + 16) = v30 + 1;
              v31 = v28 + 32 * v30;
              *(_BYTE *)(v31 + 32) = 0;
              *(_QWORD *)(v31 + 40) = v24;
              *(_QWORD *)(v31 + 48) = v26;
              *(_QWORD *)(v31 + 56) = v27;
              if (v95)
                break;
              v6 = v92;
              v13 = sub_1A93C16BC(v18, *((_QWORD *)&v18 + 1), v19, v92);
              v15 = v14;
              v17 = v16;
              sub_1A91344E0(v18, *((uint64_t *)&v18 + 1), v19);
              *(_QWORD *)&v105 = v13;
              *((_QWORD *)&v105 + 1) = v15;
              LOBYTE(v106) = v17 & 1;
              if (!--v7)
                goto LABEL_32;
            }
            v6 = v92;
            if ((v19 & 1) == 0)
              goto LABEL_101;
            if (sub_1A93F8B98())
              swift_isUniquelyReferenced_nonNull_native();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7E48);
            v32 = (void (*)(_QWORD *, _QWORD))sub_1A93F8640();
            sub_1A93F8BF8();
            v32(v104, 0);
            --v7;
          }
          while (v7);
LABEL_32:
          sub_1A91344E0(v105, *((uint64_t *)&v105 + 1), v106);
          swift_release();
          v11 = v99;
          goto LABEL_33;
        }
      }
      else
      {
        v7 = *(_QWORD *)(v6 + 16);
        if (v7)
          goto LABEL_10;
      }
      swift_release();
      v11 = MEMORY[0x1E0DEE9D8];
LABEL_33:
      sub_1A91359D4(v11);
      v10 = v89;
      v3 = v90;
      goto LABEL_34;
    }
  }
  else
  {
    sub_1A905FD54((uint64_t)&v105, qword_1ED2AC800);
  }
  v10 = 0;
LABEL_34:
  v100 = sub_1A93F8040();
  sub_1A93F8C1C();
  if (*(_QWORD *)(v3 + 16) && (v33 = sub_1A90A597C((uint64_t)v104), (v34 & 1) != 0))
  {
    sub_1A906443C(*(_QWORD *)(v3 + 56) + 32 * v33, (uint64_t)&v105);
  }
  else
  {
    v105 = 0u;
    v106 = 0u;
  }
  sub_1A90A5908((uint64_t)v104);
  if (!*((_QWORD *)&v106 + 1))
  {
    sub_1A905FD54((uint64_t)&v105, qword_1ED2AC800);
    goto LABEL_65;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9360);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_65:
    v102 = sub_1A93F8040();
    sub_1A93F8C1C();
    if (*(_QWORD *)(v3 + 16) && (v61 = sub_1A90A597C((uint64_t)v104), (v62 & 1) != 0))
    {
      sub_1A906443C(*(_QWORD *)(v3 + 56) + 32 * v61, (uint64_t)&v105);
    }
    else
    {
      v105 = 0u;
      v106 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1A90A5908((uint64_t)v104);
    if (*((_QWORD *)&v106 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9360);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1A9132880((uint64_t)v108);
        v63 = sub_1A913331C(v102, (uint64_t)v108);
        sub_1A913447C((uint64_t)v108);
        v97 = v63 & 0xC000000000000001;
        if ((v63 & 0xC000000000000001) != 0)
        {
          v64 = sub_1A93F8BBC();
          if (v64)
            goto LABEL_73;
        }
        else
        {
          v64 = *(_QWORD *)(v63 + 16);
          if (v64)
          {
LABEL_73:
            v103 = MEMORY[0x1E0DEE9D8];
            sub_1A929E478(0, v64 & ~(v64 >> 63), 0);
            if (v97)
            {
              result = sub_1A93F8B80();
              v66 = 1;
            }
            else
            {
              result = sub_1A929B060(v63);
              v66 = v68 & 1;
            }
            *(_QWORD *)&v105 = result;
            *((_QWORD *)&v105 + 1) = v65;
            LOBYTE(v106) = v66;
            if ((v64 & 0x8000000000000000) == 0)
            {
              v94 = v63;
              do
              {
                while (1)
                {
                  v74 = v105;
                  v75 = v106;
                  sub_1A929ADEC(v105, *((uint64_t *)&v105 + 1), v106, v63);
                  v77 = v76;
                  v78 = objc_msgSend(v76, sel_entity);
                  v79 = objc_msgSend(v78, sel_name);

                  if (v79)
                  {
                    v80 = sub_1A93F8040();
                    v82 = v81;

                  }
                  else
                  {
                    v80 = 0;
                    v82 = 0xE000000000000000;
                  }
                  v83 = objc_msgSend(v77, sel_objectID, v89);

                  v84 = v103;
                  result = swift_isUniquelyReferenced_nonNull_native();
                  if ((result & 1) == 0)
                  {
                    result = sub_1A929E478(0, *(_QWORD *)(v103 + 16) + 1, 1);
                    v84 = v103;
                  }
                  v86 = *(_QWORD *)(v84 + 16);
                  v85 = *(_QWORD *)(v84 + 24);
                  if (v86 >= v85 >> 1)
                  {
                    result = sub_1A929E478(v85 > 1, v86 + 1, 1);
                    v84 = v103;
                  }
                  *(_QWORD *)(v84 + 16) = v86 + 1;
                  v87 = v84 + 32 * v86;
                  *(_BYTE *)(v87 + 32) = 2;
                  *(_QWORD *)(v87 + 40) = v80;
                  *(_QWORD *)(v87 + 48) = v82;
                  *(_QWORD *)(v87 + 56) = v83;
                  if (v97)
                    break;
                  v63 = v94;
                  v69 = sub_1A93C16BC(v74, *((_QWORD *)&v74 + 1), v75, v94);
                  v71 = v70;
                  v73 = v72;
                  sub_1A91344E0(v74, *((uint64_t *)&v74 + 1), v75);
                  *(_QWORD *)&v105 = v69;
                  *((_QWORD *)&v105 + 1) = v71;
                  LOBYTE(v106) = v73 & 1;
                  if (!--v64)
                    goto LABEL_94;
                }
                v63 = v94;
                if ((v75 & 1) == 0)
                  goto LABEL_103;
                if (sub_1A93F8B98())
                  swift_isUniquelyReferenced_nonNull_native();
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7E48);
                v88 = (void (*)(_QWORD *, _QWORD))sub_1A93F8640();
                sub_1A93F8BF8();
                v88(v104, 0);
                --v64;
              }
              while (v64);
LABEL_94:
              sub_1A91344E0(v105, *((uint64_t *)&v105 + 1), v106);
              swift_release();
              v67 = v103;
              goto LABEL_95;
            }
            goto LABEL_100;
          }
        }
        swift_release();
        v67 = MEMORY[0x1E0DEE9D8];
LABEL_95:
        sub_1A91359D4(v67);
      }
    }
    else
    {
      sub_1A905FD54((uint64_t)&v105, qword_1ED2AC800);
    }
    v104[0] = v107;
    sub_1A93F7974();
    return swift_bridgeObjectRelease();
  }
  v91 = v3;
  sub_1A9132880((uint64_t)v108);
  v35 = sub_1A913331C(v100, (uint64_t)v108);
  v89 = v10;
  sub_1A913447C((uint64_t)v108);
  v96 = v35 & 0xC000000000000001;
  if ((v35 & 0xC000000000000001) != 0)
  {
    v36 = sub_1A93F8BBC();
    if (v36)
      goto LABEL_42;
LABEL_46:
    swift_release();
    v39 = MEMORY[0x1E0DEE9D8];
LABEL_64:
    sub_1A91359D4(v39);
    v3 = v91;
    goto LABEL_65;
  }
  v36 = *(_QWORD *)(v35 + 16);
  if (!v36)
    goto LABEL_46;
LABEL_42:
  v101 = MEMORY[0x1E0DEE9D8];
  sub_1A929E478(0, v36 & ~(v36 >> 63), 0);
  if (v96)
  {
    result = sub_1A93F8B80();
    v38 = 1;
  }
  else
  {
    result = sub_1A929B060(v35);
    v38 = v40 & 1;
  }
  *(_QWORD *)&v105 = result;
  *((_QWORD *)&v105 + 1) = v37;
  LOBYTE(v106) = v38;
  if ((v36 & 0x8000000000000000) == 0)
  {
    v93 = v35;
    do
    {
      while (1)
      {
        v46 = v105;
        v47 = v106;
        sub_1A929ADEC(v105, *((uint64_t *)&v105 + 1), v106, v35);
        v49 = v48;
        v50 = objc_msgSend(v48, sel_entity);
        v51 = objc_msgSend(v50, sel_name);

        if (v51)
        {
          v52 = sub_1A93F8040();
          v54 = v53;

        }
        else
        {
          v52 = 0;
          v54 = 0xE000000000000000;
        }
        v55 = objc_msgSend(v49, sel_objectID, v89);

        v56 = v101;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = sub_1A929E478(0, *(_QWORD *)(v101 + 16) + 1, 1);
          v56 = v101;
        }
        v58 = *(_QWORD *)(v56 + 16);
        v57 = *(_QWORD *)(v56 + 24);
        if (v58 >= v57 >> 1)
        {
          result = sub_1A929E478(v57 > 1, v58 + 1, 1);
          v56 = v101;
        }
        *(_QWORD *)(v56 + 16) = v58 + 1;
        v59 = v56 + 32 * v58;
        *(_BYTE *)(v59 + 32) = 1;
        *(_QWORD *)(v59 + 40) = v52;
        *(_QWORD *)(v59 + 48) = v54;
        *(_QWORD *)(v59 + 56) = v55;
        if (v96)
          break;
        v35 = v93;
        v41 = sub_1A93C16BC(v46, *((_QWORD *)&v46 + 1), v47, v93);
        v43 = v42;
        v45 = v44;
        sub_1A91344E0(v46, *((uint64_t *)&v46 + 1), v47);
        *(_QWORD *)&v105 = v41;
        *((_QWORD *)&v105 + 1) = v43;
        LOBYTE(v106) = v45 & 1;
        if (!--v36)
          goto LABEL_63;
      }
      v35 = v93;
      if ((v47 & 1) == 0)
        goto LABEL_102;
      if (sub_1A93F8B98())
        swift_isUniquelyReferenced_nonNull_native();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7E48);
      v60 = (void (*)(_QWORD *, _QWORD))sub_1A93F8640();
      sub_1A93F8BF8();
      v60(v104, 0);
      --v36;
    }
    while (v36);
LABEL_63:
    sub_1A91344E0(v105, *((uint64_t *)&v105 + 1), v106);
    swift_release();
    v39 = v101;
    goto LABEL_64;
  }
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
  return result;
}

PodcastsFoundation::DatabaseEntityChange __swiftcall DatabaseEntityChange.init(type:entityName:entityID:)(PodcastsFoundation::DatabaseEntityChangeType type, Swift::String entityName, NSManagedObjectID entityID)
{
  uint64_t v3;
  PodcastsFoundation::DatabaseEntityChange result;

  *(_BYTE *)v3 = *(_BYTE *)type;
  *(Swift::String *)(v3 + 8) = entityName;
  *(NSManagedObjectID *)(v3 + 24) = entityID;
  result.entityName = entityName;
  result.entityID = entityID;
  result.type = type;
  return result;
}

uint64_t DatabasePropertyPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  os_unfair_lock_s *v18;
  _QWORD *v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  unint64_t v23;
  char *v24;
  __int128 v25;
  char *v26;
  __int128 v27;
  char *v28;
  uint64_t v29;
  uint64_t *v30;
  os_unfair_lock_s *v31;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;

  v41 = a2;
  v42 = a3;
  v40 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB8E8);
  v5 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  v39 = v5;
  MEMORY[0x1E0C80A78](v4);
  v37 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F73E0();
  v8 = *(_QWORD **)(v7 - 8);
  v9 = v8[8];
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v33 - v15;
  v17 = v3[2];
  v45 = v3[1];
  v46 = v17;
  v44 = *v3;
  v18 = (os_unfair_lock_s *)v17;
  sub_1A93F73D4();
  os_unfair_lock_lock(v18 + 6);
  sub_1A913273C((uint64_t)&v18[4], (uint64_t)v13);
  v36 = 0;
  os_unfair_lock_unlock(v18 + 6);
  v19 = v8;
  v35 = v8;
  v20 = (void (*)(char *, char *, uint64_t))v8[4];
  v20(v16, v13, v7);
  v43 = *((_QWORD *)&v45 + 1);
  v21 = (void (*)(char *, char *, uint64_t))v8[2];
  v22 = v16;
  v34 = v16;
  v21(v10, v16, v7);
  v23 = (*((unsigned __int8 *)v19 + 80) + 64) & ~(unint64_t)*((unsigned __int8 *)v19 + 80);
  v24 = (char *)swift_allocObject();
  v25 = v45;
  *((_OWORD *)v24 + 1) = v44;
  *((_OWORD *)v24 + 2) = v25;
  *((_OWORD *)v24 + 3) = v46;
  v20(&v24[v23], v10, v7);
  v21(v10, v22, v7);
  v26 = (char *)swift_allocObject();
  v27 = v45;
  *((_OWORD *)v26 + 1) = v44;
  *((_OWORD *)v26 + 2) = v27;
  *((_OWORD *)v26 + 3) = v46;
  v20(&v26[v23], v10, v7);
  sub_1A9132880((uint64_t)&v44);
  sub_1A9132880((uint64_t)&v44);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB08);
  sub_1A91328E8();
  v28 = v37;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  swift_release();
  v29 = v38;
  sub_1A93F7764();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v29);
  v30 = (uint64_t *)(*((_QWORD *)&v46 + 1) + 16);
  v31 = (os_unfair_lock_s *)(*((_QWORD *)&v46 + 1) + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(*((_QWORD *)&v46 + 1) + 24));
  sub_1A913255C(v30, (uint64_t)&v44);
  os_unfair_lock_unlock(v31);
  return ((uint64_t (*)(char *, uint64_t))v35[1])(v34, v7);
}

void sub_1A913245C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  os_unfair_lock_s *v9;
  os_unfair_lock_s *v10;

  v5 = *(os_unfair_lock_s **)(a2 + 32);
  v6 = (uint64_t)&v5[4];
  v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_1A9132934(v6, a3);
  os_unfair_lock_unlock(v7);
  v8 = *(os_unfair_lock_s **)(a2 + 40);
  v9 = v8 + 4;
  v10 = v8 + 6;
  os_unfair_lock_lock(v8 + 6);
  sub_1A91326C4(v9, a2);
  os_unfair_lock_unlock(v10);
}

void sub_1A91324DC(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  os_unfair_lock_s *v9;

  v4 = *(os_unfair_lock_s **)(a1 + 32);
  v5 = (uint64_t)&v4[4];
  v6 = v4 + 6;
  os_unfair_lock_lock(v4 + 6);
  sub_1A9132934(v5, a2);
  os_unfair_lock_unlock(v6);
  v7 = *(os_unfair_lock_s **)(a1 + 40);
  v8 = v7 + 4;
  v9 = v7 + 6;
  os_unfair_lock_lock(v7 + 6);
  sub_1A91326C4(v8, a1);
  os_unfair_lock_unlock(v9);
}

void sub_1A913255C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v5 = sub_1A93F8988();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1)
  {
    v9 = *(_QWORD *)(a2 + 32);
    v10 = (os_unfair_lock_s *)(v9 + 24);
    os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
    v11 = *(_QWORD *)(v9 + 16);
    swift_bridgeObjectRetain();
    if (v2)
    {
      os_unfair_lock_unlock(v10);
      __break(1u);
    }
    else
    {
      os_unfair_lock_unlock(v10);
      v12 = *(_QWORD *)(v11 + 16);
      swift_bridgeObjectRelease();
      if (v12)
      {
        sub_1A93F8994();
        v13 = (_OWORD *)swift_allocObject();
        v14 = *(_OWORD *)(a2 + 16);
        v13[1] = *(_OWORD *)a2;
        v13[2] = v14;
        v13[3] = *(_OWORD *)(a2 + 32);
        sub_1A9132880(a2);
        sub_1A9066CA8((unint64_t *)&qword_1ED2A41D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
        v15 = sub_1A93F7D04();
        swift_release();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        *a1 = v15;
      }
    }
  }
}

void sub_1A91326C4(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = (os_unfair_lock_s *)(v4 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
  v6 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRetain();
  if (v2)
  {
    os_unfair_lock_unlock(v5);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v5);
    v7 = *(_QWORD *)(v6 + 16);
    swift_bridgeObjectRelease();
    if (!v7)
    {
      if (*a1)
        sub_1A93F7938();
    }
  }
}

uint64_t sub_1A913273C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  v3 = sub_1A93F73E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v6, a2, v3, v8);
  sub_1A93279C4((uint64_t)v10, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

void sub_1A913280C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F73E0() - 8) + 80);
  sub_1A913245C(a1, v1 + 16, v1 + ((v3 + 64) & ~v3));
}

void sub_1A9132850()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F73E0() - 8) + 80);
  sub_1A91324DC(v0 + 16, v0 + ((v1 + 64) & ~v1));
}

uint64_t sub_1A9132880(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

unint64_t sub_1A91328E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2ABB00;
  if (!qword_1ED2ABB00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2ABB08);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0C95F48], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2ABB00);
  }
  return result;
}

uint64_t sub_1A9132934(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C80);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A926EB68(a2, (uint64_t)v5);
  return sub_1A905FD54((uint64_t)v5, &qword_1ED2A5C80);
}

BOOL static DatabaseEntityChangeType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DatabaseEntityChangeType.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t DatabaseEntityChangeType.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

BOOL sub_1A9132A4C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void DatabaseEntityChange.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t DatabaseEntityChange.entityName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

id DatabaseEntityChange.entityID.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t NSManagedObjectContext.observeChanges<A>(to:entities:)@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t result;

  v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entity);
  v3 = objc_msgSend(v2, sel_name);

  if (v3)
  {
    v4 = sub_1A93F8040();
    v6 = v5;

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405520;
    *(_QWORD *)(inited + 32) = v4;
    *(_QWORD *)(inited + 40) = v6;
    v8 = sub_1A91335F8(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB08);
    swift_allocObject();
    v10 = v9;
    v3 = (id)sub_1A93F798C();

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABD98);
    v11 = swift_allocObject();
    *(_DWORD *)(v11 + 24) = 0;
    *(_QWORD *)(v11 + 16) = MEMORY[0x1E0DEE9E8];
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC948);
    result = swift_allocObject();
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 16) = 0;
    *a1 = 0;
    a1[1] = v8;
    a1[2] = v10;
  }
  else
  {
    v11 = 0;
    result = 0;
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
  a1[3] = v3;
  a1[4] = v11;
  a1[5] = result;
  return result;
}

uint64_t sub_1A9132C44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_1A93F747C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9640);
    v10 = sub_1A93F8C4C();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1A9066CA8(&qword_1ED2A5C90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
      v14 = sub_1A93F7FA4();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1A9066CA8(&qword_1ED2A5C98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
          v20 = sub_1A93F8004();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1A9132EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  sub_1A9132880(a2);
  isStackAllocationSafe = sub_1A9132880(a2);
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    sub_1A9132880(a2);
    sub_1A9133080((_QWORD *)((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    v11 = v10;
    sub_1A913447C(a2);
    swift_release();
    if (v2)
      swift_willThrow();
    sub_1A913447C(a2);
    sub_1A913447C(a2);
  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    sub_1A9132880(a2);
    sub_1A9133080((unint64_t *)v12, v7, a1, a2);
    v11 = v13;
    sub_1A913447C(a2);
    swift_release();
    MEMORY[0x1AF41411C](v12, -1, -1);
    sub_1A913447C(a2);
    sub_1A913447C(a2);
  }
  return v11;
}

void sub_1A9133080(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char v26;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  char v34[8];
  uint64_t v35;

  v28 = a2;
  v30 = 0;
  v5 = 0;
  v8 = *(_QWORD *)(a3 + 56);
  v6 = a3 + 56;
  v7 = v8;
  v9 = 1 << *(_BYTE *)(v6 - 24);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v7;
  v31 = v6;
  v32 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v13 = v12 | (v5 << 6);
      goto LABEL_21;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v14 >= v32)
      goto LABEL_30;
    v15 = *(_QWORD *)(v31 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v32)
        goto LABEL_30;
      v15 = *(_QWORD *)(v31 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v32)
          goto LABEL_30;
        v15 = *(_QWORD *)(v31 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v11 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_21:
    v17 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v13);
    v18 = objc_msgSend(v17, sel_entity, v28);
    v19 = objc_msgSend(v18, sel_name);

    if (v19
      && (v20 = *(_QWORD *)(a4 + 8),
          v21 = sub_1A93F8040(),
          v23 = v22,
          v19,
          LOBYTE(v21) = sub_1A92EFAA4(v21, v23, v20),
          swift_bridgeObjectRelease(),
          (v21 & 1) == 0))
    {

    }
    else
    {
      sub_1A9134528(a4, (uint64_t)v34);
      sub_1A9134528((uint64_t)v34, (uint64_t)&v35);
      v24 = v35;
      if (v35)
      {
        v25 = objc_msgSend(v17, sel_objectID);
        v26 = sub_1A90A3300(v25, v24);

        if ((v26 & 1) != 0)
          goto LABEL_27;
      }
      else
      {

LABEL_27:
        *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        if (__OFADD__(v30++, 1))
        {
          __break(1u);
LABEL_30:
          swift_retain();
          sub_1A91F18E4(a1, v28, v30, a3);
          return;
        }
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v32)
    goto LABEL_30;
  v15 = *(_QWORD *)(v31 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v32)
      goto LABEL_30;
    v15 = *(_QWORD *)(v31 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_1A913331C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char v30[8];
  uint64_t v31;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = MEMORY[0x1E0DEE9E8];
    v29 = MEMORY[0x1E0DEE9E8];
    sub_1A9132880(a2);
    sub_1A93F8B8C();
    if (sub_1A93F8BE0())
    {
      sub_1A91344EC();
      do
      {
        swift_dynamicCast();
        v5 = objc_msgSend(v28, sel_entity);
        v6 = objc_msgSend(v5, sel_name);

        if (v6)
        {
          v7 = *(_QWORD *)(a2 + 8);
          v8 = sub_1A93F8040();
          v10 = v9;

          v11 = sub_1A92EFAA4(v8, v10, v7);
          swift_bridgeObjectRelease();
          if ((v11 & 1) == 0)
            goto LABEL_4;
        }
        sub_1A9134528(a2, (uint64_t)v30);
        sub_1A9134528((uint64_t)v30, (uint64_t)&v31);
        v12 = v31;
        if (v31
          && (v13 = objc_msgSend(v28, sel_objectID),
              v14 = sub_1A90A3300(v13, v12),
              v13,
              (v14 & 1) == 0))
        {
LABEL_4:

        }
        else
        {
          v15 = v29;
          v16 = *(_QWORD *)(v29 + 16);
          if (*(_QWORD *)(v29 + 24) <= v16)
          {
            sub_1A91C4B7C(v16 + 1);
            v15 = v29;
          }
          result = sub_1A93F8A30();
          v18 = v15 + 56;
          v19 = -1 << *(_BYTE *)(v15 + 32);
          v20 = result & ~v19;
          v21 = v20 >> 6;
          if (((-1 << v20) & ~*(_QWORD *)(v15 + 56 + 8 * (v20 >> 6))) != 0)
          {
            v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v15 + 56 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v23 = 0;
            v24 = (unint64_t)(63 - v19) >> 6;
            do
            {
              if (++v21 == v24 && (v23 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              v25 = v21 == v24;
              if (v21 == v24)
                v21 = 0;
              v23 |= v25;
              v26 = *(_QWORD *)(v18 + 8 * v21);
            }
            while (v26 == -1);
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          }
          *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
          *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * v22) = v28;
          ++*(_QWORD *)(v15 + 16);
        }
      }
      while (sub_1A93F8BE0());
      v3 = v29;
    }
    swift_release();
    sub_1A913447C(a2);
  }
  else
  {
    v27 = sub_1A9132EAC(a1, a2);
    if (!v2)
      return v27;
  }
  return v3;
}

uint64_t sub_1A91335F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4328);
    v3 = sub_1A93F8C4C();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_1A93F92DC();
      swift_bridgeObjectRetain();
      sub_1A93F7FBC();
      result = sub_1A93F9324();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_1A93F90C0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_1A93F90C0();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

unint64_t sub_1A913379C()
{
  unint64_t result;

  result = qword_1EEAB7E38;
  if (!qword_1EEAB7E38)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for DatabaseEntityChangeType, &type metadata for DatabaseEntityChangeType);
    atomic_store(result, (unint64_t *)&qword_1EEAB7E38);
  }
  return result;
}

uint64_t destroy for DatabasePropertyPublisher(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for DatabasePropertyPublisher(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v5 = (void *)a2[2];
  v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for DatabasePropertyPublisher(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DatabasePropertyPublisher(uint64_t a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();

  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabasePropertyPublisher(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabasePropertyPublisher(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabasePropertyPublisher()
{
  return &type metadata for DatabasePropertyPublisher;
}

uint64_t getEnumTagSinglePayload for DatabaseEntityChangeType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseEntityChangeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A9133B50 + 4 * byte_1A9406355[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A9133B84 + 4 * byte_1A9406350[v4]))();
}

uint64_t sub_1A9133B84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9133B8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9133B94);
  return result;
}

uint64_t sub_1A9133BA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9133BA8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A9133BAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9133BB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DatabaseEntityChangeType()
{
  return &type metadata for DatabaseEntityChangeType;
}

void destroy for DatabaseEntityChange(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for DatabaseEntityChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for DatabaseEntityChange(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for DatabaseEntityChange(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseEntityChange(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseEntityChange(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseEntityChange()
{
  return &type metadata for DatabaseEntityChange;
}

uint64_t sub_1A9133D84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A4330);
    v3 = sub_1A93F8C4C();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_1A93F8040();
      sub_1A93F92DC();
      v7 = v6;
      sub_1A93F7FBC();
      v8 = sub_1A93F9324();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_1A93F8040();
        v17 = v16;
        if (v15 == sub_1A93F8040() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_1A93F90C0();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_1A93F8040();
          v24 = v23;
          if (v22 == sub_1A93F8040() && v24 == v25)
            goto LABEL_3;
          v27 = sub_1A93F90C0();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1A9133FB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_1A93F93FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD198);
    v10 = sub_1A93F8C4C();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1A9066CA8(&qword_1ED2AD1B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB27F0], MEMORY[0x1E0CB2800]);
      v14 = sub_1A93F7FA4();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v5, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1A9066CA8(&qword_1ED2AD1B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB27F0], MEMORY[0x1E0CB2808]);
          v20 = sub_1A93F8004();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v5, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1A9134218(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7E40);
  v3 = sub_1A93F8C4C();
  v4 = 0;
  v5 = v3 + 56;
  v6 = a1 + 32;
  do
  {
    v7 = (uint64_t *)(v6 + 16 * v4);
    v8 = *v7;
    v9 = *((_BYTE *)v7 + 8);
    sub_1A93F92DC();
    sub_1A93F92E8();
    v10 = sub_1A93F9324();
    v11 = -1 << *(_BYTE *)(v3 + 32);
    v12 = v10 & ~v11;
    v13 = v12 >> 6;
    v14 = *(_QWORD *)(v5 + 8 * (v12 >> 6));
    v15 = 1 << v12;
    v16 = *(_QWORD *)(v3 + 48);
    if (((1 << v12) & v14) != 0)
    {
      v17 = ~v11;
      while (1)
      {
        v18 = v16 + 16 * v12;
        if (*(_BYTE *)(v18 + 8) == 1)
          __asm { BR              X17 }
        if ((v9 & 1) == 0)
          break;
        v12 = (v12 + 1) & v17;
        v13 = v12 >> 6;
        v14 = *(_QWORD *)(v5 + 8 * (v12 >> 6));
        v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0)
          goto LABEL_10;
      }
    }
    else
    {
LABEL_10:
      *(_QWORD *)(v5 + 8 * v13) = v15 | v14;
      v19 = v16 + 16 * v12;
      *(_QWORD *)v19 = v8;
      *(_BYTE *)(v19 + 8) = v9;
      v20 = *(_QWORD *)(v3 + 16);
      v21 = __OFADD__(v20, 1);
      v22 = v20 + 1;
      if (v21)
      {
        __break(1u);
        JUMPOUT(0x1A91343E4);
      }
      *(_QWORD *)(v3 + 16) = v22;
    }
    ++v4;
  }
  while (v4 != v1);
  return v3;
}

uint64_t sub_1A91343F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9134444()
{
  return sub_1A9131660();
}

uint64_t sub_1A913447C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 16);
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A91344E0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1A91344EC()
{
  unint64_t result;

  result = qword_1ED2AC7B0;
  if (!qword_1ED2AC7B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2AC7B0);
  }
  return result;
}

uint64_t sub_1A9134528(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AA438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t PodcastsStateChangeOrigin.init(rawValue:)(unint64_t a1)
{
  return sub_1A9134770(a1);
}

void *static PodcastsStateChangeOrigin.allCases.getter()
{
  return &unk_1E54D67E0;
}

uint64_t sub_1A913459C()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A91345E0()
{
  return sub_1A93F92E8();
}

uint64_t sub_1A9134608()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

unint64_t sub_1A9134648@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1A9134770(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1A9134678(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E54D6828;
}

uint64_t PodcastsStateChangeOrigin.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0xD000000000000011;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x6B72616D6B6F6F62;
      break;
    case 2:
      result = 0xD000000000000014;
      break;
    case 3:
      result = 0x536D6F7246746F6ELL;
      break;
    case 4:
      result = 0x6E776F6E6B6E75;
      break;
    default:
      result = sub_1A93F921C();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1A9134768()
{
  uint64_t *v0;

  return PodcastsStateChangeOrigin.description.getter(*v0);
}

unint64_t sub_1A9134770(unint64_t result)
{
  if (result > 4)
    return 0;
  return result;
}

unint64_t sub_1A9134784()
{
  unint64_t result;

  result = qword_1EEAB7E50;
  if (!qword_1EEAB7E50)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastsStateChangeOrigin, &type metadata for PodcastsStateChangeOrigin);
    atomic_store(result, (unint64_t *)&qword_1EEAB7E50);
  }
  return result;
}

unint64_t sub_1A91347CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEAB7E58;
  if (!qword_1EEAB7E58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEAB7E60);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEAB7E58);
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsStateChangeOrigin()
{
  return &type metadata for PodcastsStateChangeOrigin;
}

void static MTPodcast.recalculateAvailabilityDates(in:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  _QWORD *v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[6];

  v6 = objc_msgSend((id)objc_opt_self(), sel_predicateForEpisodesWithUnsatisfiedAvailabilityDate);
  sub_1A909E53C();
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_msgSend(v7, sel_setPredicate_, v6);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = v7;
  v8[4] = a2;
  v8[5] = a3;
  v12[4] = sub_1A9134B84;
  v12[5] = v8;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1A908A91C;
  v12[3] = &block_descriptor_1;
  v9 = _Block_copy(v12);
  v10 = a1;
  v11 = v7;
  sub_1A90858C0(a2);
  swift_release();
  objc_msgSend(v10, sel_performBlock_, v9);
  _Block_release(v9);

}

id sub_1A9134970(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v5;
  unint64_t v6;
  id result;
  uint64_t v8;
  uint64_t i;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  id v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9430);
  v5 = sub_1A93F89DC();
  v6 = sub_1A9261418(v5);
  result = (id)swift_bridgeObjectRelease();
  if (!v6)
    goto LABEL_17;
  v18 = a1;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1A93F8E5C();
    result = (id)swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_4;
  }
  else
  {
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_4:
      if (v8 < 1)
      {
        __break(1u);
        return result;
      }
      for (i = 0; i != v8; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0)
          v11 = (id)MEMORY[0x1AF4129DC](i, v6);
        else
          v11 = *(id *)(v6 + 8 * i + 32);
        v12 = v11;
        objc_msgSend(v11, sel_resolveAvailabilityDate, v18);
        v13 = objc_msgSend(v12, sel_podcast);
        if (v13)
        {
          v14 = v13;
          objc_msgSend(v13, sel_latestEpisodeAvailabilityTime);
          v16 = v15;
          objc_msgSend(v12, sel_firstTimeAvailable);
          if (v16 >= v17)
          {
            v10 = v14;
          }
          else
          {
            objc_msgSend(v12, sel_firstTimeAvailable);
            objc_msgSend(v14, sel_setLatestEpisodeAvailabilityTime_);
            v10 = v12;
            v12 = v14;
          }

        }
      }
    }
  }
  swift_bridgeObjectRelease();
  result = objc_msgSend(v18, sel_saveInCurrentBlock);
LABEL_17:
  if (a3)
    return (id)a3();
  return result;
}

uint64_t sub_1A9134B48()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

id sub_1A9134B84()
{
  uint64_t v0;

  return sub_1A9134970(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32));
}

uint64_t PodcastsBagFeatureFlags.Key.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t PodcastsBagFeatureFlags.Key.rawValue.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_1A9134C00()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t sub_1A9134C54()
{
  return sub_1A93F7FBC();
}

uint64_t sub_1A9134C70()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t sub_1A9134CC0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A9134D10(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x80000001A9441690;
}

uint64_t sub_1A9134D30()
{
  unint64_t v0;
  uint64_t result;

  v0 = sub_1A9112D60(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BB8);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = v0;
  qword_1ED2A5550 = result;
  return result;
}

uint64_t static PodcastsBagFeatureFlags.isEnabled(_:)()
{
  uint64_t *v0;
  os_unfair_lock_s *v1;
  unsigned __int8 v3;

  if (qword_1ED2A5560 != -1)
    swift_once();
  v0 = (uint64_t *)(qword_1ED2A5550 + 16);
  v1 = (os_unfair_lock_s *)(qword_1ED2A5550 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1ED2A5550 + 24));
  sub_1A9134E04(v0, (char *)&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_1A9134E04@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  char v6;
  char v7;
  id v8;
  void *v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;

  v4 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (result = sub_1A9094640(0xD000000000000017, 0x80000001A9441690), (v6 & 1) != 0))
  {
    v7 = *(_BYTE *)(*(_QWORD *)(v4 + 56) + result);
  }
  else
  {
    sub_1A93F8C70();
    swift_bridgeObjectRelease();
    sub_1A9135288(0xD000000000000017, 0x80000001A9441690, 0xD000000000000027, 0x80000001A9443C30);
    v8 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults, 0, 0xE000000000000000);
    v9 = (void *)sub_1A93F8010();
    v7 = objc_msgSend(v8, sel_BOOLForKey_, v9);

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *a1;
    *a1 = 0x8000000000000000;
    sub_1A930D534(v7, 0xD000000000000017, 0x80000001A9441690, isUniquelyReferenced_nonNull_native);
    *a1 = v11;
    result = swift_bridgeObjectRelease();
  }
  *a2 = v7;
  return result;
}

unint64_t sub_1A9134F7C()
{
  unint64_t result;

  result = qword_1EEAB7E68;
  if (!qword_1EEAB7E68)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastsBagFeatureFlags.Key, &type metadata for PodcastsBagFeatureFlags.Key);
    atomic_store(result, (unint64_t *)&qword_1EEAB7E68);
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsBagFeatureFlags()
{
  return &type metadata for PodcastsBagFeatureFlags;
}

uint64_t storeEnumTagSinglePayload for PodcastsBagFeatureFlags.Key(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A9135010 + 4 * asc_1A9406620[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A9135030 + 4 * byte_1A9406625[v4]))();
}

_BYTE *sub_1A9135010(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A9135030(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9135038(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9135040(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9135048(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9135050(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PodcastsBagFeatureFlags.Key()
{
  return &type metadata for PodcastsBagFeatureFlags.Key;
}

void sub_1A913506C(void *a1, int a2, id a3)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;

  if (a1)
  {
    if (!a3)
    {
      v4 = (void *)objc_opt_self();
      v5 = a1;
      v6 = objc_msgSend(v4, sel__applePodcastsFoundationSharedUserDefaults);
      v7 = v5;
      v12 = (id)sub_1A93F8010();
      objc_msgSend(v6, sel_setObject_forKey_, v7, v12);

      return;
    }
  }
  else if (!a3)
  {
    return;
  }
  v8 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
  type metadata accessor for AMSError(0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1A91353E0();
    v9 = sub_1A93F7110();
    if (v9 == 204 || v9 == 202)
    {
      v10 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
      v11 = (void *)sub_1A93F8010();
      objc_msgSend(v10, sel_removeObjectForKey_, v11);

    }
    else
    {

    }
  }
}

void sub_1A913520C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  void (*v7)(void *, uint64_t, void *);
  id v8;
  id v9;

  v7 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  swift_retain();
  v9 = a2;
  v8 = a4;
  v7(a2, a3, a4);
  swift_release();

}

void sub_1A9135288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[6];

  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v7 = (void *)sub_1A93F8010();
  v8 = objc_msgSend(v6, sel_BOOLForKey_, v7);

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  v11[4] = sub_1A91353D8;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A913520C;
  v11[3] = &block_descriptor_2;
  v10 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v8, sel_valueWithCompletion_, v10);
  _Block_release(v10);

}

uint64_t sub_1A91353B4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A91353D8(void *a1, int a2, id a3)
{
  sub_1A913506C(a1, a2, a3);
}

unint64_t sub_1A91353E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2A5A98;
  if (!qword_1ED2A5A98)
  {
    type metadata accessor for AMSError(255);
    result = MEMORY[0x1AF414014](&unk_1A9405320, v1);
    atomic_store(result, (unint64_t *)&qword_1ED2A5A98);
  }
  return result;
}

uint64_t DirectTimelineAlignment.isInProgress.getter()
{
  return 0;
}

Swift::Double_optional __swiftcall DirectTimelineAlignment.playerTimestamp(for:)(Swift::Double a1)
{
  char v1;
  Swift::Double_optional result;

  v1 = LOBYTE(a1);
  result.value = a1;
  result.is_nil = v1;
  return result;
}

uint64_t DirectTimelineAlignment.nonMatchingRangesInPlayer(with:)()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A9135458()
{
  return MEMORY[0x1E0DEE9D8];
}

ValueMetadata *type metadata accessor for DirectTimelineAlignment()
{
  return &type metadata for DirectTimelineAlignment;
}

uint64_t sub_1A9135480(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1A91178E4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[4 * v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[4 * v8] && (unint64_t)v10 < a1 + 32 + 32 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 32 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A91355C8(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  unint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_1A9117A04(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_1A9310ECC((uint64_t)v41, (uint64_t)&v4[3 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v15 = v4[2];
    v16 = __OFADD__(v15, result);
    v17 = v15 + result;
    if (v16)
    {
      __break(1u);
      goto LABEL_46;
    }
    v4[2] = v17;
  }
  if (result != v12)
  {
LABEL_13:
    result = sub_1A9120240();
    *(_QWORD *)v1 = v4;
    return result;
  }
LABEL_16:
  v2 = v4[2];
  v13 = v42;
  v39 = v41[1];
  v40 = v41[0];
  v14 = v43;
  if (v44)
  {
    v18 = (v44 - 1) & v44;
    v19 = v43;
    v20 = __clz(__rbit64(v44)) | (v43 << 6);
    v38 = (unint64_t)(v42 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_46:
  v35 = v14 + 1;
  if (__OFADD__(v14, 1))
    goto LABEL_65;
  v38 = (unint64_t)(v13 + 64) >> 6;
  if (v35 >= v38)
    goto LABEL_13;
  v36 = *(_QWORD *)(v39 + 8 * v35);
  v19 = v14 + 1;
  if (!v36)
  {
    v19 = v14 + 2;
    if (v14 + 2 >= v38)
      goto LABEL_13;
    v36 = *(_QWORD *)(v39 + 8 * v19);
    if (!v36)
    {
      v19 = v14 + 3;
      if (v14 + 3 >= v38)
        goto LABEL_13;
      v36 = *(_QWORD *)(v39 + 8 * v19);
      if (!v36)
      {
        v19 = v14 + 4;
        if (v14 + 4 >= v38)
          goto LABEL_13;
        v36 = *(_QWORD *)(v39 + 8 * v19);
        if (!v36)
        {
          v19 = v14 + 5;
          if (v14 + 5 >= v38)
            goto LABEL_13;
          v36 = *(_QWORD *)(v39 + 8 * v19);
          if (!v36)
          {
            v37 = v14 + 6;
            do
            {
              if (v38 == v37)
                goto LABEL_13;
              v36 = *(_QWORD *)(v39 + 8 * v37++);
            }
            while (!v36);
            v19 = v37 - 1;
          }
        }
      }
    }
  }
  v18 = (v36 - 1) & v36;
  v20 = __clz(__rbit64(v36)) + (v19 << 6);
LABEL_18:
  v21 = *(_QWORD *)(v40 + 48) + 24 * v20;
  v22 = *(_QWORD *)v21;
  v23 = *(_QWORD *)(v21 + 8);
  v24 = *(_BYTE *)(v21 + 16);
  result = sub_1A9086E60(*(_QWORD *)v21, v23, v24);
  while (1)
  {
    v25 = v4[3];
    v26 = v25 >> 1;
    if ((uint64_t)(v25 >> 1) < v2 + 1)
      break;
    if (v2 < v26)
      goto LABEL_25;
LABEL_19:
    v4[2] = v2;
  }
  result = (uint64_t)sub_1A9117A04((_QWORD *)(v25 > 1), v2 + 1, 1, v4);
  v4 = (_QWORD *)result;
  v26 = *(_QWORD *)(result + 24) >> 1;
  if (v2 >= v26)
    goto LABEL_19;
  while (1)
  {
LABEL_25:
    v30 = (uint64_t)&v4[3 * v2 + 4];
    *(_QWORD *)v30 = v22;
    *(_QWORD *)(v30 + 8) = v23;
    *(_BYTE *)(v30 + 16) = v24 & 1;
    ++v2;
    if (v18)
    {
      v27 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v28 = v27 | (v19 << 6);
      goto LABEL_24;
    }
    v31 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v31 >= v38)
      goto LABEL_44;
    v32 = *(_QWORD *)(v39 + 8 * v31);
    v33 = v19 + 1;
    if (!v32)
    {
      v33 = v19 + 2;
      if (v19 + 2 >= v38)
        goto LABEL_44;
      v32 = *(_QWORD *)(v39 + 8 * v33);
      if (!v32)
      {
        v33 = v19 + 3;
        if (v19 + 3 >= v38)
          goto LABEL_44;
        v32 = *(_QWORD *)(v39 + 8 * v33);
        if (!v32)
        {
          v33 = v19 + 4;
          if (v19 + 4 >= v38)
            goto LABEL_44;
          v32 = *(_QWORD *)(v39 + 8 * v33);
          if (!v32)
          {
            v33 = v19 + 5;
            if (v19 + 5 >= v38)
              goto LABEL_44;
            v32 = *(_QWORD *)(v39 + 8 * v33);
            if (!v32)
            {
              v34 = v19 + 6;
              while (v38 != v34)
              {
                v32 = *(_QWORD *)(v39 + 8 * v34++);
                if (v32)
                {
                  v33 = v34 - 1;
                  goto LABEL_41;
                }
              }
LABEL_44:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_41:
    v18 = (v32 - 1) & v32;
    v28 = __clz(__rbit64(v32)) + (v33 << 6);
    v19 = v33;
LABEL_24:
    v29 = *(_QWORD *)(v40 + 48) + 24 * v28;
    v22 = *(_QWORD *)v29;
    v23 = *(_QWORD *)(v29 + 8);
    v24 = *(_BYTE *)(v29 + 16);
    result = sub_1A9086E60(*(_QWORD *)v29, v23, v24);
    if (v2 >= v26)
      goto LABEL_19;
  }
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_1A91359D4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1A9117C4C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A9135B28(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1A9117D58(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[4 * v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[4 * v8] && (unint64_t)v10 < a1 + 32 + 32 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 32 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A9135C70(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x1AF4129E8](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1A930C7E8(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1A93F8328();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9135E28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1A91180B0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A9135F78(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64x2_t v65;
  int16x8_t v66;
  int64_t v67;
  int64_t v68;
  int64_t v69;
  unint64_t v70;
  int64_t v71;
  uint64_t v72;
  _QWORD *v73;
  int64_t v74;
  uint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  unint64_t v78;
  int64_t v79;
  uint64_t v80;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  int64_t v88;
  uint64_t v89;
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int64_t v108;
  int64_t v109;
  uint64_t v110;
  int64_t v111;
  _QWORD v112[3];
  int64_t v113;
  unint64_t v114;

  v2 = *(_QWORD *)(result + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v8 = v3[3] >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v9 = v4 + v2;
    else
      v9 = v4;
    v3 = sub_1A911855C(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    v8 = v3[3] >> 1;
  }
  v10 = v3[2];
  v11 = v8 - v10;
  result = (uint64_t)sub_1A93110D8(v112, (uint64_t)&v3[12 * v10 + 4], v8 - v10, v6);
  if (result < v2)
    goto LABEL_15;
  if (result)
  {
    v14 = v3[2];
    v15 = __OFADD__(v14, result);
    v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_71;
    }
    v3[2] = v16;
  }
  if (result != v11)
    goto LABEL_13;
LABEL_16:
  v13 = v3[2];
  v94 = v112[0];
  v89 = v112[1];
  v12 = v113;
  v86 = v112[2];
  if (!v114)
  {
LABEL_71:
    v69 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      return result;
    }
    v67 = (unint64_t)(v86 + 64) >> 6;
    if (v69 >= v67)
      goto LABEL_13;
    v111 = v13;
    v78 = *(_QWORD *)(v89 + 8 * v69);
    if (!v78)
    {
      v79 = v12 + 2;
      if (v12 + 2 >= v67)
        goto LABEL_13;
      v78 = *(_QWORD *)(v89 + 8 * v79);
      if (v78)
      {
LABEL_80:
        v69 = v79;
      }
      else
      {
        if (v12 + 3 >= v67)
          goto LABEL_13;
        v78 = *(_QWORD *)(v89 + 8 * (v12 + 3));
        if (!v78)
          goto LABEL_86;
        v69 = v12 + 3;
      }
    }
LABEL_74:
    v17 = (v78 - 1) & v78;
    v18 = __clz(__rbit64(v78)) + (v69 << 6);
    v108 = v69;
    goto LABEL_18;
  }
  v108 = v113;
  v111 = v3[2];
  v17 = (v114 - 1) & v114;
  v18 = __clz(__rbit64(v114)) | (v113 << 6);
LABEL_18:
  v19 = *(_QWORD *)(v94 + 48) + 96 * v18;
  v98 = *(_QWORD *)v19;
  v83 = *(unsigned __int8 *)(v19 + 8);
  v81 = *(unsigned __int8 *)(v19 + 9);
  v82 = *(unsigned __int8 *)(v19 + 10);
  v87 = *(unsigned __int8 *)(v19 + 11);
  v90 = *(unsigned __int8 *)(v19 + 12);
  v91 = *(unsigned __int8 *)(v19 + 13);
  v20 = *(_QWORD *)(v19 + 24);
  v21 = *(_QWORD *)(v19 + 32);
  v22 = *(_BYTE *)(v19 + 40);
  v23 = *(_QWORD *)(v19 + 48);
  v103 = *(_QWORD *)(v19 + 56);
  v105 = *(_QWORD *)(v19 + 16);
  v25 = *(_QWORD *)(v19 + 64);
  v24 = *(_QWORD *)(v19 + 72);
  v101 = *(_QWORD *)(v19 + 80);
  v26 = *(unsigned __int16 *)(v19 + 88) | (*(unsigned __int8 *)(v19 + 90) << 16);
  swift_bridgeObjectRetain();
  v92 = v25;
  v84 = v24;
  sub_1A909F54C(v23, v103, v25, v24, v101);
  v27 = v98;
  if (!v98)
    goto LABEL_13;
  v28 = 256;
  if (!v81)
    v28 = 0;
  v29 = v28 | v83;
  v30 = 0x10000;
  if (!v82)
    v30 = 0;
  v31 = 0x1000000;
  if (!v87)
    v31 = 0;
  v32 = v29 | v30 | v31;
  v33 = 0x100000000;
  if (!v90)
    v33 = 0;
  v34 = 0x10000000000;
  if (!v91)
    v34 = 0;
  v35 = v32 | v33 | v34;
  v36 = v84;
  v88 = (unint64_t)(v86 + 64) >> 6;
  v12 = v108;
  v37 = v111;
  v39 = v103;
  v38 = v105;
  v40 = v92;
  v41 = v101;
  while (1)
  {
    v42 = v3[3];
    v95 = v42 >> 1;
    if ((uint64_t)(v42 >> 1) < v37 + 1)
    {
      v97 = v23;
      v100 = v27;
      v93 = v40;
      v107 = v38;
      v110 = v12;
      v73 = v3;
      v74 = v37;
      v85 = v36;
      v75 = v41;
      v76 = v35;
      v77 = sub_1A911855C((_QWORD *)(v42 > 1), v37 + 1, 1, v73);
      v35 = v76;
      v41 = v75;
      v36 = v85;
      v40 = v93;
      v38 = v107;
      v12 = v110;
      v37 = v74;
      v3 = v77;
      v23 = v97;
      v27 = v100;
      v95 = v77[3] >> 1;
    }
    if (v37 < v95)
      break;
LABEL_30:
    v3[2] = v37;
    if (!v27)
      goto LABEL_13;
  }
  while (1)
  {
    v64 = (uint64_t)&v3[12 * v37 + 4];
    *(_QWORD *)v64 = v27;
    v65 = (uint64x2_t)vdupq_n_s64(v35);
    *(_BYTE *)(v64 + 8) = v35 & 1;
    v66 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v65, (uint64x2_t)xmmword_1A9406780), (int32x4_t)vshlq_u64(v65, (uint64x2_t)xmmword_1A9406770));
    *(int8x8_t *)v66.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v66), (int8x8_t)0x1000100010001);
    *(_DWORD *)(v64 + 9) = vmovn_s16(v66).u32[0];
    *(_BYTE *)(v64 + 13) = BYTE5(v35) & 1;
    *(_QWORD *)(v64 + 16) = v38;
    *(_QWORD *)(v64 + 24) = v20;
    *(_QWORD *)(v64 + 32) = v21;
    *(_BYTE *)(v64 + 40) = v22 & 1;
    *(_QWORD *)(v64 + 48) = v23;
    *(_QWORD *)(v64 + 56) = v39;
    *(_QWORD *)(v64 + 64) = v40;
    *(_QWORD *)(v64 + 72) = v36;
    *(_QWORD *)(v64 + 80) = v41;
    v67 = HIWORD(v26);
    *(_BYTE *)(v64 + 90) = BYTE2(v26);
    *(_WORD *)(v64 + 88) = v26;
    v68 = v37 + 1;
    v111 = v68;
    if (!v17)
      break;
    v104 = (v17 - 1) & v17;
    v109 = v12;
    v43 = __clz(__rbit64(v17)) | (v12 << 6);
LABEL_36:
    v44 = *(_QWORD *)(v94 + 48) + 96 * v43;
    v45 = *(_QWORD *)v44;
    v46 = *(unsigned __int8 *)(v44 + 8);
    v47 = *(unsigned __int8 *)(v44 + 9);
    v48 = *(unsigned __int8 *)(v44 + 10);
    v49 = *(unsigned __int8 *)(v44 + 11);
    v50 = *(unsigned __int8 *)(v44 + 12);
    v51 = *(unsigned __int8 *)(v44 + 13);
    v106 = *(_QWORD *)(v44 + 16);
    v102 = *(_QWORD *)(v44 + 24);
    v99 = *(_QWORD *)(v44 + 32);
    v96 = *(_BYTE *)(v44 + 40);
    v23 = *(_QWORD *)(v44 + 48);
    v39 = *(_QWORD *)(v44 + 56);
    v53 = *(_QWORD *)(v44 + 64);
    v52 = *(_QWORD *)(v44 + 72);
    v54 = *(_QWORD *)(v44 + 80);
    v26 = *(unsigned __int16 *)(v44 + 88) | (*(unsigned __int8 *)(v44 + 90) << 16);
    v55 = 256;
    if (!v47)
      v55 = 0;
    v56 = v55 | v46;
    v57 = 0x10000;
    if (!v48)
      v57 = 0;
    v58 = 0x1000000;
    if (!v49)
      v58 = 0;
    v59 = v56 | v57 | v58;
    v60 = 0x100000000;
    if (!v50)
      v60 = 0;
    v61 = 0x10000000000;
    if (!v51)
      v61 = 0;
    v62 = v59 | v60 | v61;
    swift_bridgeObjectRetain();
    sub_1A909F54C(v23, v39, v53, v52, v54);
    v35 = v62;
    v41 = v54;
    v36 = v52;
    v40 = v53;
    v27 = v45;
    v38 = v106;
    v12 = v109;
    v22 = v96;
    v21 = v99;
    v20 = v102;
    v17 = v104;
    v37 = v111;
    if (v27)
      v63 = v111 < v95;
    else
      v63 = 0;
    if (!v63)
      goto LABEL_30;
  }
  v69 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v69 >= v88)
      goto LABEL_76;
    v70 = *(_QWORD *)(v89 + 8 * v69);
    if (v70)
      goto LABEL_61;
    v71 = v12 + 2;
    if (v12 + 2 >= v88)
      goto LABEL_76;
    v70 = *(_QWORD *)(v89 + 8 * v71);
    if (!v70)
    {
      if (v12 + 3 >= v88)
        goto LABEL_76;
      v70 = *(_QWORD *)(v89 + 8 * (v12 + 3));
      if (v70)
      {
        v69 = v12 + 3;
        goto LABEL_61;
      }
      v71 = v12 + 4;
      if (v12 + 4 >= v88)
        goto LABEL_76;
      v70 = *(_QWORD *)(v89 + 8 * v71);
      if (!v70)
      {
        v69 = v12 + 5;
        if (v12 + 5 >= v88)
          goto LABEL_76;
        v70 = *(_QWORD *)(v89 + 8 * v69);
        if (!v70)
        {
          v72 = v12 + 6;
          while (v88 != v72)
          {
            v70 = *(_QWORD *)(v89 + 8 * v72++);
            if (v70)
            {
              v69 = v72 - 1;
              goto LABEL_61;
            }
          }
LABEL_76:
          v3[2] = v68;
          goto LABEL_13;
        }
        goto LABEL_61;
      }
    }
    v69 = v71;
LABEL_61:
    v104 = (v70 - 1) & v70;
    v43 = __clz(__rbit64(v70)) + (v69 << 6);
    v109 = v69;
    goto LABEL_36;
  }
  __break(1u);
LABEL_86:
  v79 = v69 + 3;
  if (v69 + 3 < v67)
  {
    v78 = *(_QWORD *)(v89 + 8 * v79);
    if (v78)
      goto LABEL_80;
    v69 += 4;
    if (v69 >= v67)
      goto LABEL_13;
    v78 = *(_QWORD *)(v89 + 8 * v69);
    if (!v78)
    {
      v80 = v12 + 6;
      while (v67 != v80)
      {
        v78 = *(_QWORD *)(v89 + 8 * v80++);
        if (v78)
        {
          v69 = v80 - 1;
          goto LABEL_74;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_74;
  }
LABEL_13:
  result = sub_1A9120240();
  *(_QWORD *)v1 = v3;
  return result;
}

uint64_t sub_1A9136690(unint64_t a1)
{
  return sub_1A91367F8(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1A930C9F0);
}

uint64_t sub_1A913669C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1A907ECFC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A91367EC(unint64_t a1)
{
  return sub_1A91367F8(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1A930CBF4);
}

uint64_t sub_1A91367F8(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x1AF4129E8](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1A93F8328();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A91369B4(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x1AF4129E8](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1A930CE08(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1A93F8328();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9136B6C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1A9119310(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[v9 + 4];
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A9136CD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1A9117A04(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A9136E30(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1A91196A0(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + 8 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 8 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A9136F78(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_1A91182E8(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = sub_1A93F6EAC();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

double EpisodeTimelineAlignment.Alignment.playerTimeRange.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double EpisodeTimelineAlignment.Alignment.referenceTimeRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t EpisodeTimelineAlignment.Alignment.hasMatchedBeginning.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t EpisodeTimelineAlignment.Alignment.hasMatchedEnd.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t EpisodeTimelineAlignment.Alignment.init(playerTimeRange:referenceTimeRange:hasMatchedBeginning:hasMatchedEnd:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(double *)(a3 + 16) = a6;
  *(double *)(a3 + 24) = a7;
  *(_BYTE *)(a3 + 32) = result;
  *(_BYTE *)(a3 + 33) = a2;
  return result;
}

uint64_t EpisodeTimelineAlignment.alignments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EpisodeTimelineAlignment.initialPlayhead.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

PodcastsFoundation::EpisodeTimelineAlignment __swiftcall EpisodeTimelineAlignment.init(alignments:initialPlayhead:)(Swift::OpaquePointer alignments, Swift::Double_optional initialPlayhead)
{
  char v2;
  uint64_t v3;
  PodcastsFoundation::EpisodeTimelineAlignment result;

  *(Swift::OpaquePointer *)v3 = alignments;
  *(_QWORD *)(v3 + 8) = *(_QWORD *)&initialPlayhead.is_nil;
  *(_BYTE *)(v3 + 16) = v2 & 1;
  *(_BYTE *)(v3 + 17) = 0;
  result.initialPlayhead.value = initialPlayhead.value;
  result.initialPlayhead.is_nil = initialPlayhead.is_nil;
  result.alignments = alignments;
  return result;
}

uint64_t EpisodeTimelineAlignment.isInProgress.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

Swift::Double_optional __swiftcall EpisodeTimelineAlignment.referenceTimestamp(for:)(Swift::Double a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double *v4;
  char v5;
  double v6;
  double v8;
  char v9;
  Swift::Double_optional result;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v2)
  {
    v3 = 0.0;
    v4 = (double *)(*(_QWORD *)v1 + 48);
    v5 = 1;
    do
    {
      v6 = *(v4 - 2);
      if (v6 + -0.5 <= a1 && *(v4 - 1) + 0.5 >= a1)
      {
        v8 = v6 - *v4;
        if ((v5 & 1) != 0 || fabs(v8) < COERCE_DOUBLE(*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFLL))
        {
          v5 = 0;
          v3 = v8;
        }
        else
        {
          v5 = 0;
        }
      }
      v4 += 5;
      --v2;
    }
    while (v2);
    a1 = a1 - v3;
    if ((v5 & 1) != 0)
      v9 = LOBYTE(v3);
    else
      v9 = LOBYTE(a1);
  }
  else
  {
    v9 = 0;
  }
  result.value = a1;
  result.is_nil = v9;
  return result;
}

Swift::Double_optional __swiftcall EpisodeTimelineAlignment.playerTimestamp(for:)(Swift::Double a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double *v4;
  char v5;
  double v6;
  double v8;
  char v9;
  Swift::Double_optional result;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v2)
  {
    v3 = 0.0;
    v4 = (double *)(*(_QWORD *)v1 + 56);
    v5 = 1;
    do
    {
      v6 = *(v4 - 1);
      if (v6 + -0.5 <= a1 && *v4 + 0.5 >= a1)
      {
        v8 = v6 - *(v4 - 3);
        if ((v5 & 1) != 0 || fabs(v8) < COERCE_DOUBLE(*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFLL))
        {
          v5 = 0;
          v3 = v8;
        }
        else
        {
          v5 = 0;
        }
      }
      v4 += 5;
      --v2;
    }
    while (v2);
    a1 = a1 - v3;
    if ((v5 & 1) != 0)
      v9 = LOBYTE(v3);
    else
      v9 = LOBYTE(a1);
  }
  else
  {
    v9 = 0;
  }
  result.value = a1;
  result.is_nil = v9;
  return result;
}

_QWORD *EpisodeTimelineAlignment.nonMatchingRangesInReference(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v6;
  unint64_t v7;
  _QWORD *result;
  _QWORD *v10;
  uint64_t v11;
  uint64_t KeyPath;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;

  v6 = *(_QWORD **)v2;
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  result = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (*((_BYTE *)v6 + 64) != 1 || *((double *)v6 + 6) <= 0.0)
      goto LABEL_7;
    v10 = (_QWORD *)sub_1A93F9450();
    KeyPath = v11;
    if ((sub_1A93F9420() & 1) != 0)
      goto LABEL_18;
    v13 = sub_1A9117D58(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v4 = v13[2];
    v14 = v13[3];
    v3 = v4 + 1;
    if (v4 >= v14 >> 1)
      goto LABEL_19;
    while (1)
    {
      v13[2] = v3;
      v15 = &v13[4 * v4];
      v15[4] = 0;
      v15[5] = 0;
      v15[6] = v10;
      v15[7] = KeyPath;
      v24 = v13;
LABEL_7:
      v23 = v6;
      swift_bridgeObjectRetain_n();
      sub_1A9137A1C((uint64_t *)&v23);
      swift_bridgeObjectRelease();
      v16 = (uint64_t)v23;
      KeyPath = swift_getKeyPath();
      v3 = sub_1A91374E0(KeyPath, v16);
      swift_release();
      swift_release();
      v10 = &v24;
      sub_1A9135B28(v3);
      v14 = v6[2];
      if (v7 <= v14)
        break;
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      v13 = sub_1A9117D58((_QWORD *)(v14 > 1), v3, 1, v13);
    }
    if (BYTE1(v6[5 * v7 + 3]) != 1)
      return v24;
    sub_1A93F9450();
    if ((sub_1A93F9420() & 1) == 0)
      return v24;
    v17 = sub_1A93F9450();
    v19 = v18;
    if ((sub_1A93F9420() & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v6 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
LABEL_12:
        v21 = v6[2];
        v20 = v6[3];
        if (v21 >= v20 >> 1)
          v6 = sub_1A9117D58((_QWORD *)(v20 > 1), v21 + 1, 1, v6);
        v6[2] = v21 + 1;
        v22 = &v6[4 * v21];
        v22[4] = v17;
        v22[5] = v19;
        v22[6] = a1;
        v22[7] = a2;
        return v6;
      }
    }
    v6 = sub_1A9117D58(0, v6[2] + 1, 1, v6);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1A91374E0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[8];

  v2 = *(_QWORD *)(a2 + 16);
  v3 = 2 * v2 - 1;
  v7[0] = a2;
  v7[1] = a2 + 32;
  if (v2 <= 1)
    v3 = 1;
  v7[2] = 0;
  v7[3] = v3;
  v7[4] = a2;
  v7[5] = a2 + 32;
  v7[6] = v2 != 0;
  v7[7] = (2 * v2) | 1;
  swift_bridgeObjectRetain_n();
  v4 = sub_1A9138864((uint64_t)v7, (uint64_t (*)(_QWORD *, _QWORD *))sub_1A913871C);
  v5 = sub_1A9138724(v4, (uint64_t (*)(_OWORD *, _OWORD *))sub_1A9138AC0);
  swift_bridgeObjectRelease();
  return v5;
}

_QWORD *EpisodeTimelineAlignment.nonMatchingRangesInPlayer(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  _QWORD *result;
  double v10;
  char v11;
  double v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  unint64_t v35;
  int64_t v36;
  _QWORD *v37;

  v6 = *(_QWORD *)v2;
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  result = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v10 = *(double *)(v2 + 8);
    v11 = *(_BYTE *)(v2 + 16);
    v37 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v12 = *(double *)(v6 + 32);
    if (v12 <= 0.0)
      goto LABEL_14;
    if (*(_BYTE *)(v6 + 64) == 1)
    {
      v13 = (_QWORD *)sub_1A93F9450();
      v15 = v14;
      if ((sub_1A93F9420() & 1) != 0)
        goto LABEL_25;
      v16 = sub_1A9117D58(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v4 = v16[2];
      v17 = v16[3];
      v3 = v4 + 1;
      if (v4 >= v17 >> 1)
        goto LABEL_26;
      while (1)
      {
        v16[2] = v3;
        v18 = &v16[4 * v4];
        v18[4] = 0;
        v18[5] = 0;
        v18[6] = v13;
        v18[7] = v15;
LABEL_13:
        v37 = v16;
LABEL_14:
        KeyPath = swift_getKeyPath();
        v15 = (_QWORD *)sub_1A91374E0(KeyPath, v6);
        swift_release();
        v13 = &v37;
        sub_1A9135B28((uint64_t)v15);
        v17 = *(_QWORD *)(v6 + 16);
        if (v7 <= v17)
          break;
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        v16 = sub_1A9117D58((_QWORD *)(v17 > 1), v3, 1, v16);
      }
      if (*(_BYTE *)(v6 + 32 + 40 * v7 - 7) != 1)
        return v37;
      sub_1A93F9450();
      if ((sub_1A93F9420() & 1) == 0)
        return v37;
      v28 = sub_1A93F9450();
      v30 = v29;
      if ((sub_1A93F9420() & 1) != 0)
      {
        __break(1u);
      }
      else
      {
        v15 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
LABEL_19:
          v32 = v15[2];
          v31 = v15[3];
          if (v32 >= v31 >> 1)
            v15 = sub_1A9117D58((_QWORD *)(v31 > 1), v32 + 1, 1, v15);
          v15[2] = v32 + 1;
          v33 = &v15[4 * v32];
          v33[4] = v28;
          v33[5] = v30;
          v33[6] = a1;
          v33[7] = a2;
          return v15;
        }
      }
      v15 = sub_1A9117D58(0, v15[2] + 1, 1, v15);
      goto LABEL_19;
    }
    if (v10 > v12)
      v11 = 1;
    if ((v11 & 1) != 0)
      goto LABEL_14;
    v19 = sub_1A93F9450();
    v21 = v20;
    v3 = sub_1A93F9450();
    v4 = v22;
    if ((sub_1A93F9420() & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v16 = sub_1A9117D58(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v23 = v16[2];
      v25 = v16[3];
      v24 = v23 + 1;
      if (v23 < v25 >> 1)
      {
LABEL_12:
        v16[2] = v24;
        v26 = &v16[4 * v23];
        v26[4] = v19;
        v26[5] = v21;
        v26[6] = v3;
        v26[7] = v4;
        goto LABEL_13;
      }
    }
    v35 = v23;
    v36 = v24;
    v34 = sub_1A9117D58((_QWORD *)(v25 > 1), v24, 1, v16);
    v23 = v35;
    v24 = v36;
    v16 = v34;
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1A9137850()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

double sub_1A9137858(Swift::Double a1)
{
  double result;

  *(_QWORD *)&result = (unint64_t)EpisodeTimelineAlignment.referenceTimestamp(for:)(a1);
  return result;
}

double sub_1A9137870(Swift::Double a1)
{
  double result;

  *(_QWORD *)&result = (unint64_t)EpisodeTimelineAlignment.playerTimestamp(for:)(a1);
  return result;
}

BOOL sub_1A9137890()
{
  double v1;
  double v2;

  swift_getAtKeyPath();
  swift_getAtKeyPath();
  return v2 < v1;
}

uint64_t sub_1A913793C()
{
  uint64_t v0;
  uint64_t result;

  swift_getAtKeyPath();
  v0 = sub_1A93F9450();
  swift_getAtKeyPath();
  sub_1A93F9450();
  result = sub_1A93F9420();
  if ((result & 1) == 0)
    return v0;
  __break(1u);
  return result;
}

uint64_t sub_1A9137A1C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A9234344(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A9137A84(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A9137A84(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  double v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  double *__dst;

  v3 = a1[1];
  result = sub_1A93F9054();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v93 = *a1;
      v94 = -1;
      v95 = 1;
      v96 = *a1;
      do
      {
        v97 = v94;
        v98 = v96;
        do
        {
          v99 = *(double *)(v98 + 56);
          if (v99 >= *(double *)(v98 + 16))
            break;
          if (!v93)
            goto LABEL_141;
          v100 = v98 + 40;
          v101 = *(_QWORD *)(v98 + 64);
          v102 = *(_BYTE *)(v98 + 72);
          v103 = *(_BYTE *)(v98 + 73);
          v104 = *(_OWORD *)(v98 + 40);
          v105 = *(_OWORD *)(v98 + 16);
          *(_OWORD *)(v98 + 40) = *(_OWORD *)v98;
          *(_OWORD *)(v98 + 56) = v105;
          v106 = *(_QWORD *)(v98 + 32);
          *(_OWORD *)v98 = v104;
          *(double *)(v98 + 16) = v99;
          *(_QWORD *)(v98 + 24) = v101;
          *(_BYTE *)(v98 + 32) = v102;
          *(_BYTE *)(v98 + 33) = v103;
          v98 -= 40;
          *(_QWORD *)(v100 + 32) = v106;
        }
        while (!__CFADD__(v97++, 1));
        ++v95;
        v96 += 40;
        --v94;
      }
      while (v95 != v3);
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v117 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (double *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v108 = v12;
      v120 = v9;
      if (v13 >= 2)
      {
        v109 = *v117;
        do
        {
          v110 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v109)
            goto LABEL_145;
          v111 = v108;
          v112 = *(_QWORD *)&v108[16 * v110 + 32];
          v113 = *(_QWORD *)&v108[16 * v13 + 24];
          sub_1A91381D0((double *)(v109 + 40 * v112), (double *)(v109 + 40 * *(_QWORD *)&v108[16 * v13 + 16]), v109 + 40 * v113, __dst);
          if (v1)
            break;
          if (v113 < v112)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v111 = sub_1A9234330((uint64_t)v111);
          if (v110 >= *((_QWORD *)v111 + 2))
            goto LABEL_134;
          v114 = &v111[16 * v110 + 32];
          *(_QWORD *)v114 = v112;
          *((_QWORD *)v114 + 1) = v113;
          v115 = *((_QWORD *)v111 + 2);
          if (v13 > v115)
            goto LABEL_135;
          memmove(&v111[16 * v13 + 16], &v111[16 * v13 + 32], 16 * (v115 - v13));
          v108 = v111;
          *((_QWORD *)v111 + 2) = v115 - 1;
          v13 = v115 - 1;
        }
        while (v115 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v120 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v120 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_1A93F837C();
    *(_QWORD *)(v8 + 16) = v7;
    v120 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v118 = *a1 + 56;
  v119 = *a1 + 16;
  v116 = *a1 - 40;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v121 = v6;
  v122 = v3;
  v123 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v119 + 40 * v10);
      v16 = *(double *)(v119 + 40 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v118 + 40 * v14);
        while (v15 < v16 != v17[5] >= *v17)
        {
          ++v10;
          v17 += 5;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v18 = 40 * v10;
          v19 = 40 * v14;
          v20 = v10;
          v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11)
                goto LABEL_144;
              v22 = v11 + v19;
              v23 = *(_BYTE *)(v11 + v19 + 32);
              v24 = v11 + v18;
              v25 = *(_BYTE *)(v11 + v19 + 33);
              v26 = *(_OWORD *)(v11 + v19);
              v27 = *(_OWORD *)(v11 + v19 + 16);
              v28 = *(_QWORD *)(v11 + v18 - 8);
              v29 = *(_OWORD *)(v11 + v18 - 24);
              *(_OWORD *)v22 = *(_OWORD *)(v11 + v18 - 40);
              *(_OWORD *)(v22 + 16) = v29;
              *(_QWORD *)(v22 + 32) = v28;
              *(_OWORD *)(v24 - 40) = v26;
              *(_OWORD *)(v24 - 24) = v27;
              *(_BYTE *)(v24 - 8) = v23;
              *(_BYTE *)(v24 - 7) = v25;
            }
            ++v21;
            v18 -= 40;
            v19 += 40;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v30 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v30 >= v3)
      v30 = v3;
    if (v30 < v14)
      break;
    if (v10 != v30)
    {
      v31 = v116 + 40 * v10;
      do
      {
        v32 = v14;
        v33 = v31;
        do
        {
          v34 = *(double *)(v33 + 56);
          if (v34 >= *(double *)(v33 + 16))
            break;
          if (!v11)
            goto LABEL_142;
          v35 = v33 + 40;
          v36 = *(_QWORD *)(v33 + 64);
          v37 = *(_BYTE *)(v33 + 72);
          v38 = *(_BYTE *)(v33 + 73);
          v39 = *(_OWORD *)(v33 + 40);
          v40 = *(_OWORD *)(v33 + 16);
          *(_OWORD *)(v33 + 40) = *(_OWORD *)v33;
          *(_OWORD *)(v33 + 56) = v40;
          v41 = *(_QWORD *)(v33 + 32);
          *(_OWORD *)v33 = v39;
          *(double *)(v33 + 16) = v34;
          *(_QWORD *)(v33 + 24) = v36;
          *(_BYTE *)(v33 + 32) = v37;
          *(_BYTE *)(v33 + 33) = v38;
          v33 -= 40;
          ++v32;
          *(_QWORD *)(v35 + 32) = v41;
        }
        while (v10 != v32);
        ++v10;
        v31 += 40;
      }
      while (v10 != v30);
      v10 = v30;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A9233E0C(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v43 = *((_QWORD *)v12 + 2);
    v42 = *((_QWORD *)v12 + 3);
    v13 = v43 + 1;
    v11 = v123;
    if (v43 >= v42 >> 1)
    {
      v92 = sub_1A9233E0C((char *)(v42 > 1), v43 + 1, 1, v12);
      v11 = v123;
      v12 = v92;
    }
    *((_QWORD *)v12 + 2) = v13;
    v44 = v12 + 32;
    v45 = &v12[16 * v43 + 32];
    *(_QWORD *)v45 = v14;
    *((_QWORD *)v45 + 1) = v10;
    if (v43)
    {
      while (1)
      {
        v46 = v13 - 1;
        if (v13 >= 4)
        {
          v51 = &v44[16 * v13];
          v52 = *((_QWORD *)v51 - 8);
          v53 = *((_QWORD *)v51 - 7);
          v57 = __OFSUB__(v53, v52);
          v54 = v53 - v52;
          if (v57)
            goto LABEL_120;
          v56 = *((_QWORD *)v51 - 6);
          v55 = *((_QWORD *)v51 - 5);
          v57 = __OFSUB__(v55, v56);
          v49 = v55 - v56;
          v50 = v57;
          if (v57)
            goto LABEL_121;
          v58 = v13 - 2;
          v59 = &v44[16 * v13 - 32];
          v61 = *(_QWORD *)v59;
          v60 = *((_QWORD *)v59 + 1);
          v57 = __OFSUB__(v60, v61);
          v62 = v60 - v61;
          if (v57)
            goto LABEL_123;
          v57 = __OFADD__(v49, v62);
          v63 = v49 + v62;
          if (v57)
            goto LABEL_126;
          if (v63 >= v54)
          {
            v81 = &v44[16 * v46];
            v83 = *(_QWORD *)v81;
            v82 = *((_QWORD *)v81 + 1);
            v57 = __OFSUB__(v82, v83);
            v84 = v82 - v83;
            if (v57)
              goto LABEL_130;
            v74 = v49 < v84;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v75 = *((_QWORD *)v12 + 4);
            v76 = *((_QWORD *)v12 + 5);
            v57 = __OFSUB__(v76, v75);
            v68 = v76 - v75;
            v69 = v57;
            goto LABEL_77;
          }
          v48 = *((_QWORD *)v12 + 4);
          v47 = *((_QWORD *)v12 + 5);
          v57 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          v50 = v57;
        }
        if ((v50 & 1) != 0)
          goto LABEL_122;
        v58 = v13 - 2;
        v64 = &v44[16 * v13 - 32];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v67 = __OFSUB__(v65, v66);
        v68 = v65 - v66;
        v69 = v67;
        if (v67)
          goto LABEL_125;
        v70 = &v44[16 * v46];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v57 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v57)
          goto LABEL_128;
        if (__OFADD__(v68, v73))
          goto LABEL_129;
        if (v68 + v73 >= v49)
        {
          v74 = v49 < v73;
LABEL_83:
          if (v74)
            v46 = v58;
          goto LABEL_85;
        }
LABEL_77:
        if ((v69 & 1) != 0)
          goto LABEL_124;
        v77 = &v44[16 * v46];
        v79 = *(_QWORD *)v77;
        v78 = *((_QWORD *)v77 + 1);
        v57 = __OFSUB__(v78, v79);
        v80 = v78 - v79;
        if (v57)
          goto LABEL_127;
        if (v80 < v68)
          goto LABEL_15;
LABEL_85:
        v85 = v46 - 1;
        if (v46 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v86 = v12;
        v87 = &v44[16 * v85];
        v88 = *(_QWORD *)v87;
        v89 = &v44[16 * v46];
        v90 = *((_QWORD *)v89 + 1);
        sub_1A91381D0((double *)(v11 + 40 * *(_QWORD *)v87), (double *)(v11 + 40 * *(_QWORD *)v89), v11 + 40 * v90, __dst);
        if (v1)
          goto LABEL_93;
        if (v90 < v88)
          goto LABEL_117;
        if (v46 > *((_QWORD *)v86 + 2))
          goto LABEL_118;
        *(_QWORD *)v87 = v88;
        *(_QWORD *)&v44[16 * v85 + 8] = v90;
        v91 = *((_QWORD *)v86 + 2);
        if (v46 >= v91)
          goto LABEL_119;
        v12 = v86;
        v13 = v91 - 1;
        memmove(&v44[16 * v46], v89 + 16, 16 * (v91 - 1 - v46));
        *((_QWORD *)v86 + 2) = v91 - 1;
        v11 = v123;
        if (v91 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v121;
    v3 = v122;
    if (v10 >= v122)
    {
      v9 = v120;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t sub_1A91381D0(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  double *v13;
  double *v14;
  double *v15;
  double *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  double *v20;
  unint64_t v21;
  double *v22;
  double *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t result;
  double *v29;
  double *v30;
  double *v31;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = ((char *)a2 - (char *)__src) / 40;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v30 = __dst;
  v31 = __src;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      v19 = 5 * v11;
      if (__dst != a2 || &a2[v19] <= __dst)
        memmove(__dst, a2, 40 * v11);
      v20 = &v4[v19];
      v29 = &v4[v19];
      v31 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        v21 = a3 - 40;
        do
        {
          v22 = (double *)(v21 + 40);
          if (*(v20 - 3) >= *(v6 - 3))
          {
            v29 = v20 - 5;
            if (v22 < v20 || v21 >= (unint64_t)v20 || v22 != v20)
            {
              v26 = *(_OWORD *)(v20 - 5);
              v27 = *(_OWORD *)(v20 - 3);
              *(double *)(v21 + 32) = *(v20 - 1);
              *(_OWORD *)v21 = v26;
              *(_OWORD *)(v21 + 16) = v27;
            }
            v23 = v6;
            v20 -= 5;
            if (v6 <= v7)
              break;
          }
          else
          {
            v23 = v6 - 5;
            if (v22 != v6 || v21 >= (unint64_t)v6)
            {
              v24 = *(_OWORD *)v23;
              v25 = *(_OWORD *)(v6 - 3);
              *(double *)(v21 + 32) = *(v6 - 1);
              *(_OWORD *)v21 = v24;
              *(_OWORD *)(v21 + 16) = v25;
            }
            v31 = v6 - 5;
            if (v23 <= v7)
              break;
          }
          v21 -= 40;
          v6 = v23;
        }
        while (v20 > v4);
      }
LABEL_40:
      sub_1A9233F04((void **)&v31, (const void **)&v30, &v29);
      return 1;
    }
  }
  else if (v8 >= -39)
  {
    v12 = 5 * v9;
    if (__dst != __src || &__src[v12] <= __dst)
      memmove(__dst, __src, v12 * 8);
    v13 = &v4[v12];
    v29 = &v4[v12];
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      v14 = v4;
      while (1)
      {
        if (v6[2] >= v14[2])
        {
          v4 = v14 + 5;
          v16 = v14;
          v15 = v6;
          if (v7 == v14)
          {
            v14 += 5;
            if (v7 < v4)
              goto LABEL_18;
          }
          else
          {
            v14 += 5;
          }
        }
        else
        {
          v15 = v6 + 5;
          v16 = v6;
          if (v7 == v6 && v7 < v15)
            goto LABEL_18;
        }
        v17 = *(_OWORD *)v16;
        v18 = *((_OWORD *)v16 + 1);
        v7[4] = v16[4];
        *(_OWORD *)v7 = v17;
        *((_OWORD *)v7 + 1) = v18;
LABEL_18:
        v7 += 5;
        if (v14 < v13)
        {
          v6 = v15;
          if ((unint64_t)v15 < a3)
            continue;
        }
        v30 = v4;
        v31 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

BOOL _s18PodcastsFoundation24EpisodeTimelineAlignmentV0E0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint16x4_t v2;

  v2 = (uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16))))), 0xFuLL));
  v2.i16[0] = vmaxv_u16(v2);
  return ((v2.i32[0] | *(unsigned __int8 *)(a1 + 32) ^ *(unsigned __int8 *)(a2 + 32) | *(unsigned __int8 *)(a2 + 33) ^ *(unsigned __int8 *)(a1 + 33)) & 1) == 0;
}

uint64_t destroy for EpisodeTimelineAlignment()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s18PodcastsFoundation24EpisodeTimelineAlignmentVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EpisodeTimelineAlignment(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for EpisodeTimelineAlignment(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeTimelineAlignment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeTimelineAlignment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeTimelineAlignment()
{
  return &type metadata for EpisodeTimelineAlignment;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for EpisodeTimelineAlignment.Alignment(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 34))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeTimelineAlignment.Alignment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 34) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeTimelineAlignment.Alignment()
{
  return &type metadata for EpisodeTimelineAlignment.Alignment;
}

BOOL sub_1A913871C()
{
  return sub_1A9137890();
}

uint64_t sub_1A9138724(uint64_t a1, uint64_t (*a2)(_OWORD *, _OWORD *))
{
  int64_t v2;
  uint64_t v3;
  char *v5;
  char v6;
  char v7;
  char v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _OWORD v23[2];
  char v24;
  char v25;
  _OWORD v26[2];
  char v27;
  char v28;
  uint64_t v29;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1A929E494(0, v2, 0);
    v3 = v29;
    v5 = (char *)(a1 + 64);
    do
    {
      v6 = *v5;
      v7 = v5[1];
      v8 = v5[40];
      v9 = v5[41];
      v10 = *((_OWORD *)v5 - 1);
      v23[0] = *((_OWORD *)v5 - 2);
      v23[1] = v10;
      v24 = v6;
      v25 = v7;
      v26[0] = *(_OWORD *)(v5 + 8);
      v26[1] = *(_OWORD *)(v5 + 24);
      v27 = v8;
      v28 = v9;
      v12 = a2(v23, v26);
      v14 = v13;
      v16 = v15;
      v29 = v3;
      v18 = *(_QWORD *)(v3 + 16);
      v17 = *(_QWORD *)(v3 + 24);
      if (v18 >= v17 >> 1)
      {
        v20 = v11;
        sub_1A929E494(v17 > 1, v18 + 1, 1);
        v11 = v20;
        v3 = v29;
      }
      *(_QWORD *)(v3 + 16) = v18 + 1;
      v19 = (_QWORD *)(v3 + 32 * v18);
      v19[4] = v12;
      v19[5] = v14;
      v19[6] = v11;
      v19[7] = v16;
      v5 += 80;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1A9138864(uint64_t result, uint64_t (*a2)(_QWORD *, _QWORD *))
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *, _QWORD *);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[4];
  char v34;
  char v35;
  _QWORD v36[4];
  char v37;
  char v38;
  uint64_t v39;

  v2 = *(_QWORD *)(result + 16);
  v31 = *(_QWORD *)(result + 24) >> 1;
  v30 = v2 - v31;
  if (v2 == v31)
  {
    v32 = MEMORY[0x1E0DEE9D8];
LABEL_3:
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return v32;
  }
  else
  {
    v3 = a2;
    v4 = 0;
    v5 = *(_QWORD *)(result + 48);
    v6 = (char *)(*(_QWORD *)(result + 40) + 40 * v5 + 33);
    v7 = (char *)(*(_QWORD *)(result + 8) + 40 * v2 + 33);
    v27 = *(_QWORD *)(result + 56) >> 1;
    v28 = v5;
    v29 = v5 - v27;
    v32 = MEMORY[0x1E0DEE9D8];
    v26 = *(_QWORD *)(result + 16);
    while (v2 + v4 < v31)
    {
      if (!(v29 + v4))
        goto LABEL_3;
      if (v28 + v4 >= v27)
        goto LABEL_16;
      v12 = *(_QWORD *)(v7 - 33);
      v13 = *(_QWORD *)(v7 - 25);
      v14 = *(_QWORD *)(v7 - 17);
      v15 = *(_QWORD *)(v7 - 9);
      v16 = *(v7 - 1);
      v17 = *v7;
      v18 = *(_QWORD *)(v6 - 33);
      v19 = *(_QWORD *)(v6 - 25);
      v20 = *(_QWORD *)(v6 - 17);
      v21 = *(_QWORD *)(v6 - 9);
      v22 = *v6;
      v23 = *(v6 - 1);
      v33[0] = v12;
      v33[1] = v13;
      v33[2] = v14;
      v33[3] = v15;
      v34 = v16;
      v35 = v17;
      v36[0] = v18;
      v36[1] = v19;
      v36[2] = v20;
      v36[3] = v21;
      v37 = v23;
      v38 = v22;
      result = v3(v33, v36);
      if ((result & 1) != 0)
      {
        v24 = v32;
        result = swift_isUniquelyReferenced_nonNull_native();
        v39 = v32;
        if ((result & 1) == 0)
        {
          result = sub_1A929E4B0(0, *(_QWORD *)(v32 + 16) + 1, 1);
          v24 = v39;
        }
        v9 = *(_QWORD *)(v24 + 16);
        v8 = *(_QWORD *)(v24 + 24);
        v10 = v9 + 1;
        if (v9 >= v8 >> 1)
        {
          result = sub_1A929E4B0(v8 > 1, v9 + 1, 1);
          v10 = v9 + 1;
          v24 = v39;
        }
        *(_QWORD *)(v24 + 16) = v10;
        v32 = v24;
        v11 = v24 + 80 * v9;
        *(_QWORD *)(v11 + 32) = v12;
        *(_QWORD *)(v11 + 40) = v13;
        *(_QWORD *)(v11 + 48) = v14;
        *(_QWORD *)(v11 + 56) = v15;
        *(_BYTE *)(v11 + 64) = v16;
        *(_BYTE *)(v11 + 65) = v17;
        *(_QWORD *)(v11 + 72) = v18;
        *(_QWORD *)(v11 + 80) = v19;
        *(_QWORD *)(v11 + 88) = v20;
        *(_QWORD *)(v11 + 96) = v21;
        *(_BYTE *)(v11 + 104) = v23;
        *(_BYTE *)(v11 + 105) = v22;
        v3 = a2;
      }
      ++v4;
      v6 += 40;
      v7 += 40;
      v2 = v26;
      if (!(v30 + v4))
        goto LABEL_3;
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  return result;
}

uint64_t sub_1A9138AC0()
{
  return sub_1A913793C();
}

uint64_t EyebrowBuilderSourceCopy.channelName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilderSourceCopy.subscriptionName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilderSourceCopy.entitlementState.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t EyebrowBuilderSourceCopy.hasFreeVersion.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

void EyebrowBuilderSourceCopy.listenNowReason.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(v1 + 56);
  v3 = *(_BYTE *)(v1 + 57);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 48);
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
}

uint64_t EyebrowBuilderSourceCopy.episodeTypeResolvedValue.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t EyebrowBuilderSourceCopy.mediaType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 59);
}

uint64_t EyebrowBuilderSourceCopy.isExplicit.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 60);
}

uint64_t EyebrowBuilderSourceCopy.showTypeIsSerial.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 61);
}

uint64_t EyebrowBuilderSourceCopy.durationOpt.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t EyebrowBuilderSourceCopy.seasonNumberOpt.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t EyebrowBuilderSourceCopy.episodeNumberOpt.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t EyebrowBuilderSourceCopy.releaseDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for EyebrowBuilderSourceCopy() + 64);
  return sub_1A90A1CA8(v3, a1);
}

uint64_t type metadata accessor for EyebrowBuilderSourceCopy()
{
  uint64_t result;

  result = qword_1ED2A9CD8;
  if (!qword_1ED2A9CD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t EyebrowBuilderSourceCopy.timeRemainingOpt.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EyebrowBuilderSourceCopy() + 68));
}

uint64_t EyebrowBuilderSourceCopy.init(source:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44;
  uint64_t v46;
  char v47;
  char v48;

  v4 = type metadata accessor for EyebrowBuilderSourceCopy();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  *(_QWORD *)v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  *((_QWORD *)v6 + 1) = v9;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  *((_QWORD *)v6 + 2) = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  *((_QWORD *)v6 + 3) = v12;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  *((_QWORD *)v6 + 4) = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v6[40] = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 32))(v15, v16) & 1;
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v18 + 40))(&v46, v17, v18);
  v19 = v47;
  v20 = v48;
  *((_QWORD *)v6 + 6) = v46;
  v6[56] = v19;
  v6[57] = v20;
  v21 = a1[3];
  v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  v6[58] = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 48))(v21, v22);
  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  v6[59] = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 56))(v23, v24);
  v25 = a1[3];
  v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  v6[60] = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 64))(v25, v26) & 1;
  v27 = a1[3];
  v28 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  v6[61] = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 72))(v27, v28) & 1;
  v29 = a1[3];
  v30 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v29);
  *((_QWORD *)v6 + 8) = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 80))(v29, v30);
  v6[72] = v31 & 1;
  v32 = a1[3];
  v33 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v32);
  *((_QWORD *)v6 + 10) = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 88))(v32, v33);
  v6[88] = v34 & 1;
  v35 = a1[3];
  v36 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v35);
  *((_QWORD *)v6 + 12) = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 96))(v35, v36);
  v6[104] = v37 & 1;
  v38 = a1[3];
  v39 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v38);
  (*(void (**)(uint64_t, uint64_t))(v39 + 104))(v38, v39);
  v40 = a1[3];
  v41 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v40);
  v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 112))(v40, v41);
  v43 = &v6[*(int *)(v4 + 68)];
  *(_QWORD *)v43 = v42;
  v43[8] = v44 & 1;
  sub_1A9138F30((uint64_t)v6, a2);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1A9138F30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EyebrowBuilderSourceCopy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9138F74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A9138FA0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_1A9138FA8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

void sub_1A9138FB0(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(v1 + 56);
  v3 = *(_BYTE *)(v1 + 57);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 48);
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
}

uint64_t sub_1A9138FCC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t sub_1A9138FD4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 59);
}

uint64_t sub_1A9138FDC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 60);
}

uint64_t sub_1A9138FE4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 61);
}

uint64_t sub_1A9138FEC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t sub_1A9138FF8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t sub_1A9139004()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t sub_1A9139010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A90A1CA8(v2 + *(int *)(a1 + 64), a2);
}

uint64_t sub_1A9139020(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 68));
}

_QWORD *initializeBufferWithCopyOfBuffer for EyebrowBuilderSourceCopy(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    *(_DWORD *)(a1 + 58) = *(_DWORD *)((char *)a2 + 58);
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
    v9 = *(int *)(a3 + 64);
    v10 = (void *)(a1 + v9);
    v11 = (char *)a2 + v9;
    v12 = sub_1A93F738C();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = *(int *)(a3 + 68);
    v18 = (char *)v4 + v17;
    v19 = (uint64_t)a2 + v17;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = *(_BYTE *)(v19 + 8);
  }
  return v4;
}

uint64_t destroy for EyebrowBuilderSourceCopy(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 64);
  v5 = sub_1A93F738C();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for EyebrowBuilderSourceCopy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 58) = *(_DWORD *)(a2 + 58);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v8 = *(int *)(a3 + 64);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1A93F738C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = *(int *)(a3 + 68);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  return a1;
}

uint64_t assignWithCopy for EyebrowBuilderSourceCopy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_BYTE *)(a1 + 59) = *(_BYTE *)(a2 + 59);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_BYTE *)(a1 + 61) = *(_BYTE *)(a2 + 61);
  v7 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v8;
  v9 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v9;
  v10 = *(int *)(a3 + 64);
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_1A93F738C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = *(int *)(a3 + 68);
  v20 = a1 + v19;
  v21 = (uint64_t *)(a2 + v19);
  v22 = *v21;
  *(_BYTE *)(v20 + 8) = *((_BYTE *)v21 + 8);
  *(_QWORD *)v20 = v22;
  return a1;
}

uint64_t initializeWithTake for EyebrowBuilderSourceCopy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 58) = *(_DWORD *)(a2 + 58);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v7 = *(int *)(a3 + 64);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1A93F738C();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = *(int *)(a3 + 68);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  return a1;
}

uint64_t assignWithTake for EyebrowBuilderSourceCopy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_BYTE *)(a1 + 61) = *(_BYTE *)(a2 + 61);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v8 = *(int *)(a3 + 64);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1A93F738C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = *(int *)(a3 + 68);
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for EyebrowBuilderSourceCopy()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9139878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 64), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for EyebrowBuilderSourceCopy()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9139910(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 64), a2, a2, v7);
  }
  return result;
}

void sub_1A9139988()
{
  unint64_t v0;

  sub_1A90D8014();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t FormatConversionProcessingStep.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9131434(v1, a1);
}

uint64_t FormatConversionProcessingStep.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t FormatConversionProcessingStep.format.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

uint64_t FormatConversionProcessingStep.init(upstream:format:)@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD v21[32];
  _OWORD v22[16];

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 40))(v21, a3, a4);
  ArtworkRequest.with(format:)(a2, (uint64_t)v22);
  sub_1A9131470((uint64_t)v21);
  v10 = v22[13];
  *((_OWORD *)a5 + 12) = v22[12];
  *((_OWORD *)a5 + 13) = v10;
  v11 = v22[15];
  *((_OWORD *)a5 + 14) = v22[14];
  *((_OWORD *)a5 + 15) = v11;
  v12 = v22[9];
  *((_OWORD *)a5 + 8) = v22[8];
  *((_OWORD *)a5 + 9) = v12;
  v13 = v22[11];
  *((_OWORD *)a5 + 10) = v22[10];
  *((_OWORD *)a5 + 11) = v13;
  v14 = v22[5];
  *((_OWORD *)a5 + 4) = v22[4];
  *((_OWORD *)a5 + 5) = v14;
  v15 = v22[7];
  *((_OWORD *)a5 + 6) = v22[6];
  *((_OWORD *)a5 + 7) = v15;
  v16 = v22[1];
  *(_OWORD *)a5 = v22[0];
  *((_OWORD *)a5 + 1) = v16;
  v17 = v22[3];
  *((_OWORD *)a5 + 2) = v22[2];
  *((_OWORD *)a5 + 3) = v17;
  v19 = type metadata accessor for FormatConversionProcessingStep(0, a3, a4, v18);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(&a5[*(int *)(v19 + 36)], a1, a3);
  a5[*(int *)(v19 + 40)] = a2;
  return result;
}

uint64_t type metadata accessor for FormatConversionProcessingStep(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatConversionProcessingStep);
}

uint64_t FormatConversionProcessingStep.publisher.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[3];
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *(_QWORD *)(a1 - 8);
  v26 = *(_QWORD *)(v2 + 64);
  MEMORY[0x1E0C80A78](a1);
  v23 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v4 + 16);
  v5 = *(_QWORD *)(v4 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v27 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v22[0] = (char *)v22 - v8;
  v22[2] = type metadata accessor for ArtworkContent();
  v22[1] = swift_getAssociatedConformanceWitness();
  v9 = sub_1A93F783C();
  v25 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v22 - v11;
  v13 = v24;
  (*(void (**)(uint64_t, uint64_t, double))(v5 + 48))(v6, v5, v10);
  v14 = v2;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v16 = v23;
  v15(v23, v13, a1);
  v17 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v6;
  *(_QWORD *)(v18 + 24) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v18 + v17, v16, a1);
  v19 = v22[0];
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v19, AssociatedTypeWitness);
  MEMORY[0x1AF414014](MEMORY[0x1E0C95B48], v9);
  v20 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v9);
  return v20;
}

uint64_t sub_1A9139DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[33];
  uint64_t v24;

  v21 = a1;
  v20 = a5;
  v24 = sub_1A93F726C();
  v8 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - v12;
  v15 = *(unsigned __int8 *)(a2
                           + *(int *)(type metadata accessor for FormatConversionProcessingStep(0, a3, a4, v14) + 40));
  sub_1A913A160(v15, (uint64_t)v13);
  v16 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 40);
  v16(v23, a3, a4);
  v17 = v22;
  sub_1A913A390(v21, v15, a4, (uint64_t)v10);
  sub_1A9131470((uint64_t)v23);
  if (v17)
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v24);
  v16(v23, a3, a4);
  sub_1A927BF2C((uint64_t)v10, (uint64_t)v13, (uint64_t)v23);
  sub_1A9131470((uint64_t)v23);
  v19 = v24;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v20, v13, v19);
  type metadata accessor for ArtworkContent();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A9139F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for FormatConversionProcessingStep(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  swift_bridgeObjectRelease();
  v9 = *(unsigned __int8 *)(v8 + 32);
  if (v9 != 255)
    sub_1A913A0C0(*(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), v9);
  v10 = *(unsigned __int8 *)(v8 + 64);
  if (v10 != 255)
    sub_1A913A0D8(*(id *)(v8 + 56), v10);
  v11 = *(unsigned __int8 *)(v8 + 80);
  if (v11 != 255)
    sub_1A913A0D8(*(id *)(v8 + 72), v11);
  v12 = *(unsigned __int8 *)(v8 + 96);
  if (v12 != 255)
    sub_1A913A0D8(*(id *)(v8 + 88), v12);
  v13 = *(unsigned __int8 *)(v8 + 112);
  if (v13 != 255)
    sub_1A913A0D8(*(id *)(v8 + 104), v13);
  v14 = *(unsigned __int8 *)(v8 + 128);
  if (v14 != 255)
    sub_1A913A0D8(*(id *)(v8 + 120), v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v8 + 240))
    __swift_destroy_boxed_opaque_existential_0(v8 + 216);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8 + *(int *)(v6 + 36), v5);
  return swift_deallocObject();
}

uint64_t sub_1A913A0C0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_1A913A0D8(id a1, char a2)
{
  if (a2 == 1)

}

uint64_t sub_1A913A0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatConversionProcessingStep(0, v6, v7, a2) - 8)
                          + 80);
  return sub_1A9139DB0(a1, v3 + ((v8 + 32) & ~v8), v6, v7, a3);
}

void sub_1A913A160(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD v13[4];

  v13[0] = a1;
  v13[1] = a2;
  v2 = sub_1A93F73E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v12 = objc_msgSend(v11, sel_temporaryDirectory);

  sub_1A93F7200();
  sub_1A93F73D4();
  sub_1A93F73A4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1A93F71B8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13[2] = 0x6D726F662E706D74;
  v13[3] = 0xEB000000002E7461;
  __asm { BR              X10 }
}

uint64_t sub_1A913A2FC()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F71C4();
  swift_bridgeObjectRelease();
  return v0(v2, v1);
}

uint64_t sub_1A913A390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v17[2];
  uint64_t v18;

  v17[1] = a3;
  v18 = a4;
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ArtworkContent();
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A91224E0(a1, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = (char *)v13;
  }
  else
  {
    v14 = *v13;
    v15 = v13[1];
    sub_1A913A160(a2, (uint64_t)v10);
    sub_1A93F72C0();
    if (v4)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return sub_1A905F180(v14, v15);
    }
    sub_1A905F180(v14, v15);
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v18, v10, v7);
}

uint64_t sub_1A913A500@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = FormatConversionProcessingStep.publisher.getter(a1);
  *a2 = result;
  return result;
}

uint64_t AssetProcessingStep<>.convert(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  unsigned __int8 v7;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v7 = a1;
  v9 = MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))(v11, v4, a2, v9);
  return FormatConversionProcessingStep.init(upstream:format:)((uint64_t)v11, v7, a2, a3, a4);
}

_UNKNOWN **sub_1A913A5B8()
{
  return &protocol witness table for ArtworkRequest;
}

unint64_t sub_1A913A5C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2ABAC8;
  if (!qword_1ED2ABAC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2ABAD0);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2ABAC8);
  }
  return result;
}

uint64_t sub_1A913A614()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A913A694(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  int v15;
  id v16;
  id *v17;
  int v18;
  id v19;
  id *v20;
  int v21;
  id v22;
  id *v23;
  int v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || (unint64_t)(*(_QWORD *)(v5 + 64) + 257) > 0x18)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    v36 = *(_QWORD *)(v5 + 64);
    v37 = *(_QWORD *)(a3 + 16);
    v10 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v10;
    v11 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v11 == 255)
    {
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    }
    else
    {
      v12 = a2[2];
      v13 = a2[3];
      sub_1A913A9C0(v12, v13, v11);
      *(_QWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 24) = v13;
      *(_BYTE *)(a1 + 32) = v11;
    }
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    v14 = (id *)(a2 + 7);
    v15 = *((unsigned __int8 *)a2 + 64);
    if (v15 == 255)
    {
      *(_QWORD *)(a1 + 56) = *v14;
      *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    }
    else
    {
      v16 = *v14;
      sub_1A913A9D8(*v14, *((_BYTE *)a2 + 64));
      *(_QWORD *)(a1 + 56) = v16;
      *(_BYTE *)(a1 + 64) = v15;
    }
    v17 = (id *)(a2 + 9);
    v18 = *((unsigned __int8 *)a2 + 80);
    if (v18 == 255)
    {
      *(_QWORD *)(a1 + 72) = *v17;
      *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    }
    else
    {
      v19 = *v17;
      sub_1A913A9D8(*v17, *((_BYTE *)a2 + 80));
      *(_QWORD *)(a1 + 72) = v19;
      *(_BYTE *)(a1 + 80) = v18;
    }
    v20 = (id *)(a2 + 11);
    v21 = *((unsigned __int8 *)a2 + 96);
    if (v21 == 255)
    {
      *(_QWORD *)(a1 + 88) = *v20;
      *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
    }
    else
    {
      v22 = *v20;
      sub_1A913A9D8(*v20, *((_BYTE *)a2 + 96));
      *(_QWORD *)(a1 + 88) = v22;
      *(_BYTE *)(a1 + 96) = v21;
    }
    v23 = (id *)(a2 + 13);
    v24 = *((unsigned __int8 *)a2 + 112);
    if (v24 == 255)
    {
      *(_QWORD *)(a1 + 104) = *v23;
      *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
    }
    else
    {
      v25 = *v23;
      sub_1A913A9D8(*v23, *((_BYTE *)a2 + 112));
      *(_QWORD *)(a1 + 104) = v25;
      *(_BYTE *)(a1 + 112) = v24;
    }
    v26 = (id *)(a2 + 15);
    v27 = *((unsigned __int8 *)a2 + 128);
    if (v27 == 255)
    {
      *(_QWORD *)(a1 + 120) = *v26;
      *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
    }
    else
    {
      v28 = *v26;
      sub_1A913A9D8(*v26, *((_BYTE *)a2 + 128));
      *(_QWORD *)(a1 + 120) = v28;
      *(_BYTE *)(a1 + 128) = v27;
    }
    v29 = ~v6;
    *(_BYTE *)(a1 + 129) = *((_BYTE *)a2 + 129);
    *(_WORD *)(a1 + 130) = *((_WORD *)a2 + 65);
    v30 = a2[18];
    *(_QWORD *)(a1 + 136) = a2[17];
    *(_QWORD *)(a1 + 144) = v30;
    *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
    *(_WORD *)(a1 + 153) = *(_WORD *)((char *)a2 + 153);
    v31 = a2[21];
    *(_QWORD *)(a1 + 160) = a2[20];
    *(_QWORD *)(a1 + 168) = v31;
    *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
    *(_QWORD *)(a1 + 192) = a2[24];
    *(_WORD *)(a1 + 200) = *((_WORD *)a2 + 100);
    *(_BYTE *)(a1 + 202) = *((_BYTE *)a2 + 202);
    *(_BYTE *)(a1 + 203) = *((_BYTE *)a2 + 203);
    *(_QWORD *)(a1 + 208) = a2[26];
    v32 = a2[30];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32)
    {
      v33 = a2[31];
      *(_QWORD *)(a1 + 240) = v32;
      *(_QWORD *)(a1 + 248) = v33;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v32 - 8))(a1 + 216, (uint64_t)(a2 + 27), v32);
    }
    else
    {
      v34 = *(_OWORD *)(a2 + 29);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 27);
      *(_OWORD *)(a1 + 232) = v34;
      *(_QWORD *)(a1 + 248) = a2[31];
    }
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))((a1 + v6 + 256) & v29, ((unint64_t)a2 + v6 + 256) & v29, v37);
    *(_BYTE *)(((a1 + v6 + 256) & v29) + v36) = *(_BYTE *)((((unint64_t)a2 + v6 + 256) & v29) + v36);
  }
  return a1;
}

uint64_t sub_1A913A9C0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

id sub_1A913A9D8(id result, char a2)
{
  if (a2 == 1)
    return result;
  return result;
}

uint64_t sub_1A913A9EC(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;

  swift_bridgeObjectRelease();
  v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 != 255)
    sub_1A913A0C0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v4);
  v5 = *(unsigned __int8 *)(a1 + 64);
  if (v5 != 255)
    sub_1A913A0D8(*(id *)(a1 + 56), v5);
  v6 = *(unsigned __int8 *)(a1 + 80);
  if (v6 != 255)
    sub_1A913A0D8(*(id *)(a1 + 72), v6);
  v7 = *(unsigned __int8 *)(a1 + 96);
  if (v7 != 255)
    sub_1A913A0D8(*(id *)(a1 + 88), v7);
  v8 = *(unsigned __int8 *)(a1 + 112);
  if (v8 != 255)
    sub_1A913A0D8(*(id *)(a1 + 104), v8);
  v9 = *(unsigned __int8 *)(a1 + 128);
  if (v9 != 255)
    sub_1A913A0D8(*(id *)(a1 + 120), v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 240))
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 256) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_1A913AAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  int v11;
  id v12;
  id *v13;
  int v14;
  id v15;
  id *v16;
  int v17;
  id v18;
  id *v19;
  int v20;
  id v21;
  id *v22;
  int v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v7 == 255)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  else
  {
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 24);
    sub_1A913A9C0(v8, v9, v7);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = v7;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v10 = (id *)(a2 + 56);
  v11 = *(unsigned __int8 *)(a2 + 64);
  if (v11 == 255)
  {
    *(_QWORD *)(a1 + 56) = *v10;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  }
  else
  {
    v12 = *v10;
    sub_1A913A9D8(*v10, *(_BYTE *)(a2 + 64));
    *(_QWORD *)(a1 + 56) = v12;
    *(_BYTE *)(a1 + 64) = v11;
  }
  v13 = (id *)(a2 + 72);
  v14 = *(unsigned __int8 *)(a2 + 80);
  if (v14 == 255)
  {
    *(_QWORD *)(a1 + 72) = *v13;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  }
  else
  {
    v15 = *v13;
    sub_1A913A9D8(*v13, *(_BYTE *)(a2 + 80));
    *(_QWORD *)(a1 + 72) = v15;
    *(_BYTE *)(a1 + 80) = v14;
  }
  v16 = (id *)(a2 + 88);
  v17 = *(unsigned __int8 *)(a2 + 96);
  if (v17 == 255)
  {
    *(_QWORD *)(a1 + 88) = *v16;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  }
  else
  {
    v18 = *v16;
    sub_1A913A9D8(*v16, *(_BYTE *)(a2 + 96));
    *(_QWORD *)(a1 + 88) = v18;
    *(_BYTE *)(a1 + 96) = v17;
  }
  v19 = (id *)(a2 + 104);
  v20 = *(unsigned __int8 *)(a2 + 112);
  if (v20 == 255)
  {
    *(_QWORD *)(a1 + 104) = *v19;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  }
  else
  {
    v21 = *v19;
    sub_1A913A9D8(*v19, *(_BYTE *)(a2 + 112));
    *(_QWORD *)(a1 + 104) = v21;
    *(_BYTE *)(a1 + 112) = v20;
  }
  v22 = (id *)(a2 + 120);
  v23 = *(unsigned __int8 *)(a2 + 128);
  if (v23 == 255)
  {
    *(_QWORD *)(a1 + 120) = *v22;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  }
  else
  {
    v24 = *v22;
    sub_1A913A9D8(*v22, *(_BYTE *)(a2 + 128));
    *(_QWORD *)(a1 + 120) = v24;
    *(_BYTE *)(a1 + 128) = v23;
  }
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  v25 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v25;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
  v26 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v26;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
  *(_BYTE *)(a1 + 202) = *(_BYTE *)(a2 + 202);
  *(_BYTE *)(a1 + 203) = *(_BYTE *)(a2 + 203);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  v27 = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27)
  {
    v28 = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 240) = v27;
    *(_QWORD *)(a1 + 248) = v28;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8))(a1 + 216, a2 + 216, v27);
  }
  else
  {
    v29 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v29;
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  }
  v30 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = ((v31 | 0x100) + a1) & ~v31;
  v33 = ((v31 | 0x100) + a2) & ~v31;
  (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v32, v33);
  *(_BYTE *)(v32 + *(_QWORD *)(v30 + 64)) = *(_BYTE *)(v33 + *(_QWORD *)(v30 + 64));
  return a1;
}

uint64_t sub_1A913AD9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 *v6;
  __int128 *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  id *v18;
  id *v19;
  int v20;
  id v21;
  void *v22;
  char v23;
  id v24;
  char v25;
  id v26;
  id *v27;
  id *v28;
  int v29;
  id v30;
  void *v31;
  char v32;
  id v33;
  char v34;
  id v35;
  id *v36;
  id *v37;
  int v38;
  id v39;
  void *v40;
  char v41;
  id v42;
  char v43;
  id v44;
  id *v45;
  id *v46;
  int v47;
  id v48;
  void *v49;
  char v50;
  id v51;
  char v52;
  id v53;
  id *v54;
  id *v55;
  int v56;
  id v57;
  void *v58;
  char v59;
  id v60;
  char v61;
  id v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (__int128 *)(a1 + 16);
  v7 = (__int128 *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v8 == 255)
    {
      v17 = *v7;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *v6 = v17;
    }
    else
    {
      v14 = *(_QWORD *)(a2 + 16);
      v15 = *(_QWORD *)(a2 + 24);
      sub_1A913A9C0(v14, v15, *(_BYTE *)(a2 + 32));
      *(_QWORD *)(a1 + 16) = v14;
      *(_QWORD *)(a1 + 24) = v15;
      *(_BYTE *)(a1 + 32) = v8;
    }
  }
  else if (v8 == 255)
  {
    sub_1A913B300(a1 + 16);
    v16 = *(_BYTE *)(a2 + 32);
    *v6 = *v7;
    *(_BYTE *)(a1 + 32) = v16;
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    sub_1A913A9C0(v9, v10, *(_BYTE *)(a2 + 32));
    v11 = *(_QWORD *)(a1 + 16);
    v12 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    v13 = *(_BYTE *)(a1 + 32);
    *(_BYTE *)(a1 + 32) = v8;
    sub_1A913A0C0(v11, v12, v13);
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v18 = (id *)(a1 + 56);
  v19 = (id *)(a2 + 56);
  v20 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v20 == 255)
    {
      v26 = *v19;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *v18 = v26;
    }
    else
    {
      v24 = *v19;
      sub_1A913A9D8(*v19, *(_BYTE *)(a2 + 64));
      *(_QWORD *)(a1 + 56) = v24;
      *(_BYTE *)(a1 + 64) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_1A913B334(a1 + 56);
    v25 = *(_BYTE *)(a2 + 64);
    *v18 = *v19;
    *(_BYTE *)(a1 + 64) = v25;
  }
  else
  {
    v21 = *v19;
    sub_1A913A9D8(*v19, *(_BYTE *)(a2 + 64));
    v22 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v21;
    v23 = *(_BYTE *)(a1 + 64);
    *(_BYTE *)(a1 + 64) = v20;
    sub_1A913A0D8(v22, v23);
  }
  v27 = (id *)(a1 + 72);
  v28 = (id *)(a2 + 72);
  v29 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v29 == 255)
    {
      v35 = *v28;
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *v27 = v35;
    }
    else
    {
      v33 = *v28;
      sub_1A913A9D8(*v28, *(_BYTE *)(a2 + 80));
      *(_QWORD *)(a1 + 72) = v33;
      *(_BYTE *)(a1 + 80) = v29;
    }
  }
  else if (v29 == 255)
  {
    sub_1A913B334(a1 + 72);
    v34 = *(_BYTE *)(a2 + 80);
    *v27 = *v28;
    *(_BYTE *)(a1 + 80) = v34;
  }
  else
  {
    v30 = *v28;
    sub_1A913A9D8(*v28, *(_BYTE *)(a2 + 80));
    v31 = *(void **)(a1 + 72);
    *(_QWORD *)(a1 + 72) = v30;
    v32 = *(_BYTE *)(a1 + 80);
    *(_BYTE *)(a1 + 80) = v29;
    sub_1A913A0D8(v31, v32);
  }
  v36 = (id *)(a1 + 88);
  v37 = (id *)(a2 + 88);
  v38 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v38 == 255)
    {
      v44 = *v37;
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *v36 = v44;
    }
    else
    {
      v42 = *v37;
      sub_1A913A9D8(*v37, *(_BYTE *)(a2 + 96));
      *(_QWORD *)(a1 + 88) = v42;
      *(_BYTE *)(a1 + 96) = v38;
    }
  }
  else if (v38 == 255)
  {
    sub_1A913B334(a1 + 88);
    v43 = *(_BYTE *)(a2 + 96);
    *v36 = *v37;
    *(_BYTE *)(a1 + 96) = v43;
  }
  else
  {
    v39 = *v37;
    sub_1A913A9D8(*v37, *(_BYTE *)(a2 + 96));
    v40 = *(void **)(a1 + 88);
    *(_QWORD *)(a1 + 88) = v39;
    v41 = *(_BYTE *)(a1 + 96);
    *(_BYTE *)(a1 + 96) = v38;
    sub_1A913A0D8(v40, v41);
  }
  v45 = (id *)(a1 + 104);
  v46 = (id *)(a2 + 104);
  v47 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v47 == 255)
    {
      v53 = *v46;
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *v45 = v53;
    }
    else
    {
      v51 = *v46;
      sub_1A913A9D8(*v46, *(_BYTE *)(a2 + 112));
      *(_QWORD *)(a1 + 104) = v51;
      *(_BYTE *)(a1 + 112) = v47;
    }
  }
  else if (v47 == 255)
  {
    sub_1A913B334(a1 + 104);
    v52 = *(_BYTE *)(a2 + 112);
    *v45 = *v46;
    *(_BYTE *)(a1 + 112) = v52;
  }
  else
  {
    v48 = *v46;
    sub_1A913A9D8(*v46, *(_BYTE *)(a2 + 112));
    v49 = *(void **)(a1 + 104);
    *(_QWORD *)(a1 + 104) = v48;
    v50 = *(_BYTE *)(a1 + 112);
    *(_BYTE *)(a1 + 112) = v47;
    sub_1A913A0D8(v49, v50);
  }
  v54 = (id *)(a1 + 120);
  v55 = (id *)(a2 + 120);
  v56 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v56 == 255)
    {
      v62 = *v55;
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *v54 = v62;
    }
    else
    {
      v60 = *v55;
      sub_1A913A9D8(*v55, *(_BYTE *)(a2 + 128));
      *(_QWORD *)(a1 + 120) = v60;
      *(_BYTE *)(a1 + 128) = v56;
    }
  }
  else if (v56 == 255)
  {
    sub_1A913B334(a1 + 120);
    v61 = *(_BYTE *)(a2 + 128);
    *v54 = *v55;
    *(_BYTE *)(a1 + 128) = v61;
  }
  else
  {
    v57 = *v55;
    sub_1A913A9D8(*v55, *(_BYTE *)(a2 + 128));
    v58 = *(void **)(a1 + 120);
    *(_QWORD *)(a1 + 120) = v57;
    v59 = *(_BYTE *)(a1 + 128);
    *(_BYTE *)(a1 + 128) = v56;
    sub_1A913A0D8(v58, v59);
  }
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
  *(_BYTE *)(a1 + 131) = *(_BYTE *)(a2 + 131);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_BYTE *)(a1 + 154) = *(_BYTE *)(a2 + 154);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_BYTE *)(a1 + 201) = *(_BYTE *)(a2 + 201);
  *(_BYTE *)(a1 + 202) = *(_BYTE *)(a2 + 202);
  *(_BYTE *)(a1 + 203) = *(_BYTE *)(a2 + 203);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v63 = *(_QWORD *)(a2 + 240);
  if (!*(_QWORD *)(a1 + 240))
  {
    if (v63)
    {
      *(_QWORD *)(a1 + 240) = v63;
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      (**(void (***)(uint64_t, uint64_t))(v63 - 8))(a1 + 216, a2 + 216);
      goto LABEL_50;
    }
LABEL_49:
    v64 = *(_OWORD *)(a2 + 216);
    v65 = *(_OWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 216) = v64;
    *(_OWORD *)(a1 + 232) = v65;
    goto LABEL_50;
  }
  if (!v63)
  {
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
    goto LABEL_49;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 216), (uint64_t *)(a2 + 216));
LABEL_50:
  v66 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v67 = *(unsigned __int8 *)(v66 + 80);
  v68 = ((v67 | 0x100) + a1) & ~v67;
  v69 = ((v67 | 0x100) + a2) & ~v67;
  (*(void (**)(uint64_t, uint64_t))(v66 + 24))(v68, v69);
  *(_BYTE *)(v68 + *(_QWORD *)(v66 + 64)) = *(_BYTE *)(v69 + *(_QWORD *)(v66 + 64));
  return a1;
}

uint64_t sub_1A913B300(uint64_t a1)
{
  destroy for LibraryEntity(a1);
  return a1;
}

uint64_t sub_1A913B334(uint64_t a1)
{
  destroy for Color(a1);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

_OWORD *sub_1A913B4D0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a2[13];
  a1[12] = a2[12];
  a1[13] = v4;
  v5 = a2[15];
  a1[14] = a2[14];
  a1[15] = v5;
  v6 = a2[9];
  a1[8] = a2[8];
  a1[9] = v6;
  v7 = a2[11];
  a1[10] = a2[10];
  a1[11] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  v10 = a2[1];
  *a1 = *a2;
  a1[1] = v10;
  v11 = a2[3];
  a1[2] = a2[2];
  a1[3] = v11;
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = ((unint64_t)a1 + (v13 | 0x100)) & ~v13;
  v15 = ((unint64_t)a2 + (v13 | 0x100)) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v14, v15);
  *(_BYTE *)(v14 + *(_QWORD *)(v12 + 64)) = *(_BYTE *)(v15 + *(_QWORD *)(v12 + 64));
  return a1;
}

uint64_t sub_1A913B574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int v13;
  int v14;
  void *v15;
  _QWORD *v16;
  int v17;
  int v18;
  void *v19;
  _QWORD *v20;
  int v21;
  int v22;
  void *v23;
  _QWORD *v24;
  int v25;
  int v26;
  void *v27;
  _QWORD *v28;
  int v29;
  int v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a1 + 32);
  if (v8 != 255)
  {
    v9 = *(unsigned __int8 *)(a2 + 32);
    if (v9 != 255)
    {
      v10 = *(_QWORD *)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *v7;
      *(_BYTE *)(a1 + 32) = v9;
      sub_1A913A0C0(v10, v11, v8);
      goto LABEL_6;
    }
    sub_1A913B300(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
LABEL_6:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v12 = (_QWORD *)(a2 + 56);
  v13 = *(unsigned __int8 *)(a1 + 64);
  if (v13 != 255)
  {
    v14 = *(unsigned __int8 *)(a2 + 64);
    if (v14 != 255)
    {
      v15 = *(void **)(a1 + 56);
      *(_QWORD *)(a1 + 56) = *v12;
      *(_BYTE *)(a1 + 64) = v14;
      sub_1A913A0D8(v15, v13);
      goto LABEL_11;
    }
    sub_1A913B334(a1 + 56);
  }
  *(_QWORD *)(a1 + 56) = *v12;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
LABEL_11:
  v16 = (_QWORD *)(a2 + 72);
  v17 = *(unsigned __int8 *)(a1 + 80);
  if (v17 != 255)
  {
    v18 = *(unsigned __int8 *)(a2 + 80);
    if (v18 != 255)
    {
      v19 = *(void **)(a1 + 72);
      *(_QWORD *)(a1 + 72) = *v16;
      *(_BYTE *)(a1 + 80) = v18;
      sub_1A913A0D8(v19, v17);
      goto LABEL_16;
    }
    sub_1A913B334(a1 + 72);
  }
  *(_QWORD *)(a1 + 72) = *v16;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
LABEL_16:
  v20 = (_QWORD *)(a2 + 88);
  v21 = *(unsigned __int8 *)(a1 + 96);
  if (v21 != 255)
  {
    v22 = *(unsigned __int8 *)(a2 + 96);
    if (v22 != 255)
    {
      v23 = *(void **)(a1 + 88);
      *(_QWORD *)(a1 + 88) = *v20;
      *(_BYTE *)(a1 + 96) = v22;
      sub_1A913A0D8(v23, v21);
      goto LABEL_21;
    }
    sub_1A913B334(a1 + 88);
  }
  *(_QWORD *)(a1 + 88) = *v20;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
LABEL_21:
  v24 = (_QWORD *)(a2 + 104);
  v25 = *(unsigned __int8 *)(a1 + 112);
  if (v25 != 255)
  {
    v26 = *(unsigned __int8 *)(a2 + 112);
    if (v26 != 255)
    {
      v27 = *(void **)(a1 + 104);
      *(_QWORD *)(a1 + 104) = *v24;
      *(_BYTE *)(a1 + 112) = v26;
      sub_1A913A0D8(v27, v25);
      goto LABEL_26;
    }
    sub_1A913B334(a1 + 104);
  }
  *(_QWORD *)(a1 + 104) = *v24;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
LABEL_26:
  v28 = (_QWORD *)(a2 + 120);
  v29 = *(unsigned __int8 *)(a1 + 128);
  if (v29 != 255)
  {
    v30 = *(unsigned __int8 *)(a2 + 128);
    if (v30 != 255)
    {
      v31 = *(void **)(a1 + 120);
      *(_QWORD *)(a1 + 120) = *v28;
      *(_BYTE *)(a1 + 128) = v30;
      sub_1A913A0D8(v31, v29);
      goto LABEL_31;
    }
    sub_1A913B334(a1 + 120);
  }
  *(_QWORD *)(a1 + 120) = *v28;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
LABEL_31:
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  v32 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v32;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_BYTE *)(a1 + 154) = *(_BYTE *)(a2 + 154);
  v33 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v33;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_BYTE *)(a1 + 201) = *(_BYTE *)(a2 + 201);
  *(_BYTE *)(a1 + 202) = *(_BYTE *)(a2 + 202);
  *(_BYTE *)(a1 + 203) = *(_BYTE *)(a2 + 203);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 240))
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
  v34 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v34;
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  v35 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v36 = *(unsigned __int8 *)(v35 + 80);
  v37 = ((v36 | 0x100) + a1) & ~v36;
  v38 = ((v36 | 0x100) + a2) & ~v36;
  (*(void (**)(uint64_t, uint64_t))(v35 + 40))(v37, v38);
  *(_BYTE *)(v37 + *(_QWORD *)(v35 + 64)) = *(_BYTE *)(v38 + *(_QWORD *)(v35 + 64));
  return a1;
}

uint64_t sub_1A913B890(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v12;
  int v13;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v8 = *(_QWORD *)(v4 + 64) + 257;
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v12 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v12))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v12 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v12 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((a1 + *(unsigned __int8 *)(v4 + 80) + 256) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      v14 = *(_QWORD *)(a1 + 8);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_22;
LABEL_15:
  v13 = (v10 - 1) << v9;
  if (v8 > 3)
    v13 = 0;
  if (!(_DWORD)v8)
    return v6 + v13 + 1;
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A913B95C + 4 * byte_1A9406980[(v8 - 1)]))();
}

void sub_1A913B9CC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64) + 257;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if (*(_DWORD *)(v5 + 64) != -257)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

unint64_t *initializeBufferWithCopyOfBuffer for AlignmentCoordinatorError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1A913BC38(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_1A913BC38(unint64_t result)
{
  if (result >> 62)
  {
    if (result >> 62 != 1)
      return result;
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  return (unint64_t)(id)result;
}

void destroy for AlignmentCoordinatorError(unint64_t *a1)
{
  sub_1A913BC5C(*a1);
}

void sub_1A913BC5C(unint64_t a1)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1)
      return;
    a1 &= 0x3FFFFFFFFFFFFFFFuLL;
  }

}

unint64_t *assignWithCopy for AlignmentCoordinatorError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1A913BC38(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1A913BC5C(v4);
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

unint64_t *assignWithTake for AlignmentCoordinatorError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1A913BC5C(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for AlignmentCoordinatorError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AlignmentCoordinatorError(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A913BD98(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

_QWORD *sub_1A913BDB4(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1A913BDC4(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 2)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 62;
  }
  else
  {
    v2 = 8 * (a2 - 2);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for AlignmentCoordinatorError()
{
  return &type metadata for AlignmentCoordinatorError;
}

uint64_t dispatch thunk of AlignmentCoordinator.align(asset:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of AlignmentCoordinator.fetchPlayerTimestamp(for:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, double);

  v9 = (uint64_t (*)(uint64_t, uint64_t, double))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1A913BE94;
  return v9(a1, a2, a3);
}

uint64_t sub_1A913BE94(double a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(double))(v4 + 8))(a1);
}

uint64_t ContentMode.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_1A913BEF4@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s18PodcastsFoundation11ContentModeO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1A913BF1C()
{
  sub_1A913C178();
  return sub_1A93F82D4();
}

uint64_t sub_1A913BF78()
{
  sub_1A913C178();
  return sub_1A93F82A4();
}

unint64_t _s18PodcastsFoundation11ContentModeO8rawValueACSgSi_tcfC_0(unint64_t result)
{
  if (result >= 0xD)
    return 13;
  return result;
}

unint64_t sub_1A913BFD8()
{
  unint64_t result;

  result = qword_1EEAB7EB0;
  if (!qword_1EEAB7EB0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ContentMode, &type metadata for ContentMode);
    atomic_store(result, (unint64_t *)&qword_1EEAB7EB0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CropCode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1A913C0F8 + 4 * byte_1A9406B15[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1A913C12C + 4 * byte_1A9406B10[v4]))();
}

uint64_t sub_1A913C12C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A913C134(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A913C13CLL);
  return result;
}

uint64_t sub_1A913C148(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A913C150);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1A913C154(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A913C15C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentMode()
{
  return &type metadata for ContentMode;
}

unint64_t sub_1A913C178()
{
  unint64_t result;

  result = qword_1EEAB7EB8;
  if (!qword_1EEAB7EB8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ContentMode, &type metadata for ContentMode);
    atomic_store(result, (unint64_t *)&qword_1EEAB7EB8);
  }
  return result;
}

uint64_t sub_1A913C1BC()
{
  uint64_t v0;

  sub_1A9085818(*(_QWORD *)(v0 + 16));
  sub_1A9085818(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FairPlayKeySessionProvidingMock()
{
  return objc_opt_self();
}

uint64_t sub_1A913C208(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  v2 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 16);
  if (v2)
  {
    swift_retain();
    v1 = v2(a1);
    sub_1A9085818((uint64_t)v2);
  }
  else
  {
    sub_1A913C29C();
    swift_allocError();
    swift_willThrow();
  }
  return v1;
}

unint64_t sub_1A913C29C()
{
  unint64_t result;

  result = qword_1EEAB7F68;
  if (!qword_1EEAB7F68)
  {
    result = MEMORY[0x1AF414014](&unk_1A9406D40, &type metadata for FairPlayKeySessionProvidingMockError);
    atomic_store(result, (unint64_t *)&qword_1EEAB7F68);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FairPlayKeySessionProvidingMockError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A913C320 + 4 * asc_1A9406C30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A913C340 + 4 * byte_1A9406C35[v4]))();
}

_BYTE *sub_1A913C320(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A913C340(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A913C348(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A913C350(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A913C358(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A913C360(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FairPlayKeySessionProvidingMockError()
{
  return &type metadata for FairPlayKeySessionProvidingMockError;
}

unint64_t sub_1A913C380()
{
  unint64_t result;

  result = qword_1EEAB7F70;
  if (!qword_1EEAB7F70)
  {
    result = MEMORY[0x1AF414014](&unk_1A9406D18, &type metadata for FairPlayKeySessionProvidingMockError);
    atomic_store(result, (unint64_t *)&qword_1EEAB7F70);
  }
  return result;
}

PodcastsFoundation::PodcastsSettingsDeepLinkURLs_optional __swiftcall PodcastsSettingsDeepLinkURLs.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::PodcastsSettingsDeepLinkURLs_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PodcastsSettingsDeepLinkURLs.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A913C450 + 4 * byte_1A9406D80[*v0]))(0xD000000000000040, 0x80000001A94416B0);
}

uint64_t sub_1A913C450(uint64_t a1)
{
  return a1 + 19;
}

void sub_1A913C498(char *a1)
{
  sub_1A92FA78C(*a1);
}

unint64_t sub_1A913C4A8()
{
  unint64_t result;

  result = qword_1EEAB7F78;
  if (!qword_1EEAB7F78)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastsSettingsDeepLinkURLs, &type metadata for PodcastsSettingsDeepLinkURLs);
    atomic_store(result, (unint64_t *)&qword_1EEAB7F78);
  }
  return result;
}

void sub_1A913C4EC()
{
  char *v0;

  sub_1A92B2948(*v0);
}

void sub_1A913C4F4(uint64_t a1)
{
  char *v1;

  sub_1A9227764(a1, *v1);
}

void sub_1A913C4FC(uint64_t a1)
{
  char *v1;

  sub_1A931C318(a1, *v1);
}

PodcastsFoundation::PodcastsSettingsDeepLinkURLs_optional sub_1A913C504(Swift::String *a1)
{
  return PodcastsSettingsDeepLinkURLs.init(rawValue:)(*a1);
}

uint64_t sub_1A913C510@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PodcastsSettingsDeepLinkURLs.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for PodcastsSettingsDeepLinkURLs(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastsSettingsDeepLinkURLs(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A913C610 + 4 * byte_1A9406D8A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A913C644 + 4 * byte_1A9406D85[v4]))();
}

uint64_t sub_1A913C644(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A913C64C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A913C654);
  return result;
}

uint64_t sub_1A913C660(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A913C668);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A913C66C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A913C674(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PodcastsSettingsDeepLinkURLs()
{
  return &type metadata for PodcastsSettingsDeepLinkURLs;
}

uint64_t sub_1A913C6D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___MTPartialFeedRequest_limit;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1A913C760(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___MTPartialFeedRequest_limit);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1A913C7A8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A913C854()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A913C900(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___MTPartialFeedRequest_sections);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A913C950(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___MTPartialFeedRequest_sections);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A913C9B8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A913CA40()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1A913CACC(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1A913CB14())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1A913CB58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  __int128 v30[2];
  uint64_t v31;
  char v32;

  v24 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = 0;
  memset(v30, 0, sizeof(v30));
  v32 = 4;
  v29 = 1;
  v28 = 1;
  v27 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7F0);
  inited = swift_initStackObject();
  v22 = xmmword_1A9405520;
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = &unk_1E54D68A8;
  v23 = sub_1A91129C4(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = v22;
  v25 = *(_QWORD *)(v1 + OBJC_IVAR___MTBaseFeedRequest_storeID);
  *(_QWORD *)(v6 + 32) = sub_1A93F9060();
  *(_QWORD *)(v6 + 40) = v7;
  v26 = 1;
  v8 = (uint64_t *)(v1 + OBJC_IVAR___MTPartialFeedRequest_limit);
  swift_beginAccess();
  v9 = *v8;
  v10 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  v13 = sub_1A9112728(v11);
  sub_1A911273C(v11);
  v15 = v14;
  v16 = sub_1A9112844(v11);
  v17 = sub_1A9112858(v11);
  *((_QWORD *)&v21 + 1) = sub_1A911286C(v11);
  *(_QWORD *)&v21 = v17;
  *((_QWORD *)&v20 + 1) = v11;
  *((_QWORD *)&v19 + 1) = v16;
  *(_QWORD *)&v20 = v23;
  *(_QWORD *)&v19 = v11;
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v30, &v29, &v28, &v27, v12, v13, v15, v11, v24, v19, v20, v11, v6, &v26, v9, 0, v21, 0, 1,
           0,
           (uint64_t)v4,
           0,
           0,
           0,
           0,
           0,
           v11,
           0,
           0,
           2);
}

id sub_1A913CDAC(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void **v13;
  void *v14;
  void *v15;
  char *v16;
  char *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  objc_class *v22;
  id v23;
  uint64_t v25;
  objc_super v26;

  v6 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - v10;
  sub_1A9064630(a3, (uint64_t)&v25 - v10, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  v12 = (char *)objc_allocWithZone((Class)type metadata accessor for PartialFeedResponse());
  sub_1A9064630((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  v13 = (void **)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(_QWORD *)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(_QWORD *)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1A9064630((uint64_t)v8, (uint64_t)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params], (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  v14 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  v15 = *v13;
  *v13 = v14;
  v16 = a2;
  swift_bridgeObjectRetain();
  v17 = v12;
  v18 = v14;

  v19 = MEMORY[0x1E0DEE9D8];
  v20 = sub_1A91154C8(MEMORY[0x1E0DEE9D8]);
  v21 = &v17[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(_QWORD *)v21 = v19;
  *((_QWORD *)v21 + 1) = v20;
  *((_QWORD *)v21 + 2) = v19;
  *((_QWORD *)v21 + 3) = 0;

  v22 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v26.receiver = v17;
  v26.super_class = v22;
  v23 = objc_msgSendSuper2(&v26, sel_init);
  sub_1A9064714((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);

  sub_1A9064714((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  return v23;
}

id PartialFeedResponse.__allocating_init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  objc_class *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void **v11;
  void *v12;
  void *v13;
  char *v14;
  char *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  objc_class *v20;
  id v21;
  uint64_t v23;
  objc_super v24;

  v7 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (char *)objc_allocWithZone(v3);
  sub_1A9064630(a3, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  v11 = (void **)&v10[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(_QWORD *)&v10[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(_QWORD *)&v10[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1A9064630((uint64_t)v9, (uint64_t)&v10[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params], (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  v12 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  v13 = *v11;
  *v11 = v12;
  v14 = v10;
  v15 = a2;
  v16 = v12;

  v17 = MEMORY[0x1E0DEE9D8];
  v18 = sub_1A91154C8(MEMORY[0x1E0DEE9D8]);
  v19 = &v14[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(_QWORD *)v19 = v17;
  *((_QWORD *)v19 + 1) = v18;
  *((_QWORD *)v19 + 2) = v17;
  *((_QWORD *)v19 + 3) = 0;

  v20 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v24.receiver = v14;
  v24.super_class = v20;
  v21 = objc_msgSendSuper2(&v24, sel_init);
  sub_1A9064714((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);

  sub_1A9064714(a3, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  return v21;
}

id PartialFeedRequest.__allocating_init(storeID:)(uint64_t a1)
{
  objc_class *v1;
  _BYTE *v3;
  objc_super v5;

  v3 = objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___MTPartialFeedRequest_limit] = 25;
  *(_QWORD *)&v3[OBJC_IVAR___MTPartialFeedRequest_sections] = MEMORY[0x1E0DEE9D8];
  v3[OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for BaseFeedRequest();
  return objc_msgSendSuper2(&v5, sel_init);
}

id PartialFeedRequest.init(storeID:)(uint64_t a1)
{
  _BYTE *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR___MTPartialFeedRequest_limit] = 25;
  *(_QWORD *)&v1[OBJC_IVAR___MTPartialFeedRequest_sections] = MEMORY[0x1E0DEE9D8];
  v1[OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for BaseFeedRequest();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t sub_1A913D2C8()
{
  return swift_bridgeObjectRelease();
}

id PartialFeedRequest.__deallocating_deinit(uint64_t a1)
{
  return sub_1A913E33C(a1, type metadata accessor for PartialFeedRequest);
}

uint64_t sub_1A913D2F4()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  sub_1A92FB71C();
  v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  swift_beginAccess();
  v2 = *v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A93F8E20();
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    sub_1A93F91E0();
    if (swift_dynamicCastMetatype() || (v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = (_QWORD *)(v3 + 32);
      while (*v6)
      {
        ++v6;
        if (!--v5)
          goto LABEL_3;
      }
      swift_bridgeObjectRelease();
      return v3 | 1;
    }
  }
  return v2;
}

uint64_t sub_1A913D488(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;

  sub_1A92FB71C();
  if ((a1 & 0x8000000000000000) != 0)
    goto LABEL_20;
  type metadata accessor for PartialFeedRequest();
  v5 = swift_dynamicCastClassUnconditional() + OBJC_IVAR___MTPartialFeedRequest_sections;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v5 + 16) <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v6 = *(_QWORD *)(*(_QWORD *)v5 + 8 * a1 + 32);
  if (v6 == 1)
  {
    v10 = (_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
    swift_beginAccess();
    if ((a2 & 0x8000000000000000) == 0)
    {
      if (*(_QWORD *)((*v10 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
      {
        v8 = *(_QWORD *)(*v10 + 8 * a2 + 32);
        goto LABEL_12;
      }
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (!v6)
  {
    v7 = (_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
    swift_beginAccess();
    v8 = v7[3];
    if (!v8)
    {
      if ((a2 & 0x8000000000000000) == 0)
      {
        if (*(_QWORD *)((*v7 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
        {
          v9 = *(_QWORD *)(*v7 + 8 * a2 + 32);
          swift_unknownObjectRetain();
LABEL_13:
          swift_unknownObjectRetain();
          return v9;
        }
        goto LABEL_18;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_12:
    v9 = v8;
    goto LABEL_13;
  }
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t sub_1A913D688(unint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  BOOL v15;
  _BYTE v16[40];
  __int128 v17;
  __int128 v18;

  type metadata accessor for PartialFeedRequest();
  result = swift_dynamicCastClassUnconditional();
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v4 = result + OBJC_IVAR___MTPartialFeedRequest_sections;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v4 + 16) <= a1)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v5 = *(_QWORD *)(*(_QWORD *)v4 + 8 * a1 + 32);
  if (!v5)
    return 1;
  if (v5 == 1)
  {
    v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response);
    swift_beginAccess();
    v7 = *v6;
    v8 = *(_QWORD *)(*v6 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_bridgeObjectRetain();
        sub_1A93F8C1C();
        if (*(_QWORD *)(v11 + 16) && (v12 = sub_1A90A597C((uint64_t)v16), (v13 & 1) != 0))
        {
          sub_1A906443C(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v17);
        }
        else
        {
          v17 = 0u;
          v18 = 0u;
        }
        sub_1A90A5908((uint64_t)v16);
        if (*((_QWORD *)&v18 + 1))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC490);
          if ((swift_dynamicCast() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v14 = MEMORY[0x61746174];
            result = swift_bridgeObjectRelease();
            goto LABEL_16;
          }
        }
        else
        {
          sub_1A905FD54((uint64_t)&v17, qword_1ED2AC800);
        }
        result = swift_bridgeObjectRelease();
        v14 = 0;
LABEL_16:
        v15 = __CFADD__(v9, v14);
        v9 += v14;
        if (v15)
        {
          __break(1u);
          goto LABEL_23;
        }
        if (v8 == ++v10)
        {
          swift_bridgeObjectRelease();
          return v9;
        }
      }
    }
    return 0;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A913D8F0()
{
  uint64_t v0;

  type metadata accessor for PartialFeedRequest();
  v0 = swift_dynamicCastClassUnconditional() + OBJC_IVAR___MTPartialFeedRequest_sections;
  swift_beginAccess();
  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

char *sub_1A913D9D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  uint64_t (**v8)();
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _QWORD *v13;
  objc_super v15;

  v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x100))();
  v5 = v4;
  v6 = (objc_class *)type metadata accessor for GenericDataSourceSection();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = (uint64_t (**)())&v7[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  *v8 = sub_1A9123748;
  v8[1] = 0;
  v9 = (uint64_t *)&v7[OBJC_IVAR___MTGenericDataSourceSection_storedTitle];
  *v9 = v3;
  v9[1] = v5;
  v15.receiver = v7;
  v15.super_class = v6;
  v10 = (char *)objc_msgSendSuper2(&v15, sel_init);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = a1;
  v12 = (uint64_t (**)())&v10[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  swift_beginAccess();
  *v12 = sub_1A913E550;
  v12[1] = (uint64_t (*)())v11;
  v13 = v1;
  swift_release();
  return v10;
}

uint64_t sub_1A913DAE0(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for PartialFeedRequest();
  result = swift_dynamicCastClassUnconditional();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  v5 = result + OBJC_IVAR___MTPartialFeedRequest_sections;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v5 + 16) <= a2)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v6 = *(_QWORD *)(*(_QWORD *)v5 + 8 * a2 + 32);
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 = a1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response;
    result = swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v7 + 16))
    {
      v8 = swift_bridgeObjectRetain();
      _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0(v8);
      v10 = v9;
      swift_bridgeObjectRelease();
      if (v10)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
      return 0;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  return 0;
}

uint64_t sub_1A913DD04(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD058);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PartialFeedRequest();
  v8 = swift_dynamicCastClassUnconditional();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v9 = v8 + OBJC_IVAR___MTPartialFeedRequest_sections;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v9 + 16) <= a1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v10 = *(_QWORD *)(*(_QWORD *)v9 + 8 * a1 + 32);
  if (v10)
  {
    if (v10 == 1)
    {
      if (qword_1ED2AD260 == -1)
        return sub_1A93F7044();
LABEL_17:
      swift_once();
      return sub_1A93F7044();
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1A913D488(a1, 0);
  type metadata accessor for ServerPodcastEpisode();
  v11 = (void *)swift_dynamicCastClassUnconditional();
  v12 = (_BYTE *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial);
  swift_beginAccess();
  LOBYTE(v12) = *v12;
  swift_storeEnumTagMultiPayload();
  v13 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  type metadata accessor for EyebrowBuilder(0);
  v14 = swift_allocObject();
  v15 = v11;
  v16 = sub_1A913E36C((uint64_t)v15, (char)v12, (uint64_t)v7, 0, 1, 0, 0, (uint64_t)v4, 1, 0, v14);
  swift_beginAccess();
  v17 = *(_QWORD *)(v16 + 16);
  if (*(_QWORD *)(v16 + 24))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_1ED2AD260 != -1)
      swift_once();
    v17 = sub_1A93F7044();
  }
  swift_release();

  return v17;
}

unint64_t sub_1A913E054(unint64_t a1)
{
  unint64_t result;
  unint64_t v3;

  type metadata accessor for PartialFeedRequest();
  result = swift_dynamicCastClassUnconditional();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result + OBJC_IVAR___MTPartialFeedRequest_sections;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v3 + 16) <= a1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = *(_QWORD *)(*(_QWORD *)v3 + 8 * a1 + 32);
  if (result > 1)
LABEL_7:
    __break(1u);
  return result;
}

BOOL PartialFeedResponse.SectionType.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

void *static PartialFeedResponse.SectionType.allCases.getter()
{
  return &unk_1E54D6A18;
}

_QWORD *sub_1A913E124@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

void sub_1A913E154(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E54D6A48;
}

id PartialFeedResponse.init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void **v10;
  void *v11;
  void *v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  objc_class *v19;
  id v20;
  uint64_t v22;
  objc_super v23;

  v7 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9064630(a3, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  v10 = (void **)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(_QWORD *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1A9064630((uint64_t)v9, (uint64_t)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params], (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  v11 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  v12 = *v10;
  *v10 = v11;
  v13 = v3;
  v14 = a2;
  v15 = v11;

  v16 = MEMORY[0x1E0DEE9D8];
  v17 = sub_1A91154C8(MEMORY[0x1E0DEE9D8]);
  v18 = &v13[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(_QWORD *)v18 = v16;
  *((_QWORD *)v18 + 1) = v17;
  *((_QWORD *)v18 + 2) = v16;
  *((_QWORD *)v18 + 3) = 0;

  v19 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v23.receiver = v13;
  v23.super_class = v19;
  v20 = objc_msgSendSuper2(&v23, sel_init);
  sub_1A9064714((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);

  sub_1A9064714(a3, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  return v20;
}

uint64_t type metadata accessor for PartialFeedResponse()
{
  uint64_t result;

  result = qword_1EEAB8000;
  if (!qword_1EEAB8000)
    return swift_getSingletonMetadata();
  return result;
}

id PartialFeedResponse.__deallocating_deinit()
{
  return sub_1A913E33C(0, type metadata accessor for PartialFeedResponse);
}

id sub_1A913E33C(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1A913E36C(uint64_t a1, char a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  ValueMetadata *v23;
  _UNKNOWN **v24;

  v23 = &type metadata for IntermediateEyebrowBuilderEpisode;
  v24 = &protocol witness table for IntermediateEyebrowBuilderEpisode;
  v21 = a1;
  v22 = a2;
  *(_OWORD *)(a11 + 32) = 0u;
  *(_OWORD *)(a11 + 48) = 0u;
  *(_OWORD *)(a11 + 64) = 0u;
  *(_OWORD *)(a11 + 80) = 0u;
  *(_OWORD *)(a11 + 96) = 0u;
  *(_OWORD *)(a11 + 112) = 0u;
  *(_OWORD *)(a11 + 128) = 0u;
  *(_WORD *)(a11 + 160) = 0;
  *(_OWORD *)(a11 + 16) = 0u;
  *(_OWORD *)(a11 + 144) = 0u;
  sub_1A905DC3C((uint64_t)&v21, a11 + 168);
  sub_1A9064630(a3, a11 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, type metadata accessor for EyebrowBuilder.ListContext);
  *(_BYTE *)(a11 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) = a4;
  *(_BYTE *)(a11 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase) = a5;
  swift_beginAccess();
  *(_QWORD *)(a11 + 144) = a6;
  *(_QWORD *)(a11 + 152) = a7;
  swift_bridgeObjectRelease();
  sub_1A907FAE4(a8, a11 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_abbreviatedPubDateConfig);
  *(_BYTE *)(a11 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_showsSubscriptionBadge) = a9;
  *(_BYTE *)(a11 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_hostingViewHasLimitedSpace) = a10;
  sub_1A907DDB4();
  v17 = sub_1A907D31C();
  v19 = v18;
  sub_1A905FD54(a8, &qword_1ED2AD058);
  sub_1A9064714(a3, type metadata accessor for EyebrowBuilder.ListContext);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v21);
  swift_beginAccess();
  *(_QWORD *)(a11 + 16) = v17;
  *(_QWORD *)(a11 + 24) = v19;
  swift_bridgeObjectRelease();
  return a11;
}

uint64_t type metadata accessor for PartialFeedRequest()
{
  return objc_opt_self();
}

uint64_t sub_1A913E52C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A913E550()
{
  uint64_t v0;

  return sub_1A913DAE0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1A913E55C()
{
  unint64_t result;

  result = qword_1EEAB7F98;
  if (!qword_1EEAB7F98)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PartialFeedResponse.SectionType, &type metadata for PartialFeedResponse.SectionType);
    atomic_store(result, (unint64_t *)&qword_1EEAB7F98);
  }
  return result;
}

unint64_t sub_1A913E5A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEAB7FA0;
  if (!qword_1EEAB7FA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEAB7FA8);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEAB7FA0);
  }
  return result;
}

uint64_t sub_1A913E5F0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___MTPartialFeedRequest_limit);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1A913E640(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___MTPartialFeedRequest_limit);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_1A913E68C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___MTPartialFeedRequest_sections);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A913E6E4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1A913E734(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t method lookup function for PartialFeedRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PartialFeedRequest.limit.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of PartialFeedRequest.limit.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of PartialFeedRequest.limit.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of PartialFeedRequest.sections.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of PartialFeedRequest.sections.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of PartialFeedRequest.sections.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of PartialFeedRequest.showTypeIsSerial.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of PartialFeedRequest.showTypeIsSerial.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of PartialFeedRequest.showTypeIsSerial.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t sub_1A913E888()
{
  return type metadata accessor for PartialFeedResponse();
}

uint64_t sub_1A913E890()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for PartialFeedResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PartialFeedResponse.sectionTitle(at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of PartialFeedResponse.sectionType(at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

ValueMetadata *type metadata accessor for PartialFeedResponse.SectionType()
{
  return &type metadata for PartialFeedResponse.SectionType;
}

id static SHCatalog.episodeCatalog(with:)(void *a1)
{
  uint64_t inited;
  id v3;
  id v4;
  unint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405960;
  *(_QWORD *)(inited + 32) = a1;
  v6 = inited;
  sub_1A93F8328();
  v3 = a1;
  v4 = sub_1A913EAD0(v6);
  swift_bridgeObjectRelease();
  return v4;
}

id static SHCatalog.episodeCatalog(with:)(unint64_t a1)
{
  return sub_1A913EAD0(a1);
}

id sub_1A913E9C4()
{
  id v0;
  double v1;
  id v2;
  id v3;
  id v4;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD74D0]), sel_init);
  objc_msgSend(v0, sel_setNumHistogramBuckets_, 2);
  LODWORD(v1) = 2.0;
  objc_msgSend(v0, sel_setScoreThreshold_, v1);
  v2 = objc_allocWithZone(MEMORY[0x1E0CD74E8]);
  v3 = v0;
  v4 = objc_msgSend(v2, sel_initWithLowerBound_upperBound_, 1.0, 86400.0);
  objc_msgSend(v3, sel_setSignatureDurationRange_, v4);

  result = objc_msgSend(v3, sel_setSupportsSignatureTracking_, 1);
  qword_1EEAB8010 = (uint64_t)v3;
  return result;
}

id static SHCustomCatalogConfiguration.podcasts.getter()
{
  if (qword_1EEAB6CB8 != -1)
    swift_once();
  return (id)qword_1EEAB8010;
}

id sub_1A913EAD0(unint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  unsigned int v13;
  id v14;
  id v15;
  id v16;
  id v18[2];

  v18[1] = *(id *)MEMORY[0x1E0C80C00];
  if (qword_1EEAB6CB8 != -1)
    goto LABEL_16;
  while (1)
  {
    v2 = (void *)qword_1EEAB8010;
    v3 = objc_allocWithZone(MEMORY[0x1E0CD74C8]);
    v18[0] = 0;
    v4 = v2;
    v5 = objc_msgSend(v3, sel_initWithConfiguration_error_, v4, v18);
    if (!v5)
    {
      v15 = v18[0];
      sub_1A93F7128();

      swift_willThrow();
      return v5;
    }
    v6 = v18[0];

    if (a1 >> 62)
      break;
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v7)
      goto LABEL_18;
LABEL_5:
    v8 = 4;
    while (1)
    {
      v9 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AF4129DC](v8 - 4, a1) : *(id *)(a1 + 8 * v8);
      v10 = v9;
      v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      sub_1A913ED14();
      v12 = (void *)sub_1A93F82F8();
      v18[0] = 0;
      v13 = objc_msgSend(v5, sel_addReferenceSignature_representingMediaItems_error_, v10, v12, v18);

      if (!v13)
      {
        v16 = v18[0];
        swift_bridgeObjectRelease();
        sub_1A93F7128();

        swift_willThrow();
        return v5;
      }
      v14 = v18[0];

      ++v8;
      if (v11 == v7)
        goto LABEL_18;
    }
    __break(1u);
LABEL_16:
    swift_once();
  }
  swift_bridgeObjectRetain();
  v7 = sub_1A93F8E5C();
  if (v7)
    goto LABEL_5;
LABEL_18:
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_1A913ED14()
{
  unint64_t result;

  result = qword_1EEAB8018;
  if (!qword_1EEAB8018)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEAB8018);
  }
  return result;
}

uint64_t ServerGenericResponse.data.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ServerGenericResponse.init(data:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1A913ED60(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A913EDD4()
{
  return 1635017060;
}

uint64_t sub_1A913EDE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A913ED60(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A913EE18@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A910F950();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1A913EE4C(uint64_t a1)
{
  MEMORY[0x1AF414014](&unk_1A94071A8, a1);
  return sub_1A93F945C();
}

uint64_t sub_1A913EE80(uint64_t a1)
{
  MEMORY[0x1AF414014](&unk_1A94071A8, a1);
  return sub_1A93F9468();
}

uint64_t ServerGenericResponse.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];

  v4 = a2[3];
  v5 = a2[4];
  v14 = a2[2];
  v15 = v5;
  v6 = type metadata accessor for ServerGenericResponse.CodingKeys(255, v14, v4, v5);
  MEMORY[0x1AF414014](&unk_1A94071A8, v6);
  v7 = sub_1A93F9048();
  v16 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - v8;
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93D8();
  v17[2] = v10;
  v11 = sub_1A93F83D0();
  v17[0] = v15;
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF10], v11, v17);
  sub_1A93F9030();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v9, v7);
}

uint64_t type metadata accessor for ServerGenericResponse.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ServerGenericResponse.CodingKeys);
}

uint64_t ServerGenericResponse.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  _QWORD v17[3];

  v15[0] = a5;
  v15[1] = a2;
  v16 = a3;
  v7 = type metadata accessor for ServerGenericResponse.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1AF414014](&unk_1A94071A8, v7);
  v8 = sub_1A93F8FA0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v15 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93C0();
  if (!v5)
  {
    v12 = (_QWORD *)v15[0];
    v13 = sub_1A93F83D0();
    v17[0] = v16;
    MEMORY[0x1AF414014](MEMORY[0x1E0DEAF40], v13, v17);
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *v12 = v17[2];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1A913F18C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return ServerGenericResponse.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1A913F1AC(_QWORD *a1, _QWORD *a2)
{
  return ServerGenericResponse.encode(to:)(a1, a2);
}

uint64_t type metadata accessor for ServerGenericResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ServerGenericResponse);
}

uint64_t sub_1A913F1CC(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A913F20C + 4 * asc_1A9407010[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A913F22C + 4 * byte_1A9407015[v4]))();
}

_BYTE *sub_1A913F20C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A913F22C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A913F234(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A913F23C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A913F244(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A913F24C(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1A913F258()
{
  JUMPOUT(0x1AF414014);
}

void sub_1A913F268()
{
  JUMPOUT(0x1AF414014);
}

void sub_1A913F278()
{
  JUMPOUT(0x1AF414014);
}

id FullFeedRequest.__allocating_init(storeID:isSerial:hasSeasons:)(uint64_t a1, char a2, char a3)
{
  objc_class *v3;
  _BYTE *v7;
  objc_super v9;

  v7 = objc_allocWithZone(v3);
  v7[OBJC_IVAR___MTFullFeedRequest_isSerial] = a2;
  v7[OBJC_IVAR___MTFullFeedRequest_hasSeasons] = a3;
  *(_QWORD *)&v7[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v9.receiver = v7;
  v9.super_class = (Class)type metadata accessor for BaseFeedRequest();
  return objc_msgSendSuper2(&v9, sel_init);
}

id FullFeedRequest.init(storeID:isSerial:hasSeasons:)(uint64_t a1, char a2, char a3)
{
  _BYTE *v3;
  objc_super v5;

  v3[OBJC_IVAR___MTFullFeedRequest_isSerial] = a2;
  v3[OBJC_IVAR___MTFullFeedRequest_hasSeasons] = a3;
  *(_QWORD *)&v3[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for BaseFeedRequest();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_1A913F3F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t inited;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  __int128 v27[2];
  uint64_t v28;
  char v29;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  memset(v27, 0, sizeof(v27));
  v29 = 4;
  v26 = 1;
  v25 = 1;
  v24 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7F0);
  inited = swift_initStackObject();
  v22 = xmmword_1A9405520;
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = &unk_1E54D68D0;
  v7 = sub_1A91129C4(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v22;
  v23 = *(_QWORD *)(v1 + OBJC_IVAR___MTBaseFeedRequest_storeID);
  *(_QWORD *)(v8 + 32) = sub_1A93F9060();
  *(_QWORD *)(v8 + 40) = v9;
  LOBYTE(v23) = 1;
  v10 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  v13 = sub_1A9112728(v11);
  sub_1A911273C(v11);
  v15 = v14;
  v16 = sub_1A9112844(v11);
  v17 = sub_1A9112858(v11);
  *((_QWORD *)&v21 + 1) = sub_1A911286C(v11);
  *(_QWORD *)&v21 = v17;
  *((_QWORD *)&v20 + 1) = v11;
  *((_QWORD *)&v19 + 1) = v16;
  *(_QWORD *)&v20 = v7;
  *(_QWORD *)&v19 = v11;
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v27, &v26, &v25, &v24, v12, v13, v15, v11, a1, v19, v20, v11, v8, (char *)&v23, 300, 0, v21, 0, 1,
           1,
           (uint64_t)v5,
           0,
           0,
           0,
           0,
           0,
           v11,
           0,
           0,
           2);
}

id sub_1A913F61C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void **v13;
  void *v14;
  void *v15;
  char *v16;
  char *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  objc_class *v22;
  id v23;
  id v24;
  uint64_t v26;
  objc_super v27;

  v6 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - v10;
  sub_1A9114B88(a3, (uint64_t)&v26 - v10);
  v12 = (char *)objc_allocWithZone((Class)type metadata accessor for FullFeedResponse());
  type metadata accessor for FullFeedRequest();
  *(_QWORD *)&v12[OBJC_IVAR___MTFullFeedResponse_fullFeedRequest] = swift_dynamicCastClassUnconditional();
  sub_1A9114B88((uint64_t)v11, (uint64_t)v8);
  v13 = (void **)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(_QWORD *)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(_QWORD *)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1A9114B88((uint64_t)v8, (uint64_t)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params]);
  v14 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  v15 = *v13;
  *v13 = v14;
  v16 = a2;
  swift_bridgeObjectRetain();
  v17 = v12;
  v18 = v14;

  v19 = MEMORY[0x1E0DEE9D8];
  v20 = sub_1A91154C8(MEMORY[0x1E0DEE9D8]);
  v21 = &v17[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(_QWORD *)v21 = v19;
  *((_QWORD *)v21 + 1) = v20;
  *((_QWORD *)v21 + 2) = v19;
  *((_QWORD *)v21 + 3) = 0;

  v22 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v27.receiver = v17;
  v27.super_class = v22;
  v23 = objc_msgSendSuper2(&v27, sel_init);
  sub_1A9114C30((uint64_t)v8);

  v24 = v23;
  sub_1A92FB71C();

  sub_1A9114C30((uint64_t)v11);
  return v24;
}

id FullFeedResponse.__allocating_init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void **v12;
  void *v13;
  void *v14;
  char *v15;
  char *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  objc_class *v21;
  id v22;
  id v23;
  uint64_t v25;
  objc_super v26;

  v4 = v3;
  v8 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (char *)objc_allocWithZone(v4);
  type metadata accessor for FullFeedRequest();
  *(_QWORD *)&v11[OBJC_IVAR___MTFullFeedResponse_fullFeedRequest] = swift_dynamicCastClassUnconditional();
  sub_1A9114B88(a3, (uint64_t)v10);
  v12 = (void **)&v11[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(_QWORD *)&v11[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1A9114B88((uint64_t)v10, (uint64_t)&v11[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params]);
  v13 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  v14 = *v12;
  *v12 = v13;
  v15 = a2;
  v16 = v11;
  v17 = v13;

  v18 = MEMORY[0x1E0DEE9D8];
  v19 = sub_1A91154C8(MEMORY[0x1E0DEE9D8]);
  v20 = &v16[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(_QWORD *)v20 = v18;
  *((_QWORD *)v20 + 1) = v19;
  *((_QWORD *)v20 + 2) = v18;
  *((_QWORD *)v20 + 3) = 0;

  v21 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v26.receiver = v16;
  v26.super_class = v21;
  v22 = objc_msgSendSuper2(&v26, sel_init);
  sub_1A9114C30((uint64_t)v10);
  v23 = v22;
  sub_1A92FB71C();

  sub_1A9114C30(a3);
  return v23;
}

void FullFeedRequest.__allocating_init(storeID:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FullFeedRequest.init(storeID:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FullFeedRequest.__deallocating_deinit(uint64_t a1)
{
  return sub_1A913E33C(a1, type metadata accessor for FullFeedRequest);
}

id FullFeedResponse.init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void **v10;
  void *v11;
  void *v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  objc_class *v19;
  id v20;
  id v21;
  uint64_t v23;
  objc_super v24;

  v7 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FullFeedRequest();
  *(_QWORD *)&v3[OBJC_IVAR___MTFullFeedResponse_fullFeedRequest] = swift_dynamicCastClassUnconditional();
  sub_1A9114B88(a3, (uint64_t)v9);
  v10 = (void **)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(_QWORD *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1A9114B88((uint64_t)v9, (uint64_t)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params]);
  v11 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  v12 = *v10;
  *v10 = v11;
  v13 = a2;
  v14 = v3;
  v15 = v11;

  v16 = MEMORY[0x1E0DEE9D8];
  v17 = sub_1A91154C8(MEMORY[0x1E0DEE9D8]);
  v18 = &v14[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(_QWORD *)v18 = v16;
  *((_QWORD *)v18 + 1) = v17;
  *((_QWORD *)v18 + 2) = v16;
  *((_QWORD *)v18 + 3) = 0;

  v19 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v24.receiver = v14;
  v24.super_class = v19;
  v20 = objc_msgSendSuper2(&v24, sel_init);
  sub_1A9114C30((uint64_t)v9);
  v21 = v20;
  sub_1A92FB71C();

  sub_1A9114C30(a3);
  return v21;
}

uint64_t type metadata accessor for FullFeedResponse()
{
  uint64_t result;

  result = qword_1EEAB8088;
  if (!qword_1EEAB8088)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FullFeedRequest()
{
  return objc_opt_self();
}

uint64_t sub_1A913FC6C()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  swift_beginAccess();
  v2 = *v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A93F8E20();
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    sub_1A93F91E0();
    if (swift_dynamicCastMetatype() || (v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = (_QWORD *)(v3 + 32);
      while (*v6)
      {
        ++v6;
        if (!--v5)
          goto LABEL_3;
      }
      swift_bridgeObjectRelease();
      return v3 | 1;
    }
  }
  return v2;
}

unint64_t sub_1A913FDFC(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  if (*(_BYTE *)(*(_QWORD *)(v2 + OBJC_IVAR___MTFullFeedResponse_fullFeedRequest)
                + OBJC_IVAR___MTFullFeedRequest_isSerial) != 1)
  {
    swift_beginAccess();
    if ((a2 & 0x8000000000000000) == 0)
    {
      if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
      {
        v10 = *(_QWORD *)(*v4 + 8 * a2 + 32);
        swift_unknownObjectRetain();
        return v10;
      }
      goto LABEL_20;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    v10 = MEMORY[0x1AF4129DC](a2, v2);
    goto LABEL_15;
  }
  result = swift_beginAccess();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v7 = v4[2];
  if (*(_QWORD *)(v7 + 16) <= a1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v8 = v4[1];
  if (*(_QWORD *)(v8 + 16) && (result = sub_1A906C428(*(_QWORD *)(v7 + 8 * a1 + 32)), (v9 & 1) != 0))
  {
    v2 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * result);
    result = swift_bridgeObjectRetain();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9D8];
  }
  if ((v2 & 0xC000000000000001) != 0)
    goto LABEL_21;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v10 = *(_QWORD *)(v2 + 8 * a2 + 32);
    swift_unknownObjectRetain();
LABEL_15:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A913FFAC(unint64_t a1)
{
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 + OBJC_IVAR___MTFullFeedResponse_fullFeedRequest)
                          + OBJC_IVAR___MTFullFeedRequest_isSerial);
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  if (v2 != 1)
  {
    swift_beginAccess();
    if (!(*v3 >> 62))
      return *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_14;
  }
  swift_beginAccess();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v10 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if ((v10 & 0x8000000000000000) == 0)
      return v10;
    goto LABEL_18;
  }
  v5 = v3[2];
  if (*(_QWORD *)(v5 + 16) <= a1)
  {
    __break(1u);
  }
  else
  {
    v6 = v3[1];
    if (*(_QWORD *)(v6 + 16) && (v7 = sub_1A906C428(*(_QWORD *)(v5 + 8 * a1 + 32)), (v8 & 1) != 0))
    {
      v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
      swift_bridgeObjectRetain();
    }
    else
    {
      v9 = MEMORY[0x1E0DEE9D8];
    }
    if (!(v9 >> 62))
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
      return v10;
    }
  }
  swift_bridgeObjectRetain();
  v10 = sub_1A93F8E5C();
  swift_bridgeObjectRelease_n();
  if ((v10 & 0x8000000000000000) == 0)
    return v10;
LABEL_18:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t sub_1A91401AC()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR___MTFullFeedResponse_fullFeedRequest)
                + OBJC_IVAR___MTFullFeedRequest_isSerial) != 1)
    return 1;
  v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache;
  swift_beginAccess();
  return *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
}

id sub_1A9140294(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  uint64_t (**v6)();
  uint64_t *v7;
  objc_super v9;

  v1 = sub_1A91403C0(a1);
  v3 = v2;
  v4 = (objc_class *)type metadata accessor for GenericDataSourceSection();
  v5 = (char *)objc_allocWithZone(v4);
  v6 = (uint64_t (**)())&v5[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  *v6 = sub_1A9123748;
  v6[1] = 0;
  v7 = (uint64_t *)&v5[OBJC_IVAR___MTGenericDataSourceSection_storedTitle];
  *v7 = v1;
  v7[1] = v3;
  v9.receiver = v5;
  v9.super_class = v4;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_1A91403C0(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache;
  swift_beginAccess();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v4 + 16) <= a1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___MTFullFeedResponse_fullFeedRequest);
  if (*(_BYTE *)(v5 + OBJC_IVAR___MTFullFeedRequest_isSerial) != 1)
    return 0;
  v6 = *(_QWORD *)(v4 + 8 * a1 + 32);
  if (v6 == -1)
  {
    if (qword_1ED2AD260 == -1)
      return sub_1A93F7044();
LABEL_19:
    swift_once();
    return sub_1A93F7044();
  }
  if (!v6)
  {
    if (*(_BYTE *)(v5 + OBJC_IVAR___MTFullFeedRequest_hasSeasons) == 1)
    {
      if (qword_1ED2AD260 == -1)
        return sub_1A93F7044();
      goto LABEL_19;
    }
    return 0;
  }
  if (*(_BYTE *)(v5 + OBJC_IVAR___MTFullFeedRequest_hasSeasons) != 1)
    return 0;
  if (qword_1ED2AD260 != -1)
    swift_once();
  sub_1A93F7044();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v8 = swift_allocObject();
  v9 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v8 + 16) = xmmword_1A9405520;
  v10 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v8 + 56) = v9;
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 32) = v6;
  v7 = sub_1A93F801C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

void sub_1A9140644()
{
  uint64_t v0;

}

id FullFeedResponse.__deallocating_deinit()
{
  return sub_1A913E33C(0, type metadata accessor for FullFeedResponse);
}

uint64_t method lookup function for FullFeedRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FullFeedRequest.__allocating_init(storeID:isSerial:hasSeasons:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t sub_1A9140688()
{
  return type metadata accessor for FullFeedResponse();
}

uint64_t sub_1A9140690()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FullFeedResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t PodcastPlayerItem.adamID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t PodcastPlayerItem.feedURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastPlayerItem.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastPlayerItem.displayType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastPlayerItem.isSubscribeable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t PodcastPlayerItem.init(adamID:feedURL:title:displayType:isSubscribeable:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8;
  return result;
}

uint64_t EpisodePlayerItem.adamID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t EpisodePlayerItem.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EpisodePlayerItem.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EpisodePlayerItem.guid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EpisodePlayerItem.pubDate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t EpisodePlayerItem.init(adamID:title:subtitle:guid:pubDate:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_BYTE *)(a9 + 64) = a10 & 1;
  return result;
}

uint64_t PlayerItem.podcast.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_BYTE *)(v1 + 56);
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PlayerItem.episode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __int128 v3;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 128);
  v3 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 64) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 PlayerItem.init(podcast:episode:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char v4;
  char v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;

  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 56);
  v5 = *(_BYTE *)(a2 + 64);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a3 + 48) = v3;
  *(_BYTE *)(a3 + 56) = v4;
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 64) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 80) = v7;
  result = *(__n128 *)(a2 + 32);
  v9 = *(_OWORD *)(a2 + 48);
  *(__n128 *)(a3 + 96) = result;
  *(_OWORD *)(a3 + 112) = v9;
  *(_BYTE *)(a3 + 128) = v5;
  return result;
}

uint64_t PodcastsStateCoordinatorPersistentStore.__allocating_init(syncKeysRepository:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedURLComposer()), sel_init);
  *(_QWORD *)(v2 + 24) = a1;
  return v2;
}

uint64_t PodcastsStateCoordinatorPersistentStore.init(syncKeysRepository:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedURLComposer()), sel_init);
  *(_QWORD *)(v1 + 24) = a1;
  return v1;
}

id PodcastsStateCoordinatorPersistentStore.insertPodcastInStoreState(in:for:)(char *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  char v20;
  char v21;
  ValueMetadata *v22;
  unint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  char v28;
  char v29;
  ValueMetadata *v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 *v46;
  ValueMetadata *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v53[4];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  char *v60;
  _QWORD v61[3];
  ValueMetadata *v62;
  unint64_t v63;

  v60 = a1;
  v4 = sub_1A93F726C();
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v53 - v11;
  v13 = *a2;
  v53[1] = a2[1];
  v14 = a2[2];
  v53[2] = a2[3];
  v15 = a2[4];
  v53[3] = a2[5];
  v54 = v14;
  v16 = a2[6];
  v58 = v15;
  v59 = (id)v16;
  v55 = v2;
  v17 = *(void **)(v2 + 24);
  v18 = (uint64_t)v17 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v19 = v17;
  swift_beginAccess();
  if ((isRunningUnitTests() & 1) == 0
    && (objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod) & 1) != 0
    && (v62 = &type metadata for Podcasts,
        v63 = sub_1A90A4238(),
        LOBYTE(v61[0]) = 32,
        v20 = sub_1A93F7500(),
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v61),
        (v20 & 1) != 0))
  {
    v21 = 0;
  }
  else
  {
    sub_1A905DC3C(v18, (uint64_t)v61);
    v22 = v62;
    v23 = v63;
    __swift_project_boxed_opaque_existential_1(v61, (uint64_t)v62);
    v21 = (*(uint64_t (**)(_QWORD, ValueMetadata *, unint64_t))(v23 + 80))(0, v22, v23);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
  }
  v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v24 = sub_1A9117E64(0, v24[2] + 1, 1, v24);
  v26 = v24[2];
  v25 = v24[3];
  if (v26 >= v25 >> 1)
    v24 = sub_1A9117E64((_QWORD *)(v25 > 1), v26 + 1, 1, v24);
  v24[2] = v26 + 1;
  v27 = &v24[2 * v26];
  v27[4] = 0;
  *((_BYTE *)v27 + 40) = v21 & 1;
  if ((isRunningUnitTests() & 1) == 0
    && objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod)
    && (v62 = &type metadata for Podcasts,
        v63 = sub_1A90A4238(),
        LOBYTE(v61[0]) = 32,
        v28 = sub_1A93F7500(),
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v61),
        (v28 & 1) != 0))
  {
    v29 = 0;
  }
  else
  {
    sub_1A905DC3C(v18, (uint64_t)v61);
    v30 = v62;
    v31 = v63;
    __swift_project_boxed_opaque_existential_1(v61, (uint64_t)v62);
    v29 = (*(uint64_t (**)(uint64_t, ValueMetadata *, unint64_t))(v31 + 80))(1, v30, v31);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
  }
  v32 = v57;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v24 = sub_1A9117E64(0, v24[2] + 1, 1, v24);
  v34 = v24[2];
  v33 = v24[3];
  if (v34 >= v33 >> 1)
    v24 = sub_1A9117E64((_QWORD *)(v33 > 1), v34 + 1, 1, v24);
  v24[2] = v34 + 1;
  v35 = &v24[2 * v34];
  v35[4] = 1;
  *((_BYTE *)v35 + 40) = v29 & 1;

  v36 = v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v12, 1, 1, v32);
  if (v54)
  {
    sub_1A93F7248();
    sub_1A914149C((uint64_t)v12);
    sub_1A908F9F4((uint64_t)v9, (uint64_t)v12);
  }
  v37 = v13;
  sub_1A915C7C4((uint64_t)v12, v13, (uint64_t)v6);
  sub_1A93F7170();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v32);
  v38 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v39 = (void *)objc_opt_self();
  v40 = objc_msgSend(v39, sel_defaultShowType);
  if (v58)
  {
    v41 = (void *)sub_1A93F8010();
    if (v59)
    {
LABEL_23:
      v42 = (void *)sub_1A93F8010();
      goto LABEL_26;
    }
  }
  else
  {
    v41 = 0;
    if (v59)
      goto LABEL_23;
  }
  v42 = 0;
LABEL_26:
  v43 = objc_msgSend(v39, sel_insertNewPodcastInManagedObjectContext_subscribed_feedUrl_showType_showTypeInFeed_title_author_provider_imageUrl_description_adamId_displayType_showSpecificUpsellCopy_, v60, 0, v38, v40, 0, v41, 0, 0, 0, 0, v37, v42, 0);

  objc_msgSend(v43, sel_setHidden_, 1);
  objc_msgSend(v43, sel_setImporting_, 1);
  v44 = v24[2];
  if (v44)
  {
    v59 = v43;
    v60 = v12;
    v45 = (uint64_t)v19 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v46 = (unsigned __int8 *)(v24 + 5);
    do
    {
      v49 = *((_QWORD *)v46 - 1);
      v50 = *v46;
      if ((isRunningUnitTests() & 1) != 0
        || (objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod) & 1) == 0
        || (v62 = &type metadata for Podcasts,
            v63 = sub_1A90A4238(),
            LOBYTE(v61[0]) = 32,
            v51 = sub_1A93F7500(),
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v61),
            (v51 & 1) == 0))
      {
        sub_1A905DC3C(v45, (uint64_t)v61);
        v47 = v62;
        v48 = v63;
        __swift_project_boxed_opaque_existential_1(v61, (uint64_t)v62);
        (*(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t))(v48 + 88))(v50, v49, v47, v48);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
      }
      v46 += 16;
      --v44;
    }
    while (v44);
    swift_bridgeObjectRelease();
    v43 = v59;
    v12 = v60;
  }
  swift_bridgeObjectRelease();
  sub_1A914149C((uint64_t)v12);
  return v43;
}

id PodcastsStateCoordinatorPersistentStore.insertPodcastInStoreState(in:for:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  char v7;
  char v8;
  ValueMetadata *v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  char v15;
  char v16;
  ValueMetadata *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  ValueMetadata *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  id v35;
  _QWORD v36[3];
  ValueMetadata *v37;
  unint64_t v38;

  v3 = *a2;
  v4 = *(void **)(v2 + 24);
  v5 = (uint64_t)v4 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v6 = v4;
  swift_beginAccess();
  if ((isRunningUnitTests() & 1) == 0
    && (objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod) & 1) != 0
    && (v37 = &type metadata for Podcasts,
        v38 = sub_1A90A4238(),
        LOBYTE(v36[0]) = 32,
        v7 = sub_1A93F7500(),
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v36),
        (v7 & 1) != 0))
  {
    v8 = 0;
  }
  else
  {
    sub_1A905DC3C(v5, (uint64_t)v36);
    v9 = v37;
    v10 = v38;
    __swift_project_boxed_opaque_existential_1(v36, (uint64_t)v37);
    v8 = (*(uint64_t (**)(_QWORD, ValueMetadata *, unint64_t))(v10 + 80))(0, v9, v10);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  }
  v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v11 = sub_1A9117E64(0, v11[2] + 1, 1, v11);
  v13 = v11[2];
  v12 = v11[3];
  if (v13 >= v12 >> 1)
    v11 = sub_1A9117E64((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
  v11[2] = v13 + 1;
  v14 = &v11[2 * v13];
  v14[4] = 0;
  *((_BYTE *)v14 + 40) = v8 & 1;
  if ((isRunningUnitTests() & 1) == 0
    && objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod)
    && (v37 = &type metadata for Podcasts,
        v38 = sub_1A90A4238(),
        LOBYTE(v36[0]) = 32,
        v15 = sub_1A93F7500(),
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v36),
        (v15 & 1) != 0))
  {
    v16 = 0;
  }
  else
  {
    sub_1A905DC3C(v5, (uint64_t)v36);
    v17 = v37;
    v18 = v38;
    __swift_project_boxed_opaque_existential_1(v36, (uint64_t)v37);
    v16 = (*(uint64_t (**)(uint64_t, ValueMetadata *, unint64_t))(v18 + 80))(1, v17, v18);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v11 = sub_1A9117E64(0, v11[2] + 1, 1, v11);
  v20 = v11[2];
  v19 = v11[3];
  if (v20 >= v19 >> 1)
    v11 = sub_1A9117E64((_QWORD *)(v19 > 1), v20 + 1, 1, v11);
  v11[2] = v20 + 1;
  v21 = &v11[2 * v20];
  v21[4] = 1;
  *((_BYTE *)v21 + 40) = v16 & 1;

  v22 = (void *)objc_opt_self();
  v23 = (void *)sub_1A93F8010();
  v24 = objc_msgSend(v22, sel_insertNewPodcastInManagedObjectContext_subscribed_feedUrl_showType_showTypeInFeed_title_author_provider_imageUrl_description_adamId_displayType_showSpecificUpsellCopy_, a1, 0, v23, objc_msgSend(v22, sel_defaultShowType), 0, 0, 0, 0, 0, 0, v3, 0, 0);

  objc_msgSend(v24, sel_setHidden_, 1);
  objc_msgSend(v24, sel_setImporting_, 1);
  v25 = v11[2];
  if (v25)
  {
    v35 = v24;
    v26 = (uint64_t)v6 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v27 = (unsigned __int8 *)(v11 + 5);
    do
    {
      v30 = *((_QWORD *)v27 - 1);
      v31 = *v27;
      if ((isRunningUnitTests() & 1) != 0
        || (objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod) & 1) == 0
        || (v37 = &type metadata for Podcasts,
            v38 = sub_1A90A4238(),
            LOBYTE(v36[0]) = 32,
            v32 = sub_1A93F7500(),
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v36),
            (v32 & 1) == 0))
      {
        sub_1A905DC3C(v26, (uint64_t)v36);
        v28 = v37;
        v29 = v38;
        __swift_project_boxed_opaque_existential_1(v36, (uint64_t)v37);
        (*(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t))(v29 + 88))(v31, v30, v28, v29);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
      }
      v27 += 16;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    v24 = v35;
  }
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t PodcastsStateCoordinatorPersistentStore.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PodcastsStateCoordinatorPersistentStore.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

id sub_1A9141458(char *a1, uint64_t *a2)
{
  return PodcastsStateCoordinatorPersistentStore.insertPodcastInStoreState(in:for:)(a1, a2);
}

id sub_1A9141478(uint64_t a1, uint64_t *a2)
{
  return PodcastsStateCoordinatorPersistentStore.insertPodcastInStoreState(in:for:)(a1, a2);
}

uint64_t sub_1A914149C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id _s18PodcastsFoundation0A31StateCoordinatorPersistentStoreC13insertEpisode2in3for8asPartOfSo9MTEpisodeCSo22NSManagedObjectContextC_AA0H10PlayerItemVSo9MTPodcastCSgtF_0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  char v16;

  v5 = *a2;
  v6 = a2[2];
  v7 = a2[4];
  v8 = a2[6];
  v9 = *((double *)a2 + 7);
  v16 = *((_BYTE *)a2 + 64);
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_insertNewEpisodeInManagedObjectContext_canSendNotifications_, a1, _s18PodcastsFoundation20NotificationSettingsC07canSendC0SbyFZ_0() & 1);
  objc_msgSend(v11, sel_setPodcast_, a3);
  objc_msgSend(v11, sel_setStoreTrackId_, v5);
  if (v6)
    v12 = (void *)sub_1A93F8010();
  else
    v12 = 0;
  objc_msgSend(v11, sel_setTitle_, v12);

  if (v7)
    v13 = (void *)sub_1A93F8010();
  else
    v13 = 0;
  objc_msgSend(v11, sel_setItunesSubtitle_, v13);

  if (v8)
    v14 = (void *)sub_1A93F8010();
  else
    v14 = 0;
  objc_msgSend(v11, sel_setGuid_, v14);

  if ((v16 & 1) == 0)
    objc_msgSend(v11, sel_setPubDate_, v9);
  return v11;
}

uint64_t initializeWithCopy for PodcastPlayerItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PodcastPlayerItem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PodcastPlayerItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for PodcastPlayerItem(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastPlayerItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastPlayerItem()
{
  return &type metadata for PodcastPlayerItem;
}

uint64_t _s18PodcastsFoundation17PodcastPlayerItemVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EpisodePlayerItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EpisodePlayerItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v4;
  return a1;
}

uint64_t assignWithTake for EpisodePlayerItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodePlayerItem(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodePlayerItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodePlayerItem()
{
  return &type metadata for EpisodePlayerItem;
}

uint64_t destroy for PlayerItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PlayerItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v5 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  v6 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v6;
  v7 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v7;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlayerItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v4;
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for PlayerItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayerItem(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 129))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayerItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 129) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayerItem()
{
  return &type metadata for PlayerItem;
}

uint64_t dispatch thunk of PodcastsStateCoordinatorPersistentStoreProtocol.insertPodcastInStoreState(in:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorPersistentStoreProtocol.insertEpisode(in:for:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t type metadata accessor for PodcastsStateCoordinatorPersistentStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for PodcastsStateCoordinatorPersistentStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorPersistentStore.__allocating_init(syncKeysRepository:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1A9141F44@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  char *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  _QWORD v18[4];

  v2 = v1;
  v4 = *(_QWORD **)v1;
  v5 = v4[10];
  v6 = sub_1A93F8A90();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v18 - v12;
  (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, double))(*(_QWORD *)&v2[v4[14] + 8] + 8))(v18, *(_QWORD *)&v2[v4[13]], *((_QWORD *)v2 + 2), *((_QWORD *)v2 + 3), v11);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC800);
  v14 = swift_dynamicCast();
  v15 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, v14 ^ 1u, 1, v5);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v5) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(a1, &v2[*(_QWORD *)(*(_QWORD *)v2 + 96)], v5);
    v16 = *(void (**)(char *, uint64_t))(v7 + 8);
    v16(v9, v6);
    return ((uint64_t (*)(char *, uint64_t))v16)(v13, v6);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v9, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
}

uint64_t sub_1A91420CC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_1A9142E20(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

void (*sub_1A9142108(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v7 = malloc(v6);
  v3[4] = v7;
  sub_1A9141F44((uint64_t)v7);
  return sub_1A9142188;
}

void sub_1A9142188(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    sub_1A9142E20((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_1A9142E20(*(_QWORD *)(*(_QWORD *)a1 + 32));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t *WrappedUserDefaults.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96));

  return v0;
}

uint64_t WrappedUserDefaults.__deallocating_deinit()
{
  WrappedUserDefaults.deinit();
  return swift_deallocClassInstance();
}

uint64_t WrappedUserDefaults.__allocating_init<A>(defaultValue:key:store:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A6FE8);
  result = swift_allocObject();
  *(_BYTE *)(result + 32) = a1;
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = a3;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = &type metadata for BoolTransform;
  *(_QWORD *)(result + 56) = &off_1E54DAAC8;
  return result;
}

_QWORD *WrappedUserDefaults.__allocating_init<A>(defaultValue:key:store:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8098);
  result = (_QWORD *)swift_allocObject();
  result[4] = a1;
  result[5] = a2;
  result[2] = a3;
  result[3] = a4;
  result[6] = a5;
  result[7] = &type metadata for StringTransform;
  result[8] = &off_1E54DAAB0;
  return result;
}

_QWORD *WrappedUserDefaults.__allocating_init<A>(defaultValue:key:store:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA118);
  result = (_QWORD *)swift_allocObject();
  result[2] = a2;
  result[3] = a3;
  result[4] = a1;
  result[5] = a4;
  result[6] = &type metadata for IntegerTransform;
  result[7] = &off_1E54DAA98;
  return result;
}

{
  _QWORD *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A7000);
  result = (_QWORD *)swift_allocObject();
  result[2] = a2;
  result[3] = a3;
  result[4] = a1;
  result[5] = a4;
  result[6] = &type metadata for Int64Transform;
  result[7] = &off_1E54DAA80;
  return result;
}

{
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB80A0);
  v8 = (_QWORD *)swift_allocObject();
  v9 = (char *)v8 + *(_QWORD *)(*v8 + 96);
  v10 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a1, v10);
  v8[2] = a2;
  v8[3] = a3;
  *(_QWORD *)((char *)v8 + *(_QWORD *)(*v8 + 104)) = a4;
  v11 = (_QWORD *)((char *)v8 + *(_QWORD *)(*v8 + 112));
  *v11 = &type metadata for URLTransform;
  v11[1] = &off_1E54DAA68;
  return v8;
}

uint64_t WrappedUserDefaults.__allocating_init<A>(defaultValue:key:store:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A6FF0);
  result = swift_allocObject();
  *(double *)(result + 32) = a4;
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 40) = a3;
  *(_QWORD *)(result + 48) = &type metadata for DoubleTransform;
  *(_QWORD *)(result + 56) = &off_1E54DAA50;
  return result;
}

void sub_1A9142560(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;

  v4 = (void *)sub_1A93F8010();
  LOBYTE(a1) = objc_msgSend(a1, sel_BOOLForKey_, v4);

  *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)a2 = (_BYTE)a1;
}

void sub_1A91425CC(void *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1A91425E8(a1, MEMORY[0x1E0DEB418], a2);
}

void sub_1A91425DC(void *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1A91425E8(a1, MEMORY[0x1E0DEDC60], a2);
}

void sub_1A91425E8(void *a1@<X0>, uint64_t a2@<X5>, _QWORD *a3@<X8>)
{
  void *v6;
  id v7;

  v6 = (void *)sub_1A93F8010();
  v7 = objc_msgSend(a1, sel_integerForKey_, v6);

  a3[3] = a2;
  *a3 = v7;
}

uint64_t sub_1A914264C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - v8;
  v10 = (void *)sub_1A93F8010();
  v11 = objc_msgSend(a1, sel_URLForKey_, v10);

  if (v11)
  {
    sub_1A93F7200();

    v12 = sub_1A93F726C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 0, 1, v12);
  }
  else
  {
    v12 = sub_1A93F726C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  }
  sub_1A908F9F4((uint64_t)v6, (uint64_t)v9);
  sub_1A93F726C();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) == 1)
  {
    result = sub_1A905FD54((uint64_t)v9, &qword_1ED2AD3D0);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = v12;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v13 + 32))(boxed_opaque_existential_1, v9, v12);
  }
  return result;
}

void sub_1A91427E4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  _BYTE v15[24];
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A9142FA8(a1, (uint64_t)v15);
  if (v16)
  {
    v11 = swift_dynamicCast();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, v11 ^ 1u, 1, v7);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
      v12 = (void *)sub_1A93F71A0();
      v13 = (void *)sub_1A93F8010();
      objc_msgSend(a2, sel_setURL_forKey_, v12, v13);

      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
      return;
    }
  }
  else
  {
    sub_1A905FD54((uint64_t)v15, qword_1ED2AC800);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_1A905FD54((uint64_t)v6, &qword_1ED2AD3D0);
  v14 = (void *)sub_1A93F8010();
  objc_msgSend(a2, sel_removeObjectForKey_, v14);

}

void sub_1A91429C8(uint64_t a1, void *a2)
{
  void *v3;
  unsigned __int8 v4;
  _BYTE v5[24];
  uint64_t v6;

  sub_1A9142FA8(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1A905FD54((uint64_t)v5, qword_1ED2AC800);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v3 = (void *)sub_1A93F8010();
    objc_msgSend(a2, sel_removeObjectForKey_, v3);
    goto LABEL_6;
  }
  v3 = (void *)sub_1A93F8010();
  objc_msgSend(a2, sel_setBool_forKey_, v4, v3);
LABEL_6:

}

void sub_1A9142A9C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  _BYTE v5[24];
  uint64_t v6;

  sub_1A9142FA8(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1A905FD54((uint64_t)v5, qword_1ED2AC800);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v4 = (void *)sub_1A93F8010();
    objc_msgSend(a2, sel_removeObjectForKey_, v4);
    goto LABEL_6;
  }
  v3 = (void *)sub_1A93F92C4();
  v4 = (void *)sub_1A93F8010();
  objc_msgSend(a2, sel_setObject_forKey_, v3, v4);

LABEL_6:
}

void sub_1A9142B7C(uint64_t a1, void *a2)
{
  void *v3;
  double v4;
  _BYTE v5[24];
  uint64_t v6;

  sub_1A9142FA8(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1A905FD54((uint64_t)v5, qword_1ED2AC800);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v3 = (void *)sub_1A93F8010();
    objc_msgSend(a2, sel_removeObjectForKey_, v3);
    goto LABEL_6;
  }
  v3 = (void *)sub_1A93F8010();
  objc_msgSend(a2, sel_setDouble_forKey_, v3, v4);
LABEL_6:

}

void sub_1A9142C58(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  _BYTE v5[24];
  uint64_t v6;

  sub_1A9142FA8(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1A905FD54((uint64_t)v5, qword_1ED2AC800);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v4 = (void *)sub_1A93F8010();
    objc_msgSend(a2, sel_removeObjectForKey_, v4);
    goto LABEL_6;
  }
  v3 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1A93F8010();
  objc_msgSend(a2, sel_setObject_forKey_, v3, v4);

LABEL_6:
}

void sub_1A9142D4C(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  _BYTE v5[24];
  uint64_t v6;

  sub_1A9142FA8(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1A905FD54((uint64_t)v5, qword_1ED2AC800);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v3 = (void *)sub_1A93F8010();
    objc_msgSend(a2, sel_removeObjectForKey_, v3);
    goto LABEL_6;
  }
  v3 = (void *)sub_1A93F8010();
  objc_msgSend(a2, sel_setInteger_forKey_, v4, v3);
LABEL_6:

}

uint64_t sub_1A9142E20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9[3];
  uint64_t v10;

  v3 = (_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 112));
  v4 = *v3;
  v5 = v3[1];
  v10 = *(_QWORD *)(*v1 + 80);
  v6 = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_1, a1, v6);
  (*(void (**)(uint64_t *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v5 + 16))(v9, *(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 104)), v1[2], v1[3], v4, v5);
  return sub_1A905FD54((uint64_t)v9, qword_1ED2AC800);
}

uint64_t sub_1A9142EC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9141F44(a1);
}

uint64_t sub_1A9142EE0(uint64_t a1)
{
  return sub_1A9142E20(a1);
}

uint64_t sub_1A9142F00()
{
  return 8;
}

_QWORD *sub_1A9142F0C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t method lookup function for WrappedUserDefaults()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WrappedUserDefaults.wrappedValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of WrappedUserDefaults.wrappedValue.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of WrappedUserDefaults.wrappedValue.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

ValueMetadata *type metadata accessor for DoubleTransform()
{
  return &type metadata for DoubleTransform;
}

ValueMetadata *type metadata accessor for URLTransform()
{
  return &type metadata for URLTransform;
}

ValueMetadata *type metadata accessor for Int64Transform()
{
  return &type metadata for Int64Transform;
}

ValueMetadata *type metadata accessor for IntegerTransform()
{
  return &type metadata for IntegerTransform;
}

ValueMetadata *type metadata accessor for StringTransform()
{
  return &type metadata for StringTransform;
}

ValueMetadata *type metadata accessor for BoolTransform()
{
  return &type metadata for BoolTransform;
}

uint64_t sub_1A9142FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static PodcastsMediaLibrary.Error.== infix(_:_:)(id *a1, void **a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = *a1;
  v3 = *a2;
  switch((unint64_t)*a1)
  {
    case 0uLL:
      if (!v3)
        goto LABEL_5;
      goto LABEL_3;
    case 1uLL:
      if (v3 == (void *)1)
        goto LABEL_5;
      goto LABEL_3;
    case 2uLL:
      if (v3 != (void *)2)
        goto LABEL_3;
      goto LABEL_5;
    case 3uLL:
      if (v3 != (void *)3)
        goto LABEL_3;
      goto LABEL_5;
    case 4uLL:
      if (v3 != (void *)4)
        goto LABEL_3;
      goto LABEL_5;
    case 5uLL:
      if (v3 != (void *)5)
        goto LABEL_3;
LABEL_5:
      v4 = 1;
      break;
    default:
LABEL_3:
      v4 = 0;
      break;
  }
  sub_1A912C4E0(*a1);
  sub_1A912C4E0(v3);
  sub_1A912C4FC(v2);
  sub_1A912C4FC(v3);
  return v4;
}

uint64_t sub_1A91430A4(id *a1, void **a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = *a1;
  v3 = *a2;
  switch((unint64_t)*a1)
  {
    case 0uLL:
      if (!v3)
        goto LABEL_13;
      goto LABEL_3;
    case 1uLL:
      if (v3 == (void *)1)
        goto LABEL_13;
      goto LABEL_3;
    case 2uLL:
      if (v3 == (void *)2)
        goto LABEL_13;
      goto LABEL_3;
    case 3uLL:
      if (v3 == (void *)3)
        goto LABEL_13;
      goto LABEL_3;
    case 4uLL:
      if (v3 == (void *)4)
        goto LABEL_13;
      goto LABEL_3;
    case 5uLL:
      if (v3 != (void *)5)
        goto LABEL_3;
LABEL_13:
      v4 = 1;
      break;
    default:
LABEL_3:
      v4 = 0;
      break;
  }
  sub_1A912C4E0(*a1);
  sub_1A912C4E0(v3);
  sub_1A912C4FC(v2);
  sub_1A912C4FC(v3);
  return v4;
}

_QWORD *_s5ErrorOwCP(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void _s5ErrorOwxx(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **_s5ErrorOwca(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
      v7 = v4;
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    v5 = v4;
    v6 = *a1;
    *a1 = v4;

  }
  return a1;
}

void **_s5ErrorOwta(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t _s5ErrorOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFF9 && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483641);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 6;
  if (v4 >= 8)
    return v5;
  else
    return 0;
}

uint64_t _s5ErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF9)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483641;
    if (a3 >= 0x7FFFFFF9)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF9)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 6;
  }
  return result;
}

uint64_t sub_1A9143344(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1A914335C(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for PodcastsMediaLibrary.Error()
{
  return &type metadata for PodcastsMediaLibrary.Error;
}

uint64_t *sub_1A91438D4()
{
  uint64_t *v0;

  sub_1A9085818(v0[2]);
  sub_1A9085818(v0[4]);
  sub_1A9085818(v0[6]);
  sub_1A9085818(v0[8]);
  sub_1A9085818(v0[10]);
  sub_1A9085818(v0[12]);
  sub_1A9085818(v0[14]);
  return v0;
}

uint64_t sub_1A9143920()
{
  sub_1A91438D4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FairPlayKeyLoadingMock()
{
  return objc_opt_self();
}

uint64_t sub_1A9143960()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1A9143984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A93E388C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1A91439A4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  sub_1A929E494(0, v1, 0);
  v2 = v15;
  for (i = a1 + 80; ; i += 64)
  {
    v5 = sub_1A93F9450();
    v7 = v6;
    v8 = sub_1A93F9450();
    v10 = v9;
    result = sub_1A93F9420();
    if ((result & 1) != 0)
      break;
    v13 = *(_QWORD *)(v15 + 16);
    v12 = *(_QWORD *)(v15 + 24);
    if (v13 >= v12 >> 1)
      sub_1A929E494(v12 > 1, v13 + 1, 1);
    *(_QWORD *)(v15 + 16) = v13 + 1;
    v14 = (_QWORD *)(v15 + 32 * v13);
    v14[4] = v5;
    v14[5] = v7;
    v14[6] = v8;
    v14[7] = v10;
    if (!--v1)
      return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9143AB4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  sub_1A929E494(0, v1, 0);
  v2 = v15;
  for (i = a1 + 40; ; i += 64)
  {
    v5 = sub_1A93F9450();
    v7 = v6;
    v8 = sub_1A93F9450();
    v10 = v9;
    result = sub_1A93F9420();
    if ((result & 1) != 0)
      break;
    v13 = *(_QWORD *)(v15 + 16);
    v12 = *(_QWORD *)(v15 + 24);
    if (v13 >= v12 >> 1)
      sub_1A929E494(v12 > 1, v13 + 1, 1);
    *(_QWORD *)(v15 + 16) = v13 + 1;
    v14 = (_QWORD *)(v15 + 32 * v13);
    v14[4] = v5;
    v14[5] = v7;
    v14[6] = v8;
    v14[7] = v10;
    if (!--v1)
      return v2;
  }
  __break(1u);
  return result;
}

double AssetReaderTimelineAlignment.Alignment.queryTimeRange.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double AssetReaderTimelineAlignment.Alignment.referenceTimeRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t sub_1A9143BDC()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0x6D69547972657571;
}

uint64_t sub_1A9143C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A914A53C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9143C4C()
{
  sub_1A914A240();
  return sub_1A93F945C();
}

uint64_t sub_1A9143C74()
{
  sub_1A914A240();
  return sub_1A93F9468();
}

uint64_t AssetReaderTimelineAlignment.Alignment.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8178);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v10 = v1[2];
  v11 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A914A240();
  sub_1A93F93D8();
  v15 = v8;
  v16 = v9;
  v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8188);
  sub_1A914A284(&qword_1EEAB8190, MEMORY[0x1E0DEB080], MEMORY[0x1E0DEB880]);
  sub_1A93F9030();
  if (!v2)
  {
    v15 = v10;
    v16 = v11;
    v14 = 1;
    sub_1A93F9030();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AssetReaderTimelineAlignment.Alignment.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v12;
  char v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8198);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A914A240();
  sub_1A93F93C0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8188);
    v13 = 0;
    sub_1A914A284(&qword_1EEAB81A0, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEB8B0]);
    sub_1A93F8F7C();
    v9 = v12;
    v13 = 1;
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v12;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1A9143FB8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return AssetReaderTimelineAlignment.Alignment.init(from:)(a1, a2);
}

uint64_t sub_1A9143FCC(_QWORD *a1)
{
  return AssetReaderTimelineAlignment.Alignment.encode(to:)(a1);
}

uint64_t sub_1A9143FE0()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_1A93F92DC();
  sub_1A93F92E8();
  if (v1 != 2)
    sub_1A93F92F4();
  return sub_1A93F9324();
}

uint64_t sub_1A914404C()
{
  _BYTE *v0;

  if (*v0 == 2)
    return sub_1A93F92E8();
  sub_1A93F92E8();
  return sub_1A93F92F4();
}

uint64_t sub_1A9144098()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_1A93F92DC();
  sub_1A93F92E8();
  if (v1 != 2)
    sub_1A93F92F4();
  return sub_1A93F9324();
}

uint64_t sub_1A9144100(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

BOOL sub_1A9144138(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL4 v5;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 4)
    return v3 == 4;
  if (v2 == 3)
    return v3 == 3;
  if ((v3 - 3) < 2)
    return 0;
  if (v2 == 2)
  {
    if (v3 == 2)
      return 1;
  }
  else
  {
    v5 = (v2 & 1) == 0;
    if (v3 != 2 && ((v5 ^ v3) & 1) != 0)
      return 1;
  }
  return 0;
}

uint64_t sub_1A91441B4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t inited;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8250);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A94055A0;
  v5 = *a1;
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_1A912E330(0), (v7 & 1) != 0))
  {
    v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = 0;
  }
  *(_QWORD *)(inited + 32) = v8;
  if (*(_QWORD *)(v5 + 16) && (v9 = sub_1A912E330(1), (v10 & 1) != 0))
  {
    v11 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = 0;
  }
  *(_QWORD *)(inited + 40) = v11;
  if (*(_QWORD *)(v5 + 16) && (v12 = sub_1A912E330(2), (v13 & 1) != 0))
  {
    v14 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    *(_QWORD *)(inited + 48) = v14;
    if (!v8)
      goto LABEL_12;
  }
  else
  {
    v14 = 0;
    *(_QWORD *)(inited + 48) = 0;
    if (!v8)
    {
LABEL_12:
      v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (!v11)
        goto LABEL_23;
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRetain();
  v15 = sub_1A9117F70(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v17 = v15[2];
  v16 = v15[3];
  if (v17 >= v16 >> 1)
    v15 = sub_1A9117F70((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
  v15[2] = v17 + 1;
  v15[v17 + 4] = v8;
  if (v11)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_1A9117F70(0, v15[2] + 1, 1, v15);
    v19 = v15[2];
    v18 = v15[3];
    if (v19 >= v18 >> 1)
      v15 = sub_1A9117F70((_QWORD *)(v18 > 1), v19 + 1, 1, v15);
    v15[2] = v19 + 1;
    v15[v19 + 4] = v11;
  }
LABEL_23:
  if (v14)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_1A9117F70(0, v15[2] + 1, 1, v15);
    v21 = v15[2];
    v20 = v15[3];
    if (v21 >= v20 >> 1)
      v15 = sub_1A9117F70((_QWORD *)(v20 > 1), v21 + 1, 1, v15);
    v15[2] = v21 + 1;
    v15[v21 + 4] = v14;
  }
  result = swift_release();
  *a2 = v15;
  return result;
}

BOOL AssetReaderTimelineAlignment.isInProgress.getter()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (os_unfair_lock_s *)(v1 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  LODWORD(v1) = *(unsigned __int8 *)(v1 + 16);
  os_unfair_lock_unlock(v2);
  return (_DWORD)v1 != 4;
}

uint64_t AssetReaderTimelineAlignment.alignments.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t *v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  v1 = *(os_unfair_lock_s **)(v0 + 24);
  v2 = (uint64_t *)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1A91441B4(v2, &v21);
  os_unfair_lock_unlock(v3);
  v4 = v21;
  v5 = *(_QWORD *)(v21 + 16);
  if (!v5)
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_25:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v8 = *(_QWORD *)(v4 + 8 * v6 + 32);
    v9 = *(_QWORD *)(v8 + 16);
    v10 = v7[2];
    v11 = v10 + v9;
    if (__OFADD__(v10, v9))
      break;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v11 <= v7[3] >> 1)
    {
      if (*(_QWORD *)(v8 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v10 <= v11)
        v13 = v10 + v9;
      else
        v13 = v10;
      v7 = sub_1A91178E4(isUniquelyReferenced_nonNull_native, v13, 1, v7);
      if (*(_QWORD *)(v8 + 16))
      {
LABEL_14:
        v14 = v7[2];
        if ((v7[3] >> 1) - v14 < v9)
          goto LABEL_28;
        v15 = &v7[4 * v14 + 4];
        if (v8 + 32 < (unint64_t)&v15[4 * v9] && (unint64_t)v15 < v8 + 32 + 32 * v9)
          goto LABEL_30;
        memcpy(v15, (const void *)(v8 + 32), 32 * v9);
        if (v9)
        {
          v17 = v7[2];
          v18 = __OFADD__(v17, v9);
          v19 = v17 + v9;
          if (v18)
            goto LABEL_29;
          v7[2] = v19;
        }
        goto LABEL_4;
      }
    }
    if (v9)
      goto LABEL_27;
LABEL_4:
    ++v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5 == v6)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

BOOL AssetReaderTimelineAlignment.matchedBeginning.getter()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (os_unfair_lock_s *)(v1 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  LOBYTE(v1) = *(_BYTE *)(v1 + 16);
  os_unfair_lock_unlock(v2);
  return (v1 & 0xFE) != 2;
}

BOOL AssetReaderTimelineAlignment.matchedEnd.getter()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  int v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (os_unfair_lock_s *)(v1 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  v3 = *(unsigned __int8 *)(v1 + 16);
  os_unfair_lock_unlock(v2);
  if ((v3 - 2) >= 3)
    return v3;
  else
    return ((v3 - 2) & 7) == 2;
}

_QWORD *sub_1A91446E4(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8200);
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v15 + 16) = a1;
  v7[3] = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8208);
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 28) = 0;
  *(_QWORD *)(v16 + 16) = a2;
  *(_BYTE *)(v16 + 24) = a3 & 1;
  v7[4] = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8210);
  v17 = swift_allocObject();
  *(_DWORD *)(v17 + 20) = 0;
  *(_BYTE *)(v17 + 16) = a4;
  v7[2] = v17;
  v7[5] = a5;
  v7[6] = a6;
  v18 = (char *)v7 + OBJC_IVAR____TtC18PodcastsFoundation28AssetReaderTimelineAlignment_logger;
  v19 = sub_1A93F7698();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a7, v19);
  return v7;
}

void sub_1A91447D8(unint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  os_unfair_lock_s *v18;
  unint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  double *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  char isUniquelyReferenced_nonNull_native;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  os_unfair_lock_s *lock;
  os_log_t oslogb[2];
  os_log_t oslog[2];
  NSObject *osloga;
  id v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  BOOL v49[9];

  v4 = v3;
  v6 = *(_QWORD *)(v3 + 16);
  v7 = (os_unfair_lock_s *)(v6 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 20));
  v39 = v6;
  lock = (os_unfair_lock_s *)(v6 + 20);
  LODWORD(v6) = *(unsigned __int8 *)(v6 + 16);
  os_unfair_lock_unlock(v7);
  v49[0] = (_DWORD)v6 == 3;
  if (a1 >> 62)
    goto LABEL_28;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    if (!v8)
      break;
    v48 = MEMORY[0x1E0DEE9D8];
    sub_1A929E4CC(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
    {
      __break(1u);
      swift_release();
      __break(1u);
      return;
    }
    v10 = 0;
    v9 = v48;
    while (v8 != v10)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x1AF4129DC](v10, a1);
      else
        v11 = *(id *)(a1 + 8 * v10 + 32);
      v12 = v11;
      v45 = v11;
      sub_1A9144CC4(&v45, v49, v4, (double *)&v46);

      v13 = v46;
      v14 = v47;
      v48 = v9;
      v16 = *(_QWORD *)(v9 + 16);
      v15 = *(_QWORD *)(v9 + 24);
      if (v16 >= v15 >> 1)
      {
        *(_OWORD *)oslogb = v46;
        v37 = v47;
        sub_1A929E4CC(v15 > 1, v16 + 1, 1);
        v14 = v37;
        v13 = *(_OWORD *)oslogb;
        v9 = v48;
      }
      ++v10;
      *(_QWORD *)(v9 + 16) = v16 + 1;
      v17 = v9 + 32 * v16;
      *(_OWORD *)(v17 + 32) = v13;
      *(_OWORD *)(v17 + 48) = v14;
      if (v8 == v10)
        goto LABEL_13;
    }
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    v8 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
LABEL_13:
  *(_QWORD *)&v46 = v9;
  swift_bridgeObjectRetain();
  sub_1A91484C0((uint64_t *)&v46, sub_1A923436C, sub_1A9148624);
  swift_bridgeObjectRelease();
  v38 = v46;
  v18 = *(os_unfair_lock_s **)(v4 + 24);
  v19 = (unint64_t)&v18[4];
  v20 = v18 + 6;
  os_unfair_lock_lock(v18 + 6);
  v36 = (uint64_t *)v19;
  sub_1A9144EEC(v19, a3, &v46);
  os_unfair_lock_unlock(v20);
  v21 = *(_QWORD *)(v46 + 16);
  if (v21)
  {
    v22 = (double *)(v46 + 56);
    v23 = MEMORY[0x1E0DEE9D8];
    do
    {
      v27 = *(v22 - 3);
      *(_OWORD *)oslog = *((_OWORD *)v22 - 1);
      v28 = *v22;
      sub_1A93F8A24();
      if (v27 <= v29)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v46 = v23;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A929E4CC(0, *(_QWORD *)(v23 + 16) + 1, 1);
          v23 = v46;
        }
        v25 = *(_QWORD *)(v23 + 16);
        v24 = *(_QWORD *)(v23 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_1A929E4CC(v24 > 1, v25 + 1, 1);
          v23 = v46;
        }
        *(_QWORD *)(v23 + 16) = v25 + 1;
        v26 = v23 + 32 * v25;
        *(double *)(v26 + 32) = v27;
        *(_OWORD *)(v26 + 40) = *(_OWORD *)oslog;
        *(double *)(v26 + 56) = v28;
      }
      v22 += 4;
      --v21;
    }
    while (v21);
  }
  else
  {
    v23 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  os_unfair_lock_lock(v20);
  sub_1A9144F50(v36, a3, v23, v38, v4);
  os_unfair_lock_unlock(v20);
  swift_release();
  swift_release();
  os_unfair_lock_lock(lock);
  *(_BYTE *)(v39 + 16) = a3;
  os_unfair_lock_unlock(lock);
  swift_retain_n();
  osloga = sub_1A93F7674();
  v31 = sub_1A93F87B4();
  if (os_log_type_enabled(osloga, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    *(_QWORD *)&v46 = v33;
    *(_DWORD *)v32 = 136315138;
    v48 = v4;
    swift_retain();
    v34 = sub_1A93F80AC();
    v48 = sub_1A906436C(v34, v35, (uint64_t *)&v46);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, osloga, v31, "Matched:\n%s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v33, -1, -1);
    MEMORY[0x1AF41411C](v32, -1, -1);
  }
  else
  {
    swift_release_n();
  }

}

void sub_1A9144CC4(id *a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, double *a4@<X8>)
{
  uint64_t v4;
  id v7;
  char **v8;
  id v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  id v16;
  double v17;
  double v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  double v25;
  double v26;
  double v27;
  id v28;
  double v29;
  double v30;
  id v31;
  double v32;
  double v33;
  double v34;
  _QWORD v35[2];

  v7 = *a1;
  v8 = &selRef_isOTAPurchased;
  if (*a2 == 1)
  {
    v10 = objc_msgSend(*a1, sel_queryTimeRange);
    objc_msgSend(v10, sel_lowerBound);
    v12 = v11;

    if (v12 > 1.0)
    {
      v35[1] = v35;
      v13 = *(_QWORD *)(a3 + 32);
      os_unfair_lock_lock((os_unfair_lock_t)(v13 + 28));
      sub_1A93F8A24();
      *(_QWORD *)(v13 + 16) = v14;
      *(_BYTE *)(v13 + 24) = 0;
      v15 = (os_unfair_lock_s *)(v13 + 28);
      if (v4)
        goto LABEL_10;
      os_unfair_lock_unlock(v15);
      v8 = (char **)0x1F4641000;
    }
  }
  *a2 = 0;
  v16 = objc_msgSend(v7, sel_referenceTimeRange);
  objc_msgSend(v16, sel_lowerBound);
  v18 = v17;

  v19 = objc_msgSend(v7, sel_referenceTimeRange);
  objc_msgSend(v19, sel_upperBound);
  v21 = v20;

  if (v18 > v21)
  {
    __break(1u);
  }
  else
  {
    sub_1A93F8A24();
    v23 = v22;
    v24 = objc_msgSend(v7, (SEL)v8 + 3764);
    objc_msgSend(v24, sel_lowerBound);
    v26 = v25;

    v27 = v23 + v26;
    v28 = objc_msgSend(v7, (SEL)v8 + 3764);
    objc_msgSend(v28, sel_upperBound);
    v30 = v29;

    v31 = objc_msgSend(v7, (SEL)v8 + 3764);
    objc_msgSend(v31, sel_lowerBound);
    v33 = v32;

    v34 = v27 + v30 - v33;
    if (v27 <= v34)
    {
      *a4 = v27;
      a4[1] = v34;
      a4[2] = v18;
      a4[3] = v21;
      return;
    }
  }
  __break(1u);
LABEL_10:
  os_unfair_lock_unlock(v15);
  __break(1u);
}

unint64_t sub_1A9144EEC@<X0>(unint64_t result@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)result;
  if (*(_QWORD *)(*(_QWORD *)result + 16) && (result = sub_1A912E330(a2), (v5 & 1) != 0))
  {
    *a3 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * result);
    return swift_bridgeObjectRetain();
  }
  else
  {
    *a3 = MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1A9144F50(uint64_t *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  swift_bridgeObjectRetain();
  v8 = swift_bridgeObjectRetain();
  sub_1A9135480(v8);
  v9 = sub_1A9145020(*(_QWORD *)(a5 + 40), *(_QWORD *)(a5 + 48), a3);
  swift_bridgeObjectRelease();
  v10 = sub_1A91450F0(v9);
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *a1;
  *a1 = 0x8000000000000000;
  sub_1A930D68C(v10, a2, isUniquelyReferenced_nonNull_native);
  *a1 = v14;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9145020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  __int128 *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;

  v5 = MEMORY[0x1E0DEE9D8];
  v14 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v8 = (__int128 *)(a3 + 48);
    v9 = v6;
    do
    {
      v10 = *v8;
      v13[0] = *(v8 - 1);
      v13[1] = v10;
      sub_1A9148158((double *)v13);
      v8 += 2;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    v5 = v14;
  }
  if (*(_QWORD *)(v5 + 16) == v6)
    return v5;
  v12 = sub_1A9145020(a1, a2, v5);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1A91450F0(uint64_t a1)
{
  uint64_t v1;
  double *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __int128 v7;
  double v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  double v12;
  unint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t result;
  uint64_t v17;
  __int128 v18;
  __int128 v19;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = (double *)(swift_bridgeObjectRetain() + 56);
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v4 = v1;
    while (1)
    {
      v6 = *((_QWORD *)v2 - 3);
      v7 = *((_OWORD *)v2 - 1);
      v8 = *v2;
      v9 = v3[2];
      if (v9 && (v10 = v9 - 1, v11 = (uint64_t)&v3[4 * v9], v12 = *(double *)(v11 + 16), *((double *)&v7 + 1) <= v12))
      {
        if (*(double *)(v11 + 24) - v12 >= v8 - *((double *)&v7 + 1))
          goto LABEL_5;
        v19 = *((_OWORD *)v2 - 1);
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1A9398DC4(v3);
          v3 = (_QWORD *)result;
        }
        v14 = v19;
        if (v9 > v3[2])
        {
          __break(1u);
          return result;
        }
      }
      else
      {
        v18 = *((_OWORD *)v2 - 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_1A91178E4(0, v9 + 1, 1, v3);
        v10 = v3[2];
        v13 = v3[3];
        v14 = v18;
        if (v10 >= v13 >> 1)
        {
          v15 = sub_1A91178E4((_QWORD *)(v13 > 1), v10 + 1, 1, v3);
          v14 = v18;
          v3 = v15;
        }
        v3[2] = v10 + 1;
      }
      v5 = &v3[4 * v10];
      v5[4] = v6;
      *(_OWORD *)(v5 + 5) = v14;
      *((double *)v5 + 7) = v8;
LABEL_5:
      v2 += 4;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_19:
  if (v3[2] == v1)
    return (uint64_t)v3;
  v17 = sub_1A91450F0(v3);
  swift_bridgeObjectRelease();
  return v17;
}

void sub_1A9145294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  unint64_t *p_os_unfair_lock_opaque;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  NSObject *oslog;
  uint64_t v13;

  v1 = v0;
  v2 = AssetReaderTimelineAlignment.alignments.getter();
  v3 = *(os_unfair_lock_s **)(v1 + 24);
  p_os_unfair_lock_opaque = (unint64_t *)&v3[4]._os_unfair_lock_opaque;
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1A9145488(p_os_unfair_lock_opaque, v2, v1);
  os_unfair_lock_unlock(v5);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v1 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 20));
  *(_BYTE *)(v6 + 16) = 4;
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 20));
  swift_retain_n();
  oslog = sub_1A93F7674();
  v7 = sub_1A93F87B4();
  if (os_log_type_enabled(oslog, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v13 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_retain();
    v10 = sub_1A93F80AC();
    sub_1A906436C(v10, v11, &v13);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, oslog, v7, "Completed Alignment:\n%s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v9, -1, -1);
    MEMORY[0x1AF41411C](v8, -1, -1);

  }
  else
  {
    swift_release_n();

  }
}

uint64_t sub_1A9145488(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;

  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8228);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_BYTE *)(inited + 32) = 0;
  v7 = sub_1A9145020(*(_QWORD *)(a3 + 40), *(_QWORD *)(a3 + 48), a2);
  v8 = sub_1A91450F0(v7);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 40) = v8;
  v9 = sub_1A91154D4(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8230);
  result = swift_arrayDestroy();
  *a1 = v9;
  return result;
}

Swift::Double_optional __swiftcall AssetReaderTimelineAlignment.referenceTimestamp(for:)(Swift::Double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  double v10;
  double v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  double *v16;
  double v17;
  double v18;
  unint64_t v19;
  double v20;
  double v21;
  double v22;
  __int128 v23;
  uint64_t v24;
  Swift::Double_optional result;

  v2 = AssetReaderTimelineAlignment.alignments.getter();
  v3 = *(_QWORD *)(v2 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v5 = (double *)(v2 + 56);
    v6 = MEMORY[0x1E0DEE9D8];
    do
    {
      v10 = *(v5 - 3);
      if (v10 + -0.5 <= a1 && *(v5 - 2) + 0.5 >= a1)
      {
        v23 = *((_OWORD *)v5 - 1);
        v12 = *v5;
        v24 = v6;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A929E4CC(0, *(_QWORD *)(v6 + 16) + 1, 1);
          v6 = v24;
        }
        v8 = *(_QWORD *)(v6 + 16);
        v7 = *(_QWORD *)(v6 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1A929E4CC(v7 > 1, v8 + 1, 1);
          v6 = v24;
        }
        *(_QWORD *)(v6 + 16) = v8 + 1;
        v9 = v6 + 32 * v8;
        *(double *)(v9 + 32) = v10;
        *(_OWORD *)(v9 + 40) = v23;
        *(double *)(v9 + 56) = v12;
      }
      v5 += 4;
      --v3;
    }
    while (v3);
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v6 + 16);
  if (v13)
  {
    v24 = v4;
    sub_1A929E4E8(0, v13, 0);
    v14 = v4;
    v15 = *(_QWORD *)(v4 + 16);
    v16 = (double *)(v6 + 48);
    do
    {
      v17 = *(v16 - 2);
      v18 = *v16;
      v24 = v14;
      v19 = *(_QWORD *)(v14 + 24);
      if (v15 >= v19 >> 1)
      {
        sub_1A929E4E8(v19 > 1, v15 + 1, 1);
        v14 = v24;
      }
      *(_QWORD *)(v14 + 16) = v15 + 1;
      *(double *)(v14 + 8 * v15 + 32) = v17 - v18;
      v16 += 4;
      ++v15;
      --v13;
    }
    while (v13);
    swift_release();
  }
  else
  {
    swift_release();
    v14 = MEMORY[0x1E0DEE9D8];
  }
  v24 = v14;
  swift_bridgeObjectRetain();
  sub_1A91484C0(&v24, sub_1A9234380, sub_1A91493E4);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v24 + 16))
  {
    v20 = *(double *)(v24 + 32);
    swift_release();
    v21 = a1 - v20;
    v22 = a1 - v20;
  }
  else
  {
    swift_release();
    LOBYTE(v22) = 0;
  }
  result.value = v21;
  result.is_nil = LOBYTE(v22);
  return result;
}

Swift::Double_optional __swiftcall AssetReaderTimelineAlignment.playerTimestamp(for:)(Swift::Double a1)
{
  double v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double *v6;
  char v7;
  double v8;
  double v10;
  double v11;
  Swift::Double_optional result;

  if (sub_1A914588C())
  {
    v3 = AssetReaderTimelineAlignment.alignments.getter();
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      v5 = 0.0;
      v6 = (double *)(v3 + 56);
      v7 = 1;
      do
      {
        v8 = *(v6 - 1);
        if (v8 + -0.5 <= a1 && *v6 + 0.5 >= a1)
        {
          v10 = v8 - *(v6 - 3);
          if ((v7 & 1) != 0 || fabs(v10) < COERCE_DOUBLE(*(_QWORD *)&v5 & 0x7FFFFFFFFFFFFFFFLL))
          {
            v7 = 0;
            v5 = v10;
          }
          else
          {
            v7 = 0;
          }
        }
        v6 += 4;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
      v2 = a1 - v5;
      if ((v7 & 1) != 0)
        LOBYTE(v11) = LOBYTE(v5);
      else
        v11 = a1 - v5;
    }
    else
    {
      swift_bridgeObjectRelease();
      LOBYTE(v11) = 0;
    }
  }
  else
  {
    LOBYTE(v11) = LOBYTE(a1);
  }
  result.value = v2;
  result.is_nil = LOBYTE(v11);
  return result;
}

uint64_t sub_1A914588C()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (os_unfair_lock_s *)(v1 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  LODWORD(v1) = *(unsigned __int8 *)(v1 + 16);
  os_unfair_lock_unlock(v2);
  if ((_DWORD)v1 != 4)
    return 1;
  v3 = *(_QWORD *)(AssetReaderTimelineAlignment.alignments.getter() + 16);
  swift_bridgeObjectRelease();
  if (v3)
  {
    v4 = AssetReaderTimelineAlignment.alignments.getter();
    v5 = *(_QWORD *)(v4 + 16);
    if (!v5)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return 0;
    }
    v6 = (double *)(v4 + 56);
    while (vabdd_f64(*(v6 - 1), *(v6 - 3)) <= 0.1 && vabdd_f64(*v6, *(v6 - 2)) <= 0.1)
    {
      v6 += 4;
      if (!--v5)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease();
  }
  return 2;
}

_QWORD *AssetReaderTimelineAlignment.nonMatchingRangesInReference(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *result;
  unint64_t v9;
  os_unfair_lock_s *v10;
  char v11;
  uint64_t v12;
  double v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD *v20;
  os_unfair_lock_s *v21;
  uint64_t *v22;
  os_unfair_lock_s *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD v43[9];

  v4 = v2;
  v7 = *(_QWORD *)(AssetReaderTimelineAlignment.alignments.getter() + 16);
  swift_bridgeObjectRelease();
  result = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v42 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v9 = *(_QWORD *)(v2 + 16);
    v10 = (os_unfair_lock_s *)(v9 + 20);
    os_unfair_lock_lock((os_unfair_lock_t)(v9 + 20));
    v11 = *(_BYTE *)(v9 + 16);
    os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 20));
    if ((v11 & 0xFE) == 2)
      goto LABEL_9;
    v12 = AssetReaderTimelineAlignment.alignments.getter();
    if (!*(_QWORD *)(v12 + 16))
    {
      swift_bridgeObjectRelease();
LABEL_9:
      v21 = *(os_unfair_lock_s **)(v4 + 24);
      v22 = (uint64_t *)&v21[4];
      v23 = v21 + 6;
      os_unfair_lock_lock(v21 + 6);
      v24 = 0;
      sub_1A91441B4(v22, v43);
      os_unfair_lock_unlock(v23);
      v25 = v43[0];
      v26 = *(_QWORD *)(v43[0] + 16);
      if (v26)
      {
        v40 = a1;
        v27 = 0;
        do
        {
          v41 = *(_QWORD *)(v25 + 8 * v27 + 32);
          swift_bridgeObjectRetain_n();
          sub_1A91484C0(&v41, sub_1A923436C, sub_1A9148D10);
          ++v27;
          swift_bridgeObjectRelease();
          v28 = v41;
          swift_getKeyPath();
          v29 = *(_QWORD *)(v28 + 16);
          v43[0] = v28;
          v43[1] = v28 + 32;
          v30 = 2 * v29 - 1;
          if (v29 <= 1)
            v30 = 1;
          v43[2] = 0;
          v43[3] = v30;
          v43[4] = v28;
          v43[5] = v28 + 32;
          v43[6] = v29 != 0;
          v43[7] = (2 * v29) | 1;
          swift_retain_n();
          v31 = sub_1A914A2E4((uint64_t)v43, (uint64_t (*)(_QWORD *, _QWORD *))sub_1A9148130);
          v32 = sub_1A91439A4(v31);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          sub_1A9135B28(v32);
        }
        while (v26 != v27);
        swift_bridgeObjectRelease();
        os_unfair_lock_lock(v10);
        a1 = v40;
      }
      else
      {
        swift_bridgeObjectRelease();
        os_unfair_lock_lock(v10);
      }
      v33 = *(unsigned __int8 *)(v9 + 16);
      os_unfair_lock_unlock(v10);
      if ((v33 - 2) < 2 || v33 != 4 && (v33 & 1) == 0)
        return v42;
      if (*(_QWORD *)(AssetReaderTimelineAlignment.alignments.getter() + 16))
      {
        swift_bridgeObjectRelease();
        sub_1A93F9450();
        if ((sub_1A93F9420() & 1) != 0)
        {
          v34 = sub_1A93F9450();
          v36 = v35;
          if ((sub_1A93F9420() & 1) != 0)
          {
            __break(1u);
          }
          else
          {
            v24 = v42;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            {
LABEL_23:
              v38 = v24[2];
              v37 = v24[3];
              if (v38 >= v37 >> 1)
                v24 = sub_1A9117D58((_QWORD *)(v37 > 1), v38 + 1, 1, v24);
              v24[2] = v38 + 1;
              v39 = &v24[4 * v38];
              v39[4] = v34;
              v39[5] = v36;
              v39[6] = a1;
              v39[7] = a2;
              return v24;
            }
          }
          v24 = sub_1A9117D58(0, v24[2] + 1, 1, v24);
          goto LABEL_23;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      return v42;
    }
    v13 = *(double *)(v12 + 48);
    swift_bridgeObjectRelease();
    if (v13 <= 0.0)
      goto LABEL_9;
    v14 = v9;
    v15 = sub_1A93F9450();
    v17 = v16;
    if ((sub_1A93F9420() & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v18 = sub_1A9117D58(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v9 = v18[2];
      v19 = v18[3];
      v3 = v9 + 1;
      if (v9 < v19 >> 1)
      {
LABEL_7:
        v18[2] = v3;
        v20 = &v18[4 * v9];
        v20[4] = 0;
        v20[5] = 0;
        v20[6] = v15;
        v20[7] = v17;
        v42 = v18;
        v9 = v14;
        goto LABEL_9;
      }
    }
    v18 = sub_1A9117D58((_QWORD *)(v19 > 1), v3, 1, v18);
    goto LABEL_7;
  }
  return result;
}

_QWORD *AssetReaderTimelineAlignment.nonMatchingRangesInPlayer(with:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  int64_t v3;
  int64_t v4;
  _QWORD *v5;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  double v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  unint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  os_unfair_lock_s *v32;
  uint64_t *v33;
  os_unfair_lock_s *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_unfair_lock_s *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD v54[8];

  v5 = v2;
  v8 = *(_QWORD *)(AssetReaderTimelineAlignment.alignments.getter() + 16);
  swift_bridgeObjectRelease();
  result = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v53 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v10 = AssetReaderTimelineAlignment.alignments.getter();
    if (!*(_QWORD *)(v10 + 16))
    {
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    v11 = *(double *)(v10 + 32);
    swift_bridgeObjectRelease();
    if (v11 <= 0.0)
      goto LABEL_14;
    v12 = v2[2];
    v13 = (os_unfair_lock_s *)(v12 + 20);
    os_unfair_lock_lock((os_unfair_lock_t)(v12 + 20));
    v14 = *(unsigned __int8 *)(v12 + 16);
    os_unfair_lock_unlock(v13);
    if ((v14 & 0xFE) == 2)
    {
      v15 = v5[4];
      v16 = (os_unfair_lock_s *)(v15 + 28);
      os_unfair_lock_lock((os_unfair_lock_t)(v15 + 28));
      v17 = *(unsigned __int8 *)(v15 + 24);
      os_unfair_lock_unlock(v16);
      if ((v17 & 1) != 0)
        goto LABEL_14;
      v18 = sub_1A93F9450();
      v20 = v19;
      v21 = sub_1A93F9450();
      v23 = v22;
      if ((sub_1A93F9420() & 1) != 0)
      {
        __break(1u);
      }
      else
      {
        v24 = sub_1A9117D58(0, 1, 1, MEMORY[0x1E0DEE9D8]);
        v17 = v24[2];
        v25 = v24[3];
        v4 = v17 + 1;
        if (v17 < v25 >> 1)
        {
LABEL_8:
          v24[2] = v4;
          v26 = &v24[4 * v17];
          v26[4] = v18;
          v26[5] = v20;
          v26[6] = v21;
          v26[7] = v23;
LABEL_13:
          v53 = v24;
LABEL_14:
          v32 = (os_unfair_lock_s *)v5[3];
          v33 = (uint64_t *)&v32[4];
          v34 = v32 + 6;
          os_unfair_lock_lock(v32 + 6);
          sub_1A91441B4(v33, v54);
          os_unfair_lock_unlock(v34);
          v35 = v54[0];
          v36 = *(_QWORD *)(v54[0] + 16);
          if (v36)
          {
            v52 = v5;
            v37 = 0;
            do
            {
              v38 = *(_QWORD *)(v35 + 8 * v37++ + 32);
              swift_getKeyPath();
              v39 = *(_QWORD *)(v38 + 16);
              v54[0] = v38;
              v54[1] = v38 + 32;
              v40 = 2 * v39 - 1;
              if (v39 <= 1)
                v40 = 1;
              v54[2] = 0;
              v54[3] = v40;
              v54[4] = v38;
              v54[5] = v38 + 32;
              v54[6] = v39 != 0;
              v54[7] = (2 * v39) | 1;
              swift_bridgeObjectRetain_n();
              v41 = sub_1A914A2E4((uint64_t)v54, (uint64_t (*)(_QWORD *, _QWORD *))sub_1A9148144);
              v42 = sub_1A9143AB4(v41);
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A9135B28(v42);
            }
            while (v36 != v37);
            swift_bridgeObjectRelease();
            v5 = v52;
            v43 = v52[2];
            v44 = (os_unfair_lock_s *)(v43 + 20);
            os_unfair_lock_lock((os_unfair_lock_t)(v43 + 20));
          }
          else
          {
            swift_bridgeObjectRelease();
            v43 = v5[2];
            v44 = (os_unfair_lock_s *)(v43 + 20);
            os_unfair_lock_lock((os_unfair_lock_t)(v43 + 20));
          }
          v45 = *(unsigned __int8 *)(v43 + 16);
          os_unfair_lock_unlock(v44);
          if ((v45 - 2) < 2 || v45 != 4 && (v45 & 1) == 0)
            return v53;
          if (*(_QWORD *)(AssetReaderTimelineAlignment.alignments.getter() + 16))
          {
            swift_bridgeObjectRelease();
            sub_1A93F9450();
            if ((sub_1A93F9420() & 1) != 0)
            {
              v46 = sub_1A93F9450();
              v48 = v47;
              if ((sub_1A93F9420() & 1) != 0)
              {
                __break(1u);
              }
              else
              {
                v5 = v53;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                {
LABEL_28:
                  v50 = v5[2];
                  v49 = v5[3];
                  if (v50 >= v49 >> 1)
                    v5 = sub_1A9117D58((_QWORD *)(v49 > 1), v50 + 1, 1, v5);
                  v5[2] = v50 + 1;
                  v51 = &v5[4 * v50];
                  v51[4] = v46;
                  v51[5] = v48;
                  v51[6] = a1;
                  v51[7] = a2;
                  return v5;
                }
              }
              v5 = sub_1A9117D58(0, v5[2] + 1, 1, v5);
              goto LABEL_28;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          return v53;
        }
      }
      v24 = sub_1A9117D58((_QWORD *)(v25 > 1), v4, 1, v24);
      goto LABEL_8;
    }
    v27 = sub_1A93F9450();
    v29 = v28;
    if ((sub_1A93F9420() & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v24 = sub_1A9117D58(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v14 = v24[2];
      v30 = v24[3];
      v3 = v14 + 1;
      if (v14 < v30 >> 1)
      {
LABEL_12:
        v24[2] = v3;
        v31 = &v24[4 * v14];
        v31[4] = 0;
        v31[5] = 0;
        v31[6] = v27;
        v31[7] = v29;
        goto LABEL_13;
      }
    }
    v24 = sub_1A9117D58((_QWORD *)(v30 > 1), v3, 1, v24);
    goto LABEL_12;
  }
  return result;
}

uint64_t AssetReaderTimelineAlignment.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation28AssetReaderTimelineAlignment_logger;
  v2 = sub_1A93F7698();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AssetReaderTimelineAlignment.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation28AssetReaderTimelineAlignment_logger;
  v2 = sub_1A93F7698();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

BOOL sub_1A9146224()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  char v5;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 16);
  v2 = v1 + 4;
  v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1A908D648(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5 != 4;
}

double sub_1A914628C(Swift::Double a1)
{
  double result;

  *(_QWORD *)&result = (unint64_t)AssetReaderTimelineAlignment.referenceTimestamp(for:)(a1);
  return result;
}

double sub_1A91462B0(Swift::Double a1)
{
  double result;

  *(_QWORD *)&result = (unint64_t)AssetReaderTimelineAlignment.playerTimestamp(for:)(a1);
  return result;
}

_QWORD *sub_1A91462D4(uint64_t a1, uint64_t a2)
{
  return AssetReaderTimelineAlignment.nonMatchingRangesInReference(with:)(a1, a2);
}

_QWORD *sub_1A91462F4(uint64_t a1, uint64_t a2)
{
  return AssetReaderTimelineAlignment.nonMatchingRangesInPlayer(with:)(a1, a2);
}

uint64_t AssetReaderTimelineAlignment.debugDescription.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t *v2;
  os_unfair_lock_s *v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  unint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int64_t v52;
  int64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;

  if (*(_QWORD *)(AssetReaderTimelineAlignment.alignments.getter() + 16))
  {
    swift_bridgeObjectRelease();
    v1 = *(os_unfair_lock_s **)(v0 + 24);
    v2 = (uint64_t *)&v1[4];
    v3 = v1 + 6;
    os_unfair_lock_lock(v1 + 6);
    sub_1A91441B4(v2, &v55);
    os_unfair_lock_unlock(v3);
    v4 = *(_QWORD *)(v55 + 16);
    v5 = MEMORY[0x1E0DEE9D8];
    if (v4)
    {
      v55 = MEMORY[0x1E0DEE9D8];
      sub_1A908182C(0, v4, 0);
      v6 = 0;
      v7 = v55;
      do
      {
        v8 = swift_bridgeObjectRetain();
        v9 = MEMORY[0x1AF412034](v8, &type metadata for AssetReaderTimelineAlignment.Alignment);
        v11 = v10;
        swift_bridgeObjectRelease();
        v55 = v7;
        v13 = *(_QWORD *)(v7 + 16);
        v12 = *(_QWORD *)(v7 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1A908182C(v12 > 1, v13 + 1, 1);
          v7 = v55;
        }
        ++v6;
        *(_QWORD *)(v7 + 16) = v13 + 1;
        v14 = v7 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v9;
        *(_QWORD *)(v14 + 40) = v11;
      }
      while (v4 != v6);
      swift_bridgeObjectRelease();
      v5 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_bridgeObjectRelease();
      v7 = MEMORY[0x1E0DEE9D8];
    }
    v55 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
    sub_1A90819B0();
    sub_1A93F7FE0();
    swift_bridgeObjectRelease();
    v16 = sub_1A93F9450();
    v18 = AssetReaderTimelineAlignment.nonMatchingRangesInPlayer(with:)(v16, v17);
    v19 = v18[2];
    if (v19)
    {
      v57 = v5;
      sub_1A908182C(0, v19, 0);
      v20 = v57;
      v21 = v18 + 7;
      do
      {
        v53 = v19;
        v22 = *(v21 - 3);
        v23 = *(v21 - 2);
        v24 = *(v21 - 1);
        v25 = *v21;
        v55 = 0;
        v56 = 0xE000000000000000;
        sub_1A93F8C70();
        v55 = v22;
        v56 = v23;
        sub_1A93F8DE4();
        sub_1A93F810C();
        sub_1A93F8DE4();
        swift_bridgeObjectRelease();
        v55 = 0;
        v56 = 0xE000000000000000;
        sub_1A93F810C();
        MEMORY[0x1AF413144](v24, v25, v22, v23);
        sub_1A93F9414();
        sub_1A93F810C();
        swift_bridgeObjectRelease();
        v26 = v55;
        v27 = v56;
        v57 = v20;
        v29 = *(_QWORD *)(v20 + 16);
        v28 = *(_QWORD *)(v20 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1A908182C(v28 > 1, v29 + 1, 1);
          v20 = v57;
        }
        v21 += 4;
        *(_QWORD *)(v20 + 16) = v29 + 1;
        v30 = v20 + 16 * v29;
        *(_QWORD *)(v30 + 32) = v26;
        *(_QWORD *)(v30 + 40) = v27;
        v19 = v53 - 1;
      }
      while (v53 != 1);
      swift_bridgeObjectRelease();
      v5 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_bridgeObjectRelease();
      v20 = MEMORY[0x1E0DEE9D8];
    }
    v55 = v20;
    sub_1A93F7FE0();
    swift_bridgeObjectRelease();
    v31 = sub_1A93F9450();
    v33 = AssetReaderTimelineAlignment.nonMatchingRangesInReference(with:)(v31, v32);
    v34 = v33[2];
    if (v34)
    {
      v57 = v5;
      sub_1A908182C(0, v34, 0);
      v35 = v57;
      v36 = v33 + 7;
      do
      {
        v52 = v34;
        v54 = v35;
        v37 = *(v36 - 3);
        v38 = *(v36 - 2);
        v40 = *(v36 - 1);
        v39 = *v36;
        v55 = 0;
        v56 = 0xE000000000000000;
        sub_1A93F8C70();
        v55 = v37;
        v56 = v38;
        sub_1A93F8DE4();
        sub_1A93F810C();
        sub_1A93F8DE4();
        swift_bridgeObjectRelease();
        v55 = 0;
        v56 = 0xE000000000000000;
        sub_1A93F810C();
        v41 = v40;
        v35 = v54;
        MEMORY[0x1AF413144](v41, v39, v37, v38);
        sub_1A93F9414();
        sub_1A93F810C();
        swift_bridgeObjectRelease();
        v42 = v55;
        v43 = v56;
        v57 = v54;
        v45 = *(_QWORD *)(v54 + 16);
        v44 = *(_QWORD *)(v54 + 24);
        if (v45 >= v44 >> 1)
        {
          sub_1A908182C(v44 > 1, v45 + 1, 1);
          v35 = v57;
        }
        v36 += 4;
        *(_QWORD *)(v35 + 16) = v45 + 1;
        v46 = v35 + 16 * v45;
        *(_QWORD *)(v46 + 32) = v42;
        *(_QWORD *)(v46 + 40) = v43;
        v34 = v52 - 1;
      }
      while (v52 != 1);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v35 = MEMORY[0x1E0DEE9D8];
    }
    v55 = v35;
    sub_1A93F7FE0();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
    v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1A94055A0;
    v55 = 0;
    v56 = 0xE000000000000000;
    sub_1A93F8C70();
    swift_bridgeObjectRelease();
    v55 = 0xD000000000000011;
    v56 = 0x80000001A9444090;
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    v48 = v56;
    *(_QWORD *)(v47 + 32) = v55;
    *(_QWORD *)(v47 + 40) = v48;
    v55 = 0;
    v56 = 0xE000000000000000;
    sub_1A93F8C70();
    swift_bridgeObjectRelease();
    v55 = 0xD00000000000001BLL;
    v56 = 0x80000001A94440B0;
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    v49 = v56;
    *(_QWORD *)(v47 + 48) = v55;
    *(_QWORD *)(v47 + 56) = v49;
    v55 = 0;
    v56 = 0xE000000000000000;
    sub_1A93F8C70();
    swift_bridgeObjectRelease();
    v55 = 0xD00000000000001FLL;
    v56 = 0x80000001A94440D0;
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    v50 = v56;
    *(_QWORD *)(v47 + 64) = v55;
    *(_QWORD *)(v47 + 72) = v50;
    v55 = v47;
    v15 = sub_1A93F7FE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 1701736270;
  }
  return v15;
}

uint64_t sub_1A91469E0()
{
  return AssetReaderTimelineAlignment.debugDescription.getter();
}

uint64_t AssetReaderTimelineAlignment.Alignment.debugDescription.getter()
{
  double *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  uint64_t result;

  v1 = *v0;
  if (*v0 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v1 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v2 = v0[1];
  if (v2 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((uint64_t)v2 < (uint64_t)v1)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v3 = v0[2];
  if (v3 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if ((*(_QWORD *)&v1 & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_23;
  if ((*(_QWORD *)&v2 & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_23;
  if ((*(_QWORD *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_23;
  v4 = v0[3];
  if ((*(_QWORD *)&v4 & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_23;
  if (v4 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((uint64_t)v4 >= (uint64_t)v3)
  {
    sub_1A93F8C70();
    sub_1A93F810C();
    sub_1A93F8DE4();
    sub_1A93F810C();
    sub_1A93F8DE4();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    sub_1A93F810C();
    sub_1A93F8DE4();
    sub_1A93F810C();
    sub_1A93F8DE4();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    sub_1A93F810C();
    return 0;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t static AssetReaderTimelineAlignment.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v0 = AssetReaderTimelineAlignment.alignments.getter();
  v1 = AssetReaderTimelineAlignment.alignments.getter();
  v2 = sub_1A9147054(v0, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
    return sub_1A93F9438();
  else
    return 0;
}

uint64_t sub_1A9146D50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  BOOL v9;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v7 = 1;
    }
    else
    {
      v3 = (uint64_t *)(a1 + 32);
      v4 = a2 + 32;
      v5 = v2 - 1;
      do
      {
        v6 = *v3++;
        v4 += 8;
        v11 = v6;
        static NSPredicate.EvaluationTree.== infix(_:_:)((uint64_t)&v11);
        v9 = v5-- != 0;
      }
      while ((v7 & 1) != 0 && v9);
    }
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1A9146DDC(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  char v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;

  v5 = (void *)((unint64_t)a1 >> 62);
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRetain();
    v23 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v6 == v23)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  v7 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_35;
LABEL_3:
  if (v6 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_4:
  if (!v6)
    return 1;
  v8 = a1 & 0xFFFFFFFFFFFFFF8;
  v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v8 = a1;
  if (v5)
    v9 = v8;
  v10 = a2 & 0xFFFFFFFFFFFFFF8;
  v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v10 = a2;
  if (v7)
    v11 = v10;
  if (v9 == v11)
    return 1;
  if (v6 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v24 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_41:
    result = MEMORY[0x1AF4129DC](0, a1);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_43;
  }
  result = (uint64_t)*(id *)(a1 + 32);
LABEL_18:
  v5 = (void *)result;
  v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_43:
    v13 = (id)MEMORY[0x1AF4129DC](0, a2);
LABEL_21:
    v14 = v13;
    type metadata accessor for ServerTranscript(0);
    v15 = sub_1A93F8A3C();

    if ((v15 & 1) != 0)
    {
      v16 = 1 - v6;
      for (i = 5; ; ++i)
      {
        v6 = v16 + i == 5;
        if (v16 + i == 5)
          return v6;
        v21 = i - 4;
        if (v24)
        {
          v22 = (id)MEMORY[0x1AF4129DC](i - 4, a1);
          if (v2)
            goto LABEL_23;
        }
        else
        {
          if (v21 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          v22 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_23:
            v18 = (id)MEMORY[0x1AF4129DC](i - 4, a2);
            goto LABEL_24;
          }
        }
        if (v21 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_39;
        v18 = *(id *)(a2 + 8 * i);
LABEL_24:
        v19 = v18;
        v20 = sub_1A93F8A3C();

        if ((v20 & 1) == 0)
          return v6;
      }
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(a2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9147054(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float64x2_t *v3;
  float64x2_t *v4;
  uint64_t v5;
  char v6;
  BOOL v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (float64x2_t *)(a1 + 32);
  v4 = (float64x2_t *)(a2 + 32);
  v5 = v2 - 1;
  do
  {
    v6 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*v3, *v4), (int32x4_t)vceqq_f64(v3[1], v4[1]))), 0xFuLL)));
    v8 = v5-- != 0;
    if ((v6 & 1) == 0)
      break;
    v3 += 2;
    v4 += 2;
  }
  while (v8);
  return v6 & 1;
}

uint64_t sub_1A91470D8(uint64_t a1, uint64_t a2)
{
  return sub_1A91474F8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DownloadedAssetEffect, (uint64_t (*)(char *, char *))_s18PodcastsFoundation21DownloadedAssetEffectO2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_1A91470EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  BOOL v14;
  uint64_t result;
  _QWORD *v16;
  _QWORD *v17;
  int32x2_t v18;
  BOOL v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = 0;
    v4 = a1 + 32;
    v5 = a2 + 32;
    while (1)
    {
      v6 = v4 + 32 * v3;
      v7 = v5 + 32 * v3;
      if (*(double *)v6 != *(double *)v7 || *(double *)(v6 + 8) != *(double *)(v7 + 8))
        return 0;
      v9 = *(_QWORD *)(v6 + 16);
      v10 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v9 + 16);
      if (v11 != *(_QWORD *)(v10 + 16))
        return 0;
      v12 = *(unsigned __int8 *)(v6 + 24);
      v13 = *(unsigned __int8 *)(v7 + 24);
      if (v11)
        v14 = v9 == v10;
      else
        v14 = 1;
      if (!v14)
      {
        v16 = (_QWORD *)(v10 + 56);
        v17 = (_QWORD *)(v9 + 56);
        do
        {
          v18 = vmovn_s64(vceqq_f64(*(float64x2_t *)(v17 - 3), *(float64x2_t *)(v16 - 3)));
          if ((v18.i32[0] & v18.i32[1] & 1) == 0)
            return 0;
          v19 = *(v17 - 1) == *(v16 - 1) && *v17 == *v16;
          if (!v19 && (sub_1A93F90C0() & 1) == 0)
            return 0;
          v16 += 4;
          v17 += 4;
        }
        while (--v11);
      }
      if (v12 != v13)
        return 0;
      ++v3;
      result = 1;
      if (v3 == v2)
        return result;
    }
  }
  return 1;
}

uint64_t sub_1A914721C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *i;
  int32x2_t v5;
  BOOL v6;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a2 + 56);
    for (i = (_QWORD *)(a1 + 56); ; i += 4)
    {
      v5 = vmovn_s64(vceqq_f64(*(float64x2_t *)(i - 3), *(float64x2_t *)(v3 - 3)));
      if ((v5.i32[0] & v5.i32[1] & 1) == 0)
        break;
      v6 = *(i - 1) == *(v3 - 1) && *i == *v3;
      if (!v6 && (sub_1A93F90C0() & 1) == 0)
        break;
      v3 += 4;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1A91472C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  _QWORD *v6;
  _QWORD *v7;
  int32x2_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    for (i = 0; ; i += 40)
    {
      v6 = (_QWORD *)(a1 + i);
      v7 = (_QWORD *)(a2 + i);
      v8 = vmovn_s64(vceqq_f64(*(float64x2_t *)(a1 + i + 32), *(float64x2_t *)(a2 + i + 32)));
      if ((v8.i32[0] & v8.i32[1] & 1) == 0)
        break;
      v9 = v6[7];
      v10 = v6[8];
      v11 = v7[7];
      v12 = v7[8];
      if (v9)
      {
        if (!v11)
          return 0;
        v13 = v6[6] == v7[6] && v9 == v11;
        if (!v13 && (sub_1A93F90C0() & 1) == 0)
          return 0;
      }
      else if (v11)
      {
        return 0;
      }
      if ((sub_1A91470EC(v10, v12) & 1) == 0)
        return 0;
      if (!--v2)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_1A9147398(uint64_t a1, uint64_t a2)
{
  return sub_1A9147780(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], &qword_1EEAB8218, MEMORY[0x1E0CB0028]);
}

BOOL sub_1A91473B4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1A9147420(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1A93F90C0(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1A93F90C0() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A91474E4(uint64_t a1, uint64_t a2)
{
  return sub_1A91474F8(a1, a2, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot, (uint64_t (*)(char *, char *))static PodcastsMediaLibrary.MediaItemSnapshot.== infix(_:_:));
}

uint64_t sub_1A91474F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v21;
  uint64_t v23;

  v8 = a3(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15 == *(_QWORD *)(a2 + 16))
  {
    if (!v15 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v17 = *(_QWORD *)(v12 + 72);
      v18 = v15 - 1;
      do
      {
        sub_1A9064630(a1 + v16, (uint64_t)v14, a3);
        sub_1A9064630(a2 + v16, (uint64_t)v10, a3);
        v19 = a4(v14, v10);
        sub_1A9064714((uint64_t)v10, a3);
        sub_1A9064714((uint64_t)v14, a3);
        v21 = v18-- != 0;
        if ((v19 & 1) == 0)
          break;
        v16 += v17;
      }
      while (v21);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_1A9147634(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_BYTE *)(a2 + 64);
    v4 = (_BYTE *)(a1 + 64);
    do
    {
      v5 = *((_QWORD *)v4 - 4);
      v6 = *((_QWORD *)v3 - 4);
      v8 = *((_QWORD *)v3 - 2);
      v7 = *((_QWORD *)v3 - 1);
      if (*v4 == 1)
      {
        if ((*v3 & 1) == 0)
          goto LABEL_23;
        v9 = *((_QWORD *)v4 - 2);
        v10 = *((_QWORD *)v4 - 1);
        v11 = v5 == v6 && *((_QWORD *)v4 - 3) == *((_QWORD *)v3 - 3);
        if (!v11 && (sub_1A93F90C0() & 1) == 0)
          return 0;
        v12 = v9 == v8 && v10 == v7;
        if (!v12 && (sub_1A93F90C0() & 1) == 0)
          return 0;
      }
      else
      {
        if ((*v3 & 1) != 0)
          return 0;
        if (v5 != v6)
        {
LABEL_23:
          sub_1A912AC00(*((_QWORD *)v3 - 4), *((_QWORD *)v3 - 3), *((_QWORD *)v3 - 2), *((_QWORD *)v3 - 1), 0);
          return 0;
        }
        sub_1A912AC00(v5, *((_QWORD *)v3 - 3), *((_QWORD *)v3 - 2), *((_QWORD *)v3 - 1), 0);
      }
      v3 += 40;
      v4 += 40;
      --v2;
    }
    while (v2);
  }
  return 1;
}

BOOL sub_1A9147750(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
}

uint64_t sub_1A9147764(uint64_t a1, uint64_t a2)
{
  return sub_1A9147780(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE690], &qword_1EEAB8220, MEMORY[0x1E0CAE6A8]);
}

uint64_t sub_1A9147780(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, unint64_t, uint64_t);
  uint64_t v22;
  unint64_t *v23;
  unint64_t *v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t);
  BOOL v29;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);

  v10 = a3(0);
  MEMORY[0x1E0C80A78](v10);
  v14.n128_f64[0] = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v31 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17 == *(_QWORD *)(a2 + 16))
  {
    if (!v17 || a1 == a2)
    {
      v26 = 1;
    }
    else
    {
      v34 = v13;
      v35 = v12;
      v36 = a3;
      v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v31 = *(_QWORD *)(v12 + 72);
      v32 = a1;
      v33 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
      v19 = v17 - 1;
      v20 = v13;
      do
      {
        v21 = v33;
        ((void (*)(char *, unint64_t, uint64_t, __n128))v33)(v16, a1 + v18, v10, v14);
        v22 = a2;
        v21(v20, a2 + v18, v10);
        v23 = a4;
        v24 = a4;
        v25 = a5;
        sub_1A9066CA8(v24, v36, a5);
        v26 = sub_1A93F8004();
        v27 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
        v27(v20, v10);
        v27((uint64_t)v16, v10);
        v29 = v19-- != 0;
        if ((v26 & 1) == 0)
          break;
        v18 += v31;
        a5 = v25;
        a4 = v23;
        a2 = v22;
        a1 = v32;
      }
      while (v29);
    }
  }
  else
  {
    v26 = 0;
  }
  return v26 & 1;
}

uint64_t sub_1A9147924(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t *i;
  unint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = (unint64_t *)(a2 + 40);
    for (i = (unint64_t *)(a1 + 40); *(i - 1) == *(v3 - 1); i += 2)
    {
      v5 = *i;
      v6 = *v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = sub_1A91479D8(v5, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v7 & 1) == 0)
        break;
      v3 += 2;
      if (!--v2)
        return 1;
    }
  }
  return 0;
}

id sub_1A91479D8(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  id v13;
  void *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;

  v2 = a2;
  v3 = a1;
  v4 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v30 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v5 == v30)
      goto LABEL_4;
LABEL_48:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  swift_bridgeObjectRetain();
  v5 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  v6 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_47;
LABEL_3:
  if (v5 != *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_48;
LABEL_4:
  if (!v5)
    goto LABEL_37;
  v7 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v7 = v3;
  if (!v4)
    v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v8 = v2 & 0xFFFFFFFFFFFFFF8;
  v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v9 = v10;
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_54;
  v31 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_55;
  for (result = *(id *)(v3 + 32); ; result = (id)MEMORY[0x1AF4129DC](0, v3))
  {
    v12 = result;
    if ((v2 & 0xC000000000000001) == 0)
      break;
    v13 = (id)MEMORY[0x1AF4129DC](0, v2);
LABEL_21:
    v14 = v13;
    sub_1A90A344C();
    v15 = sub_1A93F8A3C();

    if ((v15 & 1) == 0)
      goto LABEL_48;
    v16 = v5 - 1;
    if (v5 == 1)
      return (id)(v5 & 1);
    if (((v2 | v3) & 0xC000000000000001) != 0)
    {
      v17 = 0;
      v18 = v5 - 2;
      while (v16 != v17)
      {
        v5 = v17 + 1;
        if (v31)
          v19 = (id)MEMORY[0x1AF4129DC](v17 + 1, v3);
        else
          v19 = *(id *)(v3 + 40 + 8 * v17);
        v20 = v19;
        if ((v2 & 0xC000000000000001) != 0)
        {
          v21 = (id)MEMORY[0x1AF4129DC](v17 + 1, v2);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v8 + 16))
            goto LABEL_53;
          v21 = *(id *)(v2 + 40 + 8 * v17);
        }
        v22 = v21;
        v5 = sub_1A93F8A3C();

        if ((v5 & 1) != 0 && v18 != v17++)
          continue;
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v8 + 16);
      if (v24 <= 1)
        v24 = 1;
      v25 = v24 - 1;
      v26 = (void **)(v3 + 40);
      v8 = v2 + 40;
      while (v16)
      {
        if (!v25)
          goto LABEL_52;
        v28 = *v26++;
        v27 = v28;
        v29 = *(void **)v8;
        v8 += 8;
        v2 = v27;
        v3 = v29;
        v5 = sub_1A93F8A3C();

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16)
            continue;
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    ;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9147CBC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v0 = AssetReaderTimelineAlignment.alignments.getter();
  v1 = AssetReaderTimelineAlignment.alignments.getter();
  v2 = sub_1A9147054(v0, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
    return sub_1A93F9438();
  else
    return 0;
}

uint64_t sub_1A9147D48()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t sub_1A9147D9C()
{
  return sub_1A93F7FBC();
}

uint64_t sub_1A9147DB8()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t sub_1A9147E08@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A9147E58(_QWORD *a1@<X8>)
{
  *a1 = 0x6E656D6E67696C61;
  a1[1] = 0xEA00000000007374;
}

uint64_t sub_1A9147E78()
{
  return 0x6E656D6E67696C61;
}

uint64_t sub_1A9147E94@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1A9147EE8()
{
  sub_1A914A4B4();
  return sub_1A93F945C();
}

uint64_t sub_1A9147F10()
{
  sub_1A914A4B4();
  return sub_1A93F9468();
}

uint64_t AssetReaderTimelineAlignment.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v7[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB81A8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A914A4B4();
  sub_1A93F93D8();
  v7[1] = AssetReaderTimelineAlignment.alignments.getter();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7A40);
  sub_1A914B114(&qword_1EEAB81B8, (uint64_t (*)(void))sub_1A914A4F8, MEMORY[0x1E0DEAF10]);
  sub_1A93F9030();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

char *AssetReaderTimelineAlignment.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1A914A64C(a1);
}

char *sub_1A914807C@<X0>(_QWORD *a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = sub_1A914A64C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A91480A4(_QWORD *a1)
{
  return AssetReaderTimelineAlignment.encode(to:)(a1);
}

uint64_t AssetReaderTimelineAlignment.inMemorySize.getter()
{
  unint64_t v0;
  uint64_t result;

  v0 = *(_QWORD *)(AssetReaderTimelineAlignment.alignments.getter() + 16);
  result = swift_bridgeObjectRelease();
  if (!(v0 >> 59))
    return 32 * v0;
  __break(1u);
  return result;
}

uint64_t sub_1A91480F8()
{
  unint64_t v0;
  uint64_t result;

  v0 = *(_QWORD *)(AssetReaderTimelineAlignment.alignments.getter() + 16);
  result = swift_bridgeObjectRelease();
  if (!(v0 >> 59))
    return 32 * v0;
  __break(1u);
  return result;
}

BOOL sub_1A9148130(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 24) < *(double *)(a2 + 16);
}

BOOL sub_1A9148144(uint64_t a1, double *a2)
{
  return *(double *)(a1 + 8) < *a2;
}

uint64_t sub_1A9148158(double *a1)
{
  _QWORD **v1;
  _QWORD **v2;
  double v3;
  double v4;
  double v5;
  double v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  BOOL v22;
  BOOL v23;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  BOOL v31;
  BOOL v32;
  unint64_t v34;
  unint64_t v35;
  double *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;

  v2 = v1;
  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = *v1;
  v8 = v7[2];
  if (v8)
  {
    swift_bridgeObjectRetain();
    v9 = 0;
    v10 = v8 - 1;
    v11 = 7;
    while (1)
    {
      v12 = *(double *)&v7[v11 - 3];
      v13 = *(double *)&v7[v11 - 2];
      v14 = *(double *)&v7[v11 - 1];
      v15 = *(double *)&v7[v11];
      v16 = sub_1A93F9408();
      v17 = v12 - (double)v16;
      v18 = v13 + (double)v16;
      v19 = v4 - (double)v16;
      v20 = v3 + (double)v16;
      if (v17 > v18 || v19 > v20)
      {
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      v22 = v19 == v20 || v17 == v18;
      v23 = !v22 && v20 > v17;
      if (v23 && v18 > v19)
      {
        v25 = sub_1A93F9408();
        v26 = v14 - (double)v25;
        v27 = v15 + (double)v25;
        v28 = v6 - (double)v25;
        v29 = v5 + (double)v25;
        if (v26 > v27 || v28 > v29)
          goto LABEL_47;
        v31 = v29 > v26 && v27 > v28;
        v32 = !v31 || v26 == v27;
        if (!v32 && v28 != v29)
          break;
      }
      if (v10 == v9)
        goto LABEL_36;
      ++v9;
      v11 += 4;
      if (v9 >= v7[2])
      {
        __break(1u);
LABEL_36:
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
    }
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    sub_1A91483D4();
    v45 = v38;
    v46 = v37;
    swift_release();
    swift_getKeyPath();
    sub_1A91483D4();
    v40 = v39;
    v42 = v41;
    swift_release();
    v7 = *v2;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A9398DC4(v7);
      v7 = (_QWORD *)result;
    }
    if (v9 < v7[2])
    {
      v44 = &v7[v11];
      *(v44 - 3) = v46;
      *(v44 - 2) = v45;
      *(v44 - 1) = v40;
      *v44 = v42;
      goto LABEL_41;
    }
    __break(1u);
  }
  else
  {
LABEL_37:
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
LABEL_48:
      result = (uint64_t)sub_1A91178E4(0, v7[2] + 1, 1, v7);
      v7 = (_QWORD *)result;
    }
    v35 = v7[2];
    v34 = v7[3];
    if (v35 >= v34 >> 1)
    {
      result = (uint64_t)sub_1A91178E4((_QWORD *)(v34 > 1), v35 + 1, 1, v7);
      v7 = (_QWORD *)result;
    }
    v7[2] = v35 + 1;
    v36 = (double *)&v7[4 * v35];
    v36[4] = v4;
    v36[5] = v3;
    v36[6] = v6;
    v36[7] = v5;
LABEL_41:
    *v2 = v7;
  }
  return result;
}

uint64_t sub_1A91483D4()
{
  double v0;
  uint64_t result;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;

  swift_getAtKeyPath();
  v0 = v5;
  swift_getAtKeyPath();
  if (v3 < v5)
    v0 = v3;
  swift_getAtKeyPath();
  result = swift_getAtKeyPath();
  if (v6 > v4)
    v2 = v6;
  else
    v2 = v4;
  if (v0 > v2)
    __break(1u);
  return result;
}

uint64_t sub_1A91484C0(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_1A9148538(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  int64_t v5;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result || a1 > *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(v3 + 16) <= a1)
      v5 = a1;
    else
      v5 = *(_QWORD *)(v3 + 16);
    return sub_1A908182C(result, v5, 0);
  }
  return result;
}

uint64_t sub_1A914859C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if ((result & 1) == 0)
    return sub_1A908182C(0, *(_QWORD *)(v1 + 16) + 1, 1);
  return result;
}

uint64_t sub_1A91485E4(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  if (result + 1 > (uint64_t)(v2 >> 1))
    return sub_1A908182C(v2 > 1, result + 1, 1);
  return result;
}

uint64_t sub_1A914860C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  *(_QWORD *)(v4 + 16) = result + 1;
  v5 = v4 + 16 * result;
  *(_QWORD *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_1A9148624(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double v17;
  double *v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  double *__dst;

  v3 = a1[1];
  result = sub_1A93F9054();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v89 = *a1;
      v90 = -1;
      v91 = 1;
      v92 = *a1;
      do
      {
        v93 = *(double *)(v89 + 32 * v91);
        v94 = v90;
        v95 = v92;
        do
        {
          if (v93 >= *(double *)v95)
            break;
          if (!v89)
            goto LABEL_141;
          v96 = *(_QWORD *)(v95 + 56);
          v97 = *(_OWORD *)(v95 + 40);
          v98 = *(_OWORD *)(v95 + 16);
          *(_OWORD *)(v95 + 32) = *(_OWORD *)v95;
          *(_OWORD *)(v95 + 48) = v98;
          *(double *)v95 = v93;
          *(_OWORD *)(v95 + 8) = v97;
          *(_QWORD *)(v95 + 24) = v96;
          v95 -= 32;
        }
        while (!__CFADD__(v94++, 1));
        ++v91;
        v92 += 32;
        --v90;
      }
      while (v91 != v3);
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v109 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (double *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v100 = v12;
      v111 = v9;
      if (v13 >= 2)
      {
        v101 = *v109;
        do
        {
          v102 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v101)
            goto LABEL_145;
          v103 = v100;
          v104 = *(_QWORD *)&v100[16 * v102 + 32];
          v105 = *(_QWORD *)&v100[16 * v13 + 24];
          sub_1A9149A8C((double *)(v101 + 32 * v104), (double *)(v101 + 32 * *(_QWORD *)&v100[16 * v13 + 16]), v101 + 32 * v105, __dst);
          if (v1)
            break;
          if (v105 < v104)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v103 = sub_1A9234330((uint64_t)v103);
          if (v102 >= *((_QWORD *)v103 + 2))
            goto LABEL_134;
          v106 = &v103[16 * v102 + 32];
          *(_QWORD *)v106 = v104;
          *((_QWORD *)v106 + 1) = v105;
          v107 = *((_QWORD *)v103 + 2);
          if (v13 > v107)
            goto LABEL_135;
          memmove(&v103[16 * v13 + 16], &v103[16 * v13 + 32], 16 * (v107 - v13));
          v100 = v103;
          *((_QWORD *)v103 + 2) = v107 - 1;
          v13 = v107 - 1;
        }
        while (v107 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v111 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v111 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_1A93F837C();
    *(_QWORD *)(v8 + 16) = v7;
    v111 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v110 = *a1 + 64;
  v108 = *a1 + 24;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v112 = v6;
  v113 = v3;
  v114 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 32 * v10);
      v16 = 32 * v14;
      v17 = *(double *)(v11 + 32 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (double *)(v110 + 32 * v14);
        v19 = v15;
        while (1)
        {
          v20 = v19;
          v19 = *v18;
          if (v15 < v17 == *v18 >= v20)
            break;
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v21 = 32 * v10;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = (_OWORD *)(v11 + v16);
              v25 = v11 + v21;
              v26 = *(_OWORD *)(v11 + v16);
              v27 = *(_OWORD *)(v11 + v16 + 16);
              v28 = *(_OWORD *)(v11 + v21 - 16);
              *v24 = *(_OWORD *)(v11 + v21 - 32);
              v24[1] = v28;
              *(_OWORD *)(v25 - 32) = v26;
              *(_OWORD *)(v25 - 16) = v27;
            }
            ++v23;
            v21 -= 32;
            v16 += 32;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v29 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v29 >= v3)
      v29 = v3;
    if (v29 < v14)
      break;
    if (v10 != v29)
    {
      v30 = v108 + 32 * v10;
      do
      {
        v31 = *(double *)(v11 + 32 * v10);
        v32 = v14;
        v33 = v30;
        do
        {
          v34 = (__int128 *)(v33 - 56);
          if (v31 >= *(double *)(v33 - 56))
            break;
          if (!v11)
            goto LABEL_142;
          v36 = *v34;
          v35 = *(_OWORD *)(v33 - 40);
          *(_QWORD *)(v33 - 32) = *(_QWORD *)v33;
          v33 -= 32;
          v37 = *(_OWORD *)(v33 + 16);
          v34[2] = v36;
          v34[3] = v35;
          *(double *)(v33 - 24) = v31;
          *(_OWORD *)(v33 - 16) = v37;
          ++v32;
        }
        while (v10 != v32);
        ++v10;
        v30 += 32;
      }
      while (v10 != v29);
      v10 = v29;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A9233E0C(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v39 = *((_QWORD *)v12 + 2);
    v38 = *((_QWORD *)v12 + 3);
    v13 = v39 + 1;
    v11 = v114;
    if (v39 >= v38 >> 1)
    {
      v88 = sub_1A9233E0C((char *)(v38 > 1), v39 + 1, 1, v12);
      v11 = v114;
      v12 = v88;
    }
    *((_QWORD *)v12 + 2) = v13;
    v40 = v12 + 32;
    v41 = &v12[16 * v39 + 32];
    *(_QWORD *)v41 = v14;
    *((_QWORD *)v41 + 1) = v10;
    if (v39)
    {
      while (1)
      {
        v42 = v13 - 1;
        if (v13 >= 4)
        {
          v47 = &v40[16 * v13];
          v48 = *((_QWORD *)v47 - 8);
          v49 = *((_QWORD *)v47 - 7);
          v53 = __OFSUB__(v49, v48);
          v50 = v49 - v48;
          if (v53)
            goto LABEL_120;
          v52 = *((_QWORD *)v47 - 6);
          v51 = *((_QWORD *)v47 - 5);
          v53 = __OFSUB__(v51, v52);
          v45 = v51 - v52;
          v46 = v53;
          if (v53)
            goto LABEL_121;
          v54 = v13 - 2;
          v55 = &v40[16 * v13 - 32];
          v57 = *(_QWORD *)v55;
          v56 = *((_QWORD *)v55 + 1);
          v53 = __OFSUB__(v56, v57);
          v58 = v56 - v57;
          if (v53)
            goto LABEL_123;
          v53 = __OFADD__(v45, v58);
          v59 = v45 + v58;
          if (v53)
            goto LABEL_126;
          if (v59 >= v50)
          {
            v77 = &v40[16 * v42];
            v79 = *(_QWORD *)v77;
            v78 = *((_QWORD *)v77 + 1);
            v53 = __OFSUB__(v78, v79);
            v80 = v78 - v79;
            if (v53)
              goto LABEL_130;
            v70 = v45 < v80;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v71 = *((_QWORD *)v12 + 4);
            v72 = *((_QWORD *)v12 + 5);
            v53 = __OFSUB__(v72, v71);
            v64 = v72 - v71;
            v65 = v53;
            goto LABEL_77;
          }
          v44 = *((_QWORD *)v12 + 4);
          v43 = *((_QWORD *)v12 + 5);
          v53 = __OFSUB__(v43, v44);
          v45 = v43 - v44;
          v46 = v53;
        }
        if ((v46 & 1) != 0)
          goto LABEL_122;
        v54 = v13 - 2;
        v60 = &v40[16 * v13 - 32];
        v62 = *(_QWORD *)v60;
        v61 = *((_QWORD *)v60 + 1);
        v63 = __OFSUB__(v61, v62);
        v64 = v61 - v62;
        v65 = v63;
        if (v63)
          goto LABEL_125;
        v66 = &v40[16 * v42];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v53 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v53)
          goto LABEL_128;
        if (__OFADD__(v64, v69))
          goto LABEL_129;
        if (v64 + v69 >= v45)
        {
          v70 = v45 < v69;
LABEL_83:
          if (v70)
            v42 = v54;
          goto LABEL_85;
        }
LABEL_77:
        if ((v65 & 1) != 0)
          goto LABEL_124;
        v73 = &v40[16 * v42];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v53 = __OFSUB__(v74, v75);
        v76 = v74 - v75;
        if (v53)
          goto LABEL_127;
        if (v76 < v64)
          goto LABEL_15;
LABEL_85:
        v81 = v42 - 1;
        if (v42 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v82 = v12;
        v83 = &v40[16 * v81];
        v84 = *(_QWORD *)v83;
        v85 = &v40[16 * v42];
        v86 = *((_QWORD *)v85 + 1);
        sub_1A9149A8C((double *)(v11 + 32 * *(_QWORD *)v83), (double *)(v11 + 32 * *(_QWORD *)v85), v11 + 32 * v86, __dst);
        if (v1)
          goto LABEL_93;
        if (v86 < v84)
          goto LABEL_117;
        if (v42 > *((_QWORD *)v82 + 2))
          goto LABEL_118;
        *(_QWORD *)v83 = v84;
        *(_QWORD *)&v40[16 * v81 + 8] = v86;
        v87 = *((_QWORD *)v82 + 2);
        if (v42 >= v87)
          goto LABEL_119;
        v12 = v82;
        v13 = v87 - 1;
        memmove(&v40[16 * v42], v85 + 16, 16 * (v87 - 1 - v42));
        *((_QWORD *)v82 + 2) = v87 - 1;
        v11 = v114;
        if (v87 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v112;
    v3 = v113;
    if (v10 >= v113)
    {
      v9 = v111;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t sub_1A9148D10(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  double *v30;
  double v31;
  uint64_t v32;
  double *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t i;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  unint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  double *__dst;

  v3 = a1[1];
  result = sub_1A93F9054();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v88 = *a1;
      v89 = *a1 + 32;
      v90 = -1;
      for (i = 1; i != v3; ++i)
      {
        v92 = *(double *)(v88 + 32 * i + 16);
        v93 = v90;
        v94 = v89;
        do
        {
          if (v92 >= *(double *)(v94 - 16))
            break;
          if (!v88)
            goto LABEL_141;
          v95 = *(_QWORD *)(v94 + 24);
          v96 = *(_OWORD *)v94;
          v97 = *(_OWORD *)(v94 - 16);
          *(_OWORD *)v94 = *(_OWORD *)(v94 - 32);
          *(_OWORD *)(v94 + 16) = v97;
          *(double *)(v94 - 16) = v92;
          *(_QWORD *)(v94 - 8) = v95;
          *(_OWORD *)(v94 - 32) = v96;
          v94 -= 32;
        }
        while (!__CFADD__(v93++, 1));
        v89 += 32;
        --v90;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v107 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (double *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v99 = v12;
      v109 = v9;
      if (v13 >= 2)
      {
        v100 = *v107;
        do
        {
          v101 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v100)
            goto LABEL_145;
          v102 = v99;
          v103 = *(_QWORD *)&v99[16 * v101 + 32];
          v104 = *(_QWORD *)&v99[16 * v13 + 24];
          sub_1A9149D04((double *)(v100 + 32 * v103), (double *)(v100 + 32 * *(_QWORD *)&v99[16 * v13 + 16]), v100 + 32 * v104, __dst);
          if (v1)
            break;
          if (v104 < v103)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v102 = sub_1A9234330((uint64_t)v102);
          if (v101 >= *((_QWORD *)v102 + 2))
            goto LABEL_134;
          v105 = &v102[16 * v101 + 32];
          *(_QWORD *)v105 = v103;
          *((_QWORD *)v105 + 1) = v104;
          v106 = *((_QWORD *)v102 + 2);
          if (v13 > v106)
            goto LABEL_135;
          memmove(&v102[16 * v13 + 16], &v102[16 * v13 + 32], 16 * (v106 - v13));
          v99 = v102;
          *((_QWORD *)v102 + 2) = v106 - 1;
          v13 = v106 - 1;
        }
        while (v106 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v109 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v109 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_1A93F837C();
    *(_QWORD *)(v8 + 16) = v7;
    v109 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v108 = *a1 + 80;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v110 = v6;
  v111 = v3;
  v112 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 32 * v10 + 16);
      v16 = *(double *)(v11 + 32 * v14 + 16);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v108 + 32 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v15 < v16 == *v17 >= v19)
            break;
          ++v10;
          v17 += 4;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 32 * v10;
          v21 = 32 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = (_OWORD *)(v11 + v21);
              v25 = v11 + v20;
              v26 = *(_OWORD *)(v11 + v21);
              v27 = *(_OWORD *)(v11 + v21 + 16);
              v28 = *(_OWORD *)(v11 + v20 - 16);
              *v24 = *(_OWORD *)(v11 + v20 - 32);
              v24[1] = v28;
              *(_OWORD *)(v25 - 32) = v26;
              *(_OWORD *)(v25 - 16) = v27;
            }
            ++v23;
            v20 -= 32;
            v21 += 32;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v29 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v29 >= v3)
      v29 = v3;
    if (v29 < v14)
      break;
    if (v10 != v29)
    {
      v30 = (double *)(v11 + 32 * v10);
      do
      {
        v31 = *(double *)(v11 + 32 * v10 + 16);
        v32 = v14;
        v33 = v30;
        do
        {
          if (v31 >= *(v33 - 2))
            break;
          if (!v11)
            goto LABEL_142;
          v34 = *((_QWORD *)v33 + 3);
          v35 = *(_OWORD *)v33;
          v36 = *((_OWORD *)v33 - 1);
          *(_OWORD *)v33 = *((_OWORD *)v33 - 2);
          *((_OWORD *)v33 + 1) = v36;
          *(v33 - 2) = v31;
          *((_QWORD *)v33 - 1) = v34;
          *((_OWORD *)v33 - 2) = v35;
          v33 -= 4;
          ++v32;
        }
        while (v10 != v32);
        ++v10;
        v30 += 4;
      }
      while (v10 != v29);
      v10 = v29;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A9233E0C(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v38 = *((_QWORD *)v12 + 2);
    v37 = *((_QWORD *)v12 + 3);
    v13 = v38 + 1;
    v11 = v112;
    if (v38 >= v37 >> 1)
    {
      v87 = sub_1A9233E0C((char *)(v37 > 1), v38 + 1, 1, v12);
      v11 = v112;
      v12 = v87;
    }
    *((_QWORD *)v12 + 2) = v13;
    v39 = v12 + 32;
    v40 = &v12[16 * v38 + 32];
    *(_QWORD *)v40 = v14;
    *((_QWORD *)v40 + 1) = v10;
    if (v38)
    {
      while (1)
      {
        v41 = v13 - 1;
        if (v13 >= 4)
        {
          v46 = &v39[16 * v13];
          v47 = *((_QWORD *)v46 - 8);
          v48 = *((_QWORD *)v46 - 7);
          v52 = __OFSUB__(v48, v47);
          v49 = v48 - v47;
          if (v52)
            goto LABEL_120;
          v51 = *((_QWORD *)v46 - 6);
          v50 = *((_QWORD *)v46 - 5);
          v52 = __OFSUB__(v50, v51);
          v44 = v50 - v51;
          v45 = v52;
          if (v52)
            goto LABEL_121;
          v53 = v13 - 2;
          v54 = &v39[16 * v13 - 32];
          v56 = *(_QWORD *)v54;
          v55 = *((_QWORD *)v54 + 1);
          v52 = __OFSUB__(v55, v56);
          v57 = v55 - v56;
          if (v52)
            goto LABEL_123;
          v52 = __OFADD__(v44, v57);
          v58 = v44 + v57;
          if (v52)
            goto LABEL_126;
          if (v58 >= v49)
          {
            v76 = &v39[16 * v41];
            v78 = *(_QWORD *)v76;
            v77 = *((_QWORD *)v76 + 1);
            v52 = __OFSUB__(v77, v78);
            v79 = v77 - v78;
            if (v52)
              goto LABEL_130;
            v69 = v44 < v79;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v70 = *((_QWORD *)v12 + 4);
            v71 = *((_QWORD *)v12 + 5);
            v52 = __OFSUB__(v71, v70);
            v63 = v71 - v70;
            v64 = v52;
            goto LABEL_77;
          }
          v43 = *((_QWORD *)v12 + 4);
          v42 = *((_QWORD *)v12 + 5);
          v52 = __OFSUB__(v42, v43);
          v44 = v42 - v43;
          v45 = v52;
        }
        if ((v45 & 1) != 0)
          goto LABEL_122;
        v53 = v13 - 2;
        v59 = &v39[16 * v13 - 32];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v62 = __OFSUB__(v60, v61);
        v63 = v60 - v61;
        v64 = v62;
        if (v62)
          goto LABEL_125;
        v65 = &v39[16 * v41];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v52 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v52)
          goto LABEL_128;
        if (__OFADD__(v63, v68))
          goto LABEL_129;
        if (v63 + v68 >= v44)
        {
          v69 = v44 < v68;
LABEL_83:
          if (v69)
            v41 = v53;
          goto LABEL_85;
        }
LABEL_77:
        if ((v64 & 1) != 0)
          goto LABEL_124;
        v72 = &v39[16 * v41];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        v52 = __OFSUB__(v73, v74);
        v75 = v73 - v74;
        if (v52)
          goto LABEL_127;
        if (v75 < v63)
          goto LABEL_15;
LABEL_85:
        v80 = v41 - 1;
        if (v41 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v81 = v12;
        v82 = &v39[16 * v80];
        v83 = *(_QWORD *)v82;
        v84 = &v39[16 * v41];
        v85 = *((_QWORD *)v84 + 1);
        sub_1A9149D04((double *)(v11 + 32 * *(_QWORD *)v82), (double *)(v11 + 32 * *(_QWORD *)v84), v11 + 32 * v85, __dst);
        if (v1)
          goto LABEL_93;
        if (v85 < v83)
          goto LABEL_117;
        if (v41 > *((_QWORD *)v81 + 2))
          goto LABEL_118;
        *(_QWORD *)v82 = v83;
        *(_QWORD *)&v39[16 * v80 + 8] = v85;
        v86 = *((_QWORD *)v81 + 2);
        if (v41 >= v86)
          goto LABEL_119;
        v12 = v81;
        v13 = v86 - 1;
        memmove(&v39[16 * v41], v84 + 16, 16 * (v86 - 1 - v41));
        *((_QWORD *)v81 + 2) = v86 - 1;
        v11 = v112;
        if (v86 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v110;
    v3 = v111;
    if (v10 >= v111)
    {
      v9 = v109;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t sub_1A91493E4(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  double *v28;
  double v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t i;
  double v84;
  double v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  double *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_1A93F9054();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_135;
    if ((unint64_t)v3 >= 2)
    {
      v81 = 0;
      v82 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v84 = *(double *)(v82 + 8 * i);
        v85 = fabs(v84);
        v86 = v81;
        do
        {
          v87 = v82 + 8 * v86;
          if (v85 >= fabs(*(double *)v87))
            break;
          if (!v82)
            goto LABEL_139;
          *(_QWORD *)(v87 + 8) = *(_QWORD *)v87;
          *(double *)(v82 + 8 * v86--) = v84;
        }
        while (v86 != -1);
        ++v81;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_144;
  v99 = result;
  v100 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (double *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_101:
      v98 = v8;
      if (v12 >= 2)
      {
        v88 = *v2;
        do
        {
          v89 = v12 - 2;
          if (v12 < 2)
            goto LABEL_130;
          if (!v88)
            goto LABEL_143;
          v90 = v11;
          v91 = v11 + 32;
          v92 = *(_QWORD *)&v11[16 * v89 + 32];
          v93 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_1A9149F8C((double *)(v88 + 8 * v92), (double *)(v88 + 8 * *(_QWORD *)&v91[16 * v12 - 16]), v88 + 8 * v93, __dst);
          if (v1)
            break;
          if (v93 < v92)
            goto LABEL_131;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v90 = sub_1A9234330((uint64_t)v90);
          if (v89 >= *((_QWORD *)v90 + 2))
            goto LABEL_132;
          v94 = &v90[16 * v89 + 32];
          *(_QWORD *)v94 = v92;
          *((_QWORD *)v94 + 1) = v93;
          v95 = *((_QWORD *)v90 + 2);
          if (v12 > v95)
            goto LABEL_133;
          memmove(&v90[16 * v12 + 16], &v90[16 * v12 + 32], 16 * (v95 - v12));
          v11 = v90;
          *((_QWORD *)v90 + 2) = v95 - 1;
          v12 = v95 - 1;
        }
        while (v95 > 2);
      }
LABEL_112:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v98 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v98 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1A93F837C();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v100;
    v98 = v7;
    __dst = (double *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v96 = v2;
  v97 = *v2 - 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v101 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(double *)(v10 + 8 * v9);
      v15 = fabs(v14);
      v16 = fabs(*(double *)(v10 + 8 * v13));
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        while (1)
        {
          v17 = fabs(v14);
          v14 = *(double *)(v10 + 8 * v9);
          if (v15 < v16 == fabs(v14) >= v17)
            break;
          if (v3 == ++v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v9 < v13)
          goto LABEL_136;
        if (v13 < v9)
        {
          v18 = (uint64_t *)(v97 + 8 * v9);
          v19 = v9;
          v20 = v13;
          v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10)
                goto LABEL_142;
              v22 = *v21;
              *v21 = *v18;
              *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_45;
    if (__OFSUB__(v9, v13))
      goto LABEL_134;
    if (v9 - v13 >= v99)
      goto LABEL_45;
    v23 = v13 + v99;
    if (__OFADD__(v13, v99))
      goto LABEL_137;
    if (v23 >= v3)
      v23 = v3;
    if (v23 < v13)
      break;
    if (v9 != v23)
    {
      v24 = v97 + 8 * v9;
      do
      {
        v25 = *(double *)(v10 + 8 * v9);
        v26 = fabs(v25);
        v27 = v13;
        v28 = (double *)v24;
        do
        {
          v29 = *v28;
          if (v26 >= fabs(*v28))
            break;
          if (!v10)
            goto LABEL_140;
          *v28 = v25;
          v28[1] = v29;
          --v28;
          ++v27;
        }
        while (v9 != v27);
        ++v9;
        v24 += 8;
      }
      while (v9 != v23);
      v9 = v23;
    }
LABEL_45:
    if (v9 < v13)
      goto LABEL_129;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1A9233E0C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v31 = *((_QWORD *)v11 + 2);
    v30 = *((_QWORD *)v11 + 3);
    v12 = v31 + 1;
    v10 = v101;
    if (v31 >= v30 >> 1)
    {
      v80 = sub_1A9233E0C((char *)(v30 > 1), v31 + 1, 1, v11);
      v10 = v101;
      v11 = v80;
    }
    *((_QWORD *)v11 + 2) = v12;
    v32 = v11 + 32;
    v33 = &v11[16 * v31 + 32];
    *(_QWORD *)v33 = v13;
    *((_QWORD *)v33 + 1) = v9;
    if (v31)
    {
      while (1)
      {
        v34 = v12 - 1;
        if (v12 >= 4)
        {
          v39 = &v32[16 * v12];
          v40 = *((_QWORD *)v39 - 8);
          v41 = *((_QWORD *)v39 - 7);
          v45 = __OFSUB__(v41, v40);
          v42 = v41 - v40;
          if (v45)
            goto LABEL_118;
          v44 = *((_QWORD *)v39 - 6);
          v43 = *((_QWORD *)v39 - 5);
          v45 = __OFSUB__(v43, v44);
          v37 = v43 - v44;
          v38 = v45;
          if (v45)
            goto LABEL_119;
          v46 = v12 - 2;
          v47 = &v32[16 * v12 - 32];
          v49 = *(_QWORD *)v47;
          v48 = *((_QWORD *)v47 + 1);
          v45 = __OFSUB__(v48, v49);
          v50 = v48 - v49;
          if (v45)
            goto LABEL_121;
          v45 = __OFADD__(v37, v50);
          v51 = v37 + v50;
          if (v45)
            goto LABEL_124;
          if (v51 >= v42)
          {
            v69 = &v32[16 * v34];
            v71 = *(_QWORD *)v69;
            v70 = *((_QWORD *)v69 + 1);
            v45 = __OFSUB__(v70, v71);
            v72 = v70 - v71;
            if (v45)
              goto LABEL_128;
            v62 = v37 < v72;
            goto LABEL_82;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v63 = *((_QWORD *)v11 + 4);
            v64 = *((_QWORD *)v11 + 5);
            v45 = __OFSUB__(v64, v63);
            v56 = v64 - v63;
            v57 = v45;
            goto LABEL_76;
          }
          v36 = *((_QWORD *)v11 + 4);
          v35 = *((_QWORD *)v11 + 5);
          v45 = __OFSUB__(v35, v36);
          v37 = v35 - v36;
          v38 = v45;
        }
        if ((v38 & 1) != 0)
          goto LABEL_120;
        v46 = v12 - 2;
        v52 = &v32[16 * v12 - 32];
        v54 = *(_QWORD *)v52;
        v53 = *((_QWORD *)v52 + 1);
        v55 = __OFSUB__(v53, v54);
        v56 = v53 - v54;
        v57 = v55;
        if (v55)
          goto LABEL_123;
        v58 = &v32[16 * v34];
        v60 = *(_QWORD *)v58;
        v59 = *((_QWORD *)v58 + 1);
        v45 = __OFSUB__(v59, v60);
        v61 = v59 - v60;
        if (v45)
          goto LABEL_126;
        if (__OFADD__(v56, v61))
          goto LABEL_127;
        if (v56 + v61 >= v37)
        {
          v62 = v37 < v61;
LABEL_82:
          if (v62)
            v34 = v46;
          goto LABEL_84;
        }
LABEL_76:
        if ((v57 & 1) != 0)
          goto LABEL_122;
        v65 = &v32[16 * v34];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v45 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v45)
          goto LABEL_125;
        if (v68 < v56)
          goto LABEL_15;
LABEL_84:
        v73 = v34 - 1;
        if (v34 - 1 >= v12)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v10)
          goto LABEL_141;
        v74 = &v32[16 * v73];
        v75 = *(_QWORD *)v74;
        v76 = v32;
        v77 = &v32[16 * v34];
        v78 = *((_QWORD *)v77 + 1);
        sub_1A9149F8C((double *)(v10 + 8 * *(_QWORD *)v74), (double *)(v10 + 8 * *(_QWORD *)v77), v10 + 8 * v78, __dst);
        if (v1)
          goto LABEL_112;
        if (v78 < v75)
          goto LABEL_115;
        if (v34 > *((_QWORD *)v11 + 2))
          goto LABEL_116;
        *(_QWORD *)v74 = v75;
        *(_QWORD *)&v76[16 * v73 + 8] = v78;
        v79 = *((_QWORD *)v11 + 2);
        if (v34 >= v79)
          goto LABEL_117;
        v12 = v79 - 1;
        memmove(v77, v77 + 16, 16 * (v79 - 1 - v34));
        v32 = v76;
        *((_QWORD *)v11 + 2) = v79 - 1;
        v10 = v101;
        if (v79 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v100;
    if (v9 >= v100)
    {
      v8 = v98;
      v2 = v96;
      goto LABEL_101;
    }
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t sub_1A9149A8C(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  __int128 v16;
  __int128 v17;
  double *v18;
  double *v19;
  double *v20;
  double *v21;
  double v22;
  __int128 v23;
  __int128 v24;
  uint64_t result;
  double *v26;
  double *v27;
  double *v28;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 31;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 5;
  v28 = __src;
  v27 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[4 * v13] <= __dst)
        memmove(__dst, a2, 32 * v13);
      v18 = &v4[4 * v13];
      v26 = v18;
      v28 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        v19 = (double *)(a3 - 32);
        v20 = v6;
        while (1)
        {
          v21 = v19 + 4;
          v22 = *(v20 - 4);
          v20 -= 4;
          if (*(v18 - 4) >= v22)
          {
            v26 = v18 - 4;
            if (v21 < v18 || v19 >= v18 || v21 != v18)
            {
              v24 = *((_OWORD *)v18 - 1);
              *(_OWORD *)v19 = *((_OWORD *)v18 - 2);
              *((_OWORD *)v19 + 1) = v24;
            }
            v20 = v6;
            v18 -= 4;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v21 != v6 || v19 >= v6)
            {
              v23 = *((_OWORD *)v20 + 1);
              *(_OWORD *)v19 = *(_OWORD *)v20;
              *((_OWORD *)v19 + 1) = v23;
            }
            v28 = v20;
            if (v20 <= v7)
              goto LABEL_42;
          }
          v19 -= 4;
          v6 = v20;
          if (v18 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[4 * v10] <= __dst)
      memmove(__dst, __src, 32 * v10);
    v14 = &v4[4 * v10];
    v26 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
          {
            v17 = *((_OWORD *)v4 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v4;
            *((_OWORD *)v7 + 1) = v17;
          }
          v4 += 4;
          v27 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 4;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
          {
            v16 = *((_OWORD *)v6 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v6;
            *((_OWORD *)v7 + 1) = v16;
          }
        }
        v7 += 4;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v28 = v7;
    }
LABEL_42:
    sub_1A9233FBC((void **)&v28, (const void **)&v27, &v26);
    return 1;
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A9149D04(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  __int128 v18;
  double *v19;
  double *v20;
  double *v21;
  double *v22;
  __int128 v23;
  __int128 v24;
  uint64_t result;
  char *v26;
  double *v27;
  double *v28;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 31;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 5;
  v28 = __src;
  v27 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[4 * v13] <= __dst)
        memmove(__dst, a2, 32 * v13);
      v19 = &v4[4 * v13];
      v26 = (char *)v19;
      v28 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        v20 = (double *)(a3 - 32);
        do
        {
          v21 = v20 + 4;
          if (*(v19 - 2) >= *(v6 - 2))
          {
            v26 = (char *)(v19 - 4);
            if (v21 < v19 || v20 >= v19 || v21 != v19)
            {
              v24 = *((_OWORD *)v19 - 1);
              *(_OWORD *)v20 = *((_OWORD *)v19 - 2);
              *((_OWORD *)v20 + 1) = v24;
            }
            v22 = v6;
            v19 -= 4;
            if (v6 <= v7)
              break;
          }
          else
          {
            v22 = v6 - 4;
            if (v21 != v6 || v20 >= v6)
            {
              v23 = *((_OWORD *)v6 - 1);
              *(_OWORD *)v20 = *(_OWORD *)v22;
              *((_OWORD *)v20 + 1) = v23;
            }
            v28 = v6 - 4;
            if (v22 <= v7)
              break;
          }
          v20 -= 4;
          v6 = v22;
        }
        while (v19 > v4);
      }
LABEL_44:
      sub_1A9233FBC((void **)&v28, (const void **)&v27, &v26);
      return 1;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[4 * v10] <= __dst)
      memmove(__dst, __src, 32 * v10);
    v14 = &v4[4 * v10];
    v26 = (char *)v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      v15 = v4;
      while (1)
      {
        if (v6[2] >= v15[2])
        {
          v4 = v15 + 4;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 4;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v15 += 4;
          }
        }
        else
        {
          v16 = v6 + 4;
          v17 = v6;
          if (v7 == v6 && v7 < v16)
            goto LABEL_22;
        }
        v18 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v7 = *(_OWORD *)v17;
        *((_OWORD *)v7 + 1) = v18;
LABEL_22:
        v7 += 4;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v27 = v4;
        v28 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A9149F8C(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double v20;
  uint64_t result;
  double *v22;
  double *v23;
  double *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (double *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 1;
          v19 = v6 - 1;
          v20 = *(v6 - 1);
          if (fabs(*(v16 - 1)) >= fabs(v20))
          {
            v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *v17 = *(v16 - 1);
            --v16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *v17 = v20;
            v24 = --v6;
            if (v19 <= v7)
              goto LABEL_42;
          }
          --v17;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (fabs(*v6) >= fabs(*v4))
        {
          if (v7 != v4)
            *v7 = *v4;
          v23 = ++v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *v7 = *v6;
        }
        ++v7;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1A9234064((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

BOOL _s18PodcastsFoundation28AssetReaderTimelineAlignmentC0F0V2eeoiySbAE_AEtFZ_0(double *a1, double *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
    return 0;
  if (a1[3] == a2[3])
    return a1[2] == a2[2];
  return 0;
}

unint64_t sub_1A914A240()
{
  unint64_t result;

  result = qword_1EEAB8180;
  if (!qword_1EEAB8180)
  {
    result = MEMORY[0x1AF414014](&unk_1A9407B4C, &type metadata for AssetReaderTimelineAlignment.Alignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8180);
  }
  return result;
}

uint64_t sub_1A914A284(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEAB8188);
    v8 = a2;
    result = MEMORY[0x1AF414014](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A914A2E4(uint64_t result, uint64_t (*a2)(_QWORD *, _QWORD *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *, _QWORD *);
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[4];
  _QWORD v24[5];
  uint64_t v25;

  v2 = *(_QWORD *)(result + 16);
  v3 = *(_QWORD *)(result + 24) >> 1;
  if (v2 == v3)
  {
    v4 = MEMORY[0x1E0DEE9D8];
LABEL_3:
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return v4;
  }
  else
  {
    v5 = a2;
    v6 = *(_QWORD *)(result + 48);
    v7 = *(_QWORD *)(result + 56) >> 1;
    v8 = (uint64_t *)(*(_QWORD *)(result + 40) + 32 * v6 + 16);
    v9 = (uint64_t *)(*(_QWORD *)(result + 8) + 32 * v2 + 16);
    v4 = MEMORY[0x1E0DEE9D8];
    v21 = v7;
    while (v2 < v3)
    {
      if (v7 == v6)
        goto LABEL_3;
      if (v6 >= v7)
        goto LABEL_16;
      v13 = *(v9 - 2);
      v14 = *(v9 - 1);
      v15 = *v9;
      v16 = v9[1];
      v17 = *(v8 - 2);
      v18 = *(v8 - 1);
      v19 = *v8;
      v20 = v8[1];
      v23[0] = v13;
      v23[1] = v14;
      v23[2] = v15;
      v23[3] = v16;
      v24[0] = v17;
      v24[1] = v18;
      v24[2] = v19;
      v24[3] = v20;
      result = v5(v23, v24);
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v25 = v4;
        if ((result & 1) == 0)
        {
          result = sub_1A929E504(0, *(_QWORD *)(v4 + 16) + 1, 1);
          v4 = v25;
        }
        v11 = *(_QWORD *)(v4 + 16);
        v10 = *(_QWORD *)(v4 + 24);
        if (v11 >= v10 >> 1)
        {
          result = sub_1A929E504(v10 > 1, v11 + 1, 1);
          v4 = v25;
        }
        *(_QWORD *)(v4 + 16) = v11 + 1;
        v12 = (_QWORD *)(v4 + (v11 << 6));
        v12[4] = v13;
        v12[5] = v14;
        v12[6] = v15;
        v12[7] = v16;
        v12[8] = v17;
        v12[9] = v18;
        v12[10] = v19;
        v12[11] = v20;
        v5 = a2;
        v7 = v21;
      }
      ++v2;
      v8 += 4;
      v9 += 4;
      ++v6;
      if (v3 == v2)
        goto LABEL_3;
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  return result;
}

unint64_t sub_1A914A4B4()
{
  unint64_t result;

  result = qword_1EEAB81B0;
  if (!qword_1EEAB81B0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9407AFC, &type metadata for AssetReaderTimelineAlignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB81B0);
  }
  return result;
}

unint64_t sub_1A914A4F8()
{
  unint64_t result;

  result = qword_1EEAB81C0;
  if (!qword_1EEAB81C0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AssetReaderTimelineAlignment.Alignment, &type metadata for AssetReaderTimelineAlignment.Alignment);
    atomic_store(result, (unint64_t *)&qword_1EEAB81C0);
  }
  return result;
}

uint64_t sub_1A914A53C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D69547972657571 && a2 == 0xEE0065676E615265;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A94441B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

char *sub_1A914A64C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t inited;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  v2 = sub_1A93F7698();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8238);
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A914A4B4();
  v9 = (uint64_t)v23;
  sub_1A93F93C0();
  if (v9)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v20 = v5;
    v21 = v6;
    v23 = a1;
    v19 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7A40);
    sub_1A914B114(&qword_1EEAB8240, (uint64_t (*)(void))sub_1A914B17C, MEMORY[0x1E0DEAF40]);
    v10 = v22;
    sub_1A93F8F7C();
    v12 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8228);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405520;
    *(_BYTE *)(inited + 32) = 0;
    *(_QWORD *)(inited + 40) = v12;
    v14 = sub_1A91154D4(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8230);
    swift_arrayDestroy();
    v15 = v21;
    if (qword_1EEAB6D48 != -1)
      swift_once();
    v16 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEABA660);
    v17 = (uint64_t)v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v20, v16, v2);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v10);
    type metadata accessor for AssetReaderTimelineAlignment();
    v5 = (char *)swift_allocObject();
    sub_1A91446E4(v14, 0, 1, 3, 2000000000000000000, 0, v17);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  }
  return v5;
}

uint64_t sub_1A914A8EC()
{
  return type metadata accessor for AssetReaderTimelineAlignment();
}

uint64_t type metadata accessor for AssetReaderTimelineAlignment()
{
  uint64_t result;

  result = qword_1ED2A5738;
  if (!qword_1ED2A5738)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A914A930()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F7698();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for AssetReaderTimelineAlignment()
{
  return swift_lookUpClassMethod();
}

uint64_t getEnumTagSinglePayload for AssetReaderTimelineAlignment.Alignment(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AssetReaderTimelineAlignment.Alignment(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AssetReaderTimelineAlignment.Alignment()
{
  return &type metadata for AssetReaderTimelineAlignment.Alignment;
}

uint64_t getEnumTagSinglePayload for AssetReaderTimelineAlignment.ReadStartPosition(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A914AA70 + 4 * asc_1A9407620[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for AssetReaderTimelineAlignment.ReadStartPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A914AB28 + 4 * byte_1A940762A[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A914AB5C + 4 * byte_1A9407625[v5]))();
}

uint64_t sub_1A914AB5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A914AB64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A914AB6CLL);
  return result;
}

uint64_t sub_1A914AB78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A914AB80);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A914AB84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A914AB8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A914AB98(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_1A914ABB4(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for AssetReaderTimelineAlignment.ReadStartPosition()
{
  return &type metadata for AssetReaderTimelineAlignment.ReadStartPosition;
}

uint64_t getEnumTagSinglePayload for AssetReaderTimelineAlignment.State(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 < 2)
      v8 = 0;
    if (v8 >= 3)
      return v8 - 2;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A914AC2C + 4 * byte_1A940762F[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for AssetReaderTimelineAlignment.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFC)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A914ACF0 + 4 * byte_1A9407639[v5]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A914AD24 + 4 * byte_1A9407634[v5]))();
}

uint64_t sub_1A914AD24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A914AD2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A914AD34);
  return result;
}

uint64_t sub_1A914AD40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A914AD48);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A914AD4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A914AD54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A914AD60(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  unsigned int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (!v2)
    v3 = -1;
  if (v3 + 1 >= 2)
    return v3;
  else
    return 0;
}

_BYTE *sub_1A914AD8C(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for AssetReaderTimelineAlignment.State()
{
  return &type metadata for AssetReaderTimelineAlignment.State;
}

uint64_t storeEnumTagSinglePayload for AssetReaderTimelineAlignment.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A914ADF4 + 4 * byte_1A940763E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A914AE14 + 4 * byte_1A9407643[v4]))();
}

_BYTE *sub_1A914ADF4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A914AE14(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A914AE1C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A914AE24(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A914AE2C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A914AE34(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AssetReaderTimelineAlignment.CodingKeys()
{
  return &type metadata for AssetReaderTimelineAlignment.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for AssetReaderTimelineAlignment.Alignment.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A914AE9C + 4 * byte_1A940764D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A914AED0 + 4 * byte_1A9407648[v4]))();
}

uint64_t sub_1A914AED0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A914AED8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A914AEE0);
  return result;
}

uint64_t sub_1A914AEEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A914AEF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A914AEF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A914AF00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetReaderTimelineAlignment.Alignment.CodingKeys()
{
  return &type metadata for AssetReaderTimelineAlignment.Alignment.CodingKeys;
}

unint64_t sub_1A914AF20()
{
  unint64_t result;

  result = qword_1EEAB81C8;
  if (!qword_1EEAB81C8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9407954, &type metadata for AssetReaderTimelineAlignment.Alignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB81C8);
  }
  return result;
}

unint64_t sub_1A914AF68()
{
  unint64_t result;

  result = qword_1EEAB81D0;
  if (!qword_1EEAB81D0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9407A44, &type metadata for AssetReaderTimelineAlignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB81D0);
  }
  return result;
}

unint64_t sub_1A914AFB0()
{
  unint64_t result;

  result = qword_1EEAB81D8;
  if (!qword_1EEAB81D8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9407A94, &type metadata for AssetReaderTimelineAlignment.ReadStartPosition);
    atomic_store(result, (unint64_t *)&qword_1EEAB81D8);
  }
  return result;
}

unint64_t sub_1A914AFF8()
{
  unint64_t result;

  result = qword_1EEAB81E0;
  if (!qword_1EEAB81E0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940797C, &type metadata for AssetReaderTimelineAlignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB81E0);
  }
  return result;
}

unint64_t sub_1A914B040()
{
  unint64_t result;

  result = qword_1EEAB81E8;
  if (!qword_1EEAB81E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94079A4, &type metadata for AssetReaderTimelineAlignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB81E8);
  }
  return result;
}

unint64_t sub_1A914B088()
{
  unint64_t result;

  result = qword_1EEAB81F0;
  if (!qword_1EEAB81F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94078C4, &type metadata for AssetReaderTimelineAlignment.Alignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB81F0);
  }
  return result;
}

unint64_t sub_1A914B0D0()
{
  unint64_t result;

  result = qword_1EEAB81F8;
  if (!qword_1EEAB81F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94078EC, &type metadata for AssetReaderTimelineAlignment.Alignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB81F8);
  }
  return result;
}

uint64_t sub_1A914B114(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEAB7A40);
    v8 = a2();
    result = MEMORY[0x1AF414014](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A914B17C()
{
  unint64_t result;

  result = qword_1EEAB8248;
  if (!qword_1EEAB8248)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AssetReaderTimelineAlignment.Alignment, &type metadata for AssetReaderTimelineAlignment.Alignment);
    atomic_store(result, (unint64_t *)&qword_1EEAB8248);
  }
  return result;
}

uint64_t sub_1A914B1C0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BYTE v4[40];
  _BYTE v5[8];
  unint64_t v6;

  v1 = v0;
  sub_1A93F92DC();
  v2 = *(unsigned __int8 *)(v0 + 24);
  sub_1A93F7FBC();
  sub_1A93F92F4();
  if (v2 != 1)
    sub_1A93F930C();
  sub_1A9094604(v1 + 32, (uint64_t)v4);
  sub_1A9094604((uint64_t)v4, (uint64_t)v5);
  if (v6 > 2)
  {
    sub_1A93F92E8();
    sub_1A93F92F4();
    sub_1A93F7FBC();
    sub_1A93F92F4();
    sub_1A93F930C();
  }
  else
  {
    sub_1A93F92E8();
  }
  return sub_1A93F9324();
}

uint64_t sub_1A914B2F4()
{
  return sub_1A914B1C0();
}

uint64_t sub_1A914B334()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 48);
  sub_1A93F7FBC();
  if (v1 != 1)
  {
    sub_1A93F92F4();
    sub_1A93F930C();
    if (v2)
      goto LABEL_3;
    return sub_1A93F92E8();
  }
  sub_1A93F92F4();
  if (!v2)
    return sub_1A93F92E8();
LABEL_3:
  if (v2 == 1 || v2 == 2)
    return sub_1A93F92E8();
  sub_1A93F92E8();
  sub_1A93F92F4();
  sub_1A93F7FBC();
  sub_1A93F92F4();
  return sub_1A93F930C();
}

uint64_t sub_1A914B40C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 48);
  sub_1A93F92DC();
  sub_1A93F7FBC();
  if (v1 == 1)
  {
    sub_1A93F92F4();
    if (!v2)
      goto LABEL_7;
  }
  else
  {
    sub_1A93F92F4();
    sub_1A93F930C();
    if (!v2)
      goto LABEL_7;
  }
  if (v2 != 1 && v2 != 2)
  {
    sub_1A93F92E8();
    sub_1A93F92F4();
    sub_1A93F7FBC();
    sub_1A93F92F4();
    sub_1A93F930C();
    return sub_1A93F9324();
  }
LABEL_7:
  sub_1A93F92E8();
  return sub_1A93F9324();
}

BOOL sub_1A914B524(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  uint64_t v8;
  _OWORD v9[4];
  uint64_t v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v8 = *(_QWORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v10 = *(_QWORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1A914C910((uint64_t)v7, (uint64_t)v9);
}

double sub_1A914B57C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  os_unfair_lock_s *v3;
  double result;
  __int128 v5;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)a1 + 24) + 16);
  os_unfair_lock_lock(v3);
  sub_1A914CE2C(&v5);
  os_unfair_lock_unlock(v3);
  result = *(double *)&v5;
  *a2 = v5;
  return result;
}

uint64_t sub_1A914B5E8(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v2;

  v2 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 16);
  swift_unknownObjectRetain();
  os_unfair_lock_lock(v2);
  sub_1A914CD68();
  os_unfair_lock_unlock(v2);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A914B668()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1A914CCCC(&v4);
  v2 = v4;
  os_unfair_lock_unlock(v1);
  return v2;
}

uint64_t sub_1A914B6BC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  os_unfair_lock_s *v5;

  v5 = (os_unfair_lock_s *)(v2[3] + 16);
  os_unfair_lock_lock(v5);
  sub_1A914B724(v2, a1, a2);
  os_unfair_lock_unlock(v5);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A914B724(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  const void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[8];

  v6 = sub_1A93F7D58();
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7DB8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1[7] = a3;
  result = swift_unknownObjectWeakAssign();
  if (a2)
  {
    if (a1[5])
    {
      v17 = a1[2];
      aBlock[4] = sub_1A90C573C;
      aBlock[5] = a1;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1A908A91C;
      aBlock[3] = &block_descriptor_3;
      v16 = _Block_copy(aBlock);
      swift_retain();
      sub_1A93F7D88();
      aBlock[7] = MEMORY[0x1E0DEE9D8];
      sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
      sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
      sub_1A93F8B5C();
      v14 = v16;
      MEMORY[0x1AF412598](0, v12, v8, v16);
      _Block_release(v14);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return swift_release();
    }
  }
  return result;
}

void (*sub_1A914B930(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9[2];

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = *(os_unfair_lock_s **)(v1 + 24);
  v3[2] = v1;
  v3[3] = v4;
  v5 = v4 + 4;
  os_unfair_lock_lock(v4 + 4);
  sub_1A914CCCC(v9);
  v3[4] = 0;
  v6 = v9[0];
  v7 = v9[1];
  os_unfair_lock_unlock(v5);
  *v3 = v6;
  v3[1] = v7;
  return sub_1A914B9A8;
}

void sub_1A914B9A8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  _QWORD *v6;
  os_unfair_lock_s *v7;

  v2 = *a1;
  v3 = **a1;
  v4 = (*a1)[1];
  v5 = (os_unfair_lock_s *)(*a1)[3];
  v6 = (_QWORD *)(*a1)[2];
  v7 = v5 + 4;
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRetain();
    os_unfair_lock_lock(v7);
    sub_1A914B724(v6, v3, v4);
    os_unfair_lock_unlock(v7);
    swift_unknownObjectRelease();
  }
  else
  {
    os_unfair_lock_lock(v5 + 4);
    sub_1A914B724(v6, v3, v4);
    os_unfair_lock_unlock(v7);
  }
  swift_unknownObjectRelease();
  free(v2);
}

_QWORD *LibraryPodcastStateDataSource.__allocating_init(contextProvider:)(void *a1)
{
  _QWORD *v2;

  swift_allocObject();
  v2 = sub_1A9074094(a1);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_1A914BAB4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  int64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  int64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  uint64_t v64;
  _BOOL8 v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t result;
  uint64_t v81;
  int64_t v82;
  int64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  int64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  int64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103[6];
  uint64_t v104;

  v104 = MEMORY[0x1E0DEE9E8];
  v102 = MEMORY[0x1E0DEE9E8];
  v4 = a1[8];
  if (*(_QWORD *)(a2 + 16) <= *(_QWORD *)(v4 + 16) >> 3)
  {
    v103[0] = a1[8];
    swift_bridgeObjectRetain();
    sub_1A90C11C8(a2);
    v5 = v4;
  }
  else
  {
    swift_bridgeObjectRetain();
    v5 = sub_1A90BFB2C(a2, v4);
  }
  v6 = 0;
  v81 = v5 + 56;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(v5 + 56);
  v10 = a1 + 10;
  v82 = (unint64_t)(v7 + 63) >> 6;
  v84 = v5;
  v86 = a1 + 9;
  while (1)
  {
    if (v9)
    {
      v15 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v16 = v15 | (v6 << 6);
      goto LABEL_22;
    }
    v17 = __OFADD__(v6++, 1);
    if (v17)
    {
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    if (v6 >= v82)
      goto LABEL_35;
    v18 = *(_QWORD *)(v81 + 8 * v6);
    if (!v18)
      break;
LABEL_21:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v6 << 6);
LABEL_22:
    v20 = *(_QWORD *)(v5 + 48) + 72 * v16;
    v22 = *(_QWORD *)v20;
    v21 = *(_QWORD *)(v20 + 8);
    v87 = *(_QWORD *)(v20 + 16);
    v97 = *(_BYTE *)(v20 + 24);
    v24 = *(_QWORD *)(v20 + 32);
    v23 = *(_QWORD *)(v20 + 40);
    v25 = *(_QWORD *)(v20 + 48);
    swift_bridgeObjectRetain();
    v94 = v23;
    v92 = v25;
    sub_1A9094654(v24, v23, v25);
    swift_bridgeObjectRetain();
    sub_1A9091D1C(v103, v22, v21);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = sub_1A9094640(v22, v21);
    LOBYTE(v23) = v27;
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
    {
      v83 = v6;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v29 = *v10;
      v101 = *v10;
      *v10 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A93077C8();
        v29 = v101;
      }
      swift_bridgeObjectRelease();
      v30 = (uint64_t *)(*(_QWORD *)(v29 + 56) + 40 * v26);
      v31 = *v30;
      v32 = v30[1];
      v33 = v30[2];
      sub_1A91A9A44(v26, v29);
      *v10 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A9094668(v31, v32, v33);
      v5 = v84;
      v34 = a1 + 9;
      v6 = v83;
    }
    else
    {
      swift_bridgeObjectRelease();
      v5 = v84;
      v34 = a1 + 9;
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1A9094668(v24, v94, v92);
    if ((v97 & 1) == 0)
    {
      sub_1A90920C8(v103, v87);
      swift_beginAccess();
      v35 = sub_1A9093570(v87);
      if ((v36 & 1) != 0)
      {
        v37 = v35;
        v38 = v6;
        v39 = swift_isUniquelyReferenced_nonNull_native();
        v40 = *v34;
        v101 = *v34;
        *v34 = 0x8000000000000000;
        if ((v39 & 1) == 0)
        {
          sub_1A9307608();
          v40 = v101;
        }
        v11 = (uint64_t *)(*(_QWORD *)(v40 + 56) + 40 * v37);
        v12 = *v11;
        v13 = v11[1];
        v14 = v11[2];
        sub_1A91A9878(v37, v40);
        *v34 = v40;
        swift_bridgeObjectRelease();
        sub_1A9094668(v12, v13, v14);
        v10 = a1 + 10;
        v5 = v84;
        v6 = v38;
      }
      swift_endAccess();
    }
  }
  v19 = v6 + 1;
  if (v6 + 1 >= v82)
    goto LABEL_35;
  v18 = *(_QWORD *)(v81 + 8 * v19);
  if (v18)
    goto LABEL_20;
  v19 = v6 + 2;
  if (v6 + 2 >= v82)
    goto LABEL_35;
  v18 = *(_QWORD *)(v81 + 8 * v19);
  if (v18)
  {
LABEL_20:
    v6 = v19;
    goto LABEL_21;
  }
  v19 = v6 + 3;
  if (v6 + 3 < v82)
  {
    v18 = *(_QWORD *)(v81 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v6 = v19 + 1;
        if (__OFADD__(v19, 1))
          break;
        if (v6 >= v82)
          goto LABEL_35;
        v18 = *(_QWORD *)(v81 + 8 * v6);
        ++v19;
        if (v18)
          goto LABEL_21;
      }
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    goto LABEL_20;
  }
LABEL_35:
  swift_release();
  if (*(_QWORD *)(a1[8] + 16) <= *(_QWORD *)(a2 + 16) >> 3)
  {
    v103[0] = a2;
    swift_bridgeObjectRetain();
    v43 = swift_bridgeObjectRetain();
    sub_1A90C11C8(v43);
    swift_bridgeObjectRelease();
    v42 = v103[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    v41 = swift_bridgeObjectRetain();
    v42 = sub_1A90BFB2C(v41, a2);
    swift_bridgeObjectRelease();
  }
  v44 = 0;
  v85 = v42 + 56;
  v45 = 1 << *(_BYTE *)(v42 + 32);
  v46 = -1;
  if (v45 < 64)
    v46 = ~(-1 << v45);
  v47 = v46 & *(_QWORD *)(v42 + 56);
  v88 = (unint64_t)(v45 + 63) >> 6;
  v89 = v42;
  while (2)
  {
    if (v47)
    {
      v96 = (v47 - 1) & v47;
      v98 = v44;
      v48 = __clz(__rbit64(v47)) | (v44 << 6);
      goto LABEL_55;
    }
    v17 = __OFADD__(v44, 1);
    v49 = v44 + 1;
    if (v17)
      goto LABEL_76;
    if (v49 >= v88)
    {
LABEL_72:
      swift_release();
      a1[8] = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v75 = sub_1A90BF1B4(v104);
      swift_bridgeObjectRelease();
      *a3 = v75;
      v76 = sub_1A90BF298(v102);
      result = swift_bridgeObjectRelease();
      a3[1] = v76;
      return result;
    }
    v50 = *(_QWORD *)(v85 + 8 * v49);
    if (v50)
    {
LABEL_54:
      v96 = (v50 - 1) & v50;
      v98 = v49;
      v48 = __clz(__rbit64(v50)) + (v49 << 6);
LABEL_55:
      v52 = *(_QWORD *)(v42 + 48) + 72 * v48;
      v53 = *(_QWORD *)v52;
      v54 = *(_QWORD *)(v52 + 8);
      v90 = *(_QWORD *)(v52 + 16);
      v91 = *(_BYTE *)(v52 + 24);
      v56 = *(_QWORD *)(v52 + 32);
      v55 = *(_QWORD *)(v52 + 40);
      v57 = *(_QWORD *)(v52 + 48);
      v58 = *(_QWORD *)(v52 + 56);
      v59 = *(_QWORD *)(v52 + 64);
      swift_bridgeObjectRetain();
      sub_1A9094654(v56, v55, v57);
      swift_bridgeObjectRetain();
      sub_1A9091D1C(&v101, v53, v54);
      swift_bridgeObjectRelease();
      v103[0] = v56;
      v103[1] = v55;
      v103[2] = v57;
      v103[3] = v58;
      v103[4] = v59;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v93 = v57;
      v95 = v55;
      sub_1A9094654(v56, v55, v57);
      v60 = swift_isUniquelyReferenced_nonNull_native();
      v61 = *v10;
      v99 = (_QWORD *)*v10;
      *v10 = 0x8000000000000000;
      v63 = sub_1A9094640(v53, v54);
      v64 = *(_QWORD *)(v61 + 16);
      v65 = (v62 & 1) == 0;
      v66 = v64 + v65;
      if (__OFADD__(v64, v65))
      {
        __break(1u);
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
      v67 = v62;
      if (*(_QWORD *)(v61 + 24) < v66)
      {
        sub_1A9092330(v66, v60);
        v68 = sub_1A9094640(v53, v54);
        if ((v67 & 1) != (v69 & 1))
          goto LABEL_79;
        v63 = v68;
        v70 = v99;
        if ((v67 & 1) == 0)
          goto LABEL_59;
LABEL_63:
        sub_1A914CD10((uint64_t)v103, v70[7] + 40 * v63);
LABEL_64:
        v10 = a1 + 10;
        a1[10] = (uint64_t)v70;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        if ((v91 & 1) == 0)
        {
          sub_1A90920C8(&v101, v90);
          swift_beginAccess();
          sub_1A9094654(v56, v95, v93);
          v74 = swift_isUniquelyReferenced_nonNull_native();
          v100 = *v86;
          *v86 = 0x8000000000000000;
          v10 = a1 + 10;
          sub_1A90933FC((uint64_t)v103, v90, v74);
          *v86 = v100;
          swift_bridgeObjectRelease();
          swift_endAccess();
        }
        swift_bridgeObjectRelease();
        sub_1A9094668(v56, v95, v93);
        v42 = v89;
        v47 = v96;
        v44 = v98;
        continue;
      }
      if ((v60 & 1) != 0)
      {
        v70 = v99;
        if ((v62 & 1) != 0)
          goto LABEL_63;
      }
      else
      {
        sub_1A93077C8();
        v70 = v99;
        if ((v67 & 1) != 0)
          goto LABEL_63;
      }
LABEL_59:
      v70[(v63 >> 6) + 8] |= 1 << v63;
      v71 = (uint64_t *)(v70[6] + 16 * v63);
      *v71 = v53;
      v71[1] = v54;
      sub_1A9094604((uint64_t)v103, v70[7] + 40 * v63);
      v72 = v70[2];
      v17 = __OFADD__(v72, 1);
      v73 = v72 + 1;
      if (v17)
        goto LABEL_74;
      v70[2] = v73;
      swift_bridgeObjectRetain();
      goto LABEL_64;
    }
    break;
  }
  v51 = v49 + 1;
  if (v49 + 1 >= v88)
    goto LABEL_72;
  v50 = *(_QWORD *)(v85 + 8 * v51);
  if (v50)
    goto LABEL_53;
  v51 = v49 + 2;
  if (v49 + 2 >= v88)
    goto LABEL_72;
  v50 = *(_QWORD *)(v85 + 8 * v51);
  if (v50)
    goto LABEL_53;
  v51 = v49 + 3;
  if (v49 + 3 >= v88)
    goto LABEL_72;
  v50 = *(_QWORD *)(v85 + 8 * v51);
  if (v50)
  {
LABEL_53:
    v49 = v51;
    goto LABEL_54;
  }
  while (1)
  {
    v49 = v51 + 1;
    if (__OFADD__(v51, 1))
      break;
    if (v49 >= v88)
      goto LABEL_72;
    v50 = *(_QWORD *)(v85 + 8 * v49);
    ++v51;
    if (v50)
      goto LABEL_54;
  }
LABEL_78:
  __break(1u);
LABEL_79:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A914C3AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1A90BF390(v2);
  swift_bridgeObjectRelease();
  *a1 = v3;
  swift_beginAccess();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1A90BF394(v4);
  result = swift_bridgeObjectRelease();
  a1[1] = (uint64_t)v5;
  return result;
}

uint64_t sub_1A914C454(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (!*(_QWORD *)(result + 40))
  {
    v1 = result;
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9088);
    sub_1A9066D74(&qword_1ED2A9080, (uint64_t *)&unk_1ED2A9088, MEMORY[0x1E0C95D90]);
    v2 = sub_1A93F7D04();
    swift_release();
    swift_release();
    *(_QWORD *)(v1 + 40) = v2;
    return swift_release();
  }
  return result;
}

uint64_t sub_1A914C52C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A9077F2C(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A914C588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  result = swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 72);
  if (*(_QWORD *)(v7 + 16) && (result = sub_1A9093570(a2), (v8 & 1) != 0))
  {
    v9 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 40 * result);
    v10 = *v9;
    v11 = v9[1];
    v13 = v9[2];
    v12 = v9[3];
    v14 = v9[4];
    result = sub_1A9094654(*v9, v11, v13);
  }
  else
  {
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v14 = 0;
    v13 = 3;
  }
  *a3 = v10;
  a3[1] = v11;
  a3[2] = v13;
  a3[3] = v12;
  a3[4] = v14;
  return result;
}

uint64_t sub_1A914C654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  result = swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 80);
  if (*(_QWORD *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = sub_1A9094640(a2, a3);
    if ((v11 & 1) != 0)
    {
      v12 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 40 * v10);
      v13 = *v12;
      v14 = v12[1];
      v16 = v12[2];
      v15 = v12[3];
      v17 = v12[4];
      sub_1A9094654(*v12, v14, v16);
    }
    else
    {
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v17 = 0;
      v16 = 3;
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v17 = 0;
    v16 = 3;
  }
  *a4 = v13;
  a4[1] = v14;
  a4[2] = v16;
  a4[3] = v15;
  a4[4] = v17;
  return result;
}

uint64_t LibraryPodcastStateDataSource.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  sub_1A914CAE4(v0 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LibraryPodcastStateDataSource.__deallocating_deinit()
{
  LibraryPodcastStateDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A914C7DC()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  __int128 v3;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1A914CE2C(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

void (*sub_1A914C83C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1A914B930(v2);
  return sub_1A914C880;
}

void sub_1A914C880(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_1A914C8AC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

double sub_1A914C8CC@<D0>(void (*a1)(_OWORD *__return_ptr)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  uint64_t v5;
  __int128 v6;
  _OWORD v7[2];
  uint64_t v8;

  a1(v7);
  if (!v2)
  {
    v5 = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    *(_QWORD *)(a2 + 32) = v5;
  }
  return result;
}

BOOL sub_1A914C910(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  _BOOL8 result;
  char v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _BYTE v15[40];
  _BYTE v16[40];
  _BYTE v17[8];
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  _BYTE v22[8];
  uint64_t v23;
  unint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_1A93F90C0(), result = 0, (v5 & 1) != 0))
  {
    v7 = *(_BYTE *)(a2 + 24);
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 24))
        return 0;
    }
    else
    {
      if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
        v7 = 1;
      if ((v7 & 1) != 0)
        return 0;
    }
    sub_1A9094604(a1 + 32, (uint64_t)v16);
    sub_1A9094604(a2 + 32, (uint64_t)v15);
    sub_1A9094604((uint64_t)v16, (uint64_t)v17);
    v8 = v19;
    switch(v19)
    {
      case 2:
        sub_1A9094604((uint64_t)v15, (uint64_t)v22);
        if (v24 != 2)
          return 0;
        break;
      case 1:
        sub_1A9094604((uint64_t)v15, (uint64_t)v22);
        if (v24 != 1)
          return 0;
        break;
      case 0:
        sub_1A9094604((uint64_t)v15, (uint64_t)v22);
        return !v24;
      default:
        v9 = v17[0];
        v10 = v18;
        v11 = v20;
        v12 = v21;
        sub_1A9094604((uint64_t)v15, (uint64_t)v22);
        if (v24 < 3 || v9 != v22[0])
          return 0;
        v13 = v25;
        v14 = v26;
        if (v10 == v23 && v8 == v24)
        {
          if (v11 != v25)
            return 0;
        }
        else if ((sub_1A93F90C0() & 1) == 0 || v11 != v13)
        {
          return 0;
        }
        if (v12 != v14)
          return 0;
        break;
    }
    return 1;
  }
  return result;
}

uint64_t sub_1A914CAB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A914C588(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1A914CAC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_1A914C654(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1A914CAE4(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t method lookup function for LibraryPodcastStateDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LibraryPodcastStateDataSource.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of LibraryPodcastStateDataSource.delegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of LibraryPodcastStateDataSource.delegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of LibraryPodcastStateDataSource.__allocating_init(contextProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of LibraryPodcastStateDataSource.activate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of LibraryPodcastStateDataSource.state(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t assignWithCopy for LibraryPodcastStateDataSource.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = (_OWORD *)(a1 + 32);
  v6 = (_OWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48) >= 3uLL)
  {
    if (v7 >= 3)
    {
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    }
    else
    {
      sub_1A914CC8C(a1 + 32);
      v10 = *(_QWORD *)(a2 + 64);
      v11 = *(_OWORD *)(a2 + 48);
      *v5 = *v6;
      *(_OWORD *)(a1 + 48) = v11;
      *(_QWORD *)(a1 + 64) = v10;
    }
  }
  else if (v7 >= 3)
  {
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *v6;
    v9 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *v5 = v8;
    *(_OWORD *)(a1 + 48) = v9;
  }
  return a1;
}

uint64_t sub_1A914CC8C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8258);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A914CCCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = MEMORY[0x1AF41420C](v1 + 48);
  v4 = *(_QWORD *)(v1 + 56);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A914CCF8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A914BAB4(*(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1A914CD10(uint64_t a1, uint64_t a2)
{
  assignWithTake for PodcastState(a2, a1);
  return a2;
}

uint64_t sub_1A914CD4C()
{
  uint64_t v0;

  return sub_1A914B724(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1A914CD68()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A914CD88@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A914CDF8(a1);
}

double sub_1A914CD9C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  uint64_t v5;
  __int128 v6;
  _OWORD v7[2];
  uint64_t v8;

  (*(void (**)(_OWORD *__return_ptr))(v1 + 16))(v7);
  if (!v2)
  {
    v5 = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a1 = v7[0];
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = v5;
  }
  return result;
}

uint64_t sub_1A914CDE0()
{
  uint64_t v0;

  return sub_1A914C454(v0);
}

uint64_t sub_1A914CDF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = MEMORY[0x1AF41420C](v1 + 48);
  v4 = *(_QWORD *)(v1 + 56);
  *a1 = result;
  a1[1] = v4;
  return result;
}

double sub_1A914CE2C@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  __int128 v5;

  (*(void (**)(__int128 *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
  {
    result = *(double *)&v5;
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1A914CE68()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A914CE8C(uint64_t *a1)
{
  return sub_1A914C52C(a1);
}

uint64_t sub_1A914CE94@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A914C3AC(a1);
}

uint64_t sub_1A914CEAC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A914CAB0(a1);
}

uint64_t sub_1A914CEC0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A914CAC8(a1);
}

uint64_t sub_1A914CED4()
{
  return sub_1A914CD4C();
}

uint64_t EpisodeType.rawValue.getter(char a1)
{
  if (!a1)
    return 0x73756E6F62;
  if (a1 == 1)
    return 1819047270;
  return 0x72656C69617274;
}

uint64_t sub_1A914CF38(_BYTE *a1, _BYTE *a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v2 = *a1;
  v3 = 0xE400000000000000;
  v4 = 1819047270;
  if (v2 != 1)
  {
    v4 = 0x72656C69617274;
    v3 = 0xE700000000000000;
  }
  if (*a1)
    v5 = v4;
  else
    v5 = 0x73756E6F62;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE500000000000000;
  v7 = 0xE400000000000000;
  v8 = 1819047270;
  if (*a2 != 1)
  {
    v8 = 0x72656C69617274;
    v7 = 0xE700000000000000;
  }
  if (*a2)
    v9 = v8;
  else
    v9 = 0x73756E6F62;
  if (*a2)
    v10 = v7;
  else
    v10 = 0xE500000000000000;
  if (v5 == v9 && v6 == v10)
    v11 = 1;
  else
    v11 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1A914D028()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A914D0BC()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A914D12C()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A914D1BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s18PodcastsFoundation11EpisodeTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1A914D1E8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE400000000000000;
  v5 = 1819047270;
  if (v2 != 1)
  {
    v5 = 0x72656C69617274;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x73756E6F62;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A914D23C()
{
  sub_1A914D440();
  return sub_1A93F82BC();
}

uint64_t sub_1A914D298()
{
  sub_1A914D440();
  return sub_1A93F828C();
}

uint64_t _s18PodcastsFoundation11EpisodeTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_1A914D330()
{
  unint64_t result;

  result = qword_1EEAB8260;
  if (!qword_1EEAB8260)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeType, &type metadata for EpisodeType);
    atomic_store(result, (unint64_t *)&qword_1EEAB8260);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EpisodeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A914D3C0 + 4 * byte_1A9407CB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A914D3F4 + 4 * byte_1A9407CB0[v4]))();
}

uint64_t sub_1A914D3F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A914D3FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A914D404);
  return result;
}

uint64_t sub_1A914D410(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A914D418);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A914D41C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A914D424(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeType()
{
  return &type metadata for EpisodeType;
}

unint64_t sub_1A914D440()
{
  unint64_t result;

  result = qword_1ED2A5E38;
  if (!qword_1ED2A5E38)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeType, &type metadata for EpisodeType);
    atomic_store(result, (unint64_t *)&qword_1ED2A5E38);
  }
  return result;
}

unint64_t sub_1A914D484(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x1AF414134](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x1AF414134](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A914D50C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  id v7;
  void *v8;
  id v9;
  objc_class *v10;
  char *v11;
  id v12;
  char *v13;
  id v14;
  objc_super v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A914D484(0x186A0uLL);
  sub_1A93F7248();
  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v7 = objc_allocWithZone(MEMORY[0x1E0C8B3C0]);
    v8 = (void *)sub_1A93F71A0();
    v9 = objc_msgSend(v7, sel_initWithURL_options_, v8, 0);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
    v10 = (objc_class *)type metadata accessor for FairPlayAsset();
    v11 = (char *)objc_allocWithZone(v10);
    *(_QWORD *)&v11[OBJC_IVAR___PFFairPlayAsset_adamID] = v3;
    *(_QWORD *)&v11[OBJC_IVAR___PFFairPlayAsset_avAsset] = v9;
    sub_1A914D6B0();
    v12 = v9;
    v13 = v11;
    *(_QWORD *)&v13[OBJC_IVAR___PFFairPlayAsset_keyStore] = sub_1A92766EC(v12);

    v15.receiver = v13;
    v15.super_class = v10;
    v14 = objc_msgSendSuper2(&v15, sel_init);

    return (uint64_t)v14;
  }
  return result;
}

unint64_t sub_1A914D6B0()
{
  unint64_t result;

  result = qword_1EEAB8268;
  if (!qword_1EEAB8268)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEAB8268);
  }
  return result;
}

BOOL CompoundScheduleType.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

uint64_t CompoundSchedule.type.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___PFCompoundSchedule_type);
}

uint64_t CompoundSchedule.children.getter()
{
  return swift_bridgeObjectRetain();
}

id CompoundSchedule.__allocating_init(type:children:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR___PFCompoundSchedule_type] = a1;
  *(_QWORD *)&v5[OBJC_IVAR___PFCompoundSchedule_children] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id CompoundSchedule.init(type:children:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR___PFCompoundSchedule_type] = a1;
  *(_QWORD *)&v2[OBJC_IVAR___PFCompoundSchedule_children] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for CompoundSchedule();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1A914D858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void (*v7)(unint64_t, uint64_t);

  v1 = sub_1A93F738C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360) - 8)
                          + 80);
  v6 = (v4 + v5) & ~v5;
  v7 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v7(v0 + v3, v1);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v6, 1, v1))
    v7(v0 + v6, v1);
  return swift_deallocObject();
}

id CompoundSchedule.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CompoundSchedule.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CompoundSchedule.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CompoundSchedule();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1A914D9C8()
{
  unint64_t result;

  result = qword_1EEAB8280;
  if (!qword_1EEAB8280)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for CompoundScheduleType, &type metadata for CompoundScheduleType);
    atomic_store(result, (unint64_t *)&qword_1EEAB8280);
  }
  return result;
}

ValueMetadata *type metadata accessor for CompoundScheduleType()
{
  return &type metadata for CompoundScheduleType;
}

uint64_t method lookup function for CompoundSchedule()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CompoundSchedule.__allocating_init(type:children:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of CompoundSchedule.shouldExecute(on:previousExecution:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t NSManagedObjectContextProvider.managedObjectContext(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_1A93F84CC();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A914DACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char v8;
  char **v9;
  id v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v3 + 16))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 16), v2);
  sub_1A93F8478();
  sub_1A914DD0C();
  v4 = sub_1A93F8004();
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v1, v2);
  if ((v4 & 1) != 0
    || (v6 = *(_QWORD *)(v0 + 48),
        v7 = *(_QWORD *)(v0 + 32),
        sub_1A93F8490(),
        v8 = sub_1A93F8004(),
        v5(v6, v7),
        (v8 & 1) != 0))
  {
    v9 = &selRef_importContext;
LABEL_4:
    v5(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 32));
    goto LABEL_5;
  }
  v12 = *(_QWORD *)(v0 + 48);
  v13 = *(_QWORD *)(v0 + 32);
  sub_1A93F84B4();
  v14 = sub_1A93F8004();
  v5(v12, v13);
  if ((v14 & 1) != 0)
  {
    v9 = &selRef_privateQueueContext;
    goto LABEL_4;
  }
  v15 = *(_QWORD *)(v0 + 48);
  v16 = *(_QWORD *)(v0 + 32);
  sub_1A93F8490();
  v17 = sub_1A93F8004();
  v5(v15, v16);
  v9 = &selRef_privateQueueContext;
  if ((v17 & 1) != 0)
    goto LABEL_4;
  v18 = *(_QWORD *)(v0 + 48);
  v19 = *(_QWORD *)(v0 + 32);
  sub_1A93F8484();
  v20 = sub_1A93F8004();
  v5(v18, v19);
  v9 = &selRef_mainQueueContext;
  if ((v20 & 1) != 0)
    goto LABEL_4;
  v22 = *(_QWORD *)(v0 + 48);
  v21 = *(_QWORD *)(v0 + 56);
  v23 = *(_QWORD *)(v0 + 32);
  sub_1A93F8484();
  v24 = sub_1A93F8004();
  v5(v22, v23);
  v5(v21, v23);
  if ((v24 & 1) == 0)
    v9 = &selRef_privateQueueContext;
LABEL_5:
  v10 = objc_msgSend(*(id *)(v0 + 24), *v9);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v10);
}

unint64_t sub_1A914DD0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2ABB98;
  if (!qword_1ED2ABB98)
  {
    v1 = sub_1A93F84CC();
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DF0760], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2ABB98);
  }
  return result;
}

uint64_t BundleAssetTranscriptProvider.ttmlFileName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BundleAssetTranscriptProvider.signatureFileName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id BundleAssetTranscriptProvider.bundle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

void __swiftcall BundleAssetTranscriptProvider.init(ttmlFileName:signatureFileName:bundle:)(PodcastsFoundation::BundleAssetTranscriptProvider *__return_ptr retstr, Swift::String ttmlFileName, Swift::String signatureFileName, NSBundle bundle)
{
  retstr->ttmlFileName = ttmlFileName;
  retstr->signatureFileName = signatureFileName;
  retstr->bundle = bundle;
}

uint64_t BundleAssetTranscriptProvider.transcript(for:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8298);
  v2 = *(_QWORD *)(v1 - 8);
  v68 = v1;
  v69 = v2;
  MEMORY[0x1E0C80A78](v1);
  v66 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB82A0);
  v5 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  v63 = v5;
  MEMORY[0x1E0C80A78](v4);
  v57 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB82A8);
  v67 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v59 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB82B0);
  v56 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v54 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v52 = (char *)&v47 - v10;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB82B8);
  v64 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v53 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB82C0);
  v50 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v48 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB82C8);
  v61 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v72 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB82D0);
  v47 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB82D8);
  v58 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v70 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v0[1];
  v20 = v0[2];
  v21 = v0[3];
  v22 = v0[4];
  v73 = *v0;
  v18 = v73;
  v74 = v19;
  v75 = v20;
  v76 = v21;
  v77 = v22;
  sub_1A914E508(v73, v19, 1819112564, 0xE400000000000000, (uint64_t)v16);
  sub_1A9066D74(&qword_1EEAB82E0, &qword_1EEAB82D0, MEMORY[0x1E0C95B48]);
  sub_1A93F7C20();
  v23 = *(void (**)(char *, uint64_t))(v47 + 8);
  v23(v16, v14);
  v73 = v18;
  v74 = v19;
  v75 = v20;
  v76 = v21;
  v77 = v22;
  sub_1A914E508(v20, v21, 0x727574616E676973, 0xE900000000000065, (uint64_t)v16);
  sub_1A9072534(0, &qword_1EEAB82E8);
  v24 = v48;
  sub_1A93F7C20();
  v23(v16, v14);
  sub_1A9072534(0, &qword_1EEAB82F0);
  v25 = v49;
  sub_1A93F7824();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v24, v25);
  v26 = v52;
  sub_1A93F7830();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_1A914E924;
  *(_QWORD *)(v27 + 24) = 0;
  v28 = v54;
  v29 = v51;
  sub_1A93F7830();
  swift_release();
  v30 = MEMORY[0x1E0C95B48];
  sub_1A9066D74(&qword_1EEAB82F8, &qword_1EEAB82B0, MEMORY[0x1E0C95B48]);
  v31 = v53;
  v32 = v28;
  v33 = v55;
  sub_1A93F7BCC();
  v34 = *(void (**)(char *, uint64_t))(v56 + 8);
  v34(v32, v33);
  v34(v26, v33);
  sub_1A9066D74(&qword_1EEAB8300, &qword_1EEAB82C8, v30);
  sub_1A9066D74(&qword_1EEAB8308, &qword_1EEAB82D8, v30);
  v35 = v57;
  v36 = v72;
  sub_1A93F7B54();
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = sub_1A914E9F0;
  *(_QWORD *)(v37 + 24) = 0;
  sub_1A9066D74(&qword_1EEAB8310, &qword_1EEAB82A0, MEMORY[0x1E0C95698]);
  v38 = v59;
  v39 = v62;
  sub_1A93F7B84();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v35, v39);
  sub_1A9066D74(&qword_1EEAB8318, &qword_1EEAB82B8, MEMORY[0x1E0C95C80]);
  sub_1A9066D74(&qword_1EEAB8320, &qword_1EEAB82A8, MEMORY[0x1E0C95950]);
  v41 = v65;
  v40 = v66;
  v42 = v38;
  v43 = v60;
  sub_1A93F7BC0();
  sub_1A9066D74(&qword_1EEAB8328, &qword_1EEAB8298, MEMORY[0x1E0C95A60]);
  v44 = v68;
  v45 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v40, v44);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v42, v41);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v31, v43);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v36, v29);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v70, v71);
  return v45;
}

uint64_t sub_1A914E508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  void *v20;
  uint64_t v21;
  id v22;
  _QWORD v24[2];
  id v25;
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;

  v24[1] = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8340);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_OWORD *)(v5 + 16);
  v27[0] = *(_OWORD *)v5;
  v27[1] = v17;
  v28 = *(_QWORD *)(v5 + 32);
  v18 = swift_allocObject();
  v19 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)v5;
  *(_OWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v18 + 48) = *(_QWORD *)(v5 + 32);
  *(_QWORD *)(v18 + 56) = a1;
  *(_QWORD *)(v18 + 64) = a2;
  *(_QWORD *)(v18 + 72) = a3;
  *(_QWORD *)(v18 + 80) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8348);
  swift_allocObject();
  sub_1A914F0E4((uint64_t)v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = sub_1A93F7A94();
  if (qword_1EEAB6D08 != -1)
    swift_once();
  v20 = (void *)qword_1EEAB9E68;
  v25 = (id)qword_1EEAB9E68;
  v21 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v12, 1, 1, v21);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1EEAB8350, &qword_1EEAB8348, MEMORY[0x1E0C96108]);
  sub_1A905FD90();
  v22 = v20;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v12, &qword_1ED2A1C88);

  swift_release();
  sub_1A9066D74(&qword_1EEAB8358, &qword_1EEAB8340, MEMORY[0x1E0C95CB8]);
  sub_1A93F7C20();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

void sub_1A914E794(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  TranscriptParser.parse(ttmlData:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), a2);
}

uint64_t sub_1A914E7B0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  id v6;
  id v7;
  uint64_t result;

  v4 = *a1;
  v5 = a1[1];
  v6 = objc_allocWithZone(MEMORY[0x1E0CD7500]);
  sub_1A90D8068(v4, v5);
  v7 = sub_1A927ACCC();
  result = sub_1A905F180(v4, v5);
  if (!v2)
    *a2 = v7;
  return result;
}

uint64_t sub_1A914E830@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *v4;
  uint64_t inited;
  id v6;
  id v7;
  uint64_t result;
  unint64_t v9;

  v4 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405960;
  *(_QWORD *)(inited + 32) = v4;
  v9 = inited;
  sub_1A93F8328();
  v6 = v4;
  v7 = sub_1A913EAD0(v9);
  result = swift_bridgeObjectRelease();
  if (!v2)
    *a2 = v7;
  return result;
}

uint64_t sub_1A914E8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_QWORD *)(a2 + 16) = v2;
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v3;
  *(_QWORD *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v6;
  *(_QWORD *)(a2 + 56) = 0;
  *(_BYTE *)(a2 + 64) = 1;
  sub_1A90D8068(v4, v3);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

id sub_1A914E924@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = a1;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 49) = 0u;
  return a1;
}

uint64_t sub_1A914E940()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A914E964(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_1A914E988@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)a3 = a1;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a2;
  *(_QWORD *)(a3 + 24) = v3;
  *(_QWORD *)(a3 + 32) = v4;
  *(_QWORD *)(a3 + 40) = v5;
  *(_QWORD *)(a3 + 48) = v6;
  *(_QWORD *)(a3 + 56) = v7;
  *(_BYTE *)(a3 + 64) = 2;
  v8 = a1;
  sub_1A90D8068(v4, v5);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A914E9F4(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD *))(v1 + 16))(*a1, a1 + 1);
}

uint64_t BundleAssetTranscriptProvider.prefetch(request:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8330);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F7A64();
  sub_1A9066D74(&qword_1EEAB8338, &qword_1EEAB8330, MEMORY[0x1E0C960D0]);
  v4 = sub_1A93F7D04();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t BundleAssetTranscriptProvider.invalidate(for:)()
{
  return 1;
}

uint64_t sub_1A914EAF4(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD *);

  v31 = a7;
  v33 = a2;
  v34 = a1;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8360);
  MEMORY[0x1E0C80A78](v32);
  v11 = (uint64_t *)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F726C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v29 - v20;
  v22 = *(void **)(a3 + 32);
  v29 = a4;
  v30 = a5;
  v23 = (void *)sub_1A93F8010();
  v24 = (void *)sub_1A93F8010();
  v25 = objc_msgSend(v22, sel_URLForResource_withExtension_, v23, v24);

  if (v25)
  {
    sub_1A93F7200();

    v26 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v26(v14, v18, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      v26(v21, v14, v15);
      (*(void (**)(_QWORD *, char *, uint64_t))(v16 + 16))(v11, v21, v15);
      swift_storeEnumTagMultiPayload();
      v34(v11);
      sub_1A905FD54((uint64_t)v11, &qword_1EEAB8360);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_1A905FD54((uint64_t)v14, &qword_1ED2AD3D0);
  v28 = v30;
  *v11 = v29;
  v11[1] = v28;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v34(v11);
  return sub_1A905FD54((uint64_t)v11, &qword_1EEAB8360);
}

uint64_t sub_1A914ED8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A93F7278();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_1A914EDB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8330);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F7A64();
  sub_1A9066D74(&qword_1EEAB8338, &qword_1EEAB8330, MEMORY[0x1E0C960D0]);
  v4 = sub_1A93F7D04();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void destroy for BundleAssetTranscriptProvider(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for BundleAssetTranscriptProvider(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for BundleAssetTranscriptProvider(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for BundleAssetTranscriptProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for BundleAssetTranscriptProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BundleAssetTranscriptProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BundleAssetTranscriptProvider()
{
  return &type metadata for BundleAssetTranscriptProvider;
}

ValueMetadata *type metadata accessor for BundleAssetTranscriptProvider.LocalAssetError()
{
  return &type metadata for BundleAssetTranscriptProvider.LocalAssetError;
}

uint64_t sub_1A914F090()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A914F0D4(void (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t *v2;

  return sub_1A914EAF4(a1, a2, (uint64_t)(v2 + 2), v2[7], v2[8], v2[9], v2[10]);
}

uint64_t sub_1A914F0E4(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t sub_1A914F128()
{
  return swift_deallocObject();
}

uint64_t sub_1A914F138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a2, a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_1A914F1AC(uint64_t a1, uint64_t (*a2)(char *))
{
  uint64_t AssociatedTypeWitness;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = (char *)&v10 - v6;
  (*(void (**)(char *, uint64_t, double))(v8 + 16))((char *)&v10 - v6, a1, v5);
  return a2(v7);
}

uint64_t sub_1A914F258()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A914F27C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A914F1AC(a1, *(uint64_t (**)(char *))(v1 + 32));
}

uint64_t CategoryObserverProvider.favoritedCategoriesPublisher.getter()
{
  return swift_retain();
}

uint64_t CategoryObserverProvider.categoriesFromFollowedShowsPublisher.getter()
{
  return swift_retain();
}

uint64_t CategoryObserverProvider.categoriesForCategoriesInLibraryPublisher.getter()
{
  return swift_retain();
}

uint64_t CategoryObserverProvider.categoriesCountForCategoriesInLibraryPublisher.getter()
{
  return swift_retain();
}

uint64_t CategoryObserverProvider.__allocating_init(ctx:)(void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  CategoryObserverProvider.init(ctx:)(a1);
  return v2;
}

uint64_t CategoryObserverProvider.init(ctx:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  void *v55;
  id v56;
  char *v57;
  uint64_t v58;
  void *v59;
  id v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t result;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB8E0);
  v4 = *(_QWORD *)(v3 - 8);
  v77 = v3;
  v78 = v4;
  MEMORY[0x1E0C80A78](v3);
  v75 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB8D0);
  v79 = *(_QWORD *)(v6 - 8);
  v80 = v6;
  MEMORY[0x1E0C80A78](v6);
  v76 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB8F8);
  v73 = *(_QWORD *)(v8 - 8);
  v74 = v8;
  MEMORY[0x1E0C80A78](v8);
  v72 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB908);
  v70 = *(_QWORD *)(v10 - 8);
  v71 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 16) = a1;
  v13 = v1;
  v81 = v1;
  v14 = a1;
  v15 = (void *)_s18PodcastsFoundation10MTCategoryC31predicateForFavoritedCategoriesSo11NSPredicateCyFZ_0();
  v16 = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v17 = v14;
  v18 = sub_1A93F8868();
  v19 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v20 = (void *)sub_1A93F8010();
  v21 = objc_msgSend(v19, sel_initWithEntityName_, v20);

  objc_msgSend(v21, sel_setPredicate_, v15);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v22 = (void *)sub_1A93F82F8();
  objc_msgSend(v21, sel_setSortDescriptors_, v22);

  objc_msgSend(v21, sel_setFetchBatchSize_, 100);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB6E0);
  swift_allocObject();
  *((_QWORD *)&v65 + 1) = sub_1A905920C;
  *(_QWORD *)&v65 = 0;
  v23 = sub_1A90899A4(0xD000000000000034, 0x80000001A9444350, (uint64_t)v21, (uint64_t)v17, v18, (uint64_t)sub_1A914FCEC, 0, (uint64_t)sub_1A914FD7C, v65, 0);
  v24 = sub_1A914FD80(v23);
  swift_release();
  *(_QWORD *)(v13 + 24) = v24;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1A9405950;
  v26 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
  v27 = sub_1A90A92DC();
  *(_QWORD *)(v25 + 64) = v27;
  *(_QWORD *)(v25 + 32) = 0x7374736163646F70;
  *(_QWORD *)(v25 + 40) = 0xE800000000000000;
  v28 = sub_1A93F8040();
  *(_QWORD *)(v25 + 96) = v26;
  *(_QWORD *)(v25 + 104) = v27;
  *(_QWORD *)(v25 + 72) = v28;
  *(_QWORD *)(v25 + 80) = v29;
  v30 = (void *)sub_1A93F8754();
  v31 = v17;
  v69 = v16;
  v32 = sub_1A93F8868();
  v33 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v34 = (void *)sub_1A93F8010();
  v35 = objc_msgSend(v33, sel_initWithEntityName_, v34);

  objc_msgSend(v35, sel_setPredicate_, v30);
  v36 = (void *)sub_1A93F82F8();
  objc_msgSend(v35, sel_setSortDescriptors_, v36);

  objc_msgSend(v35, sel_setFetchBatchSize_, 100);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB6D8);
  swift_allocObject();
  *((_QWORD *)&v66 + 1) = sub_1A905920C;
  *(_QWORD *)&v66 = 0;
  v82 = sub_1A90899A4(0xD00000000000003CLL, 0x80000001A9444390, (uint64_t)v35, (uint64_t)v31, v32, (uint64_t)sub_1A9151378, 0, (uint64_t)sub_1A914FD7C, v66, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB2B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC80);
  sub_1A9066D74(&qword_1ED2AB2A8, &qword_1ED2AB2B0, (uint64_t)&protocol conformance descriptor for FetchedResultsListPublisher<A, B>);
  sub_1A93F7B84();
  swift_release();
  v37 = sub_1A915004C();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v12, v71);
  *(_QWORD *)(v81 + 32) = v37;
  v38 = _s18PodcastsFoundation10MTCategoryC022predicateForCategorieseF9InLibrarySo11NSPredicateCyFZ_0();
  sub_1A91E6AF4();
  v39 = v31;
  v40 = sub_1A93F8868();
  v41 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v42 = (void *)sub_1A93F8010();
  v43 = objc_msgSend(v41, sel_initWithEntityName_, v42);

  objc_msgSend(v43, sel_setPredicate_, v38);
  v44 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v43, sel_setSortDescriptors_, v44);

  objc_msgSend(v43, sel_setFetchBatchSize_, 100);
  swift_allocObject();
  *((_QWORD *)&v67 + 1) = sub_1A905920C;
  *(_QWORD *)&v67 = 0;
  v82 = sub_1A90899A4(0xD000000000000041, 0x80000001A94443F0, (uint64_t)v43, (uint64_t)v39, v40, (uint64_t)sub_1A9151378, 0, (uint64_t)sub_1A914FD7C, v67, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBD0);
  v45 = v72;
  sub_1A93F7B84();
  swift_release();
  v46 = sub_1A9150308();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v45, v74);
  v47 = v81;
  *(_QWORD *)(v81 + 40) = v46;
  v48 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  v49 = _s18PodcastsFoundation10MTCategoryC022predicateForCategorieseF9InLibrarySo11NSPredicateCyFZ_0();
  v50 = v39;
  v51 = sub_1A93F8868();
  v52 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v53 = (void *)sub_1A93F8010();
  v54 = objc_msgSend(v52, sel_initWithEntityName_, v53);

  objc_msgSend(v54, sel_setPredicate_, v49);
  v55 = (void *)sub_1A93F82F8();
  objc_msgSend(v54, sel_setSortDescriptors_, v55);

  objc_msgSend(v54, sel_setFetchBatchSize_, 1);
  objc_msgSend(v54, sel_setIncludesSubentities_, 0);
  objc_msgSend(v54, sel_setIncludesPropertyValues_, 0);
  objc_msgSend(v54, sel_setReturnsObjectsAsFaults_, 1);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8618);
  swift_allocObject();
  *((_QWORD *)&v68 + 1) = sub_1A905920C;
  *(_QWORD *)&v68 = 0;
  v82 = sub_1A90899A4(0xD00000000000001DLL, 0x80000001A9444440, (uint64_t)v54, (uint64_t)v50, v51, (uint64_t)sub_1A90AEBD8, 0, (uint64_t)sub_1A9123748, v68, 0);
  *(_QWORD *)(swift_allocObject() + 16) = v48;
  sub_1A91516BC();
  v56 = v48;
  v57 = v75;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A44A0);
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_1A9405520;
  v59 = (void *)sub_1A93F8010();
  v60 = objc_msgSend(v56, sel_integerForKey_, v59);

  *(_QWORD *)(v58 + 32) = v60;
  sub_1A9066D74(&qword_1ED2AB8D8, &qword_1ED2AB8E0, MEMORY[0x1E0C957C0]);
  v62 = v76;
  v61 = v77;
  sub_1A93F7C68();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v57, v61);
  v63 = sub_1A91505C4();

  (*(void (**)(char *, uint64_t))(v79 + 8))(v62, v80);
  result = v47;
  *(_QWORD *)(v47 + 48) = v63;
  return result;
}

uint64_t sub_1A914FCEC@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v9;
  uint64_t v10;

  type metadata accessor for MTCategory();
  v4 = swift_dynamicCastClass();
  if (v4)
  {
    v5 = (void *)v4;
    v6 = a1;
    sub_1A932CCC8(v5, a2);
    v7 = type metadata accessor for CategoryModel();
    v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 0;
  }
  else
  {
    v7 = type metadata accessor for CategoryModel();
    v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

uint64_t sub_1A914FD80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB918);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB850);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB2C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB7E0);
  sub_1A9066D74(&qword_1ED2AB2B8, &qword_1ED2AB2C0, (uint64_t)&protocol conformance descriptor for FetchedResultsListPublisher<A, B>);
  sub_1A93F7B84();
  v15 = 0;
  v16 = 0;
  v17 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB18);
  swift_allocObject();
  sub_1A93F79EC();
  sub_1A9066D74(&qword_1ED2AB910, &qword_1ED2AB918, MEMORY[0x1E0C95950]);
  sub_1A9066D74(&qword_1ED2ABB10, &qword_1ED2ABB18, MEMORY[0x1E0C95FB0]);
  v9 = sub_1A93F7CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v15 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABA58);
  sub_1A9066D74(&qword_1ED2ABA50, &qword_1ED2ABA58, MEMORY[0x1E0C95C98]);
  v10 = sub_1A93F79F8();
  swift_release();
  v15 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB890);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB7D8);
  sub_1A9066D74(&qword_1ED2AB888, &qword_1ED2AB890, MEMORY[0x1E0C95768]);
  sub_1A93F7B30();
  swift_release();
  sub_1A9066D74(&qword_1ED2AB848, &qword_1ED2AB850, MEMORY[0x1E0C95708]);
  v11 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
  return v11;
}

uint64_t sub_1A915004C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB9A0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB880);
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB908);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC88);
  v7 = MEMORY[0x1E0C95950];
  sub_1A9066D74(&qword_1ED2AB900, &qword_1ED2AB908, MEMORY[0x1E0C95950]);
  sub_1A93F7B84();
  v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB38);
  swift_allocObject();
  sub_1A93F79EC();
  sub_1A9066D74(&qword_1ED2AB998, &qword_1ED2AB9A0, v7);
  sub_1A9066D74(&qword_1ED2ABB30, &qword_1ED2ABB38, MEMORY[0x1E0C95FB0]);
  v8 = sub_1A93F7CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v13 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABA88);
  sub_1A9066D74(&qword_1ED2ABA80, &qword_1ED2ABA88, MEMORY[0x1E0C95C98]);
  v9 = sub_1A93F79F8();
  swift_release();
  v13 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB8C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC80);
  sub_1A9066D74(&qword_1ED2AB8B8, &qword_1ED2AB8C0, MEMORY[0x1E0C95768]);
  sub_1A93F7B30();
  swift_release();
  sub_1A9066D74(&qword_1ED2AB878, &qword_1ED2AB880, MEMORY[0x1E0C95708]);
  v10 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v4);
  return v10;
}

uint64_t sub_1A9150308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB990);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB870);
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB8F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBD8);
  v7 = MEMORY[0x1E0C95950];
  sub_1A9066D74(&qword_1ED2AB8F0, &qword_1ED2AB8F8, MEMORY[0x1E0C95950]);
  sub_1A93F7B84();
  v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB28);
  swift_allocObject();
  sub_1A93F79EC();
  sub_1A9066D74(&qword_1ED2AB988, &qword_1ED2AB990, v7);
  sub_1A9066D74(&qword_1ED2ABB20, &qword_1ED2ABB28, MEMORY[0x1E0C95FB0]);
  v8 = sub_1A93F7CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v13 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABA78);
  sub_1A9066D74(&qword_1ED2ABA70, &qword_1ED2ABA78, MEMORY[0x1E0C95C98]);
  v9 = sub_1A93F79F8();
  swift_release();
  v13 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB8B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBD0);
  sub_1A9066D74(&qword_1ED2AB8A8, &qword_1ED2AB8B0, MEMORY[0x1E0C95768]);
  sub_1A93F7B30();
  swift_release();
  sub_1A9066D74(&qword_1ED2AB868, &qword_1ED2AB870, MEMORY[0x1E0C95708]);
  v10 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v4);
  return v10;
}

uint64_t sub_1A91505C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB938);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB860);
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB8D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9368);
  sub_1A9066D74(&qword_1ED2AB8C8, &qword_1ED2AB8D0, MEMORY[0x1E0C95788]);
  sub_1A93F7B84();
  v13 = 0;
  v14 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9138);
  swift_allocObject();
  sub_1A93F79EC();
  sub_1A9066D74(&qword_1ED2AB930, &qword_1ED2AB938, MEMORY[0x1E0C95950]);
  sub_1A9066D74(&qword_1ED2A9130, &qword_1ED2A9138, MEMORY[0x1E0C95FB0]);
  v7 = sub_1A93F7CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v13 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABA68);
  sub_1A9066D74(&qword_1ED2ABA60, &qword_1ED2ABA68, MEMORY[0x1E0C95C98]);
  v8 = sub_1A93F79F8();
  swift_release();
  v13 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB8A0);
  sub_1A9066D74(&qword_1ED2AB898, &qword_1ED2AB8A0, MEMORY[0x1E0C95768]);
  sub_1A93F7B30();
  swift_release();
  sub_1A9066D74(&qword_1ED2AB858, &qword_1ED2AB860, MEMORY[0x1E0C95708]);
  v9 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v4);
  return v9;
}

uint64_t sub_1A915087C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A3FB8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A3F48);
  v11 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A3F98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4160);
  sub_1A9066D74(&qword_1ED2A3F90, &qword_1ED2A3F98, MEMORY[0x1E0C958E0]);
  sub_1A93F7B84();
  LOBYTE(v12) = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A40B0);
  swift_allocObject();
  sub_1A93F79EC();
  sub_1A9066D74(&qword_1ED2A3FB0, &qword_1ED2A3FB8, MEMORY[0x1E0C95950]);
  sub_1A9066D74(&qword_1ED2A40A8, &qword_1ED2A40B0, MEMORY[0x1E0C95FB0]);
  v7 = sub_1A93F7CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v12 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4048);
  sub_1A9066D74(&qword_1ED2A4040, &qword_1ED2A4048, MEMORY[0x1E0C95C98]);
  v8 = sub_1A93F79F8();
  swift_release();
  v12 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A3F78);
  sub_1A9066D74(&qword_1ED2A3F70, &qword_1ED2A3F78, MEMORY[0x1E0C95768]);
  sub_1A93F7B30();
  swift_release();
  sub_1A9066D74(&qword_1ED2A3F40, &qword_1ED2A3F48, MEMORY[0x1E0C95708]);
  v9 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v4);
  return v9;
}

uint64_t sub_1A9150B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8BB8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4898);
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A89A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9368);
  sub_1A9066D74(&qword_1ED2A89A0, &qword_1ED2A89A8, MEMORY[0x1E0C958E0]);
  sub_1A93F7B84();
  v13 = 0;
  v14 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9138);
  swift_allocObject();
  sub_1A93F79EC();
  sub_1A9066D74(&qword_1ED2A8BB0, &qword_1ED2A8BB8, MEMORY[0x1E0C95950]);
  sub_1A9066D74(&qword_1ED2A9130, &qword_1ED2A9138, MEMORY[0x1E0C95FB0]);
  v7 = sub_1A93F7CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v13 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8EE0);
  sub_1A9066D74(&qword_1ED2A8ED8, &qword_1ED2A8EE0, MEMORY[0x1E0C95C98]);
  v8 = sub_1A93F79F8();
  swift_release();
  v13 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8978);
  sub_1A9066D74(&qword_1ED2A8970, &qword_1ED2A8978, MEMORY[0x1E0C95768]);
  sub_1A93F7B30();
  swift_release();
  sub_1A9066D74(&qword_1ED2A8938, &qword_1ED2A4898, MEMORY[0x1E0C95708]);
  v9 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v4);
  return v9;
}

uint64_t sub_1A9150DE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A59A8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5930);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5700);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5858);
  sub_1A9066D74(&qword_1ED2A56F8, &qword_1ED2A5700, (uint64_t)&protocol conformance descriptor for FetchedResultsListPublisher<A, B>);
  sub_1A93F7B84();
  v15 = 0;
  v16 = 0;
  v17 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5A48);
  swift_allocObject();
  sub_1A93F79EC();
  sub_1A9066D74(&qword_1ED2A59A0, &qword_1ED2A59A8, MEMORY[0x1E0C95950]);
  sub_1A9066D74(&qword_1ED2A5A40, &qword_1ED2A5A48, MEMORY[0x1E0C95FB0]);
  v9 = sub_1A93F7CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v15 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A59F8);
  sub_1A9066D74(&qword_1ED2A59F0, &qword_1ED2A59F8, MEMORY[0x1E0C95C98]);
  v10 = sub_1A93F79F8();
  swift_release();
  v15 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5950);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5850);
  sub_1A9066D74(&qword_1ED2A5948, &qword_1ED2A5950, MEMORY[0x1E0C95768]);
  sub_1A93F7B30();
  swift_release();
  sub_1A9066D74(&qword_1ED2A5928, &qword_1ED2A5930, MEMORY[0x1E0C95708]);
  v11 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
  return v11;
}

uint64_t sub_1A91510B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8368);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8370);
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8378);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8380);
  sub_1A9066D74(&qword_1EEAB8388, &qword_1EEAB8378, MEMORY[0x1E0C958E0]);
  sub_1A93F7B84();
  v13 = xmmword_1A9407FB0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8390);
  swift_allocObject();
  sub_1A93F79EC();
  sub_1A9066D74(&qword_1EEAB8398, &qword_1EEAB8368, MEMORY[0x1E0C95950]);
  sub_1A9066D74(&qword_1EEAB83A0, &qword_1EEAB8390, MEMORY[0x1E0C95FB0]);
  v7 = sub_1A93F7CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  *(_QWORD *)&v13 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB83A8);
  sub_1A9066D74(&qword_1EEAB83B0, &qword_1EEAB83A8, MEMORY[0x1E0C95C98]);
  v8 = sub_1A93F79F8();
  swift_release();
  *(_QWORD *)&v13 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB83B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
  sub_1A9066D74(&qword_1EEAB83C0, &qword_1EEAB83B8, MEMORY[0x1E0C95768]);
  sub_1A93F7B30();
  swift_release();
  sub_1A9066D74(&qword_1EEAB83C8, &qword_1EEAB8370, MEMORY[0x1E0C95708]);
  v9 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v4);
  return v9;
}

uint64_t sub_1A915137C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_1A9159A54(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1A91513C0@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_1A932CCC8(a1, a2);
  v3 = type metadata accessor for CategoryModel();
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 0, 1, v3);
}

uint64_t sub_1A9151408(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v15;

  v4 = type metadata accessor for CategoryModel();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - v8;
  v10 = *a1;
  v11 = *a2;
  sub_1A9151768((uint64_t)a1, (uint64_t)&v15 - v8);
  sub_1A9151768((uint64_t)a2, (uint64_t)v6);
  if (v10 == v11)
  {
    if (*((_QWORD *)v9 + 1) == *((_QWORD *)v6 + 1) && *((_QWORD *)v9 + 2) == *((_QWORD *)v6 + 2))
      v13 = 0;
    else
      v13 = sub_1A93F90C0() ^ 1;
  }
  else
  {
    v13 = 1;
  }
  sub_1A91517AC((uint64_t)v9);
  sub_1A91517AC((uint64_t)v6);
  return v13 & 1;
}

uint64_t sub_1A91514F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

void sub_1A9151504(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = (void *)sub_1A93F8694();
  v4 = (id)sub_1A93F8010();
  objc_msgSend(a2, sel_setValue_forKey_, v3, v4);

}

uint64_t CategoryObserverProvider.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t CategoryObserverProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A91515F4()
{
  return swift_retain();
}

uint64_t sub_1A9151600()
{
  return swift_retain();
}

uint64_t sub_1A915160C()
{
  return swift_retain();
}

uint64_t sub_1A9151618()
{
  return swift_retain();
}

uint64_t sub_1A9151624@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)a2 = *(_QWORD *)result;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1A9151640@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *a2 = *(_QWORD *)a1;
  a2[1] = v2;
  a2[2] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A915165C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_QWORD *)(a2 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A9151674@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A9151680@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return sub_1A9151754(v3, v2);
}

uint64_t sub_1A9151690()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A91516B4(uint64_t a1)
{
  uint64_t v1;

  sub_1A9151504(a1, *(void **)(v1 + 16));
}

unint64_t sub_1A91516BC()
{
  unint64_t result;

  result = qword_1ED2A5748;
  if (!qword_1ED2A5748)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for FetchedResultsCountPublisher, &type metadata for FetchedResultsCountPublisher);
    atomic_store(result, (unint64_t *)&qword_1ED2A5748);
  }
  return result;
}

uint64_t dispatch thunk of CategoryObserverProviderProtocol.favoritedCategoriesPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CategoryObserverProviderProtocol.categoriesFromFollowedShowsPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CategoryObserverProviderProtocol.categoriesForCategoriesInLibraryPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CategoryObserverProviderProtocol.categoriesCountForCategoriesInLibraryPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t type metadata accessor for CategoryObserverProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for CategoryObserverProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CategoryObserverProvider.__allocating_init(ctx:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1A9151754(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1A9151768(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CategoryModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A91517AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CategoryModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A91517EC(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v6; ++i)
    {
      v11 = *(_QWORD *)(a3 + 8 * i + 32);
      swift_bridgeObjectRetain();
      a1(&v10, &v11);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v9 = swift_bridgeObjectRelease();
      if (v10)
      {
        MEMORY[0x1AF412004](v9);
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A93F834C();
        sub_1A93F8394();
        sub_1A93F8328();
      }
    }
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

_QWORD *sub_1A9151928(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v13 = *(_QWORD *)(a3 + 16);
  if (!v13)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v17 = *(_QWORD *)(a3 + 8 * v5 + 32);
    a1(&v15, &v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    v8 = v16;
    if (v16)
    {
      v9 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1A907ECFC(0, v6[2] + 1, 1, v6);
      v11 = v6[2];
      v10 = v6[3];
      if (v11 >= v10 >> 1)
        v6 = sub_1A907ECFC((_QWORD *)(v10 > 1), v11 + 1, 1, v6);
      v6[2] = v11 + 1;
      v7 = &v6[2 * v11];
      v7[4] = v9;
      v7[5] = v8;
    }
    ++v5;
  }
  while (v13 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

Swift::Void __swiftcall RecommendationModulesCache.writeToCache(with:)(Swift::OpaquePointer with)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[2];
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unsigned int v84;
  unint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  char *v100;
  uint64_t v101;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_1A93F7158();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v91 = (char *)v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_1A93F726C();
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v78 = (char *)v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v88 = (char *)v73 - v10;
  v96 = sub_1A93F7698();
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v12 = (uint64_t)v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v73 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v73 - v17;
  MEMORY[0x1E0C80A78](v19);
  v87 = (char *)v73 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v73 - v22;
  if (*((_QWORD *)with._rawValue + 2))
  {
    v76 = v6;
    sub_1A9152E38();
    v24 = _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0((uint64_t)with._rawValue);
    if (v24)
      v25 = v24;
    else
      v25 = MEMORY[0x1E0DEE9D8];
    MEMORY[0x1E0C80A78](v24);
    v73[-2] = v2;
    v26 = sub_1A91517EC((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1A9154274, (uint64_t)&v73[-4], v25);
    swift_bridgeObjectRelease();
    sub_1A93F6DEC();
    swift_allocObject();
    v94 = sub_1A93F6DE0();
    if (v26 >> 62)
      goto LABEL_26;
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (1)
    {
      v86 = v2;
      v74 = v18;
      v75 = v4;
      v77 = v12;
      if (!v27)
        break;
      v73[1] = v15;
      v85 = v26 & 0xC000000000000001;
      v84 = *MEMORY[0x1E0CAFD78];
      v12 = 4;
      v73[0] = "Division by zero";
      v82 = 0x80000001A9443810;
      *(_QWORD *)&v28 = 136315138;
      v80 = v28;
      v79 = MEMORY[0x1E0DEE9B8] + 8;
      v83 = v26;
      v81 = v27;
      v2 = v88;
      while (1)
      {
        v34 = v85 ? (char *)MEMORY[0x1AF4129DC](v12 - 4, v26) : (char *)*(id *)(v26 + 8 * v12);
        v15 = v34;
        v4 = v12 - 3;
        if (__OFADD__(v12 - 4, 1))
          break;
        v100 = v34;
        type metadata accessor for RecommendationModule();
        sub_1A9066CA8(&qword_1EEAB83E8, (uint64_t (*)(uint64_t))type metadata accessor for RecommendationModule, (uint64_t)&protocol conformance descriptor for RecommendationModule);
        v35 = sub_1A93F6DD4();
        v37 = v36;
        v97 = v12 - 3;
        v98 = v12;
        v38 = (uint64_t *)&v86[*(int *)(type metadata accessor for RecommendationModulesCache() + 24)];
        v40 = *v38;
        v39 = v38[1];
        v41 = (uint64_t *)&v15[OBJC_IVAR___MTRecommendationModule_id];
        swift_beginAccess();
        v99 = v15;
        v100 = (char *)v40;
        v101 = v39;
        swift_bridgeObjectRetain();
        sub_1A93F810C();
        v42 = v92;
        v43 = v91;
        v44 = v93;
        (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v91, v84, v93);
        sub_1A90828B0();
        sub_1A93F7254();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
        swift_bridgeObjectRelease();
        sub_1A93F72C0();
        (*(void (**)(char *, uint64_t))(v89 + 8))(v2, v90);
        sub_1A905F180(v35, v37);
        v45 = v87;
        sub_1A93F7680();
        v46 = (char *)v99;
        v47 = sub_1A93F7674();
        v48 = sub_1A93F87B4();
        v18 = (char *)v48;
        if (os_log_type_enabled(v47, v48))
        {
          v49 = swift_slowAlloc();
          v50 = swift_slowAlloc();
          v100 = (char *)v50;
          *(_DWORD *)v49 = v80;
          v52 = *v41;
          v51 = v41[1];
          swift_bridgeObjectRetain();
          *(_QWORD *)(v49 + 4) = sub_1A906436C(v52, v51, (uint64_t *)&v100);

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A904E000, v47, (os_log_type_t)v18, "Cached module content for id %s", (uint8_t *)v49, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v50, -1, -1);
          MEMORY[0x1AF41411C](v49, -1, -1);

        }
        else
        {

        }
        (*(void (**)(char *, uint64_t))(v95 + 8))(v45, v96);
        v29 = v81;
        v30 = v98;
        v31 = v97;
        v32 = &v46[OBJC_IVAR___MTRecommendationModule_shows];
        swift_beginAccess();
        *(_QWORD *)v32 = 0;
        swift_bridgeObjectRelease();
        v33 = &v46[OBJC_IVAR___MTRecommendationModule_episodes];
        swift_beginAccess();
        *(_QWORD *)v33 = 0;

        swift_bridgeObjectRelease();
        v12 = v30 + 1;
        v26 = v83;
        if (v31 == v29)
          goto LABEL_20;
      }
      __break(1u);
LABEL_26:
      swift_bridgeObjectRetain();
      v27 = sub_1A93F8E5C();
    }
LABEL_20:
    swift_bridgeObjectRelease();
    v100 = (char *)v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB83F0);
    sub_1A91542C8(&qword_1EEAB83F8, &qword_1EEAB83E8, (uint64_t)&protocol conformance descriptor for RecommendationModule, MEMORY[0x1E0DEAF10]);
    v56 = sub_1A93F6DD4();
    v58 = v57;
    swift_bridgeObjectRelease();
    v59 = (uint64_t *)&v86[*(int *)(type metadata accessor for RecommendationModulesCache() + 20)];
    v60 = v59[1];
    v100 = (char *)*v59;
    v101 = v60;
    v61 = v92;
    v62 = v91;
    v63 = v93;
    (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v91, *MEMORY[0x1E0CAFD78], v93);
    sub_1A90828B0();
    swift_bridgeObjectRetain();
    v64 = v78;
    sub_1A93F7254();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v63);
    swift_bridgeObjectRelease();
    sub_1A93F72C0();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v64, v90);
    sub_1A905F180(v56, v58);
    v65 = v74;
    sub_1A93F7680();
    v66 = sub_1A93F7674();
    v67 = sub_1A93F87B4();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v68 = 0;
      _os_log_impl(&dword_1A904E000, v66, v67, "Write to Listen Now cache succeeded", v68, 2u);
      MEMORY[0x1AF41411C](v68, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v95 + 8))(v65, v96);
    v69 = v75;
    if (qword_1EEAB6CC0 != -1)
      swift_once();
    v70 = __swift_project_value_buffer(v69, (uint64_t)qword_1EEAB83D0);
    v71 = (uint64_t)v76;
    sub_1A93F7380();
    v72 = sub_1A93F738C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v71, 0, 1, v72);
    swift_beginAccess();
    sub_1A90A1380(v71, v70);
    swift_endAccess();
    swift_release();
  }
  else
  {
    sub_1A93F7680();
    v53 = sub_1A93F7674();
    v54 = sub_1A93F87B4();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v55 = 0;
      _os_log_impl(&dword_1A904E000, v53, v54, "Write to Listen Now cache failed because the json is empty", v55, 2u);
      MEMORY[0x1AF41411C](v55, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v95 + 8))(v23, v96);
  }
}

uint64_t RecommendationModulesCache.modulesMetadata.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v17[12];

  v1 = sub_1A93F7698();
  v17[2] = *(_QWORD *)(v1 - 8);
  v17[3] = v1;
  MEMORY[0x1E0C80A78](v1);
  v17[1] = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A93F7158();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F6DA4();
  swift_allocObject();
  sub_1A93F6D98();
  v11 = (_QWORD *)(v0 + *(int *)(type metadata accessor for RecommendationModulesCache() + 20));
  v12 = v11[1];
  v17[9] = *v11;
  v17[10] = v12;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CAFD78], v3);
  sub_1A90828B0();
  swift_bridgeObjectRetain();
  sub_1A93F7254();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  v13 = sub_1A93F7278();
  v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB83F0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1A91542C8(&qword_1EEAB8400, &qword_1EEAB8408, (uint64_t)&protocol conformance descriptor for RecommendationModule, MEMORY[0x1E0DEAF40]);
  sub_1A93F6D8C();
  sub_1A905F180(v13, v15);
  swift_release();
  return v17[11];
}

uint64_t sub_1A9152D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  __swift_allocate_value_buffer(v0, qword_1EEAB83D0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EEAB83D0);
  v2 = sub_1A93F738C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t static RecommendationModulesCache.dateLastCached.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEAB6CC0 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEAB83D0);
  swift_beginAccess();
  return sub_1A90A1CA8(v3, a1);
}

void sub_1A9152E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  void *v6;
  unsigned __int8 v7;
  id v8;
  void *v9;
  unsigned int v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25[2];

  v25[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1A93F7698();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_defaultManager);
  sub_1A93F7224();
  v6 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_fileExistsAtPath_, v6);

  if ((v7 & 1) == 0)
  {
    v8 = objc_msgSend(v4, sel_defaultManager);
    v9 = (void *)sub_1A93F71A0();
    v25[0] = 0;
    v10 = objc_msgSend(v8, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v9, 1, 0, v25);

    if (v10)
    {
      v11 = v25[0];
    }
    else
    {
      v23 = v25[0];
      v12 = v25[0];
      v13 = (void *)sub_1A93F7128();

      swift_willThrow();
      sub_1A93F7680();
      v14 = v13;
      v15 = v13;
      v16 = sub_1A93F7674();
      v17 = sub_1A93F879C();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        v19 = (void *)swift_slowAlloc();
        v25[0] = v19;
        *(_DWORD *)v18 = 136315138;
        v23 = v18 + 4;
        swift_getErrorValue();
        v20 = sub_1A93F927C();
        v24 = sub_1A906436C(v20, v21, (uint64_t *)v25);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1A904E000, v16, v17, "Failed to create Listen Now Cache directory with error: %s", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v19, -1, -1);
        MEMORY[0x1AF41411C](v18, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
  }
}

uint64_t RecommendationModulesCache.moduleContent(moduleID:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v19[14];

  v3 = sub_1A93F7698();
  v19[3] = *(_QWORD *)(v3 - 8);
  v19[4] = v3;
  MEMORY[0x1E0C80A78](v3);
  v19[2] = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F7158();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F726C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F6DA4();
  swift_allocObject();
  v19[5] = sub_1A93F6D98();
  v13 = (_QWORD *)(v1 + *(int *)(type metadata accessor for RecommendationModulesCache() + 24));
  v14 = v13[1];
  v19[11] = *v13;
  v19[12] = v14;
  swift_bridgeObjectRetain();
  v19[1] = a1;
  sub_1A93F810C();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CAFD78], v5);
  sub_1A90828B0();
  sub_1A93F7254();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  v15 = sub_1A93F7278();
  v17 = v16;
  type metadata accessor for RecommendationModule();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1A9066CA8(&qword_1EEAB8408, (uint64_t (*)(uint64_t))type metadata accessor for RecommendationModule, (uint64_t)&protocol conformance descriptor for RecommendationModule);
  sub_1A93F6D8C();
  sub_1A905F180(v15, v17);
  swift_release();
  return v19[13];
}

void sub_1A91535F0(unint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD v49[2];
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[2];
  id v56[6];

  v56[4] = *(id *)MEMORY[0x1E0C80C00];
  v5 = sub_1A93F7698();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)objc_opt_self();
  v10 = (void *)sub_1A93F7ED8();
  v56[0] = 0;
  v11 = objc_msgSend(v9, sel_dataWithJSONObject_options_error_, v10, 0, v56);

  v12 = v56[0];
  if (!v11)
  {
    v27 = v12;
    v28 = (void *)sub_1A93F7128();

    swift_willThrow();
LABEL_12:
    v30 = 0;
LABEL_13:
    *a2 = v30;
    return;
  }
  v52 = v5;
  v51 = a1;
  v13 = sub_1A93F72B4();
  v15 = v14;

  sub_1A93F6DA4();
  swift_allocObject();
  sub_1A93F6D98();
  type metadata accessor for RecommendationModule();
  sub_1A9066CA8(&qword_1EEAB8408, (uint64_t (*)(uint64_t))type metadata accessor for RecommendationModule, (uint64_t)&protocol conformance descriptor for RecommendationModule);
  v53 = v13;
  sub_1A93F6D8C();
  if (v2)
  {
    swift_release();
    sub_1A93F7680();
    v16 = v2;
    v17 = v2;
    v18 = sub_1A93F7674();
    v19 = sub_1A93F879C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v51 = v15;
      v21 = (uint8_t *)v20;
      v22 = (void *)swift_slowAlloc();
      v50 = a2;
      v23 = v22;
      v56[0] = v22;
      *(_DWORD *)v21 = 136315138;
      v49[1] = v21 + 4;
      swift_getErrorValue();
      v24 = sub_1A93F927C();
      *(_QWORD *)&v55[0] = sub_1A906436C(v24, v25, (uint64_t *)v56);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v18, v19, "Could not decode RecommendationModules from JSON with error: %s", v21, 0xCu);
      swift_arrayDestroy();
      v26 = v23;
      a2 = v50;
      MEMORY[0x1AF41411C](v26, -1, -1);
      MEMORY[0x1AF41411C](v21, -1, -1);
      sub_1A905F180(v53, v51);

    }
    else
    {
      sub_1A905F180(v53, v15);

    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v52);
    goto LABEL_12;
  }
  v29 = v15;
  swift_release();
  v30 = (char *)v56[0];
  v31 = *(_QWORD *)((char *)v56[0] + OBJC_IVAR___MTRecommendationModule_attributes);
  if (v31
    && (v32 = (uint64_t *)(v31 + OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes),
        swift_beginAccess(),
        (v33 = *v32) != 0))
  {
    swift_bridgeObjectRetain();
    v34 = *(_QWORD *)(v33 + 16);
    if (!v34)
    {
LABEL_9:
      sub_1A905F180(v53, v29);

      swift_bridgeObjectRelease();
LABEL_20:
      v30 = 0;
      goto LABEL_13;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v33 = MEMORY[0x1E0DEE9D8];
    v34 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v34)
      goto LABEL_9;
  }
  v35 = *(unsigned __int8 *)(v33 + 32);
  swift_bridgeObjectRelease();
  if (v34 != 1)
  {
    sub_1A905F180(v53, v29);
    goto LABEL_19;
  }
  v50 = a2;
  v36 = (void *)sub_1A93F7ED8();
  v37 = (void *)sub_1A93F8010();
  v38 = objc_msgSend(v36, sel_valueForKeyPath_, v37);

  if (v38)
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v55, 0, sizeof(v55));
  }
  sub_1A90A4E08((uint64_t)v55, (uint64_t)v56);
  if (v56[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC490);
    if (swift_dynamicCast())
    {
      v39 = v54;
      goto LABEL_27;
    }
  }
  else
  {
    sub_1A90A593C((uint64_t)v56);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9720);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v39 + 32) = sub_1A91129D8(MEMORY[0x1E0DEE9D8]);
LABEL_27:
  if (!v35)
  {
    v40 = sub_1A9153DD0(v39, (uint64_t (*)(uint64_t))type metadata accessor for ServerPodcastEpisode, qword_1ED2A2D58, (uint64_t)&protocol conformance descriptor for ServerPodcastEpisode, &qword_1EEAB84B0);
    swift_bridgeObjectRelease();
    v41 = OBJC_IVAR___MTRecommendationModule_episodes;
LABEL_31:
    v42 = (unint64_t *)&v30[v41];
    swift_beginAccess();
    *v42 = v40;
    swift_bridgeObjectRelease();
    v43 = &v30[OBJC_IVAR___MTRecommendationModule_shows];
    swift_beginAccess();
    v44 = *(_QWORD *)v43;
    if (v44)
    {
      if (v44 >> 62)
      {
        swift_bridgeObjectRetain();
        v45 = sub_1A93F8E5C();
        swift_bridgeObjectRelease();
        if (v45)
          goto LABEL_34;
      }
      else if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_34:
        sub_1A905F180(v53, v29);
LABEL_42:
        a2 = v50;
        goto LABEL_13;
      }
    }
    v46 = &v30[OBJC_IVAR___MTRecommendationModule_episodes];
    swift_beginAccess();
    v47 = *(_QWORD *)v46;
    if (!v47)
    {
      sub_1A905F180(v53, v29);

      v30 = 0;
      goto LABEL_42;
    }
    a2 = v50;
    if (v47 >> 62)
    {
      swift_bridgeObjectRetain();
      v48 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    sub_1A905F180(v53, v29);
    if (v48)
      goto LABEL_13;
LABEL_19:

    goto LABEL_20;
  }
  if (v35 == 1)
  {
    v40 = sub_1A9153DD0(v39, (uint64_t (*)(uint64_t))type metadata accessor for ServerPodcast, qword_1ED2A2110, (uint64_t)&protocol conformance descriptor for ServerPodcastBase, &qword_1EEAB84A8);
    swift_bridgeObjectRelease();
    v41 = OBJC_IVAR___MTRecommendationModule_shows;
    goto LABEL_31;
  }
  sub_1A93F8E14();
  __break(1u);
}

unint64_t sub_1A9153DD0(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  unint64_t *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41[2];

  v32 = a5;
  v34 = a3;
  v35 = a4;
  v36 = a2;
  v41[1] = *MEMORY[0x1E0C80C00];
  v6 = sub_1A93F7698();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0DEE9D8];
  v41[0] = MEMORY[0x1E0DEE9D8];
  v38 = *(_QWORD *)(a1 + 16);
  v33 = v9;
  if (v38)
  {
    v30 = v7;
    v31 = v6;
    v37 = (id)objc_opt_self();
    swift_bridgeObjectRetain();
    v11 = 0;
    v12 = v36;
    do
    {
      swift_bridgeObjectRetain();
      v15 = (void *)sub_1A93F7ED8();
      v39 = 0;
      v16 = objc_msgSend(v37, sel_dataWithJSONObject_options_error_, v15, 0, &v39);

      v17 = v39;
      if (v16)
      {
        v18 = sub_1A93F72B4();
        v20 = v19;

        sub_1A93F6DA4();
        swift_allocObject();
        sub_1A93F6D98();
        v12(0);
        sub_1A9066CA8(v34, v12, v35);
        sub_1A93F6D8C();
        sub_1A905F180(v18, v20);
        swift_bridgeObjectRelease();
        v21 = swift_release();
        if (v40)
        {
          MEMORY[0x1AF412004](v21);
          if (*(_QWORD *)((v41[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v41[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A93F834C();
          sub_1A93F8394();
          sub_1A93F8328();
        }
      }
      else
      {
        v13 = v17;
        v14 = (void *)sub_1A93F7128();

        swift_willThrow();
        swift_bridgeObjectRelease();
      }
      ++v11;
    }
    while (v38 != v11);
    swift_bridgeObjectRelease();
    v10 = v41[0];
    v7 = v30;
    v6 = v31;
    v9 = v33;
  }
  sub_1A93F7680();
  swift_bridgeObjectRetain_n();
  v22 = sub_1A93F7674();
  v23 = sub_1A93F87B4();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v41[0] = v25;
    *(_DWORD *)v24 = 134218242;
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      v26 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v40 = v26;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    v40 = v36(0);
    __swift_instantiateConcreteTypeFromMangledName(v32);
    v27 = sub_1A93F8094();
    v40 = sub_1A906436C(v27, v28, v41);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v22, v23, "Parsed %ld %s(s)", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v25, -1, -1);
    MEMORY[0x1AF41411C](v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v33, v6);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v10;
}

void sub_1A9154274(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1A91535F0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t type metadata accessor for RecommendationModulesCache()
{
  uint64_t result;

  result = qword_1EEAB8468;
  if (!qword_1EEAB8468)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A91542C8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEAB83F0);
    v10 = sub_1A9066CA8(a2, (uint64_t (*)(uint64_t))type metadata accessor for RecommendationModule, a3);
    result = MEMORY[0x1AF414014](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for RecommendationModulesCache(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A93F726C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for RecommendationModulesCache(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RecommendationModulesCache(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RecommendationModulesCache(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for RecommendationModulesCache(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for RecommendationModulesCache(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecommendationModulesCache()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9154670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for RecommendationModulesCache()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A91546FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A93F726C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1A9154778()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F726C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A91547EC(void (*a1)(uint64_t *__return_ptr, id *, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  if (a3 >> 62)
    goto LABEL_18;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    if (!v6)
      return v7;
    v19 = MEMORY[0x1E0DEE9D8];
    result = sub_1A929E520(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
      break;
    v9 = 0;
    v7 = v19;
    while (v6 != v9)
    {
      if ((a3 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1AF4129DC](v9, a3);
      else
        v10 = *(id *)(a3 + 8 * v9 + 32);
      v11 = v10;
      v17 = v10;
      a1(&v18, &v17, &v16);
      if (v4)
      {
        swift_release();

        return v7;
      }
      v4 = 0;

      v12 = v18;
      v19 = v7;
      v14 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1A929E520(v13 > 1, v14 + 1, 1);
        v7 = v19;
      }
      ++v9;
      *(_QWORD *)(v7 + 16) = v14 + 1;
      *(_QWORD *)(v7 + 8 * v14 + 32) = v12;
      if (v6 == v9)
        return v7;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v6 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9154978(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, _QWORD *))
{
  int64_t v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    v7 = (_QWORD *)sub_1A929E520(0, v3, 0);
    v4 = v14;
    v8 = a1 + 32;
    do
    {
      v8 += 8;
      v7 = a3(&v13, v7);
      v9 = v13;
      v14 = v4;
      v11 = *(_QWORD *)(v4 + 16);
      v10 = *(_QWORD *)(v4 + 24);
      if (v11 >= v10 >> 1)
      {
        v7 = (_QWORD *)sub_1A929E520(v10 > 1, v11 + 1, 1);
        v4 = v14;
      }
      *(_QWORD *)(v4 + 16) = v11 + 1;
      *(_QWORD *)(v4 + 8 * v11 + 32) = v9;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1A9154A60(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  void (*v18)(uint64_t *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v18 = a1;
  v19 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7818);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1A929E828(0, v10, 0);
    v11 = v21;
    v12 = (uint64_t *)(a3 + 32);
    while (1)
    {
      v13 = *v12++;
      v20 = v13;
      v18(&v20);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1A929E828(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_1A9158408((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15);
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

void NSPredicate.EvaluationTree.hash(into:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1A9154BEC()
{
  sub_1A93F92E8();
  sub_1A93F92F4();
  return sub_1A93F7FBC();
}

void sub_1A9154C2C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 24);
  sub_1A93F92E8();
  sub_1A93F92F4();
  v2 = *(_QWORD *)(v1 + 16);
  sub_1A93F92E8();
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      v3 += 8;
      NSPredicate.EvaluationTree.hash(into:)();
      --v2;
    }
    while (v2);
  }
}

void static NSPredicate.EvaluationTree.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1A9154D48@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  char v4;

  if (a1 >> 62 || *(unsigned __int8 *)(v1 + 16) != *(unsigned __int8 *)(a1 + 16))
  {
    v4 = 0;
  }
  else
  {
    if (*(_QWORD *)(v1 + 24) != *(_QWORD *)(a1 + 24) || *(_QWORD *)(v1 + 32) != *(_QWORD *)(a1 + 32))
      return sub_1A93F90C0();
    v4 = 1;
  }
  return v4 & 1;
}

uint64_t sub_1A9154E78()
{
  sub_1A91561AC();
  return sub_1A93F945C();
}

uint64_t sub_1A9154EA0()
{
  sub_1A91561AC();
  return sub_1A93F9468();
}

uint64_t sub_1A9154EC8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9154EFC + 4 * byte_1A9408108[*v0]))(0x6C6261756C617665, 0xE900000000000065);
}

uint64_t sub_1A9154EFC()
{
  return 6581857;
}

uint64_t sub_1A9154F0C()
{
  return 29295;
}

uint64_t sub_1A9154F18()
{
  return 7630702;
}

uint64_t sub_1A9154F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9157FC0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A9154F4C(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1A9154F58()
{
  sub_1A915609C();
  return sub_1A93F945C();
}

uint64_t sub_1A9154F80()
{
  sub_1A915609C();
  return sub_1A93F9468();
}

uint64_t sub_1A9154FA8()
{
  _BYTE *v0;

  if (*v0)
    return 0x7461636964657270;
  else
    return 0x746C75736572;
}

uint64_t sub_1A9154FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A915814C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9155008()
{
  sub_1A91561F0();
  return sub_1A93F945C();
}

uint64_t sub_1A9155030()
{
  sub_1A91561F0();
  return sub_1A93F9468();
}

uint64_t sub_1A9155058()
{
  _BYTE *v0;

  if (*v0)
    return 0x646C696863;
  else
    return 0x746C75736572;
}

uint64_t sub_1A915508C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9158240(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A91550B0()
{
  sub_1A91560E0();
  return sub_1A93F945C();
}

uint64_t sub_1A91550D8()
{
  sub_1A91560E0();
  return sub_1A93F9468();
}

uint64_t sub_1A9155100()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6572646C696863;
  else
    return 0x746C75736572;
}

uint64_t sub_1A9155138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9158320(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A915515C()
{
  sub_1A9156168();
  return sub_1A93F945C();
}

uint64_t sub_1A9155184()
{
  sub_1A9156168();
  return sub_1A93F9468();
}

void NSPredicate.EvaluationTree.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[14];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB84B8);
  v13[8] = *(_QWORD *)(v4 - 8);
  v13[9] = v4;
  MEMORY[0x1E0C80A78](v4);
  v13[7] = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB84C0);
  v13[5] = *(_QWORD *)(v6 - 8);
  v13[6] = v6;
  MEMORY[0x1E0C80A78](v6);
  v13[4] = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB84C8);
  v13[2] = *(_QWORD *)(v8 - 8);
  v13[3] = v8;
  MEMORY[0x1E0C80A78](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB84D0);
  v13[1] = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB84D8);
  v11 = *(_QWORD *)(v10 - 8);
  v13[11] = v10;
  v13[12] = v11;
  MEMORY[0x1E0C80A78](v10);
  v12 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A915609C();
  sub_1A93F93D8();
  __asm { BR              X10 }
}

uint64_t sub_1A915536C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 72) = 0;
  sub_1A91561F0();
  v4 = *(_QWORD *)(v3 - 104);
  sub_1A93F8FAC();
  *(_BYTE *)(v3 - 72) = 0;
  v5 = *(_QWORD *)(v3 - 112);
  sub_1A93F900C();
  if (!v5)
  {
    *(_BYTE *)(v3 - 72) = 1;
    sub_1A93F9000();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 184) + 8))(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8))(v2, v4);
}

uint64_t NSPredicate.EvaluationTree.hashValue.getter()
{
  sub_1A93F92DC();
  NSPredicate.EvaluationTree.hash(into:)();
  return sub_1A93F9324();
}

uint64_t NSPredicate.EvaluationTree.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;

  v30 = a2;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8520);
  v28 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v33 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8528);
  v5 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  v27 = v5;
  MEMORY[0x1E0C80A78](v4);
  v32 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8530);
  v25 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v29 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8538);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8540);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1A915609C();
  v15 = v35;
  sub_1A93F93C0();
  if (!v15)
  {
    v23[1] = v9;
    v23[2] = v8;
    v35 = v11;
    v16 = sub_1A93F8F94();
    v17 = v10;
    v18 = v13;
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X10 }
    v19 = sub_1A93F8D00();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7C28);
    *v21 = &type metadata for NSPredicate.EvaluationTree;
    sub_1A93F8EF8();
    sub_1A93F8CE8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v17);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
}

uint64_t sub_1A9156028@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NSPredicate.EvaluationTree.init(from:)(a1, a2);
}

void sub_1A915603C(_QWORD *a1)
{
  NSPredicate.EvaluationTree.encode(to:)(a1);
}

uint64_t sub_1A9156050()
{
  sub_1A93F92DC();
  NSPredicate.EvaluationTree.hash(into:)();
  return sub_1A93F9324();
}

unint64_t sub_1A915609C()
{
  unint64_t result;

  result = qword_1EEAB84E0;
  if (!qword_1EEAB84E0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94087F8, &_s14EvaluationTreeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB84E0);
  }
  return result;
}

unint64_t sub_1A91560E0()
{
  unint64_t result;

  result = qword_1EEAB84E8;
  if (!qword_1EEAB84E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94087A8, &_s14EvaluationTreeO13NotCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB84E8);
  }
  return result;
}

unint64_t sub_1A9156124()
{
  unint64_t result;

  result = qword_1EEAB84F0;
  if (!qword_1EEAB84F0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NSPredicate.EvaluationTree, &type metadata for NSPredicate.EvaluationTree);
    atomic_store(result, (unint64_t *)&qword_1EEAB84F0);
  }
  return result;
}

unint64_t sub_1A9156168()
{
  unint64_t result;

  result = qword_1EEAB84F8;
  if (!qword_1EEAB84F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408758, &_s14EvaluationTreeO12OrCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB84F8);
  }
  return result;
}

unint64_t sub_1A91561AC()
{
  unint64_t result;

  result = qword_1EEAB8510;
  if (!qword_1EEAB8510)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408708, &_s14EvaluationTreeO13AndCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB8510);
  }
  return result;
}

unint64_t sub_1A91561F0()
{
  unint64_t result;

  result = qword_1EEAB8518;
  if (!qword_1EEAB8518)
  {
    result = MEMORY[0x1AF414014](&unk_1A94086B8, &_s14EvaluationTreeO19EvaluableCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB8518);
  }
  return result;
}

uint64_t sub_1A9156234()
{
  sub_1A93F92DC();
  NSPredicate.EvaluationTree.hash(into:)();
  return sub_1A93F9324();
}

uint64_t sub_1A9156278()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1A91562A0()
{
  unint64_t result;

  result = qword_1EEAB8548;
  if (!qword_1EEAB8548)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NSPredicate.EvaluationTree, &type metadata for NSPredicate.EvaluationTree);
    atomic_store(result, (unint64_t *)&qword_1EEAB8548);
  }
  return result;
}

uint64_t sub_1A91562E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A9156308(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEAB8500);
    v8 = a2();
    result = MEMORY[0x1AF414014](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A9156370()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void NSPredicate.explain(with:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  uint64_t v3;
  unsigned int v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  _QWORD v40[5];
  id v41;
  unint64_t *v42;
  unsigned int v43;
  uint64_t v44;
  char v45[32];
  uint64_t v46;
  _BYTE v47[32];
  unint64_t v48;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v6 = objc_msgSend(v2, sel_evaluateWithObject_, sub_1A93F90A8());
  swift_unknownObjectRelease();
  objc_opt_self();
  v7 = swift_dynamicCastObjCClass();
  if (!v7)
  {
    v19 = swift_allocObject();
    *(_BYTE *)(v19 + 16) = v6;
    v20 = objc_msgSend(v2, sel_description);
    v21 = sub_1A93F8040();
    v23 = v22;

    *(_QWORD *)(v19 + 24) = v21;
    *(_QWORD *)(v19 + 32) = v23;
    *a2 = v19;
    return;
  }
  v8 = (void *)v7;
  v43 = v6;
  v42 = (unint64_t *)a2;
  v44 = v3;
  v9 = v2;
  v10 = objc_msgSend(v8, sel_subpredicates);
  v11 = sub_1A93F8310();

  v12 = MEMORY[0x1E0DEE9D8];
  v48 = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(v11 + 16);
  if (v13)
  {
    v41 = v9;
    v14 = v11 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1A906443C(v14, (uint64_t)v47);
      sub_1A906443C((uint64_t)v47, (uint64_t)v45);
      sub_1A915676C();
      if ((swift_dynamicCast() & 1) == 0)
        v46 = 0;
      v15 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
      if (v46)
      {
        MEMORY[0x1AF412004](v15);
        if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A93F834C();
        sub_1A93F8394();
        sub_1A93F8328();
      }
      v14 += 32;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    v12 = v48;
    v9 = v41;
  }
  v16 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v16);
  v40[2] = a1;
  v17 = v44;
  v18 = sub_1A91547EC((void (*)(uint64_t *__return_ptr, id *, uint64_t *))sub_1A91567A8, (uint64_t)v40, v12);
  swift_bridgeObjectRelease();
  if (v17)
  {

    return;
  }
  v24 = objc_msgSend(v8, sel_compoundPredicateType);
  if (!v24)
  {
    v30 = v9;
    v31 = swift_allocObject();
    *(_BYTE *)(v31 + 16) = v43;
    if (!*(_QWORD *)(v18 + 16))
    {
      swift_bridgeObjectRelease();
      __break(1u);
      return;
    }
    v32 = v31;
    v33 = *(_QWORD *)(v18 + 32);
    swift_retain();

    swift_bridgeObjectRelease();
    *(_QWORD *)(v32 + 24) = v33;
    v29 = v32 | 0xC000000000000000;
LABEL_22:
    *v42 = v29;
    return;
  }
  if (v24 == (id)2)
  {

    v28 = swift_allocObject();
    *(_BYTE *)(v28 + 16) = v43;
    *(_QWORD *)(v28 + 24) = v18;
    v29 = v28 | 0x8000000000000000;
    goto LABEL_22;
  }
  v25 = (uint64_t *)v42;
  v26 = v43;
  if (v24 == (id)1)
  {

    v27 = swift_allocObject();
    *(_BYTE *)(v27 + 16) = v26;
    *(_QWORD *)(v27 + 24) = v18;
    *v25 = v27 | 0x4000000000000000;
  }
  else
  {
    swift_bridgeObjectRelease();
    v34 = objc_msgSend(v8, sel_debugDescription);
    v35 = sub_1A93F8040();
    v36 = v9;
    v38 = v37;

    sub_1A91567E0();
    swift_allocError();
    *v39 = v35;
    v39[1] = v38;
    swift_willThrow();

  }
}

unint64_t sub_1A915676C()
{
  unint64_t result;

  result = qword_1ED2AC4A0;
  if (!qword_1ED2AC4A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2AC4A0);
  }
  return result;
}

uint64_t sub_1A91567A8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = NSPredicate.explain(with:)(*(_QWORD *)(v2 + 16));
  if (v3)
    *a2 = v3;
  return result;
}

unint64_t sub_1A91567E0()
{
  unint64_t result;

  result = qword_1EEAB8558;
  if (!qword_1EEAB8558)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NSPredicate.PredicateCrawlError, &type metadata for NSPredicate.PredicateCrawlError);
    atomic_store(result, (unint64_t *)&qword_1EEAB8558);
  }
  return result;
}

uint64_t NSPredicate.EvaluationTree.result.getter()
{
  _QWORD *v0;

  return ((uint64_t (*)(void))((char *)sub_1A9156844 + 4 * byte_1A9408114[*v0 >> 62]))();
}

uint64_t sub_1A9156844@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned __int8 *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
}

Swift::String __swiftcall NSPredicate.EvaluationTree.printableTreeString(depth:spacer:)(Swift::Int depth, Swift::String spacer)
{
  uint64_t *v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  Swift::String result;

  object = spacer._object;
  countAndFlagsBits = spacer._countAndFlagsBits;
  v6 = *v2;
  swift_bridgeObjectRetain();
  MEMORY[0x1AF411E90](countAndFlagsBits, object, depth);
  __asm { BR              X10 }
  return result;
}

uint64_t sub_1A91568C0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, Swift::String spacer, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F810C();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25;
}

void NSPredicate.EvaluationTree.prune(invertNot:by:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1A9156D48()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t (*v2)(unint64_t *);
  uint64_t result;
  unint64_t v4;

  v4 = v1;
  result = v2(&v4);
  if ((result & 1) != 0)
    result = swift_retain();
  else
    v1 = 0xF000000000000007;
  *v0 = v1;
  return result;
}

void NSPredicate.EvaluationTree.influences.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1A9156F88()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  return swift_retain();
}

uint64_t sub_1A9156FA4()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_BYTE *)(v1 + 16);
  v3 = swift_allocObject();
  *(_BYTE *)(v3 + 16) = v2;
  v8 = v1;
  v4 = sub_1A91570AC();
  v5 = sub_1A9154978(v4, (uint64_t)&v7, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *))NSPredicate.EvaluationTree.influences.getter);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 24) = v5;
  *v0 = v3 | 0x8000000000000000;
  return result;
}

uint64_t sub_1A91570AC()
{
  uint64_t v0;
  uint64_t v1;

  if ((*(_QWORD *)v0 >> 62) - 1 <= 1)
  {
    v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
    if (*(_QWORD *)(v1 + 16))
    {
      swift_bridgeObjectRetain();
      __asm { BR              X9 }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

void NSPredicate.EvaluationTree.flattened.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1A915723C(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_retain();
}

uint64_t NSPredicate.EvaluationTree.existentially(matches:)()
{
  _QWORD *v0;

  return ((uint64_t (*)(void))((char *)sub_1A915740C + 4 * byte_1A9408128[*v0 >> 62]))();
}

BOOL sub_1A915740C@<W0>(unint64_t a1@<X8>)
{
  return a1 >> 62 == 0;
}

BOOL sub_1A915741C@<W0>(unint64_t a1@<X8>)
{
  return a1 >> 62 == 2;
}

BOOL sub_1A915742C@<W0>(unint64_t a1@<X8>)
{
  return a1 >> 62 == 3;
}

BOOL sub_1A915743C@<W0>(unint64_t a1@<X8>)
{
  return a1 >> 62 == 1;
}

uint64_t NSPredicate.EvaluationTree.evaluableComponents.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v9;

  v1 = *v0;
  v2 = (unint64_t)*v0 >> 62;
  if ((v2 - 1) >= 2)
  {
    if ((_DWORD)v2)
    {
      return ((uint64_t (*)(void))NSPredicate.EvaluationTree.evaluableComponents.getter)();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7A28);
      v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1A9405520;
      *(_QWORD *)(v3 + 32) = v1;
      swift_retain();
    }
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
    v9 = MEMORY[0x1E0DEE9D8];
    v4 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 16);
    if (v4)
    {
      v5 = swift_bridgeObjectRetain();
      for (i = 0; i != v4; ++i)
      {
        v7 = NSPredicate.EvaluationTree.evaluableComponents.getter(v5);
        v5 = sub_1A9135E28(v7);
      }
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  return v3;
}

uint64_t NSPredicate.EvaluationTree.description.getter()
{
  Swift::String v0;

  v0._countAndFlagsBits = 8224;
  v0._object = (void *)0xE200000000000000;
  return NSPredicate.EvaluationTree.printableTreeString(depth:spacer:)(0, v0)._countAndFlagsBits;
}

uint64_t sub_1A9157574()
{
  Swift::String v0;

  v0._countAndFlagsBits = 8224;
  v0._object = (void *)0xE200000000000000;
  return NSPredicate.EvaluationTree.printableTreeString(depth:spacer:)(0, v0)._countAndFlagsBits;
}

uint64_t sub_1A91575B0()
{
  return swift_deallocObject();
}

BOOL sub_1A91575C0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = *a1;
  return (v2(&v4) & 1) == 0;
}

unint64_t sub_1A9157600()
{
  unint64_t result;

  result = qword_1EEAB8560;
  if (!qword_1EEAB8560)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NSPredicate.EvaluationTree, &type metadata for NSPredicate.EvaluationTree);
    atomic_store(result, (unint64_t *)&qword_1EEAB8560);
  }
  return result;
}

_QWORD *_s14EvaluationTreeOwCP(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t _s14EvaluationTreeOwxx()
{
  return swift_release();
}

_QWORD *_s14EvaluationTreeOwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *_s14EvaluationTreeOwta(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s14EvaluationTreeOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7D && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 125);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7C)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s14EvaluationTreeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7C)
  {
    *(_QWORD *)result = a2 - 125;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A91577A0(_QWORD *a1)
{
  return *a1 >> 62;
}

uint64_t *sub_1A91577AC(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for NSPredicate.EvaluationTree()
{
  return &type metadata for NSPredicate.EvaluationTree;
}

ValueMetadata *type metadata accessor for NSPredicate.PredicateCrawlError()
{
  return &type metadata for NSPredicate.PredicateCrawlError;
}

uint64_t getEnumTagSinglePayload for SubscriptionOffer.AppType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14EvaluationTreeO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A91578BC + 4 * byte_1A9408131[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A91578F0 + 4 * byte_1A940812C[v4]))();
}

uint64_t sub_1A91578F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91578F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9157900);
  return result;
}

uint64_t sub_1A915790C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9157914);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A9157918(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9157920(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14EvaluationTreeO10CodingKeysOMa()
{
  return &_s14EvaluationTreeO10CodingKeysON;
}

ValueMetadata *_s14EvaluationTreeO19EvaluableCodingKeysOMa()
{
  return &_s14EvaluationTreeO19EvaluableCodingKeysON;
}

ValueMetadata *_s14EvaluationTreeO13AndCodingKeysOMa()
{
  return &_s14EvaluationTreeO13AndCodingKeysON;
}

ValueMetadata *_s14EvaluationTreeO12OrCodingKeysOMa()
{
  return &_s14EvaluationTreeO12OrCodingKeysON;
}

uint64_t _s14EvaluationTreeO19EvaluableCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A91579C0 + 4 * byte_1A940813B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A91579F4 + 4 * byte_1A9408136[v4]))();
}

uint64_t sub_1A91579F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91579FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9157A04);
  return result;
}

uint64_t sub_1A9157A10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9157A18);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A9157A1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9157A24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14EvaluationTreeO13NotCodingKeysOMa()
{
  return &_s14EvaluationTreeO13NotCodingKeysON;
}

unint64_t sub_1A9157A44()
{
  unint64_t result;

  result = qword_1EEAB8568;
  if (!qword_1EEAB8568)
  {
    result = MEMORY[0x1AF414014](&unk_1A94083B0, &_s14EvaluationTreeO13NotCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB8568);
  }
  return result;
}

unint64_t sub_1A9157A8C()
{
  unint64_t result;

  result = qword_1EEAB8570;
  if (!qword_1EEAB8570)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408468, &_s14EvaluationTreeO12OrCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB8570);
  }
  return result;
}

unint64_t sub_1A9157AD4()
{
  unint64_t result;

  result = qword_1EEAB8578;
  if (!qword_1EEAB8578)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408520, &_s14EvaluationTreeO13AndCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB8578);
  }
  return result;
}

unint64_t sub_1A9157B1C()
{
  unint64_t result;

  result = qword_1EEAB8580;
  if (!qword_1EEAB8580)
  {
    result = MEMORY[0x1AF414014](&unk_1A94085D8, &_s14EvaluationTreeO19EvaluableCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB8580);
  }
  return result;
}

unint64_t sub_1A9157B64()
{
  unint64_t result;

  result = qword_1EEAB8588;
  if (!qword_1EEAB8588)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408690, &_s14EvaluationTreeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB8588);
  }
  return result;
}

unint64_t sub_1A9157BAC()
{
  unint64_t result;

  result = qword_1EEAB8590;
  if (!qword_1EEAB8590)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408548, &_s14EvaluationTreeO19EvaluableCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB8590);
  }
  return result;
}

unint64_t sub_1A9157BF4()
{
  unint64_t result;

  result = qword_1EEAB8598;
  if (!qword_1EEAB8598)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408570, &_s14EvaluationTreeO19EvaluableCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB8598);
  }
  return result;
}

unint64_t sub_1A9157C3C()
{
  unint64_t result;

  result = qword_1EEAB85A0;
  if (!qword_1EEAB85A0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408490, &_s14EvaluationTreeO13AndCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB85A0);
  }
  return result;
}

unint64_t sub_1A9157C84()
{
  unint64_t result;

  result = qword_1EEAB85A8;
  if (!qword_1EEAB85A8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94084B8, &_s14EvaluationTreeO13AndCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB85A8);
  }
  return result;
}

unint64_t sub_1A9157CCC()
{
  unint64_t result;

  result = qword_1EEAB85B0;
  if (!qword_1EEAB85B0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94083D8, &_s14EvaluationTreeO12OrCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB85B0);
  }
  return result;
}

unint64_t sub_1A9157D14()
{
  unint64_t result;

  result = qword_1EEAB85B8;
  if (!qword_1EEAB85B8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408400, &_s14EvaluationTreeO12OrCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB85B8);
  }
  return result;
}

unint64_t sub_1A9157D5C()
{
  unint64_t result;

  result = qword_1EEAB85C0;
  if (!qword_1EEAB85C0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408320, &_s14EvaluationTreeO13NotCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB85C0);
  }
  return result;
}

unint64_t sub_1A9157DA4()
{
  unint64_t result;

  result = qword_1EEAB85C8;
  if (!qword_1EEAB85C8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408348, &_s14EvaluationTreeO13NotCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB85C8);
  }
  return result;
}

unint64_t sub_1A9157DEC()
{
  unint64_t result;

  result = qword_1EEAB85D0;
  if (!qword_1EEAB85D0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408600, &_s14EvaluationTreeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB85D0);
  }
  return result;
}

unint64_t sub_1A9157E34()
{
  unint64_t result;

  result = qword_1EEAB85D8;
  if (!qword_1EEAB85D8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408628, &_s14EvaluationTreeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEAB85D8);
  }
  return result;
}

_QWORD *sub_1A9157E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    swift_retain();
    NSPredicate.EvaluationTree.prune(invertNot:by:)(&v12, 0, a2, a3);
    swift_release();
    v8 = v12;
    if ((~v12 & 0xF000000000000007) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_1A91180B0(0, v7[2] + 1, 1, v7);
      v10 = v7[2];
      v9 = v7[3];
      if (v10 >= v9 >> 1)
        v7 = sub_1A91180B0((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
      v7[2] = v10 + 1;
      v7[v10 + 4] = v8;
    }
    ++v6;
  }
  while (v3 != v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1A9157FC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6261756C617665 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6581857 && a2 == 0xE300000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 29295 && a2 == 0xE200000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7630702 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A915814C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746C75736572 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461636964657270 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A9158240(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746C75736572 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646C696863 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A9158320(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746C75736572 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A9158408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1A9158468(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13[2];

  sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
  sub_1A912D6DC((unint64_t *)&unk_1ED2A41C0, (unint64_t *)&qword_1ED2A41B8);
  v2 = 0;
  v13[1] = (id)sub_1A93F8628();
  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        goto LABEL_23;
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          goto LABEL_23;
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            goto LABEL_23;
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_1A90A20D0(v13, *(id *)(*(_QWORD *)(a1 + 48) + 8 * v9));

  }
  v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1A915861C(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_1A93F8628();
  v3 = 0;
  v15 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_1A93278CC(&v14, *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1A915878C(uint64_t *a1)
{
  uint64_t v2;
  void (*v3)(uint64_t *__return_ptr, id *);
  void (*v4)(id *__return_ptr, uint64_t *);
  uint64_t (*v5)(void **);
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char v19;
  void (*v20)(void **__return_ptr, id *);
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  char v27;
  uint64_t v28;

  v2 = *a1;
  v3 = (void (*)(uint64_t *__return_ptr, id *))a1[1];
  v4 = (void (*)(id *__return_ptr, uint64_t *))a1[3];
  v5 = (uint64_t (*)(void **))a1[5];
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
  sub_1A912D6DC((unint64_t *)&qword_1ED2A9590, (unint64_t *)&qword_1ED2A4230);
  v6 = 0;
  v28 = sub_1A93F8628();
  v22 = v2 + 56;
  v7 = -1 << *(_BYTE *)(v2 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v20 = (void (*)(void **__return_ptr, id *))a1[7];
  v21 = (unint64_t)(63 - v7) >> 6;
  while (v9)
  {
    v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v11 = v10 | (v6 << 6);
LABEL_17:
    v16 = *(_QWORD *)(v2 + 48) + 16 * v11;
    v17 = *(_QWORD *)(v16 + 8);
    v24 = *(id *)v16;
    v25 = v17;
    swift_bridgeObjectRetain();
    v3(&v23, &v24);
    swift_bridgeObjectRelease();
    v4(&v24, &v23);
    v18 = v24;
    v19 = v25;
    v26 = v24;
    v27 = v25;
    if ((v5(&v26) & 1) != 0)
    {
      v24 = v18;
      LOBYTE(v25) = v19;
      v20(&v26, &v24);
      sub_1A9327448(&v24, v26);

    }
  }
  v12 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v12 >= v21)
    goto LABEL_29;
  v13 = *(_QWORD *)(v22 + 8 * v12);
  if (v13)
  {
LABEL_16:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v12 << 6);
    v6 = v12;
    goto LABEL_17;
  }
  v14 = v6 + 2;
  if (v6 + 2 >= v21)
    goto LABEL_29;
  v13 = *(_QWORD *)(v22 + 8 * v14);
  if (v13)
  {
LABEL_12:
    v12 = v14;
    goto LABEL_16;
  }
  v15 = v6 + 3;
  if (v6 + 3 >= v21)
    goto LABEL_29;
  v13 = *(_QWORD *)(v22 + 8 * v15);
  if (v13)
    goto LABEL_15;
  v14 = v6 + 4;
  if (v6 + 4 >= v21)
    goto LABEL_29;
  v13 = *(_QWORD *)(v22 + 8 * v14);
  if (v13)
    goto LABEL_12;
  v15 = v6 + 5;
  if (v6 + 5 >= v21)
    goto LABEL_29;
  v13 = *(_QWORD *)(v22 + 8 * v15);
  if (v13)
  {
LABEL_15:
    v12 = v15;
    goto LABEL_16;
  }
  v14 = v6 + 6;
  if (v6 + 6 >= v21)
  {
LABEL_29:
    sub_1A9120240();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  v13 = *(_QWORD *)(v22 + 8 * v14);
  if (v13)
    goto LABEL_12;
  while (1)
  {
    v12 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v12 >= v21)
      goto LABEL_29;
    v13 = *(_QWORD *)(v22 + 8 * v12);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
LABEL_31:
  __break(1u);
}

BOOL sub_1A9158A8C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) != 0;
}

void ContentID.hash(into:)(uint64_t a1, void *a2, void *a3, char a4)
{
  id v6;

  if (a4)
  {
    if (a4 == 1)
    {
      sub_1A93F92E8();
      sub_1A93F7FBC();
    }
    else
    {
      sub_1A93F92E8();
      v6 = a2;
      sub_1A93F8A48();
      sub_1A9158B44(a2, a3, 2);
    }
  }
  else
  {
    sub_1A93F92E8();
    sub_1A93F930C();
  }
}

void sub_1A9158B44(void *a1, id a2, char a3)
{
  if (a3 == 2)
  {

  }
  else if (a3 == 1)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t ContentID.hashValue.getter(void *a1, void *a2, char a3)
{
  id v6;

  sub_1A93F92DC();
  if (a3)
  {
    sub_1A93F92E8();
    if (a3 == 1)
    {
      sub_1A93F7FBC();
    }
    else
    {
      v6 = a1;
      sub_1A93F8A48();
      sub_1A9158B44(a1, a2, 2);
    }
  }
  else
  {
    sub_1A93F92E8();
    sub_1A93F930C();
  }
  return sub_1A93F9324();
}

uint64_t sub_1A9158C28()
{
  uint64_t v0;
  void *v1;
  void *v2;
  int v3;
  id v4;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  sub_1A93F92DC();
  if (v3)
  {
    sub_1A93F92E8();
    if (v3 == 1)
    {
      sub_1A93F7FBC();
    }
    else
    {
      v4 = v1;
      sub_1A93F8A48();
      sub_1A9158B44(v1, v2, 2);
    }
  }
  else
  {
    sub_1A93F92E8();
    sub_1A93F930C();
  }
  return sub_1A93F9324();
}

void sub_1A9158CE0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)v0;
  if (*(_BYTE *)(v0 + 16))
  {
    v2 = *(void **)(v0 + 8);
    if (*(_BYTE *)(v0 + 16) == 1)
    {
      sub_1A93F92E8();
      sub_1A93F7FBC();
    }
    else
    {
      sub_1A93F92E8();
      v3 = v1;
      sub_1A93F8A48();
      sub_1A9158B44(v1, v2, 2);
    }
  }
  else
  {
    sub_1A93F92E8();
    sub_1A93F930C();
  }
}

uint64_t sub_1A9158D90()
{
  uint64_t v0;
  void *v1;
  void *v2;
  int v3;
  id v4;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  sub_1A93F92DC();
  if (v3)
  {
    sub_1A93F92E8();
    if (v3 == 1)
    {
      sub_1A93F7FBC();
    }
    else
    {
      v4 = v1;
      sub_1A93F8A48();
      sub_1A9158B44(v1, v2, 2);
    }
  }
  else
  {
    sub_1A93F92E8();
    sub_1A93F930C();
  }
  return sub_1A93F9324();
}

uint64_t sub_1A9158E44(uint64_t a1, uint64_t a2)
{
  return _s18PodcastsFoundation9ContentIDO2eeoiySbAC_ACtFZ_0(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16), *(void **)a2, *(void **)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t static ContentIDError.== infix(_:_:)()
{
  return 1;
}

uint64_t ContentIDError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t ContentIDError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t ContentID.stringIdentifier.getter(void *a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  _QWORD v13[2];

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    if (a3 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v10 = objc_msgSend(a1, sel_URIRepresentation);
      sub_1A93F7200();

      v11 = sub_1A93F7170();
      sub_1A9158B44(a1, a2, 2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return v11;
    }
  }
  else
  {
    v13[1] = a1;
    sub_1A915997C();
    return sub_1A93F8B38();
  }
  return (uint64_t)a1;
}

uint64_t Array<A>.unpack()(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  _QWORD *v5;
  _QWORD *v6;
  id v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  result = MEMORY[0x1E0DEE9D8];
  v18 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(a1 + 48);
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v11 = (void *)*((_QWORD *)v4 - 2);
      if (*v4)
      {
        v12 = (void *)*((_QWORD *)v4 - 1);
        if (*v4 == 1)
        {
          sub_1A91599C0(*((id *)v4 - 2), *((id *)v4 - 1), 1);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v6 = sub_1A907ECFC(0, v6[2] + 1, 1, v6);
          v14 = v6[2];
          v13 = v6[3];
          if (v14 >= v13 >> 1)
            v6 = sub_1A907ECFC((_QWORD *)(v13 > 1), v14 + 1, 1, v6);
          v6[2] = v14 + 1;
          v15 = &v6[2 * v14];
          v15[4] = v11;
          v15[5] = v12;
          v8 = v11;
          v9 = v12;
          v10 = 1;
        }
        else
        {
          v7 = v11;
          MEMORY[0x1AF412004]();
          if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A93F834C();
          sub_1A93F8394();
          sub_1A93F8328();
          v8 = v11;
          v9 = v12;
          v10 = 2;
        }
        sub_1A9158B44(v8, v9, v10);
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1A91181BC(0, v5[2] + 1, 1, v5);
        v17 = v5[2];
        v16 = v5[3];
        if (v17 >= v16 >> 1)
          v5 = sub_1A91181BC((_QWORD *)(v16 > 1), v17 + 1, 1, v5);
        v5[2] = v17 + 1;
        v5[v17 + 4] = v11;
      }
      v4 += 24;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v18;
  }
  return result;
}

id Array<A>.episodeCoreDataPredicate()(uint64_t a1)
{
  return sub_1A9159238(a1, (uint64_t)off_1E54CFD48, (SEL *)&selRef_predicateForEpisodeStoreTrackIds_);
}

id Array<A>.showCoreDataPredicate()(uint64_t a1)
{
  return sub_1A9159238(a1, (uint64_t)off_1E54CFDC0, (SEL *)&selRef_predicateForPodcastStoreIDs_);
}

id sub_1A9159238(uint64_t a1, uint64_t a2, SEL *a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  SEL *v25;
  uint64_t v26;

  v4 = Array<A>.unpack()(a1);
  v6 = v5;
  v8 = v7;
  v9 = MEMORY[0x1E0DEE9D8];
  v26 = MEMORY[0x1E0DEE9D8];
  if (!(v4 >> 62))
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v8 + 16);
    if (v12)
      goto LABEL_6;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v21 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (!v21)
    goto LABEL_15;
LABEL_3:
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v10 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBF8);
  *(_QWORD *)(v10 + 64) = sub_1A91599E4();
  *(_QWORD *)(v10 + 32) = v4;
  swift_bridgeObjectRetain();
  sub_1A93F8754();
  v11 = swift_bridgeObjectRelease();
  MEMORY[0x1AF412004](v11);
  if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1A93F834C();
  sub_1A93F8394();
  sub_1A93F8328();
  v12 = *(_QWORD *)(v8 + 16);
  if (v12)
  {
LABEL_6:
    v25 = a3;
    sub_1A93F8D84();
    v13 = 0;
    do
    {
      v14 = v13 + 1;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, *(_QWORD *)(v8 + 8 * v13 + 32));
      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
      v13 = v14;
    }
    while (v12 != v14);
    swift_bridgeObjectRelease();
    v15 = (void *)objc_opt_self();
    sub_1A915A370(v9, (unint64_t *)&qword_1ED2A4230, 0x1E0CB37E8, (unint64_t *)&qword_1ED2A9590, (void (*)(id *, uint64_t))sub_1A9327448);
    swift_release();
    sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
    sub_1A912D6DC((unint64_t *)&qword_1ED2A9590, (unint64_t *)&qword_1ED2A4230);
    v16 = (void *)sub_1A93F85EC();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v15, *v25, v16);

    MEMORY[0x1AF412004]();
    if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1A93F834C();
    sub_1A93F8394();
    sub_1A93F8328();
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_11;
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_17;
LABEL_11:
  v18 = (void *)objc_opt_self();
  sub_1A9159F94(v6);
  swift_bridgeObjectRelease();
  v19 = (void *)sub_1A93F85EC();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v18, sel_predicateForEpisodeUuids_, v19);

  MEMORY[0x1AF412004]();
  if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1A93F834C();
  sub_1A93F8394();
  sub_1A93F8328();
LABEL_18:
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  v22 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v22);

  return v23;
}

_QWORD *Array<A>.popAdamIDs()(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  void *v6;
  char v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = (char *)(swift_bridgeObjectRetain() + 48);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v6 = (void *)*((_QWORD *)v2 - 2);
    v7 = *v2;
    if (*v2)
    {
      v8 = (void *)*((_QWORD *)v2 - 1);
      sub_1A91599C0(*((id *)v2 - 2), v8, *v2);
      sub_1A91599C0(v6, v8, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1A91182C8(0, v3[2] + 1, 1, v3);
      v10 = v3[2];
      v9 = v3[3];
      if (v10 >= v9 >> 1)
        v3 = sub_1A91182C8((_QWORD *)(v9 > 1), v10 + 1, 1, v3);
      v3[2] = v10 + 1;
      v5 = &v3[3 * v10];
      v5[4] = v6;
      v5[5] = v8;
      *((_BYTE *)v5 + 48) = v7;
      sub_1A9158B44(v6, v8, v7);
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_1A91181BC(0, v4[2] + 1, 1, v4);
      v12 = v4[2];
      v11 = v4[3];
      if (v12 >= v11 >> 1)
        v4 = sub_1A91181BC((_QWORD *)(v11 > 1), v12 + 1, 1, v4);
      v4[2] = v12 + 1;
      v4[v12 + 4] = v6;
    }
    v2 += 24;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t _s18PodcastsFoundation9ContentIDO2eeoiySbAC_ACtFZ_0(void *a1, void *a2, char a3, void *a4, void *a5, char a6)
{
  char v12;

  if (a3)
  {
    if (a3 == 1)
    {
      if (a6 == 1)
      {
        if (a1 == a4 && a2 == a5)
          return 1;
        else
          return sub_1A93F90C0();
      }
    }
    else if (a6 == 2)
    {
      sub_1A9072534(0, (unint64_t *)&qword_1ED2A4248);
      sub_1A91599C0(a1, a2, 2);
      sub_1A91599C0(a4, a5, 2);
      v12 = sub_1A93F8A3C();
      sub_1A9158B44(a4, a5, 2);
      sub_1A9158B44(a1, a2, 2);
      return v12 & 1;
    }
    return 0;
  }
  return !a6 && a1 == a4;
}

unint64_t sub_1A915997C()
{
  unint64_t result;

  result = qword_1ED2A47C0;
  if (!qword_1ED2A47C0)
  {
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEE1C8], MEMORY[0x1E0DEE190]);
    atomic_store(result, (unint64_t *)&qword_1ED2A47C0);
  }
  return result;
}

id sub_1A91599C0(id result, id a2, char a3)
{
  if (a3 == 2)
    return result;
  if (a3 == 1)
    return (id)swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_1A91599E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2ABC00;
  if (!qword_1ED2ABC00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2ABBF8);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0CB1B18], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2ABC00);
  }
  return result;
}

uint64_t sub_1A9159A30(unint64_t a1)
{
  return sub_1A915A370(a1, (unint64_t *)&qword_1ED2A4230, 0x1E0CB37E8, (unint64_t *)&qword_1ED2A9590, (void (*)(id *, uint64_t))sub_1A9327448);
}

uint64_t sub_1A9159A54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char v35;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v2 = type metadata accessor for CategoryModel();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v51 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v51 - v10);
  MEMORY[0x1E0C80A78](v12);
  v57 = (uint64_t)&v51 - v13;
  MEMORY[0x1E0C80A78](v14);
  v56 = (char *)&v51 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (uint64_t *)((char *)&v51 - v17);
  MEMORY[0x1E0C80A78](v19);
  v58 = (uint64_t *)((char *)&v51 - v20);
  MEMORY[0x1E0C80A78](v21);
  v59 = (uint64_t *)((char *)&v51 - v22);
  v23 = *(_QWORD *)(a1 + 16);
  sub_1A915A780();
  v60 = sub_1A93F8628();
  v54 = v23;
  if (!v23)
    return v60;
  v51 = v2;
  v52 = v8;
  v24 = 0;
  v53 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v61 = *(_QWORD *)(v3 + 72);
  v25 = v59;
LABEL_6:
  v55 = v24;
  sub_1A9151768(v53 + v61 * v24, (uint64_t)v25);
  v26 = v60;
  sub_1A93F92DC();
  sub_1A93F930C();
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  v27 = sub_1A93F9324();
  v28 = -1 << *(_BYTE *)(v26 + 32);
  v29 = v27 & ~v28;
  v30 = v26 + 56;
  if (((*(_QWORD *)(v26 + 56 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) != 0)
  {
    v31 = ~v28;
    do
    {
      sub_1A9151768(*(_QWORD *)(v26 + 48) + v29 * v61, (uint64_t)v11);
      v32 = *v11;
      v33 = v59;
      v2 = *v59;
      sub_1A9151768((uint64_t)v11, (uint64_t)v8);
      sub_1A9151768((uint64_t)v33, (uint64_t)v5);
      if (v32 == v2)
      {
        if (*((_QWORD *)v8 + 1) == *((_QWORD *)v5 + 1) && *((_QWORD *)v8 + 2) == *((_QWORD *)v5 + 2))
        {
          sub_1A91517AC((uint64_t)v8);
          sub_1A91517AC((uint64_t)v5);
          sub_1A91517AC((uint64_t)v11);
LABEL_4:
          swift_bridgeObjectRelease();
          v25 = v59;
LABEL_5:
          v24 = v55 + 1;
          sub_1A91517AC((uint64_t)v25);
          if (v24 == v54)
            return v60;
          goto LABEL_6;
        }
        v35 = sub_1A93F90C0();
        sub_1A91517AC((uint64_t)v8);
        sub_1A91517AC((uint64_t)v5);
        sub_1A91517AC((uint64_t)v11);
        v26 = v60;
        if ((v35 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1A91517AC((uint64_t)v8);
        sub_1A91517AC((uint64_t)v5);
        sub_1A91517AC((uint64_t)v11);
        v26 = v60;
      }
      v29 = (v29 + 1) & v31;
    }
    while (((*(_QWORD *)(v30 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = v59;
  sub_1A9151768((uint64_t)v59, (uint64_t)v58);
  v62 = v26;
  if (*(_QWORD *)(v26 + 24) <= *(_QWORD *)(v26 + 16))
  {
    if (isUniquelyReferenced_nonNull_native)
      sub_1A91C50F0();
    else
      sub_1A9239A20();
    v26 = v62;
    sub_1A93F92DC();
    sub_1A93F930C();
    sub_1A93F7FBC();
    v37 = sub_1A93F9324();
    v38 = -1 << *(_BYTE *)(v26 + 32);
    v29 = v37 & ~v38;
    v60 = v26 + 56;
    if (((*(_QWORD *)(v26 + 56 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) != 0)
    {
      v39 = ~v38;
      do
      {
        v40 = v5;
        sub_1A9151768(*(_QWORD *)(v26 + 48) + v29 * v61, (uint64_t)v18);
        v41 = *v18;
        v42 = v58;
        v43 = *v58;
        v5 = v56;
        sub_1A9151768((uint64_t)v18, (uint64_t)v56);
        v44 = (uint64_t)v42;
        v2 = v57;
        sub_1A9151768(v44, v57);
        if (v41 == v43)
        {
          if (*((_QWORD *)v5 + 1) == *(_QWORD *)(v2 + 8) && *((_QWORD *)v5 + 2) == *(_QWORD *)(v2 + 16))
            goto LABEL_40;
          v46 = sub_1A93F90C0();
          sub_1A91517AC((uint64_t)v5);
          sub_1A91517AC(v2);
          sub_1A91517AC((uint64_t)v18);
          v5 = v40;
          if ((v46 & 1) != 0)
            goto LABEL_41;
        }
        else
        {
          sub_1A91517AC((uint64_t)v5);
          sub_1A91517AC(v2);
          sub_1A91517AC((uint64_t)v18);
          v5 = v40;
        }
        v29 = (v29 + 1) & v39;
      }
      while (((*(_QWORD *)(v60 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) != 0);
      v8 = v52;
    }
    v25 = v59;
  }
  else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1A9238234();
    v26 = v62;
  }
  *(_QWORD *)(v26 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v29;
  sub_1A915A7C8((uint64_t)v58, *(_QWORD *)(v26 + 48) + v29 * v61);
  v47 = *(_QWORD *)(v26 + 16);
  v48 = __OFADD__(v47, 1);
  v49 = v47 + 1;
  if (!v48)
  {
    v60 = v26;
    *(_QWORD *)(v26 + 16) = v49;
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  __break(1u);
LABEL_40:
  sub_1A91517AC((uint64_t)v5);
  sub_1A91517AC(v2);
  sub_1A91517AC((uint64_t)v18);
LABEL_41:
  result = sub_1A93F924C();
  __break(1u);
  return result;
}

uint64_t sub_1A9159F94(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1A93F8628();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1A9091D1C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_1A915A02C()
{
  unint64_t result;

  result = qword_1ED2AA370;
  if (!qword_1ED2AA370)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ContentID, &type metadata for ContentID);
    atomic_store(result, (unint64_t *)&qword_1ED2AA370);
  }
  return result;
}

unint64_t sub_1A915A074()
{
  unint64_t result;

  result = qword_1EEAB85E0;
  if (!qword_1EEAB85E0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ContentIDError, &type metadata for ContentIDError);
    atomic_store(result, (unint64_t *)&qword_1EEAB85E0);
  }
  return result;
}

void destroy for ContentID(uint64_t a1)
{
  sub_1A9158B44(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s18PodcastsFoundation9ContentIDOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A91599C0(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ContentID(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A91599C0(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A9158B44(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ContentID(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A9158B44(v4, v5, v6);
  return a1;
}

uint64_t sub_1A915A1AC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ContentID()
{
  return &type metadata for ContentID;
}

uint64_t storeEnumTagSinglePayload for ContentIDError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A915A204 + 4 * byte_1A9408850[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A915A224 + 4 * byte_1A9408855[v4]))();
}

_BYTE *sub_1A915A204(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A915A224(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A915A22C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A915A234(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A915A23C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A915A244(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ContentIDError()
{
  return &type metadata for ContentIDError;
}

uint64_t sub_1A915A260(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  uint64_t v5;
  __int16 v6;
  __int16 v7;
  _BYTE v8[16];
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A915A73C();
  result = sub_1A93F8628();
  v9 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 41);
    do
    {
      v5 = *(_QWORD *)(v4 - 9);
      v6 = *(v4 - 1);
      v7 = *v4;
      v4 += 16;
      sub_1A9327E04((uint64_t)v8, v5, v6 | (v7 << 8));
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_1A915A2DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1A93F8628();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1A93278CC(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1A915A34C(unint64_t a1)
{
  return sub_1A915A370(a1, &qword_1ED2A9390, 0x1E0C99D80, (unint64_t *)&unk_1EEABC4F0, (void (*)(id *, uint64_t))sub_1A93286E0);
}

uint64_t sub_1A915A370(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  void **v14;
  void *v15;
  id v16;
  uint64_t v17;

  v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  sub_1A9072534(0, a2);
  sub_1A912D6DC(a4, a2);
  result = sub_1A93F8628();
  v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1A93F8E5C();
    result = swift_bridgeObjectRelease();
    if (!v11)
      return v17;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      return v17;
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v11; ++i)
      {
        v13 = MEMORY[0x1AF4129DC](i, a1);
        a5(&v16, v13);

      }
    }
    else
    {
      v14 = (void **)(a1 + 32);
      do
      {
        v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A915A4EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A915A6F8();
  result = sub_1A93F8628();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1A932899C(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1A915A55C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  char *v4;
  void *v5;
  void *v6;
  char v7;
  void *v8[2];
  char v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A915A600();
  result = sub_1A93F8628();
  v10 = result;
  if (v2)
  {
    v4 = (char *)(a1 + 48);
    do
    {
      v5 = (void *)*((_QWORD *)v4 - 2);
      v6 = (void *)*((_QWORD *)v4 - 1);
      v7 = *v4;
      v4 += 24;
      sub_1A91599C0(v5, v6, v7);
      sub_1A9328B34((uint64_t)v8, v5, v6, v7);
      sub_1A9158B44(v8[0], v8[1], v9);
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

unint64_t sub_1A915A600()
{
  unint64_t result;

  result = qword_1ED2AB7D0;
  if (!qword_1ED2AB7D0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ContentID, &type metadata for ContentID);
    atomic_store(result, (unint64_t *)&qword_1ED2AB7D0);
  }
  return result;
}

uint64_t sub_1A915A644(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A915A6B4();
  result = sub_1A93F8628();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1A90920C8(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_1A915A6B4()
{
  unint64_t result;

  result = qword_1ED2A5840;
  if (!qword_1ED2A5840)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AdamID, &type metadata for AdamID);
    atomic_store(result, (unint64_t *)&qword_1ED2A5840);
  }
  return result;
}

unint64_t sub_1A915A6F8()
{
  unint64_t result;

  result = qword_1EEAB85E8;
  if (!qword_1EEAB85E8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PriceType, &type metadata for PriceType);
    atomic_store(result, (unint64_t *)&qword_1EEAB85E8);
  }
  return result;
}

unint64_t sub_1A915A73C()
{
  unint64_t result;

  result = qword_1EEAB85F0;
  if (!qword_1EEAB85F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9409BD0, &type metadata for LibraryInterestStateDataSource.State);
    atomic_store(result, (unint64_t *)&qword_1EEAB85F0);
  }
  return result;
}

unint64_t sub_1A915A780()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEAB85F8;
  if (!qword_1EEAB85F8)
  {
    v1 = type metadata accessor for CategoryModel();
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for CategoryModel, v1);
    atomic_store(result, (unint64_t *)&qword_1EEAB85F8);
  }
  return result;
}

uint64_t sub_1A915A7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CategoryModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void AMSBagProtocol.createLocalSnapshot(completion:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  void *v6;
  _QWORD v7[6];

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v7[4] = sub_1A906FDC0;
  v7[5] = v5;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = sub_1A906FD4C;
  v7[3] = &block_descriptor_4;
  v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_createSnapshotWithCompletion_, v6);
  _Block_release(v6);
}

uint64_t sub_1A915A8CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A915A8F0(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v5;

  v2 = objc_msgSend(*(id *)(v1 + 16), sel_arrayForKey_, a1);
  v3 = objc_msgSend(v2, sel_unsafeSnapshotSyncValue);

  if (!v3)
    return 0;
  sub_1A915A9A4();
  sub_1A93F83D0();
  if (swift_dynamicCast())
    return v5;
  else
    return 0;
}

unint64_t sub_1A915A9A4()
{
  unint64_t result;

  result = qword_1EEAB8600;
  if (!qword_1EEAB8600)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEAB8600);
  }
  return result;
}

id sub_1A915A9E0(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;
  id v4;

  v2 = objc_msgSend(*(id *)(v1 + 16), sel_integerForKey_, a1);
  v3 = objc_msgSend(v2, sel_unsafeSnapshotSyncValue);

  if (!v3)
    return 0;
  v4 = objc_msgSend(v3, sel_integerValue);

  return v4;
}

uint64_t sub_1A915AA64(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;

  v2 = objc_msgSend(*(id *)(v1 + 16), sel_stringForKey_, a1);
  v3 = objc_msgSend(v2, sel_unsafeSnapshotSyncValue);

  if (v3)
  {
    sub_1A93F8034();

  }
  return 0;
}

unint64_t sub_1A915AAE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2A5520;
  if (!qword_1ED2A5520)
  {
    v1 = sub_1A93F726C();
    result = MEMORY[0x1AF414014](MEMORY[0x1E0CB0040], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2A5520);
  }
  return result;
}

uint64_t LocalSnapshotBag.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t method lookup function for LocalSnapshotBag()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocalSnapshotBag.array<A>(forKey:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of LocalSnapshotBag.BOOL(forKey:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of LocalSnapshotBag.integer(forKey:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of LocalSnapshotBag.string(forKey:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of LocalSnapshotBag.url(forKey:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

double URLTaskAssetSource.init<A>(downloader:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, _OWORD *a4@<X8>)
{
  double result;
  __int128 v8;

  AssetURLSessionProtocol.eraseToAnySession()(a2, a3, (uint64_t (**)())&v8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  result = *(double *)&v8;
  *a4 = v8;
  return result;
}

uint64_t URLTaskAssetSource.fetch(asset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)();
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, double);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  _OWORD v67[2];
  uint64_t v68;

  v63 = a3;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v52);
  v49 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8608);
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8610);
  v55 = *(_QWORD *)(v9 - 8);
  v56 = v9;
  MEMORY[0x1E0C80A78](v9);
  v54 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8618);
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  MEMORY[0x1E0C80A78](v11);
  v57 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8620);
  v61 = *(_QWORD *)(v13 - 8);
  v62 = v13;
  MEMORY[0x1E0C80A78](v13);
  v60 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = a2;
  v15 = *(_QWORD *)(a2 + 16);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v18);
  v19 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v46 = *v3;
  v47 = v3[1];
  v23 = a1;
  v45 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v45((char *)&v44 - v22, a1, v15, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8650);
  if (swift_dynamicCast())
  {
    v24 = *((_QWORD *)&v65 + 1);
    v25 = v66;
    __swift_project_boxed_opaque_existential_1(&v64, *((uint64_t *)&v65 + 1));
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v25 + 8))(v67, v24, v25);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v64);
  }
  else
  {
    v66 = 0;
    v64 = 0u;
    v65 = 0u;
    sub_1A905FD54((uint64_t)&v64, &qword_1ED2A46E8);
    memset(v67, 0, sizeof(v67));
    v68 = 0;
  }
  v26 = *(_QWORD *)(v50 + 24);
  v27 = *(void (**)(uint64_t, uint64_t))(v26 + 16);
  v48 = v23;
  v27(v15, v26);
  sub_1A93F7A58();
  sub_1A93F6D80();
  v28 = v54;
  v29 = v53;
  sub_1A93F7A28();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v29);
  ((void (*)(char *, uint64_t, uint64_t))v45)(v19, v23, v15);
  v30 = (*(unsigned __int8 *)(v16 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v31 = (char *)swift_allocObject();
  *((_QWORD *)v31 + 2) = v15;
  *((_QWORD *)v31 + 3) = v26;
  v32 = v47;
  *((_QWORD *)v31 + 4) = v46;
  *((_QWORD *)v31 + 5) = v32;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v31[v30], v19, v15);
  swift_retain();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABFD8);
  sub_1A9066D74(&qword_1EEAB8628, &qword_1EEAB8610, MEMORY[0x1E0C964A8]);
  sub_1A9066D74(&qword_1ED2ABFD0, &qword_1ED2ABFD8, MEMORY[0x1E0C95D90]);
  v33 = v56;
  v34 = v57;
  sub_1A93F7D28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v28, v33);
  sub_1A9062170((uint64_t)v67, (uint64_t)&v64, &qword_1ED2AD0C0);
  v35 = swift_allocObject();
  sub_1A915B810((uint64_t)&v64, v35 + 16);
  sub_1A9066D74(&qword_1EEAB8630, &qword_1EEAB8618, MEMORY[0x1E0C95B78]);
  v36 = v59;
  v37 = v60;
  sub_1A93F7B6C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v34, v36);
  v38 = sub_1A915B870(v48, v15, v26);
  v40 = v39;
  v41 = (_QWORD *)swift_allocObject();
  v41[2] = v15;
  v41[3] = v26;
  v41[4] = v38;
  v41[5] = v40;
  swift_getAssociatedTypeWitness();
  sub_1A9066D74(qword_1EEAB8638, &qword_1EEAB8620, MEMORY[0x1E0C95818]);
  v42 = v62;
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v37, v42);
  return sub_1A905FD54((uint64_t)v67, &qword_1ED2AD0C0);
}

uint64_t sub_1A915B1C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9062170(a1, (uint64_t)v13, &qword_1ED2AD3D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
  {
    v14 = sub_1A93F6D80();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v13, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    sub_1A93F6D50();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    v16 = sub_1A93F6D80();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 0, 1, v16);
  }
}

uint64_t sub_1A915B354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A915B3C0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  type metadata accessor for AnyAssetBackgroundSession(0, *(_QWORD *)(v3 + 16), a1, a2);
  result = AnyAssetBackgroundSession.start(task:for:)();
  *a3 = result;
  return result;
}

uint64_t sub_1A915B430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int EnumCaseMultiPayload;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DownloadPhase();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A915BAE4(a1, (uint64_t)v13);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1A9062170(a2, (uint64_t)v33, &qword_1ED2AD0C0);
    v23 = v34;
    if (v34)
    {
      v24 = v35;
      __swift_project_boxed_opaque_existential_1(v33, v34);
      v31 = 0;
      v32 = 0xE000000000000000;
      sub_1A93F85C8();
      sub_1A93F810C();
      (*(void (**)(const char *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v24 + 16))("Download Update", 15, 2, v31, v32, v23, v24);
      swift_bridgeObjectRelease();
LABEL_10:
      result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
LABEL_12:
      v18 = 0;
      v20 = 0xF000000000000000;
      goto LABEL_18;
    }
LABEL_11:
    result = sub_1A905FD54((uint64_t)v33, &qword_1ED2AD0C0);
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1A9062170(a2, (uint64_t)v33, &qword_1ED2AD0C0);
    v25 = v34;
    if (v34)
    {
      v26 = v35;
      __swift_project_boxed_opaque_existential_1(v33, v34);
      Trace.emit(event:)((uint64_t)"Download Pending", 16, 2, v25, v26);
      goto LABEL_10;
    }
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1A93F7224();
  v16 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v15, sel_contentsAtPath_, v16);

  if (!v17)
  {
    type metadata accessor for FileError();
    sub_1A915BB28();
    swift_allocError();
    v29 = v28;
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v28, v10, v7);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v29, 0, 2, v7);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v18 = sub_1A93F72B4();
  v20 = v19;

  sub_1A9062170(a2, (uint64_t)v33, &qword_1ED2AD0C0);
  v21 = v34;
  if (v34)
  {
    v22 = v35;
    __swift_project_boxed_opaque_existential_1(v33, v34);
    Trace.emit(event:)((uint64_t)"Download Complete", 17, 2, v21, v22);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  }
  else
  {
    sub_1A905FD54((uint64_t)v33, &qword_1ED2AD0C0);
  }
  sub_1A92B7958(512);
  if (v3)

  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
LABEL_18:
  *a3 = v18;
  a3[1] = v20;
  return result;
}

uint64_t sub_1A915B7E4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1A915B810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A915B858@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A915B430(a1, v2 + 16, a2);
}

uint64_t (*sub_1A915B870(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v5 + 16))(v8, v7);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, v8, a2);
  return sub_1A915BAA8;
}

uint64_t sub_1A915B92C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A915B950(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 32))(*a1, a1[1]);
}

uint64_t sub_1A915B978()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for URLTaskAssetSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for URLTaskAssetSource);
}

void sub_1A915B9BC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEAB8620);
  swift_getAssociatedTypeWitness();
  sub_1A9066D74(qword_1EEAB8638, &qword_1EEAB8620, MEMORY[0x1E0C95818]);
  sub_1A93F783C();
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A915BA50()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1A915BAA8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 8) + 40))();
}

uint64_t sub_1A915BAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DownloadPhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A915BB28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEABCEC0;
  if (!qword_1EEABCEC0)
  {
    v1 = type metadata accessor for FileError();
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for FileError, v1);
    atomic_store(result, (unint64_t *)&qword_1EEABCEC0);
  }
  return result;
}

uint64_t SubscribeOnAssetProcessingStep.init(upstream:subscribeQueue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  v9 = type metadata accessor for SubscribeOnAssetProcessingStep(0, a3, a4, a4);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(&a5[*(int *)(v9 + 36)], a1, a3);
  *(_QWORD *)a5 = a2;
  return result;
}

id SubscribeOnAssetProcessingStep.subscribeQueue.getter()
{
  id *v0;

  return *v0;
}

uint64_t SubscribeOnAssetProcessingStep.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

void **sub_1A915BBF4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  char *v9;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  char *v15;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = (char *)*a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (void **)&v9[(v6 & 0xF8 ^ 0x1F8) & (v6 + 16)];
    swift_retain();
  }
  else
  {
    v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v15 = v9;
    v14(v12, v13, v4);
  }
  return a1;
}

void **sub_1A915BCB0(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

_QWORD *sub_1A915BD1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void **sub_1A915BD6C(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A915BDD4(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A915BEA8 + 4 * byte_1A9408A80[(v9 - 1)]))();
}

void sub_1A915BF18(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t MTPodcast.episodeSortType.getter()
{
  void *v0;
  id v1;

  if (!objc_msgSend(v0, sel_isSerialShowTypeInFeed))
    return (uint64_t)objc_msgSend(v0, sel_sortAscending);
  v1 = objc_msgSend(v0, sel_showTypeSetting);
  if ((unint64_t)v1 >= 5)
    return 4;
  else
    return (0x504040604uLL >> (8 * v1));
}

double FeedManagerLocalConfiguration.timeoutIntervalForResource.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_timeoutIntervalForResource);
}

uint64_t FeedManagerLocalConfiguration.concurrentDeltaUpdateLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentDeltaUpdateLimit);
}

uint64_t FeedManagerLocalConfiguration.concurrentBootstrapUpdateLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentBootstrapUpdateLimit);
}

uint64_t FeedManagerLocalConfiguration.concurrentRSSUpdateLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentRSSUpdateLimit);
}

uint64_t FeedManagerLocalConfiguration.deltaNumberOfEpisodesToRequestPerPage.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_deltaNumberOfEpisodesToRequestPerPage);
}

uint64_t FeedManagerLocalConfiguration.useBackgroundFetchForFeedDownloads.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_useBackgroundFetchForFeedDownloads);
}

uint64_t FeedManagerLocalConfiguration.keepsFeedFileInTempDirAfterDownload.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_keepsFeedFileInTempDirAfterDownload);
}

uint64_t FeedManagerLocalConfiguration.usesCleanEpisodeTitles.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_usesCleanEpisodeTitles);
}

void sub_1A915C250()
{
  id v0;
  id v1;

  if (qword_1ED2A7EB8 != -1)
    swift_once();
  v0 = (id)qword_1ED2A7EB0;
  v1 = sub_1A915C550((uint64_t)v0, 0, 1, 2, 1, 2, 1, 2, 0, 1, 0, 1, 0, 1, 0, 1);

  qword_1EEAB86A8 = (uint64_t)v1;
}

id static FeedManagerLocalConfiguration.platformSpecificConfiguration.getter()
{
  uint64_t *v0;

  if (objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod))
  {
    if (qword_1EEAB6CD0 != -1)
      swift_once();
    v0 = &qword_1EEAB86A8;
  }
  else
  {
    if (qword_1ED2A7EB8 != -1)
      swift_once();
    v0 = &qword_1ED2A7EB0;
  }
  return (id)*v0;
}

id sub_1A915C390(char a1, char a2, char a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, char a11)
{
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  objc_super v15;

  v12 = a10;
  *(double *)&v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_timeoutIntervalForResource] = a9;
  v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__workQueueConcurrent] = a1;
  v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_useBackgroundFetchForFeedDownloads] = a2;
  v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_keepsFeedFileInTempDirAfterDownload] = a3;
  v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__supportsBatchInsertion] = a4;
  v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_usesCleanEpisodeTitles] = a5;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentDeltaUpdateLimit] = a6;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentBootstrapUpdateLimit] = a7;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentRSSUpdateLimit] = a8;
  if ((a11 & 1) == 0 && a10 == 300)
    v12 = 0;
  v13 = &v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_deltaNumberOfEpisodesToRequestPerPage];
  *(_QWORD *)v13 = v12;
  v13[8] = a11 & 1 | (a10 == 300);
  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for FeedManagerLocalConfiguration();
  return objc_msgSendSuper2(&v15, sel_init);
}

id FeedManagerLocalConfiguration.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FeedManagerLocalConfiguration.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FeedManagerLocalConfiguration.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedManagerLocalConfiguration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t FeedManagerLocalConfiguration.supportsBatchInsertion.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__supportsBatchInsertion);
}

uint64_t FeedManagerLocalConfiguration.workQueueConcurrent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__workQueueConcurrent);
}

uint64_t method lookup function for FeedManagerLocalConfiguration()
{
  return swift_lookUpClassMethod();
}

id sub_1A915C550(uint64_t a1, uint64_t a2, char a3, char a4, char a5, char a6, char a7, char a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16)
{
  char v17;
  char v18;
  char v19;
  char v20;
  char v22;
  char v25;
  char v26;
  id v28;

  if ((a3 & 1) != 0)
    a2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_timeoutIntervalForResource);
  if (a4 == 2)
    v17 = *(_BYTE *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__workQueueConcurrent);
  else
    v17 = a4 & 1;
  if (a5 == 2)
    v18 = *(_BYTE *)(a1
                   + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_useBackgroundFetchForFeedDownloads);
  else
    v18 = a5 & 1;
  if (a6 == 2)
    v19 = *(_BYTE *)(a1
                   + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_keepsFeedFileInTempDirAfterDownload);
  else
    v19 = a6 & 1;
  if (a7 == 2)
    v20 = *(_BYTE *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__supportsBatchInsertion);
  else
    v20 = a7 & 1;
  if (a8 == 2)
    v22 = *(_BYTE *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_usesCleanEpisodeTitles);
  else
    v22 = a8 & 1;
  if ((a10 & 1) != 0)
    a9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentDeltaUpdateLimit);
  if ((a12 & 1) == 0)
  {
    v25 = a16;
    if ((a14 & 1) == 0)
      goto LABEL_23;
LABEL_26:
    a13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentRSSUpdateLimit);
    if ((v25 & 1) == 0)
      goto LABEL_24;
LABEL_27:
    a15 = *(_QWORD *)(a1
                    + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_deltaNumberOfEpisodesToRequestPerPage);
    v26 = *(_BYTE *)(a1
                   + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_deltaNumberOfEpisodesToRequestPerPage
                   + 8);
    goto LABEL_28;
  }
  a11 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentBootstrapUpdateLimit);
  v25 = a16;
  if ((a14 & 1) != 0)
    goto LABEL_26;
LABEL_23:
  if ((v25 & 1) != 0)
    goto LABEL_27;
LABEL_24:
  v26 = 0;
LABEL_28:
  v28 = objc_allocWithZone((Class)type metadata accessor for FeedManagerLocalConfiguration());
  return sub_1A915C390(v17, v18, v19, v20, v22, a9, a11, a13, *(double *)&a2, a15, v26);
}

id FeedURLComposer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

PodcastsFoundation::FeedURLComposerError_optional __swiftcall FeedURLComposerError.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (PodcastsFoundation::FeedURLComposerError_optional)rawValue;
}

uint64_t FeedURLComposerError.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

PodcastsFoundation::FeedURLComposerError_optional sub_1A915C748(Swift::Int *a1)
{
  return FeedURLComposerError.init(rawValue:)(*a1);
}

uint64_t sub_1A915C750()
{
  sub_1A915CE74();
  sub_1A9051AC0();
  return sub_1A93F92B8();
}

uint64_t static FeedURLComposer.errorURLDoesNotExist.getter()
{
  return 0;
}

uint64_t static FeedURLComposer.errorURLInvalid.getter()
{
  return 1;
}

uint64_t static FeedURLComposer.errorCannotGenerateInternalURL.getter()
{
  return 2;
}

uint64_t sub_1A915C7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v16)(char *, char *, uint64_t);
  void *v17;
  void *v18;
  _BYTE *v19;
  _BYTE *v20;
  _QWORD v21[2];

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C40);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(int *)(v13 + 48);
  sub_1A906A3F0(a1, (uint64_t)v12);
  *(_QWORD *)&v12[v14] = a2;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    if (a2)
    {
      return sub_1A915CB68(a2, a3);
    }
    else
    {
      sub_1A915C9B0();
      swift_allocError();
      *v20 = 0;
      return swift_willThrow();
    }
  }
  else
  {
    v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v16(v9, v12, v6);
    v17 = (void *)objc_opt_self();
    sub_1A93F7170();
    v18 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    LODWORD(v17) = objc_msgSend(v17, sel_isSupportedUrlString_, v18);

    if ((_DWORD)v17)
    {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(a3, v9, v6);
    }
    else
    {
      sub_1A915C9B0();
      swift_allocError();
      *v19 = 1;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

unint64_t sub_1A915C9B0()
{
  unint64_t result;

  result = qword_1EEAB8700;
  if (!qword_1EEAB8700)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for FeedURLComposerError, &type metadata for FeedURLComposerError);
    atomic_store(result, (unint64_t *)&qword_1EEAB8700);
  }
  return result;
}

uint64_t sub_1A915CB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD v11[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    goto LABEL_4;
  v11[0] = 0x6C616E7265746E69;
  v11[1] = 0xEB000000002F2F3ALL;
  v11[3] = a1;
  sub_1A93F9060();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F7248();
  swift_bridgeObjectRelease();
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A914149C((uint64_t)v6);
LABEL_4:
    sub_1A915C9B0();
    swift_allocError();
    *v9 = 2;
    return swift_willThrow();
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
}

id FeedURLComposer.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedURLComposer();
  return objc_msgSendSuper2(&v2, sel_init);
}

id FeedURLComposer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedURLComposer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1A915CD2C()
{
  unint64_t result;

  result = qword_1EEAB8708;
  if (!qword_1EEAB8708)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for FeedURLComposerError, &type metadata for FeedURLComposerError);
    atomic_store(result, (unint64_t *)&qword_1EEAB8708);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedURLComposerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A915CDBC + 4 * byte_1A9408B85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A915CDF0 + 4 * byte_1A9408B80[v4]))();
}

uint64_t sub_1A915CDF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A915CDF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A915CE00);
  return result;
}

uint64_t sub_1A915CE0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A915CE14);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A915CE18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A915CE20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedURLComposerError()
{
  return &type metadata for FeedURLComposerError;
}

uint64_t method lookup function for FeedURLComposer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedURLComposer.feedURL(forOptionalURL:adamID:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

unint64_t sub_1A915CE74()
{
  unint64_t result;

  result = qword_1EEAB8710;
  if (!qword_1EEAB8710)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for FeedURLComposerError, &type metadata for FeedURLComposerError);
    atomic_store(result, (unint64_t *)&qword_1EEAB8710);
  }
  return result;
}

uint64_t AssetBackgroundSession.descriptor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

id AssetBackgroundSession.delegate.getter(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(v1 + *(int *)(a1 + 44));
}

uint64_t AssetBackgroundSession.session.getter()
{
  return swift_retain();
}

uint64_t AssetBackgroundSession.cache.getter()
{
  return swift_retain();
}

uint64_t sub_1A915CEF4()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1A915CF4C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2[2];
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1A915CF78(a2, a1, (uint64_t)v2 + ((v4 + 40) & ~v4), v3, v2[3], v2[4]);
}

uint64_t sub_1A915CF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  NSObject *v34;
  os_signpost_type_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint8_t *v40;
  os_signpost_id_t v41;
  uint8_t *v42;
  uint64_t v43;
  NSObject *v44;
  os_signpost_type_t v45;
  char *v46;
  uint64_t v47;
  uint8_t *v48;
  os_signpost_id_t v49;
  uint8_t *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  char *v86;
  void (*v87)(char *, char *, uint64_t);
  void (*v88)(char *, char *);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v122 = a6;
  v104 = a3;
  v108 = a2;
  v110 = a1;
  v121 = sub_1A93F726C();
  v116 = *(_QWORD *)(v121 - 8);
  MEMORY[0x1E0C80A78](v121);
  v112 = v8;
  v123 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v113 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v107 = *(_QWORD *)(v113 + 64);
  v10 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v120 = (char *)&v85 - v11;
  v96 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v10);
  v99 = v12;
  v119 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = a5;
  v13 = a4;
  swift_getAssociatedConformanceWitness();
  v114 = AssociatedTypeWitness;
  swift_getAssociatedTypeWitness();
  v14 = sub_1A93F78FC();
  v15 = MEMORY[0x1E0C95D90];
  v16 = MEMORY[0x1AF414014](MEMORY[0x1E0C95D90], v14);
  v93 = v14;
  v92 = v16;
  v17 = sub_1A93F7770();
  v109 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v118 = (char *)&v85 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEAB8770);
  v20 = sub_1A9066D74(&qword_1EEABCFB0, &qword_1EEAB8770, v15);
  v21 = MEMORY[0x1AF414014](MEMORY[0x1E0C957C0], v17);
  v98 = v19;
  v124 = v19;
  v125 = v17;
  v111 = v17;
  v97 = v20;
  v126 = v20;
  v127 = v21;
  v95 = v21;
  v22 = sub_1A93F7848();
  v103 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v101 = (char *)&v85 - v23;
  v24 = MEMORY[0x1AF414014](MEMORY[0x1E0C95B78], v22);
  v106 = v22;
  v94 = v24;
  v105 = sub_1A93F7770();
  v102 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v100 = (char *)&v85 - v25;
  v26 = sub_1A93F75FC();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v85 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = v29;
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v85 - v31;
  if (qword_1ED2ABE88 != -1)
    swift_once();
  v33 = sub_1A93F762C();
  __swift_project_value_buffer(v33, (uint64_t)qword_1ED2ABF70);
  sub_1A93F7620();
  sub_1A93F75D8();
  v34 = sub_1A93F7620();
  v35 = sub_1A93F8940();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    v36 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v36(v30, v32, v26);
    v37 = v30;
    v38 = v32;
    v39 = v26;
    v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v40 = 0;
    v41 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v34, v35, v41, "backgroundStash", "Start background stash", v40, 2u);
    v42 = v40;
    v26 = v39;
    v32 = v38;
    v30 = v37;
    MEMORY[0x1AF41411C](v42, -1, -1);

    v43 = v27;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v37, v26);
  }
  else
  {

    v43 = v27;
    v36 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  }
  v36(v30, v32, v26);
  sub_1A93F765C();
  swift_allocObject();
  v91 = sub_1A93F7650();
  v44 = sub_1A93F7620();
  v45 = sub_1A93F894C();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    v36(v30, v32, v26);
    v46 = v32;
    v47 = v26;
    v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v48 = 0;
    v49 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v44, v45, v49, "Start loading from source", "", v48, 2u);
    v50 = v48;
    v26 = v47;
    MEMORY[0x1AF41411C](v50, -1, -1);

    v51 = v43;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v47);
  }
  else
  {

    v51 = v43;
    v46 = v32;
  }
  v52 = v36;
  v87 = v36;
  v90 = v51;
  v53 = v110;
  v54 = v104;
  v55 = v13;
  v56 = v13;
  v57 = v117;
  v124 = (*(uint64_t (**)(uint64_t, uint64_t))(v117 + 56))(v110, v56);
  v52(v30, v46, v26);
  v58 = *(unsigned __int8 *)(v51 + 80);
  v59 = (char *)swift_allocObject();
  *((_QWORD *)v59 + 2) = v55;
  *((_QWORD *)v59 + 3) = v57;
  *((_QWORD *)v59 + 4) = v122;
  v88 = *(void (**)(char *, char *))(v51 + 32);
  v60 = v26;
  v85 = v26;
  v88(&v59[(v58 + 40) & ~v58], v30);
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  v61 = v46;
  v89 = v46;
  v62 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v119, v54, v55);
  v63 = v62;
  v64 = v30;
  v86 = v30;
  v66 = v113;
  v65 = v114;
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v120, v108, v114);
  v67 = v116;
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v123, v53, v121);
  v87(v64, v61, v60);
  v68 = (*(unsigned __int8 *)(v63 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  v69 = (v99 + v68 + *(unsigned __int8 *)(v66 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  v70 = v55;
  v71 = (v107 + *(unsigned __int8 *)(v67 + 80) + v69) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  v72 = (v112 + v58 + v71) & ~v58;
  v73 = (char *)swift_allocObject();
  v74 = v117;
  *((_QWORD *)v73 + 2) = v70;
  *((_QWORD *)v73 + 3) = v74;
  *((_QWORD *)v73 + 4) = v122;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v73[v68], v119, v70);
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(&v73[v69], v120, v65);
  (*(void (**)(char *, char *, uint64_t))(v116 + 32))(&v73[v71], v123, v121);
  v75 = &v73[v72];
  v76 = v85;
  ((void (*)(char *, char *, uint64_t))v88)(v75, v86, v85);
  sub_1A93F78E4();
  v77 = v101;
  v78 = v111;
  v79 = v118;
  sub_1A93F7D34();
  swift_release();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v79, v78);
  swift_retain();
  v80 = v106;
  v81 = v100;
  sub_1A93F7B3C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v77, v80);
  v82 = v105;
  MEMORY[0x1AF414014](MEMORY[0x1E0C957C0], v105);
  v83 = sub_1A93F7B24();
  swift_release();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v81, v82);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v76);
  return v83;
}

uint64_t AssetBackgroundSession.start(task:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, double);
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  _OWORD v74[3];
  __int128 v75;
  unint64_t v76;
  _QWORD v77[3];
  _BYTE v78[40];
  _QWORD v79[6];
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _OWORD v84[3];

  v4 = v3;
  v59 = a1;
  v7 = sub_1A93F6D80();
  v68 = *(_QWORD *)(v7 - 8);
  v69 = v7;
  MEMORY[0x1E0C80A78](v7);
  v61 = v8;
  v73 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v9);
  v55 = v10;
  v71 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a3 + 24);
  v53 = *(_QWORD *)(a3 + 16);
  v54 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v70 = (char *)v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52[1] = v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v52 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8718);
  v64 = *(_QWORD *)(v21 - 8);
  v65 = v21;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8720);
  v66 = *(_QWORD *)(v24 - 8);
  v67 = v24;
  v25 = MEMORY[0x1E0C80A78](v24);
  v62 = a3;
  v63 = (char *)v52 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(int *)(a3 + 48);
  v56 = v4;
  v28 = *(_QWORD *)(v4 + v27);
  v58 = v16;
  v29 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v60 = a2;
  v29(v20, a2, AssociatedTypeWitness, v25);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8650);
  v72 = AssociatedTypeWitness;
  if (swift_dynamicCast())
  {
    v30 = *((_QWORD *)&v81 + 1);
    v31 = v82;
    __swift_project_boxed_opaque_existential_1(&v80, *((uint64_t *)&v81 + 1));
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v31 + 8))(v79, v30, v31);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v80);
  }
  else
  {
    *(_QWORD *)&v82 = 0;
    v80 = 0u;
    v81 = 0u;
    sub_1A905FD54((uint64_t)&v80, &qword_1ED2A46E8);
    memset(v79, 0, 40);
  }
  sub_1A907C394((uint64_t)v79, (uint64_t)v78);
  *(_QWORD *)&v74[0] = v28;
  sub_1A907C394((uint64_t)v78, (uint64_t)v74 + 8);
  *(_QWORD *)&v75 = "AWAIT-SESSION";
  *((_QWORD *)&v75 + 1) = 13;
  LOBYTE(v76) = 2;
  LOBYTE(v77[2]) = 0;
  swift_retain();
  sub_1A905FD54((uint64_t)v78, &qword_1ED2AD0C0);
  v77[0] = 0;
  v77[1] = 0xE000000000000000;
  BYTE1(v77[2]) = 0;
  v82 = v74[2];
  v83 = v75;
  v80 = v74[0];
  v81 = v74[1];
  v84[0] = v76;
  *(_OWORD *)((char *)v84 + 10) = *(_OWORD *)((char *)v77 + 2);
  sub_1A905FD54((uint64_t)v79, &qword_1ED2AD0C0);
  swift_release();
  if (qword_1ED2A93C0 != -1)
    swift_once();
  v32 = (void *)qword_1ED2A93B8;
  *(_QWORD *)&v74[0] = qword_1ED2A93B8;
  v33 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v13, 1, 1, v33);
  v34 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8728);
  sub_1A9066C6C();
  sub_1A9066D74(&qword_1EEAB8730, &qword_1EEAB8728, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  sub_1A9066CA8((unint64_t *)&qword_1ED2A1C90, (uint64_t (*)(uint64_t))sub_1A9066C6C, MEMORY[0x1E0DEF7F8]);
  v52[0] = v23;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v13, &qword_1ED2A1C88);

  sub_1A905FD54((uint64_t)&v80, &qword_1EEAB8728);
  v35 = v57;
  v36 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v71, v56, v62);
  v38 = v68;
  v37 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v73, v59, v69);
  ((void (*)(char *, uint64_t, uint64_t))v29)(v70, v60, v72);
  v39 = (*(unsigned __int8 *)(v35 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v40 = (v55 + *(unsigned __int8 *)(v38 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v41 = v58;
  v42 = (v61 + v40 + *(unsigned __int8 *)(v58 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  v43 = (char *)swift_allocObject();
  v44 = v54;
  *((_QWORD *)v43 + 2) = v53;
  *((_QWORD *)v43 + 3) = v44;
  *((_QWORD *)v43 + 4) = *(_QWORD *)(v36 + 32);
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v43[v39], v71, v36);
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v43[v40], v73, v37);
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v43[v42], v70, v72);
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8738);
  sub_1A9066D74(&qword_1EEAB8740, &qword_1EEAB8718, MEMORY[0x1E0C95CB8]);
  v45 = MEMORY[0x1E0C95B78];
  sub_1A9066D74(&qword_1EEAB8748, &qword_1EEAB8738, MEMORY[0x1E0C95B78]);
  v46 = v63;
  v47 = v65;
  v48 = v52[0];
  sub_1A93F7D28();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v48, v47);
  sub_1A9066D74(qword_1EEAB8750, &qword_1EEAB8720, v45);
  v49 = v67;
  v50 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v46, v49);
  return v50;
}

uint64_t sub_1A915DF10@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  char *v35;
  void *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  char *v43;
  uint64_t v44;
  uint64_t AssociatedTypeWitness;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v46 = a7;
  v47 = a4;
  v44 = a3;
  v53 = a8;
  v54 = a5;
  v55 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v16 = (char *)&v43 - v15;
  v43 = (char *)&v43 - v15;
  v17 = type metadata accessor for AssetBackgroundSession(0, a5, a6, a7);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v43 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB87D8);
  v23 = *(_QWORD *)(v22 - 8);
  v51 = v22;
  v52 = v23;
  MEMORY[0x1E0C80A78](v22);
  v48 = a2;
  v49 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a1;
  v50 = *(int *)(v17 + 44);
  v56 = AssetBackgroundDelegate.start(request:using:)(v44, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a2, v17);
  v26 = v16;
  v27 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v26, v47, AssociatedTypeWitness);
  v28 = (*(unsigned __int8 *)(v18 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v29 = (v19 + v28 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v30 = (v14 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = (char *)swift_allocObject();
  v32 = v55;
  *((_QWORD *)v31 + 2) = v54;
  *((_QWORD *)v31 + 3) = v32;
  *((_QWORD *)v31 + 4) = v46;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v31[v28], v21, v17);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v31[v29], v43, v27);
  *(_QWORD *)&v31[v30] = v25;
  v33 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A90B8);
  v34 = MEMORY[0x1E0C95D90];
  sub_1A9066D74(&qword_1ED2A90B0, &qword_1ED2A90B8, MEMORY[0x1E0C95D90]);
  v35 = v49;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  v36 = *(void **)(v48 + v50);
  v37 = (_QWORD *)swift_allocObject();
  v38 = v55;
  v37[2] = v54;
  v37[3] = v38;
  v37[4] = v36;
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = sub_1A9160064;
  *(_QWORD *)(v39 + 24) = v37;
  v40 = v36;
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABFD8);
  sub_1A9066D74(&qword_1EEAB87E0, &qword_1EEAB87D8, MEMORY[0x1E0C957C0]);
  sub_1A9066D74(&qword_1ED2ABFD0, &qword_1ED2ABFD8, v34);
  v41 = v51;
  sub_1A93F7D28();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v35, v41);
}

void sub_1A915E298(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v9 = *a1;
  type metadata accessor for AssetBackgroundSession(0, a5, a6, a7);
  v10 = objc_msgSend(a4, sel_configuration);
  v11 = objc_msgSend(v10, sel_identifier);

  if (v11)
  {
    v12 = sub_1A93F8040();
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v17 = swift_getAssociatedConformanceWitness();
  DownloadTaskIdentifier.init(session:identifier:)(v12, v14, v9, &v24);
  v20 = v24;
  v21 = v25;
  v22 = v26;
  v23 = v27;
  v18 = type metadata accessor for DownloadTaskIdentifier(255, AssociatedTypeWitness, AssociatedConformanceWitness, v17);
  v19 = MEMORY[0x1AF414014](&protocol conformance descriptor for DownloadTaskIdentifier<A>, v18);
  DiskAssetCache<>.store(asset:at:)(a3, (uint64_t)&v20, v19);
}

uint64_t sub_1A915E41C()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1A915E454(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  os_signpost_type_t v8;
  uint8_t *v9;
  os_signpost_id_t v10;
  uint64_t v11;
  NSObject *v12;

  v3 = sub_1A93F75FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2ABE88 != -1)
    swift_once();
  v7 = sub_1A93F762C();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED2ABF70);
  v12 = sub_1A93F7620();
  v8 = sub_1A93F894C();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    v10 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v12, v8, v10, "Loaded asset from URL", "", v9, 2u);
    MEMORY[0x1AF41411C](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {

  }
}

uint64_t sub_1A915E5C0(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v46)(unint64_t, char *, uint64_t);
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v49 = a5;
  v55 = a4;
  v47 = a3;
  v48 = a2;
  v11 = sub_1A93F726C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v52 = v11;
  v53 = v13;
  MEMORY[0x1E0C80A78](v11);
  v51 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F75FC();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8778);
  v56 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8780);
  v61 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v50 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8788);
  v23 = *(_QWORD *)(v22 - 8);
  v62 = v22;
  v63 = v23;
  MEMORY[0x1E0C80A78](v22);
  v57 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8790);
  v66 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v59 = (char *)&v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8798);
  v67 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v60 = (char *)&v46 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 64))(a1, v47, a6, a7);
  v48 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v48(v18, a5, v15);
  v27 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v47 = v27 + v17;
  v28 = swift_allocObject();
  v46 = *(void (**)(unint64_t, char *, uint64_t))(v16 + 32);
  v46(v28 + v27, v18, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A90D8);
  sub_1A9066D74(&qword_1ED2A90D0, &qword_1ED2A90D8, MEMORY[0x1E0C95D90]);
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  v30 = v51;
  v29 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v51, v55, v52);
  v31 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v32 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v32 + v31, v30, v29);
  v33 = MEMORY[0x1E0C957C0];
  sub_1A9066D74(&qword_1EEAB87A0, &qword_1EEAB8778, MEMORY[0x1E0C957C0]);
  v34 = v50;
  v35 = v54;
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v20, v35);
  v48(v18, v49, v15);
  v36 = swift_allocObject();
  v46(v36 + v27, v18, v15);
  sub_1A9066D74(&qword_1EEAB87A8, &qword_1EEAB8780, MEMORY[0x1E0C95B48]);
  v37 = v58;
  v38 = v57;
  sub_1A93F7B3C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v34, v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB87B0);
  sub_1A9066D74(&qword_1EEAB87B8, &qword_1EEAB8788, v33);
  sub_1A9066D74(&qword_1EEAB87C0, &qword_1EEAB87B0, MEMORY[0x1E0C960B0]);
  v39 = v59;
  v40 = v62;
  sub_1A93F7BB4();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v40);
  sub_1A9066D74(&qword_1EEAB87C8, &qword_1EEAB8790, MEMORY[0x1E0C959F8]);
  v41 = v60;
  v42 = v64;
  sub_1A93F7CF8();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v39, v42);
  sub_1A9066D74(&qword_1EEAB87D0, &qword_1EEAB8798, MEMORY[0x1E0C95850]);
  v43 = v65;
  v44 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v41, v43);
  return v44;
}

uint64_t sub_1A915EBA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  NSObject *v12;
  const char *v13;
  uint8_t *v15;
  os_signpost_id_t v16;
  void (*v17)(_BYTE *, uint64_t);
  _BYTE v18[12];
  int v19;

  v0 = sub_1A93F7638();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1A93F75FC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v18[-v9];
  if (qword_1ED2ABE88 != -1)
    swift_once();
  v11 = sub_1A93F762C();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED2ABF70);
  v12 = sub_1A93F7620();
  sub_1A93F7644();
  v19 = sub_1A93F8934();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    swift_retain();
    sub_1A93F7668();
    swift_release();
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v1 + 88))(v3, v0) == *MEMORY[0x1E0DF2190])
    {
      v13 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
      v13 = "COMPLETE";
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v8, v10, v4);
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    v16 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v12, (os_signpost_type_t)v19, v16, "backgroundStash", v13, v15, 2u);
    MEMORY[0x1AF41411C](v15, -1, -1);

    v17 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v17(v10, v4);
    return ((uint64_t (*)(_BYTE *, uint64_t))v17)(v8, v4);
  }
  else
  {

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
  }
}

void sub_1A915EDE4(uint64_t a1, uint64_t a2)
{
  sub_1A915EEE0(a1, a2, "Stashed Asset");
}

id sub_1A915EDF0()
{
  id v0;
  void *v1;
  unsigned int v2;
  id v4;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_1A93F71A0();
  v5[0] = 0;
  v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, v5);

  if (v2)
    return v5[0];
  v4 = v5[0];
  sub_1A93F7128();

  return (id)swift_willThrow();
}

void sub_1A915EED4(uint64_t a1, uint64_t a2)
{
  sub_1A915EEE0(a1, a2, "Removed asset URL");
}

void sub_1A915EEE0(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  os_signpost_type_t v10;
  uint8_t *v11;
  os_signpost_id_t v12;
  uint64_t v13;
  NSObject *v14;

  v5 = sub_1A93F75FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2ABE88 != -1)
    swift_once();
  v9 = sub_1A93F762C();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED2ABF70);
  v14 = sub_1A93F7620();
  v10 = sub_1A93F894C();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v12 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v14, v10, v12, a3, "", v11, 2u);
    MEMORY[0x1AF41411C](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {

  }
}

uint64_t sub_1A915F058(void **a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *a1;
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v2 = sub_1A93F7698();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A3F08);
  v3 = v1;
  v4 = v1;
  v5 = sub_1A93F7674();
  v6 = sub_1A93F879C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    v10 = sub_1A93F8094();
    sub_1A906436C(v10, v11, &v13);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A904E000, v5, v6, "Encountered error while stashing background download: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v8, -1, -1);
    MEMORY[0x1AF41411C](v7, -1, -1);
  }
  else
  {

  }
  return sub_1A93F7A58();
}

uint64_t sub_1A915F238()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  return swift_deallocObject();
}

uint64_t sub_1A915F2BC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  unint64_t v10;
  unint64_t v12;
  uint64_t v13;

  v1 = *((_QWORD *)v0 + 2);
  v2 = type metadata accessor for AssetBackgroundSession(0, v1, *((_QWORD *)v0 + 3), *((_QWORD *)v0 + 4));
  v3 = *(_QWORD *)(v2 - 8);
  v12 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v4 = *(_QWORD *)(v3 + 64);
  v13 = sub_1A93F6D80();
  v5 = *(_QWORD *)(v13 - 8);
  v6 = (v12 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = (v6 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(&v0[v12], v1);

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(&v0[v6], v13);
  (*(void (**)(char *, uint64_t))(v9 + 8))(&v0[v10], AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1A915F418@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = v2[2];
  v6 = v2[3];
  v7 = v2[4];
  v8 = *(_QWORD *)(type metadata accessor for AssetBackgroundSession(0, v5, v6, v7) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_QWORD *)(sub_1A93F6D80() - 8);
  v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v14 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return sub_1A915DF10(a1, (uint64_t)v2 + v9, (uint64_t)v2 + v12, (uint64_t)v2 + ((v12 + v13 + v14) & ~v14), v5, v6, v7, a2);
}

uint64_t *sub_1A915F4FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  void **v11;
  void *v12;
  _QWORD *v13;
  _QWORD *v14;
  id v15;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (void **)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v12 = *v11;
    *v10 = *v11;
    v13 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
    v14 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
    *v13 = *v14;
    *(_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
    v15 = v12;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1A915F5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void **v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD *v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(void **)v8;
  v8 += 15;
  v10 = *v7;
  *v7 = v9;
  v11 = v9;

  v12 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  *(_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((v8 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A915F694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A915F710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void **v8;
  void *v9;
  _QWORD *v10;
  _QWORD *v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v7;
  *v7 = *v8;

  v10 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  *v10 = *v11;
  swift_release();
  *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1A915F7A4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A915F830 + 4 * byte_1A9408CE0[v10]))();
  }
}

void sub_1A915F8B4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1A915F9B8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1A915FA2CLL);
}

void sub_1A915F9C0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1A915F9C8);
  JUMPOUT(0x1A915FA2CLL);
}

void sub_1A915FA08()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A915FA2CLL);
}

void sub_1A915FA10()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A915FA2CLL);
}

uint64_t sub_1A915FA18(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1A915FA2CLL);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1A915FA28);
    JUMPOUT(0x1A915FA24);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_1A915FA44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A93F75FC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1A915FAA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F75FC() - 8) + 80);
  sub_1A915E454(a1, v1 + ((v3 + 40) & ~v3));
}

uint64_t sub_1A915FB04()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  unint64_t v18;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v16 = *(_QWORD *)(v0 + 16);
  v18 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v2 = v18 + *(_QWORD *)(v1 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = (v2 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v13 = v4;
  v5 = *(_QWORD *)(v3 + 64);
  v15 = sub_1A93F726C();
  v6 = *(_QWORD *)(v15 - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_1A93F75FC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v7 + v8 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = v9;
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v18, v16);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v13, AssociatedTypeWitness);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v15);
  (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v0 + v11, v14);
  return swift_deallocObject();
}

uint64_t sub_1A915FC50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v6 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v8 + *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = (v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = *(_QWORD *)(sub_1A93F726C() - 8);
  v14 = (v11 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 64);
  v16 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F75FC() - 8) + 80);
  result = sub_1A915E5C0(a1, (void (*)(char *, uint64_t, uint64_t))(v2 + v8), v2 + v11, v2 + v14, v2 + ((v14 + v15 + v16) & ~v16), v6, v5);
  *a2 = result;
  return result;
}

uint64_t sub_1A915FD48()
{
  return sub_1A915EBA4();
}

uint64_t sub_1A915FD50()
{
  return objectdestroy_14Tm_0((uint64_t (*)(_QWORD))MEMORY[0x1E0DF2118]);
}

void sub_1A915FD5C(uint64_t a1)
{
  sub_1A915FDE4(a1, "Stashed Asset");
}

uint64_t sub_1A915FD68()
{
  return objectdestroy_14Tm_0((uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

id sub_1A915FD74()
{
  sub_1A93F726C();
  return sub_1A915EDF0();
}

uint64_t sub_1A915FDCC()
{
  return objectdestroy_14Tm_0((uint64_t (*)(_QWORD))MEMORY[0x1E0DF2118]);
}

void sub_1A915FDD8(uint64_t a1)
{
  sub_1A915FDE4(a1, "Removed asset URL");
}

void sub_1A915FDE4(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F75FC() - 8) + 80);
  sub_1A915EEE0(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1A915FE34()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;

  v1 = *((_QWORD *)v0 + 2);
  v2 = type metadata accessor for AssetBackgroundSession(0, v1, *((_QWORD *)v0 + 3), *((_QWORD *)v0 + 4));
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = &v0[v4];
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v10, v1);

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(&v0[v8], AssociatedTypeWitness);

  return swift_deallocObject();
}

void sub_1A915FF50(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = *(_QWORD *)(type metadata accessor for AssetBackgroundSession(0, v3, v4, v5) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  sub_1A915E298(a1, (uint64_t)v1 + v7, (uint64_t)v1 + v10, *(void **)((char *)v1 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)), v3, v4, v5);
}

uint64_t sub_1A9160014()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9160038@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A9375664(a1, *(uint64_t (**)(_QWORD))(v2 + 16), a2);
}

uint64_t sub_1A9160040()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A9160064()
{
  AssetBackgroundDelegate.activeNotifier(for:)();
}

uint64_t sub_1A9160084()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9160120()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (v1 && (v2 = *(_QWORD *)(v1 + 224)) != 0)
  {
    v3 = v2 & 0xF8;
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      v4 = sub_1A93F8E5C();
      if (v4)
        goto LABEL_5;
    }
    else
    {
      v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_5:
        if ((v2 & 0xC000000000000001) != 0)
        {
          v5 = MEMORY[0x1AF4129DC](0, v2);
LABEL_8:
          swift_bridgeObjectRelease();
          v6 = *(_QWORD *)(v5 + 16);
          v7 = *(void **)(v5 + 24);
          swift_bridgeObjectRetain();
          v8._countAndFlagsBits = v6;
          v8._object = v7;
          PriceType.init(rawValue:)(v8);
          swift_release();
          __asm { BR              X10 }
        }
        if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          v5 = *(_QWORD *)(v2 + 32);
          swift_retain();
          goto LABEL_8;
        }
        __break(1u);
        goto LABEL_31;
      }
    }
    swift_bridgeObjectRelease();
    v3 = v4;
  }
  else
  {
    v3 = 0;
  }
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships);
  if (!v9 || (v10 = *(_QWORD *)(v9 + 16)) == 0)
  {
LABEL_26:
    v16 = 0;
    result = 0;
    if ((v3 & 1) == 0)
      return result;
    return v16 ^ 1u;
  }
  v2 = *(_QWORD *)(v10 + 16);
  if (!(v2 >> 62))
  {
    v11 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_15;
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  if (!sub_1A93F8E5C())
  {
LABEL_25:
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
LABEL_15:
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_31:
    v12 = (char *)MEMORY[0x1AF4129DC](0, v2);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    JUMPOUT(0x1A9160370);
  }
  v12 = (char *)*(id *)(v2 + 32);
LABEL_18:
  v13 = v12;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes];
  swift_retain();

  v15 = *(unsigned __int8 *)(v14 + 74);
  swift_release();
  if (v15 == 2)
    goto LABEL_26;
  if ((v3 & 1) == 0)
    return 0;
  v16 = v15 & 1;
  return v16 ^ 1u;
}

id sub_1A9160384()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ResizedArtworkURLProvider()), sel_init);
  qword_1EEAB87E8 = (uint64_t)result;
  return result;
}

id ResizedArtworkURLProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static ResizedArtworkURLProvider.shared.getter()
{
  if (qword_1EEAB6CD8 != -1)
    swift_once();
  swift_beginAccess();
  return (id)qword_1EEAB87E8;
}

void static ResizedArtworkURLProvider.shared.setter(uint64_t a1)
{
  void *v2;

  if (qword_1EEAB6CD8 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_1EEAB87E8;
  qword_1EEAB87E8 = a1;

}

uint64_t (*static ResizedArtworkURLProvider.shared.modify())()
{
  if (qword_1EEAB6CD8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

id ResizedArtworkURLProvider.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ResizedArtworkURLProvider();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ResizedArtworkURLProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ResizedArtworkURLProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1A9160720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1A93F7128();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1A91607F8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v23;
  uint64_t v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  char *v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  id v34;
  char *v35;
  unint64_t v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F726C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v33 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v33 - v17;
  sub_1A93F7248();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1A914149C((uint64_t)v8);
    swift_bridgeObjectRetain();
  }
  else
  {
    v35 = v12;
    v36 = a3;
    v37 = v15;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v8, v9);
    sub_1A93F7194();
    swift_bridgeObjectRetain();
    v19 = sub_1A93F80DC();
    v20 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
    v21 = sub_1A9160720(0x2B645C782B645CLL, 0xE700000000000000, 0);
    v33 = v19;
    if (v21)
    {
      v34 = v21;
      v40 = a1;
      v41 = a2;
      v38 = 0xD000000000000018;
      v39 = 0x80000001A9444CB0;
      sub_1A90828B0();
      if ((sub_1A93F8B2C() & 1) != 0)
      {
        v23 = (void *)sub_1A93F8010();
        v24 = (uint64_t)objc_msgSend(v34, sel_numberOfMatchesInString_options_range_, v23, 0, 0, v33);

        if (v24 >= 1)
        {
          v25 = (void *)sub_1A93F8010();
          swift_bridgeObjectRelease();
          v26 = v36;
          v38 = v36;
          v40 = sub_1A93F9060();
          v41 = v27;
          sub_1A93F810C();
          v38 = v26;
          sub_1A93F9060();
          sub_1A93F810C();
          swift_bridgeObjectRelease();
          v28 = (void *)sub_1A93F8010();
          swift_bridgeObjectRelease();
          v29 = objc_msgSend(v34, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v25, 0, 0, v33, v28);

          sub_1A93F8040();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          v30 = v35;
          sub_1A93F71D0();
          v31 = v37;
          sub_1A93F71B8();
          swift_bridgeObjectRelease();
          v32 = *(void (**)(char *, uint64_t))(v10 + 8);
          v32(v30, v9);
          a1 = sub_1A93F7170();

          swift_bridgeObjectRelease();
          v32(v31, v9);
          v32(v18, v9);
          return a1;
        }
      }
      swift_bridgeObjectRelease();
      a1 = sub_1A93F7170();
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
      a1 = sub_1A93F7170();
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v9);
  }
  return a1;
}

uint64_t type metadata accessor for ResizedArtworkURLProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ResizedArtworkURLProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResizedArtworkURLProvider.resizedArtworkURLString(_:dimension:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t BinaryInteger.clamped(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F7FF8();
  sub_1A93F9240();
  sub_1A93F9234();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, a2);
}

uint64_t BinaryInteger.clamped(to:)()
{
  return sub_1A93F9234();
}

{
  return sub_1A93F9240();
}

uint64_t ChapterInfo.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double ChapterInfo.time.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double ChapterInfo.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

PodcastsFoundation::ChapterInfo __swiftcall ChapterInfo.init(title:time:duration:)(Swift::String title, Swift::Double time, Swift::Double duration)
{
  uint64_t v3;
  PodcastsFoundation::ChapterInfo result;

  *(Swift::String *)v3 = title;
  *(Swift::Double *)(v3 + 16) = time;
  *(Swift::Double *)(v3 + 24) = duration;
  result.title = title;
  result.duration = duration;
  result.time = time;
  return result;
}

uint64_t initializeWithCopy for ChapterInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ChapterInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for ChapterInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChapterInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChapterInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChapterInfo()
{
  return &type metadata for ChapterInfo;
}

uint64_t IntermediateEyebrowBuilderEpisode.init(serverEpisode:showViewModelTypeIsSerial:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = a2;
  return result;
}

uint64_t IntermediateEyebrowBuilderEpisode.timeRemainingOpt.getter()
{
  return 0;
}

uint64_t IntermediateEyebrowBuilderEpisode.channelName.getter()
{
  return sub_1A9160F34((SEL *)&selRef_name);
}

uint64_t IntermediateEyebrowBuilderEpisode.subscriptionName.getter()
{
  return sub_1A9160F34((SEL *)&selRef_subscriptionName);
}

uint64_t sub_1A9160F34(SEL *a1)
{
  _QWORD *v1;
  _QWORD *v3;
  _QWORD *v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = (_QWORD *)(*v1 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
  swift_beginAccess();
  if (!*v3)
    return 0;
  v4 = (_QWORD *)(*v3 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast);
  swift_beginAccess();
  if (!*v4)
    return 0;
  v5 = (unint64_t *)(*v4 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
  swift_beginAccess();
  v6 = *v5;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    if (!sub_1A93F8E5C())
      goto LABEL_22;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v7)
      goto LABEL_22;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
    v16 = MEMORY[0x1AF4129DC](0, v6);
    swift_bridgeObjectRelease();
    v9 = *(_QWORD *)(v16 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships);
    swift_retain();
    swift_unknownObjectRelease();
    if (v9)
      goto LABEL_8;
    return 0;
  }
  if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_21;
  }
  v8 = (char *)*(id *)(v6 + 32);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships];
  swift_retain();

  if (!v9)
    return 0;
LABEL_8:
  v10 = *(_QWORD *)(v9 + 16);
  swift_retain();
  swift_release();
  if (!v10)
    return 0;
  v6 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  result = swift_release();
  if (!(v6 >> 62))
  {
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_11;
LABEL_22:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_21:
  swift_bridgeObjectRetain();
  v17 = sub_1A93F8E5C();
  result = swift_bridgeObjectRelease();
  if (!v17)
    goto LABEL_22;
LABEL_11:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x1AF4129DC](0, v6);
LABEL_14:
    v13 = v12;
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v13, *a1);

    if (v14)
    {
      v15 = sub_1A93F8040();

      return v15;
    }
    return 0;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v6 + 32);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t IntermediateEyebrowBuilderEpisode.entitlementState.getter()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;

  v1 = objc_msgSend(*v0, sel_priceType);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1A93F8040();
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0xE000000000000000;
  }
  result = sub_1A93383B4(v3, v5);
  if ((v7 & 1) != 0)
    return 0;
  return result;
}

uint64_t IntermediateEyebrowBuilderEpisode.hasFreeVersion.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_priceTypeIsPSUB) ^ 1;
}

void IntermediateEyebrowBuilderEpisode.listenNowReason.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 5;
  *(_WORD *)(a1 + 8) = 1;
}

uint64_t IntermediateEyebrowBuilderEpisode.episodeTypeResolvedValue.getter()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  Swift::String v4;
  char v6;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  v2 = *(void **)(v1 + 168);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(v1 + 160);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v3;
  v4._object = v2;
  PodcastEpisodeAttributes.EpisodeType.init(rawValue:)(v4);
  return 0x1000201u >> (8 * v6);
}

BOOL IntermediateEyebrowBuilderEpisode.mediaType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v13;

  v0 = sub_1A93F759C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = PodcastEpisodeAttributes.uti.getter();
  v6 = v5;
  sub_1A93F7590();
  v7 = sub_1A93F753C();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v4 != v7 || v6 != v9)
  {
    v11 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v11 & 1) != 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t IntermediateEyebrowBuilderEpisode.isExplicit.getter()
{
  _QWORD *v0;
  uint64_t v1;

  if (!*(_QWORD *)(*(_QWORD *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 224)
    || (swift_bridgeObjectRetain(), v1 = sub_1A93F8ED4(), swift_bridgeObjectRelease(), v1 != 1))
  {
    LOBYTE(v1) = sub_1A93F90C0();
  }
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t IntermediateEyebrowBuilderEpisode.showTypeIsSerial.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

double IntermediateEyebrowBuilderEpisode.durationOpt.getter()
{
  _QWORD *v0;

  return *(double *)(*(_QWORD *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 304) / 1000.0;
}

uint64_t IntermediateEyebrowBuilderEpisode.seasonNumberOpt.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  if ((*(_BYTE *)(v1 + 360) & 1) != 0)
    return 0;
  result = *(_QWORD *)(v1 + 352);
  if (result <= 0)
    return 0;
  return result;
}

uint64_t IntermediateEyebrowBuilderEpisode.episodeNumberOpt.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  if ((*(_BYTE *)(v1 + 344) & 1) != 0)
    return 0;
  result = *(_QWORD *)(v1 + 336);
  if (result <= 0)
    return 0;
  return result;
}

uint64_t IntermediateEyebrowBuilderEpisode.releaseDate.getter@<X0>(uint64_t a1@<X8>)
{
  return PodcastEpisodeAttributes.releaseDateResolved.getter(a1);
}

uint64_t sub_1A9161594()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;

  v1 = objc_msgSend(*v0, sel_priceType);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1A93F8040();
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0xE000000000000000;
  }
  result = sub_1A93383B4(v3, v5);
  if ((v7 & 1) != 0)
    return 0;
  return result;
}

uint64_t sub_1A9161604()
{
  id *v0;

  return objc_msgSend(*v0, sel_priceTypeIsPSUB) ^ 1;
}

void sub_1A9161628(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 5;
  *(_WORD *)(a1 + 8) = 1;
}

uint64_t sub_1A9161648()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

double sub_1A9161650()
{
  _QWORD *v0;

  return *(double *)(*(_QWORD *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 304) / 1000.0;
}

uint64_t sub_1A9161694()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  if ((*(_BYTE *)(v1 + 360) & 1) != 0)
    return 0;
  result = *(_QWORD *)(v1 + 352);
  if (result < 1)
    return 0;
  return result;
}

uint64_t sub_1A91616D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  if ((*(_BYTE *)(v1 + 344) & 1) != 0)
    return 0;
  result = *(_QWORD *)(v1 + 336);
  if (result < 1)
    return 0;
  return result;
}

uint64_t sub_1A916170C@<X0>(uint64_t a1@<X8>)
{
  return PodcastEpisodeAttributes.releaseDateResolved.getter(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for IntermediateEyebrowBuilderEpisode(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = v3;
  return a1;
}

void destroy for IntermediateEyebrowBuilderEpisode(id *a1)
{

}

uint64_t assignWithCopy for IntermediateEyebrowBuilderEpisode(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for IntermediateEyebrowBuilderEpisode(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for IntermediateEyebrowBuilderEpisode(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntermediateEyebrowBuilderEpisode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntermediateEyebrowBuilderEpisode()
{
  return &type metadata for IntermediateEyebrowBuilderEpisode;
}

id ArtworkTextColors.primary.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)v0;
  sub_1A91618E0(*(id *)v0, *(_BYTE *)(v0 + 8));
  return v1;
}

id sub_1A91618E0(id result, char a2)
{
  if (a2 != -1)
    return sub_1A913A9D8(result, a2);
  return result;
}

void *ArtworkTextColors.secondary.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  sub_1A91618E0(v1, *(_BYTE *)(v0 + 24));
  return v1;
}

void *ArtworkTextColors.tertiary.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  sub_1A91618E0(v1, *(_BYTE *)(v0 + 40));
  return v1;
}

void *ArtworkTextColors.quaternary.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  sub_1A91618E0(v1, *(_BYTE *)(v0 + 56));
  return v1;
}

uint64_t ArtworkTextColors.init(primary:secondary:tertiary:quaternary:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = result;
  *(_BYTE *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8;
  return result;
}

uint64_t ArtworkTextColors.init(serverArtwork:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  unsigned __int8 v11;
  unint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  unsigned __int8 v16;
  unint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t result;
  unsigned __int8 v24;
  uint64_t v25;

  v4 = a1[11];
  if (v4)
  {
    v5 = a1[10];
    swift_bridgeObjectRetain();
    v6 = sub_1A9393114(v5, v4);
    v24 = v9;
    v25 = v6;
    v7 = a1[13];
    if (!v7)
    {
LABEL_6:
      v10 = 0;
      v11 = -1;
      v12 = a1[15];
      if (v12)
        goto LABEL_7;
      goto LABEL_9;
    }
  }
  else
  {
    v24 = -1;
    v25 = 0;
    v7 = a1[13];
    if (!v7)
      goto LABEL_6;
  }
  v8 = a1[12];
  swift_bridgeObjectRetain();
  v10 = sub_1A9393114(v8, v7);
  v11 = v14;
  v12 = a1[15];
  if (v12)
  {
LABEL_7:
    v13 = a1[14];
    swift_bridgeObjectRetain();
    v15 = sub_1A9393114(v13, v12);
    v16 = v18;
    v17 = a1[17];
    if (v17)
      goto LABEL_12;
LABEL_13:
    result = swift_release();
    v20 = 0;
    v22 = -1;
    goto LABEL_14;
  }
LABEL_9:
  v15 = 0;
  v16 = -1;
  v17 = a1[17];
  if (!v17)
    goto LABEL_13;
LABEL_12:
  v19 = a1[16];
  swift_bridgeObjectRetain_n();
  v20 = sub_1A9393114(v19, v17);
  v22 = v21;
  swift_bridgeObjectRelease();
  result = swift_release();
LABEL_14:
  *(_QWORD *)a2 = v25;
  *(_QWORD *)(a2 + 8) = v24;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v16;
  *(_QWORD *)(a2 + 48) = v20;
  *(_BYTE *)(a2 + 56) = v22;
  return result;
}

uint64_t sub_1A9161B70()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9161BA0 + 4 * byte_1A9408EB0[*v0]))(0x7972616D697270, 0xE700000000000000);
}

uint64_t sub_1A9161BA0()
{
  return 0x7261646E6F636573;
}

uint64_t sub_1A9161BBC()
{
  return 0x7972616974726574;
}

uint64_t sub_1A9161BD4()
{
  return 0x616E726574617571;
}

uint64_t sub_1A9161BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9162000(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9161C14()
{
  sub_1A9161F30();
  return sub_1A93F945C();
}

uint64_t sub_1A9161C3C()
{
  sub_1A9161F30();
  return sub_1A93F9468();
}

uint64_t ArtworkTextColors.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  _BYTE v12[16];
  _BYTE v13[16];
  _BYTE v14[16];
  _BYTE v15[16];
  _BYTE v16[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8818);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9161F30();
  sub_1A93F93D8();
  sub_1A9161F74(v3, (uint64_t)v16);
  sub_1A9161F74((uint64_t)v16, (uint64_t)v12);
  v11 = 0;
  sub_1A9161FBC();
  sub_1A93F8FE8();
  if (!v2)
  {
    sub_1A9161F74(v3 + 16, (uint64_t)v15);
    sub_1A9161F74((uint64_t)v15, (uint64_t)v12);
    v11 = 1;
    sub_1A93F8FE8();
    sub_1A9161F74(v3 + 32, (uint64_t)v14);
    sub_1A9161F74((uint64_t)v14, (uint64_t)v12);
    v11 = 2;
    sub_1A93F8FE8();
    sub_1A9161F74(v3 + 48, (uint64_t)v13);
    sub_1A9161F74((uint64_t)v13, (uint64_t)v12);
    v11 = 3;
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double ArtworkTextColors.init(from:)@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  _OWORD v7[2];

  sub_1A91621D0(a1, v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

double sub_1A9161EA8@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  _OWORD v7[2];

  sub_1A91621D0(a1, v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1A9161EF0(_QWORD *a1)
{
  return ArtworkTextColors.encode(to:)(a1);
}

unint64_t sub_1A9161F30()
{
  unint64_t result;

  result = qword_1EEAB8820;
  if (!qword_1EEAB8820)
  {
    result = MEMORY[0x1AF414014](&unk_1A9409018, &type metadata for ArtworkTextColors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8820);
  }
  return result;
}

uint64_t sub_1A9161F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A9161FBC()
{
  unint64_t result;

  result = qword_1EEAB8830;
  if (!qword_1EEAB8830)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for Color, &type metadata for Color);
    atomic_store(result, (unint64_t *)&qword_1EEAB8830);
  }
  return result;
}

uint64_t sub_1A9162000(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7972616D697270 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261646E6F636573 && a2 == 0xE900000000000079 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7972616974726574 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x616E726574617571 && a2 == 0xEA00000000007972)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_1A91621D0(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  int v10;
  id v11;
  int v12;
  id v13;
  id v14;
  id v15;
  char v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  int v23;
  int v24;
  id v25;
  int v26;
  id v27;
  id v28;
  id v29;
  _QWORD *v30;
  id v31;
  unsigned __int8 v32;
  int v33;
  char v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8850);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9161F30();
  sub_1A93F93C0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v34 = 0;
    sub_1A9162DAC();
    sub_1A93F8F34();
    v30 = a2;
    v9 = v31;
    v10 = v32;
    v34 = 1;
    sub_1A91618E0(v31, v32);
    sub_1A93F8F34();
    v33 = v10;
    v28 = v9;
    v34 = 2;
    v11 = v31;
    v12 = v32;
    sub_1A91618E0(v31, v32);
    v27 = 0;
    sub_1A93F8F34();
    v29 = v11;
    v26 = v12;
    v34 = 3;
    v25 = v31;
    v24 = v32;
    sub_1A91618E0(v31, v32);
    sub_1A93F8F34();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v31;
    v27 = v31;
    v23 = v32;
    v14 = v28;
    LOBYTE(v12) = v33;
    sub_1A91618E0(v28, v33);
    v15 = v29;
    v16 = v26;
    sub_1A91618E0(v29, v26);
    v17 = v25;
    v18 = v24;
    sub_1A91618E0(v25, v24);
    v19 = v13;
    LOBYTE(v13) = v23;
    sub_1A91618E0(v19, v23);
    sub_1A9162DF0(v17, v18);
    sub_1A9162DF0(v15, v16);
    sub_1A9162DF0(v14, v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    sub_1A9162DF0(v14, v12);
    sub_1A9162DF0(v15, v16);
    sub_1A9162DF0(v17, v18);
    v20 = v27;
    sub_1A9162DF0(v27, (char)v13);
    v21 = v30;
    *v30 = v14;
    *((_BYTE *)v21 + 8) = v12;
    v21[2] = v15;
    *((_BYTE *)v21 + 24) = v16;
    v21[4] = v17;
    *((_BYTE *)v21 + 40) = v18;
    v21[6] = v20;
    *((_BYTE *)v21 + 56) = (_BYTE)v13;
  }
}

void destroy for ArtworkTextColors(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  int v5;

  v2 = *(unsigned __int8 *)(a1 + 8);
  if (v2 != 255)
    sub_1A913A0D8(*(id *)a1, v2);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 != 255)
    sub_1A913A0D8(*(id *)(a1 + 16), v3);
  v4 = *(unsigned __int8 *)(a1 + 40);
  if (v4 != 255)
    sub_1A913A0D8(*(id *)(a1 + 32), v4);
  v5 = *(unsigned __int8 *)(a1 + 56);
  if (v5 != 255)
    sub_1A913A0D8(*(id *)(a1 + 48), v5);
}

uint64_t initializeWithCopy for ArtworkTextColors(uint64_t a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  id *v6;
  int v7;
  id v8;
  id *v9;
  int v10;
  id v11;
  uint64_t *v12;
  int v13;
  uint64_t v14;

  v4 = *((unsigned __int8 *)a2 + 8);
  if (v4 == 255)
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  }
  else
  {
    v5 = *a2;
    sub_1A913A9D8((id)*a2, *((_BYTE *)a2 + 8));
    *(_QWORD *)a1 = v5;
    *(_BYTE *)(a1 + 8) = v4;
  }
  v6 = (id *)(a2 + 2);
  v7 = *((unsigned __int8 *)a2 + 24);
  if (v7 == 255)
  {
    *(_QWORD *)(a1 + 16) = *v6;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  }
  else
  {
    v8 = *v6;
    sub_1A913A9D8(*v6, *((_BYTE *)a2 + 24));
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = v7;
  }
  v9 = (id *)(a2 + 4);
  v10 = *((unsigned __int8 *)a2 + 40);
  if (v10 == 255)
  {
    *(_QWORD *)(a1 + 32) = *v9;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  }
  else
  {
    v11 = *v9;
    sub_1A913A9D8(*v9, *((_BYTE *)a2 + 40));
    *(_QWORD *)(a1 + 32) = v11;
    *(_BYTE *)(a1 + 40) = v10;
  }
  v12 = a2 + 6;
  v13 = *((unsigned __int8 *)a2 + 56);
  if (v13 == 255)
  {
    *(_QWORD *)(a1 + 48) = *v12;
    *(_BYTE *)(a1 + 56) = *((_BYTE *)v12 + 8);
  }
  else
  {
    v14 = *v12;
    sub_1A913A9D8((id)*v12, v13);
    *(_QWORD *)(a1 + 48) = v14;
    *(_BYTE *)(a1 + 56) = v13;
  }
  return a1;
}

uint64_t assignWithCopy for ArtworkTextColors(uint64_t a1, uint64_t a2)
{
  int v4;
  id v5;
  void *v6;
  char v7;
  id v8;
  char v9;
  id v10;
  id *v11;
  id *v12;
  int v13;
  id v14;
  void *v15;
  char v16;
  id v17;
  char v18;
  id v19;
  id *v20;
  id *v21;
  int v22;
  id v23;
  void *v24;
  char v25;
  id v26;
  char v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  int v31;
  id v32;
  void *v33;
  char v34;
  id v35;
  char v36;
  id v37;

  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned __int8 *)(a1 + 8) == 255)
  {
    if (v4 == 255)
    {
      v10 = *(id *)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      *(_QWORD *)a1 = v10;
    }
    else
    {
      v8 = *(id *)a2;
      sub_1A913A9D8(*(id *)a2, *(_BYTE *)(a2 + 8));
      *(_QWORD *)a1 = v8;
      *(_BYTE *)(a1 + 8) = v4;
    }
  }
  else if (v4 == 255)
  {
    sub_1A913B334(a1);
    v9 = *(_BYTE *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = v9;
  }
  else
  {
    v5 = *(id *)a2;
    sub_1A913A9D8(*(id *)a2, *(_BYTE *)(a2 + 8));
    v6 = *(void **)a1;
    *(_QWORD *)a1 = v5;
    v7 = *(_BYTE *)(a1 + 8);
    *(_BYTE *)(a1 + 8) = v4;
    sub_1A913A0D8(v6, v7);
  }
  v11 = (id *)(a1 + 16);
  v12 = (id *)(a2 + 16);
  v13 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v13 == 255)
    {
      v19 = *v12;
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *v11 = v19;
    }
    else
    {
      v17 = *v12;
      sub_1A913A9D8(*v12, *(_BYTE *)(a2 + 24));
      *(_QWORD *)(a1 + 16) = v17;
      *(_BYTE *)(a1 + 24) = v13;
    }
  }
  else if (v13 == 255)
  {
    sub_1A913B334(a1 + 16);
    v18 = *(_BYTE *)(a2 + 24);
    *v11 = *v12;
    *(_BYTE *)(a1 + 24) = v18;
  }
  else
  {
    v14 = *v12;
    sub_1A913A9D8(*v12, *(_BYTE *)(a2 + 24));
    v15 = *(void **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v14;
    v16 = *(_BYTE *)(a1 + 24);
    *(_BYTE *)(a1 + 24) = v13;
    sub_1A913A0D8(v15, v16);
  }
  v20 = (id *)(a1 + 32);
  v21 = (id *)(a2 + 32);
  v22 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v22 == 255)
    {
      v28 = *v21;
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *v20 = v28;
    }
    else
    {
      v26 = *v21;
      sub_1A913A9D8(*v21, *(_BYTE *)(a2 + 40));
      *(_QWORD *)(a1 + 32) = v26;
      *(_BYTE *)(a1 + 40) = v22;
    }
  }
  else if (v22 == 255)
  {
    sub_1A913B334(a1 + 32);
    v27 = *(_BYTE *)(a2 + 40);
    *v20 = *v21;
    *(_BYTE *)(a1 + 40) = v27;
  }
  else
  {
    v23 = *v21;
    sub_1A913A9D8(*v21, *(_BYTE *)(a2 + 40));
    v24 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v23;
    v25 = *(_BYTE *)(a1 + 40);
    *(_BYTE *)(a1 + 40) = v22;
    sub_1A913A0D8(v24, v25);
  }
  v29 = (_QWORD *)(a1 + 48);
  v30 = a2 + 48;
  v31 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v31 == 255)
    {
      v37 = *(id *)v30;
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(v30 + 8);
      *v29 = v37;
    }
    else
    {
      v35 = *(id *)v30;
      sub_1A913A9D8(*(id *)v30, v31);
      *(_QWORD *)(a1 + 48) = v35;
      *(_BYTE *)(a1 + 56) = v31;
    }
  }
  else if (v31 == 255)
  {
    sub_1A913B334(a1 + 48);
    v36 = *(_BYTE *)(v30 + 8);
    *v29 = *(_QWORD *)v30;
    *(_BYTE *)(a1 + 56) = v36;
  }
  else
  {
    v32 = *(id *)v30;
    sub_1A913A9D8(*(id *)v30, v31);
    v33 = *(void **)(a1 + 48);
    *(_QWORD *)(a1 + 48) = v32;
    v34 = *(_BYTE *)(a1 + 56);
    *(_BYTE *)(a1 + 56) = v31;
    sub_1A913A0D8(v33, v34);
  }
  return a1;
}

uint64_t assignWithTake for ArtworkTextColors(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  void *v6;
  _QWORD *v7;
  int v8;
  int v9;
  void *v10;
  _QWORD *v11;
  int v12;
  int v13;
  void *v14;
  _QWORD *v15;
  int v16;
  int v17;
  void *v18;

  v4 = *(unsigned __int8 *)(a1 + 8);
  if (v4 != 255)
  {
    v5 = *(unsigned __int8 *)(a2 + 8);
    if (v5 != 255)
    {
      v6 = *(void **)a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = v5;
      sub_1A913A0D8(v6, v4);
      goto LABEL_6;
    }
    sub_1A913B334(a1);
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
LABEL_6:
  v7 = (_QWORD *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a1 + 24);
  if (v8 != 255)
  {
    v9 = *(unsigned __int8 *)(a2 + 24);
    if (v9 != 255)
    {
      v10 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = *v7;
      *(_BYTE *)(a1 + 24) = v9;
      sub_1A913A0D8(v10, v8);
      goto LABEL_11;
    }
    sub_1A913B334(a1 + 16);
  }
  *(_QWORD *)(a1 + 16) = *v7;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
LABEL_11:
  v11 = (_QWORD *)(a2 + 32);
  v12 = *(unsigned __int8 *)(a1 + 40);
  if (v12 != 255)
  {
    v13 = *(unsigned __int8 *)(a2 + 40);
    if (v13 != 255)
    {
      v14 = *(void **)(a1 + 32);
      *(_QWORD *)(a1 + 32) = *v11;
      *(_BYTE *)(a1 + 40) = v13;
      sub_1A913A0D8(v14, v12);
      goto LABEL_16;
    }
    sub_1A913B334(a1 + 32);
  }
  *(_QWORD *)(a1 + 32) = *v11;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
LABEL_16:
  v15 = (_QWORD *)(a2 + 48);
  v16 = *(unsigned __int8 *)(a1 + 56);
  if (v16 == 255)
  {
LABEL_20:
    *(_QWORD *)(a1 + 48) = *v15;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    return a1;
  }
  v17 = *(unsigned __int8 *)(a2 + 56);
  if (v17 == 255)
  {
    sub_1A913B334(a1 + 48);
    goto LABEL_20;
  }
  v18 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *v15;
  *(_BYTE *)(a1 + 56) = v17;
  sub_1A913A0D8(v18, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkTextColors(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = (v3 ^ 0xFF) - 1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkTextColors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = ~(_BYTE)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkTextColors()
{
  return &type metadata for ArtworkTextColors;
}

uint64_t storeEnumTagSinglePayload for ArtworkTextColors.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A9162C54 + 4 * byte_1A9408EB9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A9162C88 + 4 * byte_1A9408EB4[v4]))();
}

uint64_t sub_1A9162C88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9162C90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9162C98);
  return result;
}

uint64_t sub_1A9162CA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9162CACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A9162CB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9162CB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkTextColors.CodingKeys()
{
  return &type metadata for ArtworkTextColors.CodingKeys;
}

unint64_t sub_1A9162CD8()
{
  unint64_t result;

  result = qword_1EEAB8838;
  if (!qword_1EEAB8838)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408FF0, &type metadata for ArtworkTextColors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8838);
  }
  return result;
}

unint64_t sub_1A9162D20()
{
  unint64_t result;

  result = qword_1EEAB8840;
  if (!qword_1EEAB8840)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408F60, &type metadata for ArtworkTextColors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8840);
  }
  return result;
}

unint64_t sub_1A9162D68()
{
  unint64_t result;

  result = qword_1EEAB8848;
  if (!qword_1EEAB8848)
  {
    result = MEMORY[0x1AF414014](&unk_1A9408F88, &type metadata for ArtworkTextColors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8848);
  }
  return result;
}

unint64_t sub_1A9162DAC()
{
  unint64_t result;

  result = qword_1EEAB8858;
  if (!qword_1EEAB8858)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for Color, &type metadata for Color);
    atomic_store(result, (unint64_t *)&qword_1EEAB8858);
  }
  return result;
}

void sub_1A9162DF0(id a1, char a2)
{
  if (a2 != -1)
    sub_1A913A0D8(a1, a2);
}

_QWORD *_s16MediaAPIProviderVwCP(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void _s16MediaAPIProviderVwxx(id *a1)
{

}

uint64_t _s16MediaAPIProviderVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t _s16MediaAPIProviderVwta(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *_s16MediaAPIProviderVMa()
{
  return &_s16MediaAPIProviderVN;
}

uint64_t sub_1A9162EFC(__int128 *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, void *, uint64_t, uint64_t, void *);
  char *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  __int128 v40;
  __int128 v41;
  void *v42;
  uint64_t (**v43)(uint64_t, void *, uint64_t, uint64_t, void *);
  uint64_t v44;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _OWORD v61[2];
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  _OWORD v71[3];

  v49 = a3;
  v50 = a2;
  v9 = type metadata accessor for MediaRequest.Params();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v46 - v13;
  v15 = a1[9];
  v70 = a1[8];
  v71[0] = v15;
  *(_OWORD *)((char *)v71 + 10) = *(__int128 *)((char *)a1 + 154);
  v16 = a1[5];
  v66 = a1[4];
  v67 = v16;
  v17 = a1[7];
  v68 = a1[6];
  v69 = v17;
  v18 = a1[1];
  v62 = *a1;
  v63 = v18;
  v19 = a1[3];
  v64 = a1[2];
  v65 = v19;
  v47 = a4;
  objc_msgSend(a4, sel_setURLProtocolDelegate_, a5);
  v20 = a1[9];
  v60 = a1[8];
  v61[0] = v20;
  *(_OWORD *)((char *)v61 + 10) = *(__int128 *)((char *)a1 + 154);
  v21 = a1[5];
  v56 = a1[4];
  v57 = v21;
  v22 = a1[7];
  v58 = a1[6];
  v59 = v22;
  v23 = a1[1];
  v52 = *a1;
  v53 = v23;
  v24 = a1[3];
  v54 = a1[2];
  v55 = v24;
  v48 = v14;
  sub_1A938CA30();
  v51 = (void *)*((_QWORD *)&v64 + 1);
  v25 = swift_allocObject();
  v26 = v71[0];
  *(_OWORD *)(v25 + 144) = v70;
  *(_OWORD *)(v25 + 160) = v26;
  *(_OWORD *)(v25 + 170) = *(_OWORD *)((char *)v71 + 10);
  v27 = v67;
  *(_OWORD *)(v25 + 80) = v66;
  *(_OWORD *)(v25 + 96) = v27;
  v28 = v69;
  *(_OWORD *)(v25 + 112) = v68;
  *(_OWORD *)(v25 + 128) = v28;
  v29 = v63;
  *(_OWORD *)(v25 + 16) = v62;
  *(_OWORD *)(v25 + 32) = v29;
  v30 = v65;
  *(_OWORD *)(v25 + 48) = v64;
  *(_OWORD *)(v25 + 64) = v30;
  *(_QWORD *)(v25 + 192) = v50;
  *(_QWORD *)(v25 + 200) = a3;
  v31 = swift_allocObject();
  v50 = v31;
  swift_unknownObjectWeakInit();
  v32 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((_QWORD *)v32 + 2) = v31;
  *((_QWORD *)v32 + 3) = sub_1A91655F0;
  *((_QWORD *)v32 + 4) = v25;
  sub_1A93F9330();
  v33 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9064630((uint64_t)v14, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  v34 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v35 = (v11 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 79) & 0xFFFFFFFFFFFFFFF8;
  v38 = swift_allocObject();
  sub_1A9116174((uint64_t)v33, v38 + v34, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  *(_QWORD *)(v38 + v35) = MEMORY[0x1E0DEE9D8];
  v39 = v38 + v36;
  *(_QWORD *)(v39 + 64) = v56;
  v40 = v55;
  *(_OWORD *)(v39 + 32) = v54;
  *(_OWORD *)(v39 + 48) = v40;
  v41 = v53;
  *(_OWORD *)v39 = v52;
  *(_OWORD *)(v39 + 16) = v41;
  v42 = v47;
  *(_QWORD *)(v38 + v37) = v47;
  v43 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v38 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v43 = sub_1A91162C4;
  v43[1] = v32;
  sub_1A912D274((uint64_t)&v62);
  swift_retain();
  swift_retain();
  swift_retain();
  v42;
  swift_retain();
  v44 = (uint64_t)v48;
  sub_1A9195C30((uint64_t)v48, v51, (uint64_t)sub_1A9114C2C, v38);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1A9064714(v44, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
}

void sub_1A9163224(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, __int128 *a6, void (*a7)(_QWORD *), uint64_t a8)
{
  void (*v8)(_QWORD *);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  id v47;
  id v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  char v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  uint64_t v77;
  __int128 *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(_QWORD *);
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  _BYTE v92[176];
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  _BYTE v103[19];
  _QWORD v104[23];
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  _OWORD v114[4];

  v88 = a8;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (__int128 *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v91 = *((_QWORD *)v16 - 1);
  MEMORY[0x1E0C80A78](v16);
  v90 = (uint64_t *)((char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v89 = (uint64_t)&v86 - v19;
  if (!a5)
  {
    if (!a1)
      goto LABEL_59;
LABEL_10:
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v31 = sub_1A93F8E5C();
      if (v31)
        goto LABEL_12;
    }
    else
    {
      v31 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v31)
      {
LABEL_12:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v8 = a7;
          MEMORY[0x1AF4129DC](0, a1);
        }
        else
        {
          if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_64;
          }
          v8 = a7;
          swift_unknownObjectRetain();
        }
        swift_bridgeObjectRelease();
        type metadata accessor for ServerPodcast();
        v32 = swift_dynamicCastClass();
        if (v32)
        {
          v33 = (int *)v32;
          v34 = (_QWORD *)(v32 + OBJC_IVAR___MTServerPodcast_episodes);
          swift_beginAccess();
          if (*v34)
          {
            swift_unknownObjectRetain();
            v35 = swift_bridgeObjectRetain();
            v36 = sub_1A9165040(v35, v33);
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
          }
          else
          {
            v36 = MEMORY[0x1E0DEE9D8];
          }
          v16 = &v105;
          if (!*(_QWORD *)(v36 + 16))
          {
            v60 = a6[9];
            v113 = a6[8];
            v114[0] = v60;
            *(_OWORD *)((char *)v114 + 10) = *(__int128 *)((char *)a6 + 154);
            v61 = a6[5];
            v109 = a6[4];
            v110 = v61;
            v62 = a6[7];
            v111 = a6[6];
            v112 = v62;
            v63 = a6[1];
            v105 = *a6;
            v106 = v63;
            v64 = a6[3];
            v107 = a6[2];
            v108 = v64;
            sub_1A912D274((uint64_t)a6);
            v65 = sub_1A9242794(&v105);
            if (v65)
            {
              v31 = v65;
              if (*(_QWORD *)(v65 + 16))
              {
                swift_bridgeObjectRelease();
                if (qword_1EEAB6D68 == -1)
                {
LABEL_37:
                  v66 = sub_1A93F7698();
                  __swift_project_value_buffer(v66, (uint64_t)qword_1EEABA690);
                  v67 = sub_1A93F7674();
                  v68 = sub_1A93F87B4();
                  if (os_log_type_enabled(v67, v68))
                  {
                    v69 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)v69 = 0;
                    _os_log_impl(&dword_1A904E000, v67, v68, "No episodes in MAPI response. Using content from Siri sidepack", v69, 2u);
                    MEMORY[0x1AF41411C](v69, -1, -1);
                  }

                  sub_1A912AC30((uint64_t)v92);
                  sub_1A9062F08((uint64_t)v92, (uint64_t)&v105, &qword_1EEAB7DD8);
                  v59 = v31;
                  v58 = 0;
                  goto LABEL_33;
                }
LABEL_69:
                swift_once();
                goto LABEL_37;
              }
              swift_bridgeObjectRelease();
            }
          }
          sub_1A912AC30((uint64_t)v92);
          sub_1A9062F08((uint64_t)v92, (uint64_t)&v105, &qword_1EEAB7DD8);
          v58 = sub_1A9160120() & 1;
          v59 = v36;
LABEL_33:
          sub_1A916D618(v59, (uint64_t)&v105, v58, (uint64_t)&v93);
          v113 = v101;
          v114[0] = v102;
          v114[1] = *(_OWORD *)v103;
          *(_DWORD *)((char *)v16 + 175) = *(_DWORD *)&v103[15];
          v109 = v97;
          v110 = v98;
          v111 = v99;
          v112 = v100;
          v105 = v93;
          v106 = v94;
          v107 = v95;
          v108 = v96;
          sub_1A912C50C((uint64_t)&v105);
          sub_1A9062F08((uint64_t)&v105, (uint64_t)v104, &qword_1EEAB7DE0);
          v8(v104);
          swift_unknownObjectRelease();
LABEL_67:
          sub_1A912C514((uint64_t)&v93);
          return;
        }
        swift_unknownObjectRelease();
        a7 = v8;
        goto LABEL_43;
      }
    }
    swift_bridgeObjectRelease();
LABEL_43:
    v70 = sub_1A9261424(a1);
    if (v70)
    {
      v31 = v70;
      if (!(v70 >> 62))
      {
        v71 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        v87 = a7;
        if (v71)
        {
LABEL_46:
          if (v71 < 1)
          {
            __break(1u);
            goto LABEL_69;
          }
          v72 = 0;
          v73 = v31 & 0xC000000000000001;
          v74 = MEMORY[0x1E0DEE9D8];
          do
          {
            if (v73)
              v75 = (id)MEMORY[0x1AF4129DC](v72, v31);
            else
              v75 = *(id *)(v31 + 8 * v72 + 32);
            v76 = (char *)v75;
            sub_1A927FF3C(v76, 0, (uint64_t)v15);
            v77 = v91;
            (*(void (**)(char *, _QWORD, uint64_t, __int128 *))(v91 + 56))(v15, 0, 1, v16);

            if ((*(unsigned int (**)(char *, uint64_t, __int128 *))(v77 + 48))(v15, 1, v16) == 1)
            {
              sub_1A905FD54((uint64_t)v15, &qword_1ED2AAF68);
            }
            else
            {
              v78 = v16;
              v79 = v31;
              v80 = v73;
              v81 = v71;
              v82 = v89;
              sub_1A9116174((uint64_t)v15, v89, type metadata accessor for PodcastsMediaLibrary.MediaItem);
              sub_1A9116174(v82, (uint64_t)v90, type metadata accessor for PodcastsMediaLibrary.MediaItem);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v74 = sub_1A9117A2C(0, *(_QWORD *)(v74 + 16) + 1, 1, v74);
              v84 = *(_QWORD *)(v74 + 16);
              v83 = *(_QWORD *)(v74 + 24);
              if (v84 >= v83 >> 1)
                v74 = sub_1A9117A2C(v83 > 1, v84 + 1, 1, v74);
              *(_QWORD *)(v74 + 16) = v84 + 1;
              sub_1A9116174((uint64_t)v90, v74+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(_QWORD *)(v91 + 72) * v84, type metadata accessor for PodcastsMediaLibrary.MediaItem);
              v71 = v81;
              v73 = v80;
              v31 = v79;
              v16 = v78;
            }
            ++v72;
          }
          while (v71 != v72);
LABEL_66:
          swift_bridgeObjectRelease_n();
          sub_1A912AC30((uint64_t)v92);
          sub_1A9062F08((uint64_t)v92, (uint64_t)&v105, &qword_1EEAB7DD8);
          sub_1A916D618(v74, (uint64_t)&v105, 0, (uint64_t)&v93);
          v113 = v101;
          v114[0] = v102;
          v114[1] = *(_OWORD *)v103;
          *(_DWORD *)((char *)&v114[1] + 15) = *(_DWORD *)&v103[15];
          v109 = v97;
          v110 = v98;
          v111 = v99;
          v112 = v100;
          v105 = v93;
          v106 = v94;
          v107 = v95;
          v108 = v96;
          sub_1A912C50C((uint64_t)&v105);
          sub_1A9062F08((uint64_t)&v105, (uint64_t)v104, &qword_1EEAB7DE0);
          v87(v104);
          goto LABEL_67;
        }
LABEL_65:
        v74 = MEMORY[0x1E0DEE9D8];
        goto LABEL_66;
      }
LABEL_64:
      swift_bridgeObjectRetain();
      v71 = sub_1A93F8E5C();
      v87 = a7;
      if (v71)
        goto LABEL_46;
      goto LABEL_65;
    }
LABEL_59:
    *(_QWORD *)&v105 = 4;
    sub_1A912C4F0((uint64_t)&v105);
    sub_1A9062F08((uint64_t)&v105, (uint64_t)v104, &qword_1EEAB7DE0);
    a7(v104);
    return;
  }
  if (!a1)
    goto LABEL_5;
  if (!(a1 >> 62))
  {
    if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 0)
      goto LABEL_5;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v85 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (v85 > 0)
    goto LABEL_10;
LABEL_5:
  if (qword_1EEAB6D68 != -1)
    swift_once();
  v20 = sub_1A93F7698();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EEABA690);
  v22 = a5;
  v23 = a5;
  v24 = sub_1A93F7674();
  v25 = sub_1A93F879C();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v91 = v21;
    v27 = (uint8_t *)v26;
    v90 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v27 = 138412290;
    v28 = a5;
    v29 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)&v105 = v29;
    sub_1A93F8AA8();
    v30 = v90;
    *v90 = v29;

    _os_log_impl(&dword_1A904E000, v24, v25, "Received error from request controller: %@", v27, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v30, -1, -1);
    MEMORY[0x1AF41411C](v27, -1, -1);
  }
  else
  {

  }
  v37 = a6[9];
  v113 = a6[8];
  v114[0] = v37;
  *(_OWORD *)((char *)v114 + 10) = *(__int128 *)((char *)a6 + 154);
  v38 = a6[5];
  v109 = a6[4];
  v110 = v38;
  v39 = a6[7];
  v111 = a6[6];
  v112 = v39;
  v40 = a6[1];
  v105 = *a6;
  v106 = v40;
  v41 = a6[3];
  v107 = a6[2];
  v108 = v41;
  sub_1A912D274((uint64_t)a6);
  v42 = sub_1A9242794(&v105);
  if (v42)
  {
    v43 = v42;
    if (*(_QWORD *)(v42 + 16))
    {
      v44 = sub_1A93F7674();
      v45 = sub_1A93F87B4();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v46 = 0;
        _os_log_impl(&dword_1A904E000, v44, v45, "No episodes in MAPI response. Using content from Siri sidepack", v46, 2u);
        MEMORY[0x1AF41411C](v46, -1, -1);
      }

      sub_1A912AC30((uint64_t)v92);
      sub_1A9062F08((uint64_t)v92, (uint64_t)&v105, &qword_1EEAB7DD8);
      sub_1A916D618(v43, (uint64_t)&v105, 0, (uint64_t)&v93);
      v113 = v101;
      v114[0] = v102;
      v114[1] = *(_OWORD *)v103;
      *(_DWORD *)((char *)&v114[1] + 15) = *(_DWORD *)&v103[15];
      v109 = v97;
      v110 = v98;
      v111 = v99;
      v112 = v100;
      v105 = v93;
      v106 = v94;
      v107 = v95;
      v108 = v96;
      sub_1A912C50C((uint64_t)&v105);
      sub_1A9062F08((uint64_t)&v105, (uint64_t)v104, &qword_1EEAB7DE0);
      a7(v104);
      goto LABEL_67;
    }
    swift_bridgeObjectRelease();
  }
  v47 = a5;
  v48 = a5;
  v49 = a5;
  v50 = sub_1A93F7674();
  v51 = sub_1A93F879C();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc();
    v53 = swift_slowAlloc();
    *(_QWORD *)&v105 = v53;
    *(_DWORD *)v52 = 136315138;
    v104[0] = a5;
    v54 = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    v55 = sub_1A93F8094();
    v104[0] = sub_1A906436C(v55, v56, (uint64_t *)&v105);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A904E000, v50, v51, "Received error when fetching from MAPI: %s", v52, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v53, -1, -1);
    MEMORY[0x1AF41411C](v52, -1, -1);
  }
  else
  {

  }
  *(_QWORD *)&v105 = a5;
  sub_1A912C4F0((uint64_t)&v105);
  sub_1A9062F08((uint64_t)&v105, (uint64_t)v104, &qword_1EEAB7DE0);
  v57 = a5;
  a7(v104);

}

uint64_t sub_1A9163DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1A9163DC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  if (*(_BYTE *)(v1 + *(int *)(v2 + 172)) != 1)
  {
    if (qword_1EEAB6D68 != -1)
      swift_once();
    v8 = sub_1A93F7698();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EEABA690);
    v4 = sub_1A93F7674();
    v5 = sub_1A93F87B4();
    if (!os_log_type_enabled(v4, v5))
      goto LABEL_12;
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    v7 = "Item is not shallow, no need to refresh it from the network. Returning original.";
    goto LABEL_11;
  }
  if ((*(_BYTE *)(v1 + 56) & 1) != 0)
  {
    if (qword_1EEAB6D68 != -1)
      swift_once();
    v3 = sub_1A93F7698();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EEABA690);
    v4 = sub_1A93F7674();
    v5 = sub_1A93F87B4();
    if (!os_log_type_enabled(v4, v5))
      goto LABEL_12;
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    v7 = "Item doesn't have an adam id. Unable to refetch from the network. Returning original.";
LABEL_11:
    _os_log_impl(&dword_1A904E000, v4, v5, v7, v6, 2u);
    MEMORY[0x1AF41411C](v6, -1, -1);
LABEL_12:
    v9 = *(_QWORD *)(v0 + 16);
    v10 = *(_QWORD *)(v0 + 24);

    sub_1A9064630(v10, v9, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v9, 0, 1, v2);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v12 = *(_QWORD *)(v1 + 48);
  v13 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v13;
  v14 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v13 + 16) = v12;
  *(_OWORD *)(v13 + 24) = v14;
  *(_QWORD *)(v13 + 40) = v1;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  *v15 = v0;
  v15[1] = sub_1A9164028;
  return sub_1A93F9078();
}

uint64_t sub_1A9164028()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A9164078(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, void *, uint64_t, uint64_t, void *);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  __int128 v40;
  id v41;
  uint64_t (**v42)(uint64_t, void *, uint64_t, uint64_t, void *);
  id v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  _OWORD v63[2];
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[2];
  _QWORD v74[4];
  _BYTE v75[104];
  uint64_t v76;
  unint64_t v77;
  _QWORD v78[5];

  v46 = a5;
  v47 = a1;
  v48 = a4;
  v52 = a3;
  v6 = type metadata accessor for MediaRequest.Params();
  v7 = *(_QWORD *)(v6 - 8);
  v50 = *(_QWORD *)(v7 + 64);
  v51 = v7;
  MEMORY[0x1E0C80A78](v6);
  v49 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v53 = (uint64_t)&v46 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A47B8);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v18 + 32) = a2;
  v74[0] = v18;
  memset(&v74[1], 0, 24);
  v75[0] = 1;
  v76 = 0;
  memset(&v75[8], 0, 96);
  BYTE2(v77) = 0;
  LOWORD(v77) = 2;
  v78[1] = 0;
  v78[0] = 0;
  LOWORD(v78[2]) = 2;
  v72 = 0uLL;
  v73[0] = v77;
  v68 = *(_OWORD *)&v75[32];
  v69 = *(_OWORD *)&v75[48];
  v70 = *(_OWORD *)&v75[64];
  v71 = *(_OWORD *)&v75[80];
  v64 = (unint64_t)v18;
  v65 = 0u;
  v66 = *(_OWORD *)v75;
  v67 = *(_OWORD *)&v75[16];
  *(_OWORD *)((char *)v73 + 10) = *(_OWORD *)((char *)v78 + 2);
  sub_1A9064630(v46, (uint64_t)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PodcastsMediaLibrary.MediaItem);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v47, v11);
  v19 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v20 = (v17 + *(unsigned __int8 *)(v12 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v21 = swift_allocObject();
  sub_1A9116174((uint64_t)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v19, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  v47 = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v21 + v20, v14, v11);
  objc_msgSend(v52, sel_setURLProtocolDelegate_, v48);
  v62 = v72;
  v63[0] = v73[0];
  *(_OWORD *)((char *)v63 + 10) = *(_OWORD *)((char *)v73 + 10);
  v58 = v68;
  v59 = v69;
  v60 = v70;
  v61 = v71;
  v54 = v64;
  v55 = v65;
  v56 = v66;
  v57 = v67;
  v22 = v53;
  sub_1A938CA30();
  v23 = swift_allocObject();
  v24 = v73[0];
  *(_OWORD *)(v23 + 144) = v72;
  *(_OWORD *)(v23 + 160) = v24;
  *(_OWORD *)(v23 + 170) = *(_OWORD *)((char *)v73 + 10);
  v25 = v69;
  *(_OWORD *)(v23 + 80) = v68;
  *(_OWORD *)(v23 + 96) = v25;
  v26 = v71;
  *(_OWORD *)(v23 + 112) = v70;
  *(_OWORD *)(v23 + 128) = v26;
  v27 = v65;
  *(_OWORD *)(v23 + 16) = v64;
  *(_OWORD *)(v23 + 32) = v27;
  v28 = v67;
  *(_OWORD *)(v23 + 48) = v66;
  *(_OWORD *)(v23 + 64) = v28;
  *(_QWORD *)(v23 + 192) = sub_1A9164F98;
  *(_QWORD *)(v23 + 200) = v21;
  v29 = swift_allocObject();
  v48 = v29;
  swift_unknownObjectWeakInit();
  v30 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((_QWORD *)v30 + 2) = v29;
  *((_QWORD *)v30 + 3) = sub_1A9165008;
  *((_QWORD *)v30 + 4) = v23;
  sub_1A93F9330();
  v31 = v22;
  v32 = v49;
  sub_1A9064630(v31, v49, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  v33 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v34 = (v50 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 79) & 0xFFFFFFFFFFFFFFF8;
  v37 = swift_allocObject();
  sub_1A9116174(v32, v37 + v33, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  *(_QWORD *)(v37 + v34) = MEMORY[0x1E0DEE9D8];
  v38 = v37 + v35;
  *(_QWORD *)(v38 + 64) = v58;
  v39 = v57;
  *(_OWORD *)(v38 + 32) = v56;
  *(_OWORD *)(v38 + 48) = v39;
  v40 = v55;
  *(_OWORD *)v38 = v54;
  *(_OWORD *)(v38 + 16) = v40;
  v41 = v52;
  *(_QWORD *)(v37 + v36) = v52;
  v42 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v37 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v42 = sub_1A9114B7C;
  v42[1] = v30;
  sub_1A912D274((uint64_t)v74);
  swift_retain();
  swift_retain();
  swift_retain();
  v43 = v41;
  swift_retain();
  v44 = v53;
  sub_1A9195C30(v53, 0, (uint64_t)sub_1A9114C2C, v37);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1A9064714(v44, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  swift_release();
  return sub_1A912D5B8((uint64_t)v74);
}

uint64_t sub_1A916452C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[184];
  _BYTE v72[184];
  _BYTE v73[184];
  _BYTE v74[192];

  v63 = (uint8_t *)a2;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8870);
  MEMORY[0x1E0C80A78](v69);
  v64 = (uint64_t)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v62 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v62 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v62 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v15);
  v65 = (uint64_t)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v62 - v18;
  v20 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v67 = *(_QWORD *)(v20 - 8);
  v68 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v62 - v24;
  sub_1A9062F08(a1, (uint64_t)v73, &qword_1EEAB7DE0);
  sub_1A9062F08((uint64_t)v73, (uint64_t)v74, &qword_1EEAB7DE0);
  if (sub_1A9165314((uint64_t)v74) == 1)
  {
    v29 = *(_QWORD *)nullsub_1(v74, v26, v27, v28);
    sub_1A9062F08((uint64_t)v73, (uint64_t)v71, &qword_1EEAB7DE0);
    v33 = *(void **)nullsub_1(v71, v30, v31, v32);
    sub_1A912C4E0(v33);
    if (qword_1EEAB6D68 != -1)
      swift_once();
    v34 = sub_1A93F7698();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EEABA690);
    sub_1A9062F08((uint64_t)v73, (uint64_t)v72, &qword_1EEAB7DE0);
    v38 = (id *)nullsub_1(v72, v35, v36, v37);
    sub_1A912C4E0(*v38);
    sub_1A912C4E0(v33);
    v39 = sub_1A93F7674();
    v40 = sub_1A93F87B4();
    if (os_log_type_enabled(v39, v40))
    {
      v66 = a3;
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v41 = 138412290;
      v63 = v41 + 4;
      sub_1A916552C();
      swift_allocError();
      *v43 = v29;
      sub_1A912C4E0(v33);
      v44 = _swift_stdlib_bridgeErrorToNSError();
      v70 = v44;
      sub_1A93F8AA8();
      *v42 = v44;
      sub_1A916531C((uint64_t)v73);
      sub_1A916531C((uint64_t)v73);
      _os_log_impl(&dword_1A904E000, v39, v40, "Received error refreshing item. Returning original shallow item. %@", v41, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v42, -1, -1);
      MEMORY[0x1AF41411C](v41, -1, -1);
    }
    else
    {
      sub_1A916531C((uint64_t)v73);
      sub_1A916531C((uint64_t)v73);
    }

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56))(v8, 1, 1, v68);
    swift_storeEnumTagMultiPayload();
    v59 = v64;
    sub_1A91654E4((uint64_t)v8, v64);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
      sub_1A93F8418();
    }
    else
    {
      sub_1A9062F08(v59, v65, &qword_1ED2AAF68);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
      sub_1A93F8424();
    }
    sub_1A916531C((uint64_t)v73);
    return sub_1A905FD54((uint64_t)v8, &qword_1EEAB8870);
  }
  else
  {
    v66 = a3;
    v45 = nullsub_1(v74, v26, v27, v28);
    sub_1A9062F08((uint64_t)v73, (uint64_t)v72, &qword_1EEAB7DE0);
    v49 = nullsub_1(v72, v46, v47, v48);
    sub_1A912D3DC(v49);
    if (qword_1EEAB6D68 != -1)
      swift_once();
    v50 = sub_1A93F7698();
    __swift_project_value_buffer(v50, (uint64_t)qword_1EEABA690);
    v51 = sub_1A93F7674();
    v52 = sub_1A93F87B4();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v53 = 0;
      _os_log_impl(&dword_1A904E000, v51, v52, "Item successfully refreshed", v53, 2u);
      MEMORY[0x1AF41411C](v53, -1, -1);
    }

    v54 = *(_QWORD *)v45;
    if (*(_QWORD *)(*(_QWORD *)v45 + 16))
    {
      v55 = v67;
      sub_1A9064630(v54 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80)), (uint64_t)v19, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
      v57 = v19;
      v58 = 0;
    }
    else
    {
      v55 = v67;
      v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56);
      v57 = v19;
      v58 = 1;
    }
    v61 = v68;
    v56(v57, v58, 1, v68);
    sub_1A9064630((uint64_t)v63, (uint64_t)v22, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v19, 1, v61) == 1)
    {
      sub_1A9116174((uint64_t)v22, (uint64_t)v25, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      sub_1A905FD54((uint64_t)v19, &qword_1ED2AAF68);
    }
    else
    {
      sub_1A9064714((uint64_t)v22, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      sub_1A9116174((uint64_t)v19, (uint64_t)v25, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    }
    sub_1A9064630((uint64_t)v25, (uint64_t)v14, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    v56(v14, 0, 1, v61);
    swift_storeEnumTagMultiPayload();
    sub_1A91654E4((uint64_t)v14, (uint64_t)v11);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
      sub_1A93F8418();
    }
    else
    {
      sub_1A9062F08((uint64_t)v11, v65, &qword_1ED2AAF68);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
      sub_1A93F8424();
    }
    sub_1A916531C((uint64_t)v73);
    sub_1A905FD54((uint64_t)v14, &qword_1EEAB8870);
    return sub_1A9064714((uint64_t)v25, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  }
}

uint64_t sub_1A9164C1C(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A9162EFC(a1, a2, a3, *(void **)v3, *(_QWORD *)(v3 + 8));
}

BOOL sub_1A9164C24(int8x16_t *a1)
{
  unsigned int v1;
  _BOOL8 result;
  int8x16_t v3;

  v1 = a1[2].u8[0];
  result = 1;
  if (v1 >= 2)
  {
    if (v1 != 8)
      return 0;
    v3 = vorrq_s8(*a1, a1[1]);
    if (vorr_s8(*(int8x8_t *)v3.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL)))
      return 0;
  }
  return result;
}

uint64_t sub_1A9164C60(uint64_t a1, uint64_t a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v6;

  v6 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_1A9164CD4;
  *(_OWORD *)(v6 + 32) = *v2;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1A9164CD4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A9164D1C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9164078(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1A9164D28()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(unint64_t, uint64_t, uint64_t);
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v17 = *(_QWORD *)(v2 + 64);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  v21 = v0;
  v18 = v3;
  v6 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v0 + v3 + v1[12];
  v8 = sub_1A93F726C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease();
  v11 = v6 + v1[16];
  if (!v10(v11, 1, v8))
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  swift_release();
  v12 = v6 + v1[20];
  v13 = sub_1A93F738C();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v6 + v1[36];
  if (!v10(v15, 1, v8))
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v15, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v21 + ((v18 + v17 + v5) & ~v5), v20);
  return swift_deallocObject();
}

uint64_t sub_1A9164F98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0) - 8) + 80);
  return sub_1A916452C(a1, v1 + v4, v1 + ((v5 + v6) & ~v6));
}

void sub_1A9165008(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;

  sub_1A9163224(a1, a2, a3, a4, a5, (__int128 *)(v5 + 16), *(void (**)(_QWORD *))(v5 + 192), *(_QWORD *)(v5 + 200));
}

uint64_t sub_1A9165014()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

unint64_t sub_1A9165040(unint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  char *v17;
  int *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;

  v3 = v2;
  v30 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v8 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (uint64_t)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v27 = (uint64_t)&v25 - v11;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v12 = sub_1A93F8E5C();
    if (v12)
      goto LABEL_3;
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12)
    {
LABEL_3:
      v25 = v3;
      v13 = MEMORY[0x1E0DEE9D8];
      v28 = a1 & 0xC000000000000001;
      v14 = 4;
      v26 = a1;
      while (1)
      {
        v3 = v14 - 4;
        if (v28)
        {
          v15 = (id)MEMORY[0x1AF4129DC](v14 - 4, a1);
          v16 = v14 - 3;
          if (__OFADD__(v3, 1))
            goto LABEL_18;
        }
        else
        {
          v15 = *(id *)(a1 + 8 * v14);
          v16 = v14 - 3;
          if (__OFADD__(v3, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        v17 = (char *)v15;
        v18 = v30;
        v19 = v30;
        sub_1A927FF3C(v17, v18, (uint64_t)v7);
        v20 = v29;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v29);

        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v20) == 1)
        {
          sub_1A905FD54((uint64_t)v7, &qword_1ED2AAF68);
        }
        else
        {
          v21 = v27;
          sub_1A9116174((uint64_t)v7, v27, type metadata accessor for PodcastsMediaLibrary.MediaItem);
          sub_1A9116174(v21, v31, type metadata accessor for PodcastsMediaLibrary.MediaItem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v13 = sub_1A9117A2C(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
          v23 = *(_QWORD *)(v13 + 16);
          v22 = *(_QWORD *)(v13 + 24);
          if (v23 >= v22 >> 1)
            v13 = sub_1A9117A2C(v22 > 1, v23 + 1, 1, v13);
          *(_QWORD *)(v13 + 16) = v23 + 1;
          sub_1A9116174(v31, v13+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v23, type metadata accessor for PodcastsMediaLibrary.MediaItem);
          a1 = v26;
        }
        ++v14;
        if (v16 == v12)
        {
          swift_bridgeObjectRelease();
          return v13;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A9165314(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 179);
}

uint64_t sub_1A916531C(uint64_t a1)
{
  sub_1A9165394(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_OWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(unsigned __int16 *)(a1 + 176) | (*(unsigned __int8 *)(a1 + 178) << 16),
    *(_BYTE *)(a1 + 179));
  return a1;
}

void sub_1A9165394(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,int a23,char a24)
{
  if ((a24 & 1) != 0)
  {
    sub_1A912C4FC(a1);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A912C600(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
  }
}

uint64_t sub_1A91654E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A916552C()
{
  unint64_t result;

  result = qword_1EEAB8878;
  if (!qword_1EEAB8878)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastsMediaLibrary.Error, &type metadata for PodcastsMediaLibrary.Error);
    atomic_store(result, (unint64_t *)&qword_1EEAB8878);
  }
  return result;
}

uint64_t objectdestroy_4Tm()
{
  uint64_t v0;

  sub_1A912C6B4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v0 + 160) != 2)
    sub_1A90531EC(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 144));
  swift_release();
  return swift_deallocObject();
}

uint64_t MTPodcast.episodeUserFilter.getter()
{
  void *v0;
  void *v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _OWORD v6[2];
  _QWORD v7[4];

  v1 = v0;
  objc_msgSend(v0, sel_willAccessValueForKey_, CFSTR("episodeUserFilter"));
  if (objc_msgSend(v0, sel_primitiveValueForKey_, CFSTR("episodeUserFilter")))
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1A90A4E08((uint64_t)v6, (uint64_t)v7);
  if (!v7[3])
  {
    sub_1A90A593C((uint64_t)v7);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    v3 = 0;
    goto LABEL_9;
  }
  sub_1A93F6DA4();
  swift_allocObject();
  sub_1A93F6D98();
  sub_1A9165778();
  sub_1A93F6D8C();
  sub_1A905F180(v4, v5);
  swift_release();
  v3 = v7[0];
LABEL_9:
  objc_msgSend(v1, sel_didAccessValueForKey_, CFSTR("episodeUserFilter"));
  return v3;
}

unint64_t sub_1A9165778()
{
  unint64_t result;

  result = qword_1EEAB8880;
  if (!qword_1EEAB8880)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeUserFilter, &type metadata for EpisodeUserFilter);
    atomic_store(result, (unint64_t *)&qword_1EEAB8880);
  }
  return result;
}

uint64_t MTPodcast.episodeUserFilter.setter(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __CFString *v11;

  v3 = v2;
  v6 = ~a2;
  objc_msgSend(v3, sel_willChangeValueForKey_, CFSTR("episodeUserFilter"));
  if (v6)
  {
    sub_1A93F6DEC();
    swift_allocObject();
    sub_1A912C900(a1, a2);
    sub_1A93F6DE0();
    sub_1A9165960();
    v7 = sub_1A93F6DD4();
    v9 = v8;
    swift_release();
    sub_1A916594C(a1, a2);
    sub_1A90D8068(v7, v9);
    v10 = sub_1A93F729C();
    sub_1A905F180(v7, v9);
  }
  else
  {
    v10 = 0;
    v7 = 0;
    v9 = 0xF000000000000000;
  }
  objc_msgSend(v3, sel_setPrimitiveValue_forKey_, v10, CFSTR("episodeUserFilter"));
  swift_unknownObjectRelease();
  v11 = CFSTR("episodeUserFilter");
  objc_msgSend(v3, sel_didChangeValueForKey_, v11);
  sub_1A916594C(a1, a2);

  return sub_1A9069F9C(v7, v9);
}

uint64_t sub_1A916594C(uint64_t a1, char a2)
{
  if (a2 != -1)
    return sub_1A912C738(a1, a2);
  return a1;
}

unint64_t sub_1A9165960()
{
  unint64_t result;

  result = qword_1EEAB8888;
  if (!qword_1EEAB8888)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeUserFilter, &type metadata for EpisodeUserFilter);
    atomic_store(result, (unint64_t *)&qword_1EEAB8888);
  }
  return result;
}

uint64_t (*MTPodcast.episodeUserFilter.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)a1 = MTPodcast.episodeUserFilter.getter();
  *(_BYTE *)(a1 + 8) = v3;
  return sub_1A91659DC;
}

uint64_t sub_1A91659DC(uint64_t a1, char a2)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)a1;
  v3 = *(_BYTE *)(a1 + 8);
  if ((a2 & 1) == 0)
    return MTPodcast.episodeUserFilter.setter(*(_QWORD *)a1, v3);
  sub_1A9165A48(*(_QWORD *)a1, v3);
  MTPodcast.episodeUserFilter.setter(v2, v3);
  return sub_1A916594C(v2, v3);
}

uint64_t sub_1A9165A48(uint64_t a1, char a2)
{
  if (a2 != -1)
    return sub_1A912C900(a1, a2);
  return a1;
}

uint64_t sub_1A9165A5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = MTPodcast.episodeUserFilter.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3;
  return result;
}

uint64_t sub_1A9165A88(uint64_t a1)
{
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)a1;
  v2 = *(_BYTE *)(a1 + 8);
  sub_1A9165A48(*(_QWORD *)a1, v2);
  return MTPodcast.episodeUserFilter.setter(v1, v2);
}

uint64_t MetricsContentKind.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t MetricsContentKind.debugDescription.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD00000000000001ELL;
}

unint64_t sub_1A9165B9C()
{
  return MetricsContentKind.debugDescription.getter();
}

uint64_t MetricsContentKind.description.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t MetricsContentKind.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_1A93F90CC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsContentKind.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F912C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsContentKind.channel.getter()
{
  return 0x6C656E6E616863;
}

uint64_t static MetricsContentKind.episode.getter()
{
  return 0x4574736163646F70;
}

uint64_t static MetricsContentKind.show.getter()
{
  return 0x74736163646F70;
}

unint64_t sub_1A9165D84()
{
  unint64_t result;

  result = qword_1EEAB8890;
  if (!qword_1EEAB8890)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsContentKind, &type metadata for MetricsContentKind);
    atomic_store(result, (unint64_t *)&qword_1EEAB8890);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsContentKind()
{
  return &type metadata for MetricsContentKind;
}

id MTCoalescableWorkController.init(qos:identifier:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *ObjCClassFromMetadata;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v12;

  v2 = sub_1A93F7D70();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1A93F7DAC();
  v7 = sub_1A93F7D64();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v8 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(ObjCClassFromMetadata, sel_controllerWithQosClass_identifier_, v7, v8);

  v10 = sub_1A93F7DB8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
  return v9;
}

uint64_t BinaryFloatingPoint.safeInt64.getter(uint64_t a1, uint64_t a2)
{
  return sub_1A9165F08(a1, a2, (void (*)(uint64_t))sub_1A9166128, MEMORY[0x1E0DEDC60], 0x3436746E49, 0xE500000000000000);
}

uint64_t sub_1A9165F08(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t result;
  uint64_t v20;
  _QWORD v21[3];
  void (*v22)(uint64_t);
  uint64_t v23;
  unint64_t v24;

  v21[1] = a5;
  v21[2] = a6;
  v22 = a3;
  v7 = v6;
  v9 = *(_QWORD *)(a1 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v21 - v13;
  v15 = sub_1A93F7F8C();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v14, v7, a1);
  if ((v15 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, a1);
    return 0;
  }
  v17 = sub_1A93F7F98();
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v14, a1);
  if ((v17 & 1) != 0)
    return 0;
  v20 = ((uint64_t (*)(char *, uint64_t, uint64_t))v16)(v12, v7, a1);
  v22(v20);
  sub_1A93F8DF0();
  if ((v24 & 1) != 0)
  {
    v23 = 0;
    v24 = 0xE000000000000000;
    sub_1A93F8C70();
    sub_1A93F9474();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    sub_1A93F810C();
    sub_1A93F810C();
    sub_1A93F810C();
    result = sub_1A93F8E14();
    __break(1u);
  }
  else
  {
    v18(v12, a1);
    return v23;
  }
  return result;
}

unint64_t sub_1A9166128()
{
  unint64_t result;

  result = qword_1EEAB8898;
  if (!qword_1EEAB8898)
  {
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEDCB0], MEMORY[0x1E0DEDC60]);
    atomic_store(result, (unint64_t *)&qword_1EEAB8898);
  }
  return result;
}

uint64_t sub_1A916616C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _OWORD v21[2];
  __int128 v22;
  uint64_t v23;
  _BYTE v24[40];

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR___MTContentKeyRequest_requestData);
  swift_beginAccess();
  v3 = v2[1];
  v4 = MEMORY[0x1E0DEE9E0];
  if (v3 >> 60 != 15)
  {
    v5 = MEMORY[0x1E0DEA968];
    v6 = *v2;
    sub_1A90D8068(v6, v3);
    v7 = sub_1A93F72A8();
    v9 = v8;
    sub_1A9069F9C(v6, v3);
    sub_1A93F8C1C();
    v23 = v5;
    *(_QWORD *)&v22 = v7;
    *((_QWORD *)&v22 + 1) = v9;
    sub_1A908A5DC(&v22, v21);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1A930D94C(v21, (uint64_t)v24, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1A90A5908((uint64_t)v24);
  }
  *(_QWORD *)&v22 = 25705;
  *((_QWORD *)&v22 + 1) = 0xE200000000000000;
  v11 = MEMORY[0x1E0DEA968];
  sub_1A93F8C1C();
  v12 = *(_QWORD *)(v1 + OBJC_IVAR___MTContentKeyRequest_requestID);
  v23 = MEMORY[0x1E0DEB418];
  *(_QWORD *)&v22 = v12;
  sub_1A908A5DC(&v22, v21);
  v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_1A930D94C(v21, (uint64_t)v24, v13);
  swift_bridgeObjectRelease();
  sub_1A90A5908((uint64_t)v24);
  if (*(_QWORD *)(v1 + OBJC_IVAR___MTContentKeyRequest_requestType) != 3)
  {
    *(_QWORD *)&v22 = 6910581;
    *((_QWORD *)&v22 + 1) = 0xE300000000000000;
    sub_1A93F8C1C();
    v14 = *(_QWORD *)(v1 + OBJC_IVAR___MTContentKeyRequest_keyIdentifier);
    v15 = *(_QWORD *)(v1 + OBJC_IVAR___MTContentKeyRequest_keyIdentifier + 8);
    v23 = v11;
    *(_QWORD *)&v22 = v14;
    *((_QWORD *)&v22 + 1) = v15;
    sub_1A908A5DC(&v22, v21);
    swift_bridgeObjectRetain();
    v16 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A930D94C(v21, (uint64_t)v24, v16);
    swift_bridgeObjectRelease();
    sub_1A90A5908((uint64_t)v24);
  }
  *(_QWORD *)&v22 = 0x64692D6D616461;
  *((_QWORD *)&v22 + 1) = 0xE700000000000000;
  sub_1A93F8C1C();
  v17 = *(_QWORD *)(v1 + OBJC_IVAR___MTContentKeyRequest_adamId);
  v18 = *(_QWORD *)(v1 + OBJC_IVAR___MTContentKeyRequest_adamId + 8);
  v23 = v11;
  *(_QWORD *)&v22 = v17;
  *((_QWORD *)&v22 + 1) = v18;
  sub_1A908A5DC(&v22, v21);
  swift_bridgeObjectRetain();
  v19 = swift_isUniquelyReferenced_nonNull_native();
  sub_1A930D94C(v21, (uint64_t)v24, v19);
  swift_bridgeObjectRelease();
  sub_1A90A5908((uint64_t)v24);
  return v4;
}

uint64_t sub_1A9166458(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v12 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB88E0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9167608();
  sub_1A93F93D8();
  LOBYTE(v14) = 0;
  sub_1A93F9024();
  if (!v4)
  {
    v14 = v12;
    v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB88B0);
    sub_1A9167718(&qword_1EEAB88E8, &qword_1EEAB88B0, (uint64_t (*)(void))sub_1A91676D4, MEMORY[0x1E0DEAF10]);
    sub_1A93F8FE8();
    v14 = a4;
    v13 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB88C8);
    sub_1A9167718(&qword_1EEAB88F8, &qword_1EEAB88C8, (uint64_t (*)(void))sub_1A916777C, MEMORY[0x1E0DEAF10]);
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A916662C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92F8750(*a1, *a2);
}

uint64_t sub_1A9166638()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A91666E8()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9166774()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A9166820@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A9167330();
  *a1 = result;
  return result;
}

void sub_1A916684C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0x80000001A9442570;
  v5 = 0xD000000000000011;
  if (v2 != 1)
  {
    v5 = 0x65722D65636E6F6ELL;
    v4 = 0xEF7365736E6F7073;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E6F6973726576;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A91668BC()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000011;
  if (*v0 != 1)
    v1 = 0x65722D65636E6F6ELL;
  if (*v0)
    return v1;
  else
    return 0x6E6F6973726576;
}

uint64_t sub_1A9166928@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A9167330();
  *a1 = result;
  return result;
}

void sub_1A916694C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1A9166958()
{
  sub_1A9167608();
  return sub_1A93F945C();
}

uint64_t sub_1A9166980()
{
  sub_1A9167608();
  return sub_1A93F9468();
}

uint64_t sub_1A91669A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1A91673C0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1A91669D4(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A9166458(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1A91669F0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;

  v12[0] = a5;
  v12[1] = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8948);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91681D0();
  sub_1A93F93D8();
  v15 = 0;
  sub_1A93F9024();
  if (!v5)
  {
    v14 = 1;
    sub_1A93F9024();
    v13 = 2;
    sub_1A93F8FB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A9166B44()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x737574617473;
  if (*v0 != 1)
    v1 = 0x65636E6F6ELL;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_1A9166B8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9167C5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9166BB0()
{
  sub_1A91681D0();
  return sub_1A93F945C();
}

uint64_t sub_1A9166BD8()
{
  sub_1A91681D0();
  return sub_1A93F9468();
}

uint64_t sub_1A9166C00@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1A9167D88(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1A9166C2C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A91669F0(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1A9166C48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8940);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A916818C();
  sub_1A93F93D8();
  v8[15] = 0;
  sub_1A93F9024();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A93F9024();
    v8[13] = 2;
    sub_1A93F8FD0();
    v8[12] = 3;
    sub_1A93F8FB8();
    v8[11] = 4;
    sub_1A93F8FD0();
    v8[10] = 5;
    sub_1A93F8FC4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1A9166E04(char *a1)
{
  sub_1A92F82EC(*a1);
}

void sub_1A9166E10()
{
  char *v0;

  sub_1A92B2A18(*v0);
}

void sub_1A9166E18()
{
  __asm { BR              X10 }
}

uint64_t sub_1A9166E48()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A9166EE4(uint64_t a1)
{
  char *v1;

  sub_1A931BD00(a1, *v1);
}

uint64_t sub_1A9166EEC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A9167378();
  *a1 = result;
  return result;
}

uint64_t sub_1A9166F18()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A9166F3C + 4 * byte_1A9409266[*v0]))();
}

void sub_1A9166F3C(_QWORD *a1@<X8>)
{
  *a1 = 0x737574617473;
  a1[1] = 0xE600000000000000;
}

void sub_1A9166F54(_QWORD *a1@<X8>)
{
  *a1 = 0x66612D77656E6572;
  a1[1] = 0xEB00000000726574;
}

void sub_1A9166F78(_QWORD *a1@<X8>)
{
  *a1 = 6515555;
  a1[1] = 0xE300000000000000;
}

void sub_1A9166F8C(_QWORD *a1@<X8>)
{
  *a1 = 0x6974617269707865;
  a1[1] = 0xEF656D69742D6E6FLL;
}

void sub_1A9166FB4(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "is-low-value");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1A9166FD8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9166FFC + 4 * byte_1A940926C[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1A9166FFC()
{
  return 0x737574617473;
}

uint64_t sub_1A9167010()
{
  return 0x66612D77656E6572;
}

uint64_t sub_1A9167030()
{
  return 6515555;
}

uint64_t sub_1A9167040()
{
  return 0x6974617269707865;
}

uint64_t sub_1A9167064()
{
  return 0x762D776F6C2D7369;
}

uint64_t sub_1A9167084@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A9167378();
  *a1 = result;
  return result;
}

void sub_1A91670A8(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1A91670B4()
{
  sub_1A916818C();
  return sub_1A93F945C();
}

uint64_t sub_1A91670DC()
{
  sub_1A916818C();
  return sub_1A93F9468();
}

double sub_1A9167104@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  _OWORD v7[2];

  sub_1A9167F0C(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    result = *(double *)((char *)v7 + 10);
    *(_OWORD *)((char *)a2 + 42) = *(_OWORD *)((char *)v7 + 10);
  }
  return result;
}

uint64_t sub_1A916714C(_QWORD *a1)
{
  return sub_1A9166C48(a1);
}

uint64_t destroy for ContentKeyRequestResponse()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s18PodcastsFoundation25ContentKeyRequestResponseVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ContentKeyRequestResponse(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContentKeyRequestResponse(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentKeyRequestResponse(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentKeyRequestResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentKeyRequestResponse()
{
  return &type metadata for ContentKeyRequestResponse;
}

uint64_t sub_1A9167330()
{
  unint64_t v0;

  v0 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1A9167378()
{
  unint64_t v0;

  v0 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1A91673C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB88A0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1A9167608();
  sub_1A93F93C0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    LOBYTE(v11) = 0;
    v7 = sub_1A93F8F70();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB88B0);
    v10 = 1;
    sub_1A9167718(&qword_1EEAB88B8, &qword_1EEAB88B0, (uint64_t (*)(void))sub_1A916764C, MEMORY[0x1E0DEAF40]);
    sub_1A93F8F34();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB88C8);
    v10 = 2;
    sub_1A9167718(&qword_1EEAB88D0, &qword_1EEAB88C8, (uint64_t (*)(void))sub_1A9167690, MEMORY[0x1E0DEAF40]);
    swift_bridgeObjectRetain();
    sub_1A93F8F34();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1A9167608()
{
  unint64_t result;

  result = qword_1EEAB88A8;
  if (!qword_1EEAB88A8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9409504, &type metadata for ContentKeyRequestResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB88A8);
  }
  return result;
}

unint64_t sub_1A916764C()
{
  unint64_t result;

  result = qword_1EEAB88C0;
  if (!qword_1EEAB88C0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94094DC, &type metadata for ContentKeyRequestLicenseResponse);
    atomic_store(result, (unint64_t *)&qword_1EEAB88C0);
  }
  return result;
}

unint64_t sub_1A9167690()
{
  unint64_t result;

  result = qword_1EEAB88D8;
  if (!qword_1EEAB88D8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94094B4, &type metadata for ContentKeyRequestNonceResponse);
    atomic_store(result, (unint64_t *)&qword_1EEAB88D8);
  }
  return result;
}

unint64_t sub_1A91676D4()
{
  unint64_t result;

  result = qword_1EEAB88F0;
  if (!qword_1EEAB88F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940948C, &type metadata for ContentKeyRequestLicenseResponse);
    atomic_store(result, (unint64_t *)&qword_1EEAB88F0);
  }
  return result;
}

uint64_t sub_1A9167718(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x1AF414014](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A916777C()
{
  unint64_t result;

  result = qword_1EEAB8900;
  if (!qword_1EEAB8900)
  {
    result = MEMORY[0x1AF414014](&unk_1A9409464, &type metadata for ContentKeyRequestNonceResponse);
    atomic_store(result, (unint64_t *)&qword_1EEAB8900);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentKeyRequestResponse.CodingKeys()
{
  return &type metadata for ContentKeyRequestResponse.CodingKeys;
}

uint64_t destroy for ContentKeyRequestNonceResponse()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContentKeyRequestNonceResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ContentKeyRequestNonceResponse(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContentKeyRequestNonceResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentKeyRequestNonceResponse(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentKeyRequestNonceResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentKeyRequestNonceResponse()
{
  return &type metadata for ContentKeyRequestNonceResponse;
}

uint64_t destroy for ContentKeyRequestLicenseResponse()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContentKeyRequestLicenseResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContentKeyRequestLicenseResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  return a1;
}

__n128 __swift_memcpy58_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ContentKeyRequestLicenseResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentKeyRequestLicenseResponse(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 58))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentKeyRequestLicenseResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 58) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 58) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentKeyRequestLicenseResponse()
{
  return &type metadata for ContentKeyRequestLicenseResponse;
}

unint64_t sub_1A9167B88()
{
  unint64_t result;

  result = qword_1EEAB8908;
  if (!qword_1EEAB8908)
  {
    result = MEMORY[0x1AF414014](&unk_1A940943C, &type metadata for ContentKeyRequestResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8908);
  }
  return result;
}

unint64_t sub_1A9167BD0()
{
  unint64_t result;

  result = qword_1EEAB8910;
  if (!qword_1EEAB8910)
  {
    result = MEMORY[0x1AF414014](&unk_1A9409374, &type metadata for ContentKeyRequestResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8910);
  }
  return result;
}

unint64_t sub_1A9167C18()
{
  unint64_t result;

  result = qword_1EEAB8918;
  if (!qword_1EEAB8918)
  {
    result = MEMORY[0x1AF414014](&unk_1A940939C, &type metadata for ContentKeyRequestResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8918);
  }
  return result;
}

uint64_t sub_1A9167C5C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65636E6F6ELL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A9167D88(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8930);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1A91681D0();
  sub_1A93F93C0();
  if (!v1)
  {
    v12 = 0;
    v7 = sub_1A93F8F70();
    v11 = 1;
    sub_1A93F8F70();
    v10 = 2;
    sub_1A93F8F04();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v7;
}

uint64_t sub_1A9167F0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8920);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A916818C();
  sub_1A93F93C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v31 = 0;
  v9 = sub_1A93F8F70();
  v30 = 1;
  v10 = sub_1A93F8F70();
  v29 = 2;
  v11 = sub_1A93F8F1C();
  v24 = v12;
  v25 = v11;
  v28 = 3;
  v13 = sub_1A93F8F04();
  v15 = v14;
  v22 = v13;
  v27 = 4;
  swift_bridgeObjectRetain();
  v23 = v15;
  v16 = sub_1A93F8F1C();
  HIDWORD(v20) = v17;
  v21 = v16;
  v26 = 5;
  LOBYTE(v15) = sub_1A93F8F10();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v18 = v23;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v25;
  *(_BYTE *)(a2 + 24) = v24 & 1;
  *(_QWORD *)(a2 + 32) = v22;
  *(_QWORD *)(a2 + 40) = v18;
  *(_QWORD *)(a2 + 48) = v21;
  *(_BYTE *)(a2 + 56) = BYTE4(v20) & 1;
  *(_BYTE *)(a2 + 57) = v15;
  return result;
}

unint64_t sub_1A916818C()
{
  unint64_t result;

  result = qword_1EEAB8928;
  if (!qword_1EEAB8928)
  {
    result = MEMORY[0x1AF414014](&unk_1A940974C, &type metadata for ContentKeyRequestLicenseResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8928);
  }
  return result;
}

unint64_t sub_1A91681D0()
{
  unint64_t result;

  result = qword_1EEAB8938;
  if (!qword_1EEAB8938)
  {
    result = MEMORY[0x1AF414014](&unk_1A94096FC, &type metadata for ContentKeyRequestNonceResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8938);
  }
  return result;
}

uint64_t _s18PodcastsFoundation25ContentKeyRequestResponseV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A9168260 + 4 * byte_1A9409277[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A9168294 + 4 * byte_1A9409272[v4]))();
}

uint64_t sub_1A9168294(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A916829C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91682A4);
  return result;
}

uint64_t sub_1A91682B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91682B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A91682BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91682C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentKeyRequestNonceResponse.CodingKeys()
{
  return &type metadata for ContentKeyRequestNonceResponse.CodingKeys;
}

uint64_t getEnumTagSinglePayload for MediaRequest.ContentType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentKeyRequestLicenseResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A91683BC + 4 * byte_1A9409281[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A91683F0 + 4 * byte_1A940927C[v4]))();
}

uint64_t sub_1A91683F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91683F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9168400);
  return result;
}

uint64_t sub_1A916840C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9168414);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A9168418(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9168420(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentKeyRequestLicenseResponse.CodingKeys()
{
  return &type metadata for ContentKeyRequestLicenseResponse.CodingKeys;
}

unint64_t sub_1A9168440()
{
  unint64_t result;

  result = qword_1EEAB8950;
  if (!qword_1EEAB8950)
  {
    result = MEMORY[0x1AF414014](&unk_1A940961C, &type metadata for ContentKeyRequestLicenseResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8950);
  }
  return result;
}

unint64_t sub_1A9168488()
{
  unint64_t result;

  result = qword_1EEAB8958;
  if (!qword_1EEAB8958)
  {
    result = MEMORY[0x1AF414014](&unk_1A94096D4, &type metadata for ContentKeyRequestNonceResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8958);
  }
  return result;
}

unint64_t sub_1A91684D0()
{
  unint64_t result;

  result = qword_1EEAB8960;
  if (!qword_1EEAB8960)
  {
    result = MEMORY[0x1AF414014](&unk_1A9409644, &type metadata for ContentKeyRequestNonceResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8960);
  }
  return result;
}

unint64_t sub_1A9168518()
{
  unint64_t result;

  result = qword_1EEAB8968;
  if (!qword_1EEAB8968)
  {
    result = MEMORY[0x1AF414014](&unk_1A940966C, &type metadata for ContentKeyRequestNonceResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8968);
  }
  return result;
}

unint64_t sub_1A9168560()
{
  unint64_t result;

  result = qword_1EEAB8970;
  if (!qword_1EEAB8970)
  {
    result = MEMORY[0x1AF414014](&unk_1A9409554, &type metadata for ContentKeyRequestLicenseResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8970);
  }
  return result;
}

unint64_t sub_1A91685A8()
{
  unint64_t result;

  result = qword_1EEAB8978;
  if (!qword_1EEAB8978)
  {
    result = MEMORY[0x1AF414014](&unk_1A940957C, &type metadata for ContentKeyRequestLicenseResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8978);
  }
  return result;
}

uint64_t Loadable.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 2);
}

BOOL Loadable.isLoaded.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _BOOL8 v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  v5 = (*(unsigned int (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 48))(v4, 2) == 0;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

BOOL Loadable.failed.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  v5 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 48))(v4, 2);
  if (v5 != 2)
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5 == 2;
}

uint64_t static Loadable<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, double);
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  char v23;
  char *v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v28 = a4;
  v31 = a2;
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Loadable(0, v9, v9, v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v30 = (char *)&v28 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v29 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v15 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v17 = (char *)&v28 - v16;
  v19 = (char *)&v28 + *(int *)(v18 + 48) - v16;
  v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v20((char *)&v28 - v16, a1, v11, v15);
  ((void (*)(char *, uint64_t, uint64_t))v20)(v19, v31, v11);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v22 = v21(v17, 2, a3);
  if (!v22)
  {
    ((void (*)(char *, char *, uint64_t))v20)(v30, v17, v11);
    if (!v21(v19, 2, a3))
    {
      v24 = v8;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v19, a3);
      v25 = v30;
      v23 = sub_1A93F8004();
      v26 = *(void (**)(char *, uint64_t))(v6 + 8);
      v26(v24, a3);
      v26(v25, a3);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v30, a3);
    goto LABEL_9;
  }
  if (v22 == 1)
  {
    if (v21(v19, 2, a3) == 1)
      goto LABEL_8;
LABEL_9:
    v23 = 0;
    v12 = v29;
    v11 = TupleTypeMetadata2;
    goto LABEL_11;
  }
  if (v21(v19, 2, a3) != 2)
    goto LABEL_9;
LABEL_8:
  v23 = 1;
LABEL_11:
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  return v23 & 1;
}

uint64_t sub_1A916897C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Loadable<A>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t *sub_1A9168988(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL8 v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  _BOOL8 v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v8;
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      v11 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v11 > 0xFFFE)
      {
        v10 = 4;
      }
      else
      {
        v12 = v11 != 0;
        v13 = v11 >= 0xFF;
        v10 = 2;
        if (!v13)
          v10 = v12;
      }
    }
    else
    {
      v10 = 1;
    }
    v9 = v10 + v8;
  }
  v14 = *(_DWORD *)(v6 + 80);
  if (v14 <= 7 && v9 <= 0x18 && (*(_DWORD *)(v6 + 80) & 0x100000) == 0)
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 2, *(_QWORD *)(a3 + 16)))
    {
      if (v7 <= 1)
      {
        if (v8 <= 3)
        {
          v19 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
          if (v19 > 0xFFFE)
          {
            v18 = 4;
          }
          else
          {
            v20 = v19 != 0;
            v13 = v19 >= 0xFF;
            v18 = 2;
            if (!v13)
              v18 = v20;
          }
        }
        else
        {
          v18 = 1;
        }
        v8 += v18;
      }
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
    }
  }
  else
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  return a1;
}

void *sub_1A9168B20(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  uint64_t v9;
  unsigned int v10;
  _BOOL8 v11;
  BOOL v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v10 > 0xFFFE)
        {
          v9 = 4;
        }
        else
        {
          v11 = v10 != 0;
          v12 = v10 >= 0xFF;
          v9 = 2;
          if (!v12)
            v9 = v11;
        }
      }
      else
      {
        v9 = 1;
      }
      v8 += v9;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  return a1;
}

void *sub_1A9168C10(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  unsigned int v10;
  size_t v11;
  uint64_t v12;
  unsigned int v13;
  _BOOL8 v14;
  BOOL v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 2, v5);
  v9 = v7(a2, 2, v5);
  if (v8)
  {
    if (v9)
    {
      v10 = *(_DWORD *)(v6 + 84);
      v11 = *(_QWORD *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
        {
LABEL_5:
          v12 = 1;
LABEL_16:
          v11 += v12;
          goto LABEL_17;
        }
LABEL_9:
        v13 = (~(-1 << (8 * v11)) - v10 + 2) >> (8 * v11);
        if (v13 > 0xFFFE)
        {
          v12 = 4;
        }
        else
        {
          v14 = v13 != 0;
          v15 = v13 >= 0xFF;
          v12 = 2;
          if (!v15)
            v12 = v14;
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  else
  {
    if (v9)
    {
      (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
      v10 = *(_DWORD *)(v6 + 84);
      v11 = *(_QWORD *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
          goto LABEL_5;
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
  }
  return a1;
}

uint64_t sub_1A9168D60(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  _BOOL8 v10;
  BOOL v11;
  int v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 2;
  v7 = *(_QWORD *)(v4 + 64);
  if (v5 <= 1)
  {
    v6 = 0;
    if (v7 <= 3)
    {
      v9 = (~(-1 << (8 * v7)) - v5 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        v8 = 4;
      }
      else
      {
        v10 = v9 != 0;
        v11 = v9 >= 0xFF;
        v8 = 2;
        if (!v11)
          v8 = v10;
      }
    }
    else
    {
      v8 = 1;
    }
    v7 += v8;
  }
  if (!a2)
    return 0;
  v12 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_29;
  v13 = 8 * v7;
  if (v7 <= 3)
  {
    v15 = ((v12 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v7);
      if (!v14)
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_29:
      if (v6)
      {
        v18 = (*(uint64_t (**)(void))(v4 + 48))();
        if (v18 >= 3)
          return v18 - 2;
        else
          return 0;
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_29;
LABEL_20:
  v16 = (v14 - 1) << v13;
  if (v7 > 3)
    v16 = 0;
  if ((_DWORD)v7)
  {
    if (v7 <= 3)
      v17 = v7;
    else
      v17 = 4;
    __asm { BR              X12 }
  }
  return v6 + v16 + 1;
}

void sub_1A9168EF4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  size_t v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL8 v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = v7 - 2;
  v9 = *(_QWORD *)(v6 + 64);
  if (v7 <= 1)
  {
    v8 = 0;
    if (v9 <= 3)
    {
      v11 = (~(-1 << (8 * v9)) - v7 + 2) >> (8 * v9);
      if (v11 > 0xFFFE)
      {
        v10 = 4;
      }
      else
      {
        v12 = v11 != 0;
        v13 = v11 >= 0xFF;
        v10 = 2;
        if (!v13)
          v10 = v12;
      }
    }
    else
    {
      v10 = 1;
    }
    v9 += v10;
  }
  v13 = a3 >= v8;
  v14 = a3 - v8;
  if (v14 != 0 && v13)
  {
    if (v9 <= 3)
    {
      v17 = ((v14 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v17))
      {
        v15 = 4u;
      }
      else if (v17 >= 0x100)
      {
        v15 = 2;
      }
      else
      {
        v15 = v17 > 1;
      }
    }
    else
    {
      v15 = 1u;
    }
  }
  else
  {
    v15 = 0u;
  }
  if (v8 < a2)
  {
    v16 = ~v8 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v18 = v16 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v18;
          *((_BYTE *)a1 + 2) = BYTE2(v18);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v18;
        }
        else
        {
          *(_BYTE *)a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1A9169110(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 48))(a1, 2);
}

uint64_t sub_1A9169124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 56))(a1, a2, 2);
}

uint64_t *sub_1A9169590()
{
  uint64_t *v0;

  swift_bridgeObjectRelease();
  sub_1A9085818(v0[4]);
  sub_1A9085818(v0[6]);
  sub_1A9085818(v0[8]);
  sub_1A9085818(v0[10]);
  sub_1A9085818(v0[12]);
  sub_1A9085818(v0[14]);
  sub_1A9085818(v0[16]);
  sub_1A9085818(v0[18]);
  sub_1A9085818(v0[20]);
  sub_1A9085818(v0[22]);
  sub_1A9085818(v0[24]);
  sub_1A9085818(v0[26]);
  return v0;
}

uint64_t sub_1A916960C()
{
  sub_1A9169590();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FairPlayKeySessionMock()
{
  return objc_opt_self();
}

uint64_t sub_1A916964C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t SyncKeysRepository.isSubscriptionSyncDirty(for:)(uint64_t a1)
{
  uint64_t v1;
  char v3;
  char v4;
  uint64_t v5;
  ValueMetadata *v6;
  unint64_t v7;
  _QWORD v9[3];
  ValueMetadata *v10;
  unint64_t v11;

  if ((isRunningUnitTests() & 1) == 0
    && objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod)
    && (v10 = &type metadata for Podcasts,
        v11 = sub_1A90A4238(),
        LOBYTE(v9[0]) = 32,
        v3 = sub_1A93F7500(),
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v9),
        (v3 & 1) != 0))
  {
    v4 = 0;
  }
  else
  {
    v5 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
    swift_beginAccess();
    sub_1A905DC3C(v5, (uint64_t)v9);
    v6 = v10;
    v7 = v11;
    __swift_project_boxed_opaque_existential_1(v9, (uint64_t)v10);
    v4 = (*(uint64_t (**)(uint64_t, ValueMetadata *, unint64_t))(v7 + 80))(a1, v6, v7);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  }
  return v4 & 1;
}

uint64_t SyncKeysRepository.markSubscriptionSyncDirty(_:for:)(char a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  uint64_t result;
  uint64_t v7;
  ValueMetadata *v8;
  unint64_t v9;
  _QWORD v10[3];
  ValueMetadata *v11;
  unint64_t v12;

  if ((isRunningUnitTests() & 1) != 0
    || !objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod)
    || (v11 = &type metadata for Podcasts,
        v12 = sub_1A90A4238(),
        LOBYTE(v10[0]) = 32,
        v5 = sub_1A93F7500(),
        result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v10),
        (v5 & 1) == 0))
  {
    v7 = v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
    swift_beginAccess();
    sub_1A905DC3C(v7, (uint64_t)v10);
    v8 = v11;
    v9 = v12;
    __swift_project_boxed_opaque_existential_1(v10, (uint64_t)v11);
    (*(void (**)(_QWORD, uint64_t, ValueMetadata *, unint64_t))(v9 + 88))(a1 & 1, a2, v8, v9);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  }
  return result;
}

id SyncKeysRepository.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SyncKeysRepository.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SyncKeysRepository.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SyncKeysRepository.isNonFollowedShowsSyncDirty.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  LOBYTE(v1) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  swift_endAccess();
  return v1 & 1;
}

uint64_t SyncKeysRepository.isNonFollowedShowsSyncDirty.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v4, v5);
  return swift_endAccess();
}

uint64_t sub_1A9169B3C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)v3, v4);
  LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  result = swift_endAccess();
  *a2 = v3 & 1;
  return result;
}

uint64_t sub_1A9169BC4(unsigned __int8 *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v4, v5);
  return swift_endAccess();
}

void (*SyncKeysRepository.isNonFollowedShowsSyncDirty.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = v5[3];
  v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  swift_endAccess();
  *((_BYTE *)v3 + 40) = v5 & 1;
  return sub_1A9169CE8;
}

void sub_1A9169CE8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(unsigned __int8 *)(*(_QWORD *)a1 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24) + *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v4, v5);
  swift_endAccess();
  free(v1);
}

uint64_t SyncKeysRepository.isInterestSyncDirty.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  LOBYTE(v1) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  swift_endAccess();
  return v1 & 1;
}

uint64_t SyncKeysRepository.isInterestSyncDirty.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, v4, v5);
  return swift_endAccess();
}

uint64_t sub_1A9169F98@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)v3, v4);
  LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  result = swift_endAccess();
  *a2 = v3 & 1;
  return result;
}

uint64_t sub_1A916A020(unsigned __int8 *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(v2, v4, v5);
  return swift_endAccess();
}

void (*SyncKeysRepository.isInterestSyncDirty.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = v5[3];
  v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
  swift_endAccess();
  *((_BYTE *)v3 + 40) = v5 & 1;
  return sub_1A916A144;
}

void sub_1A916A144(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(unsigned __int8 *)(*(_QWORD *)a1 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24) + *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(v2, v4, v5);
  swift_endAccess();
  free(v1);
}

uint64_t SyncKeysRepository.isPlaylistSyncDirty.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  LOBYTE(v1) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
  swift_endAccess();
  return v1 & 1;
}

uint64_t SyncKeysRepository.isPlaylistSyncDirty.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 64))(a1, v4, v5);
  return swift_endAccess();
}

uint64_t sub_1A916A3F4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)v3, v4);
  LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 56))(v4, v5);
  result = swift_endAccess();
  *a2 = v3 & 1;
  return result;
}

uint64_t sub_1A916A47C(unsigned __int8 *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 64))(v2, v4, v5);
  return swift_endAccess();
}

void (*SyncKeysRepository.isPlaylistSyncDirty.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = v5[3];
  v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 56))(v6, v7);
  swift_endAccess();
  *((_BYTE *)v3 + 40) = v5 & 1;
  return sub_1A916A5A0;
}

void sub_1A916A5A0(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(unsigned __int8 *)(*(_QWORD *)a1 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24) + *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 64))(v2, v4, v5);
  swift_endAccess();
  free(v1);
}

uint64_t static SyncKeysRepository.shouldSyncInReadOnlyMode.getter()
{
  char v0;
  char v2[24];
  ValueMetadata *v3;
  unint64_t v4;

  if ((isRunningUnitTests() & 1) != 0 || !objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod))
  {
    v0 = 0;
  }
  else
  {
    v3 = &type metadata for Podcasts;
    v4 = sub_1A90A4238();
    v2[0] = 32;
    v0 = sub_1A93F7500();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
  }
  return v0 & 1;
}

uint64_t SyncKeysRepository.subscriptionsSyncVersion(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1A905DC3C(v3, (uint64_t)v8);
  v4 = v9;
  v5 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 96))(a1, v4, v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  return v6;
}

uint64_t SyncKeysRepository.updateSubscriptionsSyncVersion(for:newValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v7 = v3 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1A905DC3C(v7, (uint64_t)v11);
  v8 = v12;
  v9 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 104))(a1, a2, a3, v8, v9);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
}

uint64_t SyncKeysRepository.resetSubscriptionsSyncVersion(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1A905DC3C(v3, (uint64_t)v7);
  v4 = v8;
  v5 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 112))(a1, v4, v5);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t SyncKeysRepository.isBookmarksSyncDirty(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1A905DC3C(v3, (uint64_t)v7);
  v4 = v8;
  v5 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  LOBYTE(a1) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 120))(a1, v4, v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  return a1 & 1;
}

uint64_t SyncKeysRepository.markBookmarksSyncDirty(_:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v5 = v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1A905DC3C(v5, (uint64_t)v9);
  v6 = v10;
  v7 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 128))(a1, a2, v6, v7);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
}

Swift::Void __swiftcall SyncKeysRepository.markInterestSyncDirty(_:)(Swift::Bool a1)
{
  uint64_t v1;
  _BOOL8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  v2 = a1;
  v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1A905DC3C(v3, (uint64_t)v6);
  v4 = v7;
  v5 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(_BOOL8, uint64_t, uint64_t))(v5 + 280))(v2, v4, v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
}

uint64_t SyncKeysRepository.nonFollowedShowsSyncVersion.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 184))(v2, v3);
  swift_endAccess();
  return v4;
}

uint64_t SyncKeysRepository.nonFollowedShowsSyncVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v7 = *(_QWORD *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 192))(a1, a2, v6, v7);
  return swift_endAccess();
}

uint64_t sub_1A916B0BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 184))(v4, v5);
  v8 = v7;
  result = swift_endAccess();
  *a2 = v6;
  a2[1] = v8;
  return result;
}

uint64_t sub_1A916B144(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 192);
  swift_bridgeObjectRetain();
  v7(v2, v3, v5, v6);
  return swift_endAccess();
}

void (*SyncKeysRepository.nonFollowedShowsSyncVersion.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[5] = v1;
  v3[6] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = v5[3];
  v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 184))(v6, v7);
  v10 = v9;
  swift_endAccess();
  v3[3] = v8;
  v3[4] = v10;
  return sub_1A916B280;
}

void sub_1A916B280(uint64_t a1, char a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v3 = *(void **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 24);
  v8 = *(_QWORD *)(v6 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v6, v7);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 192);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v9(v4, v5, v7, v8);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9(v4, v5, v7, v8);
    swift_endAccess();
  }
  free(v3);
}

uint64_t SyncKeysRepository.interestSyncVersion.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 232))(v2, v3);
  swift_endAccess();
  return v4;
}

uint64_t SyncKeysRepository.interestSyncVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v7 = *(_QWORD *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 240))(a1, a2, v6, v7);
  return swift_endAccess();
}

uint64_t sub_1A916B5E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 232))(v4, v5);
  v8 = v7;
  result = swift_endAccess();
  *a2 = v6;
  a2[1] = v8;
  return result;
}

uint64_t sub_1A916B668(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 240);
  swift_bridgeObjectRetain();
  v7(v2, v3, v5, v6);
  return swift_endAccess();
}

void (*SyncKeysRepository.interestSyncVersion.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[5] = v1;
  v3[6] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = v5[3];
  v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 232))(v6, v7);
  v10 = v9;
  swift_endAccess();
  v3[3] = v8;
  v3[4] = v10;
  return sub_1A916B7A4;
}

void sub_1A916B7A4(uint64_t a1, char a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v3 = *(void **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 24);
  v8 = *(_QWORD *)(v6 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v6, v7);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 240);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v9(v4, v5, v7, v8);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9(v4, v5, v7, v8);
    swift_endAccess();
  }
  free(v3);
}

uint64_t SyncKeysRepository.podcastsDomainVersion.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 208))(v2, v3);
  swift_endAccess();
  return v4;
}

uint64_t SyncKeysRepository.podcastsDomainVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v7 = *(_QWORD *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 216))(a1, a2, v6, v7);
  return swift_endAccess();
}

uint64_t sub_1A916BB04@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 208))(v4, v5);
  v8 = v7;
  result = swift_endAccess();
  *a2 = v6;
  a2[1] = v8;
  return result;
}

uint64_t sub_1A916BB8C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 216);
  swift_bridgeObjectRetain();
  v7(v2, v3, v5, v6);
  return swift_endAccess();
}

void (*SyncKeysRepository.podcastsDomainVersion.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[5] = v1;
  v3[6] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = v5[3];
  v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 208))(v6, v7);
  v10 = v9;
  swift_endAccess();
  v3[3] = v8;
  v3[4] = v10;
  return sub_1A916BCC8;
}

void sub_1A916BCC8(uint64_t a1, char a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v3 = *(void **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 24);
  v8 = *(_QWORD *)(v6 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v6, v7);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 216);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v9(v4, v5, v7, v8);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9(v4, v5, v7, v8);
    swift_endAccess();
  }
  free(v3);
}

uint64_t SyncKeysRepository.isLibrarySyncEnabled.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  LOBYTE(v1) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 136))(v2, v3);
  swift_endAccess();
  return v1 & 1;
}

uint64_t SyncKeysRepository.isLibrarySyncEnabled.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 144))(a1, v4, v5);
  return swift_endAccess();
}

uint64_t sub_1A916BFC8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)v3, v4);
  LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 136))(v4, v5);
  result = swift_endAccess();
  *a2 = v3 & 1;
  return result;
}

uint64_t sub_1A916C050(unsigned __int8 *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 144))(v2, v4, v5);
  return swift_endAccess();
}

void (*SyncKeysRepository.isLibrarySyncEnabled.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = v5[3];
  v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 136))(v6, v7);
  swift_endAccess();
  *((_BYTE *)v3 + 40) = v5 & 1;
  return sub_1A916C174;
}

void sub_1A916C174(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(unsigned __int8 *)(*(_QWORD *)a1 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24) + *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 144))(v2, v4, v5);
  swift_endAccess();
  free(v1);
}

uint64_t SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 160))(v2, v3);
  swift_endAccess();
  return v4;
}

uint64_t sub_1A916C27C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 160))(v4, v5);
  LOBYTE(v4) = v7;
  result = swift_endAccess();
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1A916C30C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  v3 = *((unsigned __int8 *)a1 + 8);
  v4 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 168))(v2, v3, v5, v6);
  return swift_endAccess();
}

uint64_t SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2 & 1;
  v5 = v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v7 = *(_QWORD *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 168))(a1, v4, v6, v7);
  return swift_endAccess();
}

void (*SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[5] = v1;
  v3[6] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = v5[3];
  v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 160))(v6, v7);
  v10 = v9;
  swift_endAccess();
  v3[3] = v8;
  *((_BYTE *)v3 + 32) = v10 & 1;
  return sub_1A916C4D8;
}

void sub_1A916C4D8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 168))(v2, v3, v5, v6);
  swift_endAccess();
  free(v1);
}

uint64_t SyncKeysRepository.interestLastSyncTimestamp.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 256))(v2, v3);
  swift_endAccess();
  return v4;
}

uint64_t sub_1A916C5E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 256))(v4, v5);
  LOBYTE(v4) = v7;
  result = swift_endAccess();
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1A916C678(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  v3 = *((unsigned __int8 *)a1 + 8);
  v4 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 264))(v2, v3, v5, v6);
  return swift_endAccess();
}

uint64_t SyncKeysRepository.interestLastSyncTimestamp.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2 & 1;
  v5 = v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v7 = *(_QWORD *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 264))(a1, v4, v6, v7);
  return swift_endAccess();
}

void (*SyncKeysRepository.interestLastSyncTimestamp.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[5] = v1;
  v3[6] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = v5[3];
  v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 256))(v6, v7);
  v10 = v9;
  swift_endAccess();
  v3[3] = v8;
  *((_BYTE *)v3 + 32) = v10 & 1;
  return sub_1A916C844;
}

void sub_1A916C844(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 264))(v2, v3, v5, v6);
  swift_endAccess();
  free(v1);
}

double SyncKeysRepository.subscriptionsLastSyncTimestamp(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  char v7;
  double v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1A905DC3C(v3, (uint64_t)v10);
  v4 = v11;
  v5 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v6 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 336))(a1, v4, v5));
  if ((v7 & 1) != 0)
    v8 = 0.0;
  else
    v8 = v6;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  return v8;
}

uint64_t SyncKeysRepository.updateSubscriptionsLastSyncTimestamp(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1A905DC3C(v3, (uint64_t)v7);
  v4 = v8;
  v5 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 344))(a1, v4, v5);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t SyncKeysRepository.resetSubscriptionsLastSyncTimestamp(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1A905DC3C(v3, (uint64_t)v7);
  v4 = v8;
  v5 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 352))(a1, v4, v5);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t method lookup function for SyncKeysRepository()
{
  return swift_lookUpClassMethod();
}

void NSUserDefaults.fairPlayVersion.setter()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v2 = (id)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setValue_forKey_, v1, v2);

}

void (*NSUserDefaults.fairPlayVersion.modify(uint64_t a1))(void **a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  NSUserDefaults.fairPlayVersion.getter((BOOL *)(a1 + 8));
  return sub_1A916CE48;
}

void sub_1A916CE48(void **a1)
{
  void *v1;
  void *v2;
  id v3;

  v1 = *a1;
  v3 = (id)sub_1A93F8010();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setValue_forKey_, v3, v2);

}

uint64_t NSUserDefaults.isFairPlayV2Enabled.getter()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A90A4348();
  if (v0 != 2)
    return v0 & 1;
  v1 = qword_1EEAB8A98;
  v2 = unk_1EEAB8AA0;
  swift_bridgeObjectRetain();
  LOBYTE(v1) = sub_1A90A427C(v1, v2, 1);
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1A916CF54@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  char v5;

  result = sub_1A90A4348();
  if (result == 2)
  {
    v3 = qword_1EEAB8A98;
    v4 = unk_1EEAB8AA0;
    swift_bridgeObjectRetain();
    v5 = sub_1A90A427C(v3, v4, 1);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v5 = result & 1;
  }
  *a1 = v5 & 1;
  return result;
}

void sub_1A916CFCC(uint64_t a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;

  v2 = *a2;
  v3 = (void *)sub_1A93F8400();
  swift_bridgeObjectRetain();
  v4 = (id)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);

}

void NSUserDefaults.isFairPlayV2Enabled.setter()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1A93F8400();
  swift_bridgeObjectRetain();
  v2 = (id)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setValue_forKey_, v1, v2);

}

void (*NSUserDefaults.isFairPlayV2Enabled.modify(_QWORD *a1))(void **a1)
{
  uint64_t v1;
  _BYTE *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = sub_1A90A4348();
  if (v3 == 2)
  {
    v4 = qword_1EEAB8A98;
    v5 = unk_1EEAB8AA0;
    swift_bridgeObjectRetain();
    v6 = sub_1A90A427C(v4, v5, 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = v3 & 1;
  }
  *v2 = v6 & 1;
  return sub_1A916D150;
}

void sub_1A916D150(void **a1)
{
  void *v1;
  void *v2;
  id v3;

  v1 = *a1;
  v3 = (id)sub_1A93F8400();
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setValue_forKey_, v3, v2);

}

id NSUserDefaults.fairPlayMigrationRetryCount.getter()
{
  void *v0;
  void *v1;
  id v2;

  swift_bridgeObjectRetain();
  v1 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_integerForKey_, v1);

  return v2;
}

void sub_1A916D240(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  v2 = (void *)sub_1A93F8694();
  swift_bridgeObjectRetain();
  v3 = (id)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setValue_forKey_, v2, v3);

}

void NSUserDefaults.fairPlayMigrationRetryCount.setter()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1A93F8694();
  swift_bridgeObjectRetain();
  v2 = (id)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setValue_forKey_, v1, v2);

}

void sub_1A916D34C(_BYTE *a1@<X8>)
{
  BOOL v2;

  NSUserDefaults.fairPlayVersion.getter(&v2);
  *a1 = v2;
}

void sub_1A916D384()
{
  NSUserDefaults.fairPlayVersion.setter();
}

char *keypath_get_selector_fairPlayMigrationRetryCount()
{
  return sel_fairPlayMigrationRetryCount;
}

id sub_1A916D3CC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_fairPlayMigrationRetryCount);
  *a2 = result;
  return result;
}

id sub_1A916D3FC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFairPlayMigrationRetryCount_, *a1);
}

unint64_t EpisodeUnavailableReason.init(rawValue:)(unint64_t a1)
{
  return sub_1A916D45C(a1);
}

unint64_t sub_1A916D42C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1A916D45C(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_1A916D45C(unint64_t result)
{
  if (result > 0xE)
    return 0;
  return result;
}

unint64_t sub_1A916D470()
{
  unint64_t result;

  result = qword_1EEAB8AC8;
  if (!qword_1EEAB8AC8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeUnavailableReason, &type metadata for EpisodeUnavailableReason);
    atomic_store(result, (unint64_t *)&qword_1EEAB8AC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeUnavailableReason()
{
  return &type metadata for EpisodeUnavailableReason;
}

uint64_t EpisodeStateController.stateTransitionRules.getter()
{
  return swift_bridgeObjectRetain();
}

_QWORD *EpisodeStateController.__allocating_init(dataSources:transitionRules:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  swift_allocObject();
  v4 = sub_1A90853A4(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t EpisodeStateController.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1A906659C(v0 + qword_1ED2A2EC8);
  return v0;
}

uint64_t EpisodeStateController.__deallocating_deinit()
{
  EpisodeStateController.deinit();
  return swift_deallocClassInstance();
}

uint64_t EpisodeStateController.stateMachine(for:)()
{
  return sub_1A9087480();
}

{
  return sub_1A9087480();
}

uint64_t method lookup function for EpisodeStateController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EpisodeStateController.__allocating_init(dataSources:transitionRules:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of EpisodeStateController.refreshState(for:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v3 + 224))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of EpisodeStateController.refreshStates(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t sub_1A916D5D0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A916D5F4()
{
  swift_release();
  return swift_deallocObject();
}

double sub_1A916D618@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  double result;
  __int128 v24;
  _BYTE v26[176];
  _OWORD v27[2];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[19];
  uint64_t v37;
  _BYTE v38[176];
  _BYTE v39[184];

  v8 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1A916D818(a2, (uint64_t)v39);
  v37 = a1;
  sub_1A916D818((uint64_t)v39, (uint64_t)v38);
  if ((a3 & 1) != 0)
  {
    v12 = 1;
  }
  else
  {
    v13 = *(_QWORD *)(a1 + 16);
    if (v13)
    {
      v14 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v15 = *(_QWORD *)(v9 + 72);
      swift_bridgeObjectRetain();
      v16 = v13 - 1;
      do
      {
        v17 = v16;
        sub_1A916E4A0(v14, (uint64_t)v11);
        v12 = v11[*(int *)(v8 + 100)];
        sub_1A916E4E4((uint64_t)v11);
        if ((v12 & 1) != 0)
          break;
        v16 = v17 - 1;
        v14 += v15;
      }
      while (v17);
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = 0;
    }
  }
  v18 = v37;
  sub_1A916D818((uint64_t)v38, (uint64_t)v26);
  *(_QWORD *)&v27[0] = v18;
  sub_1A916D818((uint64_t)v26, (uint64_t)v27 + 8);
  v36[18] = v12;
  v19 = v35;
  *(_OWORD *)(a4 + 128) = v34;
  *(_OWORD *)(a4 + 144) = v19;
  *(_OWORD *)(a4 + 160) = *(_OWORD *)v36;
  v20 = v31;
  *(_OWORD *)(a4 + 64) = v30;
  *(_OWORD *)(a4 + 80) = v20;
  v21 = v33;
  *(_OWORD *)(a4 + 96) = v32;
  *(_OWORD *)(a4 + 112) = v21;
  v22 = v27[1];
  *(_OWORD *)a4 = v27[0];
  *(_OWORD *)(a4 + 16) = v22;
  result = *(double *)&v28;
  v24 = v29;
  *(_OWORD *)(a4 + 32) = v28;
  *(_OWORD *)(a4 + 48) = v24;
  *(_DWORD *)(a4 + 175) = *(_DWORD *)&v36[15];
  return result;
}

uint64_t PodcastsMediaLibrary.Response.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastsMediaLibrary.Response.nextRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[176];

  sub_1A916D818(v1 + 8, (uint64_t)v4);
  sub_1A916D818((uint64_t)v4, a1);
  return sub_1A912C764((uint64_t)v4);
}

uint64_t sub_1A916D818(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PodcastsMediaLibrary.Response.subscriptionRequired.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 178);
}

uint64_t _s8ResponseVwxx(uint64_t a1)
{
  uint64_t result;
  void *v3;

  result = swift_bridgeObjectRelease();
  v3 = *(void **)(a1 + 48);
  if (v3 != (void *)1)
  {
    sub_1A912C6B4(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));

    result = swift_bridgeObjectRelease();
    if (*(_BYTE *)(a1 + 152) != 2)
      return sub_1A90531EC(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_BYTE *)(a1 + 136));
  }
  return result;
}

uint64_t _s8ResponseVwcp(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  id v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(void **)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v5 == (void *)1)
  {
    v6 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v6;
    *(_OWORD *)(a1 + 162) = *(_OWORD *)(a2 + 162);
    v7 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v7;
    v8 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v8;
    v9 = *(_OWORD *)(a2 + 24);
    *v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v9;
    v10 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v10;
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 8);
    v12 = *(_QWORD *)(a2 + 16);
    v13 = *(_QWORD *)(a2 + 24);
    v14 = *(_QWORD *)(a2 + 32);
    v15 = *(_BYTE *)(a2 + 40);
    sub_1A912C880(v11, v12, v13, v14, v15);
    *(_QWORD *)(a1 + 8) = v11;
    *(_QWORD *)(a1 + 16) = v12;
    *(_QWORD *)(a1 + 24) = v13;
    *(_QWORD *)(a1 + 32) = v14;
    *(_BYTE *)(a1 + 40) = v15;
    v16 = *(_QWORD *)(a2 + 56);
    v17 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 48) = v5;
    *(_QWORD *)(a1 + 56) = v16;
    *(_QWORD *)(a1 + 64) = v17;
    v18 = *(unsigned __int16 *)(a2 + 152) | (*(unsigned __int8 *)(a2 + 154) << 16);
    LODWORD(v13) = *(_WORD *)(a2 + 152);
    v19 = v5;
    swift_bridgeObjectRetain();
    if ((_DWORD)v13 == 2)
    {
      v20 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = v20;
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_DWORD *)(a1 + 151) = *(_DWORD *)(a2 + 151);
      v21 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v21;
    }
    else
    {
      v22 = *(_QWORD *)(a2 + 72);
      v30 = *(_QWORD *)(a2 + 80);
      v23 = *(_QWORD *)(a2 + 88);
      v24 = *(_QWORD *)(a2 + 96);
      v25 = *(_QWORD *)(a2 + 104);
      v26 = *(_QWORD *)(a2 + 112);
      v27 = *(_QWORD *)(a2 + 120);
      v28 = *(_QWORD *)(a2 + 128);
      v31 = *(_BYTE *)(a2 + 136);
      sub_1A90519B4(v22, v30, v23, v24, v25, v26, v27, v28, v31);
      *(_QWORD *)(a1 + 72) = v22;
      *(_QWORD *)(a1 + 80) = v30;
      *(_QWORD *)(a1 + 88) = v23;
      *(_QWORD *)(a1 + 96) = v24;
      *(_QWORD *)(a1 + 104) = v25;
      *(_QWORD *)(a1 + 112) = v26;
      *(_QWORD *)(a1 + 120) = v27;
      *(_QWORD *)(a1 + 128) = v28;
      *(_BYTE *)(a1 + 136) = v31;
      *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_WORD *)(a1 + 152) = v18;
      *(_BYTE *)(a1 + 154) = BYTE2(v18);
    }
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
  }
  *(_BYTE *)(a1 + 178) = *(_BYTE *)(a2 + 178);
  return a1;
}

uint64_t _s8ResponseVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  void *v28;
  id v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  void *v44;
  void *v45;
  id v46;
  _OWORD *v47;
  _OWORD *v48;
  int v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v84;
  char v85;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48) != 1)
  {
    if (v6 == 1)
    {
      sub_1A916DE94(a1 + 8);
      v16 = *(_OWORD *)(a2 + 24);
      v15 = *(_OWORD *)(a2 + 40);
      *v4 = *v5;
      *(_OWORD *)(a1 + 24) = v16;
      *(_OWORD *)(a1 + 40) = v15;
      v17 = *(_OWORD *)(a2 + 104);
      v19 = *(_OWORD *)(a2 + 56);
      v18 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v17;
      *(_OWORD *)(a1 + 56) = v19;
      *(_OWORD *)(a1 + 72) = v18;
      v21 = *(_OWORD *)(a2 + 136);
      v20 = *(_OWORD *)(a2 + 152);
      v22 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 162) = *(_OWORD *)(a2 + 162);
      *(_OWORD *)(a1 + 136) = v21;
      *(_OWORD *)(a1 + 152) = v20;
      *(_OWORD *)(a1 + 120) = v22;
      goto LABEL_17;
    }
    v34 = *(_QWORD *)(a2 + 8);
    v35 = *(_QWORD *)(a2 + 16);
    v36 = *(_QWORD *)(a2 + 24);
    v37 = *(_QWORD *)(a2 + 32);
    v38 = *(_BYTE *)(a2 + 40);
    sub_1A912C880(v34, v35, v36, v37, v38);
    v39 = *(_QWORD *)(a1 + 8);
    v40 = *(_QWORD *)(a1 + 16);
    v41 = *(_QWORD *)(a1 + 24);
    v42 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(a1 + 8) = v34;
    *(_QWORD *)(a1 + 16) = v35;
    *(_QWORD *)(a1 + 24) = v36;
    *(_QWORD *)(a1 + 32) = v37;
    v43 = *(_BYTE *)(a1 + 40);
    *(_BYTE *)(a1 + 40) = v38;
    sub_1A912C6B4(v39, v40, v41, v42, v43);
    v44 = *(void **)(a1 + 48);
    v45 = *(void **)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v45;
    v46 = v45;

    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v47 = (_OWORD *)(a1 + 72);
    v48 = (_OWORD *)(a2 + 72);
    v49 = *(unsigned __int8 *)(a2 + 152);
    if (*(_BYTE *)(a1 + 152) != 2)
    {
      if (v49 == 2)
      {
        sub_1A916DE60(a1 + 72);
        v62 = *(_OWORD *)(a2 + 88);
        *v47 = *v48;
        *(_OWORD *)(a1 + 88) = v62;
        v64 = *(_OWORD *)(a2 + 120);
        v63 = *(_OWORD *)(a2 + 136);
        v65 = *(_OWORD *)(a2 + 104);
        *(_DWORD *)(a1 + 151) = *(_DWORD *)(a2 + 151);
        *(_OWORD *)(a1 + 120) = v64;
        *(_OWORD *)(a1 + 136) = v63;
        *(_OWORD *)(a1 + 104) = v65;
        goto LABEL_16;
      }
      v66 = *(_QWORD *)(a2 + 72);
      v67 = *(_QWORD *)(a2 + 80);
      v68 = *(_QWORD *)(a2 + 88);
      v69 = *(_QWORD *)(a2 + 96);
      v70 = *(_QWORD *)(a2 + 104);
      v71 = *(_QWORD *)(a2 + 112);
      v72 = *(_QWORD *)(a2 + 120);
      v73 = *(_QWORD *)(a2 + 128);
      v85 = *(_BYTE *)(a2 + 136);
      sub_1A90519B4(v66, v67, v68, v69, v70, v71, v72, v73, v85);
      v74 = *(_QWORD *)(a1 + 72);
      v75 = *(_QWORD *)(a1 + 80);
      v76 = *(_QWORD *)(a1 + 88);
      v77 = *(_QWORD *)(a1 + 96);
      v78 = *(_QWORD *)(a1 + 104);
      v79 = *(_QWORD *)(a1 + 112);
      v80 = *(_QWORD *)(a1 + 120);
      v81 = *(_QWORD *)(a1 + 128);
      v82 = *(_BYTE *)(a1 + 136);
      *(_QWORD *)(a1 + 72) = v66;
      *(_QWORD *)(a1 + 80) = v67;
      *(_QWORD *)(a1 + 88) = v68;
      *(_QWORD *)(a1 + 96) = v69;
      *(_QWORD *)(a1 + 104) = v70;
      *(_QWORD *)(a1 + 112) = v71;
      *(_QWORD *)(a1 + 120) = v72;
      *(_QWORD *)(a1 + 128) = v73;
      *(_BYTE *)(a1 + 136) = v85;
      sub_1A90531EC(v74, v75, v76, v77, v78, v79, v80, v81, v82);
LABEL_15:
      *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
      *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
      *(_BYTE *)(a1 + 154) = *(_BYTE *)(a2 + 154);
      goto LABEL_16;
    }
    if (v49 == 2)
    {
      v50 = *(_OWORD *)(a2 + 88);
      *v47 = *v48;
      *(_OWORD *)(a1 + 88) = v50;
      v51 = *(_OWORD *)(a2 + 104);
      v52 = *(_OWORD *)(a2 + 120);
      v53 = *(_OWORD *)(a2 + 136);
      *(_DWORD *)(a1 + 151) = *(_DWORD *)(a2 + 151);
      *(_OWORD *)(a1 + 120) = v52;
      *(_OWORD *)(a1 + 136) = v53;
      *(_OWORD *)(a1 + 104) = v51;
      goto LABEL_16;
    }
LABEL_11:
    v54 = *(_QWORD *)(a2 + 72);
    v55 = *(_QWORD *)(a2 + 80);
    v56 = *(_QWORD *)(a2 + 88);
    v57 = *(_QWORD *)(a2 + 96);
    v58 = *(_QWORD *)(a2 + 104);
    v59 = *(_QWORD *)(a2 + 112);
    v60 = *(_QWORD *)(a2 + 120);
    v61 = *(_QWORD *)(a2 + 128);
    v84 = *(_BYTE *)(a2 + 136);
    sub_1A90519B4(v54, v55, v56, v57, v58, v59, v60, v61, v84);
    *(_QWORD *)(a1 + 72) = v54;
    *(_QWORD *)(a1 + 80) = v55;
    *(_QWORD *)(a1 + 88) = v56;
    *(_QWORD *)(a1 + 96) = v57;
    *(_QWORD *)(a1 + 104) = v58;
    *(_QWORD *)(a1 + 112) = v59;
    *(_QWORD *)(a1 + 120) = v60;
    *(_QWORD *)(a1 + 128) = v61;
    *(_BYTE *)(a1 + 136) = v84;
    goto LABEL_15;
  }
  if (v6 != 1)
  {
    v23 = *(_QWORD *)(a2 + 8);
    v24 = *(_QWORD *)(a2 + 16);
    v25 = *(_QWORD *)(a2 + 24);
    v26 = *(_QWORD *)(a2 + 32);
    v27 = *(_BYTE *)(a2 + 40);
    sub_1A912C880(v23, v24, v25, v26, v27);
    *(_QWORD *)(a1 + 8) = v23;
    *(_QWORD *)(a1 + 16) = v24;
    *(_QWORD *)(a1 + 24) = v25;
    *(_QWORD *)(a1 + 32) = v26;
    *(_BYTE *)(a1 + 40) = v27;
    v28 = *(void **)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v28;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    LODWORD(v24) = *(unsigned __int8 *)(a2 + 152);
    v29 = v28;
    swift_bridgeObjectRetain();
    if ((_DWORD)v24 == 2)
    {
      v30 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v30;
      v31 = *(_OWORD *)(a2 + 104);
      v32 = *(_OWORD *)(a2 + 120);
      v33 = *(_OWORD *)(a2 + 136);
      *(_DWORD *)(a1 + 151) = *(_DWORD *)(a2 + 151);
      *(_OWORD *)(a1 + 120) = v32;
      *(_OWORD *)(a1 + 136) = v33;
      *(_OWORD *)(a1 + 104) = v31;
LABEL_16:
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
      goto LABEL_17;
    }
    goto LABEL_11;
  }
  v7 = *v5;
  v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v8;
  *v4 = v7;
  v9 = *(_OWORD *)(a2 + 56);
  v10 = *(_OWORD *)(a2 + 72);
  v11 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 56) = v9;
  *(_OWORD *)(a1 + 72) = v10;
  v12 = *(_OWORD *)(a2 + 120);
  v13 = *(_OWORD *)(a2 + 136);
  v14 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 162) = *(_OWORD *)(a2 + 162);
  *(_OWORD *)(a1 + 136) = v13;
  *(_OWORD *)(a1 + 152) = v14;
  *(_OWORD *)(a1 + 120) = v12;
LABEL_17:
  *(_BYTE *)(a1 + 178) = *(_BYTE *)(a2 + 178);
  return a1;
}

uint64_t sub_1A916DE60(uint64_t a1)
{
  destroy for EpisodeListType(a1);
  return a1;
}

uint64_t sub_1A916DE94(uint64_t a1)
{
  _s7RequestVwxx(a1);
  return a1;
}

__n128 __swift_memcpy179_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_DWORD *)(a1 + 175) = *(_DWORD *)((char *)a2 + 175);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t _s8ResponseVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  void *v16;
  uint64_t v17;
  int v18;
  int v19;
  __int128 v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48) == 1)
    goto LABEL_4;
  v4 = *(_QWORD *)(a2 + 48);
  if (v4 != 1)
  {
    v10 = *(_BYTE *)(a2 + 40);
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(_QWORD *)(a1 + 16);
    v13 = *(_QWORD *)(a1 + 24);
    v14 = *(_QWORD *)(a1 + 32);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    v15 = *(_BYTE *)(a1 + 40);
    *(_BYTE *)(a1 + 40) = v10;
    sub_1A912C6B4(v11, v12, v13, v14, v15);
    v16 = *(void **)(a1 + 48);
    *(_QWORD *)(a1 + 48) = v4;

    v17 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v17;
    swift_bridgeObjectRelease();
    if (*(_BYTE *)(a1 + 152) != 2)
    {
      v18 = *(unsigned __int16 *)(a2 + 152);
      v19 = v18 | (*(unsigned __int8 *)(a2 + 154) << 16);
      if (v18 != 2)
      {
        v22 = *(_BYTE *)(a2 + 136);
        v23 = *(_QWORD *)(a1 + 72);
        v24 = *(_QWORD *)(a1 + 80);
        v25 = *(_QWORD *)(a1 + 88);
        v26 = *(_QWORD *)(a1 + 96);
        v27 = *(_QWORD *)(a1 + 104);
        v28 = *(_QWORD *)(a1 + 112);
        v29 = *(_QWORD *)(a1 + 120);
        v30 = *(_QWORD *)(a1 + 128);
        v31 = *(_BYTE *)(a1 + 136);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        *(_BYTE *)(a1 + 136) = v22;
        sub_1A90531EC(v23, v24, v25, v26, v27, v28, v29, v30, v31);
        *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
        *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
        *(_BYTE *)(a1 + 152) = v19 & 1;
        *(_BYTE *)(a1 + 153) = BYTE1(v19) & 1;
        *(_BYTE *)(a1 + 154) = BYTE2(v19) & 1;
        goto LABEL_10;
      }
      sub_1A916DE60(a1 + 72);
    }
    v20 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v20;
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_DWORD *)(a1 + 151) = *(_DWORD *)(a2 + 151);
    v21 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v21;
LABEL_10:
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
    goto LABEL_11;
  }
  sub_1A916DE94(a1 + 8);
LABEL_4:
  v5 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v5;
  *(_OWORD *)(a1 + 162) = *(_OWORD *)(a2 + 162);
  v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v6;
  v7 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v7;
  v8 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v8;
  v9 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v9;
LABEL_11:
  *(_BYTE *)(a1 + 178) = *(_BYTE *)(a2 + 178);
  return a1;
}

uint64_t _s8ResponseVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 179))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s8ResponseVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 178) = 0;
    *(_WORD *)(result + 176) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 179) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 179) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsMediaLibrary.Response()
{
  return &type metadata for PodcastsMediaLibrary.Response;
}

uint64_t sub_1A916E1A0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD v25[2];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[2];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _OWORD v45[3];

  v3 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[9];
  v44 = a1[8];
  v45[0] = v7;
  *(_OWORD *)((char *)v45 + 10) = *(__int128 *)((char *)a1 + 154);
  v8 = a1[5];
  v40 = a1[4];
  v41 = v8;
  v9 = a1[7];
  v42 = a1[6];
  v43 = v9;
  v10 = a1[1];
  v36 = *a1;
  v37 = v10;
  v11 = a1[3];
  v38 = a1[2];
  v39 = v11;
  v12 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v12)
  {
    v13 = *(_QWORD *)v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v14 = *(_QWORD *)(v4 + 72);
    v25[1] = *(_QWORD *)v1;
    swift_bridgeObjectRetain();
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1A916E4A0(v13, (uint64_t)v6);
      if (v6[56] == 1)
      {
        sub_1A916E4E4((uint64_t)v6);
      }
      else
      {
        *(_QWORD *)&v26 = *((_QWORD *)v6 + 6);
        sub_1A915997C();
        v16 = sub_1A93F8B38();
        v18 = v17;
        sub_1A916E4E4((uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v15 = sub_1A907ECFC(0, v15[2] + 1, 1, v15);
        v20 = v15[2];
        v19 = v15[3];
        if (v20 >= v19 >> 1)
          v15 = sub_1A907ECFC((_QWORD *)(v19 > 1), v20 + 1, 1, v15);
        v15[2] = v20 + 1;
        v21 = &v15[2 * v20];
        v21[4] = v16;
        v21[5] = v18;
      }
      v13 += v14;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v34 = v44;
  v35[0] = v45[0];
  *(_OWORD *)((char *)v35 + 10) = *(_OWORD *)((char *)v45 + 10);
  v30 = v40;
  v31 = v41;
  v32 = v42;
  v33 = v43;
  v26 = v36;
  v27 = v37;
  v28 = v38;
  v29 = v39;
  sub_1A938CF04();
  v23 = sub_1A916E3C0(v22, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1A916E3C0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v2 = a2[2];
  if (!v2)
    return 0;
  v4 = a1[2];
  if (!v4)
    return v4;
  result = a2[4];
  v7 = a2[5];
  if (result != a1[4] || v7 != a1[5])
  {
    result = sub_1A93F90C0();
    if ((result & 1) == 0)
      return 0;
  }
  if (v2 == 1)
    return 1;
  v9 = 0;
  v10 = 1;
  while (v2 != v10)
  {
    if (v4 == v10)
      return v4;
    result = a2[v9 + 6];
    if (result != a1[v9 + 6] || a2[v9 + 7] != a1[v9 + 7])
    {
      result = sub_1A93F90C0();
      if ((result & 1) == 0)
        return v10;
    }
    ++v10;
    v9 += 2;
    if (v2 == v10)
      return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A916E4A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A916E4E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A916E520()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = type metadata accessor for Loadable(0, AssociatedTypeWitness, v1, v2);
  v4 = MEMORY[0x1E0C80A78](v3);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))((char *)&v7 - v5, 2, 2, AssociatedTypeWitness, v4);
  return sub_1A93F7A58();
}

uint64_t sub_1A916E5D4()
{
  return swift_deallocObject();
}

uint64_t sub_1A916E5E4()
{
  return sub_1A916E520();
}

uint64_t sub_1A916E5EC()
{
  return swift_deallocObject();
}

void sub_1A916E5FC(uint64_t a1, __int16 a2)
{
  char v2;
  uint64_t v3;

  v2 = a2;
  v3 = HIBYTE(a2);
  sub_1A93F92DC();
  sub_1A93F92F4();
  if ((v2 & 1) == 0)
    sub_1A93F930C();
  __asm { BR              X9 }
}

uint64_t sub_1A916E688()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A916E700()
{
  uint64_t v0;

  sub_1A916E5FC(*(_QWORD *)v0, *(unsigned __int8 *)(v0 + 8) | (*(unsigned __int8 *)(v0 + 9) << 8));
}

void sub_1A916E71C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 9);
  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_1A93F92F4();
  }
  else
  {
    sub_1A93F92F4();
    sub_1A93F930C();
  }
  __asm { BR              X9 }
}

uint64_t sub_1A916E79C()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A916E804()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 9);
  sub_1A93F92DC();
  sub_1A93F92F4();
  if (v1 != 1)
    sub_1A93F930C();
  __asm { BR              X9 }
}

uint64_t sub_1A916E88C()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A916E904(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  char v5;

  v3 = *(_BYTE *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 9);
  if ((v3 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return;
LABEL_8:
    sub_1A92F84C0(v4);
    return;
  }
  if (*(_QWORD *)a1 == *(_QWORD *)a2)
    v5 = *(_BYTE *)(a2 + 8);
  else
    v5 = 1;
  if ((v5 & 1) == 0)
    goto LABEL_8;
}

uint64_t LibraryInterestStateDataSource.delegate.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1A914CCCC(&v4);
  v2 = v4;
  os_unfair_lock_unlock(v1);
  return v2;
}

uint64_t sub_1A916E998(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v2;
  uint64_t v3;

  v2 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 16);
  swift_unknownObjectRetain();
  os_unfair_lock_lock(v2);
  sub_1A91702F4(v3);
  os_unfair_lock_unlock(v2);
  return swift_unknownObjectRelease();
}

uint64_t LibraryInterestStateDataSource.delegate.setter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1A914C8AC(v2, sub_1A916FC70);
  os_unfair_lock_unlock(v1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A916EA80(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  const void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[8];

  v6 = sub_1A93F7D58();
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7DB8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1[7] = a3;
  result = swift_unknownObjectWeakAssign();
  if (a2)
  {
    if (a1[5])
    {
      v17 = a1[2];
      aBlock[4] = sub_1A9170350;
      aBlock[5] = a1;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1A908A91C;
      aBlock[3] = &block_descriptor_6;
      v16 = _Block_copy(aBlock);
      swift_retain();
      sub_1A93F7D88();
      aBlock[7] = MEMORY[0x1E0DEE9D8];
      sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
      sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
      sub_1A93F8B5C();
      v14 = v16;
      MEMORY[0x1AF412598](0, v12, v8, v16);
      _Block_release(v14);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return swift_release();
    }
  }
  return result;
}

void (*LibraryInterestStateDataSource.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9[2];

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = *(os_unfair_lock_s **)(v1 + 24);
  v3[2] = v1;
  v3[3] = v4;
  v5 = v4 + 4;
  os_unfair_lock_lock(v4 + 4);
  sub_1A914CCCC(v9);
  v3[4] = 0;
  v6 = v9[0];
  v7 = v9[1];
  os_unfair_lock_unlock(v5);
  *v3 = v6;
  v3[1] = v7;
  return sub_1A916ED04;
}

void sub_1A916ED04(uint64_t a1, char a2)
{
  void *v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(void **)a1;
  v3 = *(os_unfair_lock_s **)(*(_QWORD *)a1 + 24);
  v4 = v3 + 4;
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRetain();
    os_unfair_lock_lock(v4);
    sub_1A914C8AC(v5, sub_1A9170384);
    os_unfair_lock_unlock(v4);
    swift_unknownObjectRelease();
  }
  else
  {
    os_unfair_lock_lock(v3 + 4);
    sub_1A914C8AC(v6, sub_1A9170384);
    os_unfair_lock_unlock(v4);
  }
  swift_unknownObjectRelease();
  free(v2);
}

_QWORD *LibraryInterestStateDataSource.__allocating_init(contextProvider:)(void *a1)
{
  _QWORD *v2;

  swift_allocObject();
  v2 = sub_1A916FC8C(a1);
  swift_unknownObjectRelease();
  return v2;
}

_QWORD *LibraryInterestStateDataSource.init(contextProvider:)(void *a1)
{
  _QWORD *v1;

  v1 = sub_1A916FC8C(a1);
  swift_unknownObjectRelease();
  return v1;
}

id sub_1A916EE50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  id result;
  double v6;
  __int16 v7;
  __int16 v8;

  v4 = objc_msgSend(a1, sel_adamID);
  result = objc_msgSend(a1, sel_interestValue);
  if (v6 == 1.0)
    v7 = 2;
  else
    v7 = 3;
  if (v6 == 0.0)
    v8 = 1;
  else
    v8 = v7;
  if (v6 == -1.0)
    v8 = 0;
  *(_QWORD *)a2 = v4;
  *(_WORD *)(a2 + 8) = v8 << 8;
  return result;
}

uint64_t sub_1A916EED0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;

  v3 = *(_BYTE *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 9);
  if ((v3 & 1) == 0)
  {
    if (*(_QWORD *)a1 == *(_QWORD *)a2)
      v6 = *(_BYTE *)(a2 + 8);
    else
      v6 = 1;
    if ((v6 & 1) != 0)
      goto LABEL_3;
LABEL_8:
    sub_1A92F84C0(v4);
    v5 = v7 ^ 1;
    return v5 & 1;
  }
  if (*(_BYTE *)(a2 + 8))
    goto LABEL_8;
LABEL_3:
  v5 = 1;
  return v5 & 1;
}

uint64_t sub_1A916EF28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_1A915A260(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

void sub_1A916EF6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  void *v9;
  id v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = sub_1A93F7E18();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (os_unfair_lock_s *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v2 + 16);
  *(_QWORD *)&v8->_os_unfair_lock_opaque = v9;
  (*(void (**)(os_unfair_lock_s *, _QWORD, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4, v6);
  v10 = v9;
  LOBYTE(v9) = sub_1A93F7E3C();
  v11 = (*(uint64_t (**)(os_unfair_lock_s *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) != 0)
  {
    MEMORY[0x1E0C80A78](v11);
    *(&v15 - 2) = v2;
    *(&v15 - 1) = a1;
    v13 = v12 + 4;
    os_unfair_lock_lock(v12 + 4);
    sub_1A9170338(&v16);
    v14 = v16;
    os_unfair_lock_unlock(v13);
    sub_1A916F5FC(v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
    os_unfair_lock_unlock(v8);
    __break(1u);
  }
}

uint64_t sub_1A916F09C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  _QWORD *v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t result;
  uint64_t v58;
  uint64_t v60;
  int64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64[3];
  uint64_t v65;

  v65 = MEMORY[0x1E0DEE9E8];
  v5 = *(_QWORD *)(a1 + 64);
  if (*(_QWORD *)(a2 + 16) <= *(_QWORD *)(v5 + 16) >> 3)
  {
    v64[0] = *(_QWORD *)(a1 + 64);
    swift_bridgeObjectRetain();
    sub_1A9270A84(a2);
    v6 = v5;
  }
  else
  {
    swift_bridgeObjectRetain();
    v6 = sub_1A91F2A24(a2, v5);
  }
  v7 = 0;
  v8 = v6 + 56;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v6 + 56);
  v58 = a1;
  v12 = (uint64_t *)(a1 + 72);
  v13 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v15 = v14 | (v7 << 6);
LABEL_25:
    v19 = *(_QWORD *)(v6 + 48) + 16 * v15;
    if ((*(_BYTE *)(v19 + 8) & 1) == 0)
    {
      v20 = *(_QWORD *)v19;
      sub_1A90920C8(v64, *(_QWORD *)v19);
      swift_beginAccess();
      v21 = sub_1A9093570(v20);
      if ((v22 & 1) != 0)
      {
        v23 = v21;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v25 = *v12;
        v63 = *v12;
        *v12 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A9307BC4();
          v25 = v63;
        }
        sub_1A91A9C2C(v23, v25);
        *v12 = v25;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
    }
  }
  v16 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (v16 >= v13)
    goto LABEL_29;
  v17 = *(_QWORD *)(v8 + 8 * v16);
  ++v7;
  if (v17)
    goto LABEL_24;
  v7 = v16 + 1;
  if (v16 + 1 >= v13)
    goto LABEL_29;
  v17 = *(_QWORD *)(v8 + 8 * v7);
  if (v17)
    goto LABEL_24;
  v7 = v16 + 2;
  if (v16 + 2 >= v13)
    goto LABEL_29;
  v17 = *(_QWORD *)(v8 + 8 * v7);
  if (v17)
  {
LABEL_24:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v7 << 6);
    goto LABEL_25;
  }
  v18 = v16 + 3;
  if (v18 < v13)
  {
    v17 = *(_QWORD *)(v8 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        v7 = v18 + 1;
        if (__OFADD__(v18, 1))
          break;
        if (v7 >= v13)
          goto LABEL_29;
        v17 = *(_QWORD *)(v8 + 8 * v7);
        ++v18;
        if (v17)
          goto LABEL_24;
      }
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    v7 = v18;
    goto LABEL_24;
  }
LABEL_29:
  swift_release();
  v62 = v12;
  if (*(_QWORD *)(*(_QWORD *)(v58 + 64) + 16) <= *(_QWORD *)(a2 + 16) >> 3)
  {
    v64[0] = a2;
    swift_bridgeObjectRetain();
    v28 = swift_bridgeObjectRetain();
    sub_1A9270A84(v28);
    swift_bridgeObjectRelease();
    v27 = v64[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    v26 = swift_bridgeObjectRetain();
    v27 = sub_1A91F2A24(v26, a2);
    swift_bridgeObjectRelease();
  }
  v29 = 0;
  v60 = v27 + 56;
  v30 = 1 << *(_BYTE *)(v27 + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  v32 = v31 & *(_QWORD *)(v27 + 56);
  v61 = (unint64_t)(v30 + 63) >> 6;
  while (2)
  {
    if (v32)
    {
      v33 = __clz(__rbit64(v32));
      v32 &= v32 - 1;
      v34 = v33 | (v29 << 6);
      goto LABEL_53;
    }
    v35 = v29 + 1;
    if (__OFADD__(v29, 1))
      goto LABEL_68;
    if (v35 >= v61)
    {
LABEL_65:
      swift_release();
      *(_QWORD *)(v58 + 64) = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v55 = sub_1A90BF298(v65);
      result = swift_bridgeObjectRelease();
      *a3 = v55;
      return result;
    }
    v36 = *(_QWORD *)(v60 + 8 * v35);
    ++v29;
    if (v36)
      goto LABEL_52;
    v29 = v35 + 1;
    if (v35 + 1 >= v61)
      goto LABEL_65;
    v36 = *(_QWORD *)(v60 + 8 * v29);
    if (v36)
      goto LABEL_52;
    v29 = v35 + 2;
    if (v35 + 2 >= v61)
      goto LABEL_65;
    v36 = *(_QWORD *)(v60 + 8 * v29);
    if (v36)
    {
LABEL_52:
      v32 = (v36 - 1) & v36;
      v34 = __clz(__rbit64(v36)) + (v29 << 6);
LABEL_53:
      v38 = *(_QWORD *)(v27 + 48) + 16 * v34;
      if ((*(_BYTE *)(v38 + 8) & 1) != 0)
        continue;
      v39 = *(_QWORD *)v38;
      v40 = *(_BYTE *)(v38 + 9);
      sub_1A90920C8(v64, *(_QWORD *)v38);
      swift_beginAccess();
      v41 = swift_isUniquelyReferenced_nonNull_native();
      v42 = (_QWORD *)*v62;
      *v62 = 0x8000000000000000;
      v44 = sub_1A9093570(v39);
      v45 = v42[2];
      v46 = (v43 & 1) == 0;
      v47 = v45 + v46;
      if (__OFADD__(v45, v46))
      {
        __break(1u);
        goto LABEL_67;
      }
      v48 = v43;
      if (v42[3] < v47)
      {
        sub_1A92FF2EC(v47, v41);
        v49 = sub_1A9093570(v39);
        if ((v48 & 1) != (v50 & 1))
          goto LABEL_72;
        v44 = v49;
        v51 = v42;
        if ((v48 & 1) == 0)
          goto LABEL_61;
LABEL_35:
        *(_BYTE *)(v51[7] + v44) = v40;
LABEL_36:
        *v62 = (uint64_t)v51;
        swift_bridgeObjectRelease();
        swift_endAccess();
        continue;
      }
      if ((v41 & 1) != 0)
      {
        v51 = v42;
        if ((v43 & 1) != 0)
          goto LABEL_35;
      }
      else
      {
        sub_1A9307BC4();
        v51 = v42;
        if ((v48 & 1) != 0)
          goto LABEL_35;
      }
LABEL_61:
      v51[(v44 >> 6) + 8] |= 1 << v44;
      *(_QWORD *)(v51[6] + 8 * v44) = v39;
      *(_BYTE *)(v51[7] + v44) = v40;
      v52 = v51[2];
      v53 = __OFADD__(v52, 1);
      v54 = v52 + 1;
      if (v53)
        goto LABEL_69;
      v51[2] = v54;
      goto LABEL_36;
    }
    break;
  }
  v37 = v35 + 3;
  if (v37 >= v61)
    goto LABEL_65;
  v36 = *(_QWORD *)(v60 + 8 * v37);
  if (v36)
  {
    v29 = v37;
    goto LABEL_52;
  }
  while (1)
  {
    v29 = v37 + 1;
    if (__OFADD__(v37, 1))
      break;
    if (v29 >= v61)
      goto LABEL_65;
    v36 = *(_QWORD *)(v60 + 8 * v29);
    ++v37;
    if (v36)
      goto LABEL_52;
  }
LABEL_71:
  __break(1u);
LABEL_72:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

void sub_1A916F5FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14[2];

  v3 = sub_1A93F7E18();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v1 + 16);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x1E0DEF740], v3, v5);
  v9 = v8;
  LOBYTE(v8) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v8 & 1) != 0)
  {
    if (*(_QWORD *)(a1 + 16))
    {
      v10 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 24) + 16);
      os_unfair_lock_lock(v10);
      sub_1A914CCCC(v14);
      v11 = v14[0];
      v12 = v14[1];
      os_unfair_lock_unlock(v10);
      if (v11)
      {
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(a1, ObjectType, v12);
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1A916F710(uint64_t a1)
{
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1A9170358(&v4);
  v2 = v4;
  os_unfair_lock_unlock(v1);
  sub_1A916F5FC(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A916F780@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1A90BF394(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

Swift::Void __swiftcall LibraryInterestStateDataSource.startObservingChanges()()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1A914C8AC(v2, sub_1A9170130);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1A916F83C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (!*(_QWORD *)(result + 40))
  {
    v1 = result;
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8AD0);
    sub_1A9066D74(&qword_1EEAB8AD8, &qword_1EEAB8AD0, MEMORY[0x1E0C95D90]);
    v2 = sub_1A93F7D04();
    swift_release();
    swift_release();
    *(_QWORD *)(v1 + 40) = v2;
    return swift_release();
  }
  return result;
}

uint64_t sub_1A916F914(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A916EF6C(v1);
    return swift_release();
  }
  return result;
}

uint64_t LibraryInterestStateDataSource.state(for:)()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  unsigned __int8 v4;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1A9170148((char *)&v4);
  v2 = v4;
  os_unfair_lock_unlock(v1);
  return v2;
}

uint64_t sub_1A916F9DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 72);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_1A9093570(a2), (v8 & 1) != 0))
    v9 = *(_BYTE *)(*(_QWORD *)(v6 + 56) + v7);
  else
    v9 = 4;
  *a3 = v9;
  return swift_endAccess();
}

uint64_t LibraryInterestStateDataSource.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  sub_1A914CAE4(v0 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LibraryInterestStateDataSource.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  sub_1A914CAE4(v0 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1A916FB00()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1A91702F4(v2);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1A916FB54()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1A91702F4(v2);
  os_unfair_lock_unlock(v1);
  return swift_unknownObjectRelease();
}

void (*sub_1A916FBC4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = LibraryInterestStateDataSource.delegate.modify(v2);
  return sub_1A914C880;
}

uint64_t sub_1A916FC08()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  unsigned __int8 v3;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1A91702B8(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_1A916FC70()
{
  uint64_t v0;

  return sub_1A916EA80(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

_QWORD *sub_1A916FC8C(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v29 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A59B8);
  v4 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  v32 = v4;
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F885C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F8808();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v10);
  v12 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v12);
  v28 = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A93F7D88();
  v33 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v11, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF8D0], v6);
  v13 = (void *)sub_1A93F888C();
  v1[2] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 0;
  v1[3] = v14;
  v1[5] = 0;
  v1[7] = 0;
  swift_unknownObjectWeakInit();
  v15 = MEMORY[0x1E0DEE9E0];
  v1[8] = MEMORY[0x1E0DEE9E8];
  v1[9] = v15;
  v16 = objc_msgSend((id)objc_opt_self(), sel_truePredicate);
  v17 = objc_msgSend(v29, sel_importContext);
  v18 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v19 = v13;
  v20 = (void *)sub_1A93F8010();
  v21 = objc_msgSend(v18, sel_initWithEntityName_, v20);

  objc_msgSend(v21, sel_setPredicate_, v16);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v22 = (void *)sub_1A93F82F8();
  objc_msgSend(v21, sel_setSortDescriptors_, v22);

  objc_msgSend(v21, sel_setFetchBatchSize_, 0x7FFFFFFFFFFFFFFFLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5810);
  swift_allocObject();
  *((_QWORD *)&v27 + 1) = sub_1A905920C;
  *(_QWORD *)&v27 = 0;
  v33 = sub_1A90C411C(0xD00000000000001ELL, 0x80000001A9409B50, (uint64_t)v21, (uint64_t)v17, (uint64_t)v19, (uint64_t)sub_1A916EE50, 0, (uint64_t)sub_1A916EED0, v27, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5710);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5B18);
  sub_1A9066D74(&qword_1ED2A5708, &qword_1ED2A5710, (uint64_t)&protocol conformance descriptor for FetchedResultsListPublisher<A, B>);
  v23 = v30;
  sub_1A93F7B84();
  swift_release();
  sub_1A9066D74(&qword_1ED2A59B0, &qword_1ED2A59B8, MEMORY[0x1E0C95950]);
  v24 = v31;
  v25 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v24);
  v2[4] = v25;
  return v2;
}

uint64_t sub_1A9170130()
{
  uint64_t v0;

  return sub_1A916F83C(v0);
}

uint64_t sub_1A9170148@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1A916F9DC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t dispatch thunk of InterestStateDataSourceProtocol.startObservingChanges()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InterestStateDataSourceProtocol.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InterestStateDataSourceProtocol.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of InterestStateDataSourceProtocol.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of InterestStateDataSourceProtocol.state(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t type metadata accessor for LibraryInterestStateDataSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for LibraryInterestStateDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LibraryInterestStateDataSource.__allocating_init(contextProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for LibraryInterestStateDataSource.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryInterestStateDataSource.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryInterestStateDataSource.State()
{
  return &type metadata for LibraryInterestStateDataSource.State;
}

unint64_t sub_1A9170274()
{
  unint64_t result;

  result = qword_1ED2A57D8;
  if (!qword_1ED2A57D8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9409BA8, &type metadata for LibraryInterestStateDataSource.State);
    atomic_store(result, (unint64_t *)&qword_1ED2A57D8);
  }
  return result;
}

_QWORD *sub_1A91702B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
    *a1 = v5;
  return result;
}

uint64_t sub_1A91702F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A914C8AC(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1A917030C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9170330(uint64_t *a1)
{
  return sub_1A916F914(a1);
}

uint64_t sub_1A9170338@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A916F09C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1A9170350()
{
  uint64_t v0;

  return sub_1A916F710(v0);
}

uint64_t sub_1A9170358@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A916F780(a1);
}

uint64_t sub_1A9170370@<X0>(char *a1@<X8>)
{
  return sub_1A9170148(a1);
}

uint64_t sub_1A9170384()
{
  return sub_1A916FC70();
}

uint64_t sub_1A9170398()
{
  uint64_t *v0;

  sub_1A9085818(v0[2]);
  sub_1A9085818(v0[4]);
  sub_1A9085818(v0[6]);
  sub_1A9085818(v0[8]);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FairPlayEpisodeDataFetchingMock()
{
  return objc_opt_self();
}

uint64_t sub_1A91703F4()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 16);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1A9170420()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 32);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1A917044C()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 64);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1A9170478()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 48);
  if (v1)
    return v1();
  return result;
}

uint64_t FeedUpdateRequestCollection.updatingKeys.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_retain();
}

uint64_t sub_1A91704B0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = *v0;
  v3 = sub_1A93F7D58();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1A93F7DB8();
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v10 = v1[5];
  v11 = *(_QWORD *)(v2 + 80);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA180);
  aBlock[0] = nullsub_1(v10, v11, v12, *(_QWORD *)(v2 + 88));
  v13 = sub_1A93F7F38();
  swift_bridgeObjectRetain();
  MEMORY[0x1AF414014](MEMORY[0x1E0DE9ED0], v13);
  v14 = sub_1A93F8688();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v1;
  aBlock[4] = sub_1A9171818;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_7_0;
  v16 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v4, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v9, v6, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  return swift_release();
}

uint64_t sub_1A9170734()
{
  char v0;
  uint64_t result;

  sub_1A93F79BC();
  v0 = sub_1A93F8634();
  result = swift_bridgeObjectRelease();
  if ((v0 & 1) == 0)
    return sub_1A93F79B0();
  return result;
}

uint64_t FeedUpdateRequestCollection.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  FeedUpdateRequestCollection.init()();
  return v0;
}

_QWORD *FeedUpdateRequestCollection.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v16;
  uint64_t v17;

  v1 = v0;
  v2 = *v0;
  v3 = sub_1A93F8808();
  MEMORY[0x1E0C80A78](v3);
  v16 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1A93F885C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v2 + 80);
  v11 = sub_1A93F8370();
  if (MEMORY[0x1AF4120DC](v11, v10))
  {
    v12 = sub_1A9171408(v11, v10, *(_QWORD *)(v2 + 88));
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x1E0DEE9E8];
  }
  sub_1A93F867C();
  sub_1A93F79D4();
  v17 = v12;
  v13 = sub_1A93F79E0();
  v1[3] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 0;
  v1[4] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA180);
  v1[5] = sub_1A93F7EB4();
  sub_1A9066C6C();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF8D8], v6);
  sub_1A93F7D88();
  v17 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  sub_1A93F8B5C();
  v1[6] = sub_1A93F888C();
  ReadOnlyCurrentValueSubject.init(_:)(v13, &v17);
  v1[2] = v17;
  swift_retain();
  return v1;
}

BOOL sub_1A9170A9C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  _BOOL8 v2;
  BOOL v4;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  sub_1A9171710(&v4);
  v2 = v4;
  os_unfair_lock_unlock(v1);
  return v2;
}

uint64_t sub_1A9170B0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, BOOL *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t updated;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  BOOL *v27;
  _QWORD v28[8];

  v27 = a4;
  v22 = a3;
  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 80);
  v24 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v26 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for FeedUpdateRequest();
  v10 = *(_QWORD *)(updated - 8);
  MEMORY[0x1E0C80A78](updated);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = a1[5];
  swift_bridgeObjectRetain();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA180);
  v15 = *(_QWORD *)(v6 + 88);
  v25 = a2;
  v23 = v15;
  MEMORY[0x1AF411C8C](v28, a2, v13, v7, v14);
  swift_bridgeObjectRelease();
  if (v28[0])
    v16 = v28[0];
  else
    v16 = MEMORY[0x1E0DEE9D8];
  sub_1A90913C0(v22, (uint64_t)v12);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_1A91182FC(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
  v18 = *(_QWORD *)(v16 + 16);
  v17 = *(_QWORD *)(v16 + 24);
  if (v18 >= v17 >> 1)
    v16 = sub_1A91182FC(v17 > 1, v18 + 1, 1, v16);
  *(_QWORD *)(v16 + 16) = v18 + 1;
  sub_1A9171820((uint64_t)v12, v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v26, v25, v7);
  v28[7] = v16;
  swift_beginAccess();
  sub_1A93F7F5C();
  swift_bridgeObjectRetain();
  sub_1A93F7F80();
  swift_endAccess();
  sub_1A91704B0();
  v19 = *(_QWORD *)(v16 + 16);
  result = swift_bridgeObjectRelease();
  *v27 = v19 == 1;
  return result;
}

uint64_t sub_1A9170D5C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  sub_1A917172C(&v4);
  v2 = v4;
  os_unfair_lock_unlock(v1);
  return v2;
}

uint64_t sub_1A9170DC8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v6 = *a1;
  swift_beginAccess();
  v7 = a1[5];
  v8 = *(_QWORD *)(v6 + 80);
  swift_bridgeObjectRetain();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA180);
  MEMORY[0x1AF411C8C](&v12, a2, v7, v8, v9, *(_QWORD *)(v6 + 88));
  result = swift_bridgeObjectRelease();
  v11 = v12;
  if (!v12)
    v11 = MEMORY[0x1E0DEE9D8];
  *a3 = v11;
  return result;
}

void sub_1A9170E78()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  sub_1A914C8AC(v2, (uint64_t (*)(void))sub_1A9171744);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1A9170ED8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t updated;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v6 = *a1;
  swift_beginAccess();
  v7 = a1[5];
  v8 = *(_QWORD *)(v6 + 80);
  swift_bridgeObjectRetain();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA180);
  MEMORY[0x1AF411C8C](&v18, a2, v7, v8, v9, *(_QWORD *)(v6 + 88));
  swift_bridgeObjectRelease();
  v10 = v18;
  if (v18)
  {
    v11 = *(_QWORD *)(v18 + 16);
    if (v11)
    {
      v12 = v11 - 1;
      updated = type metadata accessor for FeedUpdateRequest();
      v14 = *(_QWORD *)(updated - 8);
      sub_1A90913C0(v10+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v12, a3);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, updated);
    }
    else
    {
      v17 = type metadata accessor for FeedUpdateRequest();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 1, 1, v17);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v15 = type metadata accessor for FeedUpdateRequest();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
}

uint64_t sub_1A9171020(uint64_t a1, void *a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  os_unfair_lock_s *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[7];

  v7 = sub_1A93F7D58();
  v22 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1A93F7DB8();
  v10 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(os_unfair_lock_s **)(v3 + 32);
  v23 = v3;
  v24 = a1;
  v14 = v13 + 4;
  os_unfair_lock_lock(v13 + 4);
  sub_1A917175C(aBlock);
  v15 = aBlock[0];
  os_unfair_lock_unlock(v14);
  sub_1A9066C6C();
  v16 = (void *)sub_1A93F8868();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  *(_QWORD *)(v17 + 24) = a2;
  v18 = a3 & 1;
  *(_BYTE *)(v17 + 32) = a3 & 1;
  aBlock[4] = sub_1A9098DA8;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_7;
  v19 = _Block_copy(aBlock);
  sub_1A90903E4(a2, v18);
  swift_release();
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v12, v9, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v21);
}

uint64_t sub_1A9171270@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2AA180);
  sub_1A93F7F5C();
  sub_1A93F7F14();
  swift_endAccess();
  result = sub_1A91704B0();
  v3 = v4;
  if (!v4)
    v3 = MEMORY[0x1E0DEE9D8];
  *a1 = v3;
  return result;
}

uint64_t FeedUpdateRequestCollection.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t FeedUpdateRequestCollection.__deallocating_deinit()
{
  FeedUpdateRequestCollection.deinit();
  return swift_deallocClassInstance();
}

_QWORD *sub_1A9171390@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (!v2)
    *a2 = v5;
  return result;
}

_QWORD *sub_1A91713CC@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1A9171408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, unint64_t, uint64_t);
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = a1;
  v45 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v44 = (char *)&v37 - v9;
  v37 = v10;
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v37 - v13;
  if (MEMORY[0x1AF4120B8](v12))
  {
    sub_1A93F8C58();
    v15 = sub_1A93F8C4C();
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9E8];
  }
  v40 = MEMORY[0x1AF4120DC](v5, a2);
  if (!v40)
    return v15;
  v16 = 0;
  v43 = v15 + 56;
  v38 = v14;
  v39 = v5;
  while (1)
  {
    v17 = sub_1A93F8388();
    sub_1A93F8340();
    if ((v17 & 1) != 0)
    {
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, v5+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v16, a2);
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
        goto LABEL_20;
    }
    else
    {
      result = sub_1A93F8CB8();
      if (v37 != 8)
        goto LABEL_23;
      v46 = result;
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, (unint64_t)&v46, a2);
      swift_unknownObjectRelease();
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
      {
LABEL_20:
        __break(1u);
        return v15;
      }
    }
    v21 = v45;
    v41 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v42 = v20;
    v41(v44, v14, a2);
    v22 = sub_1A93F7FA4();
    v23 = -1 << *(_BYTE *)(v15 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
    v27 = 1 << v24;
    v28 = *(_QWORD *)(v21 + 72);
    if (((1 << v24) & v26) != 0)
    {
      v29 = ~v23;
      do
      {
        v18(v7, *(_QWORD *)(v15 + 48) + v28 * v24, a2);
        v30 = a3;
        v31 = sub_1A93F8004();
        v32 = *(void (**)(char *, uint64_t))(v45 + 8);
        v32(v7, a2);
        if ((v31 & 1) != 0)
        {
          v32(v44, a2);
          a3 = v30;
          v14 = v38;
          v5 = v39;
          goto LABEL_7;
        }
        v24 = (v24 + 1) & v29;
        v25 = v24 >> 6;
        v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
        v27 = 1 << v24;
        a3 = v30;
      }
      while ((v26 & (1 << v24)) != 0);
      v14 = v38;
      v5 = v39;
    }
    v33 = v44;
    *(_QWORD *)(v43 + 8 * v25) = v27 | v26;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(*(_QWORD *)(v15 + 48) + v28 * v24, v33, a2);
    v35 = *(_QWORD *)(v15 + 16);
    v19 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v19)
      break;
    *(_QWORD *)(v15 + 16) = v36;
LABEL_7:
    v16 = v42;
    if (v42 == v40)
      return v15;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1A9171710@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_1A9170B0C(*(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1A917172C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A9170DC8(*(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1A9171744@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9170ED8(*(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1A917175C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A9171270(a1);
}

uint64_t sub_1A9171774()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A90BE694(*(id *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t method lookup function for FeedUpdateRequestCollection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedUpdateRequestCollection.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of FeedUpdateRequestCollection.insert(request:forKey:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of FeedUpdateRequestCollection.requests(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of FeedUpdateRequestCollection.latestRequest(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of FeedUpdateRequestCollection.deleteAndCompleteRequests(for:result:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v3 + 192))(a1, a2, a3 & 1);
}

uint64_t sub_1A91717EC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9171818()
{
  return sub_1A9170734();
}

uint64_t sub_1A9171820(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for FeedUpdateRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 32))(a2, a1, updated);
  return a2;
}

uint64_t sub_1A9171864(void *a1, uint64_t *a2, int a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v23;

  HIDWORD(v23) = a3;
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  v9 = a2[4];
  v10 = a2[5];
  v11 = (char *)sub_1A93F7E18();
  v12 = *((_QWORD *)v11 - 1);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void **)&v3[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_workQueue];
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, char *, double))(v12 + 104))(v15, *MEMORY[0x1E0DEF740], v11, v13);
  v17 = v16;
  LOBYTE(v16) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, char *))(v12 + 8))(v15, v11);
  if ((v16 & 1) != 0)
  {
    v11 = &v3[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_bufferedSignatures];
    swift_beginAccess();
    v15 = *(_QWORD **)v11;
    v3 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v11 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  v15 = sub_1A9118310(0, v15[2] + 1, 1, v15);
  *(_QWORD *)v11 = v15;
LABEL_3:
  v20 = v15[2];
  v19 = v15[3];
  if (v20 >= v19 >> 1)
  {
    v15 = sub_1A9118310((_QWORD *)(v19 > 1), v20 + 1, 1, v15);
    *(_QWORD *)v11 = v15;
  }
  v15[2] = v20 + 1;
  v21 = &v15[8 * v20];
  v21[4] = v3;
  v21[5] = v5;
  v21[6] = v6;
  v21[7] = v7;
  v21[8] = v8;
  v21[9] = v9;
  v21[10] = v10;
  *((_BYTE *)v21 + 88) = BYTE4(v23);
  return swift_endAccess();
}

uint64_t sub_1A9171A14()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1A905FD54(v0 + 48, &qword_1ED2A90E8);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShazamMatcher()
{
  return objc_opt_self();
}

uint64_t sub_1A9171A80()
{
  uint64_t v0;
  __int128 v2;
  __int128 v3;
  uint64_t v4;

  swift_beginAccess();
  if (*(_QWORD *)(v0 + 72))
  {
    sub_1A905DC3C(v0 + 48, (uint64_t)&v2);
    __swift_project_boxed_opaque_existential_1(&v2, *((uint64_t *)&v3 + 1));
    sub_1A93F78B4();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v2);
  }
  v4 = 0;
  v2 = 0u;
  v3 = 0u;
  swift_beginAccess();
  sub_1A91730C4((uint64_t)&v2, v0 + 48);
  return swift_endAccess();
}

uint64_t sub_1A9171B30(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  _BYTE v5[40];

  v3 = *v1;
  sub_1A905DC3C((uint64_t)a1, (uint64_t)v5);
  swift_beginAccess();
  sub_1A91730C4((uint64_t)v5, v3 + 48);
  swift_endAccess();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F78E4();
  return sub_1A93F7908();
}

uint64_t sub_1A9171BB8(id *a1)
{
  id v1;

  v1 = *a1;
  sub_1A93F79B0();

  return sub_1A93F78E4();
}

uint64_t sub_1A9171C20()
{
  uint64_t *v0;
  uint64_t v1;
  _OWORD v3[2];
  uint64_t v4;

  v1 = *v0;
  sub_1A93F79A4();
  v4 = 0;
  memset(v3, 0, sizeof(v3));
  swift_beginAccess();
  sub_1A91730C4((uint64_t)v3, v1 + 48);
  return swift_endAccess();
}

uint64_t sub_1A9171C90()
{
  return sub_1A9171A80();
}

uint64_t sub_1A9171CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;

  v24 = a2;
  v25 = a3;
  v23 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8D60);
  v5 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  v22 = v5;
  MEMORY[0x1E0C80A78](v4);
  v20 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8D68);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8D70);
  v19 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (void *)v3[4];
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8D78);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8D80);
  sub_1A9066D74(&qword_1EEAB8D88, &qword_1EEAB8D78, MEMORY[0x1E0C95FB8]);
  sub_1A93F7B30();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1A9066D74(&qword_1EEAB8D90, &qword_1EEAB8D68, MEMORY[0x1E0C95708]);
  swift_retain();
  sub_1A93F7B3C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  v26 = (void *)v3[3];
  v14 = v26;
  type metadata accessor for ShazamMatcher.ThrottledSubscriber();
  sub_1A9066CE8(&qword_1EEAB8D98, 255, (uint64_t (*)(uint64_t))type metadata accessor for ShazamMatcher.ThrottledSubscriber, (uint64_t)&unk_1A9409E28);
  sub_1A93F7764();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v11);
  v26 = (void *)v3[5];
  *(_QWORD *)(swift_allocObject() + 16) = v14;
  v15 = v14;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8DA0);
  sub_1A9066D74((unint64_t *)&unk_1EEAB8DA8, &qword_1EEAB8DA0, MEMORY[0x1E0C95F48]);
  v16 = v20;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  v17 = v21;
  sub_1A93F7764();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v16, v17);
}

id sub_1A9172010@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  __int128 v4;
  __int128 v5;

  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_BYTE *)a1 + 56);
  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a2 = *a1;
  *(_OWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 32) = a1[2];
  *(_QWORD *)(a2 + 48) = v2;
  *(_BYTE *)(a2 + 56) = v3;
  return (id)v4;
}

uint64_t sub_1A9172038()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = result + 48;
    swift_beginAccess();
    if (*(_QWORD *)(v1 + 72))
    {
      sub_1A905DC3C(v2, (uint64_t)&v3);
      __swift_project_boxed_opaque_existential_1(&v3, *((uint64_t *)&v4 + 1));
      sub_1A93F78B4();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v3);
    }
    v5 = 0;
    v3 = 0u;
    v4 = 0u;
    swift_beginAccess();
    sub_1A91730C4((uint64_t)&v3, v2);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A9172118(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  *(_BYTE *)(a1
           + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_isCancelled) = 1;
  v1 = a1
     + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_subscription;
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 24))
  {
    sub_1A905DC3C(v1, (uint64_t)&v3);
    __swift_project_boxed_opaque_existential_1(&v3, *((uint64_t *)&v4 + 1));
    sub_1A93F78B4();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v3);
  }
  v5 = 0;
  v3 = 0u;
  v4 = 0u;
  swift_beginAccess();
  sub_1A91730C4((uint64_t)&v3, v1);
  return swift_endAccess();
}

uint64_t sub_1A91721E0()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  *(_BYTE *)(v0
           + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_isCancelled) = 1;
  v1 = v0
     + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_subscription;
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 24))
  {
    sub_1A905DC3C(v1, (uint64_t)&v3);
    __swift_project_boxed_opaque_existential_1(&v3, *((uint64_t *)&v4 + 1));
    sub_1A93F78B4();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v3);
  }
  v5 = 0;
  v3 = 0u;
  v4 = 0u;
  swift_beginAccess();
  sub_1A91730C4((uint64_t)&v3, v1);
  return swift_endAccess();
}

uint64_t sub_1A91722A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A9171CB0(a1, a2, a3);
}

id sub_1A91722C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BYTE *v5;
  objc_class *ObjectType;
  _OWORD *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_bufferedSignatures] = MEMORY[0x1E0DEE9D8];
  v12 = &v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput];
  *v12 = 0u;
  v12[1] = 0u;
  v12[2] = 0u;
  *(_OWORD *)((char *)v12 + 41) = 0u;
  v13 = &v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_subscription];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_QWORD *)v13 + 4) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_completion] = 1;
  v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_isCancelled] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_session] = a1;
  v14 = &v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_logger];
  v15 = sub_1A93F7698();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a2, v15);
  *(_QWORD *)&v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_workQueue] = a3;
  *(_QWORD *)&v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_inputSubject] = a4;
  *(_QWORD *)&v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_outputSubject] = a5;
  v19.receiver = v5;
  v19.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a2, v15);
  return v17;
}

id _s18PodcastsFoundation25FairPlayValidationManagerC8ResponseCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A917253C()
{
  return type metadata accessor for ShazamMatcher.ThrottledSubscriber();
}

uint64_t type metadata accessor for ShazamMatcher.ThrottledSubscriber()
{
  uint64_t result;

  result = qword_1EEAB8CD8;
  if (!qword_1EEAB8CD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A9172580()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F7698();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1A9172644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = v0;
  v2 = sub_1A93F7E18();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (uint64_t *)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v1
                + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_workQueue);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x1E0DEF740], v2, v4);
  v8 = v7;
  LOBYTE(v7) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v9 = (uint64_t *)(v1
                 + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_bufferedSignatures);
  swift_beginAccess();
  v10 = *v9;
  if (*(_QWORD *)(*v9 + 16))
  {
    v11 = *(_BYTE *)(v10 + 88);
    v13 = *(_QWORD *)(v10 + 72);
    v12 = *(_QWORD *)(v10 + 80);
    v15 = *(_QWORD *)(v10 + 56);
    v14 = *(_QWORD *)(v10 + 64);
    v16 = *(_QWORD *)(v10 + 40);
    v17 = *(_QWORD *)(v10 + 48);
    v18 = *(id *)(v10 + 32);
    sub_1A9173A38(0, 1);
    swift_endAccess();
    *(_QWORD *)&v39 = v18;
    *((_QWORD *)&v39 + 1) = v16;
    *(_QWORD *)&v40 = v17;
    *((_QWORD *)&v40 + 1) = v15;
    *(_QWORD *)&v41 = v14;
    *((_QWORD *)&v41 + 1) = v13;
    if (v18)
      goto LABEL_4;
  }
  else
  {
    swift_endAccess();
    sub_1A93F79BC();
    v16 = *((_QWORD *)&v39 + 1);
    v18 = (id)v39;
    v15 = *((_QWORD *)&v40 + 1);
    v14 = v41;
    v12 = v42;
    v11 = v43;
    if ((_QWORD)v39)
    {
LABEL_4:
      v19 = *((_QWORD *)&v41 + 1);
      v20 = v40;
      v44 = v16;
      v45 = v40;
      v46 = v15;
      v47 = v14;
      v48 = *((_QWORD *)&v41 + 1);
      v49 = v12;
      v21 = v1
          + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput;
      if (*(_QWORD *)(v1
                     + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput)
        && (v22 = *(_OWORD *)(v1
                            + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput
                            + 24),
            v39 = *(_OWORD *)(v1
                            + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput
                            + 8),
            v40 = v22,
            v41 = *(_OWORD *)(v1
                            + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput
                            + 40),
            (sub_1A93F8724() & 1) != 0))
      {
        sub_1A9172AB4();
      }
      else if ((*(_BYTE *)(v1
                          + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_isCancelled) & 1) == 0)
      {
        v23 = v12;
        v24 = *(void **)v21;
        *(_QWORD *)v21 = v18;
        *(_QWORD *)(v21 + 8) = v16;
        *(_QWORD *)(v21 + 16) = v20;
        *(_QWORD *)(v21 + 24) = v15;
        *(_QWORD *)(v21 + 32) = v14;
        *(_QWORD *)(v21 + 40) = v19;
        v37 = v23;
        *(_QWORD *)(v21 + 48) = v23;
        *(_BYTE *)(v21 + 56) = v11;
        v25 = v18;

        v18 = v25;
        v26 = sub_1A93F7674();
        v27 = sub_1A93F87B4();
        v28 = v27;
        if (os_log_type_enabled(v26, v27))
        {
          v29 = swift_slowAlloc();
          *(_DWORD *)v29 = 134218240;
          v36 = v28;
          sub_1A93F8A24();
          v38 = v30;
          sub_1A93F8AA8();

          *(_WORD *)(v29 + 12) = 2048;
          sub_1A93F8A24();
          v38 = v31;
          sub_1A93F8AA8();

          _os_log_impl(&dword_1A904E000, v26, (os_log_type_t)v36, "Performing match with signature for time range: (start: %f, duration: %f)", (uint8_t *)v29, 0x16u);
          MEMORY[0x1AF41411C](v29, -1, -1);
        }
        else
        {

        }
        objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_session), sel_matchSignature_, v18);
      }

      return;
    }
  }
  v32 = sub_1A93F7674();
  v33 = sub_1A93F879C();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v34 = 0;
    _os_log_impl(&dword_1A904E000, v32, v33, "Unexpectedly encountered no signature for matching", v34, 2u);
    MEMORY[0x1AF41411C](v34, -1, -1);
  }

  sub_1A9172AB4();
}

uint64_t sub_1A9172A1C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _OWORD v5[2];
  uint64_t v6;

  if (a1)
  {
    *(_QWORD *)&v5[0] = a1;
    sub_1A93F7968();
  }
  else
  {
    v2 = *(void **)(v1
                  + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_completion);
    *(_QWORD *)(v1
              + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_completion) = 0;
    sub_1A9173164(v2);
  }
  v6 = 0;
  memset(v5, 0, sizeof(v5));
  v3 = v1
     + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_subscription;
  swift_beginAccess();
  sub_1A91730C4((uint64_t)v5, v3);
  return swift_endAccess();
}

void sub_1A9172AB4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  id v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[3];
  void *v26;
  void (*v27)();
  uint64_t v28;
  __int128 v29;
  uint64_t v30;

  v1 = sub_1A93F7D58();
  v23 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F7DB8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7E18();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (_QWORD *)((char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)&v0[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_workQueue];
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v9 + 104))(v12, *MEMORY[0x1E0DEF740], v8, v10);
  v22[1] = v13;
  LOBYTE(v13) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  if ((v13 & 1) != 0)
  {
    v14 = *(void **)&v0[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_completion];
    if (v14 == (void *)1
      || (v15 = &v0[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_bufferedSignatures],
          swift_beginAccess(),
          *(_QWORD *)(*(_QWORD *)v15 + 16)))
    {
      v16 = (uint64_t)&v0[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_subscription];
      swift_beginAccess();
      sub_1A9173BB0(v16, (uint64_t)&v29);
      if (v30)
      {
        sub_1A905D4AC(&v29, (uint64_t)aBlock);
        __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v26);
        sub_1A93F7908();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
      }
      else
      {
        sub_1A905FD54((uint64_t)&v29, &qword_1ED2A90E8);
        v17 = &v0[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_bufferedSignatures];
        swift_beginAccess();
        if (*(_QWORD *)(*(_QWORD *)v17 + 16))
        {
          v18 = swift_allocObject();
          *(_QWORD *)(v18 + 16) = v0;
          v27 = sub_1A9173BF8;
          v28 = v18;
          aBlock[0] = MEMORY[0x1E0C809B0];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1A908A91C;
          v26 = &block_descriptor_12;
          v19 = _Block_copy(aBlock);
          v20 = v0;
          sub_1A93F7D88();
          v24 = MEMORY[0x1E0DEE9D8];
          sub_1A9066CE8((unint64_t *)&qword_1ED2AD6F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
          sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
          sub_1A93F8B5C();
          MEMORY[0x1AF412598](0, v7, v3, v19);
          _Block_release(v19);
          (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          swift_release();
        }
      }
    }
    else
    {
      aBlock[0] = v14;
      v21 = v14;
      sub_1A93F7968();
      sub_1A9173164(v14);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1A9172E40(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[40];

  v3 = *v1;
  sub_1A905DC3C((uint64_t)a1, (uint64_t)v6);
  v4 = v3
     + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_subscription;
  swift_beginAccess();
  sub_1A91730C4((uint64_t)v6, v4);
  swift_endAccess();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_1A93F7908();
}

uint64_t sub_1A9172ED0()
{
  return sub_1A917369C();
}

uint64_t sub_1A9172EF0(uint64_t *a1)
{
  return sub_1A9172A1C(*a1);
}

uint64_t sub_1A9172F14()
{
  return sub_1A91721E0();
}

void sub_1A9172F98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1AF41420C](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_1A9172AB4();

  }
}

uint64_t sub_1A917305C()
{
  return sub_1A9066CE8(&qword_1EEAB8D48, 255, (uint64_t (*)(uint64_t))type metadata accessor for ShazamMatcher.ThrottledSubscriber, (uint64_t)&unk_1A9409DD8);
}

uint64_t sub_1A917308C()
{
  return MEMORY[0x1E0DEDB38];
}

uint64_t sub_1A9173098(uint64_t a1, uint64_t a2)
{
  return sub_1A9066CE8((unint64_t *)&unk_1EEAB8D50, a2, (uint64_t (*)(uint64_t))type metadata accessor for ShazamMatcher, (uint64_t)&unk_1A9409EC0);
}

uint64_t sub_1A91730C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A90E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A917310C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9173130()
{
  return sub_1A9172038();
}

uint64_t sub_1A9173138()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A917315C()
{
  uint64_t v0;

  return sub_1A9172118(*(_QWORD *)(v0 + 16));
}

void sub_1A9173164(id a1)
{
  if (a1 != (id)1)

}

uint64_t sub_1A9173174(uint64_t (*a1)(void))
{
  uint64_t result;

  result = a1();
  if (result)
    return _swift_stdlib_bridgeErrorToNSError();
  return result;
}

uint64_t sub_1A917319C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A91731D4(a1, a2, a3, (uint64_t (*)(void))sub_1A9118B04, type metadata accessor for StoreFeedUpdater.Update, &qword_1ED2A9660);
}

uint64_t sub_1A91731B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A91731D4(a1, a2, a3, (uint64_t (*)(void))sub_1A91182FC, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest, &qword_1EEAB8DB8);
}

uint64_t sub_1A91731D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  v8 = *v6;
  v9 = *(_QWORD *)(*v6 + 16);
  if (v9 < a2)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v11 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (__OFADD__(v9, v12))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v6 = v8;
  if (!isUniquelyReferenced_nonNull_native || v9 + v12 > *(_QWORD *)(v8 + 24) >> 1)
  {
    v8 = a4();
    *v6 = v8;
  }
  v16 = *(_QWORD *)(a5(0) - 8);
  v17 = v8 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  v18 = *(_QWORD *)(v16 + 72);
  v19 = v17 + v18 * a1;
  swift_arrayDestroy();
  if (!v12)
    goto LABEL_22;
  v20 = *(_QWORD *)(v8 + 16);
  v21 = v20 - a2;
  if (__OFSUB__(v20, a2))
    goto LABEL_30;
  if (v21 < 0)
  {
LABEL_32:
    result = sub_1A93F8E98();
    __break(1u);
    return result;
  }
  v22 = v19 + v18;
  v23 = v17 + v18 * a2;
  if (v19 + v18 < v23 || v22 >= v23 + v21 * v18)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v22 != v23)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  v25 = *(_QWORD *)(v8 + 16);
  v26 = __OFADD__(v25, v12);
  v27 = v25 + v12;
  if (v26)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *(_QWORD *)(v8 + 16) = v27;
LABEL_22:
  if (v18 >= 1)
    sub_1A9064630(a3, v19, a5);
  return sub_1A905FD54(a3, a6);
}

char *sub_1A91733AC(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_1A9119C98(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *(_QWORD *)v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1A93F8E98();
  __break(1u);
  return result;
}

char *sub_1A917352C(uint64_t a1, int64_t a2, char a3, double a4)
{
  char **v4;
  char *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  char *result;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *v4;
  v7 = *((_QWORD *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || v11 > *((_QWORD *)v6 + 3) >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    result = (char *)sub_1A9119EE0(result, v15, 1, v6);
    v6 = result;
  }
  v16 = (uint64_t)&v6[16 * a1 + 32];
  if (!v10)
    goto LABEL_20;
  v17 = *((_QWORD *)v6 + 2);
  v18 = __OFSUB__(v17, a2);
  v19 = v17 - a2;
  if (v18)
    goto LABEL_26;
  if ((v19 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 16);
    v20 = &v6[16 * a2 + 32];
    if ((char *)(v16 + 16) != v20 || result >= &v20[16 * v19])
      result = (char *)memmove(result, v20, 16 * v19);
    v21 = *((_QWORD *)v6 + 2);
    v18 = __OFADD__(v21, v10);
    v22 = v21 + v10;
    if (!v18)
    {
      *((_QWORD *)v6 + 2) = v22;
LABEL_20:
      *(_BYTE *)v16 = a3;
      *(double *)(v16 + 8) = a4;
      *v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A917369C()
{
  char *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  _QWORD v14[2];
  _QWORD aBlock[6];

  v1 = sub_1A93F7D58();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *(_QWORD *)&v0[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_workQueue];
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_1A9174564;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_8;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  sub_1A93F7D88();
  v14[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CE8((unint64_t *)&qword_1ED2AD6F0, 255, v2, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v9, v5, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  return sub_1A93F78D8();
}

uint64_t sub_1A9173890(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  _OWORD v19[4];

  v4 = v3;
  v8 = sub_1A93F7698();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v19, 0, 57);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8D78);
  swift_allocObject();
  v12 = sub_1A93F79EC();
  *(_QWORD *)(v3 + 32) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8DA0);
  swift_allocObject();
  v13 = sub_1A93F798C();
  *(_QWORD *)(v4 + 40) = v13;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD74F0]), sel_initWithCatalog_, a1);
  *(_QWORD *)(v4 + 16) = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  objc_allocWithZone((Class)type metadata accessor for ShazamMatcher.ThrottledSubscriber());
  v15 = v14;
  v16 = a3;
  swift_retain();
  swift_retain();
  v17 = sub_1A91722C8((uint64_t)v15, (uint64_t)v11, (uint64_t)v16, v12, v13);
  *(_QWORD *)(v4 + 24) = v17;
  objc_msgSend(v15, sel_setDelegate_, v17);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  return v4;
}

uint64_t sub_1A9173A38(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char *v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1A9118310(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = a1 << 6;
  v13 = (char *)&v4[8 * a1 + 4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8D80);
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v15 = v4[2];
  v16 = __OFSUB__(v15, a2);
  v17 = v15 - a2;
  if (v16)
    goto LABEL_26;
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = (char *)&v4[8 * a2 + 4];
    v19 = v17 << 6;
    if (v12 != a2 << 6 || v13 >= &v18[v19])
      result = (uint64_t)memmove(v13, v18, v19);
    v20 = v4[2];
    v16 = __OFADD__(v20, v8);
    v21 = v20 - v7;
    if (!v16)
    {
      v4[2] = v21;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A9173BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A90E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1A9173BF8()
{
  sub_1A9172644();
}

uint64_t sub_1A9173C18(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *aBlock;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v3 = sub_1A93F7D58();
  v23 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1A93F7DB8();
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1
     + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput;
  v10 = *(void **)(v1
                 + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput);
  if (v10)
  {
    v11 = *(_BYTE *)(v9 + 56);
    v13 = *(_QWORD *)(v9 + 40);
    v12 = *(_QWORD *)(v9 + 48);
    v15 = *(_QWORD *)(v9 + 8);
    v14 = *(uint64_t (**)(uint64_t))(v9 + 16);
    aBlock = a1;
    v25 = v15;
    v26 = v14;
    v27 = *(_OWORD *)(v9 + 24);
    v28 = v13;
    v29 = v12;
    v30 = v11;
    v16 = v10;
    v17 = a1;
    sub_1A93F7974();

  }
  v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *((_QWORD *)&v27 + 1) = sub_1A9174284;
  v28 = v18;
  aBlock = (void *)MEMORY[0x1E0C809B0];
  v25 = 1107296256;
  v26 = sub_1A908A91C;
  *(_QWORD *)&v27 = &block_descriptor_22;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  sub_1A93F7D88();
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CE8((unint64_t *)&qword_1ED2AD6F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v8, v5, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
  swift_release();
  return swift_release();
}

uint64_t sub_1A9173E9C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[7];

  aBlock[6] = *MEMORY[0x1E0C80C00];
  v2 = sub_1A93F7D58();
  v22 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F7DB8();
  v20 = *(_QWORD *)(v5 - 8);
  v21 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1;
  v9 = a1;
  v10 = sub_1A93F7674();
  v11 = sub_1A93F879C();
  if (os_log_type_enabled(v10, v11))
  {
    v19 = v2;
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138412290;
    if (a1)
    {
      v14 = a1;
      v15 = _swift_stdlib_bridgeErrorToNSError();
      aBlock[0] = v15;
      sub_1A93F8AA8();
    }
    else
    {
      aBlock[0] = 0;
      sub_1A93F8AA8();
      v15 = 0;
    }
    *v13 = v15;

    _os_log_impl(&dword_1A904E000, v10, v11, "Did not find match for this interval. Error: %@", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v13, -1, -1);
    MEMORY[0x1AF41411C](v12, -1, -1);

    v2 = v19;
  }
  else
  {

  }
  v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1A9174284;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_18;
  v17 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CE8((unint64_t *)&qword_1ED2AD6F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v7, v4, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
  swift_release();
  return swift_release();
}

uint64_t sub_1A9174238(uint64_t a1, uint64_t a2)
{
  return sub_1A9091694(a1, a2, (uint64_t (*)(void))sub_1A9118B04, type metadata accessor for StoreFeedUpdater.Update);
}

uint64_t sub_1A917424C(uint64_t a1, uint64_t a2)
{
  return sub_1A9091694(a1, a2, (uint64_t (*)(void))sub_1A91182FC, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
}

uint64_t sub_1A9174260()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1A9174284()
{
  uint64_t v0;

  sub_1A9172F98(v0);
}

uint64_t sub_1A917429C(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1A9119C98(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v16[16 * v15])
      result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

char *sub_1A9174404(uint64_t a1, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char *result;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_21;
  }
  else
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    result = (char *)sub_1A9119EE0(result, v11, 1, v4);
    v4 = result;
    if (!v8)
      goto LABEL_21;
  }
  v12 = *((_QWORD *)v4 + 2);
  v13 = __OFSUB__(v12, a2);
  v14 = v12 - a2;
  if (v13)
    goto LABEL_27;
  if ((v14 & 0x8000000000000000) == 0)
  {
    result = &v4[16 * a1 + 32];
    v15 = &v4[16 * a2 + 32];
    if (a1 != a2 || result >= &v15[16 * v14])
      result = (char *)memmove(result, v15, 16 * v14);
    v16 = *((_QWORD *)v4 + 2);
    v13 = __OFADD__(v16, v8);
    v17 = v16 + v8;
    if (!v13)
    {
      *((_QWORD *)v4 + 2) = v17;
LABEL_21:
      *v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  result = (char *)sub_1A93F8E98();
  __break(1u);
  return result;
}

unint64_t sub_1A917456C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  _OWORD *v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9680);
    v2 = (_QWORD *)sub_1A93F8E8C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = &v37;
  v7 = &v39;
  result = swift_bridgeObjectRetain();
  i = 0;
  v10 = (uint64_t *)&unk_1EEAB8DE0;
  v11 = MEMORY[0x1E0DEE9B8] + 8;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v20 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v20 >= v31)
    goto LABEL_32;
  v21 = *(_QWORD *)(v32 + 8 * v20);
  v22 = i + 1;
  if (!v21)
  {
    v22 = i + 2;
    if (i + 2 >= v31)
      goto LABEL_32;
    v21 = *(_QWORD *)(v32 + 8 * v22);
    if (!v21)
    {
      v22 = i + 3;
      if (i + 3 >= v31)
        goto LABEL_32;
      v21 = *(_QWORD *)(v32 + 8 * v22);
      if (!v21)
      {
        v22 = i + 4;
        if (i + 4 >= v31)
          goto LABEL_32;
        v21 = *(_QWORD *)(v32 + 8 * v22);
        if (!v21)
        {
          v23 = i + 5;
          if (i + 5 < v31)
          {
            v21 = *(_QWORD *)(v32 + 8 * v23);
            if (v21)
            {
              v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v31)
                break;
              v21 = *(_QWORD *)(v32 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1A9120240();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = (v21 - 1) & v21;
  v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v19);
    v35 = *v24;
    v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(v10);
    swift_dynamicCast();
    sub_1A908A5DC(v6, v7);
    sub_1A908A5DC(v7, v40);
    sub_1A908A5DC(v40, &v38);
    result = sub_1A9094640(v35, v36);
    v25 = result;
    if ((v26 & 1) != 0)
    {
      v33 = i;
      v12 = v7;
      v13 = v6;
      v14 = v1;
      v15 = v11;
      v16 = v10;
      v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v17 = v35;
      v17[1] = v36;
      v10 = v16;
      v11 = v15;
      v1 = v14;
      v6 = v13;
      v7 = v12;
      i = v33;
      v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      result = (unint64_t)sub_1A908A5DC(&v38, v18);
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v35;
    v27[1] = v36;
    result = (unint64_t)sub_1A908A5DC(&v38, (_OWORD *)(v2[7] + 32 * result));
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_34;
    v2[2] = v30;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1A91748D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9688);
    v2 = sub_1A93F8E8C();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1A906443C(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1A908A5DC(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1A908A5DC(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1A908A5DC(v36, v37);
    sub_1A908A5DC(v37, &v33);
    result = sub_1A93F8C04();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1A908A5DC(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1A9120240();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1A9174C98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v11;
  char v12;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7898);
    v2 = sub_1A93F8E8C();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v11 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v5)
  {
    v6 = __clz(__rbit64(v5));
    goto LABEL_24;
  }
  if (v11 > 1)
  {
    v7 = *(_QWORD *)(a1 + 72);
    v8 = 1;
    if (v7)
      goto LABEL_23;
    v8 = 2;
    if (v11 <= 2)
      goto LABEL_25;
    v7 = *(_QWORD *)(a1 + 80);
    if (v7)
      goto LABEL_23;
    v8 = 3;
    if (v11 <= 3)
      goto LABEL_25;
    v7 = *(_QWORD *)(a1 + 88);
    if (v7)
      goto LABEL_23;
    v8 = 4;
    if (v11 <= 4)
      goto LABEL_25;
    v7 = *(_QWORD *)(a1 + 96);
    if (v7)
    {
LABEL_23:
      v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_24:
      v12 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v6);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
      swift_dynamicCast();
      sub_1A93F92DC();
      __asm { BR              X8 }
    }
    v9 = 5;
    if (v11 > 5)
    {
      v7 = *(_QWORD *)(a1 + 104);
      if (v7)
      {
        v8 = 5;
        goto LABEL_23;
      }
      while (1)
      {
        v8 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          JUMPOUT(0x1A91751B4);
        }
        if (v8 >= v11)
          break;
        v7 = *(_QWORD *)(a1 + 64 + 8 * v8);
        ++v9;
        if (v7)
          goto LABEL_23;
      }
    }
  }
LABEL_25:
  swift_release();
  sub_1A9120240();
  return v2;
}

uint64_t sub_1A91751F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9688);
    v2 = sub_1A93F8E8C();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    v19 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v12);
    *(_QWORD *)&v37[0] = *v17;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    v19;
    swift_dynamicCast();
    sub_1A9176AAC();
    swift_dynamicCast();
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1A908A5DC(&v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1A908A5DC(v36, v37);
    sub_1A908A5DC(v37, &v33);
    result = sub_1A93F8C04();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1A908A5DC(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1A9120240();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1A91755A8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t i;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9678);
    v2 = (_QWORD *)sub_1A93F8E8C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  i = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v11 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v11 >= v27)
    goto LABEL_32;
  v12 = *(_QWORD *)(v28 + 8 * v11);
  v13 = i + 1;
  if (!v12)
  {
    v13 = i + 2;
    if (i + 2 >= v27)
      goto LABEL_32;
    v12 = *(_QWORD *)(v28 + 8 * v13);
    if (!v12)
    {
      v13 = i + 3;
      if (i + 3 >= v27)
        goto LABEL_32;
      v12 = *(_QWORD *)(v28 + 8 * v13);
      if (!v12)
      {
        v13 = i + 4;
        if (i + 4 >= v27)
          goto LABEL_32;
        v12 = *(_QWORD *)(v28 + 8 * v13);
        if (!v12)
        {
          v14 = i + 5;
          if (i + 5 < v27)
          {
            v12 = *(_QWORD *)(v28 + 8 * v14);
            if (v12)
            {
              v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_36;
              if (v13 >= v27)
                break;
              v12 = *(_QWORD *)(v28 + 8 * v13);
              ++v14;
              if (v12)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1A9120240();
          return;
        }
      }
    }
  }
LABEL_26:
  v5 = (v12 - 1) & v12;
  v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; v10 = v9 | (i << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    v19 = v18;
    v20 = sub_1A9094640(v17, v16);
    v21 = v20;
    if ((v22 & 1) != 0)
    {
      v7 = (uint64_t *)(v2[6] + 16 * v20);
      swift_bridgeObjectRelease();
      *v7 = v17;
      v7[1] = v16;
      v8 = v2[7];

      *(_QWORD *)(v8 + 8 * v21) = v19;
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
    v23 = (uint64_t *)(v2[6] + 16 * v20);
    *v23 = v17;
    v23[1] = v16;
    *(_QWORD *)(v2[7] + 8 * v20) = v19;
    v24 = v2[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_34;
    v2[2] = v26;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_1A9175848(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t inited;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A47B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  if (a1 < 0)
  {
    result = sub_1A93F8E08();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(inited + 32) = a1;
    sub_1A9175A68(inited, a2 & 1, a3, a4, a5, a6);
    return swift_setDeallocating();
  }
  return result;
}

uint64_t sub_1A9175A68(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t result;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t inited;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, void *, uint64_t, uint64_t, void *);
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  __int128 v80;
  __int128 v81;
  char *v82;
  uint64_t (**v83)(uint64_t, void *, uint64_t, uint64_t, void *);
  char *v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  void *v90;
  int v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;
  char v106[305];
  _BYTE v107[48];
  __int128 v108;
  uint64_t v109;

  v95 = a4;
  v100 = a5;
  v91 = a2;
  v92 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v8);
  v93 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MediaRequest.Params();
  v96 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v97 = v11;
  v98 = (uint64_t)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v101 = (uint64_t)&v89 - v13;
  v14 = sub_1A93F738C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1F48);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1A93F7404();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (void *)objc_opt_self();
  if ((objc_msgSend(v25, sel_isRunningOnHomepod) & 1) != 0
    || (result = (uint64_t)objc_msgSend(v25, sel_supportsLocalLibrary), (result & 1) == 0))
  {
    v90 = a3;
    v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    sub_1A93F73EC();
    v28 = (void *)sub_1A93F73F8();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    objc_msgSend(v27, sel_setLocale_, v28);

    v29 = (void *)sub_1A93F8010();
    v99 = v27;
    objc_msgSend(v27, sel_setDateFormat_, v29);

    sub_1A93F74A0();
    v30 = sub_1A93F74C4();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v20, 1, v30) != 1)
    {
      v32 = (void *)sub_1A93F74AC();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v30);
    }
    v33 = v99;
    objc_msgSend(v99, sel_setTimeZone_, v32);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9740);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A94055A0;
    *(_QWORD *)(inited + 32) = 0xD000000000000013;
    *(_QWORD *)(inited + 40) = 0x80000001A9441D90;
    sub_1A93F7380();
    v35 = (void *)sub_1A93F7314();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v36 = objc_msgSend(v33, sel_stringFromDate_, v35);

    v37 = sub_1A93F8040();
    v39 = v38;

    v40 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v37;
    *(_QWORD *)(inited + 56) = v39;
    *(_QWORD *)(inited + 72) = v40;
    *(_QWORD *)(inited + 80) = 0x6574656C706D6F63;
    v41 = MEMORY[0x1E0DEAFA0];
    *(_QWORD *)(inited + 88) = 0xE900000000000064;
    *(_BYTE *)(inited + 96) = v91 & 1;
    *(_QWORD *)(inited + 120) = v41;
    *(_QWORD *)(inited + 128) = 0xD000000000000016;
    *(_QWORD *)(inited + 136) = 0x80000001A9441D70;
    *(_QWORD *)(inited + 168) = MEMORY[0x1E0DEB070];
    *(double *)(inited + 144) = a6 * 1000.0;
    v42 = sub_1A908A4A8(inited);
    v43 = swift_initStackObject();
    *(_OWORD *)(v43 + 16) = xmmword_1A9405950;
    *(_QWORD *)(v43 + 32) = 1701869940;
    *(_QWORD *)(v43 + 40) = 0xE400000000000000;
    *(_QWORD *)(v43 + 48) = 0xD000000000000012;
    *(_QWORD *)(v43 + 56) = 0x80000001A94455E0;
    *(_QWORD *)(v43 + 72) = v40;
    *(_QWORD *)(v43 + 80) = 0x7475626972747461;
    *(_QWORD *)(v43 + 88) = 0xEA00000000007365;
    *(_QWORD *)(v43 + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA120);
    *(_QWORD *)(v43 + 96) = v42;
    v44 = sub_1A908A4A8(v43);
    v45 = sub_1A91748D4(v44);
    swift_bridgeObjectRelease();
    *(_QWORD *)v107 = v45;
    memset(&v107[8], 0, 33);
    v106[0] = 0;
    v105 = 1;
    v104 = 4;
    v46 = v92;
    v47 = *(_QWORD *)(v92 + 16);
    if (v47)
    {
      v103 = MEMORY[0x1E0DEE9D8];
      sub_1A908182C(0, v47, 0);
      v48 = v103;
      v49 = (uint64_t *)(v46 + 32);
      sub_1A915997C();
      do
      {
        v50 = *v49++;
        v102 = v50;
        v51 = sub_1A93F8B38();
        v53 = v52;
        v103 = v48;
        v55 = *(_QWORD *)(v48 + 16);
        v54 = *(_QWORD *)(v48 + 24);
        if (v55 >= v54 >> 1)
        {
          sub_1A908182C(v54 > 1, v55 + 1, 1);
          v48 = v103;
        }
        *(_QWORD *)(v48 + 16) = v55 + 1;
        v56 = v48 + 16 * v55;
        *(_QWORD *)(v56 + 32) = v51;
        *(_QWORD *)(v56 + 40) = v53;
        --v47;
      }
      while (v47);
      v57 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v48 = MEMORY[0x1E0DEE9D8];
      v57 = MEMORY[0x1E0DEE9D8];
    }
    LOBYTE(v103) = 1;
    v58 = sub_1A93F726C();
    v59 = (uint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v93, 1, 1, v58);
    v60 = sub_1A9112728(v57);
    v61 = sub_1A9112728(v57);
    sub_1A911273C(v57);
    v63 = v62;
    v64 = sub_1A9112844(v57);
    v65 = sub_1A9112844(v57);
    v66 = sub_1A9112858(v57);
    *((_QWORD *)&v88 + 1) = sub_1A911286C(v57);
    *(_QWORD *)&v88 = v66;
    *(_QWORD *)&v87 = v65;
    *((_QWORD *)&v87 + 1) = v57;
    *(_QWORD *)&v86 = v57;
    *((_QWORD *)&v86 + 1) = v64;
    v67 = v101;
    MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((__int128 *)v107, v106, &v105, &v104, v60, v61, v63, v57, v101, v86, v87, v57, v48, (char *)&v103, 0, 1, v88, 0, 1,
      0,
      v59,
      0,
      0,
      0,
      0,
      0,
      v57,
      0,
      0,
      2);
    v93 = *(char **)(v94 + OBJC_IVAR___MTPlaybackPositionController_requestController);
    v68 = swift_allocObject();
    v69 = v100;
    *(_QWORD *)(v68 + 16) = v95;
    *(_QWORD *)(v68 + 24) = v69;
    v70 = v68;
    v94 = v68;
    v71 = swift_allocObject();
    v95 = v71;
    swift_unknownObjectWeakInit();
    v72 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
    *((_QWORD *)v72 + 2) = v71;
    *((_QWORD *)v72 + 3) = sub_1A9176748;
    *((_QWORD *)v72 + 4) = v70;
    sub_1A93F9330();
    v73 = v98;
    sub_1A9114B88(v67, v98);
    v74 = (*(unsigned __int8 *)(v96 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
    v75 = (v97 + v74 + 7) & 0xFFFFFFFFFFFFFFF8;
    v76 = (v75 + 15) & 0xFFFFFFFFFFFFFFF8;
    v77 = (v76 + 79) & 0xFFFFFFFFFFFFFFF8;
    v78 = swift_allocObject();
    sub_1A917695C(v73, v78 + v74);
    *(_QWORD *)(v78 + v75) = v57;
    v79 = v78 + v76;
    *(_QWORD *)(v79 + 64) = v109;
    v80 = v108;
    *(_OWORD *)(v79 + 32) = *(_OWORD *)&v107[32];
    *(_OWORD *)(v79 + 48) = v80;
    v81 = *(_OWORD *)&v107[16];
    *(_OWORD *)v79 = *(_OWORD *)v107;
    *(_OWORD *)(v79 + 16) = v81;
    v82 = v93;
    *(_QWORD *)(v78 + v77) = v93;
    v83 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v78 + ((v77 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v83 = sub_1A9114B7C;
    v83[1] = v72;
    v84 = v82;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v85 = v101;
    sub_1A9195C30(v101, v90, (uint64_t)sub_1A91161FC, v78);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return sub_1A9114C30(v85);
  }
  return result;
}

uint64_t sub_1A91762CC(uint64_t a1, char a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = v4;
  *(double *)(v5 + 24) = a4;
  *(_BYTE *)(v5 + 72) = a2;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1A91762F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 16);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v6;
  *(_QWORD *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v5;
  *(_BYTE *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v3;
  *(_QWORD *)(v6 + 48) = v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v7;
  *v7 = v0;
  v7[1] = sub_1A91763B0;
  return sub_1A93F9204();
}

uint64_t sub_1A91763B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A917641C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A9176428()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A917645C(uint64_t a1, double a2, uint64_t a3, uint64_t a4, int a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8DD8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](v11);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11, v14);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  sub_1A9175A68(a4, a5, a6, (uint64_t)sub_1A9176B70, v16, a2);
  return swift_release();
}

uint64_t sub_1A917656C(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8DD8);
    sub_1A93F8418();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8DD8);
  return sub_1A93F8424();
}

id PlaybackPositionController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id PlaybackPositionController.init()()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  objc_super v5;

  v1 = OBJC_IVAR___MTPlaybackPositionController_requestController;
  v2 = objc_allocWithZone((Class)type metadata accessor for MediaRequestController());
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_init);

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for PlaybackPositionController();
  return objc_msgSendSuper2(&v5, sel_init);
}

id PlaybackPositionController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaybackPositionController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A9176724()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9176748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t))(v5 + 16))(a5);
}

uint64_t sub_1A917676C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9176790()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91767BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for MediaRequest.Params();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  sub_1A9114BD0(*(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + v3 + 16), *(_QWORD *)(v0 + v3 + 24), *(_QWORD *)(v0 + v3 + 32), *(_BYTE *)(v0 + v3 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 96);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + ((((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A917695C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaRequest.Params();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A91769A0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A917645C(a1, *(double *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void **)(v1 + 48));
}

uint64_t type metadata accessor for PlaybackPositionController()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlaybackPositionController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlaybackPositionController.updatePlaybackPosition(episodeStoreId:completed:position:account:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of PlaybackPositionController.updatePlaybackPosition(adamIDs:completed:position:account:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of PlaybackPositionController.updatePlaybackPosition(adamIDs:completed:position:account:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, double);

  v10 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x80);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, double))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1A9164CD4;
  return v13(a1, a2, a3, a4);
}

unint64_t sub_1A9176AAC()
{
  unint64_t result;

  result = qword_1ED2A4230;
  if (!qword_1ED2A4230)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2A4230);
  }
  return result;
}

uint64_t sub_1A9176AE8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A9176B0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8DD8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1A9176B70(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8DD8);
  return sub_1A917656C(a1);
}

uint64_t dispatch thunk of URLBasedFeedUpdater.updatingFeedURLs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of URLBasedFeedUpdater.updateFeed(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t ArtworkModel.template.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArtworkModel.libraryEntity.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1A9176C30(v1, *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return v1;
}

uint64_t sub_1A9176C30(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_1A913A9C0(a1, a2, a3);
  return a1;
}

double ArtworkModel.width.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double ArtworkModel.height.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void *ArtworkModel.backgroundColor.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);
  sub_1A91618E0(v1, *(_BYTE *)(v0 + 64));
  return v1;
}

uint64_t ArtworkModel.textColors.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9176C94((uint64_t *)(v1 + 72), a1);
}

uint64_t sub_1A9176C94(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for ArtworkTextColors(a2, a1);
  return a2;
}

uint64_t ArtworkModel.style.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 129);
}

void ArtworkModel.crop.getter(_WORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_WORD *)(v1 + 130);
}

uint64_t ArtworkModel.accessibilityTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArtworkModel.format.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t ArtworkModel.isCustomSymbol.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 153);
}

uint64_t ArtworkModel.isMulticolorSymbol.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 154);
}

uint64_t ArtworkModel.imageStoreIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArtworkModel.init(template:width:height:libraryEntity:backgroundColor:textColors:style:crop:accessibilityTitle:format:isCustomSymbol:isMulticolorSymbol:imageStoreIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, char a12, char *a13, uint64_t a14, uint64_t a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20)
{
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  _BYTE v51[72];

  sub_1A9176F1C(a8, (uint64_t)&v43);
  v24 = v44;
  v34 = v43;
  v26 = v45;
  v25 = v46;
  v28 = v47;
  v27 = v48;
  v29 = v49;
  v30 = v50;
  v35 = *a13;
  v31 = a13[1];
  result = sub_1A9176F1C(a8, (uint64_t)v51);
  if (v51[8] == 254)
  {
    v33 = 0;
    v26 = 0;
    v28 = 0;
    v29 = 0;
    v24 = -1;
    v25 = -1;
    v27 = -1;
    v30 = -1;
  }
  else
  {
    v33 = v34;
  }
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = a5;
  *(double *)(a9 + 40) = a10;
  *(double *)(a9 + 48) = a11;
  *(_QWORD *)(a9 + 56) = a6;
  *(_BYTE *)(a9 + 64) = a7;
  *(_QWORD *)(a9 + 72) = v33;
  *(_BYTE *)(a9 + 80) = v24;
  *(_QWORD *)(a9 + 88) = v26;
  *(_BYTE *)(a9 + 96) = v25;
  *(_QWORD *)(a9 + 104) = v28;
  *(_BYTE *)(a9 + 112) = v27;
  *(_QWORD *)(a9 + 120) = v29;
  *(_BYTE *)(a9 + 128) = v30;
  *(_BYTE *)(a9 + 129) = a12;
  *(_BYTE *)(a9 + 130) = v35;
  *(_BYTE *)(a9 + 131) = v31;
  *(_QWORD *)(a9 + 136) = a14;
  *(_QWORD *)(a9 + 144) = a15;
  *(_BYTE *)(a9 + 152) = a16;
  *(_BYTE *)(a9 + 153) = a17 & 1;
  *(_BYTE *)(a9 + 154) = a18 & 1;
  *(_QWORD *)(a9 + 160) = a19;
  *(_QWORD *)(a9 + 168) = a20;
  return result;
}

uint64_t sub_1A9176F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double ArtworkModel.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

uint64_t ArtworkModel.isMonogram.getter()
{
  return sub_1A93F816C();
}

uint64_t ArtworkModel.isSystemGlyph.getter()
{
  return sub_1A93F816C();
}

uint64_t ArtworkModel.systemGlyphName.getter()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[11];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0[9];
  v14[8] = v0[8];
  v14[9] = v4;
  v14[10] = v0[10];
  v5 = v0[5];
  v14[4] = v0[4];
  v14[5] = v5;
  v6 = v0[7];
  v14[6] = v0[6];
  v14[7] = v6;
  v7 = v0[1];
  v14[0] = *v0;
  v14[1] = v7;
  v8 = v0[3];
  v14[2] = v0[2];
  v14[3] = v8;
  sub_1A91770E8((uint64_t)v14);
  v9 = sub_1A93F816C();
  sub_1A91771DC((uint64_t)v14);
  if ((v9 & 1) != 0)
  {
    sub_1A93F7248();
    v10 = sub_1A93F726C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v3, 1, v10) != 1)
    {
      v12 = sub_1A93F720C();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v3, v10);
      return v12;
    }
    sub_1A914149C((uint64_t)v3);
  }
  return 0;
}

uint64_t sub_1A91770E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  char v7;
  char v8;
  char v9;
  char v10;
  void *v12;
  char v13;
  void *v14;
  void *v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(void **)(a1 + 56);
  v5 = *(void **)(a1 + 72);
  v12 = *(void **)(a1 + 88);
  v14 = *(void **)(a1 + 104);
  v15 = *(void **)(a1 + 120);
  v6 = *(_BYTE *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 64);
  v8 = *(_BYTE *)(a1 + 80);
  v9 = *(_BYTE *)(a1 + 96);
  v10 = *(_BYTE *)(a1 + 112);
  v13 = *(_BYTE *)(a1 + 128);
  swift_bridgeObjectRetain();
  sub_1A9176C30(v2, v3, v6);
  sub_1A91618E0(v4, v7);
  sub_1A91618E0(v5, v8);
  sub_1A91618E0(v12, v9);
  sub_1A91618E0(v14, v10);
  sub_1A91618E0(v15, v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A91771DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  char v7;
  char v8;
  char v9;
  char v10;
  void *v12;
  char v13;
  void *v14;
  void *v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(void **)(a1 + 56);
  v5 = *(void **)(a1 + 72);
  v12 = *(void **)(a1 + 88);
  v14 = *(void **)(a1 + 104);
  v15 = *(void **)(a1 + 120);
  v6 = *(_BYTE *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 64);
  v8 = *(_BYTE *)(a1 + 80);
  v9 = *(_BYTE *)(a1 + 96);
  v10 = *(_BYTE *)(a1 + 112);
  v13 = *(_BYTE *)(a1 + 128);
  swift_bridgeObjectRelease();
  sub_1A91772D0(v2, v3, v6);
  sub_1A9162DF0(v4, v7);
  sub_1A9162DF0(v5, v8);
  sub_1A9162DF0(v12, v9);
  sub_1A9162DF0(v14, v10);
  sub_1A9162DF0(v15, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A91772D0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_1A913A0C0(a1, a2, a3);
  return a1;
}

double ArtworkModel.init(glyphName:accessibilityTitle:isCustomSymbol:isMulticolorSymbol:)@<D0>(uint64_t a1@<X2>, uint64_t a2@<X3>, char a3@<W4>, char a4@<W5>, uint64_t a5@<X8>)
{
  char v10;
  double result;

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  if (qword_1ED2AD2E8 != -1)
    swift_once();
  v10 = byte_1ED2AD2D8;
  *(_QWORD *)a5 = 0x2F2F3A6870796C67;
  *(_QWORD *)(a5 + 8) = 0xE800000000000000;
  *(_QWORD *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = 0;
  *(_BYTE *)(a5 + 32) = -1;
  *(_QWORD *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = 0;
  *(_QWORD *)(a5 + 40) = 0;
  *(_BYTE *)(a5 + 64) = -1;
  *(_QWORD *)(a5 + 72) = 0;
  *(_BYTE *)(a5 + 80) = -1;
  *(_QWORD *)(a5 + 88) = 0;
  *(_BYTE *)(a5 + 96) = -1;
  *(_QWORD *)(a5 + 104) = 0;
  *(_BYTE *)(a5 + 112) = -1;
  *(_QWORD *)(a5 + 120) = 0;
  *(_QWORD *)&result = 16778239;
  *(_DWORD *)(a5 + 128) = 16778239;
  *(_QWORD *)(a5 + 136) = a1;
  *(_QWORD *)(a5 + 144) = a2;
  *(_BYTE *)(a5 + 152) = v10;
  *(_BYTE *)(a5 + 153) = a3 & 1;
  *(_BYTE *)(a5 + 154) = a4 & 1;
  *(_QWORD *)(a5 + 160) = 0;
  *(_QWORD *)(a5 + 168) = 0;
  return result;
}

uint64_t ArtworkModel.with(size:format:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  int8x16_t v20;
  char v21;
  unsigned __int8 v22;
  char v23;
  char v24;
  char v25;
  char v26;
  int32x2_t v27;
  int64x2_t v28;
  int8x16_t v29;
  void *v31;
  char v32;
  void *v33;
  void *v34;

  v7 = (a3 & 1) == 0;
  v8 = *(_QWORD *)(v5 + 8);
  v9 = *(_QWORD *)(v5 + 16);
  v10 = *(_QWORD *)(v5 + 24);
  v11 = *(void **)(v5 + 56);
  v12 = *(void **)(v5 + 72);
  v13 = *(void **)(v5 + 88);
  v31 = v13;
  v14 = *(void **)(v5 + 104);
  v15 = *(void **)(v5 + 120);
  v33 = v14;
  v34 = v15;
  v16 = *(_QWORD *)(v5 + 136);
  v17 = *(_QWORD *)(v5 + 144);
  v18 = *(_BYTE *)(v5 + 153);
  v19 = *(_BYTE *)(v5 + 154);
  v20.i64[0] = a1;
  v20.i64[1] = a2;
  if (a4 == 4)
    v21 = *(_BYTE *)(v5 + 152);
  else
    v21 = a4;
  v22 = *(_BYTE *)(v5 + 32);
  v23 = *(_BYTE *)(v5 + 64);
  v24 = *(_BYTE *)(v5 + 80);
  v25 = *(_BYTE *)(v5 + 96);
  v26 = *(_BYTE *)(v5 + 112);
  *(_QWORD *)a5 = *(_QWORD *)v5;
  *(_QWORD *)(a5 + 8) = v8;
  *(_QWORD *)(a5 + 16) = v9;
  *(_QWORD *)(a5 + 24) = v10;
  *(_BYTE *)(a5 + 32) = v22;
  v27 = vdup_n_s32(v7);
  v28.i64[0] = v27.u32[0];
  v28.i64[1] = v27.u32[1];
  v29 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v28, 0x3FuLL)), v20, *(int8x16_t *)(v5 + 40));
  *(int8x16_t *)(a5 + 40) = v29;
  *(_QWORD *)(a5 + 56) = v11;
  *(_BYTE *)(a5 + 64) = v23;
  *(_QWORD *)(a5 + 72) = v12;
  *(_BYTE *)(a5 + 80) = v24;
  *(_QWORD *)(a5 + 88) = v13;
  *(_BYTE *)(a5 + 96) = v25;
  *(_QWORD *)(a5 + 104) = v14;
  *(_BYTE *)(a5 + 112) = v26;
  *(_QWORD *)(a5 + 120) = v15;
  v29.i32[0] = *(_DWORD *)(v5 + 128);
  v32 = vmovl_u8(*(uint8x8_t *)v29.i8).u8[0];
  *(_DWORD *)(a5 + 128) = v29.i32[0];
  *(_QWORD *)(a5 + 136) = v16;
  *(_QWORD *)(a5 + 144) = v17;
  *(_BYTE *)(a5 + 152) = v21;
  *(_BYTE *)(a5 + 153) = v18;
  *(_BYTE *)(a5 + 154) = v19;
  *(_QWORD *)(a5 + 160) = 0;
  *(_QWORD *)(a5 + 168) = 0;
  swift_bridgeObjectRetain();
  sub_1A9176C30(v9, v10, v22);
  sub_1A91618E0(v11, v23);
  sub_1A91618E0(v12, v24);
  sub_1A91618E0(v31, v25);
  sub_1A91618E0(v33, v26);
  sub_1A91618E0(v34, v32);
  return swift_bridgeObjectRetain();
}

uint64_t ArtworkModel.with(format:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  unsigned __int8 v12;
  char v13;
  char v14;
  char v15;
  char v16;
  __int128 v17;
  void *v19;
  char v20;
  void *v21;
  void *v22;

  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(void **)(v2 + 56);
  v7 = *(void **)(v2 + 72);
  v19 = *(void **)(v2 + 88);
  v21 = *(void **)(v2 + 104);
  v22 = *(void **)(v2 + 120);
  v8 = *(_QWORD *)(v2 + 136);
  v9 = *(_QWORD *)(v2 + 144);
  v10 = *(_BYTE *)(v2 + 153);
  v11 = *(_BYTE *)(v2 + 154);
  v12 = *(_BYTE *)(v2 + 32);
  v13 = *(_BYTE *)(v2 + 64);
  v14 = *(_BYTE *)(v2 + 80);
  v15 = *(_BYTE *)(v2 + 96);
  v16 = *(_BYTE *)(v2 + 112);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  *(_BYTE *)(a2 + 32) = v12;
  v17 = *(_OWORD *)(v2 + 40);
  *(_OWORD *)(a2 + 40) = v17;
  *(_QWORD *)(a2 + 56) = v6;
  *(_BYTE *)(a2 + 64) = v13;
  *(_QWORD *)(a2 + 72) = v7;
  *(_BYTE *)(a2 + 80) = v14;
  *(_QWORD *)(a2 + 88) = v19;
  *(_BYTE *)(a2 + 96) = v15;
  *(_QWORD *)(a2 + 104) = v21;
  *(_BYTE *)(a2 + 112) = v16;
  *(_QWORD *)(a2 + 120) = v22;
  LODWORD(v17) = *(_DWORD *)(v2 + 128);
  v20 = vmovl_u8(*(uint8x8_t *)&v17).u8[0];
  *(_DWORD *)(a2 + 128) = v17;
  *(_QWORD *)(a2 + 136) = v8;
  *(_QWORD *)(a2 + 144) = v9;
  *(_BYTE *)(a2 + 152) = a1;
  *(_BYTE *)(a2 + 153) = v10;
  *(_BYTE *)(a2 + 154) = v11;
  *(_QWORD *)(a2 + 160) = 0;
  *(_QWORD *)(a2 + 168) = 0;
  swift_bridgeObjectRetain();
  sub_1A9176C30(v4, v5, v12);
  sub_1A91618E0(v6, v13);
  sub_1A91618E0(v7, v14);
  sub_1A91618E0(v19, v15);
  sub_1A91618E0(v21, v16);
  sub_1A91618E0(v22, v20);
  return swift_bridgeObjectRetain();
}

id ArtworkModel.with(backgroundColor:)@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  char v18;
  char v19;
  __int128 v20;
  char v22;
  void *v23;

  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(void **)(v3 + 72);
  v9 = *(void **)(v3 + 88);
  v10 = *(void **)(v3 + 104);
  v23 = *(void **)(v3 + 120);
  v11 = *(_QWORD *)(v3 + 136);
  v12 = *(_QWORD *)(v3 + 144);
  v13 = *(_BYTE *)(v3 + 152);
  v14 = *(_BYTE *)(v3 + 153);
  v15 = *(_BYTE *)(v3 + 154);
  v16 = *(_BYTE *)(v3 + 32);
  v17 = *(_BYTE *)(v3 + 80);
  v18 = *(_BYTE *)(v3 + 96);
  v19 = *(_BYTE *)(v3 + 112);
  *(_QWORD *)a3 = *(_QWORD *)v3;
  *(_QWORD *)(a3 + 8) = v5;
  *(_QWORD *)(a3 + 16) = v6;
  *(_QWORD *)(a3 + 24) = v7;
  *(_BYTE *)(a3 + 32) = v16;
  v20 = *(_OWORD *)(v3 + 40);
  *(_OWORD *)(a3 + 40) = v20;
  *(_QWORD *)(a3 + 56) = a1;
  *(_BYTE *)(a3 + 64) = a2;
  *(_QWORD *)(a3 + 72) = v8;
  *(_BYTE *)(a3 + 80) = v17;
  *(_QWORD *)(a3 + 88) = v9;
  *(_BYTE *)(a3 + 96) = v18;
  *(_QWORD *)(a3 + 104) = v10;
  *(_BYTE *)(a3 + 112) = v19;
  *(_QWORD *)(a3 + 120) = v23;
  LODWORD(v20) = *(_DWORD *)(v3 + 128);
  v22 = vmovl_u8(*(uint8x8_t *)&v20).u8[0];
  *(_DWORD *)(a3 + 128) = v20;
  *(_QWORD *)(a3 + 136) = v11;
  *(_QWORD *)(a3 + 144) = v12;
  *(_BYTE *)(a3 + 152) = v13;
  *(_BYTE *)(a3 + 153) = v14;
  *(_BYTE *)(a3 + 154) = v15;
  *(_QWORD *)(a3 + 160) = 0;
  *(_QWORD *)(a3 + 168) = 0;
  swift_bridgeObjectRetain();
  sub_1A9176C30(v6, v7, v16);
  sub_1A91618E0(v8, v17);
  sub_1A91618E0(v9, v18);
  sub_1A91618E0(v10, v19);
  sub_1A91618E0(v23, v22);
  swift_bridgeObjectRetain();
  return sub_1A913A9D8(a1, a2);
}

uint64_t ArtworkModel.with(libraryEntity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  __int128 v20;
  void *v22;
  char v23;
  void *v24;
  void *v25;

  v8 = *(_QWORD *)(v4 + 8);
  v9 = *(void **)(v4 + 56);
  v10 = *(void **)(v4 + 72);
  v22 = *(void **)(v4 + 88);
  v24 = *(void **)(v4 + 104);
  v25 = *(void **)(v4 + 120);
  v11 = *(_QWORD *)(v4 + 136);
  v12 = *(_QWORD *)(v4 + 144);
  v13 = *(_BYTE *)(v4 + 152);
  v14 = *(_BYTE *)(v4 + 153);
  v15 = *(_BYTE *)(v4 + 154);
  *(_QWORD *)a4 = *(_QWORD *)v4;
  *(_QWORD *)(a4 + 8) = v8;
  *(_QWORD *)(a4 + 16) = a1;
  *(_QWORD *)(a4 + 24) = a2;
  *(_BYTE *)(a4 + 32) = a3;
  v16 = *(_BYTE *)(v4 + 64);
  v17 = *(_BYTE *)(v4 + 80);
  v18 = *(_BYTE *)(v4 + 96);
  v19 = *(_BYTE *)(v4 + 112);
  v20 = *(_OWORD *)(v4 + 40);
  *(_OWORD *)(a4 + 40) = v20;
  *(_QWORD *)(a4 + 56) = v9;
  *(_BYTE *)(a4 + 64) = v16;
  *(_QWORD *)(a4 + 72) = v10;
  *(_BYTE *)(a4 + 80) = v17;
  *(_QWORD *)(a4 + 88) = v22;
  *(_BYTE *)(a4 + 96) = v18;
  *(_QWORD *)(a4 + 104) = v24;
  *(_BYTE *)(a4 + 112) = v19;
  *(_QWORD *)(a4 + 120) = v25;
  LODWORD(v20) = *(_DWORD *)(v4 + 128);
  v23 = vmovl_u8(*(uint8x8_t *)&v20).u8[0];
  *(_DWORD *)(a4 + 128) = v20;
  *(_QWORD *)(a4 + 136) = v11;
  *(_QWORD *)(a4 + 144) = v12;
  *(_BYTE *)(a4 + 152) = v13;
  *(_BYTE *)(a4 + 153) = v14;
  *(_BYTE *)(a4 + 154) = v15;
  *(_QWORD *)(a4 + 160) = 0;
  *(_QWORD *)(a4 + 168) = 0;
  swift_bridgeObjectRetain();
  sub_1A9176C30(a1, a2, a3);
  sub_1A91618E0(v9, v16);
  sub_1A91618E0(v10, v17);
  sub_1A91618E0(v22, v18);
  sub_1A91618E0(v24, v19);
  sub_1A91618E0(v25, v23);
  return swift_bridgeObjectRetain();
}

uint64_t ArtworkModel.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(unsigned __int8 *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  sub_1A93F930C();
  sub_1A93F930C();
  ArtworkCrop.cropCodeString.getter();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  if (v3 == 255)
    return sub_1A93F92F4();
  sub_1A93F92F4();
  if (v3)
  {
    sub_1A93F92E8();
    if (v3 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1A93F7FBC();
      return sub_1A91772D0(v2, v1, 1u);
    }
    else
    {
      sub_1A93F930C();
      return sub_1A91772D0(v2, v1, 2u);
    }
  }
  else
  {
    sub_1A93F92E8();
    swift_bridgeObjectRetain();
    sub_1A93F7FBC();
    return sub_1A91772D0(v2, v1, 0);
  }
}

uint64_t ArtworkModel.hashValue.getter()
{
  sub_1A93F92DC();
  ArtworkModel.hash(into:)();
  return sub_1A93F9324();
}

uint64_t sub_1A9177B00(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9177B34 + 4 * byte_1A940A000[a1]))(0x6574616C706D6574, 0xE800000000000000);
}

uint64_t sub_1A9177B34()
{
  return 0x6874646977;
}

uint64_t sub_1A9177B48()
{
  return 0x746867696568;
}

uint64_t sub_1A9177B5C()
{
  return 0x457972617262696CLL;
}

uint64_t sub_1A9177B80()
{
  return 0x756F72676B636162;
}

uint64_t sub_1A9177BA4()
{
  return 0x6F6C6F4374786574;
}

uint64_t sub_1A9177BC0()
{
  return 0x656C797473;
}

uint64_t sub_1A9177BD4()
{
  return 1886351971;
}

unint64_t sub_1A9177BE4()
{
  return 0xD000000000000012;
}

uint64_t sub_1A9177C44()
{
  sub_1A93F92DC();
  ArtworkModel.hash(into:)();
  return sub_1A93F9324();
}

uint64_t sub_1A9177C84()
{
  sub_1A93F92DC();
  ArtworkModel.hash(into:)();
  return sub_1A93F9324();
}

uint64_t sub_1A9177CBC()
{
  unsigned __int8 *v0;

  return sub_1A9177B00(*v0);
}

uint64_t sub_1A9177CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A917A1A4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A9177CE8(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1A9177CF4()
{
  sub_1A9178FAC();
  return sub_1A93F945C();
}

uint64_t sub_1A9177D1C()
{
  sub_1A9178FAC();
  return sub_1A93F9468();
}

uint64_t ArtworkModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t *v45;
  char v46;
  unsigned __int16 v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 v61;
  uint64_t v62;
  uint64_t v63;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8DE8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9178FAC();
  sub_1A93F93C0();
  if (!v2)
  {
    LOBYTE(v49) = 0;
    v9 = sub_1A93F8F4C();
    v11 = v10;
    v45 = a2;
    LOBYTE(v49) = 1;
    sub_1A9178FF0();
    sub_1A93F8F7C();
    v12 = v63;
    LOBYTE(v49) = 2;
    sub_1A93F8F7C();
    v13 = v62;
    LOBYTE(v49) = 3;
    sub_1A9179034();
    sub_1A93F8F34();
    v15 = v60;
    v43 = v59;
    v44 = v61;
    LOBYTE(v49) = 4;
    sub_1A9162DAC();
    sub_1A93F8F34();
    v41 = v15;
    v16 = v57;
    v42 = v58;
    LOBYTE(v47) = 5;
    sub_1A9179078();
    sub_1A93F8F34();
    v33 = v16;
    v34 = v49;
    v40 = v50;
    v36 = v51;
    v35 = v52;
    v38 = v53;
    v37 = v54;
    v39 = v55;
    LODWORD(v16) = v56;
    LOBYTE(v47) = 6;
    sub_1A91790BC();
    sub_1A93F8F34();
    v32 = v16;
    v17 = v48;
    v46 = 7;
    sub_1A9179174();
    sub_1A93F8F34();
    v18 = v47;
    v19 = HIBYTE(v47);
    if (v47 == 13)
      v18 = 0;
    v30 = v18;
    if (v47 == 13)
      v19 = 1;
    v29 = v19;
    LOBYTE(v47) = 8;
    v28 = sub_1A93F8F04();
    v31 = v20;
    v46 = 9;
    sub_1A91791B8();
    sub_1A93F8F34();
    v21 = v47;
    if (v47 == 4)
      v21 = 2;
    v27 = v21;
    LOBYTE(v47) = 10;
    v26 = sub_1A93F8F10();
    LOBYTE(v47) = 11;
    v22 = sub_1A93F8F10();
    v26 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (v40 == 254)
    {
      v34 = 0;
      v36 = 0;
      v38 = 0;
      v39 = 0;
      v40 = 255;
      v35 = 255;
      v37 = 255;
      v32 = 255;
    }
    v23 = v45;
    *v45 = v9;
    v23[1] = v11;
    v24 = v41;
    v23[2] = v43;
    v23[3] = v24;
    *((_BYTE *)v23 + 32) = v44;
    v23[5] = v12;
    v23[6] = v13;
    v23[7] = v33;
    *((_BYTE *)v23 + 64) = v42;
    v23[9] = v34;
    *((_BYTE *)v23 + 80) = v40;
    v23[11] = v36;
    *((_BYTE *)v23 + 96) = v35;
    v23[13] = v38;
    *((_BYTE *)v23 + 112) = v37;
    v23[15] = v39;
    *((_BYTE *)v23 + 128) = v32;
    *((_BYTE *)v23 + 129) = v17;
    *((_BYTE *)v23 + 130) = v30;
    *((_BYTE *)v23 + 131) = v29;
    v25 = v31;
    v23[17] = v28;
    v23[18] = v25;
    *((_BYTE *)v23 + 152) = v27;
    *((_BYTE *)v23 + 153) = v26;
    *((_BYTE *)v23 + 154) = v22 & 1;
    v23[20] = 0;
    v23[21] = 0;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t ArtworkModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD v18[3];
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  int v46;
  char v47;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8E28);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v35 = *(_QWORD *)(v1 + 24);
  v36 = v7;
  v46 = *(unsigned __int8 *)(v1 + 32);
  v9 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v34 = *(_QWORD *)(v1 + 56);
  v33 = *(unsigned __int8 *)(v1 + 64);
  v25 = *(_QWORD *)(v1 + 72);
  v26 = *(unsigned __int8 *)(v1 + 80);
  v10 = *(unsigned __int8 *)(v1 + 96);
  v27 = *(_QWORD *)(v1 + 88);
  v28 = v10;
  v11 = *(unsigned __int8 *)(v1 + 112);
  v31 = *(_QWORD *)(v1 + 104);
  v32 = v11;
  v30 = *(_QWORD *)(v1 + 120);
  v29 = *(unsigned __int8 *)(v1 + 128);
  v24 = *(unsigned __int8 *)(v1 + 129);
  v22 = *(unsigned __int8 *)(v1 + 130);
  v23 = *(unsigned __int8 *)(v1 + 131);
  v20 = *(_QWORD *)(v1 + 136);
  v21 = *(_QWORD *)(v1 + 144);
  v19 = *(unsigned __int8 *)(v1 + 152);
  v18[2] = *(unsigned __int8 *)(v1 + 153);
  v18[1] = *(unsigned __int8 *)(v1 + 154);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9178FAC();
  sub_1A93F93D8();
  LOBYTE(v38) = 0;
  v12 = v37;
  sub_1A93F9000();
  if (v12)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v13 = v46;
  v14 = v35;
  v15 = v36;
  v16 = v34;
  v38 = v9;
  v47 = 1;
  sub_1A91791FC();
  sub_1A93F9030();
  v38 = v8;
  v47 = 2;
  sub_1A93F9030();
  v38 = v15;
  v39 = v14;
  LOBYTE(v40) = v13;
  v47 = 3;
  sub_1A9179240();
  sub_1A93F8FE8();
  v38 = v16;
  LOBYTE(v39) = v33;
  v47 = 4;
  sub_1A9161FBC();
  sub_1A93F8FE8();
  v38 = v25;
  v39 = v26;
  v40 = v27;
  v41 = v28;
  v42 = v31;
  v43 = v32;
  v44 = v30;
  v45 = v29;
  v47 = 5;
  sub_1A9179284();
  sub_1A93F8FE8();
  LOBYTE(v38) = v24;
  v47 = 6;
  sub_1A91792C8();
  sub_1A93F8FE8();
  LOBYTE(v38) = v22;
  BYTE1(v38) = v23;
  v47 = 7;
  sub_1A917930C();
  sub_1A93F9030();
  LOBYTE(v38) = 8;
  sub_1A93F8FB8();
  LOBYTE(v38) = v19;
  v47 = 9;
  sub_1A9179350();
  sub_1A93F9030();
  LOBYTE(v38) = 10;
  sub_1A93F900C();
  LOBYTE(v38) = 11;
  sub_1A93F900C();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v4 + 8))(0, v3);
}

uint64_t sub_1A91789D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ArtworkModel.init(from:)(a1, a2);
}

uint64_t sub_1A91789E4(_QWORD *a1)
{
  return ArtworkModel.encode(to:)(a1);
}

BOOL static ArtworkModel.ModelError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ArtworkModel.ModelError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t ArtworkModel.ModelError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

unint64_t static ArtworkModel.compositeImageEndpoint.getter()
{
  return 0xD000000000000014;
}

uint64_t static ArtworkModel.compositeImageRequestsKey.getter()
{
  return 0x526B726F77747261;
}

unint64_t static ArtworkModel.placeholderTemplate.getter()
{
  return 0xD000000000000016;
}

double static ArtworkModel.placeholder.getter@<D0>(uint64_t a1@<X8>)
{
  char v2;
  double result;

  if (qword_1ED2AD2E8 != -1)
    swift_once();
  v2 = byte_1ED2AD2D8;
  *(_QWORD *)a1 = 0xD000000000000016;
  *(_QWORD *)(a1 + 8) = 0x80000001A94456A0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = -1;
  *(_QWORD *)(a1 + 40) = 0x40A7700000000000;
  *(_QWORD *)(a1 + 48) = 0x40A7700000000000;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = -1;
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = -1;
  *(_QWORD *)(a1 + 88) = 0;
  *(_BYTE *)(a1 + 96) = -1;
  *(_QWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 112) = -1;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)&result = 16778239;
  *(_DWORD *)(a1 + 128) = 16778239;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  *(_BYTE *)(a1 + 152) = v2;
  *(_WORD *)(a1 + 153) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0;
  return result;
}

uint64_t ArtworkModel.baseRequest.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  qos_class_t v15;
  char v16;
  char v18;
  _OWORD v19[2];
  uint64_t v20;
  char v21;
  __int128 v22[11];
  _OWORD v23[2];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v3 = v1[7];
  v4 = v1[9];
  v30 = v1[8];
  v31 = v4;
  v5 = v1[9];
  v32 = v1[10];
  v6 = v1[3];
  v7 = v1[5];
  v26 = v1[4];
  v27 = v7;
  v8 = v1[5];
  v9 = v1[7];
  v28 = v1[6];
  v29 = v9;
  v10 = v1[1];
  v23[0] = *v1;
  v23[1] = v10;
  v11 = v1[3];
  v13 = *v1;
  v12 = v1[1];
  v24 = v1[2];
  v25 = v11;
  v22[7] = v3;
  v22[8] = v30;
  v14 = v1[10];
  v22[9] = v5;
  v22[10] = v14;
  v22[3] = v6;
  v22[4] = v26;
  v22[5] = v8;
  v22[6] = v28;
  v22[0] = v13;
  v22[1] = v12;
  v22[2] = v24;
  v21 = 13;
  v20 = 0;
  memset(v19, 0, sizeof(v19));
  sub_1A91770E8((uint64_t)v23);
  v15 = qos_class_self();
  v16 = 3;
  switch(v15)
  {
    case QOS_CLASS_BACKGROUND:
      v16 = 0;
      break;
    case QOS_CLASS_USER_INITIATED:
      v16 = 2;
      break;
    case QOS_CLASS_USER_INTERACTIVE:
      break;
    default:
      v16 = 1;
      break;
  }
  v18 = v16;
  return ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(v22, 0, &v21, 0, MEMORY[0x1E0DEE9D8], &v18, (uint64_t)v19, a1, 600.0, 600.0, 3.0);
}

BOOL _s18PodcastsFoundation12ArtworkModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  double v5;
  double v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  double v11;
  double v12;
  int v13;
  char v14;
  _BOOL8 result;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  int v31;
  int v32;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v6 = *(double *)(a1 + 40);
  v5 = *(double *)(a1 + 48);
  v7 = *(unsigned __int8 *)(a1 + 129);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(unsigned __int8 *)(a2 + 32);
  v12 = *(double *)(a2 + 40);
  v11 = *(double *)(a2 + 48);
  v13 = *(unsigned __int8 *)(a2 + 129);
  v31 = *(unsigned __int8 *)(a2 + 131);
  v32 = *(unsigned __int8 *)(a1 + 131);
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v14 = sub_1A93F90C0();
    result = 0;
    if ((v14 & 1) == 0)
      return result;
  }
  if (v4 == 255)
  {
    result = 0;
    if (v10 != 255)
      return result;
  }
  else
  {
    if (v10 == 255)
      return 0;
    if (v4)
    {
      if (v4 != 1)
      {
        if (v10 != 2)
          return 0;
        result = 0;
        if (v2 != v8)
          return result;
        goto LABEL_6;
      }
      if (v10 != 1)
        return 0;
    }
    else if (v10)
    {
      return 0;
    }
    if (v2 == v8 && v3 == v9)
    {
      result = 0;
      if (v6 != v12)
        return result;
      goto LABEL_7;
    }
    v30 = sub_1A93F90C0();
    result = 0;
    if ((v30 & 1) == 0)
      return result;
  }
LABEL_6:
  if (v6 != v12)
    return result;
LABEL_7:
  if (v5 != v11)
    return result;
  if (v7 != 3)
  {
    if (v13 != 3)
    {
      v16 = 0xE500000000000000;
      v17 = 0x646E756F72;
      if (v7 != 1)
      {
        v17 = 1819044208;
        v16 = 0xE400000000000000;
      }
      if (v7)
        v18 = v17;
      else
        v18 = 0x526465646E756F72;
      if (v7)
        v19 = v16;
      else
        v19 = 0xEB00000000746365;
      v20 = 0xE500000000000000;
      v21 = 0x646E756F72;
      if (v13 != 1)
      {
        v21 = 1819044208;
        v20 = 0xE400000000000000;
      }
      if (v13)
        v22 = v21;
      else
        v22 = 0x526465646E756F72;
      if (v13)
        v23 = v20;
      else
        v23 = 0xEB00000000746365;
      if (v18 == v22 && v19 == v23)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v24 = sub_1A93F90C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = 0;
        if ((v24 & 1) == 0)
          return result;
      }
      goto LABEL_47;
    }
    return 0;
  }
  if (v13 != 3)
    return 0;
LABEL_47:
  v25 = CropCode.rawValue.getter();
  v27 = v26;
  if (v25 == CropCode.rawValue.getter() && v27 == v28)
  {
    swift_bridgeObjectRelease_n();
    return v32 == v31;
  }
  v29 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v29 & 1) != 0)
    return v32 == v31;
  return result;
}

unint64_t sub_1A9178FAC()
{
  unint64_t result;

  result = qword_1EEAB8DF0;
  if (!qword_1EEAB8DF0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940A2D0, &type metadata for ArtworkModel.CK);
    atomic_store(result, (unint64_t *)&qword_1EEAB8DF0);
  }
  return result;
}

unint64_t sub_1A9178FF0()
{
  unint64_t result;

  result = qword_1EEAB8DF8;
  if (!qword_1EEAB8DF8)
  {
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEF078], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EEAB8DF8);
  }
  return result;
}

unint64_t sub_1A9179034()
{
  unint64_t result;

  result = qword_1EEAB8E00;
  if (!qword_1EEAB8E00)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for LibraryEntity, &type metadata for LibraryEntity);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E00);
  }
  return result;
}

unint64_t sub_1A9179078()
{
  unint64_t result;

  result = qword_1EEAB8E08;
  if (!qword_1EEAB8E08)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkTextColors, &type metadata for ArtworkTextColors);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E08);
  }
  return result;
}

unint64_t sub_1A91790BC()
{
  unint64_t result;

  result = qword_1EEAB8E10;
  if (!qword_1EEAB8E10)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkStyle, &type metadata for ArtworkStyle);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E10);
  }
  return result;
}

void sub_1A9179100(void *a1, unsigned __int8 a2, void *a3, char a4, void *a5, char a6, void *a7, char a8)
{
  if (a2 != 254)
  {
    sub_1A9162DF0(a1, a2);
    sub_1A9162DF0(a3, a4);
    sub_1A9162DF0(a5, a6);
    sub_1A9162DF0(a7, a8);
  }
}

unint64_t sub_1A9179174()
{
  unint64_t result;

  result = qword_1EEAB8E18;
  if (!qword_1EEAB8E18)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkCrop, &type metadata for ArtworkCrop);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E18);
  }
  return result;
}

unint64_t sub_1A91791B8()
{
  unint64_t result;

  result = qword_1EEAB8E20;
  if (!qword_1EEAB8E20)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkFormat, &type metadata for ArtworkFormat);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E20);
  }
  return result;
}

unint64_t sub_1A91791FC()
{
  unint64_t result;

  result = qword_1EEAB8E30;
  if (!qword_1EEAB8E30)
  {
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEF050], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E30);
  }
  return result;
}

unint64_t sub_1A9179240()
{
  unint64_t result;

  result = qword_1EEAB8E38;
  if (!qword_1EEAB8E38)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for LibraryEntity, &type metadata for LibraryEntity);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E38);
  }
  return result;
}

unint64_t sub_1A9179284()
{
  unint64_t result;

  result = qword_1EEAB8E40;
  if (!qword_1EEAB8E40)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkTextColors, &type metadata for ArtworkTextColors);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E40);
  }
  return result;
}

unint64_t sub_1A91792C8()
{
  unint64_t result;

  result = qword_1EEAB8E48;
  if (!qword_1EEAB8E48)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkStyle, &type metadata for ArtworkStyle);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E48);
  }
  return result;
}

unint64_t sub_1A917930C()
{
  unint64_t result;

  result = qword_1EEAB8E50;
  if (!qword_1EEAB8E50)
  {
    result = MEMORY[0x1AF414014]("E=\r<", &type metadata for ArtworkCrop);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E50);
  }
  return result;
}

unint64_t sub_1A9179350()
{
  unint64_t result;

  result = qword_1EEAB8E58;
  if (!qword_1EEAB8E58)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkFormat, &type metadata for ArtworkFormat);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E58);
  }
  return result;
}

unint64_t sub_1A9179398()
{
  unint64_t result;

  result = qword_1EEAB8E60;
  if (!qword_1EEAB8E60)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkModel, &type metadata for ArtworkModel);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E60);
  }
  return result;
}

unint64_t sub_1A91793E0()
{
  unint64_t result;

  result = qword_1EEAB8E68;
  if (!qword_1EEAB8E68)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkModel.ModelError, &type metadata for ArtworkModel.ModelError);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E68);
  }
  return result;
}

uint64_t destroy for ArtworkModel(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;

  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 32);
  if (v2 != 255)
    sub_1A913A0C0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v2);
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 != 255)
    sub_1A913A0D8(*(id *)(a1 + 56), v3);
  v4 = *(unsigned __int8 *)(a1 + 80);
  if (v4 != 255)
    sub_1A913A0D8(*(id *)(a1 + 72), v4);
  v5 = *(unsigned __int8 *)(a1 + 96);
  if (v5 != 255)
    sub_1A913A0D8(*(id *)(a1 + 88), v5);
  v6 = *(unsigned __int8 *)(a1 + 112);
  if (v6 != 255)
    sub_1A913A0D8(*(id *)(a1 + 104), v6);
  v7 = *(unsigned __int8 *)(a1 + 128);
  if (v7 != 255)
    sub_1A913A0D8(*(id *)(a1 + 120), v7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArtworkModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  int v9;
  id v10;
  id *v11;
  int v12;
  id v13;
  id *v14;
  int v15;
  id v16;
  id *v17;
  int v18;
  id v19;
  id *v20;
  int v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    sub_1A913A9C0(v6, v7, v5);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = v5;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v8 = (id *)(a2 + 56);
  v9 = *(unsigned __int8 *)(a2 + 64);
  if (v9 == 255)
  {
    *(_QWORD *)(a1 + 56) = *v8;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  }
  else
  {
    v10 = *v8;
    sub_1A913A9D8(*v8, *(_BYTE *)(a2 + 64));
    *(_QWORD *)(a1 + 56) = v10;
    *(_BYTE *)(a1 + 64) = v9;
  }
  v11 = (id *)(a2 + 72);
  v12 = *(unsigned __int8 *)(a2 + 80);
  if (v12 == 255)
  {
    *(_QWORD *)(a1 + 72) = *v11;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  }
  else
  {
    v13 = *v11;
    sub_1A913A9D8(*v11, *(_BYTE *)(a2 + 80));
    *(_QWORD *)(a1 + 72) = v13;
    *(_BYTE *)(a1 + 80) = v12;
  }
  v14 = (id *)(a2 + 88);
  v15 = *(unsigned __int8 *)(a2 + 96);
  if (v15 == 255)
  {
    *(_QWORD *)(a1 + 88) = *v14;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  }
  else
  {
    v16 = *v14;
    sub_1A913A9D8(*v14, *(_BYTE *)(a2 + 96));
    *(_QWORD *)(a1 + 88) = v16;
    *(_BYTE *)(a1 + 96) = v15;
  }
  v17 = (id *)(a2 + 104);
  v18 = *(unsigned __int8 *)(a2 + 112);
  if (v18 == 255)
  {
    *(_QWORD *)(a1 + 104) = *v17;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  }
  else
  {
    v19 = *v17;
    sub_1A913A9D8(*v17, *(_BYTE *)(a2 + 112));
    *(_QWORD *)(a1 + 104) = v19;
    *(_BYTE *)(a1 + 112) = v18;
  }
  v20 = (id *)(a2 + 120);
  v21 = *(unsigned __int8 *)(a2 + 128);
  if (v21 == 255)
  {
    *(_QWORD *)(a1 + 120) = *v20;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  }
  else
  {
    v22 = *v20;
    sub_1A913A9D8(*v20, *(_BYTE *)(a2 + 128));
    *(_QWORD *)(a1 + 120) = v22;
    *(_BYTE *)(a1 + 128) = v21;
  }
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  v23 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v23;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
  v24 = *(_QWORD *)(a2 + 160);
  v25 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v24;
  *(_QWORD *)(a1 + 168) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArtworkModel(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  id *v16;
  id *v17;
  int v18;
  id v19;
  void *v20;
  char v21;
  id v22;
  char v23;
  id v24;
  id *v25;
  id *v26;
  int v27;
  id v28;
  void *v29;
  char v30;
  id v31;
  char v32;
  id v33;
  id *v34;
  id *v35;
  int v36;
  id v37;
  void *v38;
  char v39;
  id v40;
  char v41;
  id v42;
  id *v43;
  id *v44;
  int v45;
  id v46;
  void *v47;
  char v48;
  id v49;
  char v50;
  id v51;
  id *v52;
  id *v53;
  int v54;
  id v55;
  void *v56;
  char v57;
  id v58;
  char v59;
  id v60;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 16);
  v5 = (__int128 *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v6 == 255)
    {
      v15 = *v5;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *v4 = v15;
    }
    else
    {
      v12 = *(_QWORD *)(a2 + 16);
      v13 = *(_QWORD *)(a2 + 24);
      sub_1A913A9C0(v12, v13, *(_BYTE *)(a2 + 32));
      *(_QWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 24) = v13;
      *(_BYTE *)(a1 + 32) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_1A913B300(a1 + 16);
    v14 = *(_BYTE *)(a2 + 32);
    *v4 = *v5;
    *(_BYTE *)(a1 + 32) = v14;
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 16);
    v8 = *(_QWORD *)(a2 + 24);
    sub_1A913A9C0(v7, v8, *(_BYTE *)(a2 + 32));
    v9 = *(_QWORD *)(a1 + 16);
    v10 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    v11 = *(_BYTE *)(a1 + 32);
    *(_BYTE *)(a1 + 32) = v6;
    sub_1A913A0C0(v9, v10, v11);
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v16 = (id *)(a1 + 56);
  v17 = (id *)(a2 + 56);
  v18 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v18 == 255)
    {
      v24 = *v17;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *v16 = v24;
    }
    else
    {
      v22 = *v17;
      sub_1A913A9D8(*v17, *(_BYTE *)(a2 + 64));
      *(_QWORD *)(a1 + 56) = v22;
      *(_BYTE *)(a1 + 64) = v18;
    }
  }
  else if (v18 == 255)
  {
    sub_1A913B334(a1 + 56);
    v23 = *(_BYTE *)(a2 + 64);
    *v16 = *v17;
    *(_BYTE *)(a1 + 64) = v23;
  }
  else
  {
    v19 = *v17;
    sub_1A913A9D8(*v17, *(_BYTE *)(a2 + 64));
    v20 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v19;
    v21 = *(_BYTE *)(a1 + 64);
    *(_BYTE *)(a1 + 64) = v18;
    sub_1A913A0D8(v20, v21);
  }
  v25 = (id *)(a1 + 72);
  v26 = (id *)(a2 + 72);
  v27 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v27 == 255)
    {
      v33 = *v26;
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *v25 = v33;
    }
    else
    {
      v31 = *v26;
      sub_1A913A9D8(*v26, *(_BYTE *)(a2 + 80));
      *(_QWORD *)(a1 + 72) = v31;
      *(_BYTE *)(a1 + 80) = v27;
    }
  }
  else if (v27 == 255)
  {
    sub_1A913B334(a1 + 72);
    v32 = *(_BYTE *)(a2 + 80);
    *v25 = *v26;
    *(_BYTE *)(a1 + 80) = v32;
  }
  else
  {
    v28 = *v26;
    sub_1A913A9D8(*v26, *(_BYTE *)(a2 + 80));
    v29 = *(void **)(a1 + 72);
    *(_QWORD *)(a1 + 72) = v28;
    v30 = *(_BYTE *)(a1 + 80);
    *(_BYTE *)(a1 + 80) = v27;
    sub_1A913A0D8(v29, v30);
  }
  v34 = (id *)(a1 + 88);
  v35 = (id *)(a2 + 88);
  v36 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v36 == 255)
    {
      v42 = *v35;
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *v34 = v42;
    }
    else
    {
      v40 = *v35;
      sub_1A913A9D8(*v35, *(_BYTE *)(a2 + 96));
      *(_QWORD *)(a1 + 88) = v40;
      *(_BYTE *)(a1 + 96) = v36;
    }
  }
  else if (v36 == 255)
  {
    sub_1A913B334(a1 + 88);
    v41 = *(_BYTE *)(a2 + 96);
    *v34 = *v35;
    *(_BYTE *)(a1 + 96) = v41;
  }
  else
  {
    v37 = *v35;
    sub_1A913A9D8(*v35, *(_BYTE *)(a2 + 96));
    v38 = *(void **)(a1 + 88);
    *(_QWORD *)(a1 + 88) = v37;
    v39 = *(_BYTE *)(a1 + 96);
    *(_BYTE *)(a1 + 96) = v36;
    sub_1A913A0D8(v38, v39);
  }
  v43 = (id *)(a1 + 104);
  v44 = (id *)(a2 + 104);
  v45 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v45 == 255)
    {
      v51 = *v44;
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *v43 = v51;
    }
    else
    {
      v49 = *v44;
      sub_1A913A9D8(*v44, *(_BYTE *)(a2 + 112));
      *(_QWORD *)(a1 + 104) = v49;
      *(_BYTE *)(a1 + 112) = v45;
    }
  }
  else if (v45 == 255)
  {
    sub_1A913B334(a1 + 104);
    v50 = *(_BYTE *)(a2 + 112);
    *v43 = *v44;
    *(_BYTE *)(a1 + 112) = v50;
  }
  else
  {
    v46 = *v44;
    sub_1A913A9D8(*v44, *(_BYTE *)(a2 + 112));
    v47 = *(void **)(a1 + 104);
    *(_QWORD *)(a1 + 104) = v46;
    v48 = *(_BYTE *)(a1 + 112);
    *(_BYTE *)(a1 + 112) = v45;
    sub_1A913A0D8(v47, v48);
  }
  v52 = (id *)(a1 + 120);
  v53 = (id *)(a2 + 120);
  v54 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v54 == 255)
    {
      v60 = *v53;
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *v52 = v60;
    }
    else
    {
      v58 = *v53;
      sub_1A913A9D8(*v53, *(_BYTE *)(a2 + 128));
      *(_QWORD *)(a1 + 120) = v58;
      *(_BYTE *)(a1 + 128) = v54;
    }
  }
  else if (v54 == 255)
  {
    sub_1A913B334(a1 + 120);
    v59 = *(_BYTE *)(a2 + 128);
    *v52 = *v53;
    *(_BYTE *)(a1 + 128) = v59;
  }
  else
  {
    v55 = *v53;
    sub_1A913A9D8(*v53, *(_BYTE *)(a2 + 128));
    v56 = *(void **)(a1 + 120);
    *(_QWORD *)(a1 + 120) = v55;
    v57 = *(_BYTE *)(a1 + 128);
    *(_BYTE *)(a1 + 128) = v54;
    sub_1A913A0D8(v56, v57);
  }
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
  *(_BYTE *)(a1 + 131) = *(_BYTE *)(a2 + 131);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_BYTE *)(a1 + 154) = *(_BYTE *)(a2 + 154);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for ArtworkModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  int v12;
  void *v13;
  _QWORD *v14;
  int v15;
  int v16;
  void *v17;
  _QWORD *v18;
  int v19;
  int v20;
  void *v21;
  _QWORD *v22;
  int v23;
  int v24;
  void *v25;
  _QWORD *v26;
  int v27;
  int v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a1 + 32);
  if (v6 != 255)
  {
    v7 = *(unsigned __int8 *)(a2 + 32);
    if (v7 != 255)
    {
      v8 = *(_QWORD *)(a1 + 16);
      v9 = *(_QWORD *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *v5;
      *(_BYTE *)(a1 + 32) = v7;
      sub_1A913A0C0(v8, v9, v6);
      goto LABEL_6;
    }
    sub_1A913B300(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
LABEL_6:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v10 = (_QWORD *)(a2 + 56);
  v11 = *(unsigned __int8 *)(a1 + 64);
  if (v11 != 255)
  {
    v12 = *(unsigned __int8 *)(a2 + 64);
    if (v12 != 255)
    {
      v13 = *(void **)(a1 + 56);
      *(_QWORD *)(a1 + 56) = *v10;
      *(_BYTE *)(a1 + 64) = v12;
      sub_1A913A0D8(v13, v11);
      goto LABEL_11;
    }
    sub_1A913B334(a1 + 56);
  }
  *(_QWORD *)(a1 + 56) = *v10;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
LABEL_11:
  v14 = (_QWORD *)(a2 + 72);
  v15 = *(unsigned __int8 *)(a1 + 80);
  if (v15 != 255)
  {
    v16 = *(unsigned __int8 *)(a2 + 80);
    if (v16 != 255)
    {
      v17 = *(void **)(a1 + 72);
      *(_QWORD *)(a1 + 72) = *v14;
      *(_BYTE *)(a1 + 80) = v16;
      sub_1A913A0D8(v17, v15);
      goto LABEL_16;
    }
    sub_1A913B334(a1 + 72);
  }
  *(_QWORD *)(a1 + 72) = *v14;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
LABEL_16:
  v18 = (_QWORD *)(a2 + 88);
  v19 = *(unsigned __int8 *)(a1 + 96);
  if (v19 != 255)
  {
    v20 = *(unsigned __int8 *)(a2 + 96);
    if (v20 != 255)
    {
      v21 = *(void **)(a1 + 88);
      *(_QWORD *)(a1 + 88) = *v18;
      *(_BYTE *)(a1 + 96) = v20;
      sub_1A913A0D8(v21, v19);
      goto LABEL_21;
    }
    sub_1A913B334(a1 + 88);
  }
  *(_QWORD *)(a1 + 88) = *v18;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
LABEL_21:
  v22 = (_QWORD *)(a2 + 104);
  v23 = *(unsigned __int8 *)(a1 + 112);
  if (v23 != 255)
  {
    v24 = *(unsigned __int8 *)(a2 + 112);
    if (v24 != 255)
    {
      v25 = *(void **)(a1 + 104);
      *(_QWORD *)(a1 + 104) = *v22;
      *(_BYTE *)(a1 + 112) = v24;
      sub_1A913A0D8(v25, v23);
      goto LABEL_26;
    }
    sub_1A913B334(a1 + 104);
  }
  *(_QWORD *)(a1 + 104) = *v22;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
LABEL_26:
  v26 = (_QWORD *)(a2 + 120);
  v27 = *(unsigned __int8 *)(a1 + 128);
  if (v27 == 255)
  {
LABEL_30:
    *(_QWORD *)(a1 + 120) = *v26;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    goto LABEL_31;
  }
  v28 = *(unsigned __int8 *)(a2 + 128);
  if (v28 == 255)
  {
    sub_1A913B334(a1 + 120);
    goto LABEL_30;
  }
  v29 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *v26;
  *(_BYTE *)(a1 + 128) = v28;
  sub_1A913A0D8(v29, v27);
LABEL_31:
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  v30 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v30;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_BYTE *)(a1 + 154) = *(_BYTE *)(a2 + 154);
  v31 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v31;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 176))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 176) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkModel()
{
  return &type metadata for ArtworkModel;
}

uint64_t storeEnumTagSinglePayload for ArtworkModel.ModelError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A9179EF0 + 4 * byte_1A940A033[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A9179F24 + 4 * byte_1A940A02E[v4]))();
}

uint64_t sub_1A9179F24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9179F2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9179F34);
  return result;
}

uint64_t sub_1A9179F40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9179F48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A9179F4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9179F54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkModel.ModelError()
{
  return &type metadata for ArtworkModel.ModelError;
}

uint64_t getEnumTagSinglePayload for ArtworkModel.CK(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkModel.CK(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1A917A04C + 4 * byte_1A940A03D[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1A917A080 + 4 * byte_1A940A038[v4]))();
}

uint64_t sub_1A917A080(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A917A088(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A917A090);
  return result;
}

uint64_t sub_1A917A09C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A917A0A4);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1A917A0A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A917A0B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkModel.CK()
{
  return &type metadata for ArtworkModel.CK;
}

unint64_t sub_1A917A0D0()
{
  unint64_t result;

  result = qword_1EEAB8E70;
  if (!qword_1EEAB8E70)
  {
    result = MEMORY[0x1AF414014](&unk_1A940A2A8, &type metadata for ArtworkModel.CK);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E70);
  }
  return result;
}

unint64_t sub_1A917A118()
{
  unint64_t result;

  result = qword_1EEAB8E78;
  if (!qword_1EEAB8E78)
  {
    result = MEMORY[0x1AF414014](&unk_1A940A218, &type metadata for ArtworkModel.CK);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E78);
  }
  return result;
}

unint64_t sub_1A917A160()
{
  unint64_t result;

  result = qword_1EEAB8E80;
  if (!qword_1EEAB8E80)
  {
    result = MEMORY[0x1AF414014](&unk_1A940A240, &type metadata for ArtworkModel.CK);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E80);
  }
  return result;
}

uint64_t sub_1A917A1A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6574616C706D6574 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874646977 && a2 == 0xE500000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x457972617262696CLL && a2 == 0xED0000797469746ELL || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xEA00000000007372 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1886351971 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A94456C0 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x74616D726F66 && a2 == 0xE600000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6D6F747375437369 && a2 == 0xEE006C6F626D7953 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A94456E0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t sub_1A917A6B8()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  __int128 v33;
  _BYTE v34[40];
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v35 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1A929E53C(0, v2, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9680);
  v4 = 0;
  v28 = v2;
  v29 = v1 + 32;
  while (2)
  {
    v5 = *(_QWORD *)(v29 + 8 * v4);
    v30 = v4 + 1;
    v6 = sub_1A93F8E74();
    v7 = (_QWORD *)v6;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v31 = v5 + 64;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_bridgeObjectRetain();
    v13 = 0;
    if (v10)
    {
LABEL_7:
      v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v15 = v14 | (v13 << 6);
      goto LABEL_24;
    }
    while (1)
    {
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_35;
      if (v16 >= v32)
        goto LABEL_27;
      v17 = *(_QWORD *)(v31 + 8 * v16);
      ++v13;
      if (!v17)
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v32)
          goto LABEL_27;
        v17 = *(_QWORD *)(v31 + 8 * v13);
        if (!v17)
        {
          v13 = v16 + 2;
          if (v16 + 2 >= v32)
            goto LABEL_27;
          v17 = *(_QWORD *)(v31 + 8 * v13);
          if (!v17)
          {
            v13 = v16 + 3;
            if (v16 + 3 >= v32)
              goto LABEL_27;
            v17 = *(_QWORD *)(v31 + 8 * v13);
            if (!v17)
              break;
          }
        }
      }
LABEL_23:
      v10 = (v17 - 1) & v17;
      v15 = __clz(__rbit64(v17)) + (v13 << 6);
LABEL_24:
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v15);
      v21 = *v19;
      v20 = v19[1];
      sub_1A9131514(*(_QWORD *)(v5 + 56) + 40 * v15, (uint64_t)v34);
      swift_bridgeObjectRetain();
      AnyCodable.value.getter();
      sub_1A9131550((uint64_t)v34);
      *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v22 = (_QWORD *)(v7[6] + 16 * v15);
      *v22 = v21;
      v22[1] = v20;
      result = (uint64_t)sub_1A908A5DC(&v33, (_OWORD *)(v7[7] + 32 * v15));
      v23 = v7[2];
      v24 = __OFADD__(v23, 1);
      v25 = v23 + 1;
      if (v24)
      {
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7[2] = v25;
      if (v10)
        goto LABEL_7;
    }
    v18 = v16 + 4;
    if (v18 >= v32)
    {
LABEL_27:
      swift_bridgeObjectRelease();
      v3 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A929E53C(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v35;
      }
      v27 = *(_QWORD *)(v3 + 16);
      v26 = *(_QWORD *)(v3 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1A929E53C(v26 > 1, v27 + 1, 1);
        v3 = v35;
      }
      *(_QWORD *)(v3 + 16) = v27 + 1;
      *(_QWORD *)(v3 + 8 * v27 + 32) = v7;
      v4 = v30;
      if (v30 == v28)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
      continue;
    }
    break;
  }
  v17 = *(_QWORD *)(v31 + 8 * v18);
  if (v17)
  {
    v13 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v32)
      goto LABEL_27;
    v17 = *(_QWORD *)(v31 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1A917A9C8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000018;
  else
    return 0x746E656D676573;
}

uint64_t sub_1A917AA08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A917BA14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A917AA2C()
{
  sub_1A917ABD0();
  return sub_1A93F945C();
}

uint64_t sub_1A917AA54()
{
  sub_1A917ABD0();
  return sub_1A93F9468();
}

uint64_t MusicSubscriptionInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABDD0);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A917ABD0();
  sub_1A93F93D8();
  v13 = 0;
  sub_1A93F9000();
  if (!v2)
  {
    v11 = v9;
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBE0);
    sub_1A917AC14();
    sub_1A93F9030();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

unint64_t sub_1A917ABD0()
{
  unint64_t result;

  result = qword_1ED2AB1F0;
  if (!qword_1ED2AB1F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940A58C, &type metadata for MusicSubscriptionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2AB1F0);
  }
  return result;
}

unint64_t sub_1A917AC14()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED2ABBE8;
  if (!qword_1ED2ABBE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2ABBE0);
    v2 = sub_1A9130B4C(&qword_1ED2ABBA8, (uint64_t (*)(void))sub_1A912DB10, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED2ABBE8);
  }
  return result;
}

uint64_t MusicSubscriptionInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABDC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A917ABD0();
  sub_1A93F93C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v16 = 0;
  v9 = sub_1A93F8F4C();
  v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBE0);
  v15 = 1;
  sub_1A917AE60();
  swift_bridgeObjectRetain();
  sub_1A93F8F7C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v14[1];
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A917AE60()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED2ABBF0;
  if (!qword_1ED2ABBF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2ABBE0);
    v2 = sub_1A9130B4C(&qword_1ED2ABBB0, (uint64_t (*)(void))sub_1A9130BC0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED2ABBF0);
  }
  return result;
}

uint64_t sub_1A917AEE4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MusicSubscriptionInfo.init(from:)(a1, a2);
}

uint64_t sub_1A917AEF8(_QWORD *a1)
{
  return MusicSubscriptionInfo.encode(to:)(a1);
}

char *static MusicSubscriptionInfoLoader.loadIfNeeded()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  NSObject *v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _BYTE *v23;
  char *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  void *v30;
  id v31;
  char *v32;
  void (*v33)(char *, os_log_t);
  char *v34;
  os_log_t v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  os_log_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  _BYTE *v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  _QWORD *v53;
  uint64_t v54;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t isa;
  os_log_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  _QWORD aBlock[8];

  v0 = sub_1A93F7D58();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (_QWORD *)sub_1A93F7DB8();
  v5 = *(v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F726C();
  isa = (uint64_t)v8[-1].isa;
  v68 = v8;
  MEMORY[0x1E0C80A78](v8);
  v65 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v66 = (char *)&v64 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v64 - v13;
  v15 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  v16 = objc_msgSend(v15, sel_ams_activeiTunesAccount);

  if (v16)
  {
    if (qword_1ED2A3388 != -1)
      swift_once();
    v17 = (id *)(*(_QWORD *)(qword_1ED2A3378 + OBJC_IVAR___MTPurchaseControllerWrapper_purchaseController)
               + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(qword_1ED2A3378
                                                                 + OBJC_IVAR___MTPurchaseControllerWrapper_purchaseController))
                           + 0xC0));
    swift_beginAccess();
    if (*v17)
    {
      v18 = (char *)*v17;
LABEL_6:
      swift_bridgeObjectRetain();
      return v18;
    }
    v24 = v14;
    if (qword_1ED2A8848 != -1)
      swift_once();
    v25 = sub_1A93F7698();
    v64 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED2A8830);
    v26 = sub_1A93F7674();
    v27 = sub_1A93F87B4();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1A904E000, v26, v27, "No Music Subscription Information in memory.", v28, 2u);
      MEMORY[0x1AF41411C](v28, -1, -1);
    }

    sub_1A93F7098();
    swift_allocObject();
    v69 = sub_1A93F708C();
    v29 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v30 = (void *)objc_opt_self();
    v31 = objc_msgSend(v30, sel_documentsDirectory);
    v32 = v66;
    sub_1A93F7200();

    sub_1A93F71B8();
    v33 = *(void (**)(char *, os_log_t))(isa + 8);
    v34 = v32;
    v35 = v68;
    v33(v34, v68);
    sub_1A93F7224();
    v33(v24, v35);
    v36 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v18 = (char *)objc_msgSend(v29, sel_fileExistsAtPath_, v36);

    if ((_DWORD)v18)
    {
      v37 = objc_msgSend(v30, sel_documentsDirectory);
      sub_1A93F7200();

      v18 = v65;
      sub_1A93F71B8();
      v33(v24, v35);
      v38 = v70;
      v39 = sub_1A93F7278();
      v41 = v35;
      if (!v38)
      {
        v46 = v39;
        v47 = v40;
        v33(v18, v41);
        sub_1A917C1E0();
        sub_1A93F7080();
        v70 = 0;
        v18 = (char *)sub_1A917A6B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        v56 = sub_1A93F7674();
        v57 = sub_1A93F87B4();
        if (os_log_type_enabled(v56, v57))
        {
          v68 = v56;
          v58 = (uint8_t *)swift_slowAlloc();
          isa = swift_slowAlloc();
          v71 = isa;
          *(_DWORD *)v58 = 136315138;
          v66 = (char *)(v58 + 4);
          swift_bridgeObjectRetain();
          v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA120);
          v60 = MEMORY[0x1AF412034](v18, v59);
          v62 = v61;
          swift_bridgeObjectRelease();
          aBlock[7] = sub_1A906436C(v60, v62, &v71);
          sub_1A93F8AA8();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v56 = v68;
          _os_log_impl(&dword_1A904E000, v68, v57, "Retrieved Music Subscription Info from file: %s", v58, 0xCu);
          v63 = isa;
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v63, -1, -1);
          MEMORY[0x1AF41411C](v58, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
        sub_1A905F180(v46, v47);

        swift_release();
        goto LABEL_6;
      }
      v70 = v38;
      v33(v18, v35);
      v48 = v70;
      v49 = v70;
      v50 = sub_1A93F7674();
      v51 = sub_1A93F879C();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = (uint8_t *)swift_slowAlloc();
        v53 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v52 = 138412290;
        v18 = (char *)(v52 + 12);
        v54 = sub_1A93F711C();
        v71 = v54;
        sub_1A93F8AA8();
        *v53 = v54;

        _os_log_impl(&dword_1A904E000, v50, v51, "Unable to get Music Subscription Info with error: %@.", v52, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v53, -1, -1);
        MEMORY[0x1AF41411C](v52, -1, -1);
      }
      else
      {

      }
      swift_willThrow();
    }
    else
    {
      v42 = sub_1A93F7674();
      v43 = sub_1A93F879C();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v44 = 0;
        _os_log_impl(&dword_1A904E000, v42, v43, "File does not exist. Cannot get Music Subscription Info.", v44, 2u);
        MEMORY[0x1AF41411C](v44, -1, -1);
      }

      sub_1A917C19C();
      swift_allocError();
      *v45 = 1;
      swift_willThrow();
    }
    swift_release();
    return v18;
  }
  v19 = v69;
  isa = (uint64_t)v3;
  v68 = v5;
  v70 = v4;
  if (qword_1ED2A93F0 != -1)
    swift_once();
  v18 = (char *)qword_1ED2A93E0;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v19;
  aBlock[4] = j___s18PodcastsFoundation27MusicSubscriptionInfoLoaderC06deletecdE8IfNeededyyFZ_0;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_9;
  v21 = _Block_copy(aBlock);
  sub_1A93F7D88();
  v71 = MEMORY[0x1E0DEE9D8];
  sub_1A90A1130();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D28();
  v22 = isa;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v7, v22, v21);
  _Block_release(v21);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v22, v0);
  ((void (*)(char *, id))v68[1].isa)(v7, v70);
  swift_release();
  sub_1A917C19C();
  swift_allocError();
  *v23 = 2;
  swift_willThrow();
  return v18;
}

id MusicSubscriptionInfoLoader.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id MusicSubscriptionInfoLoader.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MusicSubscriptionInfoLoader();
  return objc_msgSendSuper2(&v2, sel_init);
}

id MusicSubscriptionInfoLoader.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MusicSubscriptionInfoLoader();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A917BA14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E656D676573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A9445750)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A917BB00(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _BYTE *v22;
  id v23;
  void *v24;
  id v25;
  void (*v26)(char *, uint64_t);
  void *v27;
  unsigned int v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  _QWORD *v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  id v50[3];
  void *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  unint64_t v55;

  v3 = sub_1A93F726C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v50 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v50 - v11;
  v13 = *(_QWORD *)a1;
  sub_1A93F70C8();
  swift_allocObject();
  v14 = sub_1A93F70BC();
  v53 = v13;
  v15 = (void *)v14;
  v54 = *(_OWORD *)(a1 + 8);
  sub_1A917CA94();
  v16 = sub_1A93F70B0();
  if (v1)
  {

    if (qword_1ED2A8848 != -1)
      swift_once();
    v18 = sub_1A93F7698();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED2A8830);
    v19 = sub_1A93F7674();
    v20 = sub_1A93F879C();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1A904E000, v19, v20, "Unable to encode Music Subscription Info. Cannot write file.", v21, 2u);
      MEMORY[0x1AF41411C](v21, -1, -1);
    }

    sub_1A917C19C();
    swift_allocError();
    *v22 = 0;
    swift_willThrow();
  }
  else
  {
    v51 = 0;
    v52 = v16;
    v55 = v17;
    v50[1] = v15;
    v50[0] = (id)objc_opt_self();
    v23 = objc_msgSend(v50[0], sel_defaultManager);
    v24 = (void *)objc_opt_self();
    v25 = objc_msgSend(v24, sel_documentsDirectory);
    sub_1A93F7200();

    v50[2] = (id)0x80000001A9445700;
    sub_1A93F71B8();
    v26 = *(void (**)(char *, uint64_t))(v4 + 8);
    v26(v9, v3);
    sub_1A93F7224();
    v26(v12, v3);
    v27 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(v23, sel_fileExistsAtPath_, v27);

    if (v28)
    {
      v29 = objc_msgSend(v24, sel_documentsDirectory);
      sub_1A93F7200();

      sub_1A93F71B8();
      v26(v12, v3);
      v30 = v51;
      v31 = v52;
      v32 = v55;
      sub_1A93F72C0();
      if (v30)
      {
        v26(v6, v3);
        if (qword_1ED2A8848 != -1)
          swift_once();
        v33 = sub_1A93F7698();
        __swift_project_value_buffer(v33, (uint64_t)qword_1ED2A8830);
        v34 = v30;
        v35 = sub_1A93F7674();
        v36 = sub_1A93F879C();
        if (os_log_type_enabled(v35, v36))
        {
          v37 = (uint8_t *)swift_slowAlloc();
          v38 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v37 = 138412290;
          v39 = sub_1A93F711C();
          v53 = v39;
          v31 = v52;
          sub_1A93F8AA8();
          *v38 = v39;

          _os_log_impl(&dword_1A904E000, v35, v36, "Cannot update the existing file with error: %@", v37, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v38, -1, -1);
          MEMORY[0x1AF41411C](v37, -1, -1);
        }
        else
        {

        }
        swift_willThrow();
        sub_1A905F180(v31, v55);
      }
      else
      {
        v26(v6, v3);
        sub_1A905F180(v31, v32);
      }
    }
    else
    {
      v40 = objc_msgSend(v50[0], sel_defaultManager);
      v41 = objc_msgSend(v24, sel_documentsDirectory);
      sub_1A93F7200();

      sub_1A93F71B8();
      v26(v9, v3);
      sub_1A93F7224();
      v26(v12, v3);
      v42 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      v43 = v52;
      v44 = (void *)sub_1A93F729C();
      objc_msgSend(v40, sel_createFileAtPath_contents_attributes_, v42, v44, 0);

      if (qword_1ED2A8848 != -1)
        swift_once();
      v45 = sub_1A93F7698();
      __swift_project_value_buffer(v45, (uint64_t)qword_1ED2A8830);
      v46 = sub_1A93F7674();
      v47 = sub_1A93F87B4();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v48 = 0;
        _os_log_impl(&dword_1A904E000, v46, v47, "Created new file to store Music Subscription Info sync.", v48, 2u);
        MEMORY[0x1AF41411C](v48, -1, -1);
      }
      sub_1A905F180(v43, v55);

    }
  }
  return swift_release();
}

uint64_t sub_1A917C188()
{
  return swift_deallocObject();
}

unint64_t sub_1A917C19C()
{
  unint64_t result;

  result = qword_1EEAB8E88;
  if (!qword_1EEAB8E88)
  {
    result = MEMORY[0x1AF414014](&unk_1A940A54C, &type metadata for MusicSubscriptionInfoLoader.MusicSubscriptionInfoLoaderError);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E88);
  }
  return result;
}

unint64_t sub_1A917C1E0()
{
  unint64_t result;

  result = qword_1ED2AB210;
  if (!qword_1ED2AB210)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MusicSubscriptionInfo, &type metadata for MusicSubscriptionInfo);
    atomic_store(result, (unint64_t *)&qword_1ED2AB210);
  }
  return result;
}

void _s18PodcastsFoundation27MusicSubscriptionInfoLoaderC06deletecdE8IfNeededyyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void (*v11)(_BYTE *, uint64_t);
  void *v12;
  id v13;
  id v14;
  void *v15;
  unsigned __int8 v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _BYTE v31[16];
  id v32[2];

  v32[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1A93F726C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v31[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v6 = &v31[-v5];
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_defaultManager);
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_documentsDirectory);
  sub_1A93F7200();

  sub_1A93F71B8();
  v11 = *(void (**)(_BYTE *, uint64_t))(v1 + 8);
  v11(v3, v0);
  sub_1A93F7224();
  v11(v6, v0);
  v12 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  LODWORD(v1) = objc_msgSend(v8, sel_fileExistsAtPath_, v12);

  if ((_DWORD)v1)
  {
    v13 = objc_msgSend(v7, sel_defaultManager);
    v14 = objc_msgSend(v9, sel_documentsDirectory);
    sub_1A93F7200();

    sub_1A93F71B8();
    v11(v3, v0);
    sub_1A93F7224();
    v11(v6, v0);
    v15 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v32[0] = 0;
    v16 = objc_msgSend(v13, sel_removeItemAtPath_error_, v15, v32);

    v17 = v32[0];
    if ((v16 & 1) == 0)
    {
      v18 = v17;
      v19 = (void *)sub_1A93F7128();

      swift_willThrow();
      if (qword_1ED2A8848 != -1)
        swift_once();
      v20 = sub_1A93F7698();
      __swift_project_value_buffer(v20, (uint64_t)qword_1ED2A8830);
      v21 = v19;
      v22 = sub_1A93F7674();
      v23 = sub_1A93F879C();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v25 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v24 = 138412290;
        v26 = (void *)sub_1A93F711C();
        v32[0] = v26;
        sub_1A93F8AA8();
        *v25 = v26;

        _os_log_impl(&dword_1A904E000, v22, v23, "Unable to delete Music Subscription Info with error: %@.", v24, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v25, -1, -1);
        MEMORY[0x1AF41411C](v24, -1, -1);

      }
      else
      {

      }
    }
  }
  else
  {
    if (qword_1ED2A8848 != -1)
      swift_once();
    v27 = sub_1A93F7698();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED2A8830);
    v28 = sub_1A93F7674();
    v29 = sub_1A93F87B4();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_1A904E000, v28, v29, "No subscription info on disk. Not deleting data.", v30, 2u);
      MEMORY[0x1AF41411C](v30, -1, -1);
    }

  }
}

uint64_t type metadata accessor for MusicSubscriptionInfoLoader()
{
  return objc_opt_self();
}

_QWORD *assignWithCopy for MusicSubscriptionInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicSubscriptionInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicSubscriptionInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicSubscriptionInfo()
{
  return &type metadata for MusicSubscriptionInfo;
}

uint64_t storeEnumTagSinglePayload for MusicSubscriptionInfoLoader.MusicSubscriptionInfoLoaderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A917C828 + 4 * byte_1A940A325[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A917C85C + 4 * byte_1A940A320[v4]))();
}

uint64_t sub_1A917C85C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A917C864(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A917C86CLL);
  return result;
}

uint64_t sub_1A917C878(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A917C880);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A917C884(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A917C88C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicSubscriptionInfoLoader.MusicSubscriptionInfoLoaderError()
{
  return &type metadata for MusicSubscriptionInfoLoader.MusicSubscriptionInfoLoaderError;
}

uint64_t storeEnumTagSinglePayload for MusicSubscriptionInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A917C8F4 + 4 * byte_1A940A32F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A917C928 + 4 * byte_1A940A32A[v4]))();
}

uint64_t sub_1A917C928(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A917C930(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A917C938);
  return result;
}

uint64_t sub_1A917C944(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A917C94CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A917C950(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A917C958(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicSubscriptionInfo.CodingKeys()
{
  return &type metadata for MusicSubscriptionInfo.CodingKeys;
}

unint64_t sub_1A917C978()
{
  unint64_t result;

  result = qword_1EEAB8E90;
  if (!qword_1EEAB8E90)
  {
    result = MEMORY[0x1AF414014](&unk_1A940A4BC, &type metadata for MusicSubscriptionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E90);
  }
  return result;
}

unint64_t sub_1A917C9C0()
{
  unint64_t result;

  result = qword_1EEAB8E98;
  if (!qword_1EEAB8E98)
  {
    result = MEMORY[0x1AF414014](&unk_1A940A524, &type metadata for MusicSubscriptionInfoLoader.MusicSubscriptionInfoLoaderError);
    atomic_store(result, (unint64_t *)&qword_1EEAB8E98);
  }
  return result;
}

unint64_t sub_1A917CA08()
{
  unint64_t result;

  result = qword_1ED2AB200;
  if (!qword_1ED2AB200)
  {
    result = MEMORY[0x1AF414014](&unk_1A940A42C, &type metadata for MusicSubscriptionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2AB200);
  }
  return result;
}

unint64_t sub_1A917CA50()
{
  unint64_t result;

  result = qword_1ED2AB1F8;
  if (!qword_1ED2AB1F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A940A454, &type metadata for MusicSubscriptionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2AB1F8);
  }
  return result;
}

unint64_t sub_1A917CA94()
{
  unint64_t result;

  result = qword_1ED2AB208;
  if (!qword_1ED2AB208)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MusicSubscriptionInfo, &type metadata for MusicSubscriptionInfo);
    atomic_store(result, (unint64_t *)&qword_1ED2AB208);
  }
  return result;
}

void (*Synchronized.wrappedValue.modify(_QWORD *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;

  v5 = malloc(0x68uLL);
  *a1 = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v5[8] = v2;
  v5[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[10] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[11] = malloc(v8);
  v9 = malloc(v8);
  v5[12] = v9;
  OSAllocatedUnfairLock.current.getter(*v2, v6, (uint64_t)v9);
  return sub_1A917CB5C;
}

void sub_1A917CB5C(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void (*v9)(void *, uint64_t);
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v4 = *(void **)(*(_QWORD *)a1 + 88);
  v3 = *(void **)(*(_QWORD *)a1 + 96);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    v7 = (uint64_t *)v2[8];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v6 + 16))(v2[11], v2[12], v2[9]);
    v8 = *v7;
    v2[2] = v5;
    v2[3] = v4;
    sub_1A905F5EC((void (*)(uint64_t))sub_1A917CE84, (uint64_t)v2, v8);
    v9 = *(void (**)(void *, uint64_t))(v6 + 8);
    v9(v4, v5);
    v9(v3, v5);
  }
  else
  {
    v10 = *(_QWORD *)v2[8];
    v2[6] = v5;
    v2[7] = v3;
    sub_1A905F5EC((void (*)(uint64_t))sub_1A917CE84, (uint64_t)(v2 + 4), v10);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  }
  free(v3);
  free(v4);
  free(v2);
}

uint64_t sub_1A917CC5C(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9E0];
  return swift_bridgeObjectRelease();
}

uint64_t Synchronized<A>.compareExchange(expected:desired:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[7];
  unsigned __int8 v7;

  v6[2] = a4;
  v6[3] = a5;
  v6[4] = a1;
  v6[5] = a2;
  sub_1A905F5EC((void (*)(uint64_t))sub_1A917CD98, (uint64_t)v6, a3);
  return v7;
}

uint64_t Synchronized<A>.enableIfDisabled()(uint64_t a1)
{
  os_unfair_lock_s *v2;
  int v3;
  uint64_t v4;

  v2 = (os_unfair_lock_s *)(a1 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 20));
  v3 = *(unsigned __int8 *)(a1 + 16);
  if ((v3 & 1) == 0)
    *(_BYTE *)(a1 + 16) = 1;
  v4 = v3 ^ 1u;
  os_unfair_lock_unlock(v2);
  return v4;
}

_BYTE *sub_1A917CD44@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _BYTE *a3@<X2>, BOOL *a4@<X8>)
{
  char v4;

  v4 = *a2 ^ *result;
  if ((v4 & 1) == 0)
    *result = *a3;
  *a4 = (v4 & 1) == 0;
  return result;
}

uint64_t sub_1A917CD70()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1A917CD98@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 40);
  result = sub_1A93F8004();
  if ((result & 1) != 0)
  {
    v8 = *(_QWORD *)(v5 - 8);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v5);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v6, v5);
    v9 = 1;
  }
  else
  {
    v9 = 0;
  }
  *a2 = v9;
  return result;
}

uint64_t sub_1A917CE20(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return Synchronized.wrappedValue.getter(*a1, *(_QWORD *)(a3 + a2 - 8));
}

void sub_1A917CE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = type metadata accessor for Synchronized(0, *(_QWORD *)(a4 + a3 - 8), a3, a4);
  sub_1A9098DB4(a1, v5);
}

uint64_t sub_1A917CE6C()
{
  return 8;
}

_QWORD *sub_1A917CE78(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A917CE84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v3, v4);
}

id RecommendationModuleContentRequest.__allocating_init(moduleID:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR___MTRecommendationModuleContentRequest_moduleID];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id RecommendationModuleContentRequest.init(moduleID:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_super v5;

  v3 = &v2[OBJC_IVAR___MTRecommendationModuleContentRequest_moduleID];
  *(_QWORD *)v3 = a1;
  *((_QWORD *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for RecommendationModuleContentRequest();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for RecommendationModuleContentRequest()
{
  return objc_opt_self();
}

uint64_t sub_1A917CFF0(void (*a1)(uint64_t, _QWORD), uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  char *v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int v27;
  uint64_t *v28;
  unint64_t *v29;
  unint64_t v30;
  char *v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, _QWORD);
  char *v46;
  char v47[24];
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v44 = a2;
  v45 = a1;
  v4 = sub_1A93F7698();
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x1E0C80A78](v4);
  v46 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7158();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RecommendationModulesCache();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend((id)objc_opt_self(), sel_sharedCacheDirectory);
  sub_1A93F7200();

  strcpy(v47, "ListenNowCache");
  v47[15] = -18;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CAFD60], v6);
  sub_1A90828B0();
  sub_1A93F7254();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v18 = &v16[*(int *)(v14 + 20)];
  *(_QWORD *)v18 = 0x4D73656C75646F4DLL;
  *((_QWORD *)v18 + 1) = 0xEF61746164617465;
  v19 = &v16[*(int *)(v14 + 24)];
  strcpy(v19, "ModuleContent-");
  v19[15] = -18;
  v20 = (uint64_t *)&v3[OBJC_IVAR___MTRecommendationModuleContentRequest_moduleID];
  v21 = *(_QWORD *)&v3[OBJC_IVAR___MTRecommendationModuleContentRequest_moduleID];
  swift_bridgeObjectRetain();
  v22 = (char *)RecommendationModulesCache.moduleContent(moduleID:)(v21);
  swift_bridgeObjectRelease();
  sub_1A917DA78((uint64_t)v16);
  v23 = MEMORY[0x1E0DEE9D8];
  if (!v22)
    goto LABEL_15;
  v24 = *(_QWORD *)&v22[OBJC_IVAR___MTRecommendationModule_attributes];
  if (!v24)
    goto LABEL_20;
  v25 = (uint64_t *)(v24 + OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes);
  swift_beginAccess();
  v26 = *v25;
  if (!*v25 || !*(_QWORD *)(v26 + 16))
    goto LABEL_20;
  v27 = *(unsigned __int8 *)(v26 + 32);
  if (v27)
  {
    if (v27 == 1)
    {
      v28 = &OBJC_IVAR___MTRecommendationModule_shows;
      goto LABEL_9;
    }
    while (1)
    {
LABEL_20:
      sub_1A93F8E14();
      __break(1u);
    }
  }
  v28 = &OBJC_IVAR___MTRecommendationModule_episodes;
LABEL_9:
  v29 = (unint64_t *)&v22[*v28];
  swift_beginAccess();
  if (*v29)
    v30 = *v29;
  else
    v30 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30 >> 62)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC4F8);
    v23 = sub_1A93F8E20();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A93F91E0();

    v23 = v30;
  }
  swift_bridgeObjectRelease();
LABEL_15:
  v31 = v46;
  sub_1A93F7680();
  v32 = v3;
  v33 = sub_1A93F7674();
  v34 = sub_1A93F87B4();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v49 = v36;
    *(_DWORD *)v35 = 136315138;
    v37 = *v20;
    v38 = v20[1];
    swift_bridgeObjectRetain();
    v48 = sub_1A906436C(v37, v38, &v49);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v33, v34, "Displaying items from Listen Now module with ID %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v36, -1, -1);
    MEMORY[0x1AF41411C](v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v46, v43);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v43);
  }
  type metadata accessor for RecommendationModuleContentResponse();
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = v23;
  swift_bridgeObjectRelease();
  v45(v39, 0);
  return swift_release();
}

uint64_t RecommendationModuleContentResponse.__allocating_init(serverObjects:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  swift_bridgeObjectRelease();
  return v2;
}

id RecommendationModuleContentRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RecommendationModuleContentRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1A917D6B4()
{
  return swift_bridgeObjectRelease();
}

id RecommendationModuleContentRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecommendationModuleContentRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t RecommendationModuleContentResponse.init(serverObjects:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1A917D7A0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 16);
  if ((v4 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    MEMORY[0x1AF4129DC](a2, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((a2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
    {
      swift_unknownObjectRetain();
      return;
    }
    __break(1u);
  }
}

uint64_t RecommendationModuleContentResponse.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RecommendationModuleContentResponse.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A917DA78(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RecommendationModulesCache();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for RecommendationModuleContentResponse()
{
  return objc_opt_self();
}

uint64_t method lookup function for RecommendationModuleContentRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecommendationModuleContentRequest.__allocating_init(moduleID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of RecommendationModuleContentRequest.perform(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t method lookup function for RecommendationModuleContentResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecommendationModuleContentResponse.__allocating_init(serverObjects:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of RecommendationModuleContentResponse.items(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of RecommendationModuleContentResponse.item(in:at:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of RecommendationModuleContentResponse.numberOfItems(in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of RecommendationModuleContentResponse.numberOfSections()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of RecommendationModuleContentResponse.section(at:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_1A917DB54(char *a1, const void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  char *v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int v26;
  uint64_t *v27;
  unint64_t *v28;
  unint64_t v29;
  char *v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  const void *v42;
  char *v43;
  char v44[24];
  uint64_t v45;
  uint64_t v46;

  v42 = a2;
  v3 = sub_1A93F7698();
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x1E0C80A78](v3);
  v43 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F7158();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F726C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for RecommendationModulesCache();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend((id)objc_opt_self(), sel_sharedCacheDirectory);
  sub_1A93F7200();

  strcpy(v44, "ListenNowCache");
  v44[15] = -18;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CAFD60], v5);
  sub_1A90828B0();
  sub_1A93F7254();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v17 = &v15[*(int *)(v13 + 20)];
  *(_QWORD *)v17 = 0x4D73656C75646F4DLL;
  *((_QWORD *)v17 + 1) = 0xEF61746164617465;
  v18 = &v15[*(int *)(v13 + 24)];
  strcpy(v18, "ModuleContent-");
  v18[15] = -18;
  v19 = (uint64_t *)&a1[OBJC_IVAR___MTRecommendationModuleContentRequest_moduleID];
  v20 = *(_QWORD *)&a1[OBJC_IVAR___MTRecommendationModuleContentRequest_moduleID];
  swift_bridgeObjectRetain();
  v21 = (char *)RecommendationModulesCache.moduleContent(moduleID:)(v20);
  swift_bridgeObjectRelease();
  sub_1A917DA78((uint64_t)v15);
  v22 = MEMORY[0x1E0DEE9D8];
  if (!v21)
    goto LABEL_15;
  v23 = *(_QWORD *)&v21[OBJC_IVAR___MTRecommendationModule_attributes];
  if (!v23)
    goto LABEL_20;
  v24 = (uint64_t *)(v23 + OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes);
  swift_beginAccess();
  v25 = *v24;
  if (!*v24 || !*(_QWORD *)(v25 + 16))
    goto LABEL_20;
  v26 = *(unsigned __int8 *)(v25 + 32);
  if (v26)
  {
    if (v26 == 1)
    {
      v27 = &OBJC_IVAR___MTRecommendationModule_shows;
      goto LABEL_9;
    }
    while (1)
    {
LABEL_20:
      _Block_release(v42);
      sub_1A93F8E14();
      __break(1u);
    }
  }
  v27 = &OBJC_IVAR___MTRecommendationModule_episodes;
LABEL_9:
  v28 = (unint64_t *)&v21[*v27];
  swift_beginAccess();
  if (*v28)
    v29 = *v28;
  else
    v29 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29 >> 62)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC4F8);
    v22 = sub_1A93F8E20();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A93F91E0();

    v22 = v29;
  }
  swift_bridgeObjectRelease();
LABEL_15:
  v30 = v43;
  sub_1A93F7680();
  v31 = a1;
  v32 = sub_1A93F7674();
  v33 = sub_1A93F87B4();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v46 = v35;
    *(_DWORD *)v34 = 136315138;
    v36 = *v19;
    v37 = v19[1];
    swift_bridgeObjectRetain();
    v45 = sub_1A906436C(v36, v37, &v46);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v32, v33, "Displaying items from Listen Now module with ID %s", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v35, -1, -1);
    MEMORY[0x1AF41411C](v34, -1, -1);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v41);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v41);
  }
  type metadata accessor for RecommendationModuleContentResponse();
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v22;
  swift_bridgeObjectRelease();
  (*((void (**)(const void *, uint64_t, _QWORD))v42 + 2))(v42, v38, 0);
  return swift_release();
}

uint64_t AssetProcessingStep<>.resizeOnDisk(for:using:)@<X0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  return AssetProcessingStep<>.resizeOnDisk(to:scale:using:)(a2, a3, a4, a5, a1[22], a1[23], a1[24]);
}

uint64_t AssetProcessingStep<>.resizeOnDisk(to:scale:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  __int128 v20[2];

  v14 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A905DC3C(v17, (uint64_t)v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v7, a2);
  return sub_1A917E1F4(v20, (uint64_t)v16, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1A917E1F4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>)
{
  uint64_t v8;
  int *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  double *v28;
  _BYTE v30[46];
  char v31;
  char v32;
  __int128 v33[11];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char v45;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[16];
  _OWORD v52[12];

  v8 = a4;
  v16 = (int *)type metadata accessor for DiskResizeArtworkProcessingStep(0, a3, a4, a4);
  v17 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(&a5[v16[9]], a2, a3);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v8 + 40))(&v34, a3, v8);
  v52[8] = v42;
  v52[9] = v43;
  v52[10] = v44;
  v52[4] = v38;
  v52[5] = v39;
  v52[6] = v40;
  v52[7] = v41;
  v52[0] = v34;
  v52[1] = v35;
  v52[2] = v36;
  v52[3] = v37;
  v33[8] = v42;
  v33[9] = v43;
  v33[10] = v44;
  v33[4] = v38;
  v33[5] = v39;
  v33[6] = v40;
  v33[7] = v41;
  v33[0] = v34;
  v33[1] = v35;
  v33[2] = v36;
  v33[3] = v37;
  LOBYTE(v8) = v45;
  v32 = v46;
  v18 = v47;
  v19 = v49;
  v31 = v48;
  sub_1A9062170((uint64_t)&v50, (uint64_t)v30, &qword_1ED2AD0C0);
  sub_1A91770E8((uint64_t)v52);
  swift_bridgeObjectRetain();
  ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(v33, v8, &v32, v18, v19, &v31, (uint64_t)v30, (uint64_t)v51, a6, a7, a8);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a2, a3);
  sub_1A9131470((uint64_t)&v34);
  v20 = v51[13];
  *((_OWORD *)a5 + 12) = v51[12];
  *((_OWORD *)a5 + 13) = v20;
  v21 = v51[15];
  *((_OWORD *)a5 + 14) = v51[14];
  *((_OWORD *)a5 + 15) = v21;
  v22 = v51[9];
  *((_OWORD *)a5 + 8) = v51[8];
  *((_OWORD *)a5 + 9) = v22;
  v23 = v51[11];
  *((_OWORD *)a5 + 10) = v51[10];
  *((_OWORD *)a5 + 11) = v23;
  v24 = v51[5];
  *((_OWORD *)a5 + 4) = v51[4];
  *((_OWORD *)a5 + 5) = v24;
  v25 = v51[7];
  *((_OWORD *)a5 + 6) = v51[6];
  *((_OWORD *)a5 + 7) = v25;
  v26 = v51[1];
  *(_OWORD *)a5 = v51[0];
  *((_OWORD *)a5 + 1) = v26;
  v27 = v51[3];
  *((_OWORD *)a5 + 2) = v51[2];
  *((_OWORD *)a5 + 3) = v27;
  v28 = (double *)&a5[v16[10]];
  *v28 = a6;
  v28[1] = a7;
  *(double *)&a5[v16[11]] = a8;
  return sub_1A905D4AC(a1, (uint64_t)&a5[v16[12]]);
}

uint64_t DiskResizeArtworkProcessingStep.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9131434(v1, a1);
}

uint64_t DiskResizeArtworkProcessingStep.publisher.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  CGSize *v2;
  CGSize *v3;
  char *v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  void (*v24)(__int128 *__return_ptr, uint64_t, char *, double);
  CGFloat v25;
  CGFloat v26;
  void (*v27)(char *, CGSize *, uint64_t);
  CGSize *v28;
  void (*v29)(char *, CGSize *, uint64_t);
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(void);
  CGSize *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t result;
  uint64_t v59;
  char *v60;
  CGSize *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t AssociatedConformanceWitness;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  char *v76;
  __int128 v77[2];
  __int128 v78[11];
  double v79;
  double v80;
  double v81;
  CGSize v82;

  v3 = v2;
  v74 = a2;
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(char **)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v63 = type metadata accessor for ArtworkContent();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v8 = sub_1A93F783C();
  v68 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v65 = (char *)&v59 - v10;
  v11 = MEMORY[0x1AF414014](MEMORY[0x1E0C95B48], v8, v9);
  v69 = v8;
  v62 = v11;
  v13 = type metadata accessor for EmitLifecycle(0, v8, v11, v12);
  v66 = *(_QWORD *)(v13 - 8);
  v67 = v13;
  MEMORY[0x1E0C80A78](v13);
  v64 = (uint64_t)&v59 - v14;
  v73 = AssociatedTypeWitness;
  v71 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v15);
  v76 = (char *)&v59 - v16;
  v17 = *(_QWORD *)(a1 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v19);
  v60 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v59 - v22;
  v24 = (void (*)(__int128 *__return_ptr, uint64_t, char *, double))*((_QWORD *)v5 + 5);
  v70 = (char *)v3 + *(int *)(a1 + 36);
  v24(v78, v6, v5, v21);
  v25 = v79;
  v26 = v80;
  sub_1A9131470((uint64_t)v78);
  v82.width = v25;
  v82.height = v26;
  LODWORD(v8) = CGSizeEqualToSize(v82, v3[11]);
  v75 = v17;
  v27 = *(void (**)(char *, CGSize *, uint64_t))(v17 + 16);
  v61 = v3;
  v28 = v3;
  v29 = v27;
  v27(v23, v28, a1);
  if (!(_DWORD)v8)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v23, a1);
    v32 = v6;
    goto LABEL_5;
  }
  ((void (*)(__int128 *__return_ptr, uint64_t, char *))v24)(v78, v6, v5);
  v30 = v81;
  sub_1A9131470((uint64_t)v78);
  v31 = *((double *)v23 + 24);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v23, a1);
  v32 = v6;
  if (v30 != v31)
  {
LABEL_5:
    v37 = (void (*)(void))*((_QWORD *)v5 + 6);
    v59 = v32;
    v37();
    v38 = v61;
    sub_1A905DC3C((uint64_t)v61 + *(int *)(a1 + 48), (uint64_t)v78);
    v39 = (uint64_t *)((char *)v38 + *(int *)(a1 + 40));
    v40 = *v39;
    v41 = v39[1];
    v42 = *(_QWORD *)((char *)&v38->width + *(int *)(a1 + 44));
    v43 = v60;
    v29(v60, v38, a1);
    sub_1A905D4AC(v78, (uint64_t)v77);
    v70 = v5;
    v44 = v75;
    v45 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
    v46 = (v18 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    v47 = (v46 + 47) & 0xFFFFFFFFFFFFFFF8;
    v48 = swift_allocObject();
    v49 = v70;
    *(_QWORD *)(v48 + 16) = v59;
    *(_QWORD *)(v48 + 24) = v49;
    (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v48 + v45, v43, a1);
    sub_1A905D4AC(v77, v48 + v46);
    v50 = (_QWORD *)(v48 + v47);
    *v50 = v40;
    v50[1] = v41;
    *(_QWORD *)(v48 + ((v47 + 23) & 0xFFFFFFFFFFFFFFF8)) = v42;
    v51 = v65;
    v52 = v73;
    v53 = v76;
    sub_1A93F7C20();
    swift_release();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v53, v52);
    v54 = MEMORY[0x1AF414014](&protocol conformance descriptor for DiskResizeArtworkProcessingStep<A>, a1);
    AssetProcessingStep.metadataTrace.getter(a1, v54, (uint64_t)v78);
    v55 = v69;
    v56 = v62;
    v57 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
    v33 = v64;
    Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)((uint64_t)v78, (uint64_t)"DiskResizeOperation", 19, 2, 0, 0, 0, v57 & 1, v64, v55, v56);
    sub_1A905FD54((uint64_t)v78, &qword_1ED2AD0C0);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v51, v55);
    v34 = v67;
    MEMORY[0x1AF414014](&protocol conformance descriptor for EmitLifecycle<A>, v67);
    v35 = sub_1A93F7B24();
    v36 = v66;
    goto LABEL_6;
  }
  v33 = (uint64_t)v76;
  (*((void (**)(uint64_t, char *))v5 + 6))(v32, v5);
  v34 = v73;
  v35 = sub_1A93F7B24();
  v36 = v71;
LABEL_6:
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v33, v34);
  *v74 = v35;
  return result;
}

uint64_t sub_1A917E8D4@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, _BYTE *, uint64_t)@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  int v44;
  char v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  os_signpost_id_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v54;
  void (*v55)(_BYTE *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(_OWORD *__return_ptr, const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  void (*v78)(uint64_t, _BYTE *, uint64_t);
  _BYTE *v79;
  _BYTE *v80;
  _BYTE *v81;
  NSObject *v82;
  uint64_t v83;
  uint64_t v84;
  const char *v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint8_t *v92;
  os_signpost_id_t v93;
  _BYTE v94[12];
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  _BYTE *v100;
  uint64_t v101;
  _BYTE *v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  void (*v110)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, _BYTE *, uint64_t);
  uint64_t v118[3];
  uint64_t v119;
  uint64_t v120;
  _OWORD v121[2];
  uint64_t v122;

  v109 = a3;
  v112 = a5;
  v115 = a4;
  v107 = a1;
  v101 = a6;
  v13 = sub_1A93F7638();
  v96 = *(_QWORD *)(v13 - 8);
  v97 = v13;
  MEMORY[0x1E0C80A78](v13);
  v99 = &v94[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v15);
  v103 = &v94[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v17);
  v19 = &v94[-v18];
  v20 = sub_1A93F726C();
  v105 = *(_QWORD *)(v20 - 8);
  v106 = v20;
  MEMORY[0x1E0C80A78](v20);
  v102 = &v94[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v22);
  v24 = &v94[-v23];
  v116 = sub_1A93F75FC();
  v113 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116);
  v100 = &v94[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v26);
  v114 = &v94[-v27];
  MEMORY[0x1E0C80A78](v28);
  v30 = &v94[-v29];
  v31 = sub_1A93F73E0();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v34 = &v94[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v117 = a2;
  sub_1A9062170((uint64_t)a2 + 216, (uint64_t)v118, &qword_1ED2AD0C0);
  v35 = v119;
  if (v119)
  {
    v36 = v120;
    __swift_project_boxed_opaque_existential_1(v118, v119);
    v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
    v39 = v38;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v118);
  }
  else
  {
    sub_1A905FD54((uint64_t)v118, &qword_1ED2AD0C0);
    sub_1A93F73D4();
    v37 = sub_1A93F73A4();
    v39 = v40;
    (*(void (**)(_BYTE *, uint64_t))(v32 + 8))(v34, v31);
  }
  v111 = v24;
  if (qword_1ED2A86B0 != -1)
    swift_once();
  v41 = sub_1A93F762C();
  v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED2A8698);
  sub_1A93F7620();
  sub_1A93F75D8();
  swift_bridgeObjectRetain();
  v98 = v42;
  v43 = sub_1A93F7620();
  v44 = sub_1A93F8940();
  v45 = sub_1A93F8A6C();
  v104 = v19;
  if ((v45 & 1) != 0)
  {
    v110 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v113 + 16);
    v110(v114, v30, v116);
    v46 = (uint8_t *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    v95 = v44;
    v48 = v47;
    v118[0] = v47;
    *(_DWORD *)v46 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v121[0] = sub_1A906436C(v37, v39, v118);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    v49 = v114;
    v50 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v43, (os_signpost_type_t)v95, v50, "ResizeImage", "[identifier=%{name=identifier}s] Resize", v46, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v48, -1, -1);
    MEMORY[0x1AF41411C](v46, -1, -1);

    v51 = v113;
    v52 = v116;
    (*(void (**)(_BYTE *, uint64_t))(v113 + 8))(v49, v116);
    v53 = v110;
    v54 = (uint64_t)v111;
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v51 = v113;
    v49 = v114;
    v53 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v113 + 16);
    v54 = (uint64_t)v111;
    v52 = v116;
  }
  v110 = v53;
  v53(v49, v30, v52);
  sub_1A93F765C();
  swift_allocObject();
  v113 = sub_1A93F7650();
  v55 = *(void (**)(_BYTE *, uint64_t))(v51 + 8);
  v55(v30, v52);
  v56 = v115;
  v57 = v112;
  v59 = type metadata accessor for DiskResizeArtworkProcessingStep(0, v115, v112, v58);
  v60 = MEMORY[0x1AF414014](&protocol conformance descriptor for DiskResizeArtworkProcessingStep<A>, v59);
  AssetProcessingStep.metadataTrace.getter(v59, v60, (uint64_t)v118);
  v61 = v119;
  if (v119)
  {
    v62 = v120;
    __swift_project_boxed_opaque_existential_1(v118, v119);
    __swift_project_boxed_opaque_existential_1(v109, v109[3]);
    swift_getDynamicType();
    v63 = sub_1A93F9474();
    v64 = *(void (**)(_OWORD *__return_ptr, const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 24);
    v65 = v62;
    v56 = v115;
    v64(v121, "ResizeImage", 11, 2, v63, v66, v61, v65);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v118);
  }
  else
  {
    sub_1A905FD54((uint64_t)v118, &qword_1ED2AD0C0);
    memset(v121, 0, sizeof(v121));
    v122 = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v57 + 40))(v118, v56, v57);
  v67 = v108;
  sub_1A917F464(v107, v54);
  if (v67)
  {
    swift_release();
    sub_1A9131470((uint64_t)v118);
    return sub_1A905FD54((uint64_t)v121, qword_1ED2A6060);
  }
  sub_1A9131470((uint64_t)v118);
  v68 = v109[3];
  v69 = v109[4];
  __swift_project_boxed_opaque_existential_1(v109, v68);
  v70 = (uint64_t)v104;
  (*(void (**)(uint64_t, uint64_t, uint64_t, double, double, double))(v69 + 8))(v54, v68, v69, a7, a8, a9);
  v71 = v103;
  sub_1A9062170(v70, (uint64_t)v103, &qword_1ED2AD3D0);
  v72 = v105;
  v73 = v106;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v105 + 48))(v71, 1, v106) == 1)
  {
    sub_1A905FD54((uint64_t)v71, &qword_1ED2AD3D0);
    v75 = type metadata accessor for DiskResizeArtworkProcessingStep.ResizeError(0, v56, v112, v74);
    MEMORY[0x1AF414014](&protocol conformance descriptor for DiskResizeArtworkProcessingStep<A>.ResizeError, v75);
    swift_allocError();
    *v76 = 0;
    swift_willThrow();
    swift_release();
    sub_1A905FD54(v70, &qword_1ED2AD3D0);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v54, v73);
    return sub_1A905FD54((uint64_t)v121, qword_1ED2A6060);
  }
  v78 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v72 + 32);
  v79 = v102;
  v78((uint64_t)v102, v71, v73);
  sub_1A9062170((uint64_t)v121, (uint64_t)v118, qword_1ED2A6060);
  v117 = v78;
  if (v119)
  {
    __swift_project_boxed_opaque_existential_1(v118, v119);
    TraceInterval.end()();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v118);
  }
  else
  {
    sub_1A905FD54((uint64_t)v118, qword_1ED2A6060);
  }
  v80 = v99;
  v81 = v100;
  v82 = sub_1A93F7620();
  sub_1A93F7644();
  LODWORD(v115) = sub_1A93F8934();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    swift_retain();
    sub_1A93F7668();
    swift_release();
    v84 = v96;
    v83 = v97;
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v96 + 88))(v80, v97) == *MEMORY[0x1E0DF2190])
    {
      v85 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v84 + 8))(v80, v83);
      v85 = "";
    }
    v88 = v114;
    v89 = v116;
    v110(v114, v81, v116);
    v90 = v81;
    v91 = v89;
    v92 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v92 = 0;
    v93 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v82, (os_signpost_type_t)v115, v93, "ResizeImage", v85, v92, 2u);
    MEMORY[0x1AF41411C](v92, -1, -1);

    v55(v90, v91);
    sub_1A905FD54((uint64_t)v104, &qword_1ED2AD3D0);
    v86 = v106;
    (*(void (**)(_BYTE *, uint64_t))(v105 + 8))(v111, v106);
    sub_1A905FD54((uint64_t)v121, qword_1ED2A6060);
    swift_release();
    v55(v88, v91);
    v87 = v101;
    v79 = v102;
  }
  else
  {

    v55(v81, v116);
    sub_1A905FD54((uint64_t)v104, &qword_1ED2AD3D0);
    v86 = v106;
    (*(void (**)(_BYTE *, uint64_t))(v105 + 8))(v111, v106);
    sub_1A905FD54((uint64_t)v121, qword_1ED2A6060);
    swift_release();
    v87 = v101;
  }
  v117(v87, v79, v86);
  type metadata accessor for ArtworkContent();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A917F254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for DiskResizeArtworkProcessingStep(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = v4 + v8;
  swift_bridgeObjectRelease();
  v11 = *(unsigned __int8 *)(v4 + v8 + 32);
  if (v11 != 255)
    sub_1A913A0C0(*(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), v11);
  v12 = *(unsigned __int8 *)(v10 + 64);
  if (v12 != 255)
    sub_1A913A0D8(*(id *)(v10 + 56), v12);
  v13 = *(unsigned __int8 *)(v10 + 80);
  if (v13 != 255)
    sub_1A913A0D8(*(id *)(v10 + 72), v13);
  v14 = *(unsigned __int8 *)(v10 + 96);
  if (v14 != 255)
    sub_1A913A0D8(*(id *)(v10 + 88), v14);
  v15 = *(unsigned __int8 *)(v10 + 112);
  if (v15 != 255)
    sub_1A913A0D8(*(id *)(v10 + 104), v15);
  v16 = *(unsigned __int8 *)(v10 + 128);
  if (v16 != 255)
    sub_1A913A0D8(*(id *)(v10 + 120), v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v10 + 240))
    __swift_destroy_boxed_opaque_existential_0(v10 + 216);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v10 + *(int *)(v6 + 36), v5);
  __swift_destroy_boxed_opaque_existential_0(v10 + *(int *)(v6 + 48));
  __swift_destroy_boxed_opaque_existential_0(v4 + ((v9 + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  return swift_deallocObject();
}

uint64_t type metadata accessor for DiskResizeArtworkProcessingStep(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DiskResizeArtworkProcessingStep);
}

uint64_t sub_1A917F3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(type metadata accessor for DiskResizeArtworkProcessingStep(0, v6, v7, a2) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A917E8D4(a1, (void (*)(uint64_t, _BYTE *, uint64_t))(v3 + v9), (_QWORD *)(v3 + v10), v6, v7, a3, *(double *)(v3 + ((v10 + 47) & 0xFFFFFFFFFFFFFFF8)), *(double *)(v3 + ((v10 + 47) & 0xFFFFFFFFFFFFFFF8) + 8), *(double *)(v3 + ((((v10 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A917F464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v15 = a2;
  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ArtworkContent();
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A91224E0(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = (char *)v10;
  }
  else
  {
    v11 = *v10;
    v12 = v10[1];
    sub_1A917F5BC(4, (uint64_t)v7);
    sub_1A93F72C0();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return sub_1A905F180(v11, v12);
    }
    sub_1A905F180(v11, v12);
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15, v7, v4);
}

void sub_1A917F5BC(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD v14[4];

  v14[1] = a2;
  v3 = sub_1A93F73E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v12 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v13 = objc_msgSend(v12, sel_temporaryDirectory);

  sub_1A93F7200();
  sub_1A93F73D4();
  sub_1A93F73A4();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1A93F71B8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v14[2] = 0x697365722E706D74;
  v14[3] = 0xEB000000002E657ALL;
  __asm { BR              X10 }
}

uint64_t sub_1A917F75C()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F71C4();
  swift_bridgeObjectRelease();
  return v0(v2, v1);
}

BOOL static DiskResizeArtworkProcessingStep.ResizeError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DiskResizeArtworkProcessingStep.ResizeError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t DiskResizeArtworkProcessingStep.ResizeError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A917F88C()
{
  sub_1A93F92DC();
  DiskResizeArtworkProcessingStep.ResizeError.hash(into:)();
  return sub_1A93F9324();
}

void sub_1A917F8C4()
{
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A917F8D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1A917F910()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A917F9A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  int v15;
  id v16;
  id *v17;
  int v18;
  id v19;
  id *v20;
  int v21;
  id v22;
  id *v23;
  int v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  _OWORD *v35;
  _OWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((((*(_QWORD *)(v5 + 64) + 263) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 40 > 0x18)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    v43 = *(_QWORD *)(v5 + 64);
    v44 = *(_QWORD *)(a3 + 16);
    v10 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v10;
    v11 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v11 == 255)
    {
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    }
    else
    {
      v12 = a2[2];
      v13 = a2[3];
      sub_1A913A9C0(v12, v13, v11);
      *(_QWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 24) = v13;
      *(_BYTE *)(a1 + 32) = v11;
    }
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    v14 = (id *)(a2 + 7);
    v15 = *((unsigned __int8 *)a2 + 64);
    if (v15 == 255)
    {
      *(_QWORD *)(a1 + 56) = *v14;
      *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    }
    else
    {
      v16 = *v14;
      sub_1A913A9D8(*v14, *((_BYTE *)a2 + 64));
      *(_QWORD *)(a1 + 56) = v16;
      *(_BYTE *)(a1 + 64) = v15;
    }
    v17 = (id *)(a2 + 9);
    v18 = *((unsigned __int8 *)a2 + 80);
    if (v18 == 255)
    {
      *(_QWORD *)(a1 + 72) = *v17;
      *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    }
    else
    {
      v19 = *v17;
      sub_1A913A9D8(*v17, *((_BYTE *)a2 + 80));
      *(_QWORD *)(a1 + 72) = v19;
      *(_BYTE *)(a1 + 80) = v18;
    }
    v20 = (id *)(a2 + 11);
    v21 = *((unsigned __int8 *)a2 + 96);
    if (v21 == 255)
    {
      *(_QWORD *)(a1 + 88) = *v20;
      *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
    }
    else
    {
      v22 = *v20;
      sub_1A913A9D8(*v20, *((_BYTE *)a2 + 96));
      *(_QWORD *)(a1 + 88) = v22;
      *(_BYTE *)(a1 + 96) = v21;
    }
    v23 = (id *)(a2 + 13);
    v24 = *((unsigned __int8 *)a2 + 112);
    if (v24 == 255)
    {
      *(_QWORD *)(a1 + 104) = *v23;
      *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
    }
    else
    {
      v25 = *v23;
      sub_1A913A9D8(*v23, *((_BYTE *)a2 + 112));
      *(_QWORD *)(a1 + 104) = v25;
      *(_BYTE *)(a1 + 112) = v24;
    }
    v26 = (id *)(a2 + 15);
    v27 = *((unsigned __int8 *)a2 + 128);
    if (v27 == 255)
    {
      *(_QWORD *)(a1 + 120) = *v26;
      *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
    }
    else
    {
      v28 = *v26;
      sub_1A913A9D8(*v26, *((_BYTE *)a2 + 128));
      *(_QWORD *)(a1 + 120) = v28;
      *(_BYTE *)(a1 + 128) = v27;
    }
    v29 = ~v6;
    *(_BYTE *)(a1 + 129) = *((_BYTE *)a2 + 129);
    *(_WORD *)(a1 + 130) = *((_WORD *)a2 + 65);
    v30 = a2[18];
    *(_QWORD *)(a1 + 136) = a2[17];
    *(_QWORD *)(a1 + 144) = v30;
    *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
    *(_WORD *)(a1 + 153) = *(_WORD *)((char *)a2 + 153);
    v31 = a2[21];
    *(_QWORD *)(a1 + 160) = a2[20];
    *(_QWORD *)(a1 + 168) = v31;
    *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
    *(_QWORD *)(a1 + 192) = a2[24];
    *(_WORD *)(a1 + 200) = *((_WORD *)a2 + 100);
    *(_BYTE *)(a1 + 202) = *((_BYTE *)a2 + 202);
    *(_BYTE *)(a1 + 203) = *((_BYTE *)a2 + 203);
    *(_QWORD *)(a1 + 208) = a2[26];
    v32 = a2[30];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32)
    {
      v33 = a2[31];
      *(_QWORD *)(a1 + 240) = v32;
      *(_QWORD *)(a1 + 248) = v33;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v32 - 8))(a1 + 216, (uint64_t)(a2 + 27), v32);
    }
    else
    {
      v34 = *(_OWORD *)(a2 + 29);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 27);
      *(_OWORD *)(a1 + 232) = v34;
      *(_QWORD *)(a1 + 248) = a2[31];
    }
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))((a1 + v6 + 256) & v29, ((unint64_t)a2 + v6 + 256) & v29, v44);
    v35 = (_OWORD *)((v43 + 7 + ((a1 + v6 + 256) & v29)) & 0xFFFFFFFFFFFFFFF8);
    v36 = (_OWORD *)((v43 + 7 + (((unint64_t)a2 + v6 + 256) & v29)) & 0xFFFFFFFFFFFFFFF8);
    *v35 = *v36;
    v37 = (_QWORD *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFF8);
    v38 = (_QWORD *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFF8);
    *v37 = *v38;
    v39 = ((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    v40 = ((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8;
    v41 = *(_QWORD *)(v40 + 24);
    *(_QWORD *)(v39 + 24) = v41;
    *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
    (**(void (***)(void))(v41 - 8))();
  }
  return a1;
}

uint64_t sub_1A917FD34(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  unint64_t v11;

  swift_bridgeObjectRelease();
  v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 != 255)
    sub_1A913A0C0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v4);
  v5 = *(unsigned __int8 *)(a1 + 64);
  if (v5 != 255)
    sub_1A913A0D8(*(id *)(a1 + 56), v5);
  v6 = *(unsigned __int8 *)(a1 + 80);
  if (v6 != 255)
    sub_1A913A0D8(*(id *)(a1 + 72), v6);
  v7 = *(unsigned __int8 *)(a1 + 96);
  if (v7 != 255)
    sub_1A913A0D8(*(id *)(a1 + 88), v7);
  v8 = *(unsigned __int8 *)(a1 + 112);
  if (v8 != 255)
    sub_1A913A0D8(*(id *)(a1 + 104), v8);
  v9 = *(unsigned __int8 *)(a1 + 128);
  if (v9 != 255)
    sub_1A913A0D8(*(id *)(a1 + 120), v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 240))
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v11 = (a1 + *(unsigned __int8 *)(v10 + 80) + 256) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v11);
  return __swift_destroy_boxed_opaque_existential_0((((((*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                                   + 15) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1A917FE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  int v11;
  id v12;
  id *v13;
  int v14;
  id v15;
  id *v16;
  int v17;
  id v18;
  id *v19;
  int v20;
  id v21;
  id *v22;
  int v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  _OWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v7 == 255)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  else
  {
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 24);
    sub_1A913A9C0(v8, v9, v7);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = v7;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v10 = (id *)(a2 + 56);
  v11 = *(unsigned __int8 *)(a2 + 64);
  if (v11 == 255)
  {
    *(_QWORD *)(a1 + 56) = *v10;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  }
  else
  {
    v12 = *v10;
    sub_1A913A9D8(*v10, *(_BYTE *)(a2 + 64));
    *(_QWORD *)(a1 + 56) = v12;
    *(_BYTE *)(a1 + 64) = v11;
  }
  v13 = (id *)(a2 + 72);
  v14 = *(unsigned __int8 *)(a2 + 80);
  if (v14 == 255)
  {
    *(_QWORD *)(a1 + 72) = *v13;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  }
  else
  {
    v15 = *v13;
    sub_1A913A9D8(*v13, *(_BYTE *)(a2 + 80));
    *(_QWORD *)(a1 + 72) = v15;
    *(_BYTE *)(a1 + 80) = v14;
  }
  v16 = (id *)(a2 + 88);
  v17 = *(unsigned __int8 *)(a2 + 96);
  if (v17 == 255)
  {
    *(_QWORD *)(a1 + 88) = *v16;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  }
  else
  {
    v18 = *v16;
    sub_1A913A9D8(*v16, *(_BYTE *)(a2 + 96));
    *(_QWORD *)(a1 + 88) = v18;
    *(_BYTE *)(a1 + 96) = v17;
  }
  v19 = (id *)(a2 + 104);
  v20 = *(unsigned __int8 *)(a2 + 112);
  if (v20 == 255)
  {
    *(_QWORD *)(a1 + 104) = *v19;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  }
  else
  {
    v21 = *v19;
    sub_1A913A9D8(*v19, *(_BYTE *)(a2 + 112));
    *(_QWORD *)(a1 + 104) = v21;
    *(_BYTE *)(a1 + 112) = v20;
  }
  v22 = (id *)(a2 + 120);
  v23 = *(unsigned __int8 *)(a2 + 128);
  if (v23 == 255)
  {
    *(_QWORD *)(a1 + 120) = *v22;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  }
  else
  {
    v24 = *v22;
    sub_1A913A9D8(*v22, *(_BYTE *)(a2 + 128));
    *(_QWORD *)(a1 + 120) = v24;
    *(_BYTE *)(a1 + 128) = v23;
  }
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  v25 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v25;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
  v26 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v26;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
  *(_BYTE *)(a1 + 202) = *(_BYTE *)(a2 + 202);
  *(_BYTE *)(a1 + 203) = *(_BYTE *)(a2 + 203);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  v27 = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27)
  {
    v28 = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 240) = v27;
    *(_QWORD *)(a1 + 248) = v28;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8))(a1 + 216, a2 + 216, v27);
  }
  else
  {
    v29 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v29;
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  }
  v30 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = ((v31 | 0x100) + a1) & ~v31;
  v33 = ((v31 | 0x100) + a2) & ~v31;
  (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v32, v33);
  v34 = *(_QWORD *)(v30 + 64) + 7;
  v35 = (_OWORD *)((v34 + v32) & 0xFFFFFFFFFFFFFFF8);
  v36 = (_OWORD *)((v34 + v33) & 0xFFFFFFFFFFFFFFF8);
  *v35 = *v36;
  v37 = (_QWORD *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFF8);
  v38 = (_QWORD *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v37 = *v38;
  v39 = ((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = ((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  v41 = *(_QWORD *)(v40 + 24);
  *(_QWORD *)(v39 + 24) = v41;
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
  (**(void (***)(void))(v41 - 8))();
  return a1;
}

uint64_t sub_1A9180154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 *v6;
  __int128 *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  id *v18;
  id *v19;
  int v20;
  id v21;
  void *v22;
  char v23;
  id v24;
  char v25;
  id v26;
  id *v27;
  id *v28;
  int v29;
  id v30;
  void *v31;
  char v32;
  id v33;
  char v34;
  id v35;
  id *v36;
  id *v37;
  int v38;
  id v39;
  void *v40;
  char v41;
  id v42;
  char v43;
  id v44;
  id *v45;
  id *v46;
  int v47;
  id v48;
  void *v49;
  char v50;
  id v51;
  char v52;
  id v53;
  id *v54;
  id *v55;
  int v56;
  id v57;
  void *v58;
  char v59;
  id v60;
  char v61;
  id v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (__int128 *)(a1 + 16);
  v7 = (__int128 *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v8 == 255)
    {
      v17 = *v7;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *v6 = v17;
    }
    else
    {
      v14 = *(_QWORD *)(a2 + 16);
      v15 = *(_QWORD *)(a2 + 24);
      sub_1A913A9C0(v14, v15, *(_BYTE *)(a2 + 32));
      *(_QWORD *)(a1 + 16) = v14;
      *(_QWORD *)(a1 + 24) = v15;
      *(_BYTE *)(a1 + 32) = v8;
    }
  }
  else if (v8 == 255)
  {
    sub_1A913B300(a1 + 16);
    v16 = *(_BYTE *)(a2 + 32);
    *v6 = *v7;
    *(_BYTE *)(a1 + 32) = v16;
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    sub_1A913A9C0(v9, v10, *(_BYTE *)(a2 + 32));
    v11 = *(_QWORD *)(a1 + 16);
    v12 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    v13 = *(_BYTE *)(a1 + 32);
    *(_BYTE *)(a1 + 32) = v8;
    sub_1A913A0C0(v11, v12, v13);
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v18 = (id *)(a1 + 56);
  v19 = (id *)(a2 + 56);
  v20 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v20 == 255)
    {
      v26 = *v19;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *v18 = v26;
    }
    else
    {
      v24 = *v19;
      sub_1A913A9D8(*v19, *(_BYTE *)(a2 + 64));
      *(_QWORD *)(a1 + 56) = v24;
      *(_BYTE *)(a1 + 64) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_1A913B334(a1 + 56);
    v25 = *(_BYTE *)(a2 + 64);
    *v18 = *v19;
    *(_BYTE *)(a1 + 64) = v25;
  }
  else
  {
    v21 = *v19;
    sub_1A913A9D8(*v19, *(_BYTE *)(a2 + 64));
    v22 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v21;
    v23 = *(_BYTE *)(a1 + 64);
    *(_BYTE *)(a1 + 64) = v20;
    sub_1A913A0D8(v22, v23);
  }
  v27 = (id *)(a1 + 72);
  v28 = (id *)(a2 + 72);
  v29 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v29 == 255)
    {
      v35 = *v28;
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *v27 = v35;
    }
    else
    {
      v33 = *v28;
      sub_1A913A9D8(*v28, *(_BYTE *)(a2 + 80));
      *(_QWORD *)(a1 + 72) = v33;
      *(_BYTE *)(a1 + 80) = v29;
    }
  }
  else if (v29 == 255)
  {
    sub_1A913B334(a1 + 72);
    v34 = *(_BYTE *)(a2 + 80);
    *v27 = *v28;
    *(_BYTE *)(a1 + 80) = v34;
  }
  else
  {
    v30 = *v28;
    sub_1A913A9D8(*v28, *(_BYTE *)(a2 + 80));
    v31 = *(void **)(a1 + 72);
    *(_QWORD *)(a1 + 72) = v30;
    v32 = *(_BYTE *)(a1 + 80);
    *(_BYTE *)(a1 + 80) = v29;
    sub_1A913A0D8(v31, v32);
  }
  v36 = (id *)(a1 + 88);
  v37 = (id *)(a2 + 88);
  v38 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v38 == 255)
    {
      v44 = *v37;
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *v36 = v44;
    }
    else
    {
      v42 = *v37;
      sub_1A913A9D8(*v37, *(_BYTE *)(a2 + 96));
      *(_QWORD *)(a1 + 88) = v42;
      *(_BYTE *)(a1 + 96) = v38;
    }
  }
  else if (v38 == 255)
  {
    sub_1A913B334(a1 + 88);
    v43 = *(_BYTE *)(a2 + 96);
    *v36 = *v37;
    *(_BYTE *)(a1 + 96) = v43;
  }
  else
  {
    v39 = *v37;
    sub_1A913A9D8(*v37, *(_BYTE *)(a2 + 96));
    v40 = *(void **)(a1 + 88);
    *(_QWORD *)(a1 + 88) = v39;
    v41 = *(_BYTE *)(a1 + 96);
    *(_BYTE *)(a1 + 96) = v38;
    sub_1A913A0D8(v40, v41);
  }
  v45 = (id *)(a1 + 104);
  v46 = (id *)(a2 + 104);
  v47 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v47 == 255)
    {
      v53 = *v46;
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *v45 = v53;
    }
    else
    {
      v51 = *v46;
      sub_1A913A9D8(*v46, *(_BYTE *)(a2 + 112));
      *(_QWORD *)(a1 + 104) = v51;
      *(_BYTE *)(a1 + 112) = v47;
    }
  }
  else if (v47 == 255)
  {
    sub_1A913B334(a1 + 104);
    v52 = *(_BYTE *)(a2 + 112);
    *v45 = *v46;
    *(_BYTE *)(a1 + 112) = v52;
  }
  else
  {
    v48 = *v46;
    sub_1A913A9D8(*v46, *(_BYTE *)(a2 + 112));
    v49 = *(void **)(a1 + 104);
    *(_QWORD *)(a1 + 104) = v48;
    v50 = *(_BYTE *)(a1 + 112);
    *(_BYTE *)(a1 + 112) = v47;
    sub_1A913A0D8(v49, v50);
  }
  v54 = (id *)(a1 + 120);
  v55 = (id *)(a2 + 120);
  v56 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v56 == 255)
    {
      v62 = *v55;
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *v54 = v62;
    }
    else
    {
      v60 = *v55;
      sub_1A913A9D8(*v55, *(_BYTE *)(a2 + 128));
      *(_QWORD *)(a1 + 120) = v60;
      *(_BYTE *)(a1 + 128) = v56;
    }
  }
  else if (v56 == 255)
  {
    sub_1A913B334(a1 + 120);
    v61 = *(_BYTE *)(a2 + 128);
    *v54 = *v55;
    *(_BYTE *)(a1 + 128) = v61;
  }
  else
  {
    v57 = *v55;
    sub_1A913A9D8(*v55, *(_BYTE *)(a2 + 128));
    v58 = *(void **)(a1 + 120);
    *(_QWORD *)(a1 + 120) = v57;
    v59 = *(_BYTE *)(a1 + 128);
    *(_BYTE *)(a1 + 128) = v56;
    sub_1A913A0D8(v58, v59);
  }
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
  *(_BYTE *)(a1 + 131) = *(_BYTE *)(a2 + 131);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_BYTE *)(a1 + 154) = *(_BYTE *)(a2 + 154);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_BYTE *)(a1 + 201) = *(_BYTE *)(a2 + 201);
  *(_BYTE *)(a1 + 202) = *(_BYTE *)(a2 + 202);
  *(_BYTE *)(a1 + 203) = *(_BYTE *)(a2 + 203);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v63 = *(_QWORD *)(a2 + 240);
  if (!*(_QWORD *)(a1 + 240))
  {
    if (v63)
    {
      *(_QWORD *)(a1 + 240) = v63;
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      (**(void (***)(uint64_t, uint64_t))(v63 - 8))(a1 + 216, a2 + 216);
      goto LABEL_50;
    }
LABEL_49:
    v64 = *(_OWORD *)(a2 + 216);
    v65 = *(_OWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 216) = v64;
    *(_OWORD *)(a1 + 232) = v65;
    goto LABEL_50;
  }
  if (!v63)
  {
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
    goto LABEL_49;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 216), (uint64_t *)(a2 + 216));
LABEL_50:
  v66 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v67 = *(unsigned __int8 *)(v66 + 80);
  v68 = ((v67 | 0x100) + a1) & ~v67;
  v69 = ((v67 | 0x100) + a2) & ~v67;
  (*(void (**)(uint64_t, uint64_t))(v66 + 24))(v68, v69);
  v70 = *(_QWORD *)(v66 + 64) + 7;
  v71 = (_QWORD *)((v70 + v68) & 0xFFFFFFFFFFFFFFF8);
  v72 = (_QWORD *)((v70 + v69) & 0xFFFFFFFFFFFFFFF8);
  *v71 = *v72;
  v71[1] = v72[1];
  v73 = (_QWORD *)(((unint64_t)v71 + 23) & 0xFFFFFFFFFFFFF8);
  v74 = (_QWORD *)(((unint64_t)v72 + 23) & 0xFFFFFFFFFFFFF8);
  *v73 = *v74;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(((unint64_t)v73 + 15) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)(((unint64_t)v74 + 15) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

_OWORD *sub_1A91806F8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  __int128 v23;
  __int128 v24;

  v4 = a2[13];
  a1[12] = a2[12];
  a1[13] = v4;
  v5 = a2[15];
  a1[14] = a2[14];
  a1[15] = v5;
  v6 = a2[9];
  a1[8] = a2[8];
  a1[9] = v6;
  v7 = a2[11];
  a1[10] = a2[10];
  a1[11] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  v10 = a2[1];
  *a1 = *a2;
  a1[1] = v10;
  v11 = a2[3];
  a1[2] = a2[2];
  a1[3] = v11;
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = ((unint64_t)a1 + (v13 | 0x100)) & ~v13;
  v15 = ((unint64_t)a2 + (v13 | 0x100)) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v14, v15);
  v16 = *(_QWORD *)(v12 + 64) + 7;
  v17 = (_OWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_OWORD *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8);
  *v20 = *v19;
  v21 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_OWORD *)v22;
  v23 = *(_OWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  *(_OWORD *)v21 = v24;
  *(_OWORD *)(v21 + 16) = v23;
  return a1;
}

uint64_t sub_1A91807D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int v13;
  int v14;
  void *v15;
  _QWORD *v16;
  int v17;
  int v18;
  void *v19;
  _QWORD *v20;
  int v21;
  int v22;
  void *v23;
  _QWORD *v24;
  int v25;
  int v26;
  void *v27;
  _QWORD *v28;
  int v29;
  int v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  __int128 v46;
  __int128 v47;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a1 + 32);
  if (v8 != 255)
  {
    v9 = *(unsigned __int8 *)(a2 + 32);
    if (v9 != 255)
    {
      v10 = *(_QWORD *)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *v7;
      *(_BYTE *)(a1 + 32) = v9;
      sub_1A913A0C0(v10, v11, v8);
      goto LABEL_6;
    }
    sub_1A913B300(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
LABEL_6:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v12 = (_QWORD *)(a2 + 56);
  v13 = *(unsigned __int8 *)(a1 + 64);
  if (v13 != 255)
  {
    v14 = *(unsigned __int8 *)(a2 + 64);
    if (v14 != 255)
    {
      v15 = *(void **)(a1 + 56);
      *(_QWORD *)(a1 + 56) = *v12;
      *(_BYTE *)(a1 + 64) = v14;
      sub_1A913A0D8(v15, v13);
      goto LABEL_11;
    }
    sub_1A913B334(a1 + 56);
  }
  *(_QWORD *)(a1 + 56) = *v12;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
LABEL_11:
  v16 = (_QWORD *)(a2 + 72);
  v17 = *(unsigned __int8 *)(a1 + 80);
  if (v17 != 255)
  {
    v18 = *(unsigned __int8 *)(a2 + 80);
    if (v18 != 255)
    {
      v19 = *(void **)(a1 + 72);
      *(_QWORD *)(a1 + 72) = *v16;
      *(_BYTE *)(a1 + 80) = v18;
      sub_1A913A0D8(v19, v17);
      goto LABEL_16;
    }
    sub_1A913B334(a1 + 72);
  }
  *(_QWORD *)(a1 + 72) = *v16;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
LABEL_16:
  v20 = (_QWORD *)(a2 + 88);
  v21 = *(unsigned __int8 *)(a1 + 96);
  if (v21 != 255)
  {
    v22 = *(unsigned __int8 *)(a2 + 96);
    if (v22 != 255)
    {
      v23 = *(void **)(a1 + 88);
      *(_QWORD *)(a1 + 88) = *v20;
      *(_BYTE *)(a1 + 96) = v22;
      sub_1A913A0D8(v23, v21);
      goto LABEL_21;
    }
    sub_1A913B334(a1 + 88);
  }
  *(_QWORD *)(a1 + 88) = *v20;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
LABEL_21:
  v24 = (_QWORD *)(a2 + 104);
  v25 = *(unsigned __int8 *)(a1 + 112);
  if (v25 != 255)
  {
    v26 = *(unsigned __int8 *)(a2 + 112);
    if (v26 != 255)
    {
      v27 = *(void **)(a1 + 104);
      *(_QWORD *)(a1 + 104) = *v24;
      *(_BYTE *)(a1 + 112) = v26;
      sub_1A913A0D8(v27, v25);
      goto LABEL_26;
    }
    sub_1A913B334(a1 + 104);
  }
  *(_QWORD *)(a1 + 104) = *v24;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
LABEL_26:
  v28 = (_QWORD *)(a2 + 120);
  v29 = *(unsigned __int8 *)(a1 + 128);
  if (v29 != 255)
  {
    v30 = *(unsigned __int8 *)(a2 + 128);
    if (v30 != 255)
    {
      v31 = *(void **)(a1 + 120);
      *(_QWORD *)(a1 + 120) = *v28;
      *(_BYTE *)(a1 + 128) = v30;
      sub_1A913A0D8(v31, v29);
      goto LABEL_31;
    }
    sub_1A913B334(a1 + 120);
  }
  *(_QWORD *)(a1 + 120) = *v28;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
LABEL_31:
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  v32 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v32;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_BYTE *)(a1 + 154) = *(_BYTE *)(a2 + 154);
  v33 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v33;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_BYTE *)(a1 + 201) = *(_BYTE *)(a2 + 201);
  *(_BYTE *)(a1 + 202) = *(_BYTE *)(a2 + 202);
  *(_BYTE *)(a1 + 203) = *(_BYTE *)(a2 + 203);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 240))
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
  v34 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v34;
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  v35 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v36 = *(unsigned __int8 *)(v35 + 80);
  v37 = ((v36 | 0x100) + a1) & ~v36;
  v38 = ((v36 | 0x100) + a2) & ~v36;
  (*(void (**)(uint64_t, uint64_t))(v35 + 40))(v37, v38);
  v39 = *(_QWORD *)(v35 + 64) + 7;
  v40 = (_QWORD *)((v39 + v37) & 0xFFFFFFFFFFFFFFF8);
  v41 = (_QWORD *)((v39 + v38) & 0xFFFFFFFFFFFFFFF8);
  *v40 = *v41;
  v40[1] = v41[1];
  v42 = (_QWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFF8);
  v43 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFF8);
  *v42 = *v43;
  v44 = ((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8;
  v45 = ((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v44);
  v46 = *(_OWORD *)v45;
  v47 = *(_OWORD *)(v45 + 16);
  *(_QWORD *)(v44 + 32) = *(_QWORD *)(v45 + 32);
  *(_OWORD *)v44 = v46;
  *(_OWORD *)(v44 + 16) = v47;
  return a1;
}

uint64_t sub_1A9180B48(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v11;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  if (v6 >= a2)
  {
    if ((v5 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))((a1 + *(unsigned __int8 *)(v4 + 80) + 256) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    }
    else
    {
      v11 = *(_QWORD *)(a1 + 8);
      if (v11 >= 0xFFFFFFFF)
        LODWORD(v11) = -1;
      return (v11 + 1);
    }
  }
  else
  {
    if (((((((((*(_QWORD *)(v4 + 64) + 263) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 40) & 0xFFFFFFF8) != 0)
      v7 = 2;
    else
      v7 = a2 - v6 + 1;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A9180BD8 + 4 * byte_1A940A6D0[v9]))();
  }
}

void sub_1A9180C58(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 263) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFD8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X13 }
  }
  if (((((((*(_DWORD *)(v5 + 64) + 263) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFD8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 263) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 40);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1A9180D64()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1A9180E14);
}

void sub_1A9180D6C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1A9180D74);
  JUMPOUT(0x1A9180E14);
}

void sub_1A9180D88()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A9180E14);
}

void sub_1A9180D90()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A9180E14);
}

void sub_1A9180D98(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if (a3 < 0)
      JUMPOUT(0x1A9180DA4);
    if (a2 < 0)
      JUMPOUT(0x1A9180DC8);
    *(_QWORD *)(v3 + 8) = (a2 - 1);
  }
  JUMPOUT(0x1A9180E14);
}

uint64_t sub_1A9180E2C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A9180E78 + 4 * byte_1A940A6E4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A9180EAC + 4 * a1_1[v4 + 3]))();
}

uint64_t sub_1A9180EAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9180EB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9180EBCLL);
  return result;
}

uint64_t sub_1A9180EC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9180ED0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A9180ED4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9180EDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for DiskResizeArtworkProcessingStep.ResizeError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DiskResizeArtworkProcessingStep.ResizeError);
}

uint64_t sub_1A9180EF8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1A9182E74;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_1A90858C0(v4);
}

uint64_t sub_1A9180F80(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1A9182E48;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  sub_1A90858C0(v3);
  return sub_1A9085818(v8);
}

uint64_t OnDemandLibraryEpisodeStateDataSource.refreshControllerStates.getter()
{
  uint64_t v0;

  v0 = sub_1A9182C9C();
  sub_1A90858C0(v0);
  return v0;
}

uint64_t OnDemandLibraryEpisodeStateDataSource.refreshControllerStates.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_1A9085818(v5);
}

uint64_t (*OnDemandLibraryEpisodeStateDataSource.refreshControllerStates.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL OnDemandLibraryEpisodeStateDataSource.isObservingChanges.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56) != 0;
}

uint64_t sub_1A91810F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC900);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v13[-v7];
  v9 = v1 + qword_1ED2AB6F0;
  swift_beginAccess();
  sub_1A9066554(v9, (uint64_t)v8);
  v10 = sub_1A93F75FC();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_1A906659C((uint64_t)v8);
  sub_1A908855C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess();
  sub_1A908A030((uint64_t)v5, v9);
  return swift_endAccess();
}

uint64_t OnDemandLibraryEpisodeStateDataSource.__allocating_init(episodeStateRepository:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  OnDemandLibraryEpisodeStateDataSource.init(episodeStateRepository:)(a1);
  return v2;
}

_QWORD *OnDemandLibraryEpisodeStateDataSource.init(episodeStateRepository:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *__return_ptr, uint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(char *__return_ptr, uint64_t, uint64_t);
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;

  v2 = v1;
  v27 = a1;
  v3 = *v1;
  v30 = sub_1A93F885C();
  v25 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v29 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F8808();
  MEMORY[0x1E0C80A78](v5);
  v28 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v7);
  v1[2] = 0;
  v1[3] = 0;
  v32 = 0;
  v33 = 0xE000000000000000;
  sub_1A93F8C70();
  v24 = 0x80000001A9445970;
  sub_1A93F810C();
  v8 = *(_QWORD *)(v3 + 80);
  v9 = *(void (**)(char *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)(v3 + 88) + 56);
  v20 = *(_QWORD *)(v3 + 88);
  v23 = v9;
  ((void (*)(char *__return_ptr, uint64_t))v9)(&v31, v8);
  v19[0] = sub_1A9066C6C();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F7D88();
  v32 = MEMORY[0x1E0DEE9D8];
  v10 = sub_1A9085ACC();
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  v12 = sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  v21 = v11;
  v22 = v10;
  v19[1] = v12;
  v26 = v5;
  sub_1A93F8B5C();
  v13 = *MEMORY[0x1E0DEF8D0];
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 104);
  v14(v29, v13, v30);
  v1[4] = sub_1A93F888C();
  v32 = 0;
  v33 = 0xE000000000000000;
  sub_1A93F8C70();
  sub_1A93F810C();
  v23(&v31, v8, v20);
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F7D88();
  v32 = MEMORY[0x1E0DEE9D8];
  sub_1A93F8B5C();
  v14(v29, v13, v30);
  v1[5] = sub_1A93F888C();
  swift_getTupleTypeMetadata2();
  sub_1A93F8370();
  sub_1A9087200();
  v1[6] = sub_1A93F7F20();
  v1[7] = 0;
  v15 = (char *)v1 + qword_1ED2AB6F0;
  v16 = sub_1A93F75FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = (char *)v2 + qword_1ED2AB6E8;
  *(_QWORD *)v17 = "OnDemandLibraryEpisodeStateDataSource.startObserving";
  *((_QWORD *)v17 + 1) = 52;
  v17[16] = 2;
  v2[8] = v27;
  return v2;
}

uint64_t OnDemandLibraryEpisodeStateDataSource.deinit()
{
  uint64_t v0;

  sub_1A9085818(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1A906659C(v0 + qword_1ED2AB6F0);
  return v0;
}

uint64_t OnDemandLibraryEpisodeStateDataSource.__deallocating_deinit()
{
  OnDemandLibraryEpisodeStateDataSource.deinit();
  return swift_deallocClassInstance();
}

void sub_1A91817D8()
{
  OnDemandLibraryEpisodeStateDataSource.startObservingChanges()();
}

Swift::Void __swiftcall OnDemandLibraryEpisodeStateDataSource.startObservingChanges()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _DWORD v30[4];
  uint64_t v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = v0;
  v2 = *v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB928);
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1A93F75FC();
  v31 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[3] = sub_1A93F8940();
  if (qword_1ED2A42C0 != -1)
    swift_once();
  swift_beginAccess();
  v7 = *(_QWORD *)((char *)v1 + qword_1ED2AB6E8 + 8);
  v33 = *(_QWORD *)((char *)v1 + qword_1ED2AB6E8);
  v41 = v7;
  v32 = *((unsigned __int8 *)v1 + qword_1ED2AB6E8 + 16);
  v8 = (id)qword_1ED2A42B0;
  v40 = v6;
  sub_1A91810F8((uint64_t)v6);
  v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v9 = swift_allocObject();
  v35 = xmmword_1A9405520;
  *(_OWORD *)(v9 + 16) = xmmword_1A9405520;
  v10 = *(_QWORD *)(v2 + 80);
  v11 = *(_QWORD *)(v2 + 88);
  v12 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 56);
  v12(&v43, v10, v11);
  v13 = sub_1A93F8094();
  v15 = v14;
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v34 = sub_1A90A92DC();
  *(_QWORD *)(v9 + 64) = v34;
  *(_QWORD *)(v9 + 32) = v13;
  *(_QWORD *)(v9 + 40) = v15;
  v16 = (uint64_t)v40;
  sub_1A93F75B4();

  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v31 + 8);
  ((void (*)(uint64_t, uint64_t))v31)(v16, v42);
  v12(&v43, v10, v11);
  v43 = EpisodeStateRepository.publisherForChanges(in:)((unsigned __int8 *)&v43);
  v17 = swift_allocObject();
  swift_weakInit();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v10;
  v18[3] = v11;
  v18[4] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4068);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4138);
  sub_1A9066D74(&qword_1ED2A4060, &qword_1ED2A4068, MEMORY[0x1E0C95D90]);
  v19 = v37;
  sub_1A93F7B84();
  swift_release();
  swift_release();
  v20 = swift_allocObject();
  swift_weakInit();
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v10;
  v21[3] = v11;
  v21[4] = v20;
  sub_1A9066D74(&qword_1ED2AB920, &qword_1ED2AB928, MEMORY[0x1E0C95950]);
  v22 = v39;
  v23 = sub_1A93F7D04();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v22);
  v1[7] = v23;
  swift_release();
  sub_1A93F8934();
  v24 = (id)qword_1ED2A42B0;
  v25 = (uint64_t)v40;
  sub_1A91810F8((uint64_t)v40);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v35;
  v12(&v43, v10, v11);
  v27 = sub_1A93F8094();
  v28 = v34;
  *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v26 + 64) = v28;
  *(_QWORD *)(v26 + 32) = v27;
  *(_QWORD *)(v26 + 40) = v29;
  sub_1A93F75B4();

  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t))v31)(v25, v42);
}

uint64_t sub_1A9181CA0()
{
  uint64_t v0;

  v0 = sub_1A9182C9C();
  sub_1A90858C0(v0);
  return v0;
}

uint64_t sub_1A9181CD4(uint64_t a1, uint64_t a2)
{
  return OnDemandLibraryEpisodeStateDataSource.refreshControllerStates.setter(a1, a2);
}

void (*sub_1A9181CF4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = OnDemandLibraryEpisodeStateDataSource.refreshControllerStates.modify();
  return sub_1A914C880;
}

void sub_1A9181D3C(unint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  OnDemandLibraryEpisodeStateDataSource.state(for:)(a1, a2, a3 & 1, a4);
}

void OnDemandLibraryEpisodeStateDataSource.state(for:)(unint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  char v8;
  uint64_t v9;

  v8 = a3 & 1;
  v9 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  sub_1A93F8A90();
  sub_1A93F8874();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a4, 1, v9) == 1)
    EpisodeStateRepository.enqueueEpisodeStateFetch(for:)(a1, a2, v8);
}

uint64_t sub_1A9181E20@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v6 = *a1;
  v3 = *((_QWORD *)a1 + 2);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = v6;
    v8 = v3;
    v5 = sub_1A9181EB0((uint64_t *)&v7);
    result = swift_release();
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1A9181EB0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t result;
  uint64_t v12;
  _QWORD aBlock[6];
  uint64_t v14;

  v2 = *v1;
  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v14 = MEMORY[0x1E0DEE9D8];
  v6 = v1[5];
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = *(_QWORD *)(v2 + 80);
  v8[3] = *(_QWORD *)(v2 + 88);
  v8[4] = v7;
  v8[5] = v4;
  v8[6] = v3;
  v8[7] = v5;
  v8[8] = &v14;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1A9182EB8;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1A9055748;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_10;
  v10 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v10);
  _Block_release(v10);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v6 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v12 = v14;
    swift_release();
    return v12;
  }
  return result;
}

uint64_t sub_1A918204C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t);

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    swift_beginAccess();
    v4 = *(void (**)(uint64_t))(v3 + 16);
    if (v4)
    {
      swift_retain();
      v4(v1);
      sub_1A9085818((uint64_t)v4);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1A91820E4(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v13[2];
  char v14;

  v8 = *a1;
  swift_beginAccess();
  v9 = a1[6];
  v13[0] = a2;
  v13[1] = a3;
  a4 &= 1u;
  v14 = a4;
  sub_1A9086E60(a2, a3, a4);
  v10 = *(_QWORD *)(v8 + 80);
  v11 = sub_1A9087200();
  MEMORY[0x1AF411C8C](v13, v9, &type metadata for EpisodeStateIdentifier, v10, v11);
  sub_1A9086E08(a2, a3, a4);
  return swift_endAccess();
}

uint64_t sub_1A91821AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t *v33;
  _QWORD *v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  void (*v80)(char *, char *, uint64_t);
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  unsigned int v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char v88;
  void (*v89)(char *, uint64_t);
  char *v90;
  void (*v91)(char *, uint64_t);
  char *v92;
  char *v93;
  char v94;
  uint64_t *v95;
  _QWORD *v96;
  unint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t *, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t *v113;
  uint64_t v114;
  int64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t TupleTypeMetadata2;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  __int128 v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __int16 v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  char v148;

  v108 = a7;
  v7 = a6;
  v113 = a5;
  v118 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v107 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F8A90();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v110 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v14 = (char *)&v100 - v13;
  v15 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v100 - v20;
  MEMORY[0x1E0C80A78](v22);
  v124 = (char *)&v100 - v23;
  MEMORY[0x1E0C80A78](v24);
  v112 = (char *)&v100 - v25;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  v101 = result;
  if (result)
  {
    v111 = v21;
    v109 = v18;
    v125 = v14;
    v27 = *(_QWORD *)(a4 + 16);
    v116 = v12;
    v121 = v15;
    if (v27)
    {
      v127 = a2;
      v128 = a3;
      v126 = swift_bridgeObjectRetain();
      v28 = (char *)(v126 + 48);
      do
      {
        v29 = *((_QWORD *)v28 - 1);
        v31 = *v28;
        v146 = *((_QWORD *)v28 - 2);
        v30 = v146;
        v147 = v29;
        v148 = v31;
        swift_beginAccess();
        sub_1A9086E60(v30, v29, v31);
        sub_1A9087200();
        sub_1A93F7F5C();
        v32 = v112;
        sub_1A93F7F14();
        swift_endAccess();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v32, v116);
        v33 = v113;
        v34 = (_QWORD *)*v113;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v33 = (uint64_t)v34;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v34 = sub_1A9117A04(0, v34[2] + 1, 1, v34);
          *v113 = (uint64_t)v34;
        }
        v37 = v34[2];
        v36 = v34[3];
        if (v37 >= v36 >> 1)
        {
          v34 = sub_1A9117A04((_QWORD *)(v36 > 1), v37 + 1, 1, v34);
          *v113 = (uint64_t)v34;
        }
        v28 += 24;
        v34[2] = v37 + 1;
        v38 = &v34[3 * v37];
        v38[4] = v30;
        v38[5] = v29;
        *((_BYTE *)v38 + 48) = v31;
        --v27;
        v15 = v121;
      }
      while (v27);
      swift_bridgeObjectRelease();
      v12 = v116;
      a2 = v127;
    }
    v129 = a2;
    swift_bridgeObjectRetain();
    v39 = swift_bridgeObjectRetain();
    result = sub_1A9135F78(v39);
    v104 = *(_QWORD *)(v129 + 16);
    if (v104)
    {
      v40 = 0;
      v103 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v108 + 40);
      v123 = (uint64_t *)(v101 + 48);
      v105 = v129;
      v102 = v129 + 32;
      v41 = v111;
      v120 = v7;
      while (1)
      {
        if (v40 >= *(_QWORD *)(v105 + 16))
        {
LABEL_54:
          __break(1u);
          return result;
        }
        v42 = v102 + 96 * v40;
        v43 = *(_QWORD *)v42;
        v44 = *(unsigned __int8 *)(v42 + 90);
        v106 = v40 + 1;
        v45 = *(unsigned __int16 *)(v42 + 88);
        LODWORD(v128) = v45 | (v44 << 16);
        v47 = *(_QWORD *)(v42 + 72);
        v46 = *(_QWORD *)(v42 + 80);
        v49 = *(_QWORD *)(v42 + 56);
        v48 = *(_QWORD *)(v42 + 64);
        v50 = *(_QWORD *)(v42 + 48);
        v51 = *(_BYTE *)(v42 + 40);
        v52 = *(_QWORD *)(v42 + 32);
        v53 = *(_BYTE *)(v42 + 13);
        v54 = *(_BYTE *)(v42 + 12);
        v55 = *(_BYTE *)(v42 + 11);
        v56 = *(_BYTE *)(v42 + 10);
        v57 = *(_BYTE *)(v42 + 9);
        v58 = *(_BYTE *)(v42 + 8);
        v129 = v43;
        v130 = v58;
        v131 = v57;
        v132 = v56;
        v133 = v55;
        v134 = v54;
        v135 = v53;
        v136 = *(_OWORD *)(v42 + 16);
        v137 = v52;
        v138 = v51;
        v139 = v50;
        v140 = v49;
        v127 = v50;
        v141 = v48;
        v142 = v47;
        v143 = v46;
        v145 = v44;
        v144 = v45;
        swift_bridgeObjectRetain();
        sub_1A909F54C(v50, v49, v48, v47, v46);
        v103(&v129, v7, v108);
        v59 = *(_QWORD *)(v43 + 56);
        v114 = v43 + 56;
        v117 = v43;
        v60 = 1 << *(_BYTE *)(v43 + 32);
        result = sub_1A909F000(v127, v49, v48, v47, v46);
        v61 = 0;
        v62 = v60 < 64 ? ~(-1 << v60) : -1;
        v63 = v62 & v59;
        v64 = v60 + 63;
        v7 = v120;
        v115 = v64 >> 6;
        if (v63)
          break;
LABEL_21:
        v66 = v61 + 1;
        if (__OFADD__(v61, 1))
        {
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        if (v66 < v115)
        {
          v67 = *(_QWORD *)(v114 + 8 * v66);
          v68 = v61 + 1;
          if (v67)
            goto LABEL_34;
          v68 = v61 + 2;
          if (v61 + 2 < v115)
          {
            v67 = *(_QWORD *)(v114 + 8 * v68);
            if (v67)
              goto LABEL_34;
            v68 = v61 + 3;
            if (v61 + 3 < v115)
            {
              v67 = *(_QWORD *)(v114 + 8 * v68);
              if (v67)
                goto LABEL_34;
              v69 = v61 + 4;
              if (v61 + 4 < v115)
              {
                v67 = *(_QWORD *)(v114 + 8 * v69);
                if (v67)
                {
                  v68 = v61 + 4;
LABEL_34:
                  v126 = v68;
                  v127 = (v67 - 1) & v67;
                  v70 = __clz(__rbit64(v67)) + (v68 << 6);
                  goto LABEL_36;
                }
                while (1)
                {
                  v68 = v69 + 1;
                  if (__OFADD__(v69, 1))
                    goto LABEL_53;
                  if (v68 >= v115)
                    break;
                  v67 = *(_QWORD *)(v114 + 8 * v68);
                  ++v69;
                  if (v67)
                    goto LABEL_34;
                }
              }
            }
          }
        }
        swift_release();
        result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v124, v12);
        v40 = v106;
        if (v106 == v104)
          goto LABEL_50;
      }
      while (1)
      {
        while (1)
        {
          v126 = v61;
          v127 = (v63 - 1) & v63;
          v70 = __clz(__rbit64(v63)) | (v61 << 6);
LABEL_36:
          v71 = *(_QWORD *)(v117 + 48) + 24 * v70;
          v73 = *(_QWORD *)v71;
          v72 = *(_QWORD *)(v71 + 8);
          v74 = *(unsigned __int8 *)(v71 + 16);
          v75 = v123;
          swift_beginAccess();
          v76 = *v75;
          v146 = v73;
          v147 = v72;
          v148 = v74;
          sub_1A9086E60(v73, v72, v74);
          sub_1A9086E60(v73, v72, v74);
          v122 = sub_1A9087200();
          MEMORY[0x1AF411C8C](&v146, v76, &type metadata for EpisodeStateIdentifier, v7);
          LODWORD(v128) = v74;
          sub_1A9086E08(v73, v72, v74);
          swift_endAccess();
          v77 = v41;
          v78 = v125;
          v79 = &v125[*(int *)(TupleTypeMetadata2 + 48)];
          v80 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
          v80(v125, v77, v12);
          v80(v79, v124, v12);
          v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48);
          if (v81(v78, 1, v7) != 1)
            break;
          v82 = v12;
          v83 = *(void (**)(char *, uint64_t))(v15 + 8);
          v83(v77, v82);
          v84 = v81(v79, 1, v7);
          v41 = v77;
          v61 = v126;
          if (v84 != 1)
            goto LABEL_41;
          v65 = v116;
          v83(v125, v116);
          v12 = v65;
          result = sub_1A9086E08(v73, v72, v128);
          v7 = v120;
LABEL_20:
          v15 = v121;
          v63 = v127;
          if (!v127)
            goto LABEL_21;
        }
        v85 = v109;
        v80(v109, v78, v12);
        if (v81(v79, 1, v7) != 1)
        {
          v86 = v118;
          v87 = v107;
          (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v107, v79, v7);
          v88 = sub_1A93F8004();
          v89 = *(void (**)(char *, uint64_t))(v86 + 8);
          v90 = v87;
          v12 = v116;
          v89(v90, v120);
          v91 = *(void (**)(char *, uint64_t))(v121 + 8);
          v92 = v111;
          v91(v111, v12);
          v89(v85, v120);
          v7 = v120;
          v93 = v78;
          v41 = v92;
          v91(v93, v12);
          v61 = v126;
          if ((v88 & 1) == 0)
            goto LABEL_44;
          result = sub_1A9086E08(v73, v72, v128);
          goto LABEL_20;
        }
        v41 = v111;
        (*(void (**)(char *, uint64_t))(v121 + 8))(v111, v12);
        (*(void (**)(char *, uint64_t))(v118 + 8))(v85, v7);
        v61 = v126;
LABEL_41:
        (*(void (**)(char *, uint64_t))(v110 + 8))(v125, TupleTypeMetadata2);
        v7 = v120;
        v12 = v116;
LABEL_44:
        v80(v112, v124, v12);
        v146 = v73;
        v147 = v72;
        v94 = v128;
        v148 = v128;
        swift_beginAccess();
        sub_1A9086E60(v73, v72, v94);
        sub_1A93F7F5C();
        sub_1A93F7F80();
        swift_endAccess();
        v95 = v113;
        v96 = (_QWORD *)*v113;
        result = swift_isUniquelyReferenced_nonNull_native();
        *v95 = (uint64_t)v96;
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1A9117A04(0, v96[2] + 1, 1, v96);
          v96 = (_QWORD *)result;
          *v113 = result;
        }
        v15 = v121;
        v98 = v96[2];
        v97 = v96[3];
        if (v98 >= v97 >> 1)
        {
          result = (uint64_t)sub_1A9117A04((_QWORD *)(v97 > 1), v98 + 1, 1, v96);
          v96 = (_QWORD *)result;
          *v113 = result;
        }
        v96[2] = v98 + 1;
        v99 = &v96[3 * v98];
        v99[4] = v73;
        v99[5] = v72;
        *((_BYTE *)v99 + 48) = v128;
        v63 = v127;
        if (!v127)
          goto LABEL_21;
      }
    }
LABEL_50:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A9182C9C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1A9182CCC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9182CF0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9182D14@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A9181E20(a1, a2);
}

uint64_t sub_1A9182D20(uint64_t *a1)
{
  return sub_1A918204C(a1);
}

uint64_t sub_1A9182D2C()
{
  uint64_t v0;

  return sub_1A91820E4(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_1A9182D4C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

uint64_t sub_1A9182D5C()
{
  return 16;
}

__n128 sub_1A9182D68(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void sub_1A9182D74()
{
  unint64_t v0;

  sub_1A9070064();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t type metadata accessor for OnDemandLibraryEpisodeStateDataSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OnDemandLibraryEpisodeStateDataSource);
}

uint64_t method lookup function for OnDemandLibraryEpisodeStateDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OnDemandLibraryEpisodeStateDataSource.__allocating_init(episodeStateRepository:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_1A9182E48(uint64_t a1)
{
  uint64_t v1;

  return sub_1A938BA9C(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1A9182E50()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9182E74(_QWORD *a1)
{
  uint64_t v1;

  return sub_1A938BA78(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_1A9182E7C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A9182EB8()
{
  uint64_t v0;

  return sub_1A91821AC(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(uint64_t **)(v0 + 64), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1A9182ECC()
{
  return swift_deallocObject();
}

id MediaItemMetadataLoader.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void sub_1A9182F04(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v7;
  _QWORD *v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[6];

  v7 = (void *)sub_1A93F82F8();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v3;
  v8[3] = a1;
  v8[4] = a2;
  v8[5] = a3;
  v12[4] = sub_1A918320C;
  v12[5] = v8;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1A908A91C;
  v12[3] = &block_descriptor_11;
  v9 = _Block_copy(v12);
  v10 = v3;
  v11 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_pf_loadValuesAsynchronouslyForKeys_completionHandler_, v7, v9);
  _Block_release(v9);

}

uint64_t sub_1A9182FFC(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  char *v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v8 = sub_1A93F7D58();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F7DB8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)&a1[OBJC_IVAR___MTMediaItemMetadataLoader_metadataLoadingQueue];
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a1;
  v16[4] = a3;
  v16[5] = a4;
  aBlock[4] = sub_1A9183F9C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_10;
  v17 = _Block_copy(aBlock);
  v18 = a2;
  v19 = a1;
  swift_retain();
  sub_1A93F7D88();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v9, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1A918320C()
{
  uint64_t v0;

  return sub_1A9182FFC(*(char **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1A9183218(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char **v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  dispatch_group_t v23;
  unint64_t v24;
  void *v25;
  _QWORD *v26;
  char **v27;
  uint64_t v28;
  void *v29;
  id v30;
  NSObject *v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  id v36;
  char *v37;
  char *v38;
  uint64_t v39;
  dispatch_group_t v40;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  dispatch_group_t v56;
  uint64_t v57;
  id v58;
  uint64_t aBlock;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  void *v62;
  void *v63;
  _QWORD *v64;

  v45 = a4;
  v43 = a3;
  v44 = a2;
  v5 = sub_1A93F7D58();
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  MEMORY[0x1E0C80A78](v5);
  v49 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F7DB8();
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v46 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_pf_metadata, v8);
  sub_1A9072534(0, &qword_1EEAB9130);
  v11 = sub_1A93F8310();

  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = MEMORY[0x1E0DEE9E0];
  v56 = dispatch_group_create();
  if (v11 >> 62)
    goto LABEL_20;
  v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v12; v12 = sub_1A93F8E5C())
  {
    v13 = v11 & 0xC000000000000001;
    v14 = 4;
    v15 = &selRef_isOTAPurchased;
    v52 = "metadataLoadingQueue";
    v53 = 0x80000001A9445B80;
    v54 = v12;
    v55 = v11 & 0xC000000000000001;
    v16 = 0;
    if ((v11 & 0xC000000000000001) != 0)
    {
LABEL_4:
      v17 = (id)MEMORY[0x1AF4129DC](v16, v11);
      goto LABEL_6;
    }
    while (1)
    {
      v17 = *(id *)(v11 + 8 * v14);
LABEL_6:
      v18 = v17;
      v19 = v16 + 1;
      if (__OFADD__(v16, 1))
        break;
      v20 = objc_msgSend(v17, v15[315]);
      if (v20
        && (v58 = v20, __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9138), (swift_dynamicCast() & 1) != 0))
      {
        v21 = aBlock;
        v22 = v60;
        if (aBlock == 0xD000000000000012 && v60 == v53 || (sub_1A93F90C0() & 1) != 0)
        {
          v23 = v56;
          dispatch_group_enter(v56);
          v24 = v11;
          v25 = (void *)sub_1A93F82F8();
          v26 = (_QWORD *)swift_allocObject();
          v26[2] = v18;
          v26[3] = v21;
          v27 = v15;
          v28 = v57;
          v26[4] = v22;
          v26[5] = v28;
          v26[6] = v23;
          v63 = sub_1A9184048;
          v64 = v26;
          aBlock = MEMORY[0x1E0C809B0];
          v60 = 1107296256;
          v61 = sub_1A908A91C;
          v62 = &block_descriptor_25_0;
          v29 = _Block_copy(&aBlock);
          v15 = v27;
          swift_retain();
          v30 = v18;
          v31 = v23;
          swift_release();
          objc_msgSend(v30, sel_pf_loadValuesAsynchronouslyForKeys_completionHandler_, v25, v29);
          _Block_release(v29);

          v11 = v24;
          v12 = v54;
          v13 = v55;
          if (v19 == v54)
            goto LABEL_18;
        }
        else
        {

          swift_bridgeObjectRelease();
          if (v19 == v12)
            goto LABEL_18;
        }
      }
      else
      {

        if (v19 == v12)
          goto LABEL_18;
      }
      v16 = ++v14 - 4;
      if (v13)
        goto LABEL_4;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease_n();
  v32 = v44;
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = v57;
  v33[3] = v32;
  v34 = v45;
  v33[4] = v43;
  v33[5] = v34;
  v63 = sub_1A9184000;
  v64 = v33;
  aBlock = MEMORY[0x1E0C809B0];
  v60 = 1107296256;
  v61 = sub_1A908A91C;
  v62 = &block_descriptor_19_0;
  v35 = _Block_copy(&aBlock);
  swift_retain();
  v36 = v32;
  swift_retain();
  v37 = v46;
  sub_1A93F7D88();
  v58 = (id)MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  v38 = v49;
  v39 = v51;
  sub_1A93F8B5C();
  v40 = v56;
  sub_1A93F87FC();

  _Block_release(v35);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v48);
  swift_release();
  return swift_release();
}

void sub_1A9183748(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37[3];

  v10 = sub_1A93F7698();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (void *)sub_1A93F8010();
  v35 = objc_msgSend(a1, sel_pf_statusOfValueForKey_error_, v14, 0);

  if (qword_1ED2A42E8 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A42C8);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v15, v10);
  swift_bridgeObjectRetain_n();
  v16 = sub_1A93F7674();
  v17 = v11;
  v18 = sub_1A93F87B4();
  v19 = os_log_type_enabled(v16, v18);
  v34 = a2;
  if (v19)
  {
    v20 = swift_slowAlloc();
    v33 = v10;
    v21 = v20;
    v31 = swift_slowAlloc();
    v37[0] = v31;
    *(_DWORD *)v21 = 136315394;
    v32 = v17;
    swift_bridgeObjectRetain();
    v36 = sub_1A906436C(a2, a3, v37);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2048;
    v22 = v35;
    v36 = (uint64_t)v35;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v16, v18, "Status of metadata key %s is %ld", (uint8_t *)v21, 0x16u);
    v23 = v31;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v23, -1, -1);
    MEMORY[0x1AF41411C](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v33);
    if (v22 != (id)2)
      goto LABEL_9;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v13, v10);
    if (v35 != (id)2)
      goto LABEL_9;
  }
  v24 = objc_msgSend(a1, sel_pf_stringValue);
  if (v24)
  {
    v25 = v24;
    v26 = (uint64_t *)(a4 + 16);
    v27 = sub_1A93F8040();
    v29 = v28;

    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = *v26;
    *v26 = 0x8000000000000000;
    sub_1A930DBA4(v27, v29, v34, a3, isUniquelyReferenced_nonNull_native);
    *v26 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
LABEL_9:
  dispatch_group_leave(a5);
}

uint64_t sub_1A9183AB8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _QWORD v33[2];
  void (*v34)(_QWORD);
  uint64_t v35;
  uint64_t v36;

  v7 = sub_1A93F7698();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v33 - v12;
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_1A9094640(0xD000000000000012, 0x80000001A9445B80), (v16 & 1) != 0))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v14 + 56) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    swift_endAccess();
    swift_bridgeObjectRetain();
    v20 = sub_1A9184058(v18, v19);
    swift_bridgeObjectRelease();
    if (qword_1ED2A42E8 != -1)
      swift_once();
    v21 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED2A42C8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v21, v7);
    swift_bridgeObjectRetain_n();
    v22 = sub_1A93F7674();
    v23 = sub_1A93F87B4();
    if (os_log_type_enabled(v22, v23))
    {
      v34 = a3;
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v35 = (uint64_t)v20;
      v36 = v25;
      v33[1] = a4;
      *(_DWORD *)v24 = 136315138;
      v33[0] = v24 + 4;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9140);
      v26 = sub_1A93F8094();
      v35 = sub_1A906436C(v26, v27, &v36);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      a3 = v34;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v22, v23, "Metadata in HLS playlist has HLS keys %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v25, -1, -1);
      MEMORY[0x1AF41411C](v24, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    a3(v20);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_endAccess();
    if (qword_1ED2A42E8 != -1)
      swift_once();
    v28 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED2A42C8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v28, v7);
    v29 = sub_1A93F7674();
    v30 = sub_1A93F879C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_1A904E000, v29, v30, "Metadata in HLS playlist was missing HLS key information", v31, 2u);
      MEMORY[0x1AF41411C](v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return ((uint64_t (*)(_QWORD))a3)(0);
  }
}

id MediaItemMetadataLoader.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaItemMetadataLoader();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for MediaItemMetadataLoader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MediaItemMetadataLoader.keyIdentifiers(from:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t sub_1A9183F6C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1A9183F90(uint64_t a1)
{
  uint64_t v1;

  sub_1A93F1894(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A9183F9C()
{
  uint64_t v0;

  return sub_1A9183218(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1A9183FA8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A9183FCC()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9184000()
{
  uint64_t v0;

  return sub_1A9183AB8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1A918400C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1A9184048()
{
  uint64_t v0;

  sub_1A9183748(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(NSObject **)(v0 + 48));
}

_QWORD *sub_1A9184058(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  char *v36;
  id v37;
  void *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  id v54[5];
  __int128 v55;
  __int128 v56;
  uint64_t v57;

  v57 = *MEMORY[0x1E0C80C00];
  v4 = sub_1A93F7698();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v48 - v9;
  v11 = sub_1A93F7284();
  if (v12 >> 60 == 15)
  {
    if (qword_1ED2A42E8 != -1)
      swift_once();
    v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED2A42C8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
    swift_bridgeObjectRetain_n();
    v14 = sub_1A93F7674();
    v15 = sub_1A93F879C();
    if (os_log_type_enabled(v14, v15))
    {
      v50 = v5;
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      *(_QWORD *)&v55 = v17;
      *(_DWORD *)v16 = 136315138;
      swift_bridgeObjectRetain();
      v52 = sub_1A906436C(a1, a2, (uint64_t *)&v55);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A904E000, v14, v15, "Metadata in HLS playlist was not base64 encoded: %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v17, -1, -1);
      MEMORY[0x1AF41411C](v16, -1, -1);

      v18 = *(void (**)(char *, uint64_t))(v50 + 8);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    }
    v36 = v7;
LABEL_32:
    v18(v36, v4);
    return 0;
  }
  v19 = v11;
  v20 = v12;
  v21 = (void *)objc_opt_self();
  v22 = (void *)sub_1A93F729C();
  v54[0] = 0;
  v23 = objc_msgSend(v21, sel_JSONObjectWithData_options_error_, v22, 0, v54);

  v51 = v19;
  if (!v23)
  {
    v37 = v54[0];
    v38 = (void *)sub_1A93F7128();

    swift_willThrow();
    goto LABEL_26;
  }
  v24 = v54[0];
  sub_1A93F8B44();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC490);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_26:
    if (qword_1ED2A42E8 != -1)
      swift_once();
    v39 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED2A42C8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v39, v4);
    swift_bridgeObjectRetain_n();
    v40 = sub_1A93F7674();
    v41 = sub_1A93F879C();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc();
      v49 = v20;
      v43 = (uint8_t *)v42;
      v44 = swift_slowAlloc();
      v50 = v5;
      v45 = a1;
      v46 = v44;
      *(_QWORD *)&v55 = v44;
      *(_DWORD *)v43 = 136315138;
      swift_bridgeObjectRetain();
      v52 = sub_1A906436C(v45, a2, (uint64_t *)&v55);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A904E000, v40, v41, "base64 encoded metadata in HLS playlist was not a JSON object: %s", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v46, -1, -1);
      MEMORY[0x1AF41411C](v43, -1, -1);
      sub_1A9069F9C(v51, v49);

      v18 = *(void (**)(char *, uint64_t))(v50 + 8);
    }
    else
    {
      sub_1A9069F9C(v51, v20);

      swift_bridgeObjectRelease_n();
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    }
    v36 = v10;
    goto LABEL_32;
  }
  v25 = *(_QWORD *)(v55 + 16);
  v49 = v20;
  v50 = v55;
  if (v25)
  {
    v26 = (uint64_t *)(v55 + 32);
    v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v28 = *v26;
      v52 = 6910581;
      v53 = 0xE300000000000000;
      swift_bridgeObjectRetain();
      sub_1A93F8C1C();
      if (*(_QWORD *)(v28 + 16) && (v29 = sub_1A90A597C((uint64_t)v54), (v30 & 1) != 0))
      {
        sub_1A906443C(*(_QWORD *)(v28 + 56) + 32 * v29, (uint64_t)&v55);
      }
      else
      {
        v55 = 0u;
        v56 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1A90A5908((uint64_t)v54);
      if (*((_QWORD *)&v56 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v31 = v52;
          v32 = v53;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v27 = sub_1A907ECFC(0, v27[2] + 1, 1, v27);
          v34 = v27[2];
          v33 = v27[3];
          if (v34 >= v33 >> 1)
            v27 = sub_1A907ECFC((_QWORD *)(v33 > 1), v34 + 1, 1, v27);
          v27[2] = v34 + 1;
          v35 = &v27[2 * v34];
          v35[4] = v31;
          v35[5] = v32;
        }
      }
      else
      {
        sub_1A90A593C((uint64_t)&v55);
      }
      ++v26;
      --v25;
    }
    while (v25);
  }
  else
  {
    v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  sub_1A9069F9C(v51, v49);
  return v27;
}

id static MTPodcast.sortDescriptor(newestToOldest:)(char a1)
{
  id v2;
  void *v3;
  id v4;

  sub_1A93F8040();
  v2 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v3 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithKey_ascending_, v3, (a1 & 1) == 0);

  return v4;
}

uint64_t ServerChannel.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerChannel.subscriptionName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerChannel.showCount.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes);
  if (*(_BYTE *)(v1 + 56))
    return 0;
  else
    return *(_QWORD *)(v1 + 48);
}

uint64_t ServerChannel.availableShowCount.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes);
  if (*(_BYTE *)(v1 + 72))
    return 0;
  else
    return *(_QWORD *)(v1 + 64);
}

uint64_t ServerChannel.storeId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerChannel.displayType.getter()
{
  uint64_t v0;
  char v2;

  sub_1A9184AA4(v0, &v2);
  return *(_QWORD *)&aFree_3[8 * v2];
}

uint64_t sub_1A9184AA4@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;

  v3 = *(_QWORD *)(result + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes);
  v4 = *(_BYTE *)(v3 + 73);
  if ((v4 - 1) > 1u)
  {
    v8 = 0;
  }
  else
  {
    if (*(_QWORD *)(v3 + 120))
      v5 = *(_QWORD *)(v3 + 120);
    else
      v5 = MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(v3 + 152))
      v6 = *(_QWORD *)(v3 + 152);
    else
      v6 = MEMORY[0x1E0DEE9D8];
    v9 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A9136690(v6);
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    result = swift_bridgeObjectRelease();
    if (v7)
      v8 = v4;
    else
      v8 = 0;
  }
  *a2 = v8;
  return result;
}

uint64_t ServerChannel.artworkURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 24);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerChannel.logoImageURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 128);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerChannel.backgroundColor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 136);
  swift_bridgeObjectRetain();
  return v1;
}

float ServerChannel.logoImageHeight.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 128);
  if (v1 && *(_BYTE *)(v1 + 40) != 1)
    return (float)*(uint64_t *)(v1 + 32);
  else
    return (float)0;
}

float ServerChannel.logoImageWidth.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 128);
  if (v1 && *(_BYTE *)(v1 + 24) != 1)
    return (float)*(uint64_t *)(v1 + 16);
  else
    return (float)0;
}

uint64_t ServerChannel.uberBackgroundImageURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 112);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 32);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerChannel.uberBackgroundJoeColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 112);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 32);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerChannel.url.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerChannel.fallbackSubscriptionName.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes);
  v2 = *(_QWORD *)(v1 + 120);
  if (!v2)
    goto LABEL_7;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1A93F8E5C())
    {
LABEL_4:
      if ((v2 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x1AF4129DC](0, v2);
        swift_bridgeObjectRelease();
        v2 = *(_QWORD *)(v9 + 80);
        v10 = *(_QWORD *)(v9 + 88);
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        if (v10)
          return v2;
      }
      else
      {
        if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_22;
        }
        v4 = *(_QWORD *)(v2 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        v2 = *(_QWORD *)(v4 + 80);
        v5 = *(_QWORD *)(v4 + 88);
        swift_bridgeObjectRetain();
        swift_release();
        if (v5)
          return v2;
      }
LABEL_7:
      v2 = *(_QWORD *)(v1 + 152);
      if (v2)
        goto LABEL_8;
LABEL_15:
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 152);
  if (!v2)
    goto LABEL_15;
LABEL_8:
  if (!(v2 >> 62))
  {
    v6 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_10;
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  result = sub_1A93F8E5C();
  if (!result)
    goto LABEL_17;
LABEL_10:
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_22:
    v11 = MEMORY[0x1AF4129DC](0, v2);
    swift_bridgeObjectRelease();
    v2 = *(_QWORD *)(v11 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return v2;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(_QWORD *)(v2 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    v2 = *(_QWORD *)(v8 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_release();
    return v2;
  }
  __break(1u);
  return result;
}

void PaginatedPublisher.transformPublisherPart<A>(_:)(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for AnyPaginatedPublisherTransformed();
}

uint64_t sub_1A918537C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v1, v0);
  v2(v1);
  return sub_1A91853DC(v4, v3);
}

void type metadata accessor for AnyPaginatedPublisherTransformed()
{
  JUMPOUT(0x1AF413F6CLL);
}

uint64_t sub_1A91853DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  v5 = *(_QWORD *)v4;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 144) - 8) + 32))(v4 + *(_QWORD *)(*(_QWORD *)v4 + 176), a1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 152) - 8) + 32))(v4 + *(_QWORD *)(*(_QWORD *)v4 + 184), a2);
  return v4;
}

void PaginatedPublisher.paginatedBufferedMulticast()()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v0 = sub_1A93F78FC();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95D90], v0);
  PaginatedPublisher.transformPublisherPart<A>(_:)((uint64_t)sub_1A9185550);
}

uint64_t sub_1A9185550@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = Publisher.bufferedMulticast()(*(_QWORD *)(v1 + 16), *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8));
  *a1 = result;
  return result;
}

void PaginatedPublisher.paginatedMap<A>(_:)()
{
  uint64_t v0;

  v0 = sub_1A93F77DC();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95950], v0);
  PaginatedPublisher.transformPublisherPart<A>(_:)((uint64_t)sub_1A918560C);
}

uint64_t sub_1A918560C()
{
  return sub_1A93F7B84();
}

void PaginatedPublisher.paginatedPrepend(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  v0 = sub_1A93F83D0();
  swift_getAssociatedTypeWitness();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v0);
  swift_getAssociatedConformanceWitness();
  v2 = sub_1A93F786C();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95C10], v2);
  v1 = sub_1A93F774C();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95788], v1);
  PaginatedPublisher.transformPublisherPart<A>(_:)((uint64_t)sub_1A918581C);
}

uint64_t sub_1A9185780()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  v0 = sub_1A93F83D0();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v0);
  return sub_1A93F7C74();
}

uint64_t sub_1A918581C()
{
  return sub_1A9185780();
}

void PaginatedPublisher.paginatedPrint(_:to:)()
{
  uint64_t v0;

  v0 = sub_1A93F780C();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95A70], v0);
  PaginatedPublisher.transformPublisherPart<A>(_:)((uint64_t)sub_1A91858A8);
}

uint64_t sub_1A91858A8()
{
  return sub_1A93F7BE4();
}

void PaginatedPublisher.paginatedSectionMap<A, B, C>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  v16[5] = a6;
  v16[6] = a7;
  v16[7] = a8;
  v16[8] = a1;
  v16[9] = a2;
  v17 = sub_1A93F83D0();
  type metadata accessor for FRPOutput(0, v17, v18, v19);
  swift_retain();
  PaginatedPublisher.paginatedMap<A>(_:)();
}

uint64_t sub_1A9185980(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_1A91859AC@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X8>, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for FRPSectionInfo(255, a2, a1, a4);
  v5 = sub_1A93F83D0();
  v8 = type metadata accessor for FRPOutput(0, v5, v6, v7);
  v9 = sub_1A93F83D0();
  return FRPOutput.map<A>(_:)((uint64_t)sub_1A9186A64, v8, v9, a3);
}

uint64_t sub_1A9185A64()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9185A88@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1A91859AC(v1[3], v1[4], a1, v1[7]);
}

uint64_t sub_1A9185AB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[12];

  v16[11] = *a1;
  v16[2] = a4;
  v16[3] = a5;
  v16[4] = a6;
  v16[5] = a7;
  v16[6] = a8;
  v16[7] = a10;
  v16[8] = a2;
  v16[9] = a3;
  type metadata accessor for FRPSectionInfo(255, a6, a5, a10);
  v12 = sub_1A93F83D0();
  v13 = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v12);
  result = sub_1A9241454((void (*)(char *, char *))sub_1A9186A94, (uint64_t)v16, v12, a7, MEMORY[0x1E0DEDCE8], v13, MEMORY[0x1E0DEDD18], v14);
  *a9 = result;
  return result;
}

void PaginatedPublisher.paginatedFRPOutputMap<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a6;
  v12[6] = a1;
  v12[7] = a2;
  type metadata accessor for FRPOutput(0, a5, v13, v14);
  swift_retain();
  PaginatedPublisher.paginatedMap<A>(_:)();
}

uint64_t sub_1A9185BF8(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_1A9185C20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9185C44@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v3 + 32);
  v5 = type metadata accessor for FRPOutput(0, *(_QWORD *)(v3 + 24), a1, a2);
  return FRPOutput.map<A>(_:)((uint64_t)sub_1A9186A44, v5, v7, a3);
}

void Publisher<>.paginatedSwitchToLatest()()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for SwitchToLatestPaginatedPublisher();
}

_QWORD *sub_1A9185D04()
{
  swift_allocObject();
  return sub_1A91866A8();
}

void type metadata accessor for SwitchToLatestPaginatedPublisher()
{
  JUMPOUT(0x1AF413F6CLL);
}

void sub_1A9185D40()
{
  sub_1A93F8E14();
  __break(1u);
}

void sub_1A9185D88()
{
  sub_1A93F8E14();
  __break(1u);
}

void sub_1A9185DD0()
{
  sub_1A93F8E14();
  __break(1u);
}

void sub_1A9185E18()
{
  sub_1A93F8E14();
  __break(1u);
}

uint64_t AnyPaginatedPublisher.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AnyPaginatedPublisher.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1A9185E78()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 104))() & 1;
}

uint64_t sub_1A9185EA4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 112))() & 1;
}

uint64_t sub_1A9185ED0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 152) + 16))(*(_QWORD *)(*(_QWORD *)v0 + 144)) & 1;
}

uint64_t sub_1A9185F04()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 152) + 24))(*(_QWORD *)(*(_QWORD *)v0 + 144)) & 1;
}

uint64_t sub_1A9185F38()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 152) + 32))(*(_QWORD *)(*(_QWORD *)v0 + 144));
}

uint64_t sub_1A9185F68()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 144) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160));
}

uint64_t sub_1A9185F84()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 160) + 16))(*(_QWORD *)(*(_QWORD *)v0 + 144)) & 1;
}

uint64_t sub_1A9185FBC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 160) + 24))(*(_QWORD *)(*(_QWORD *)v0 + 144)) & 1;
}

uint64_t sub_1A9185FF4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 160) + 32))(*(_QWORD *)(*(_QWORD *)v0 + 144));
}

uint64_t sub_1A9186028()
{
  return sub_1A93F7B0C();
}

uint64_t sub_1A9186058()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*v0 + 144) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 176));
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 152) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 184));
}

uint64_t sub_1A91860A4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*v0 + 144) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 176));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 152) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 184));
  return swift_deallocClassInstance();
}

uint64_t sub_1A9186104(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v13;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F8A90();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - v9;
  sub_1A93F79BC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3))
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v11 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 168) + 16))(v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v11 & 1;
}

uint64_t sub_1A9186230(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v13;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F8A90();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - v9;
  sub_1A93F79BC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3))
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v11 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 168) + 24))(v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v11 & 1;
}

uint64_t sub_1A918635C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F8A90();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - v9;
  sub_1A93F79BC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3))
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(uint64_t))(*(_QWORD *)(v2 + 168) + 32))(v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A9186478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v1 = sub_1A93F7788();
  v2 = sub_1A93F78FC();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95D90], v2);
  v8 = v1;
  v9 = sub_1A93F77DC();
  v10 = MEMORY[0x1AF414014](MEMORY[0x1E0C95850], v1);
  v11 = MEMORY[0x1AF414014](MEMORY[0x1E0C95950], v9);
  v3 = sub_1A93F77A0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - v5;
  v8 = *(_QWORD *)(v0 + 16);
  sub_1A93F7B18();
  sub_1A93F7794();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A9186628()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A918664C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1A9186678()
{
  sub_1A918664C();
  return swift_deallocClassInstance();
}

uint64_t Just.isPreparingNextPage.getter()
{
  return 0;
}

Swift::Bool __swiftcall Just.shouldPrepareNextPage()()
{
  return 0;
}

_QWORD *sub_1A91866A8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + 152);
  v4 = sub_1A93F8A90();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - v5;
  v7 = sub_1A93F79D4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v6, 1, 1, v3);
  swift_retain();
  v1[3] = sub_1A93F79E0();
  v8 = Publisher.bufferedMulticast()(*(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 160));
  v1[2] = v8;
  v16 = v8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v9 = sub_1A93F78FC();
  swift_retain();
  v10 = MEMORY[0x1E0C95D90];
  v11 = MEMORY[0x1AF414014](MEMORY[0x1E0C95D90], v9);
  v16 = Publisher.makeOptional.getter(v9, v11);
  v12 = sub_1A93F78FC();
  MEMORY[0x1AF414014](v10, v12);
  MEMORY[0x1AF414014](MEMORY[0x1E0C95FB0], v7);
  v13 = sub_1A93F7CC8();
  swift_release();
  swift_release();
  v1[4] = v13;
  swift_release();
  return v1;
}

uint64_t sub_1A91868B8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1AF414014](&protocol conformance descriptor for AnyPaginatedPublisher<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A91868E4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1AF414014](MEMORY[0x1E0C960B0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of PaginatedPublisher.isPreparingNextPage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PaginatedPublisher.shouldPrepareNextPage()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PaginatedPublisher.loadNextPage()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t method lookup function for AnyPaginatedPublisher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnyPaginatedPublisher.isPreparingNextPage.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of AnyPaginatedPublisher.shouldPrepareNextPage()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of AnyPaginatedPublisher.loadNextPage()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of AnyPaginatedPublisher.receive<A>(subscriber:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t sub_1A9186964()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1A91869F4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1A9186A44()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_1A9186A64@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A9185AB8(a1, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(char **)(v2 + 40), *(_QWORD *)(v2 + 48), a2, *(_QWORD *)(v2 + 56));
}

uint64_t sub_1A9186A94()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 64))();
}

uint64_t DownloadedAssetEffect.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v1 = sub_1A93F726C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DownloadedAssetEffect();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9186F7C(v0, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1A93F92E8();
    sub_1A9066CA8(&qword_1EEAB9148, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    sub_1A93F7FB0();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    sub_1A93F92E8();
    sub_1A93F7FBC();
    return swift_bridgeObjectRelease();
  }
}

uint64_t DownloadedAssetEffect.hashValue.getter()
{
  sub_1A93F92DC();
  DownloadedAssetEffect.hash(into:)();
  return sub_1A93F9324();
}

uint64_t sub_1A9186C60()
{
  sub_1A93F92DC();
  DownloadedAssetEffect.hash(into:)();
  return sub_1A93F9324();
}

uint64_t sub_1A9186CA0()
{
  sub_1A93F92DC();
  DownloadedAssetEffect.hash(into:)();
  return sub_1A93F9324();
}

uint64_t _s18PodcastsFoundation21DownloadedAssetEffectO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  char v25;
  char *v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v32 = sub_1A93F726C();
  v4 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DownloadedAssetEffect();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v31 - v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v31 - v14);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9158);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v18[*(int *)(v19 + 48)];
  sub_1A9186F7C(a1, (uint64_t)v18);
  sub_1A9186F7C(a2, (uint64_t)v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1A9186F7C((uint64_t)v18, (uint64_t)v15);
    v23 = *v15;
    v22 = v15[1];
    if (!swift_getEnumCaseMultiPayload())
    {
LABEL_4:
      if (v23 == *(_QWORD *)v20 && v22 == *((_QWORD *)v20 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v25 = sub_1A93F90C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
        {
          sub_1A91872BC((uint64_t)v18);
LABEL_16:
          v28 = 0;
          return v28 & 1;
        }
      }
      sub_1A91872BC((uint64_t)v18);
      v28 = 1;
      return v28 & 1;
    }
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1A9186F7C((uint64_t)v18, (uint64_t)v12);
    v23 = *v12;
    v22 = v12[1];
    if (swift_getEnumCaseMultiPayload() == 1)
      goto LABEL_4;
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_15:
    sub_1A9187420((uint64_t)v18);
    goto LABEL_16;
  }
  sub_1A9186F7C((uint64_t)v18, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v32);
    goto LABEL_15;
  }
  v26 = v20;
  v27 = v32;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v26, v32);
  v28 = MEMORY[0x1AF410F0C](v9, v6);
  v29 = *(void (**)(char *, uint64_t))(v4 + 8);
  v29(v6, v27);
  v29(v9, v27);
  sub_1A91872BC((uint64_t)v18);
  return v28 & 1;
}

uint64_t sub_1A9186F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DownloadedAssetEffect();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9186FC0()
{
  return sub_1A9066CA8(&qword_1EEAB9150, (uint64_t (*)(uint64_t))type metadata accessor for DownloadedAssetEffect, (uint64_t)&protocol conformance descriptor for DownloadedAssetEffect);
}

uint64_t *initializeBufferWithCopyOfBuffer for DownloadedAssetEffect(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v8 = sub_1A93F726C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for DownloadedAssetEffect(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v3 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else if (result <= 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for DownloadedAssetEffect(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v5 = sub_1A93F726C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  }
  else
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for DownloadedAssetEffect(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_1A91872BC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v4 = sub_1A93F726C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A91872BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DownloadedAssetEffect();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for DownloadedAssetEffect(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_1A93F726C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for DownloadedAssetEffect(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1A91872BC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_1A93F726C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A9187420(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9158);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of PodcastStateDataSourceDelegate.refreshStates(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PodcastStateDataSourceProtocol.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PodcastStateDataSourceProtocol.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PodcastStateDataSourceProtocol.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PodcastStateDataSourceProtocol.activate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PodcastStateDataSourceProtocol.state(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PodcastStateDataSourceProtocol.state(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

BOOL static OAuthSessionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t OAuthSessionError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t OAuthSessionError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

unint64_t sub_1A9187524()
{
  unint64_t result;

  result = qword_1EEAB9160;
  if (!qword_1EEAB9160)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for OAuthSessionError, &type metadata for OAuthSessionError);
    atomic_store(result, (unint64_t *)&qword_1EEAB9160);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OAuthSessionError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEB)
    goto LABEL_17;
  if (a2 + 21 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 21) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 21;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 21;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 21;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x16;
  v8 = v6 - 22;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for OAuthSessionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 21 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 21) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEA)
    return ((uint64_t (*)(void))((char *)&loc_1A9187644 + 4 * byte_1A940AD55[v4]))();
  *a1 = a2 + 21;
  return ((uint64_t (*)(void))((char *)sub_1A9187678 + 4 * asc_1A940AD50[v4]))();
}

uint64_t sub_1A9187678(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9187680(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9187688);
  return result;
}

uint64_t sub_1A9187694(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A918769CLL);
  *(_BYTE *)result = a2 + 21;
  return result;
}

uint64_t sub_1A91876A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91876A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OAuthSessionError()
{
  return &type metadata for OAuthSessionError;
}

uint64_t MetricsActionType.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t MetricsActionType.debugDescription.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD00000000000001DLL;
}

unint64_t sub_1A9187794()
{
  return MetricsActionType.debugDescription.getter();
}

uint64_t MetricsActionType.description.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t MetricsActionType.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_1A93F90CC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsActionType.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F912C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsActionType.actionSheet.getter()
{
  return 0x68536E6F69746361;
}

uint64_t static MetricsActionType.buy.getter()
{
  return 7959906;
}

uint64_t static MetricsActionType.cancelDownload.getter()
{
  return 0x6F446C65636E6163;
}

uint64_t static MetricsActionType.clear.getter()
{
  return 0x7261656C63;
}

uint64_t static MetricsActionType.click.getter()
{
  return 0x6B63696C63;
}

uint64_t static MetricsActionType.copy.getter()
{
  return 2037411683;
}

uint64_t static MetricsActionType.delete.getter()
{
  return 0x6574656C6564;
}

uint64_t static MetricsActionType.description.getter()
{
  return 0x7470697263736564;
}

uint64_t static MetricsActionType.dismiss.getter()
{
  return 0x7373696D736964;
}

uint64_t static MetricsActionType.download.getter()
{
  return 0x64616F6C6E776F64;
}

uint64_t static MetricsActionType.fastForward.getter()
{
  return 0x77726F4674736166;
}

uint64_t static MetricsActionType.filter.getter()
{
  return 0x7265746C6966;
}

uint64_t static MetricsActionType.follow.getter()
{
  return 0x776F6C6C6F66;
}

uint64_t static MetricsActionType.hide.getter()
{
  return 1701079400;
}

uint64_t static MetricsActionType.hint.getter()
{
  return 1953393000;
}

uint64_t static MetricsActionType.input.getter()
{
  return 0x7475706E69;
}

uint64_t static MetricsActionType.navigate.getter()
{
  return 0x657461676976616ELL;
}

uint64_t static MetricsActionType.openDocument.getter()
{
  return 0x75636F446E65706FLL;
}

uint64_t static MetricsActionType.pause.getter()
{
  return 0x6573756170;
}

uint64_t static MetricsActionType.play.getter()
{
  return 2036427888;
}

uint64_t static MetricsActionType.played.getter()
{
  return 0x646579616C70;
}

uint64_t static MetricsActionType.ratings.getter()
{
  return 0x73676E69746172;
}

uint64_t static MetricsActionType.removeDownload.getter()
{
  return 0x6F4465766F6D6572;
}

unint64_t static MetricsActionType.removeFromStation.getter()
{
  return 0xD000000000000011;
}

uint64_t static MetricsActionType.report.getter()
{
  return 0x74726F706572;
}

uint64_t static MetricsActionType.reportConcern.getter()
{
  return 0x6F4374726F706572;
}

uint64_t static MetricsActionType.rewind.getter()
{
  return 0x646E69776572;
}

uint64_t static MetricsActionType.save.getter()
{
  return 1702257011;
}

uint64_t static MetricsActionType.select.getter()
{
  return 0x7463656C6573;
}

uint64_t static MetricsActionType.share.getter()
{
  return 0x6572616873;
}

uint64_t static MetricsActionType.show.getter()
{
  return 2003789939;
}

uint64_t static MetricsActionType.skip.getter()
{
  return 1885956979;
}

uint64_t static MetricsActionType.sort.getter()
{
  return 1953656691;
}

uint64_t static MetricsActionType.submit.getter()
{
  return 0x74696D627573;
}

uint64_t static MetricsActionType.tapToRate.getter()
{
  return 0x7461526F54706174;
}

unint64_t static MetricsActionType.turnOffAutoDownloads.getter()
{
  return 0xD000000000000014;
}

unint64_t static MetricsActionType.turnOnAutoDownloads.getter()
{
  return 0xD000000000000013;
}

uint64_t static MetricsActionType.unfollow.getter()
{
  return 0x776F6C6C6F666E75;
}

uint64_t static MetricsActionType.unplayed.getter()
{
  return 0x646579616C706E75;
}

uint64_t static MetricsActionType.unsave.getter()
{
  return 0x657661736E75;
}

uint64_t static MetricsActionType.viewTranscript.getter()
{
  return 0x6E61725477656976;
}

unint64_t sub_1A9187CE0()
{
  unint64_t result;

  result = qword_1EEAB9168;
  if (!qword_1EEAB9168)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsActionType, &type metadata for MetricsActionType);
    atomic_store(result, (unint64_t *)&qword_1EEAB9168);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsActionType()
{
  return &type metadata for MetricsActionType;
}

uint64_t static CacheDeleteUrgency.from(purgeability:)(uint64_t a1)
{
  uint64_t result;

  if ((a1 & 0x100000000) != 0)
    return 0;
  switch((_DWORD)a1)
  {
    case 0x200:
      return 1;
    case 0x8000:
      return 3;
    case 0x800:
      return 2;
  }
  result = sub_1A93F8E14();
  __break(1u);
  return result;
}

uint64_t CacheDeleteUrgency.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9187DF8
                                                            + 4 * asc_1A940B040[a1]))(1701736302, 0xE400000000000000);
}

uint64_t sub_1A9187DF8()
{
  return 7827308;
}

uint64_t sub_1A9187E08()
{
  return 1751607656;
}

unint64_t sub_1A9187E14()
{
  return 0xD000000000000015;
}

void sub_1A9187E30(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1A9187E74@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A9187EC4 + 4 * byte_1A940B048[a1]))(7827308);
}

uint64_t sub_1A9187EC4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 7827308 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1A9187F5C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A9187FA0()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A9188000()
{
  __asm { BR              X10 }
}

uint64_t sub_1A9188034()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A9188080()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A91880C0()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A9188120@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s18PodcastsFoundation18CacheDeleteUrgencyO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1A918814C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A9188174 + 4 * byte_1A940B058[*v0]))();
}

void sub_1A9188174(_QWORD *a1@<X8>)
{
  *a1 = 7827308;
  a1[1] = 0xE300000000000000;
}

void sub_1A9188188(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1751607656;
  a1[1] = v1;
}

void sub_1A9188198(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x80000001A94421F0;
}

uint64_t _s18PodcastsFoundation18CacheDeleteUrgencyO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1A9188204()
{
  unint64_t result;

  result = qword_1EEAB9170;
  if (!qword_1EEAB9170)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for CacheDeleteUrgency, &type metadata for CacheDeleteUrgency);
    atomic_store(result, (unint64_t *)&qword_1EEAB9170);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CacheDeleteUrgency(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A9188294 + 4 * byte_1A940B061[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A91882C8 + 4 * byte_1A940B05C[v4]))();
}

uint64_t sub_1A91882C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91882D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91882D8);
  return result;
}

uint64_t sub_1A91882E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91882ECLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A91882F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91882F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CacheDeleteUrgency()
{
  return &type metadata for CacheDeleteUrgency;
}

uint64_t sub_1A9188314@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1A9182E74;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_1A90858C0(v4);
}

uint64_t sub_1A918839C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1A9182E48;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  sub_1A90858C0(v3);
  return sub_1A9085818(v8);
}

uint64_t ThinClientLibraryEpisodeStateDataSource.refreshControllerStates.getter()
{
  uint64_t v0;

  v0 = sub_1A9182C9C();
  sub_1A90858C0(v0);
  return v0;
}

uint64_t ThinClientLibraryEpisodeStateDataSource.refreshControllerStates.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_1A9085818(v5);
}

uint64_t (*ThinClientLibraryEpisodeStateDataSource.refreshControllerStates.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *ThinClientLibraryEpisodeStateDataSource.__allocating_init(thinClientEpisodeStateRepository:)(uint64_t a1)
{
  _QWORD *v2;

  v2 = (_QWORD *)swift_allocObject();
  v2[2] = 0;
  v2[3] = 0;
  v2[4] = a1;
  v2[5] = 0;
  swift_retain();
  ThinClientLibraryEpisodeStateDataSource.startObservingChanges()();
  swift_release();
  return v2;
}

_QWORD *ThinClientLibraryEpisodeStateDataSource.init(thinClientEpisodeStateRepository:)(uint64_t a1)
{
  _QWORD *v1;

  v1 = sub_1A9188AD4(a1);
  swift_release();
  return v1;
}

Swift::Void __swiftcall ThinClientLibraryEpisodeStateDataSource.startObservingChanges()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9178);
  sub_1A9066D74((unint64_t *)&qword_1EEAB9180, &qword_1EEAB9178, MEMORY[0x1E0C95F48]);
  sub_1A93F7B24();
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = *(_QWORD *)(v2 + 80);
  v4[3] = *(_QWORD *)(v2 + 88);
  v4[4] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9188);
  sub_1A9066D74(qword_1EEAB9190, &qword_1EEAB9188, MEMORY[0x1E0C95D90]);
  v5 = sub_1A93F7D04();
  swift_release();
  swift_release();
  v1[5] = v5;
  swift_release();
}

uint64_t sub_1A91886B4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t);

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    swift_beginAccess();
    v4 = *(void (**)(uint64_t))(v3 + 16);
    if (v4)
    {
      sub_1A90858C0(*(_QWORD *)(v3 + 16));
      swift_release();
      v4(v1);
      return sub_1A9085818((uint64_t)v4);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t ThinClientLibraryEpisodeStateDataSource.state(for:)@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return ThinClientEpisodeStateRepository.state<A>(for:)(a1, a2 & 1, *(_QWORD *)(*(_QWORD *)v3 + 80), *(_QWORD *)(*(_QWORD *)v3 + 88), a3);
}

uint64_t sub_1A918878C@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9258);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for ThinClientEpisodeStateModel();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a2 & 1) != 0)
  {
    v19 = type metadata accessor for EpisodePlayState();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19);
  }
  else
  {
    v14 = *(_QWORD *)(v3 + 16);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 32));
    sub_1A92D1300((_QWORD *)(v14 + 16), &v23);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 32));
    v15 = v23;
    swift_bridgeObjectRelease();
    swift_release();
    if (*(_QWORD *)(v15 + 16) && (v16 = sub_1A9093570(a1), (v17 & 1) != 0))
    {
      sub_1A9188D10(*(_QWORD *)(v15 + 56) + *(_QWORD *)(v11 + 72) * v16, (uint64_t)v9);
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v18, 1, v10);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      sub_1A9188C08((uint64_t)v9);
      v21 = type metadata accessor for EpisodePlayState();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a3, 1, 1, v21);
    }
    else
    {
      sub_1A9188C48((uint64_t)v9, (uint64_t)v13);
      sub_1A9188C8C((uint64_t)v13, a3);
      return sub_1A9188CD4((uint64_t)v13);
    }
  }
}

uint64_t ThinClientLibraryEpisodeStateDataSource.deinit()
{
  uint64_t v0;

  sub_1A9085818(*(_QWORD *)(v0 + 16));
  swift_release();
  swift_release();
  return v0;
}

uint64_t ThinClientLibraryEpisodeStateDataSource.__deallocating_deinit()
{
  ThinClientLibraryEpisodeStateDataSource.deinit();
  return swift_deallocClassInstance();
}

void sub_1A91889DC()
{
  ThinClientLibraryEpisodeStateDataSource.startObservingChanges()();
}

uint64_t sub_1A91889FC(uint64_t a1, uint64_t a2)
{
  return ThinClientLibraryEpisodeStateDataSource.refreshControllerStates.setter(a1, a2);
}

void (*sub_1A9188A1C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = ThinClientLibraryEpisodeStateDataSource.refreshControllerStates.modify();
  return sub_1A914C880;
}

uint64_t sub_1A9188A64@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  return ThinClientLibraryEpisodeStateDataSource.state(for:)(a1, a2 & 1, a3);
}

uint64_t ThinClientLibraryEpisodeStateDataSource<>.estimatedPlayState(for:)@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  return sub_1A918878C(a1, a2 & 1, a3);
}

uint64_t sub_1A9188AAC@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  return sub_1A918878C(a1, a2 & 1, a3);
}

_QWORD *sub_1A9188AD4(uint64_t a1)
{
  _QWORD *v1;

  v1[2] = 0;
  v1[3] = 0;
  v1[4] = a1;
  v1[5] = 0;
  swift_retain();
  ThinClientLibraryEpisodeStateDataSource.startObservingChanges()();
  return v1;
}

uint64_t sub_1A9188AF8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9188B1C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9188B40(uint64_t *a1)
{
  return sub_1A91886B4(a1);
}

uint64_t sub_1A9188B54()
{
  return 16;
}

__n128 sub_1A9188B60(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1A9188B6C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ThinClientLibraryEpisodeStateDataSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ThinClientLibraryEpisodeStateDataSource);
}

uint64_t method lookup function for ThinClientLibraryEpisodeStateDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ThinClientLibraryEpisodeStateDataSource.__allocating_init(thinClientEpisodeStateRepository:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1A9188BE4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9188C08(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9258);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A9188C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ThinClientEpisodeStateModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9188C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9188CD4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ThinClientEpisodeStateModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A9188D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ThinClientEpisodeStateModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9188D58()
{
  sub_1A918C6D4();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A9188D6C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR___MTPurchaseControllerWrapper_purchaseController);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  v3 = v1;
  sub_1A90C52A0(0, (uint64_t)sub_1A918C814, v2);
  return swift_release();
}

id PurchaseControllerWrapper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PurchaseControllerWrapper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1A9188E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1AF41420C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_1A90D08B4(0);

  }
}

void sub_1A9188E80(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *oslog;

  if (a2)
  {
    v5 = sub_1A917A6B8();
    v6 = (_QWORD *)((char *)a4 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a4) + 0xC0));
    swift_beginAccess();
    *v6 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED2A8908 != -1)
      swift_once();
    v7 = sub_1A93F7698();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED2A88E8);
    oslog = sub_1A93F7674();
    v8 = sub_1A93F87B4();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1A904E000, oslog, v8, "No music subscription information fetched. Not saving in memory.", v9, 2u);
      MEMORY[0x1AF41411C](v9, -1, -1);
    }

  }
}

uint64_t sub_1A9188FB4()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t inited;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, void *, uint64_t, uint64_t, void *);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  __int128 v37;
  __int128 v38;
  id v39;
  uint64_t (**v40)(uint64_t, void *, uint64_t, uint64_t, void *);
  id v41;
  id v42;
  uint64_t v43;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char v57[31];
  char v58;
  char v59;
  char v60;
  _BYTE v61[48];
  __int128 v62;
  uint64_t v63;

  v52 = (_QWORD *)sub_1A93F7698();
  v51 = *(v52 - 1);
  MEMORY[0x1E0C80A78](v52);
  v1 = (char *)&v48 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MediaRequest.Params();
  v53 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v55 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v48 - v8;
  *(_QWORD *)v61 = 1;
  memset(&v61[8], 0, 32);
  v61[40] = 4;
  v57[0] = 3;
  v60 = 1;
  v59 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_BYTE *)(inited + 32) = 3;
  *(_QWORD *)(inited + 40) = &unk_1E54D7780;
  v50 = sub_1A91129C4(inited);
  v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_1A9405950;
  *(_BYTE *)(v11 + 32) = 3;
  *(_QWORD *)(v11 + 40) = &unk_1E54D77A8;
  *(_BYTE *)(v11 + 48) = 0;
  *(_QWORD *)(v11 + 56) = &unk_1E54D77D0;
  v12 = sub_1A91129C4(v11);
  v58 = 1;
  v13 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  v14 = MEMORY[0x1E0DEE9D8];
  v15 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  v16 = sub_1A9112728(v14);
  sub_1A911273C(v14);
  v18 = v17;
  v19 = sub_1A9112858(v14);
  *((_QWORD *)&v47 + 1) = sub_1A911286C(v14);
  *(_QWORD *)&v47 = v19;
  *(_QWORD *)&v46 = v12;
  *((_QWORD *)&v46 + 1) = v14;
  *(_QWORD *)&v45 = v14;
  *((_QWORD *)&v45 + 1) = v50;
  v20 = (uint64_t)v9;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((__int128 *)v61, v57, &v60, &v59, v15, v16, v18, v14, (uint64_t)v9, v45, v46, v14, v14, &v58, 30, 0, v47, 0, 1,
    0,
    (uint64_t)v4,
    0,
    0,
    0,
    0,
    0,
    v14,
    0,
    0,
    2);
  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v21 = v52;
  v22 = __swift_project_value_buffer((uint64_t)v52, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  v23 = v51;
  (*(void (**)(char *, uint64_t, id))(v51 + 16))(v1, v22, v21);
  v24 = sub_1A93F7674();
  v25 = sub_1A93F87B4();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_1A904E000, v24, v25, "Getting state from MediaAPI for user's entitlements.", v26, 2u);
    MEMORY[0x1AF41411C](v26, -1, -1);
  }

  (*(void (**)(char *, id))(v23 + 8))(v1, v21);
  v52 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MediaRequestController()), sel_init);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v56;
  v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v29 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((_QWORD *)v29 + 2) = v28;
  *((_QWORD *)v29 + 3) = sub_1A918C944;
  *((_QWORD *)v29 + 4) = v27;
  sub_1A93F9330();
  v49 = v9;
  v30 = v55;
  sub_1A9114B88(v20, v55);
  v31 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  v32 = (v54 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject();
  sub_1A917695C(v30, v35 + v31);
  *(_QWORD *)(v35 + v32) = MEMORY[0x1E0DEE9D8];
  v36 = v35 + v33;
  *(_QWORD *)(v36 + 64) = v63;
  v37 = v62;
  *(_OWORD *)(v36 + 32) = *(_OWORD *)&v61[32];
  *(_OWORD *)(v36 + 48) = v37;
  v38 = *(_OWORD *)&v61[16];
  *(_OWORD *)v36 = *(_OWORD *)v61;
  *(_OWORD *)(v36 + 16) = v38;
  v39 = v52;
  *(_QWORD *)(v35 + v34) = v52;
  v40 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v40 = sub_1A9114B7C;
  v40[1] = v29;
  v41 = v56;
  swift_retain();
  swift_retain();
  v42 = v39;
  swift_retain();
  v43 = (uint64_t)v49;
  sub_1A9195C30((uint64_t)v49, 0, (uint64_t)sub_1A91161FC, v35);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1A9114C30(v43);
}

uint64_t sub_1A918955C(uint64_t a1, _QWORD *a2)
{
  id v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v4 = objc_msgSend(v3, sel_privateQueueContext);

  sub_1A9072534(0, (unint64_t *)&unk_1ED2A4250);
  v5 = sub_1A93F89DC();

  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    *a2 = v9;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v6 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (!v6)
    goto LABEL_13;
LABEL_3:
  v16 = MEMORY[0x1E0DEE9D8];
  result = sub_1A929E4E8(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v8 = 0;
    v9 = v16;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1AF4129DC](v8, v5);
      else
        v10 = *(id *)(v5 + 8 * v8 + 32);
      v11 = v10;
      objc_msgSend(v10, sel_lastPersonalizedRequestDate, v16);
      v13 = v12;

      v16 = v9;
      v15 = *(_QWORD *)(v9 + 16);
      v14 = *(_QWORD *)(v9 + 24);
      if (v15 >= v14 >> 1)
        sub_1A929E4E8(v14 > 1, v15 + 1, 1);
      ++v8;
      *(_QWORD *)(v9 + 16) = v15 + 1;
      *(_QWORD *)(v9 + 8 * v15 + 32) = v13;
    }
    while (v6 != v8);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9189754(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint8_t *v38;
  void (*v39)(char *, uint64_t);
  void *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  _QWORD *v47;
  NSObject *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  NSObject *v58;
  uint64_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint8_t *v67;
  char *v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  id v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;

  v74 = a4;
  v76 = a3;
  v78 = sub_1A93F7698();
  v6 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v77 = (char *)&v67 - v10;
  MEMORY[0x1E0C80A78](v11);
  v75 = (char *)&v67 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v67 - v14;
  v16 = sub_1A93F738C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v67 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v67 - v24;
  if (a1)
  {
    v26 = a1;
    sub_1A93F7380();
    v73 = v26;
    objc_msgSend(v26, sel_doubleValue);
    sub_1A93F7308();
    v77 = *(char **)(v17 + 8);
    ((void (*)(char *, uint64_t))v77)(v22, v16);
    if (qword_1ED2AC4B8 != -1)
      swift_once();
    v72 = (uint64_t *)(v76 + 16);
    v27 = v78;
    v28 = __swift_project_value_buffer(v78, (uint64_t)qword_1ED2A1E40);
    swift_beginAccess();
    v69 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v70 = v28;
    v69(v15, v28, v27);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v25, v16);
    v29 = sub_1A93F7674();
    v30 = v6;
    v31 = v27;
    v32 = sub_1A93F87B4();
    if (os_log_type_enabled(v29, v32))
    {
      v71 = v30;
      v33 = swift_slowAlloc();
      v68 = v25;
      v34 = (uint8_t *)v33;
      v35 = swift_slowAlloc();
      v81 = v35;
      *(_DWORD *)v34 = 136315138;
      v67 = v34 + 4;
      sub_1A9066CA8((unint64_t *)&qword_1ED2A5C58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v36 = sub_1A93F9060();
      v80 = sub_1A906436C(v36, v37, (uint64_t *)&v81);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v77)(v19, v16);
      _os_log_impl(&dword_1A904E000, v29, v32, "Updating channels if any were updated before %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v35, -1, -1);
      v38 = v34;
      v25 = v68;
      MEMORY[0x1AF41411C](v38, -1, -1);

      v39 = *(void (**)(char *, uint64_t))(v71 + 8);
    }
    else
    {
      ((void (*)(char *, uint64_t))v77)(v19, v16);

      v39 = *(void (**)(char *, uint64_t))(v30 + 8);
    }
    v39(v15, v31);
    v49 = v31;
    v50 = v72;
    v51 = swift_beginAccess();
    v52 = *v50;
    MEMORY[0x1E0C80A78](v51);
    *(&v67 - 2) = (uint8_t *)v25;
    swift_bridgeObjectRetain();
    v53 = *(_QWORD *)(sub_1A92BB4B0((uint64_t)sub_1A918CCCC, (uint64_t)(&v67 - 4), v52) + 16);
    swift_bridgeObjectRelease();
    if (v53)
    {
      v54 = v74 + 16;
      swift_beginAccess();
      v55 = MEMORY[0x1AF41420C](v54);
      if (v55)
      {
        v56 = (void *)v55;
        sub_1A9188FB4();

      }
      else
      {

      }
    }
    else
    {
      v69(v75, v70, v49);
      v57 = v76;
      swift_retain();
      v58 = sub_1A93F7674();
      v59 = sub_1A93F87B4();
      if (os_log_type_enabled(v58, (os_log_type_t)v59))
      {
        v78 = v16;
        v60 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v60 = 134217984;
        swift_beginAccess();
        v79 = *(_QWORD *)(*(_QWORD *)(v57 + 16) + 16);
        v16 = v78;
        sub_1A93F8AA8();
        swift_release();
        _os_log_impl(&dword_1A904E000, v58, (os_log_type_t)v59, "Defer MAPI update, all %ld channels were updated recently", v60, 0xCu);
        MEMORY[0x1AF41411C](v60, -1, -1);

      }
      else
      {

        swift_release();
      }
      v39(v75, v49);
    }
    return ((uint64_t (*)(char *, uint64_t))v77)(v25, v16);
  }
  else if (a2)
  {
    v40 = (void *)sub_1A93F711C();
    v41 = v78;
    if (qword_1ED2AC4B8 != -1)
      swift_once();
    v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED2A1E40);
    swift_beginAccess();
    v71 = v6;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v77, v42, v41);
    v43 = v40;
    v44 = sub_1A93F7674();
    v45 = sub_1A93F879C();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v46 = 138412290;
      v81 = v43;
      v48 = v43;
      sub_1A93F8AA8();
      *v47 = v43;

      _os_log_impl(&dword_1A904E000, v44, v45, "Error getting subs TTL from bag: %@", v46, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v47, -1, -1);
      MEMORY[0x1AF41411C](v46, -1, -1);
    }
    else
    {

      v44 = v43;
    }

    return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v77, v41);
  }
  else
  {
    v61 = v78;
    if (qword_1ED2AC4B8 != -1)
      swift_once();
    v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1ED2A1E40);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v62, v61);
    v63 = sub_1A93F7674();
    v64 = sub_1A93F879C();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v65 = 0;
      _os_log_impl(&dword_1A904E000, v63, v64, "Error getting subs TTL from bag", v65, 2u);
      MEMORY[0x1AF41411C](v65, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v61);
  }
}

uint64_t sub_1A9189F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, _QWORD *a6)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  _QWORD *v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v9 = sub_1A93F7D58();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v23 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A93F7DB8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(_QWORD *)((char *)a6 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a6) + 0x68));
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a5;
  v17[3] = a6;
  v17[4] = a1;
  aBlock[4] = sub_1A918CB70;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_47_0;
  v18 = _Block_copy(aBlock);
  v19 = a5;
  swift_bridgeObjectRetain();
  v20 = a6;
  sub_1A93F7D88();
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v10, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v16, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return swift_release();
}

uint64_t sub_1A918A194(void *a1, char *a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (**v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  os_unfair_lock_s **v26;
  os_unfair_lock_s *v27;
  os_unfair_lock_s *v28;
  os_unfair_lock_s *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  char *v34;
  uint8_t *v35;
  uint8_t *v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  uint64_t i;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  char *v80;
  uint64_t v81;
  uint64_t (**v82)(char *, uint64_t);
  uint64_t v83;
  char *v84;
  NSObject *v85;
  os_log_type_t v86;
  _BOOL4 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  unint64_t v99;
  int64_t v100;
  int64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  void *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (**v119)(char *, uint64_t);
  BOOL v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t *v126;
  unint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  unint64_t v135;
  unint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  char isUniquelyReferenced_nonNull_native;
  int64_t v144;
  unint64_t v145;
  uint64_t v146;
  _BOOL8 v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t j;
  uint64_t v161;
  int64_t v162;
  uint64_t v163;
  int64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  NSObject *v171;
  os_log_type_t v172;
  uint64_t v173;
  uint64_t (**v174)(char *, uint64_t);
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t (**v179)(char *, uint64_t);
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t KeyPath;
  char *v185;
  unint64_t v186;
  uint64_t v187;
  unsigned int v188;
  uint64_t v189;
  void *v190;
  void *v191;
  BOOL v192;
  uint64_t v193;
  uint64_t (*v194)(uint64_t, uint64_t);
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  void (*v199)(char *, uint64_t, uint64_t);
  void (*v200)(char *, uint64_t, uint64_t);
  uint64_t v201;
  char *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  int64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  char *v213;
  uint64_t (**v214)(char *, uint64_t);
  uint64_t v215[3];
  uint64_t v216;
  uint64_t v217[3];
  char v218;
  uint64_t v219;

  v204 = a2;
  v203 = sub_1A93F738C();
  v5 = *(_QWORD *)(v203 - 8);
  MEMORY[0x1E0C80A78](v203);
  v7 = (char *)&v193 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v202 = (char *)&v193 - v9;
  v10 = sub_1A93F7698();
  v11 = *(void (***)(char *, uint64_t, uint64_t))(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v193 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v193 - v15;
  MEMORY[0x1E0C80A78](v17);
  v214 = (uint64_t (**)(char *, uint64_t))((char *)&v193 - v18);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v193 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v193 - v23;
  if (a1)
  {
    v217[2] = (uint64_t)a1;
    v25 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    if ((swift_dynamicCast() & 1) == 0 || LOBYTE(v215[0]) != 1)
    {
      v39 = a1;
      if (qword_1ED2AC4B8 != -1)
        swift_once();
      v40 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A1E40);
      swift_beginAccess();
      v11[2](v24, v40, v10);
      v41 = a1;
      v42 = a1;
      v43 = sub_1A93F7674();
      v44 = sub_1A93F879C();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = swift_slowAlloc();
        v214 = (uint64_t (**)(char *, uint64_t))v11;
        v46 = (uint8_t *)v45;
        v47 = v10;
        v48 = swift_slowAlloc();
        v215[0] = v48;
        *(_DWORD *)v46 = 136315138;
        swift_getErrorValue();
        v49 = sub_1A93F927C();
        v217[0] = sub_1A906436C(v49, v50, v215);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1A904E000, v43, v44, "Getting channels failed with error %s", v46, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v48, -1, -1);
        MEMORY[0x1AF41411C](v46, -1, -1);

        return v214[1](v24, v47);
      }
      else
      {

        return ((uint64_t (*)(char *, uint64_t))v11[1])(v24, v10);
      }
    }
  }
  v211 = v7;
  v212 = v5;
  v197 = v13;
  v205 = v10;
  v26 = (os_unfair_lock_s **)&v204[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v204) + 0xA8)];
  swift_beginAccess();
  LOBYTE(v215[0]) = 0;
  v27 = *v26;
  v28 = *v26 + 4;
  v29 = v27 + 5;
  os_unfair_lock_lock(v27 + 5);
  sub_1A93A55D4(v28, v215);
  v210 = 0;
  os_unfair_lock_unlock(v29);
  swift_endAccess();
  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v30 = v205;
  v31 = __swift_project_value_buffer(v205, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  v199 = v11[2];
  v199(v21, v31, v30);
  v32 = sub_1A93F7674();
  v33 = sub_1A93F87B4();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = v16;
    v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v35 = 0;
    _os_log_impl(&dword_1A904E000, v32, v33, "Set receivedEntitlementsNotification to false", v35, 2u);
    v36 = v35;
    v16 = v34;
    MEMORY[0x1AF41411C](v36, -1, -1);
  }

  v200 = v11[1];
  ((void (*)(char *, uint64_t))v200)(v21, v205);
  if (a3 && (v37 = sub_1A9261430(a3)) != 0)
  {
    v38 = v37;
  }
  else
  {
    swift_bridgeObjectRelease();
    v38 = MEMORY[0x1E0DEE9D8];
  }
  v213 = v16;
  if (v38 >> 62)
  {
    swift_bridgeObjectRetain();
    v52 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v52 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v53 = MEMORY[0x1E0DEE9D8];
  if (v52)
  {
    v215[0] = MEMORY[0x1E0DEE9D8];
    if (v52 < 1)
    {
      __break(1u);
      goto LABEL_153;
    }
    if ((v38 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v52; ++i)
      {
        v55 = *(unsigned __int8 *)(*(_QWORD *)(MEMORY[0x1AF4129DC](i, v38)
                                             + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes)
                                 + 74);
        if (v55 == 2 || (v55 & 1) == 0)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1A93F8D60();
          sub_1A93F8D90();
          sub_1A93F8D9C();
          sub_1A93F8D6C();
        }
      }
    }
    else
    {
      v70 = 0;
      v71 = OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes;
      do
      {
        v72 = *(char **)(v38 + 8 * v70 + 32);
        if ((*(_BYTE *)(*(_QWORD *)&v72[v71] + 74) & 1) != 0)
        {
          v73 = v72;
          sub_1A93F8D60();
          sub_1A93F8D90();
          sub_1A93F8D9C();
          sub_1A93F8D6C();
          v71 = OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes;
        }
        ++v70;
      }
      while (v52 != v70);
    }
  }
  else
  {
    if (!a1)
    {
      swift_bridgeObjectRelease();
      v74 = (char *)v214;
      v75 = v31;
      v76 = v205;
      v199((char *)v214, v75, v205);
      v77 = sub_1A93F7674();
      v78 = sub_1A93F879C();
      if (os_log_type_enabled(v77, v78))
      {
        v79 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v79 = 0;
        _os_log_impl(&dword_1A904E000, v77, v78, "Failed to cast to channel objects", v79, 2u);
        MEMORY[0x1AF41411C](v79, -1, -1);
      }

      v80 = v74;
      v81 = v76;
      v82 = (uint64_t (**)(char *, uint64_t))&v219;
      return (*(v82 - 32))(v80, v81);
    }
    v215[0] = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v56 = v205;
  v57 = v31;
  v201 = v215[0];
  if (v215[0] < 0 || (v215[0] & 0x4000000000000000) != 0)
  {
    swift_retain();
    v58 = sub_1A93F8E5C();
    if (v58)
      goto LABEL_33;
LABEL_51:
    swift_release();
    v60 = MEMORY[0x1E0DEE9D8];
    v69 = &OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id;
    goto LABEL_52;
  }
  v58 = *(_QWORD *)(v215[0] + 16);
  swift_retain();
  if (!v58)
    goto LABEL_51;
LABEL_33:
  v215[0] = v53;
  sub_1A908182C(0, v58 & ~(v58 >> 63), 0);
  if (v58 < 0)
    goto LABEL_154;
  v59 = 0;
  v60 = v215[0];
  v61 = v201;
  do
  {
    if ((v61 & 0xC000000000000001) != 0)
      v62 = (char *)MEMORY[0x1AF4129DC](v59, v61);
    else
      v62 = (char *)*(id *)(v61 + 8 * v59 + 32);
    v63 = v62;
    v65 = *(_QWORD *)&v62[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
    v64 = *(_QWORD *)&v62[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8];
    swift_bridgeObjectRetain();

    v215[0] = v60;
    v67 = *(_QWORD *)(v60 + 16);
    v66 = *(_QWORD *)(v60 + 24);
    if (v67 >= v66 >> 1)
    {
      sub_1A908182C(v66 > 1, v67 + 1, 1);
      v60 = v215[0];
    }
    ++v59;
    *(_QWORD *)(v60 + 16) = v67 + 1;
    v68 = v60 + 16 * v67;
    *(_QWORD *)(v68 + 32) = v65;
    *(_QWORD *)(v68 + 40) = v64;
  }
  while (v58 != v59);
  swift_release();
  v56 = v205;
  v69 = &OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id;
  v57 = v31;
LABEL_52:
  v83 = sub_1A9159F94(v60);
  swift_bridgeObjectRelease();
  v84 = v213;
  v199(v213, v57, v56);
  swift_bridgeObjectRetain_n();
  v85 = sub_1A93F7674();
  v86 = sub_1A93F87B4();
  v87 = os_log_type_enabled(v85, v86);
  v195 = v57;
  v196 = v83;
  if (v87)
  {
    v88 = swift_slowAlloc();
    v89 = swift_slowAlloc();
    v215[0] = v89;
    *(_DWORD *)v88 = 141558275;
    v217[0] = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v88 + 12) = 2081;
    v217[0] = v83;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
    sub_1A9066D74(&qword_1ED2AC498, &qword_1ED2AC7A0, MEMORY[0x1E0DEB3D0]);
    sub_1A90828B0();
    v69 = &OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id;
    v90 = sub_1A93F8268();
    v217[0] = sub_1A906436C(v90, v91, v215);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v85, v86, "Got purchased channels %{private,mask.hash}s from MAPI", (uint8_t *)v88, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v89, -1, -1);
    MEMORY[0x1AF41411C](v88, -1, -1);

    v92 = v84;
    v93 = v205;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v92 = v84;
    v93 = v56;
  }
  ((void (*)(char *, uint64_t))v200)(v92, v93);
  v95 = (uint64_t)v211;
  v94 = v212;
  sub_1A93F7380();
  v96 = v202;
  sub_1A93F7308();
  v194 = *(uint64_t (**)(uint64_t, uint64_t))(v94 + 8);
  v97 = v194(v95, v203);
  MEMORY[0x1E0C80A78](v97);
  v98 = v204;
  *(&v193 - 2) = (uint64_t)v96;
  *(&v193 - 1) = (uint64_t)v98;
  v99 = v201;
  swift_retain();
  v100 = sub_1A92BB30C((uint64_t (*)(id *))sub_1A918CB7C, (uint64_t)(&v193 - 4), v99);
  v101 = (unint64_t)v100 >> 62;
  if ((unint64_t)v100 >> 62)
    goto LABEL_151;
  v102 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_57:
  v103 = MEMORY[0x1E0DEE9D8];
  v213 = (char *)v100;
  if (v102)
  {
    v215[0] = MEMORY[0x1E0DEE9D8];
    sub_1A908182C(0, v102 & ~(v102 >> 63), 0);
    if (v102 < 0)
      goto LABEL_155;
    v104 = 0;
    v103 = v215[0];
    v105 = v100 & 0xC000000000000001;
    do
    {
      if (v105)
        v106 = (char *)MEMORY[0x1AF4129DC](v104, v100);
      else
        v106 = (char *)*(id *)(v100 + 8 * v104 + 32);
      v107 = v106;
      v108 = &v106[*v69];
      v110 = *(_QWORD *)v108;
      v109 = *((_QWORD *)v108 + 1);
      swift_bridgeObjectRetain();

      v215[0] = v103;
      v112 = *(_QWORD *)(v103 + 16);
      v111 = *(_QWORD *)(v103 + 24);
      if (v112 >= v111 >> 1)
      {
        sub_1A908182C(v111 > 1, v112 + 1, 1);
        v103 = v215[0];
      }
      ++v104;
      *(_QWORD *)(v103 + 16) = v112 + 1;
      v113 = v103 + 16 * v112;
      *(_QWORD *)(v113 + 32) = v110;
      *(_QWORD *)(v113 + 40) = v109;
      v100 = (int64_t)v213;
    }
    while (v102 != v104);
  }
  v114 = sub_1A9159F94(v103);
  swift_bridgeObjectRelease();
  if (v101)
  {
    swift_bridgeObjectRetain_n();
    v115 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v115 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v198 = v114;
  if (v115)
  {
    v116 = 0;
    v101 = v100 & 0xC000000000000001;
    v117 = MEMORY[0x1E0DEE9E0];
    v206 = v100 + 32;
    v207 = v100 & 0xC000000000000001;
    v208 = v115;
    while (1)
    {
      if (v101)
      {
        v119 = (uint64_t (**)(char *, uint64_t))MEMORY[0x1AF4129DC](v116, v100);
        v120 = __OFADD__(v116++, 1);
        if (v120)
          goto LABEL_146;
      }
      else
      {
        v119 = (uint64_t (**)(char *, uint64_t))*(id *)(v206 + 8 * v116);
        v120 = __OFADD__(v116++, 1);
        if (v120)
        {
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          swift_bridgeObjectRetain();
          v102 = sub_1A93F8E5C();
          swift_bridgeObjectRelease();
          goto LABEL_57;
        }
      }
      v121 = (uint64_t *)((char *)v119 + *v69);
      v122 = *v121;
      v123 = v121[1];
      v124 = *(uint64_t *)((char *)v119 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_relationships);
      v214 = v119;
      if (v124 && (v125 = *(_QWORD *)(v124 + 16)) != 0)
      {
        v211 = (char *)v122;
        v126 = (unint64_t *)(v125 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
        swift_beginAccess();
        v127 = *v126;
        if (v127 >> 62)
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v128 = sub_1A93F8E5C();
        }
        else
        {
          v128 = *(_QWORD *)((v127 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v209 = v116;
        v210 = v117;
        v212 = v123;
        if (v128)
        {
          if (v128 < 1)
            goto LABEL_149;
          v100 = 0;
          v69 = (uint64_t *)(v127 + 32);
          v129 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          do
          {
            if ((v127 & 0xC000000000000001) != 0)
            {
              v130 = MEMORY[0x1AF4129DC](v100++, v127);
              v132 = *(_QWORD *)(v130 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id);
              v131 = *(_QWORD *)(v130 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id + 8);
              swift_bridgeObjectRetain();
              swift_unknownObjectRelease();
            }
            else
            {
              v133 = v69[v100++];
              v134 = (uint64_t *)(v133 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id);
              v132 = *v134;
              v131 = v134[1];
              swift_bridgeObjectRetain();
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v129 = sub_1A907ECFC(0, v129[2] + 1, 1, v129);
            v136 = v129[2];
            v135 = v129[3];
            v101 = v136 + 1;
            if (v136 >= v135 >> 1)
              v129 = sub_1A907ECFC((_QWORD *)(v135 > 1), v136 + 1, 1, v129);
            v129[2] = v101;
            v137 = &v129[2 * v136];
            v137[4] = v132;
            v137[5] = v131;
          }
          while (v100 != v128);
        }
        else
        {
          v129 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
        swift_bridgeObjectRelease_n();
        v142 = v210;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v217[0] = v142;
        v145 = sub_1A9094640((uint64_t)v211, v212);
        v146 = *(_QWORD *)(v142 + 16);
        v147 = (v144 & 1) == 0;
        v148 = v146 + v147;
        if (__OFADD__(v146, v147))
          goto LABEL_148;
        v100 = v144;
        if (*(_QWORD *)(v142 + 24) >= v148)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1A9308420();
        }
        else
        {
          sub_1A930019C(v148, isUniquelyReferenced_nonNull_native);
          v149 = sub_1A9094640((uint64_t)v211, v212);
          if ((v100 & 1) != (v150 & 1))
            goto LABEL_156;
          v145 = v149;
        }
        v69 = &OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id;
        v118 = v217[0];
        if ((v100 & 1) != 0)
        {
          v151 = *(_QWORD *)(v217[0] + 56);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v151 + 8 * v145) = v129;
        }
        else
        {
          *(_QWORD *)(v217[0] + 8 * (v145 >> 6) + 64) |= 1 << v145;
          v152 = (_QWORD *)(*(_QWORD *)(v118 + 48) + 16 * v145);
          v153 = v212;
          *v152 = v211;
          v152[1] = v153;
          *(_QWORD *)(*(_QWORD *)(v118 + 56) + 8 * v145) = v129;
          v154 = *(_QWORD *)(v118 + 16);
          v120 = __OFADD__(v154, 1);
          v155 = v154 + 1;
          if (v120)
            goto LABEL_150;
          *(_QWORD *)(v118 + 16) = v155;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v100 = (int64_t)v213;
        v115 = v208;
        v116 = v209;
        v101 = v207;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v138 = sub_1A9094640(v122, v123);
        if ((v139 & 1) != 0)
        {
          v140 = v138;
          v141 = swift_isUniquelyReferenced_nonNull_native();
          v217[0] = v117;
          v118 = v117;
          if ((v141 & 1) == 0)
          {
            sub_1A9308420();
            v118 = v217[0];
          }
          swift_bridgeObjectRelease();
          sub_1A9091124(v140, v118);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          v118 = v117;
        }
      }
      swift_bridgeObjectRelease();

      v117 = v118;
      if (v116 == v115)
        goto LABEL_112;
    }
  }
  v118 = MEMORY[0x1E0DEE9E0];
LABEL_112:
  swift_bridgeObjectRelease_n();
  v156 = v118 + 64;
  v157 = 1 << *(_BYTE *)(v118 + 32);
  v158 = -1;
  if (v157 < 64)
    v158 = ~(-1 << v157);
  v159 = v158 & *(_QWORD *)(v118 + 64);
  v100 = (unint64_t)(v157 + 63) >> 6;
  swift_bridgeObjectRetain();
  v101 = 0;
  for (j = MEMORY[0x1E0DEE9D8]; ; j = v217[0])
  {
    if (v159)
    {
      v159 &= v159 - 1;
      goto LABEL_116;
    }
    v162 = v101 + 1;
    if (__OFADD__(v101, 1))
      goto LABEL_147;
    if (v162 >= v100)
    {
LABEL_136:
      swift_release();
      swift_bridgeObjectRelease();
      v165 = sub_1A9159F94(j);
      swift_bridgeObjectRelease();
      v166 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v204) + 0x90);
      if ((v204[v166] & 1) == 0)
      {
        v167 = v204;
        *(_QWORD *)&v204[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v204) + 0x88)] = v196;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v167[v166] = 1;
      }
      v168 = v197;
      v169 = v205;
      v199(v197, v195, v205);
      v170 = v198;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v171 = sub_1A93F7674();
      v172 = sub_1A93F87B4();
      if (os_log_type_enabled(v171, v172))
      {
        v173 = swift_slowAlloc();
        v174 = (uint64_t (**)(char *, uint64_t))swift_slowAlloc();
        v214 = v174;
        *(_DWORD *)v173 = 141558787;
        v216 = 1752392040;
        v217[0] = (uint64_t)v174;
        sub_1A93F8AA8();
        *(_WORD *)(v173 + 12) = 2081;
        v216 = v170;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
        sub_1A9066D74(&qword_1ED2AC498, &qword_1ED2AC7A0, MEMORY[0x1E0DEB3D0]);
        sub_1A90828B0();
        v175 = sub_1A93F8268();
        v216 = sub_1A906436C(v175, v176, v217);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v173 + 22) = 2160;
        v216 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v173 + 32) = 2081;
        v216 = v165;
        v170 = v198;
        v177 = sub_1A93F8268();
        v216 = sub_1A906436C(v177, v178, v217);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v171, v172, "Got recently purchased channels %{private,mask.hash}s and purchased shows %{private,mask.hash}s from MAPI", (uint8_t *)v173, 0x2Au);
        v179 = v214;
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v179, -1, -1);
        MEMORY[0x1AF41411C](v173, -1, -1);

        v180 = v197;
        v181 = v205;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v180 = v168;
        v181 = v169;
      }
      ((void (*)(char *, uint64_t))v200)(v180, v181);
      v182 = sub_1A91EE3FC(v165, v170);
      MEMORY[0x1E0C80A78](v182);
      v183 = type metadata accessor for StorePurchaseTask();
      *(&v193 - 2) = v183;
      *(&v193 - 1) = (uint64_t)&protocol witness table for StorePurchaseTask;
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      *(&v193 - 2) = v183;
      *(&v193 - 1) = (uint64_t)&protocol witness table for StorePurchaseTask;
      swift_getKeyPath();
      v217[0] = v182;
      v185 = v204;
      sub_1A93F7AF4();
      v186 = v201;
      v187 = sub_1A90CFA08(v201);
      v188 = objc_msgSend((id)objc_opt_self(), sel_isRunningOnInternalOS);
      v189 = v196;
      if (v188)
      {
        v190 = *(void **)&v185[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v185) + 0xD0)];
        v191 = (void *)sub_1A93F8010();
        LODWORD(v190) = objc_msgSend(v190, sel_BOOLForKey_, v191);

        v192 = (_DWORD)v190 == 0;
        v186 = v201;
        if (!v192)
          v187 = v189;
      }
      swift_bridgeObjectRelease();
      sub_1A918BB6C(v187, v186);
      swift_bridgeObjectRelease();
      swift_release();
      v80 = v202;
      v81 = v203;
      v82 = (uint64_t (**)(char *, uint64_t))&v218;
      return (*(v82 - 32))(v80, v81);
    }
    v163 = *(_QWORD *)(v156 + 8 * v162);
    ++v101;
    if (!v163)
    {
      v101 = v162 + 1;
      if (v162 + 1 >= v100)
        goto LABEL_136;
      v163 = *(_QWORD *)(v156 + 8 * v101);
      if (!v163)
      {
        v101 = v162 + 2;
        if (v162 + 2 >= v100)
          goto LABEL_136;
        v163 = *(_QWORD *)(v156 + 8 * v101);
        if (!v163)
        {
          v101 = v162 + 3;
          if (v162 + 3 >= v100)
            goto LABEL_136;
          v163 = *(_QWORD *)(v156 + 8 * v101);
          if (!v163)
          {
            v101 = v162 + 4;
            if (v162 + 4 >= v100)
              goto LABEL_136;
            v163 = *(_QWORD *)(v156 + 8 * v101);
            if (!v163)
              break;
          }
        }
      }
    }
LABEL_135:
    v159 = (v163 - 1) & v163;
LABEL_116:
    v217[0] = j;
    swift_bridgeObjectRetain();
    v161 = swift_bridgeObjectRetain();
    sub_1A913669C(v161);
    swift_bridgeObjectRelease();
  }
  v164 = v162 + 5;
  if (v164 >= v100)
    goto LABEL_136;
  v163 = *(_QWORD *)(v156 + 8 * v164);
  if (v163)
  {
    v101 = v164;
    goto LABEL_135;
  }
  while (1)
  {
    v101 = v164 + 1;
    if (__OFADD__(v164, 1))
      break;
    if (v101 >= v100)
      goto LABEL_136;
    v163 = *(_QWORD *)(v156 + 8 * v101);
    ++v164;
    if (v163)
      goto LABEL_135;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A918B8A0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  int v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v30 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - v9;
  v11 = sub_1A93F738C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a1;
  if (!*(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 88))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v12 + 56))(v10, 1, 1, v11, v13);
LABEL_9:
    sub_1A93F72F0();
    sub_1A905FD54((uint64_t)v10, (uint64_t *)&unk_1ED2AD360);
    goto LABEL_11;
  }
  v29 = a3;
  if (qword_1ED2A93B0 != -1)
    swift_once();
  v16 = (void *)qword_1ED2A93A8;
  v17 = (void *)sub_1A93F8010();
  v18 = objc_msgSend(v16, sel_dateFromString_, v17);

  if (v18)
  {
    sub_1A93F7368();

    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v7, v19, 1, v11);
  sub_1A90A13C8((uint64_t)v7, (uint64_t)v10);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  a3 = v29;
  if (v20 == 1)
    goto LABEL_9;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
LABEL_11:
  v21 = sub_1A93F7320();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  if ((v21 & 1) != 0)
  {
    v22 = 1;
  }
  else if ((*((_BYTE *)a3 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a3) + 0x90)) & 1) != 0)
  {
    v23 = *(_QWORD *)((char *)a3 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a3) + 0x88));
    v25 = *(_QWORD *)(v28 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id);
    v24 = *(_QWORD *)(v28 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = sub_1A92EFAA4(v25, v24, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = v26 ^ 1;
  }
  else
  {
    v22 = 0;
  }
  return v22 & 1;
}

uint64_t sub_1A918BB6C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  NSObject *v30;
  os_log_type_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  unsigned int v43;
  char *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  void *v62;
  id v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t aBlock[6];

  v4 = sub_1A93F7D58();
  v75 = *(_QWORD *)(v4 - 8);
  v76 = v4;
  MEMORY[0x1E0C80A78](v4);
  v74 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v72 = *(_QWORD *)(v6 - 8);
  v73 = v6;
  MEMORY[0x1E0C80A78](v6);
  v71 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_1A93F7698();
  v78 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v79 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v68 - v10;
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1A93F8E5C();
    v81 = a1;
    if (v12)
      goto LABEL_3;
  }
  else
  {
    v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v81 = a1;
    if (v12)
    {
LABEL_3:
      if (v12 >= 1)
      {
        if ((a2 & 0xC000000000000001) != 0)
        {
          v13 = (char *)&loc_1A918BCFC
              + dword_1A918C5D4[*(unsigned __int8 *)(*(_QWORD *)(MEMORY[0x1AF4129DC](0, a2)
                                                               + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes)
                                                   + 176)];
          __asm { BR              X9 }
        }
        __asm { BR              X9 }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      JUMPOUT(0x1A918C5D4);
    }
  }
  swift_bridgeObjectRelease();
  v14 = aBlock[0];
  v80 = v11;
  if (aBlock[0] < 0 || (aBlock[0] & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1A93F8E5C();
    swift_release();
    if (v15)
      goto LABEL_11;
LABEL_21:
    swift_release();
    v17 = MEMORY[0x1E0DEE9D8];
    goto LABEL_22;
  }
  v15 = *(_QWORD *)(aBlock[0] + 16);
  if (!v15)
    goto LABEL_21;
LABEL_11:
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A908182C(0, v15 & ~(v15 >> 63), 0);
  if (v15 < 0)
    goto LABEL_36;
  v16 = 0;
  v17 = aBlock[0];
  do
  {
    if ((v14 & 0xC000000000000001) != 0)
      v18 = (char *)MEMORY[0x1AF4129DC](v16, v14);
    else
      v18 = (char *)*(id *)(v14 + 8 * v16 + 32);
    v19 = v18;
    v21 = *(_QWORD *)&v18[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
    v20 = *(_QWORD *)&v18[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8];
    swift_bridgeObjectRetain();

    aBlock[0] = v17;
    v23 = *(_QWORD *)(v17 + 16);
    v22 = *(_QWORD *)(v17 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_1A908182C(v22 > 1, v23 + 1, 1);
      v17 = aBlock[0];
    }
    ++v16;
    *(_QWORD *)(v17 + 16) = v23 + 1;
    v24 = v17 + 16 * v23;
    *(_QWORD *)(v24 + 32) = v21;
    *(_QWORD *)(v24 + 40) = v20;
  }
  while (v15 != v16);
  swift_release();
  v11 = v80;
  a1 = v81;
LABEL_22:
  v25 = sub_1A9159F94(v17);
  swift_bridgeObjectRelease();
  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v26 = v82;
  v27 = __swift_project_value_buffer(v82, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  v28 = v78;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
  v29(v11, v27, v26);
  swift_bridgeObjectRetain_n();
  v30 = sub_1A93F7674();
  v31 = sub_1A93F87B4();
  v32 = &unk_1A940B000;
  if (os_log_type_enabled(v30, v31))
  {
    v33 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v70 = v27;
    v69 = v34;
    *(_DWORD *)v33 = 141558275;
    v83 = 1752392040;
    aBlock[0] = v34;
    sub_1A93F8AA8();
    *(_WORD *)(v33 + 12) = 2081;
    swift_bridgeObjectRetain();
    v35 = v29;
    v36 = sub_1A93F8604();
    v38 = v37;
    swift_bridgeObjectRelease();
    v39 = v36;
    v29 = v35;
    v83 = sub_1A906436C(v39, v38, aBlock);
    v32 = (_QWORD *)&unk_1A940B000;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    a1 = v81;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v30, v31, "User's Entitlements IAP/1p Id's: %{private,mask.hash}s", (uint8_t *)v33, 0x16u);
    v40 = v69;
    swift_arrayDestroy();
    v27 = v70;
    MEMORY[0x1AF41411C](v40, -1, -1);
    MEMORY[0x1AF41411C](v33, -1, -1);

    v41 = *(char **)(v78 + 8);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v41 = *(char **)(v28 + 8);
  }
  v42 = v80;
  v80 = v41;
  ((void (*)(char *, uint64_t))v41)(v42, v26);
  v43 = objc_msgSend((id)objc_opt_self(), sel_isRunningOnInternalOS);
  v44 = v79;
  if (v43
    && (v45 = *(void **)((char *)v77 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v77) + 0xD0)),
        v46 = (void *)sub_1A93F8010(),
        LODWORD(v45) = objc_msgSend(v45, sel_BOOLForKey_, v46),
        v46,
        (_DWORD)v45))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    a1 = sub_1A92C2BB8(v25, a1);
    swift_bridgeObjectRelease();
  }
  v47 = v82;
  v29(v44, v27, v82);
  swift_bridgeObjectRetain_n();
  v48 = sub_1A93F7674();
  v49 = sub_1A93F87B4();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = swift_slowAlloc();
    v51 = swift_slowAlloc();
    *(_DWORD *)v50 = v32[69];
    v83 = 1752392040;
    aBlock[0] = v51;
    sub_1A93F8AA8();
    *(_WORD *)(v50 + 12) = 2081;
    swift_bridgeObjectRetain();
    v52 = a1;
    v53 = sub_1A93F8604();
    v55 = v54;
    swift_bridgeObjectRelease();
    v56 = v53;
    a1 = v52;
    v83 = sub_1A906436C(v56, v55, aBlock);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v48, v49, "Showing all newly subscribed 1p/IAP subscriptions in the confirmation sheet: %{private,mask.hash}s", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v51, -1, -1);
    MEMORY[0x1AF41411C](v50, -1, -1);

    v57 = v79;
    v58 = v82;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v57 = v44;
    v58 = v47;
  }
  ((void (*)(char *, uint64_t))v80)(v57, v58);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v59 = (void *)sub_1A93F8868();
  v60 = swift_allocObject();
  v61 = v77;
  *(_QWORD *)(v60 + 16) = v77;
  *(_QWORD *)(v60 + 24) = a1;
  aBlock[4] = (uint64_t)sub_1A918CBE8;
  aBlock[5] = v60;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A908A91C;
  aBlock[3] = (uint64_t)&block_descriptor_54;
  v62 = _Block_copy(aBlock);
  v63 = v61;
  swift_release();
  v64 = v71;
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  v65 = v74;
  v66 = v76;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v64, v65, v62);
  _Block_release(v62);

  (*(void (**)(char *, uint64_t))(v75 + 8))(v65, v66);
  return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v64, v73);
}

uint64_t sub_1A918C5F4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;

  v3 = (uint64_t)a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x78);
  swift_beginAccess();
  sub_1A918CBF0(v3, (uint64_t)v10);
  if (!v11)
    return sub_1A905FD54((uint64_t)v10, &qword_1ED2A8620);
  sub_1A905DC3C((uint64_t)v10, (uint64_t)v7);
  sub_1A905FD54((uint64_t)v10, &qword_1ED2A8620);
  v4 = v8;
  v5 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(a2, v4, v5);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t sub_1A918C6D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + OBJC_IVAR___MTPurchaseControllerWrapper_purchaseController)
                 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0
                                                                   + OBJC_IVAR___MTPurchaseControllerWrapper_purchaseController))
                             + 0xC0));
  swift_beginAccess();
  v2 = *v1;
  if (!v2)
  {
    if (qword_1ED2A8848 != -1)
      swift_once();
    v3 = sub_1A93F7698();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED2A8830);
    v4 = sub_1A93F7674();
    v5 = sub_1A93F87B4();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1A904E000, v4, v5, "No Music Subscription Information in memory.", v6, 2u);
      MEMORY[0x1AF41411C](v6, -1, -1);
    }

  }
  return v2;
}

uint64_t sub_1A918C7F0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A918C814(uint64_t *a1)
{
  uint64_t v1;

  sub_1A9188E80(*a1, a1[1], a1[2], *(_QWORD **)(v1 + 16));
}

uint64_t method lookup function for PurchaseControllerWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PurchaseControllerWrapper.musicSubscriptionInformation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of PurchaseControllerWrapper.forceFetchLatestChannelUpdates()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of PurchaseControllerWrapper.fetchChannelUpdatesCheckingEntitlementsNotification()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of PurchaseControllerWrapper.syncMusicSubscriptionInformation()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

void sub_1A918C8A4(uint64_t a1)
{
  uint64_t v1;

  sub_1A9188E2C(a1, v1);
}

uint64_t sub_1A918C8AC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A918C8D0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A918C8F4()
{
  uint64_t v0;

  return sub_1A918955C(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_1A918C900()
{
  return swift_deallocObject();
}

uint64_t sub_1A918C910()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A918C93C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A9189754(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1A918C944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;

  return sub_1A9189F70(a1, a2, a3, a4, a5, *(_QWORD **)(v5 + 16));
}

uint64_t sub_1A918C94C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A918C970()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A918C99C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for MediaRequest.Params();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  sub_1A9114BD0(*(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + v3 + 16), *(_QWORD *)(v0 + v3 + 24), *(_QWORD *)(v0 + v3 + 32), *(_BYTE *)(v0 + v3 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 96);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + ((((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A918CB3C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A918CB70()
{
  uint64_t v0;

  return sub_1A918A194(*(void **)(v0 + 16), *(char **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1A918CB7C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A918B8A0(*a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24)) & 1;
}

uint64_t sub_1A918CBA4()
{
  return 16;
}

__n128 sub_1A918CBB0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1A918CBBC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A918CBE8()
{
  uint64_t v0;

  return sub_1A918C5F4(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1A918CBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A918CC38()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A918CC74()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A918CC98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A918CCBC()
{
  uint64_t v0;

  return sub_1A9256964(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1A918CCC4()
{
  uint64_t v0;

  sub_1A92571E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

BOOL sub_1A918CCCC(double *a1)
{
  return sub_1A92BF5D8(a1);
}

void __swiftcall ServerPodcast.toFeed()(IMPodcastFeed *__return_ptr retstr)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  int v21;
  _BOOL8 v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  Swift::String v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  _QWORD *v44;
  id v45;
  unint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v55;

  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone((Class)IMPodcastFeed), sel_init);
  v7 = v6;
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v8)
  {
    objc_msgSend(v6, sel_setFeedDescription_, 0);
    goto LABEL_12;
  }
  v9 = *(_QWORD *)(v8 + 104);
  if (!v9)
  {
    v10 = 0;
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (*(_QWORD *)(v9 + 24))
  {
    swift_bridgeObjectRetain();
LABEL_8:
    v10 = (void *)sub_1A93F8010();
    goto LABEL_9;
  }
  v11 = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v11)
    goto LABEL_8;
  v10 = 0;
LABEL_10:
  objc_msgSend(v7, sel_setFeedDescription_, v10);

  if (*(_QWORD *)(v8 + 24))
  {
    swift_bridgeObjectRetain();
    v12 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_12:
  v12 = 0;
LABEL_13:
  objc_msgSend(v7, sel_setAuthor_, v12);

  if (!v8)
  {
    objc_msgSend(v7, sel_setCategory_, 0);
    goto LABEL_25;
  }
  v13 = *(_QWORD *)(v8 + 208);
  if (v13 && *(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    v14 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  objc_msgSend(v7, sel_setCategory_, v14);

  v15 = *(_QWORD *)(v8 + 112);
  if (!v15)
    goto LABEL_25;
  if (!*(_QWORD *)(v15 + 56) || (*(_BYTE *)(v15 + 24) & 1) != 0 || (*(_BYTE *)(v15 + 40) & 1) != 0)
  {
    v16 = sub_1A93F726C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
LABEL_23:
    sub_1A905FD54((uint64_t)v5, &qword_1ED2AD3D0);
LABEL_25:
    v17 = 0;
    goto LABEL_26;
  }
  v49 = *(_QWORD *)(v15 + 16);
  v50 = *(_QWORD *)(v15 + 32);
  type metadata accessor for ArtworkFormatter();
  swift_retain();
  static ArtworkFormatter.formatArtworkUrl(string:for:cropCode:fileExtension:)(0, (uint64_t)v5, (double)v49, (double)v50);
  swift_release();
  v51 = sub_1A93F726C();
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v5, 1, v51) == 1)
    goto LABEL_23;
  sub_1A93F7170();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v5, v51);
  v17 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
LABEL_26:
  objc_msgSend(v7, sel_setImageURL_, v17);

  if (v8)
  {
    if (*(_QWORD *)(v8 + 24))
    {
      swift_bridgeObjectRetain();
      v18 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = 0;
    }
    objc_msgSend(v7, sel_setProvider_, v18);

    if (*(_QWORD *)(v8 + 96))
    {
      swift_bridgeObjectRetain();
      v19 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
  }
  else
  {
    objc_msgSend(v7, sel_setProvider_, 0);
  }
  v19 = 0;
LABEL_34:
  objc_msgSend(v7, sel_setTitle_, v19);

  if (v8)
  {
    if (!*(_QWORD *)(v8 + 184)
      || (swift_bridgeObjectRetain(), v20 = sub_1A93F8ED4(), swift_bridgeObjectRelease(), v20 != 1))
    {
      LOBYTE(v20) = sub_1A93F90C0();
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setIsExplicit_, v20 & 1);
    v21 = *(unsigned __int8 *)(v8 + 48);
    v23 = (v21 & 1) == 0 && v21 != 2;
    objc_msgSend(v7, sel_setIsNotSubscribable_, v23);
    if (*(_QWORD *)(v8 + 40))
    {
      swift_bridgeObjectRetain();
      v24 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = 0;
    }
    objc_msgSend(v7, sel_setShareURL_, v24);

    if (*(_QWORD *)(v8 + 144))
    {
      swift_bridgeObjectRetain();
      v25 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
  }
  else
  {
    objc_msgSend(v7, sel_setIsExplicit_, 0);
    objc_msgSend(v7, sel_setIsNotSubscribable_, 0);
    objc_msgSend(v7, sel_setShareURL_, 0);
  }
  v25 = 0;
LABEL_51:
  objc_msgSend(v7, sel_setShowType_, v25);

  if (v8)
  {
    if (*(_QWORD *)(v8 + 200))
    {
      swift_bridgeObjectRetain();
      v26 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = 0;
    }
    objc_msgSend(v7, sel_setWebpageURL_, v26);

    v27 = *(_QWORD *)(v8 + 152);
    if (v27)
    {
      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        if (*(_QWORD *)(v28 + 56))
        {
          swift_bridgeObjectRetain();
          v29 = (void *)sub_1A93F8010();
          swift_bridgeObjectRelease();
          goto LABEL_61;
        }
      }
    }
  }
  else
  {
    objc_msgSend(v7, sel_setWebpageURL_, 0);
  }
  v29 = 0;
LABEL_61:
  objc_msgSend(v7, sel_setUberBackgroundImageURL_, v29);

  if (v8)
  {
    v30 = *(_QWORD *)(v8 + 152);
    if (v30 && (v31 = *(_QWORD *)(v30 + 16)) != 0 && *(_QWORD *)(v31 + 72))
    {
      swift_bridgeObjectRetain();
      v32 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = 0;
    }
    objc_msgSend(v7, sel_setUberBackgroundJoeColor_, v32);

    v33 = *(_QWORD *)(v8 + 56);
    v34 = *(void **)(v8 + 64);
    swift_bridgeObjectRetain();
    v35._countAndFlagsBits = v33;
    v35._object = v34;
    PodcastAttributes.DisplayType.init(rawValue:)(v35);
    __asm { BR              X10 }
  }
  objc_msgSend(v7, sel_setUberBackgroundJoeColor_, 0);
  objc_msgSend(v7, sel_setDisplayType_, 0);

  v36 = (void *)sub_1A93F8010();
  objc_msgSend(v7, sel_setPodcastStoreId_, v36);

  objc_msgSend(v7, sel_setArtworkPrimaryColor_, 0);
  objc_msgSend(v7, sel_setResolvedFeedURL_, 0);

  v37 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships);
  if (!v37 || (v38 = *(_QWORD *)(v37 + 16)) == 0)
  {
    v43 = 0;
    v40 = 0;
    goto LABEL_77;
  }
  v39 = *(_QWORD *)(v38 + 16);
  if (v39 >> 62)
  {
    swift_bridgeObjectRetain();
    v40 = (id)sub_1A93F8E5C();
    if (v40)
      goto LABEL_72;
LABEL_87:
    swift_bridgeObjectRelease();
    v43 = 0;
    goto LABEL_77;
  }
  v40 = *(id *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v40)
    goto LABEL_87;
LABEL_72:
  if ((v39 & 0xC000000000000001) != 0)
  {
    v41 = (id)MEMORY[0x1AF4129DC](0, v39);
  }
  else
  {
    if (!*(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      __break(1u);
      JUMPOUT(0x1A918D970);
    }
    v41 = *(id *)(v39 + 32);
  }
  v42 = v41;
  swift_bridgeObjectRelease();
  v40 = v42;
  v43 = sub_1A918D980();

LABEL_77:
  objc_msgSend(v7, sel_setChannelItem_, v43, v53);

  objc_msgSend(v7, sel_setShowSpecificUpsellCopy_, 0);
  v44 = (_QWORD *)(v2 + OBJC_IVAR___MTServerPodcast_episodes);
  swift_beginAccess();
  if (*v44)
  {
    v45 = v40;
    v46 = swift_bridgeObjectRetain();
    sub_1A918EB08(v46);
    swift_bridgeObjectRelease();

    sub_1A9072534(0, &qword_1ED2A41B0);
    v47 = (void *)sub_1A93F82F8();
    swift_bridgeObjectRelease();
    objc_msgSend(v47, sel_mutableCopy);

    sub_1A93F8B44();
    swift_unknownObjectRelease();
    sub_1A9072534(0, &qword_1ED2A4188);
    if (swift_dynamicCast())
      v48 = v55;
    else
      v48 = 0;
    objc_msgSend(v7, sel_setItems_, v48);

  }
}

id sub_1A918D980()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  unint64_t v26;

  v1 = objc_msgSend(objc_allocWithZone((Class)IMPodcastFeedChannelItem), sel_init);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setName_, v3);

  if (*(_BYTE *)(v2 + 56))
    v4 = 0;
  else
    v4 = *(_QWORD *)(v2 + 48);
  objc_msgSend(v1, sel_setShowCount_, v4);
  if (*(_BYTE *)(v2 + 72))
    v5 = 0;
  else
    v5 = *(_QWORD *)(v2 + 64);
  objc_msgSend(v1, sel_setAvailableShowCount_, v5);
  v6 = (void *)sub_1A93F8010();
  objc_msgSend(v1, sel_setStoreId_, v6);

  v7 = *(_QWORD *)(v2 + 24);
  if (v7 && *(_QWORD *)(v7 + 56))
  {
    swift_bridgeObjectRetain();
    v8 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v1, sel_setArtworkURL_, v8);

  v9 = *(_QWORD *)(v2 + 128);
  if (v9 && *(_QWORD *)(v9 + 56))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v10 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    v10 = 0;
  }
  objc_msgSend(v1, sel_setLogoImageURL_, v10);

  if (!v9)
  {
    LODWORD(v11) = 0;
    objc_msgSend(v1, sel_setLogoImageHeight_, v11);
LABEL_21:
    v13 = 0;
    goto LABEL_22;
  }
  LODWORD(v11) = 0;
  if ((*(_BYTE *)(v9 + 40) & 1) == 0)
    *(float *)&v11 = (float)*(uint64_t *)(v9 + 32);
  objc_msgSend(v1, sel_setLogoImageHeight_, v11);
  if (*(_BYTE *)(v9 + 24) == 1)
    goto LABEL_21;
  v13 = *(_QWORD *)(v9 + 16);
LABEL_22:
  *(float *)&v12 = (float)v13;
  objc_msgSend(v1, sel_setLogoImageWidth_, v12);
  v14 = *(_QWORD *)(v2 + 112);
  if (v14 && (v15 = *(_QWORD *)(v14 + 32)) != 0 && *(_QWORD *)(v15 + 56))
  {
    swift_bridgeObjectRetain();
    v16 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v1, sel_setUberBackgroundImageURL_, v16);

  v17 = *(_QWORD *)(v2 + 112);
  if (v17 && (v18 = *(_QWORD *)(v17 + 32)) != 0 && *(_QWORD *)(v18 + 72))
  {
    swift_bridgeObjectRetain();
    v19 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  objc_msgSend(v1, sel_setUberBackgroundJoeColor_, v19);

  if (*(_QWORD *)(v2 + 144))
  {
    swift_bridgeObjectRetain();
    v20 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  objc_msgSend(v1, sel_setBackgroundColor_, v20);

  if (*(_QWORD *)(v2 + 168))
  {
    swift_bridgeObjectRetain();
    v21 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = 0;
  }
  objc_msgSend(v1, sel_setUrl_, v21);

  if (*(unsigned __int8 *)(v2 + 73) - 1 < 2)
  {
    if (*(_QWORD *)(v2 + 152))
      v22 = *(_QWORD *)(v2 + 152);
    else
      v22 = MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(v2 + 120))
      v23 = *(_QWORD *)(v2 + 120);
    else
      v23 = MEMORY[0x1E0DEE9D8];
    v26 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A9136690(v23);
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1A93F8E5C();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  v24 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setDisplayType_, v24);

  swift_release();
  return v1;
}

void sub_1A918DE08(uint64_t *a1)
{
  uint64_t v1;
  id v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String v7;

  v1 = *a1;
  v2 = objc_msgSend(objc_allocWithZone((Class)IMPodcastOffer), sel_init);
  swift_bridgeObjectRetain();
  v3 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v3 > 1)
  {
    v4 = 0;
  }
  else
  {
    v4 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v2, sel_setKind_, v4);

  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(void **)(v1 + 24);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v5;
  v7._object = v6;
  PriceType.init(rawValue:)(v7);
  __asm { BR              X10 }
}

void sub_1A918DF1C()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v2 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setPriceType_, v2);

  *v0 = v1;
}

id sub_1A918DFC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  Swift::String v39;
  void *v40;
  void *v41;
  void *v42;
  Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  double v47;
  double v48;
  char v49;
  void *v50;
  void *v51;
  Swift::tuple_ttmlToken_String_optional_snippet_String_optional_source_PodcastsFoundation_TranscriptSource_optional *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  double v64;
  char v65;
  char v66;
  char v67;
  void *v68;
  double v69;
  void *v70;
  Swift::tuple_ttmlToken_String_optional_snippet_String_optional_source_PodcastsFoundation_TranscriptSource_optional *v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  void *v76;
  void *v77;
  void *v78;
  _QWORD v80[2];
  char v81;
  char v82;
  char v83[3];
  unsigned __int8 v84;
  _BYTE v85[2];
  unsigned __int8 v86;
  char v87;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v80 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v80 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v80 - v12;
  v14 = objc_msgSend(objc_allocWithZone((Class)IMPodcastFeedItem), sel_init);
  v15 = *(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  if (*(_QWORD *)(v15 + 24))
  {
    swift_bridgeObjectRetain();
    v16 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v14, sel_setAuthor_, v16);

  v17 = *(_QWORD *)(v15 + 248);
  if (v17 && *(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    v18 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v14, sel_setCategory_, v18);

  if (!*(_QWORD *)(v15 + 224)
    || (swift_bridgeObjectRetain(), v19 = sub_1A93F8ED4(), swift_bridgeObjectRelease(), v19 != 1))
  {
    LOBYTE(v19) = sub_1A93F90C0();
  }
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setIsExplicit_, v19 & 1);
  if (*(_QWORD *)(v15 + 328))
  {
    swift_bridgeObjectRetain();
    v20 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  objc_msgSend(v14, sel_setGuid_, v20);

  if (*(_QWORD *)(v15 + 184))
    goto LABEL_15;
  v22 = *(_QWORD *)(v15 + 112);
  if (v22 && *(_QWORD *)(v22 + 24))
  {
    swift_bridgeObjectRetain();
LABEL_15:
    swift_bridgeObjectRetain();
    v21 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v21 = 0;
LABEL_20:
  objc_msgSend(v14, sel_setItemDescription_, v21);

  v23 = *(_QWORD *)(v15 + 112);
  v80[1] = v1;
  if (v23)
  {
    if (*(_QWORD *)(v23 + 24))
    {
LABEL_24:
      swift_bridgeObjectRetain();
      v24 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    if (*(_QWORD *)(v23 + 40))
    {
      swift_bridgeObjectRetain();
      goto LABEL_24;
    }
  }
  v24 = 0;
LABEL_26:
  objc_msgSend(v14, sel_setItemSummary_, v24);

  PodcastEpisodeAttributes.releaseDateResolved.getter((uint64_t)v13);
  v25 = sub_1A93F738C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = 0;
  if (v27(v13, 1, v25) != 1)
  {
    v28 = (void *)sub_1A93F7314();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v25);
  }
  objc_msgSend(v14, sel_setPubDate_, v28);

  v29 = *(void **)(v15 + 208);
  if (v29)
  {
    v82 = 1;
    swift_retain();
    PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v82, v7);
    if (v27(v7, 1, v25) == 1)
    {
      v81 = 0;
      PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v81, v10);
      sub_1A905FD54((uint64_t)v7, (uint64_t *)&unk_1ED2AD360);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v10, v7, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v25);
    }
    swift_release();
    if (v27(v10, 1, v25) == 1)
    {
      v29 = 0;
    }
    else
    {
      v29 = (void *)sub_1A93F7314();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v25);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v10, 1, 1, v25);
  }
  objc_msgSend(v14, sel_setFirstTimeAvailableAsFree_, v29);

  v30 = *(void **)(v15 + 208);
  if (v30)
  {
    v83[0] = 2;
    swift_retain();
    PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(v83, v4);
    swift_release();
    if (v27(v4, 1, v25) == 1)
    {
      v30 = 0;
    }
    else
    {
      v30 = (void *)sub_1A93F7314();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v25);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v4, 1, 1, v25);
  }
  objc_msgSend(v14, sel_setFirstTimeAvailableAsPaid_, v30);

  if (*(_QWORD *)(v15 + 88))
  {
    swift_bridgeObjectRetain();
    v31 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = 0;
  }
  objc_msgSend(v14, sel_setTitle_, v31);

  if (*(_QWORD *)(v15 + 104))
  {
    swift_bridgeObjectRetain();
    v32 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v32 = 0;
  }
  objc_msgSend(v14, sel_setItunesTitle_, v32);

  PodcastEpisodeAttributes.uti.getter();
  if (v33)
  {
    v34 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v34 = 0;
  }
  objc_msgSend(v14, sel_setUti_, v34);

  if (*(_BYTE *)(v15 + 360))
    v35 = 0;
  else
    v35 = *(_QWORD *)(v15 + 352);
  objc_msgSend(v14, sel_setSeasonNumber_, v35);
  if (*(_BYTE *)(v15 + 344))
    v36 = 0;
  else
    v36 = *(_QWORD *)(v15 + 336);
  objc_msgSend(v14, sel_setEpisodeNumber_, v36);
  v37 = *(void **)(v15 + 168);
  if (v37)
  {
    v38 = *(_QWORD *)(v15 + 160);
    swift_bridgeObjectRetain();
    v39._countAndFlagsBits = v38;
    v39._object = v37;
    PodcastEpisodeAttributes.EpisodeType.init(rawValue:)(v39);
    __asm { BR              X10 }
  }
  v40 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setEpisodeType_, v40);

  if (*(_QWORD *)(v15 + 240))
  {
    swift_bridgeObjectRetain();
    v41 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v41 = 0;
  }
  objc_msgSend(v14, sel_setWebpageURL_, v41);

  v42 = (void *)sub_1A93F8010();
  objc_msgSend(v14, sel_setEpisodeStoreId_, v42);

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(v43, (Swift::Bool)&v87);
  v45 = v44;
  v46 = v87;
  v48 = v47 / 1000.0;
  if ((v49 & 1) != 0)
    v48 = 0.0;
  objc_msgSend(v14, sel_setDuration_, v48);
  v50 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setPriceType_, v50);

  if (v45)
  {
    v51 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v51 = 0;
  }
  objc_msgSend(v14, sel_setEnclosureURL_, v51);

  v85[1] = v46;
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v52, (PodcastsFoundation::PriceType)&v86);
  v54 = v53;
  v55 = v86;
  if (v56)
  {
    v57 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v57 = 0;
  }
  objc_msgSend(v14, sel_setFreeTranscriptIdentifier_, v57);

  if (v54)
  {
    v58 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v58 = 0;
  }
  objc_msgSend(v14, sel_setFreeTranscriptSnippet_, v58);

  if (v55 == 2)
  {
    v59 = 0;
  }
  else
  {
    v59 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v14, sel_setFreeTranscriptProvider_, v59);

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(v60, (Swift::Bool)v85);
  v62 = v61;
  v64 = v63;
  v66 = v65;
  v67 = v85[0];
  v68 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setEntitledPriceType_, v68);

  v69 = v64 / 1000.0;
  if ((v66 & 1) != 0)
    v69 = 0.0;
  objc_msgSend(v14, sel_setEntitledDuration_, v69);
  if (v62)
  {
    v70 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v70 = 0;
  }
  objc_msgSend(v14, sel_setEntitledEnclosureURL_, v70);

  v83[2] = v67;
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v71, (PodcastsFoundation::PriceType)&v84);
  v73 = v72;
  v74 = v84;
  if (v75)
  {
    v76 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v76 = 0;
  }
  objc_msgSend(v14, sel_setEntitledTranscriptIdentifier_, v76);

  if (v73)
  {
    v77 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v77 = 0;
  }
  objc_msgSend(v14, sel_setEntitledTranscriptSnippet_, v77);

  if (v74 == 2)
  {
    v78 = 0;
  }
  else
  {
    v78 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v14, sel_setEntitledTranscriptProvider_, v78);

  return v14;
}

uint64_t sub_1A918EB08(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;

  if (a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v2)
      break;
    v7 = MEMORY[0x1E0DEE9D8];
    result = sub_1A93F8D84();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1AF4129DC](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      sub_1A918DFC0();

      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
      if (v2 == v4)
        return v7;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v2 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A918EC38()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);

  return swift_deallocObject();
}

id MTPodcast.syncType.getter()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend(v0, sel_displayType);
  if (result)
  {
    v2 = result;
    v3 = MTDisplayTypeFromPersistentString(result);

    return (id)(v3 == 1);
  }
  return result;
}

void static ArtworkCrop.boundingBox.getter(_WORD *a1@<X8>)
{
  *a1 = 256;
}

uint64_t ArtworkCrop.cropCodeString.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A918ED54
                                                            + 4 * asc_1A940B390[*v0]))(25186, 0xE200000000000000);
}

uint64_t sub_1A918ED54()
{
  return 29299;
}

uint64_t sub_1A918ED5C()
{
  return 29555;
}

uint64_t sub_1A918ED64()
{
  return 28006;
}

uint64_t sub_1A918ED6C()
{
  return 28262;
}

uint64_t sub_1A918ED74()
{
  return 28518;
}

uint64_t sub_1A918ED7C()
{
  return 24934;
}

uint64_t sub_1A918ED84()
{
  return 30309;
}

uint64_t sub_1A918ED8C()
{
  return 30053;
}

uint64_t sub_1A918ED94()
{
  return 29797;
}

uint64_t sub_1A918ED9C()
{
  return 0x4D7370552E545053;
}

void static ArtworkCrop.sr.getter(_WORD *a1@<X8>)
{
  *a1 = 1;
}

void ArtworkCrop.cropCode.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t ArtworkCrop.preferredContentMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

char *static ArtworkCrop.from(_:)@<X0>(char *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v3;

  v2 = *result;
  v3 = byte_1A940B56E[v2];
  *a2 = v2;
  a2[1] = v3;
  return result;
}

uint64_t sub_1A918EE20()
{
  _BYTE *v0;

  if (*v0)
    return 0x4D746E65746E6F63;
  else
    return 0x65646F43706F7263;
}

uint64_t sub_1A918EE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A918F740(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A918EE88()
{
  sub_1A918F364();
  return sub_1A93F945C();
}

uint64_t sub_1A918EEB0()
{
  sub_1A918F364();
  return sub_1A93F9468();
}

uint64_t ArtworkCrop.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v10;
  char v11;
  _BYTE v13[40];
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9268);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1A905DC3C((uint64_t)a1, (uint64_t)v13);
  sub_1A918F2DC();
  sub_1A918F320();
  sub_1A93F82BC();
  if (v2)
  {

    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1A918F364();
    sub_1A93F93C0();
    v14 = 0;
    sub_1A93F8F7C();
    v10 = v13[0];
    v14 = 1;
    sub_1A918F3A8();
    sub_1A93F8F7C();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v13[0];
  }
  else
  {
    static ArtworkCrop.from(_:)(&v14, v13);
    v10 = v13[0];
    v11 = v13[1];
  }
  *a2 = v10;
  a2[1] = v11;
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t ArtworkCrop.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9290);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10[1] = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A918F364();
  sub_1A93F93D8();
  v13 = v8;
  v12 = 0;
  sub_1A918F3EC();
  sub_1A93F9030();
  if (!v2)
  {
    v11 = 1;
    sub_1A93F9024();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A918F1F8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ArtworkCrop.init(from:)(a1, a2);
}

uint64_t sub_1A918F20C(_QWORD *a1)
{
  return ArtworkCrop.encode(to:)(a1);
}

BOOL _s18PodcastsFoundation11ArtworkCropV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  _BOOL8 result;

  v2 = *(unsigned __int8 *)(a1 + 1);
  v3 = *(unsigned __int8 *)(a2 + 1);
  v4 = CropCode.rawValue.getter();
  v6 = v5;
  if (v4 == CropCode.rawValue.getter() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    return v2 == v3;
  }
  v9 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v9 & 1) != 0)
    return v2 == v3;
  return result;
}

unint64_t sub_1A918F2DC()
{
  unint64_t result;

  result = qword_1EEAB9270;
  if (!qword_1EEAB9270)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for CropCode, &type metadata for CropCode);
    atomic_store(result, (unint64_t *)&qword_1EEAB9270);
  }
  return result;
}

unint64_t sub_1A918F320()
{
  unint64_t result;

  result = qword_1EEAB9278;
  if (!qword_1EEAB9278)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for CropCode, &type metadata for CropCode);
    atomic_store(result, (unint64_t *)&qword_1EEAB9278);
  }
  return result;
}

unint64_t sub_1A918F364()
{
  unint64_t result;

  result = qword_1EEAB9280;
  if (!qword_1EEAB9280)
  {
    result = MEMORY[0x1AF414014](&unk_1A940B51C, &type metadata for ArtworkCrop.CK);
    atomic_store(result, (unint64_t *)&qword_1EEAB9280);
  }
  return result;
}

unint64_t sub_1A918F3A8()
{
  unint64_t result;

  result = qword_1EEAB9288;
  if (!qword_1EEAB9288)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ContentMode, &type metadata for ContentMode);
    atomic_store(result, (unint64_t *)&qword_1EEAB9288);
  }
  return result;
}

unint64_t sub_1A918F3EC()
{
  unint64_t result;

  result = qword_1EEAB9298;
  if (!qword_1EEAB9298)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for CropCode, &type metadata for CropCode);
    atomic_store(result, (unint64_t *)&qword_1EEAB9298);
  }
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ArtworkCrop(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 65292 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65292 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65292;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65292;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65292;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkCrop(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65292 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65292 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1A918F51C + 4 * byte_1A940B3A2[v4]))();
  *a1 = a2 - 244;
  return ((uint64_t (*)(void))((char *)sub_1A918F550 + 4 * byte_1A940B39D[v4]))();
}

uint64_t sub_1A918F550(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A918F558(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1A918F560);
  return result;
}

uint64_t sub_1A918F56C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1A918F574);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1A918F578(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A918F580(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkCrop()
{
  return &type metadata for ArtworkCrop;
}

uint64_t storeEnumTagSinglePayload for ArtworkCrop.CK(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A918F5E8 + 4 * byte_1A940B3AC[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A918F61C + 4 * byte_1A940B3A7[v4]))();
}

uint64_t sub_1A918F61C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A918F624(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A918F62CLL);
  return result;
}

uint64_t sub_1A918F638(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A918F640);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A918F644(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A918F64C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkCrop.CK()
{
  return &type metadata for ArtworkCrop.CK;
}

unint64_t sub_1A918F66C()
{
  unint64_t result;

  result = qword_1EEAB92A0;
  if (!qword_1EEAB92A0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940B4F4, &type metadata for ArtworkCrop.CK);
    atomic_store(result, (unint64_t *)&qword_1EEAB92A0);
  }
  return result;
}

unint64_t sub_1A918F6B4()
{
  unint64_t result;

  result = qword_1EEAB92A8;
  if (!qword_1EEAB92A8)
  {
    result = MEMORY[0x1AF414014](&unk_1A940B464, &type metadata for ArtworkCrop.CK);
    atomic_store(result, (unint64_t *)&qword_1EEAB92A8);
  }
  return result;
}

unint64_t sub_1A918F6FC()
{
  unint64_t result;

  result = qword_1EEAB92B0;
  if (!qword_1EEAB92B0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940B48C, &type metadata for ArtworkCrop.CK);
    atomic_store(result, (unint64_t *)&qword_1EEAB92B0);
  }
  return result;
}

uint64_t sub_1A918F740(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65646F43706F7263 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4D746E65746E6F63 && a2 == 0xEB0000000065646FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t MetricsTargetType.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t MetricsTargetType.debugDescription.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD00000000000001DLL;
}

unint64_t sub_1A918F918()
{
  return MetricsTargetType.debugDescription.getter();
}

uint64_t MetricsTargetType.description.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t MetricsTargetType.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_1A93F90CC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsTargetType.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F912C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsTargetType.banner.getter()
{
  return 0x72656E6E6162;
}

uint64_t static MetricsTargetType.brick.getter()
{
  return 0x6B63697262;
}

uint64_t static MetricsTargetType.bubbleTip.getter()
{
  return 0x6954656C62627562;
}

uint64_t static MetricsTargetType.button.getter()
{
  return 0x6E6F74747562;
}

uint64_t static MetricsTargetType.categoryBrick.getter()
{
  return 0x79726F6765746163;
}

uint64_t static MetricsTargetType.chapter.getter()
{
  return 0x72657470616863;
}

uint64_t static MetricsTargetType.description.getter()
{
  return 0x7470697263736564;
}

uint64_t static MetricsTargetType.episodeSwoosh.getter()
{
  return 0x5365646F73697065;
}

unint64_t static MetricsTargetType.episodeSwooshItem.getter()
{
  return 0xD000000000000011;
}

uint64_t static MetricsTargetType.filter.getter()
{
  return 0x7265746C6966;
}

uint64_t static MetricsTargetType.hero.getter()
{
  return 1869768040;
}

uint64_t static MetricsTargetType.hintListItem.getter()
{
  return 0x7473694C746E6968;
}

uint64_t static MetricsTargetType.key.getter()
{
  return 7955819;
}

uint64_t static MetricsTargetType.link.getter()
{
  return 1802398060;
}

uint64_t static MetricsTargetType.listItem.getter()
{
  return 0x6D6574497473696CLL;
}

uint64_t static MetricsTargetType.lockup.getter()
{
  return 0x70756B636F6CLL;
}

uint64_t static MetricsTargetType.powerSwoosh.getter()
{
  return 0x6F77537265776F70;
}

uint64_t static MetricsTargetType.powerSwooshItem.getter()
{
  return 0x6F77537265776F70;
}

uint64_t static MetricsTargetType.promoCard.getter()
{
  return 0x7261436F6D6F7270;
}

uint64_t static MetricsTargetType.ratings.getter()
{
  return 0x73676E69746172;
}

uint64_t static MetricsTargetType.swoosh.getter()
{
  return 0x68736F6F7773;
}

uint64_t static MetricsTargetType.tab.getter()
{
  return 6447476;
}

uint64_t static MetricsTargetType.tapToRate.getter()
{
  return 0x7461526F54706174;
}

uint64_t static MetricsTargetType.transcriptText.getter()
{
  return 0x697263736E617274;
}

unint64_t sub_1A918FD0C()
{
  unint64_t result;

  result = qword_1EEAB92B8;
  if (!qword_1EEAB92B8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsTargetType, &type metadata for MetricsTargetType);
    atomic_store(result, (unint64_t *)&qword_1EEAB92B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsTargetType()
{
  return &type metadata for MetricsTargetType;
}

uint64_t sub_1A918FD60(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t AutoDownloadProcessorDataSource.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id AutoDownloadProcessorDataSource.context.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

uint64_t AutoDownloadProcessorDataSource.accountController.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1A918FDC4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 48) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A918FE20()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A918FE54(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A918FE98())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1A918FED4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 56) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A918FF30()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A918FF64(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A918FFA8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t AutoDownloadProcessorDataSource.__allocating_init(context:accountDataSource:workQueue:capacityMonitor:)(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  AutoDownloadProcessorDataSource.init(context:accountDataSource:workQueue:capacityMonitor:)(a1, a2, a3, a4);
  return v8;
}

uint64_t AutoDownloadProcessorDataSource.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(v0 + 96) & 1) == 0)
  {
    v1 = *(_QWORD *)(v0 + 88);
    v2 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR___MTDeviceCapacityMonitor__capacityChangeObservers);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
    sub_1A93EFD50((_QWORD *)(v2 + 16), v1);
    os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
    swift_release();
  }
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t AutoDownloadProcessorDataSource.__deallocating_deinit()
{
  AutoDownloadProcessorDataSource.deinit();
  return swift_deallocClassInstance();
}

id sub_1A9190124()
{
  return objc_msgSend((id)objc_opt_self(), sel_predicateForPodcastsToAutodownload);
}

uint64_t sub_1A9190150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;

  v3 = v2;
  v27 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A8F30);
  v30 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8BF8);
  v31 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)(v2 + 32);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a1;
  v14[4] = a2;
  v14[5] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9210);
  swift_allocObject();
  v15 = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  v16 = sub_1A93F7A94();
  v17 = *(void **)(v2 + 64);
  v32 = v17;
  v33 = v16;
  v18 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 1, 1, v18);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74((unint64_t *)&unk_1ED2A9200, &qword_1ED2A9210, MEMORY[0x1E0C96108]);
  sub_1A905FD90();
  v19 = v17;
  sub_1A93F7C80();
  sub_1A90C0C1C((uint64_t)v8);

  swift_release();
  v20 = (_QWORD *)swift_allocObject();
  v21 = v27;
  v20[2] = v3;
  v20[3] = v21;
  v20[4] = a2;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  sub_1A9066D74(&qword_1ED2A8F28, (uint64_t *)&unk_1ED2A8F30, MEMORY[0x1E0C95CB8]);
  swift_bridgeObjectRetain();
  swift_retain();
  v22 = v28;
  sub_1A93F7B84();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v22);
  sub_1A9066D74(&qword_1ED2A8BF0, &qword_1ED2A8BF8, MEMORY[0x1E0C95950]);
  v23 = v29;
  v24 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v23);
  return v24;
}

void sub_1A9190474(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  void *v13;
  id v14;
  _QWORD v15[6];

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a1;
  v12[6] = a2;
  v12[7] = a6;
  v15[4] = sub_1A9191368;
  v15[5] = v12;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1A908A91C;
  v15[3] = &block_descriptor_13;
  v13 = _Block_copy(v15);
  v14 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performBlock_, v13);
  _Block_release(v13);
}

void sub_1A9190568(void *a1, void *a2, uint64_t a3, void (*a4)(void **), uint64_t a5, uint64_t a6)
{
  void *v11;
  id v12;
  __int16 v13;
  void *v14;
  _QWORD *v15;
  unsigned int v16;
  id v17;
  unsigned __int16 v18;
  id v19;
  int v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[11];
  char v25;

  v11 = (void *)sub_1A93F8010();
  v12 = objc_msgSend(a1, sel_podcastForUuid_, v11);

  if (v12)
  {
    if ((os_feature_enabled_serial_sort_auto_downloads() & 1) != 0)
    {
      if (objc_msgSend(v12, sel_currentEpisodeLimitIsNextNEpisodes))
        v13 = 256;
      else
        v13 = 0;
    }
    else
    {
      v13 = 0;
    }
    v16 = objc_msgSend(v12, sel_currentEpisodeLimitAllowsAutomaticDownloads);
    v17 = objc_msgSend(v12, sel_episodeLimitResolvedValue);
    v18 = (unsigned __int16)objc_msgSend(v12, sel_deletePlayedEpisodesResolvedValue);
    v19 = objc_msgSend(*(id *)(a6 + 40), sel_activeDsid);
    if (v19)
    {

      v20 = 0;
    }
    else
    {
      v20 = 0x10000;
    }
    v21 = a2;
    v22 = a3;
    v23 = v16;
    *(_QWORD *)v24 = v17;
    v24[10] = BYTE2(v20);
    *(_WORD *)&v24[8] = v13 | v18 | v20;
    v25 = 0;
    swift_bridgeObjectRetain();
    a4(&v21);
    swift_bridgeObjectRelease();

  }
  else
  {
    sub_1A9191378();
    v14 = (void *)swift_allocError();
    *v15 = a2;
    v15[1] = a3;
    v21 = v14;
    v22 = 0;
    v23 = 0;
    memset(v24, 0, sizeof(v24));
    v25 = 1;
    swift_bridgeObjectRetain();
    a4(&v21);

  }
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.init(showUUID:autoDownloadEnabled:episodeLimit:deletePlayedEpisodes:serialNextEpisodesSort:includePlayableWithoutAccount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_BYTE *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 32) = a5;
  *(_BYTE *)(a8 + 33) = a6;
  *(_BYTE *)(a8 + 34) = a7;
  return result;
}

void sub_1A919073C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint8_t *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30[2];
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;

  if (*(_BYTE *)(a1 + 16) == 1 && !*(_QWORD *)(a2 + 80))
  {
    v14 = *(_QWORD *)(a1 + 8);
    v15 = *(_QWORD *)(a1 + 24);
    v16 = *(unsigned __int8 *)(a1 + 32);
    v17 = *(unsigned __int8 *)(a1 + 33);
    v18 = *(unsigned __int8 *)(a1 + 34);
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v19 = sub_1A93F7698();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED2A3F08);
    swift_bridgeObjectRetain_n();
    v20 = sub_1A93F7674();
    v21 = sub_1A93F8784();
    if (os_log_type_enabled(v20, v21))
    {
      v29 = v18;
      v22 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v36 = v28;
      *(_DWORD *)v22 = 136446210;
      v30[1] = v14;
      v31 = 1;
      v32 = v15;
      v33 = v16;
      v34 = v17;
      v35 = v29;
      v23 = AutoDownloadProcessorDataSource.AutoDownloadContext.description.getter();
      v30[0] = sub_1A906436C(v23, v24, &v36);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v20, v21, "Creating autodownload predicate with context: %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      v17 = v17;
      MEMORY[0x1AF41411C](v28, -1, -1);
      v25 = v22;
      v18 = v29;
      MEMORY[0x1AF41411C](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v26 = (void *)objc_opt_self();
    v27 = (void *)sub_1A93F8010();
    v13 = objc_msgSend(v26, sel_predicateForAutomaticDownloadsOnShow_deletePlayedEpisodes_episodeLimit_serialNextEpisodesSort_includePlayableWithoutAccount_, v27, v16, v15, v17, v18);

  }
  else
  {
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v8 = sub_1A93F7698();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A3F08);
    swift_bridgeObjectRetain_n();
    v9 = sub_1A93F7674();
    v10 = sub_1A93F87B4();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v30[0] = v12;
      *(_DWORD *)v11 = 136315138;
      swift_bridgeObjectRetain();
      v36 = sub_1A906436C(a3, a4, v30);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A904E000, v9, v10, "AutoDownloads unavailable for show %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v12, -1, -1);
      MEMORY[0x1AF41411C](v11, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v13 = objc_msgSend((id)objc_opt_self(), sel_falsePredicate);
  }
  *a5 = v13;
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.showUUID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.autoDownloadEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.episodeLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.deletePlayedEpisodes.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.serialNextEpisodesSort.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.includePlayableWithoutAccount.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 34);
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.description.getter()
{
  sub_1A93F8C70();
  sub_1A93F810C();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  type metadata accessor for MTPodcastEpisodeLimit(0);
  sub_1A93F8DE4();
  sub_1A93F810C();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  return 0;
}

void AutoDownloadProcessorDataSource.AutoDownloadContext.init(show:accountController:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  unsigned int v12;
  id v13;
  unsigned __int16 v14;
  id v15;
  int v16;

  v6 = objc_msgSend(a1, sel_uuid);
  if (v6)
  {
    v7 = v6;
    v8 = sub_1A93F8040();
    v10 = v9;

    if ((os_feature_enabled_serial_sort_auto_downloads() & 1) != 0)
    {
      if (objc_msgSend(a1, sel_currentEpisodeLimitIsNextNEpisodes))
        v11 = 256;
      else
        v11 = 0;
    }
    else
    {
      v11 = 0;
    }
    v12 = objc_msgSend(a1, sel_currentEpisodeLimitAllowsAutomaticDownloads);
    v13 = objc_msgSend(a1, sel_episodeLimitResolvedValue);
    v14 = (unsigned __int16)objc_msgSend(a1, sel_deletePlayedEpisodesResolvedValue);
    v15 = objc_msgSend(a2, sel_activeDsid);
    swift_unknownObjectRelease();

    if (v15)
    {

      v16 = 0;
    }
    else
    {
      v16 = 0x10000;
    }
    *(_QWORD *)a3 = v8;
    *(_QWORD *)(a3 + 8) = v10;
    *(_QWORD *)(a3 + 16) = v12;
    *(_QWORD *)(a3 + 24) = v13;
    *(_BYTE *)(a3 + 34) = BYTE2(v16);
    *(_WORD *)(a3 + 32) = v11 | v14 | v16;
  }
  else
  {

    swift_unknownObjectRelease();
    *(_DWORD *)(a3 + 31) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
}

id AutoDownloadProcessorDataSource.AutoDownloadContext.predicate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(unsigned __int8 *)(v0 + 32);
  v3 = *(unsigned __int8 *)(v0 + 33);
  v4 = *(unsigned __int8 *)(v0 + 34);
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1A93F8010();
  v7 = objc_msgSend(v5, sel_predicateForAutomaticDownloadsOnShow_deletePlayedEpisodes_episodeLimit_serialNextEpisodesSort_includePlayableWithoutAccount_, v6, v2, v1, v3, v4);

  return v7;
}

uint64_t sub_1A9190F98(uint64_t a1, uint64_t a2)
{
  return sub_1A9190150(a1, a2);
}

uint64_t sub_1A9190FB8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9190FE4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A90C490C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A9190FEC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1A9191020(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A9190474(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1A919102C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A9191058(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1A919073C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1A9191064@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A91910B0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for AutoDownloadProcessorDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.observedShowKeys.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.observedShowKeys.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.observedShowKeys.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.observedEpisodeKeys.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.observedEpisodeKeys.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.observedEpisodeKeys.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.__allocating_init(context:accountDataSource:workQueue:capacityMonitor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.showsPredicate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.predicate(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t initializeWithCopy for AutoDownloadProcessorDataSource.AutoDownloadContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AutoDownloadProcessorDataSource.AutoDownloadContext(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  return a1;
}

uint64_t assignWithTake for AutoDownloadProcessorDataSource.AutoDownloadContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoDownloadProcessorDataSource.AutoDownloadContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 35))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutoDownloadProcessorDataSource.AutoDownloadContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 35) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 35) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadProcessorDataSource.AutoDownloadContext()
{
  return &type metadata for AutoDownloadProcessorDataSource.AutoDownloadContext;
}

uint64_t sub_1A919132C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A9191368()
{
  uint64_t v0;

  sub_1A9190568(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(void **))(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

unint64_t sub_1A9191378()
{
  unint64_t result;

  result = qword_1EEAB92C8;
  if (!qword_1EEAB92C8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for QueryError, &type metadata for QueryError);
    atomic_store(result, (unint64_t *)&qword_1EEAB92C8);
  }
  return result;
}

uint64_t sub_1A91913BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t MetricsActionResult.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t MetricsActionResult.debugDescription.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD00000000000001FLL;
}

unint64_t sub_1A91914B0()
{
  return MetricsActionResult.debugDescription.getter();
}

uint64_t MetricsActionResult.description.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t MetricsActionResult.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_1A93F90CC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsActionResult.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F912C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsActionResult.app.getter()
{
  return 7368801;
}

uint64_t static MetricsActionResult.appStore.getter()
{
  return 0x65726F7453707061;
}

uint64_t static MetricsActionResult.upsell.getter()
{
  return 0x6C6C65737075;
}

unint64_t sub_1A9191680()
{
  unint64_t result;

  result = qword_1EEAB92D0;
  if (!qword_1EEAB92D0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsActionResult, &type metadata for MetricsActionResult);
    atomic_store(result, (unint64_t *)&qword_1EEAB92D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsActionResult()
{
  return &type metadata for MetricsActionResult;
}

uint64_t static EpisodePlayState.initialState.getter()
{
  type metadata accessor for EpisodePlayState();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static EpisodePlayState.defaultState.getter()
{
  type metadata accessor for EpisodePlayState();
  return swift_storeEnumTagMultiPayload();
}

void EpisodePlayState.dictionaryKey.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1E0C80A78](v1);
  sub_1A90891E4(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1A91917C8 + 4 * byte_1A940BA20[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A91917C8()
{
  return 0x676E69646E6570;
}

BOOL EpisodePlayState.isEpisodePlaying.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _BOOL8 v8;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - v6;
  sub_1A90891E4(v1, (uint64_t)&v10 - v6);
  v8 = 0;
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_1A90891E4((uint64_t)v7, (uint64_t)v4);
    if (v4[16] != 1)
      v8 = 1;
  }
  sub_1A9089264((uint64_t)v7);
  return v8;
}

BOOL EpisodePlayState.isPending.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  uint64_t v6;

  v1 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90891E4(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
    sub_1A9089264((uint64_t)v3);
  return EnumCaseMultiPayload == 0;
}

BOOL EpisodePlayState.isEpisodePlayed.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  uint64_t v6;

  v1 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90891E4(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
    sub_1A905FD54((uint64_t)v3, (uint64_t *)&unk_1ED2AD360);
  else
    sub_1A9089264((uint64_t)v3);
  return EnumCaseMultiPayload == 2;
}

BOOL EpisodePlayState.isEpisodePaused.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _BOOL8 v8;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - v6;
  sub_1A90891E4(v1, (uint64_t)&v10 - v6);
  v8 = 0;
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_1A90891E4((uint64_t)v7, (uint64_t)v4);
    if ((v4[16] & 1) != 0)
      v8 = 1;
  }
  sub_1A9089264((uint64_t)v7);
  return v8;
}

BOOL EpisodePlayState.isPartial.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  uint64_t v6;

  v1 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90891E4(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 1)
    sub_1A9089264((uint64_t)v3);
  return EnumCaseMultiPayload == 1;
}

void EpisodePlayState.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = sub_1A93F738C();
  MEMORY[0x1E0C80A78](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1E0C80A78](v4);
  sub_1A90891E4(v0, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)sub_1A9191CC0 + 4 * byte_1A940BA26[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A9191CC0()
{
  sub_1A93F92E8();
  sub_1A93F930C();
  return sub_1A93F930C();
}

uint64_t EpisodePlayState.hashValue.getter()
{
  sub_1A93F92DC();
  EpisodePlayState.hash(into:)();
  return sub_1A93F9324();
}

void sub_1A9191EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  MEMORY[0x1E0C80A78](v0);
  sub_1A90891E4(v2, (uint64_t)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1A9191F34 + 4 * byte_1A940BA2C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A9191F34()
{
  return 0x676E69646E6570;
}

uint64_t sub_1A9191FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A9062170(a1, a2, &qword_1ED2ACF98);
}

uint64_t static EpisodePlayState.state(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A9062170(a1, a2, &qword_1ED2ACF98);
}

uint64_t sub_1A9192000()
{
  sub_1A93F92DC();
  EpisodePlayState.hash(into:)();
  return sub_1A93F9324();
}

uint64_t sub_1A9192040()
{
  sub_1A93F92DC();
  EpisodePlayState.hash(into:)();
  return sub_1A93F9324();
}

uint64_t sub_1A9192078()
{
  return sub_1A9066CA8(&qword_1ED2A2230, (uint64_t (*)(uint64_t))type metadata accessor for EpisodePlayState, (uint64_t)&protocol conformance descriptor for EpisodePlayState);
}

uint64_t *initializeBufferWithCopyOfBuffer for EpisodePlayState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = sub_1A93F738C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
    *((_BYTE *)a1 + *(int *)(v11 + 48)) = *((_BYTE *)a2 + *(int *)(v11 + 48));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for EpisodePlayState(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v3 = sub_1A93F738C();
    v4 = *(_QWORD *)(v3 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for EpisodePlayState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_1A93F738C();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
    *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for EpisodePlayState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1A9089264((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_1A93F738C();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
      *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *initializeWithTake for EpisodePlayState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_1A93F738C();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
    *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for EpisodePlayState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1A9089264((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_1A93F738C();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
      *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t JustAssetProcessingStep.asset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t JustAssetProcessingStep.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t JustAssetProcessingStep.init(asset:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a5, a1, AssociatedTypeWitness);
  v12 = a5 + *(int *)(type metadata accessor for JustAssetProcessingStep(0, a3, a4, v11) + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v12, a2, a3);
}

uint64_t type metadata accessor for JustAssetProcessingStep(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JustAssetProcessingStep);
}

uint64_t JustAssetProcessingStep.publisher.getter()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v4 = (char *)&v11 - v3;
  v5 = sub_1A93F7A4C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))(v4, v0, AssociatedTypeWitness, v7);
  sub_1A93F7A58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
  sub_1A93F7A34();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1A9192894(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_1A919289C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1A91928D8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1A9192978(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (*(_BYTE *)(v7 + 80) | *(_BYTE *)(v8 + 80));
  if (v11 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || (v10 & (unint64_t)~v9) + *(_QWORD *)(v8 + 64) > 0x18)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v11 + 16) & ~v11));
    swift_retain();
  }
  else
  {
    v15 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v15, ((unint64_t)a2 + v10) & v15, v5);
  }
  return a1;
}

uint64_t sub_1A9192A60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))((*(_QWORD *)(v5 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80), v3);
}

uint64_t sub_1A9192ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_1A9192B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_1A9192BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_1A9192C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_1A9192D1C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = *(_QWORD *)(v7 + 64) + v12;
  if (a2 <= v11)
    goto LABEL_23;
  v14 = (v13 & ~v12) + *(_QWORD *)(v9 + 64);
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))(a1, *(unsigned int *)(v7 + 84), AssociatedTypeWitness);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))((v13 + a1) & ~v12, v10, v5);
      }
      return 0;
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_23;
LABEL_14:
  v18 = (v16 - 1) << v15;
  if (v14 > 3)
    v18 = 0;
  if ((_DWORD)v14)
  {
    if (v14 <= 3)
      v19 = (v13 & ~(_DWORD)v12) + *(_DWORD *)(v9 + 64);
    else
      v19 = 4;
    __asm { BR              X12 }
  }
  return v11 + v18 + 1;
}

void sub_1A9192EBC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(unsigned __int8 *)(v9 + 80);
  v12 = ((*(_QWORD *)(v8 + 64) + v11) & ~v11) + *(_QWORD *)(v9 + 64);
  if (a3 <= v10)
  {
    v13 = 0u;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v10 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v10 < a2)
  {
    v14 = ~v10 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, ((*(_QWORD *)(v8 + 64) + v11) & ~v11) + *(_QWORD *)(v9 + 64));
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

void sub_1A91930E0()
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  sub_1A93F9384();
  JUMPOUT(0x1AF414014);
}

uint64_t AssetRemovalProcessorDelegate.episodeAndShowStorage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A905DC3C(v1, a1);
}

uint64_t AssetRemovalProcessorDelegate.library.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A905DC3C(v1 + 40, a1);
}

uint64_t AssetRemovalProcessorDelegate.managedAssetDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AssetRemovalProcessorDelegate() + 24);
  v4 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id AssetRemovalProcessorDelegate.workQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for AssetRemovalProcessorDelegate() + 28));
}

uint64_t AssetRemovalProcessorDelegate.didMatch(episodes:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  id v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  id v104;

  v76 = sub_1A93F726C();
  v74 = *(_QWORD *)(v76 - 8);
  v79 = *(_QWORD *)(v74 + 64);
  MEMORY[0x1E0C80A78](v76);
  v72 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9398);
  v66 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB93A0);
  v75 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB93A8);
  v82 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB93B0);
  v84 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v69 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB93B8);
  v88 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v70 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB93C0);
  v16 = *(_QWORD *)(v15 - 8);
  v90 = v15;
  v91 = v16;
  MEMORY[0x1E0C80A78](v15);
  v73 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB93C8);
  v19 = *(_QWORD *)(v18 - 8);
  v94 = v18;
  v95 = v19;
  MEMORY[0x1E0C80A78](v18);
  v81 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB93D0);
  v22 = *(_QWORD *)(v21 - 8);
  v97 = v21;
  v98 = v22;
  MEMORY[0x1E0C80A78](v21);
  v92 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB93D8);
  v101 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v93 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB93E0);
  v102 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v96 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v1 + 5;
  v26 = v1[8];
  v27 = v1[9];
  __swift_project_boxed_opaque_existential_1(v1 + 5, v26);
  *(_QWORD *)&v103 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 8))(a1, v26, v27);
  v28 = type metadata accessor for AssetRemovalProcessorDelegate();
  v89 = *(int *)(v28 + 28);
  v104 = *(id *)((char *)v1 + v89);
  v29 = v104;
  v87 = sub_1A93F882C();
  v86 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56);
  v86(v6, 1, 1, v87);
  v30 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB93E8);
  v77 = sub_1A9066C6C();
  sub_1A9066D74(&qword_1EEAB93F0, &qword_1EEAB93E8, MEMORY[0x1E0C95D90]);
  v78 = sub_1A905FD90();
  v68 = v6;
  sub_1A93F7C80();
  sub_1A90C0C1C((uint64_t)v6);

  swift_release();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB93F8);
  sub_1A9066D74(&qword_1EEAB9400, &qword_1EEAB9398, MEMORY[0x1E0C95CB8]);
  sub_1A9066D74(&qword_1EEAB9408, &qword_1EEAB93F8, MEMORY[0x1E0C95C10]);
  v31 = v65;
  sub_1A93F7C50();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v8, v31);
  v32 = (char *)v1 + *(int *)(v28 + 24);
  v33 = v1;
  v34 = v74;
  v35 = v72;
  v36 = v76;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v72, v32, v76);
  v37 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v38 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v38 + v37, v35, v36);
  sub_1A9066D74(&qword_1EEAB9410, &qword_1EEAB93A0, MEMORY[0x1E0C95B78]);
  v39 = v71;
  sub_1A93F7C08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v10, v39);
  swift_getKeyPath();
  v40 = MEMORY[0x1E0C95AD0];
  sub_1A9066D74(&qword_1EEAB9418, &qword_1EEAB93A8, MEMORY[0x1E0C95AD0]);
  v41 = v69;
  v42 = v80;
  sub_1A93F7B78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v12, v42);
  sub_1A9066D74(&qword_1EEAB9420, &qword_1EEAB93B0, MEMORY[0x1E0C95748]);
  v43 = v70;
  v44 = v83;
  sub_1A93F7C38();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v41, v44);
  sub_1A9066D74(&qword_1EEAB9428, &qword_1EEAB93B8, MEMORY[0x1E0C95B60]);
  v45 = v73;
  v46 = v85;
  sub_1A93F7C08();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v43, v46);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
  sub_1A9066D74(&qword_1EEAB9430, &qword_1EEAB93C0, v40);
  v47 = v81;
  v48 = v90;
  sub_1A93F7B84();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v45, v48);
  sub_1A905DC3C((uint64_t)v67, (uint64_t)&v103);
  v49 = swift_allocObject();
  sub_1A905D4AC(&v103, v49 + 16);
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = sub_1A91943F8;
  *(_QWORD *)(v50 + 24) = v49;
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9438);
  v51 = MEMORY[0x1E0C95950];
  sub_1A9066D74(&qword_1EEAB9440, &qword_1EEAB93C8, MEMORY[0x1E0C95950]);
  sub_1A9066D74(&qword_1EEAB9448, &qword_1EEAB9438, MEMORY[0x1E0C95D90]);
  v52 = v92;
  v53 = v94;
  sub_1A93F7C5C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v47, v53);
  *(_QWORD *)&v103 = *(_QWORD *)((char *)v33 + v89);
  v54 = (void *)v103;
  v55 = (uint64_t)v68;
  v86(v68, 1, 1, v87);
  sub_1A9066D74(&qword_1EEAB9450, &qword_1EEAB93D0, MEMORY[0x1E0C95B78]);
  v56 = v54;
  v57 = v93;
  v58 = v97;
  sub_1A93F7C80();
  sub_1A90C0C1C(v55);

  (*(void (**)(char *, uint64_t))(v98 + 8))(v52, v58);
  sub_1A9066D74(&qword_1EEAB9458, &qword_1EEAB93D8, MEMORY[0x1E0C95CB8]);
  v59 = v96;
  v60 = v99;
  sub_1A93F7B84();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v57, v60);
  sub_1A9066D74(&qword_1EEAB9460, &qword_1EEAB93E0, v51);
  v61 = v100;
  v62 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v59, v61);
  return v62;
}

uint64_t sub_1A9193C18()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9470);
  sub_1A9066D74(&qword_1EEAB9468, &qword_1EEAB9470, MEMORY[0x1E0DEAF38]);
  return sub_1A93F81C0();
}

uint64_t sub_1A9193C8C()
{
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  swift_release();
  return swift_bridgeObjectRelease();
}

BOOL sub_1A9193CFC(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)a1 + 16) != 0;
}

uint64_t sub_1A9193D10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_1A9159F94(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

void sub_1A9193D54()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (qword_1ED2A3F28 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2A3F08);
  swift_bridgeObjectRetain_n();
  v1 = sub_1A93F7674();
  v2 = sub_1A93F879C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    *(_DWORD *)v3 = 136315138;
    swift_bridgeObjectRetain();
    v5 = sub_1A93F8604();
    v7 = v6;
    swift_bridgeObjectRelease();
    sub_1A906436C(v5, v7, &v8);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v1, v2, "Automatically removed episodes: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v4, -1, -1);
    MEMORY[0x1AF41411C](v3, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1A9193F20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  char v12;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = type metadata accessor for DownloadedAsset();
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v28 - v6);
  v8 = sub_1A93F723C();
  if (!v9)
    goto LABEL_7;
  if (v8 == 0x62696C2D646F7069 && v9 == 0xEC00000079726172)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v11 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
LABEL_10:
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v14 = sub_1A93F7698();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A3F08);
    sub_1A919487C(a1, (uint64_t)v4);
    v15 = sub_1A93F7674();
    v16 = sub_1A93F8784();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v29 = v18;
      *(_DWORD *)v17 = 136315138;
      v19 = *v4;
      v20 = v4[1];
      swift_bridgeObjectRetain();
      v28 = sub_1A906436C(v19, v20, &v29);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A91948C0((uint64_t)v4);
      _os_log_impl(&dword_1A904E000, v15, v16, "Skipping auto-deletion of ipod-library asset: %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v18, -1, -1);
      MEMORY[0x1AF41411C](v17, -1, -1);
    }
    else
    {
      sub_1A91948C0((uint64_t)v4);
    }

    return 0;
  }
LABEL_7:
  sub_1A93F7224();
  sub_1A93F7224();
  v12 = sub_1A93F816C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    return 1;
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v21 = sub_1A93F7698();
  __swift_project_value_buffer(v21, (uint64_t)qword_1ED2A3F08);
  sub_1A919487C(a1, (uint64_t)v7);
  v22 = sub_1A93F7674();
  v23 = sub_1A93F8784();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v29 = v25;
    *(_DWORD *)v24 = 136315138;
    v26 = *v7;
    v27 = v7[1];
    swift_bridgeObjectRetain();
    v28 = sub_1A906436C(v26, v27, &v29);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A91948C0((uint64_t)v7);
    _os_log_impl(&dword_1A904E000, v22, v23, "Skipping auto-deletion of non-managed asset: %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v25, -1, -1);
    MEMORY[0x1AF41411C](v24, -1, -1);
  }
  else
  {
    sub_1A91948C0((uint64_t)v7);
  }

  return 0;
}

uint64_t sub_1A9194338()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A93F726C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1A9194398(uint64_t a1)
{
  sub_1A93F726C();
  return sub_1A9193F20(a1);
}

uint64_t sub_1A91943D4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1A91943F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
}

uint64_t sub_1A9194444()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9194468@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

void destroy for AssetRemovalProcessorDelegate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_0(a1);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

}

uint64_t initializeWithCopy for AssetRemovalProcessorDelegate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = *(int *)(a3 + 28);
  v13 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  v14 = v13;
  return a1;
}

uint64_t *assignWithCopy for AssetRemovalProcessorDelegate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = *(void **)((char *)a2 + v10);
  v12 = *(void **)((char *)a1 + v10);
  *(uint64_t *)((char *)a1 + v10) = (uint64_t)v11;
  v13 = v11;

  return a1;
}

uint64_t initializeWithTake for AssetRemovalProcessorDelegate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for AssetRemovalProcessorDelegate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRemovalProcessorDelegate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9194780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AssetRemovalProcessorDelegate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9194808(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A919487C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DownloadedAsset();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A91948C0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DownloadedAsset();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A91948FC()
{
  return sub_1A9066D74(&qword_1EEAB9468, &qword_1EEAB9470, MEMORY[0x1E0DEAF38]);
}

id MediaRequestController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void sub_1A919494C(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

id sub_1A91949AC()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue);
  swift_beginAccess();
  return *v1;
}

void sub_1A91949F0(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_1A9194A40())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9194A84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1A9194AC8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1A9194B10())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id MediaRequestController.init()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  objc_super v4;

  v1 = OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v2 = v0;
  *(_QWORD *)&v0[v1] = sub_1A93F8868();
  *(_QWORD *)&v2[OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy] = 0;

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MediaRequestController();
  return objc_msgSendSuper2(&v4, sel_initWithConcurrentOperationCount_requestEncodingType_, 1, 1);
}

char *MediaRequestController.__allocating_init(responseQueue:)(void *a1)
{
  objc_class *v1;
  char *v3;
  void **v4;
  void *v5;

  v3 = (char *)objc_msgSend(objc_allocWithZone(v1), sel_init);
  v4 = (void **)&v3[OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue];
  swift_beginAccess();
  v5 = *v4;
  *v4 = a1;

  return v3;
}

uint64_t sub_1A9194C58(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, void *, uint64_t, uint64_t, void *);
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t (**v23)(uint64_t, void *, uint64_t, uint64_t, void *);
  uint64_t v25;
  uint64_t v26;
  void *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v5 = v4;
  v25 = a4;
  v26 = a1;
  v27 = a2;
  v9 = type metadata accessor for MediaRequest.Params();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((_QWORD *)v14 + 2) = v13;
  *((_QWORD *)v14 + 3) = a3;
  *((_QWORD *)v14 + 4) = a4;
  sub_1A93F9330();
  sub_1A9114B88(a1, (uint64_t)v12);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 79) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  sub_1A917695C((uint64_t)v12, v19 + v15);
  *(_QWORD *)(v19 + v16) = MEMORY[0x1E0DEE9D8];
  v20 = v19 + v17;
  *(_QWORD *)(v20 + 64) = v32;
  v21 = v31;
  *(_OWORD *)(v20 + 32) = v30;
  *(_OWORD *)(v20 + 48) = v21;
  v22 = v29;
  *(_OWORD *)v20 = v28;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v19 + v18) = v5;
  v23 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v23 = sub_1A9114B7C;
  v23[1] = v14;
  swift_retain();
  swift_retain();
  v5;
  swift_retain();
  sub_1A9195C30(v26, v27, (uint64_t)sub_1A9114C2C, v19);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A9194E24()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9194E48(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  void *v22;
  id *v23;
  id v24;
  _QWORD *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v30 = a7;
  v31 = a3;
  v14 = sub_1A93F7D58();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1A93F7DB8();
  v32 = *(_QWORD *)(v18 - 8);
  v33 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1AF41420C](a6 + 16);
  if (result)
  {
    v22 = (void *)result;
    v29 = v15;
    v23 = (id *)(result + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue);
    swift_beginAccess();
    v24 = *v23;

    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v30;
    v25[3] = a8;
    v25[4] = a1;
    v25[5] = a2;
    v25[6] = v31;
    v25[7] = a4;
    v25[8] = a5;
    aBlock[4] = sub_1A9199218;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_97;
    v26 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    v27 = a2;
    swift_bridgeObjectRetain();
    v28 = a5;
    sub_1A93F7D88();
    v34 = MEMORY[0x1E0DEE9D8];
    sub_1A90A1130();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D28();
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v20, v17, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v14);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v33);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A91950A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, void *, uint64_t, uint64_t, void *);
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t (**v21)(uint64_t, void *, uint64_t, uint64_t, void *);
  id v22;
  _QWORD v24[2];
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v24[1] = a3;
  v25 = a1;
  v7 = type metadata accessor for MediaRequest.Params();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((_QWORD *)v12 + 2) = v11;
  *((_QWORD *)v12 + 3) = a2;
  *((_QWORD *)v12 + 4) = a3;
  sub_1A93F9330();
  sub_1A9114B88(a1, (uint64_t)v10);
  v13 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + 79) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  sub_1A917695C((uint64_t)v10, v17 + v13);
  *(_QWORD *)(v17 + v14) = MEMORY[0x1E0DEE9D8];
  v18 = v17 + v15;
  *(_QWORD *)(v18 + 64) = v30;
  v19 = v29;
  *(_OWORD *)(v18 + 32) = v28;
  *(_OWORD *)(v18 + 48) = v19;
  v20 = v27;
  *(_OWORD *)v18 = v26;
  *(_OWORD *)(v18 + 16) = v20;
  *(_QWORD *)(v17 + v16) = v3;
  v21 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v21 = sub_1A91162C4;
  v21[1] = v12;
  swift_retain();
  swift_retain();
  v22 = v3;
  swift_retain();
  sub_1A9195C30(v25, 0, (uint64_t)sub_1A9114C2C, v17);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A919526C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v17;

  v7 = type metadata accessor for MediaRequest.Params();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  sub_1A9114B88(a1, (uint64_t)v10);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = (v9 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = sub_1A9055750;
  v14[3] = v11;
  v14[4] = MEMORY[0x1E0DEE9D8];
  sub_1A917695C((uint64_t)v10, (uint64_t)v14 + v12);
  *(_QWORD *)((char *)v14 + v13) = v3;
  *(_QWORD *)((char *)v14 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)) = 0;
  swift_retain();
  swift_retain();
  v15 = v3;
  sub_1A9195C30(a1, 0, (uint64_t)sub_1A9195EA0, (uint64_t)v14);
  swift_release();
  return swift_release();
}

void sub_1A91953B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A9195C30(a1, 0, a2, a3);
}

void sub_1A91953C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(_QWORD, void *), uint64_t a7, _QWORD *a8, uint64_t a9, void *a10, void *a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  char isUniquelyReferenced_nonNull_native;
  void (*v28)(_QWORD, _QWORD);
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;

  v16 = type metadata accessor for MediaRequest.Params();
  v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
  MEMORY[0x1E0C80A78](v16);
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v46 - v22;
  if (a5)
  {
    v24 = a5;
    a6(0, a5);

  }
  else
  {
    v48 = a10;
    v49 = a11;
    if (a3)
    {
      v46 = v20;
      v25 = v19;
      v26 = a8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v28 = (void (*)(_QWORD, _QWORD))a6;
      v47 = a7;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v26 = sub_1A91189C0(0, a8[2] + 1, 1, a8);
      v30 = v26[2];
      v29 = v26[3];
      if (v30 >= v29 >> 1)
        v26 = sub_1A91189C0((_QWORD *)(v29 > 1), v30 + 1, 1, v26);
      v26[2] = v30 + 1;
      v26[v30 + 4] = a3;
      _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0(a3);
      v32 = v31;
      swift_bridgeObjectRelease();
      if (*(_BYTE *)(a9 + 177) != 1 || v32 == 0)
      {
        a6(v26, 0);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1A9114B88(a9, (uint64_t)v23);
        v34 = *((_QWORD *)v23 + 17);
        if (v23[144])
          v34 = 0;
        v35 = *((_QWORD *)v23 + 21);
        if (v23[176])
          v35 = 0;
        v36 = __OFADD__(v34, v35);
        v37 = v34 + v35;
        if (v36)
        {
          __break(1u);
        }
        else
        {
          *((_QWORD *)v23 + 21) = v37;
          v23[176] = 0;
          sub_1A9114B88((uint64_t)v23, v25);
          v38 = (*(unsigned __int8 *)(v46 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
          v39 = (v17 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
          v40 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
          v41 = (_QWORD *)swift_allocObject();
          v41[2] = v28;
          v41[3] = v47;
          v41[4] = v26;
          sub_1A917695C(v25, (uint64_t)v41 + v38);
          v42 = v48;
          *(_QWORD *)((char *)v41 + v39) = v48;
          v43 = v49;
          *(_QWORD *)((char *)v41 + v40) = v49;
          v44 = v43;
          swift_retain();
          swift_bridgeObjectRetain();
          v45 = v42;
          sub_1A9195C30((uint64_t)v23, v43, (uint64_t)sub_1A9195EA0, (uint64_t)v41);
          swift_bridgeObjectRelease();
          swift_release();
          sub_1A9114C30((uint64_t)v23);
        }
      }
    }
    else
    {
      ((void (*)(_QWORD, _QWORD, double))a6)(MEMORY[0x1E0DEE9D8], 0, v21);
    }
  }
}

void sub_1A91956B0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, __int128 *a8, void *a9, void (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, void *), void (*a11)(uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _BYTE *v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  __int128 v53;
  void (**v54)(uint64_t, uint64_t, uint64_t, uint64_t, void *);
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  _OWORD v68[4];
  uint64_t v69;

  v17 = type metadata accessor for MediaRequest.Params();
  v58 = *(_QWORD *)(v17 - 8);
  v18 = *(_QWORD *)(v58 + 64);
  MEMORY[0x1E0C80A78](v17);
  v59 = (uint64_t)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v57 - v21;
  v60 = v23;
  if (a3)
  {
    type metadata accessor for MediaRequestResponseParser();
    _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0((uint64_t)a3);
    LODWORD(v61) = v24 == 0;
    if (v24)
      swift_bridgeObjectRelease();
    sub_1A9211DC4((uint64_t)a3, (uint64_t)v68);
    v25 = v68[0];
    if ((BYTE1(v68[0]) & 1) != 0)
    {
      sub_1A91989C8();
      a3 = (void *)swift_allocError();
      *v26 = v25;
      v27 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      LOBYTE(v63) = v68[0];
      sub_1A9211F00((uint64_t)a3, (uint64_t)&v63);
      v27 = v28;
      a3 = v29;
    }
  }
  else
  {
    v27 = MEMORY[0x1E0DEE9D8];
    LODWORD(v61) = 1;
  }
  *(_QWORD *)&v68[0] = a7;
  swift_bridgeObjectRetain();
  sub_1A9135C70(v27);
  v30 = *(_QWORD *)&v68[0];
  v31 = a8[3];
  v65 = a8[2];
  v66 = v31;
  v67 = *((_QWORD *)a8 + 8);
  v32 = a8[1];
  v63 = *a8;
  v64 = v32;
  if (a4)
  {
    sub_1A9195B08();
    if (v33)
    {
      sub_1A93F7FBC();
      swift_bridgeObjectRelease();
    }
  }
  if (a5)
  {
    sub_1A9114B88(a6, (uint64_t)v22);
    sub_1A9114C30((uint64_t)v22);
    swift_bridgeObjectRelease();
    v34 = a3;
    a3 = a5;
LABEL_15:
    v36 = a5;
    a10(0, a4, 0, 0, a3);

    return;
  }
  sub_1A9114B88(a6, (uint64_t)v22);
  if (a3)
  {
    sub_1A9114C30((uint64_t)v22);
    swift_bridgeObjectRelease();
    v35 = a3;
    v34 = a3;
    goto LABEL_15;
  }
  v37 = v22[177];
  sub_1A9114C30((uint64_t)v22);
  if (v61 & 1 | ((v37 & 1) == 0))
  {
    v68[2] = v65;
    v68[3] = v66;
    v69 = v67;
    v68[0] = v63;
    v68[1] = v64;
    v62 = sub_1A93F9318();
    v38 = sub_1A93F9060();
    a10(v30, a4, v38, v39, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v61 = v30;
    v40 = v60;
    sub_1A9114B88(a6, v60);
    v41 = *(_QWORD *)(v40 + 136);
    if (*(_BYTE *)(v40 + 144))
      v41 = 0;
    v42 = *(_QWORD *)(v40 + 168);
    if (*(_BYTE *)(v40 + 176))
      v42 = 0;
    v43 = __OFADD__(v41, v42);
    v44 = v41 + v42;
    if (v43)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v40 + 168) = v44;
      *(_BYTE *)(v40 + 176) = 0;
      v45 = v59;
      sub_1A9114B88(v40, v59);
      v46 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      v47 = (v18 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
      v48 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8;
      v49 = (v48 + 79) & 0xFFFFFFFFFFFFFFF8;
      v50 = swift_allocObject();
      sub_1A917695C(v45, v50 + v46);
      *(_QWORD *)(v50 + v47) = v61;
      v51 = v50 + v48;
      *(_QWORD *)(v51 + 64) = v67;
      v52 = v66;
      *(_OWORD *)(v51 + 32) = v65;
      *(_OWORD *)(v51 + 48) = v52;
      v53 = v64;
      *(_OWORD *)v51 = v63;
      *(_OWORD *)(v51 + 16) = v53;
      *(_QWORD *)(v50 + v49) = a9;
      v54 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(v50 + ((v49 + 15) & 0xFFFFFFFFFFFFFFF8));
      *v54 = a10;
      v54[1] = a11;
      swift_bridgeObjectRetain();
      v55 = a9;
      swift_retain();
      v56 = v60;
      sub_1A9195C30(v60, 0, (uint64_t)sub_1A9114C2C, v50);
      swift_bridgeObjectRelease();
      swift_release();

      sub_1A9114C30(v56);
    }
  }
}

uint64_t sub_1A9195B08()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v6;
  _BYTE v7[40];
  __int128 v8;
  __int128 v9;

  v1 = objc_msgSend(v0, sel_allHeaderFields);
  v2 = sub_1A93F7EFC();

  *(_QWORD *)&v8 = 1734440005;
  *((_QWORD *)&v8 + 1) = 0xE400000000000000;
  sub_1A93F8C1C();
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_1A90A597C((uint64_t)v7), (v4 & 1) != 0))
  {
    sub_1A906443C(*(_QWORD *)(v2 + 56) + 32 * v3, (uint64_t)&v8);
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A90A5908((uint64_t)v7);
  if (*((_QWORD *)&v9 + 1))
  {
    if (swift_dynamicCast())
      return v6;
    else
      return 0;
  }
  else
  {
    sub_1A905FD54((uint64_t)&v8, qword_1ED2AC800);
    return 0;
  }
}

void sub_1A9195C30(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t aBlock;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;

  v26 = a4;
  v25 = a3;
  v6 = type metadata accessor for MediaRequest.Params();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MediaRequestBuilder();
  sub_1A92F1DCC(a1);
  v11 = sub_1A92F1F1C(a1);
  sub_1A9114B88(a1, (uint64_t)v9);
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v10;
  sub_1A917695C((uint64_t)v9, v13 + ((v12 + 24) & ~v12));
  v32 = sub_1A9198F94;
  v33 = v13;
  aBlock = MEMORY[0x1E0C809B0];
  v29 = 1107296256;
  v30 = sub_1A9198A0C;
  v31 = &block_descriptor_14;
  v14 = _Block_copy(&aBlock);
  swift_release();
  v15 = objc_msgSend(v11, sel_thenWithBlock_, v14);
  _Block_release(v14);

  sub_1A9114B88(a1, (uint64_t)v9);
  v16 = (v12 + 32) & ~v12;
  v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  v19 = v26;
  *(_QWORD *)(v18 + 16) = v25;
  *(_QWORD *)(v18 + 24) = v19;
  sub_1A917695C((uint64_t)v9, v18 + v16);
  v20 = v27;
  *(_QWORD *)(v18 + v17) = v27;
  *(_QWORD *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8)) = a2;
  v32 = sub_1A9199160;
  v33 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v29 = 1107296256;
  v30 = sub_1A906FD4C;
  v31 = &block_descriptor_81;
  v21 = _Block_copy(&aBlock);
  v22 = a2;
  swift_retain();
  v23 = v20;
  swift_release();
  objc_msgSend(v15, sel_addFinishBlock_, v21);
  _Block_release(v21);

}

uint64_t sub_1A9195E78()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A9195EA4(void *a1, uint64_t a2, void (*a3)(_QWORD, unint64_t, _QWORD, id, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  id v25;
  _QWORD v26[5];
  void (*v27)(_QWORD, unint64_t, _QWORD, id, uint64_t);
  uint64_t v28;

  v26[2] = a6;
  v26[3] = a7;
  v27 = a3;
  v28 = a4;
  v10 = sub_1A93F6D80();
  v26[4] = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A93F726C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v26 - v19;
  if (a1)
  {
    v26[1] = v10;
    v21 = a1;
    v22 = objc_msgSend(v21, sel_URL);
    if (v22)
    {
      v23 = v22;
      sub_1A93F7200();

      v24 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v24(v13, v17, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
      {
        v24(v20, v13, v14);
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
        sub_1A93F6D50();
        v26[0] = *(_QWORD *)(a5 + 8);
        __asm { BR              X9 }
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    }

    sub_1A905FD54((uint64_t)v13, &qword_1ED2AD3D0);
  }
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3680]), sel_init);
  v27(0, 0xF000000000000000, 0, v25, a2);

}

void sub_1A919612C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  swift_bridgeObjectRetain();
  sub_1A93F6D08();
  v11 = *(_QWORD *)(v10 - 208);
  *(_QWORD *)(v10 - 152) = v0;
  *(_QWORD *)(v10 - 144) = v11;
  *(_QWORD *)(v10 - 136) = v5;
  *(_QWORD *)(v10 - 128) = v4;
  *(_QWORD *)(v10 - 120) = v2;
  *(_BYTE *)(v10 - 112) = v9;
  sub_1A92F20EC(v10 - 152);
  sub_1A93F6D74();
  v12 = *(void **)(v10 - 192);
  swift_beginAccess();
  sub_1A93F6D14();
  v13 = (void *)sub_1A93F6D2C();
  v14 = swift_allocObject();
  v15 = *(_QWORD *)(v10 - 160);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v10 - 168);
  *(_QWORD *)(v14 + 24) = v15;
  *(_QWORD *)(v10 - 120) = sub_1A9055750;
  *(_QWORD *)(v10 - 112) = v14;
  *(_QWORD *)(v10 - 152) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v10 - 144) = 1107296256;
  *(_QWORD *)(v10 - 136) = sub_1A920BA50;
  *(_QWORD *)(v10 - 128) = &block_descriptor_87;
  v16 = _Block_copy((const void *)(v10 - 152));
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performDataRequest_account_callback_, v13, *(_QWORD *)(v10 - 184), v16);

  _Block_release(v16);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v10 - 176) + 8))(v1, *(_QWORD *)(v10 - 200));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v6);
  JUMPOUT(0x1A919610CLL);
}

void sub_1A9196140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;

  v11 = v5 | *(_QWORD *)(v10 - 208);
  if (!(v11 | v0 | v4 | v2))
    goto LABEL_4;
  v12 = v11 | v4 | v2;
  if (v0 == 1 && !v12)
    goto LABEL_4;
  if (v0 == 2 && !v12)
    JUMPOUT(0x1A9196094);
  if (v0 == 3 && !v12)
    v13 = 0x6574656C6564;
  else
LABEL_4:
    v13 = 7628135;
  sub_1A93F6D08(v13);
  v14 = *(_QWORD *)(v10 - 208);
  *(_QWORD *)(v10 - 152) = v0;
  *(_QWORD *)(v10 - 144) = v14;
  *(_QWORD *)(v10 - 136) = v5;
  *(_QWORD *)(v10 - 128) = v4;
  *(_QWORD *)(v10 - 120) = v2;
  *(_BYTE *)(v10 - 112) = v9;
  v15 = sub_1A92F20EC(v10 - 152);
  sub_1A93F6D74(v15);
  v16 = *(char **)(v10 - 192);
  v17 = &v16[OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy];
  swift_beginAccess(&v16[OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy], v10 - 104, 0, 0);
  v18 = sub_1A93F6D14(*(_QWORD *)v17);
  v19 = (void *)sub_1A93F6D2C(v18);
  v20 = swift_allocObject(&unk_1E54DFC78, 32, 7);
  v21 = *(_QWORD *)(v10 - 160);
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v10 - 168);
  *(_QWORD *)(v20 + 24) = v21;
  *(_QWORD *)(v10 - 120) = sub_1A9055750;
  *(_QWORD *)(v10 - 112) = v20;
  *(_QWORD *)(v10 - 152) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v10 - 144) = 1107296256;
  *(_QWORD *)(v10 - 136) = sub_1A920BA50;
  *(_QWORD *)(v10 - 128) = &block_descriptor_87;
  v22 = _Block_copy((const void *)(v10 - 152));
  v23 = *(_QWORD *)(v10 - 112);
  swift_retain(v21);
  swift_release(v23);
  objc_msgSend(v16, sel_performDataRequest_account_callback_, v19, *(_QWORD *)(v10 - 184), v22);

  _Block_release(v22);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v10 - 176) + 8))(v1, *(_QWORD *)(v10 - 200));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v6);
  JUMPOUT(0x1A919610CLL);
}

id MediaRequestController.__allocating_init(concurrentOperationCount:requestEncodingType:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;

  return objc_msgSend(objc_allocWithZone(v2), sel_initWithConcurrentOperationCount_requestEncodingType_, a1, a2);
}

void MediaRequestController.init(concurrentOperationCount:requestEncodingType:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MediaRequestController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaRequestController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A91963AC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t (*sub_1A91963F4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A919643C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, void *, uint64_t, uint64_t, void *);
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t (**v23)(uint64_t, void *, uint64_t, uint64_t, void *);
  id v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v26 = a4;
  v27 = a1;
  v28 = a2;
  v8 = type metadata accessor for MediaRequest.Params();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v4;
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((_QWORD *)v14 + 2) = v13;
  *((_QWORD *)v14 + 3) = a3;
  *((_QWORD *)v14 + 4) = a4;
  sub_1A93F9330();
  sub_1A9114B88(a1, (uint64_t)v11);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = (v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 79) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  sub_1A917695C((uint64_t)v11, v19 + v15);
  *(_QWORD *)(v19 + v16) = MEMORY[0x1E0DEE9D8];
  v20 = v19 + v17;
  *(_QWORD *)(v20 + 64) = v33;
  v21 = v32;
  *(_OWORD *)(v20 + 32) = v31;
  *(_OWORD *)(v20 + 48) = v21;
  v22 = v30;
  *(_OWORD *)v20 = v29;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v19 + v18) = v12;
  v23 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v23 = sub_1A91162C4;
  v23[1] = v14;
  swift_retain();
  swift_retain();
  v24 = v12;
  swift_retain();
  sub_1A9195C30(v27, v28, (uint64_t)sub_1A9114C2C, v19);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A9196604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A91950A8(a1, a2, a3);
}

uint64_t sub_1A9196624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v18;

  v7 = type metadata accessor for MediaRequest.Params();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  sub_1A9114B88(a1, (uint64_t)v10);
  v13 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = sub_1A919924C;
  v15[3] = v12;
  v15[4] = MEMORY[0x1E0DEE9D8];
  sub_1A917695C((uint64_t)v10, (uint64_t)v15 + v13);
  *(_QWORD *)((char *)v15 + v14) = v11;
  *(_QWORD *)((char *)v15 + ((v14 + 15) & 0xFFFFFFFFFFFFFFF8)) = 0;
  swift_retain();
  swift_retain();
  v16 = v11;
  sub_1A9195C30(a1, 0, (uint64_t)sub_1A9195EA0, (uint64_t)v15);
  swift_release();
  return swift_release();
}

void sub_1A9196770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A9195C30(a1, 0, a2, a3);
}

uint64_t sub_1A919679C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MediaRequestController.send<A>(_:completion:)(a1, a2, a3, a4, a5);
}

uint64_t MediaRequestController.send<A>(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t AssociatedTypeWitness;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v23 = a2;
  v10 = *(_QWORD *)(a4 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](a1);
  v12 = type metadata accessor for MediaRequest.Params();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v5;
  (*(void (**)(uint64_t, uint64_t, double))(a5 + 32))(a4, a5, v13);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a4);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = a4;
  *((_QWORD *)v18 + 3) = a5;
  *((_QWORD *)v18 + 4) = v23;
  *((_QWORD *)v18 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v18[v17], (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
  v19 = type metadata accessor for MediaRequestController();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_retain();
  MediaRequestControllerProtocol.perform<A>(params:parsing:callback:)((uint64_t)v15, v21, (uint64_t)sub_1A9196EC4, (uint64_t)v18, v19, AssociatedTypeWitness, (uint64_t)&protocol witness table for MediaRequestController, AssociatedConformanceWitness);
  swift_release();
  return sub_1A9114C30((uint64_t)v15);
}

uint64_t sub_1A9196978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;

  v10 = *v4;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1A9164CD4;
  v11[5] = a4;
  v11[6] = v10;
  v11[3] = a2;
  v11[4] = a3;
  v11[2] = a1;
  return swift_task_switch();
}

uint64_t MediaRequestController.send<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1A9196A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  v4 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = v2;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  swift_getAssociatedTypeWitness();
  sub_1A91970F0();
  sub_1A93F9390();
  *v5 = v0;
  v5[1] = sub_1A9196B10;
  return sub_1A93F9204();
}

uint64_t sub_1A9196B10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A9196B84()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A9196BB8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  void **v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD *);

  v28[1] = a6;
  v33 = a5;
  v34 = a4;
  v30 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)v28 - v11;
  v13 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v28 - v14;
  sub_1A91970F0();
  v16 = sub_1A93F9390();
  v31 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (_QWORD *)((char *)v28 - v17);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v19 = sub_1A93F9390();
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (void **)((char *)v28 - v21);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16))((char *)v28 - v21, v30, v19, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = *v22;
    *v18 = v24;
    swift_storeEnumTagMultiPayload();
    v25 = v24;
    v34(v18);

    return (*(uint64_t (**)(_QWORD *, uint64_t))(v31 + 8))(v18, v16);
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v32 + 32))(v15, v22, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(a8 + 40))(v15, a7, a8);
    v27 = v29;
    (*(void (**)(_QWORD *, char *, uint64_t))(v29 + 16))(v18, v12, AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    v34(v18);
    (*(void (**)(_QWORD *, uint64_t))(v31 + 8))(v18, v16);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, AssociatedTypeWitness);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v15, v13);
  }
}

uint64_t sub_1A9196E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A9196EC4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  return sub_1A9196BB8(a1, a2 & 1, a3, *(void (**)(_QWORD *))(v3 + 32), *(_QWORD *)(v3 + 40), v3 + ((v5 + 48) & ~v5), v4, *(_QWORD *)(v3 + 24));
}

uint64_t MediaRequestControllerProtocol.perform<A>(params:parsing:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v15;

  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a5;
  v15[3] = a6;
  v15[4] = a7;
  v15[5] = a8;
  v15[6] = a3;
  v15[7] = a4;
  swift_retain();
  MediaRequestControllerProtocol.perform(params:callback:)(a1, (uint64_t)sub_1A91973C4, (uint64_t)v15, a5, a7);
  return swift_release();
}

uint64_t sub_1A9196F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;

  swift_getAssociatedTypeWitness();
  sub_1A91970F0();
  sub_1A93F9390();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v9 = sub_1A93F8430();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v17 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v17 - v12, a1, v9, v11);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, v13, v9);
  MediaRequestController.send<A>(_:completion:)(a3, (uint64_t)sub_1A9198B3C, v15, a4, a5);
  return swift_release();
}

uint64_t sub_1A91970E4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A9196F88(a1, v1[4], v1[5], v1[2], v1[3]);
}

unint64_t sub_1A91970F0()
{
  unint64_t result;

  result = qword_1EEAB9490;
  if (!qword_1EEAB9490)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaAPIClientError, &type metadata for MediaAPIClientError);
    atomic_store(result, (unint64_t *)&qword_1EEAB9490);
  }
  return result;
}

uint64_t sub_1A9197134(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  swift_getAssociatedTypeWitness();
  sub_1A91970F0();
  v2 = sub_1A93F9390();
  v3 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v7 - v5, a1, v2, v3);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  sub_1A93F8430();
  return sub_1A93F8424();
}

uint64_t sub_1A9197210(uint64_t a1, char a2, void *a3, unint64_t a4, char a5, void (*a6)(uint64_t, _QWORD, _QWORD *), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  void (*v26)(uint64_t, _QWORD, _QWORD *);

  v25 = a7;
  v26 = a6;
  v24 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v14 = sub_1A93F9390();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (uint64_t *)((char *)&v23 - v17);
  if ((a5 & 1) != 0)
  {
    *v18 = a3;
    swift_storeEnumTagMultiPayload();
    v21 = a3;
    v26(a1, v24, v18);
  }
  else
  {
    v23 = (uint64_t)&v23;
    MEMORY[0x1E0C80A78](v16);
    *(&v23 - 6) = a8;
    *(&v23 - 5) = a9;
    *(&v23 - 4) = v20;
    *(&v23 - 3) = v19;
    *(&v23 - 2) = (uint64_t)a3;
    *(&v23 - 1) = a4;
    sub_1A90D8068((uint64_t)a3, a4);
    sub_1A927DB40((void (*)(_BYTE *))sub_1A9198A5C, (uint64_t)v18);
    v26(a1, v24, v18);
    sub_1A906A528(a3, a4, 0);
  }
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_1A91973A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91973C4(uint64_t a1, char a2, void *a3, unint64_t a4, char a5)
{
  uint64_t v5;

  return sub_1A9197210(a1, a2 & 1, a3, a4, a5 & 1, *(void (**)(uint64_t, _QWORD, _QWORD *))(v5 + 48), *(_QWORD *)(v5 + 56), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
}

uint64_t sub_1A9197400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t result;

  sub_1A93F6DA4();
  swift_allocObject();
  sub_1A93F6D98();
  sub_1A93F6D8C();
  result = swift_release();
  if (v7)
    *a7 = v7;
  return result;
}

uint64_t MediaRequestControllerProtocol.perform(params:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(a5 + 56);
  swift_retain();
  v11(a1, sub_1A9197880, v10, a4, a5);
  return swift_release();
}

void sub_1A9197540(uint64_t a1, unint64_t a2, int a3, id a4, id a5, void (*a6)(id, uint64_t, id, unint64_t, uint64_t))
{
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  void *v22;
  _BYTE *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  id v30;
  __int128 v31;
  __int128 v32;
  id v33;

  if (!a4)
  {
    if (!a5)
    {
      v11 = 0;
      goto LABEL_13;
    }
    *(_QWORD *)&v31 = a5;
    v13 = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    sub_1A9072534(0, &qword_1ED2ABD18);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v14 = v33;
      v15 = objc_msgSend(v33, sel_domain, (_QWORD)v31);
      v16 = sub_1A93F8040();
      v18 = v17;

      if (v16 == sub_1A93F8040() && v18 == v19)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v21 = sub_1A93F90C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0)
        {

          goto LABEL_25;
        }
      }
      v24 = objc_msgSend(v33, sel_userInfo);
      v25 = sub_1A93F7EFC();

      v26 = sub_1A93F8040();
      if (*(_QWORD *)(v25 + 16) && (v28 = sub_1A9094640(v26, v27), (v29 & 1) != 0))
      {
        sub_1A906443C(*(_QWORD *)(v25 + 56) + 32 * v28, (uint64_t)&v31);
      }
      else
      {
        v31 = 0u;
        v32 = 0u;
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v32 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v12 = 0;
          v11 = v33;
          goto LABEL_26;
        }
      }
      else
      {
        sub_1A905FD54((uint64_t)&v31, qword_1ED2AC800);
      }
    }
LABEL_25:
    v11 = 0;
    v12 = 1;
    goto LABEL_26;
  }
  v11 = objc_msgSend(a4, sel_statusCode);
  if (a5)
  {
    v12 = 0;
LABEL_26:
    v30 = a5;
    a6(v11, v12, a5, 0, 1);

    return;
  }
LABEL_13:
  if (a2 >> 60 == 15)
  {
    sub_1A91989C8();
    v22 = (void *)swift_allocError();
    *v23 = 3;
    a6(v11, a4 == 0, v22, 0, 1);

  }
  else
  {
    sub_1A90D8068(a1, a2);
    a6(v11, a4 == 0, (id)a1, a2, 0);
    sub_1A9069F9C(a1, a2);
  }
}

void sub_1A9197880(uint64_t a1, unint64_t a2, int a3, void *a4, void *a5)
{
  uint64_t v5;

  sub_1A9197540(a1, a2, a3, a4, a5, *(void (**)(id, uint64_t, id, unint64_t, uint64_t))(v5 + 16));
}

uint64_t MediaRequestControllerProtocol.performRecursivelyWithParsing<A>(params:resultType:account:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[7] = a7;
  v8[8] = v7;
  v8[5] = a5;
  v8[6] = a6;
  v8[3] = a2;
  v8[4] = a4;
  v8[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1A91978AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v5;
  v10 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v5 + 16) = v2;
  *(_OWORD *)(v5 + 24) = v10;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v4;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v6;
  type metadata accessor for MediaAPIResponse(0, v10, v7, v8);
  *v6 = v0;
  v6[1] = sub_1A9197980;
  return sub_1A93F9204();
}

uint64_t sub_1A9197980()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A91979F4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A9197A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v30 = a6;
  v31 = a5;
  v32 = a4;
  v33 = a2;
  v11 = type metadata accessor for MediaRequest.Params();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MediaAPIResponse(255, a6, v15, v16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v17 = sub_1A93F8430();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v30 - v21;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16))((char *)&v30 - v21, a1, v17, v20);
  v23 = a3;
  sub_1A9114B88(a3, (uint64_t)v14);
  v24 = (*(unsigned __int8 *)(v18 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v25 = (v19 + *(unsigned __int8 *)(v12 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v26 = (char *)swift_allocObject();
  v27 = v30;
  v28 = v31;
  *((_QWORD *)v26 + 2) = v31;
  *((_QWORD *)v26 + 3) = v27;
  *((_QWORD *)v26 + 4) = a7;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v26[v24], v22, v17);
  sub_1A917695C((uint64_t)v14, (uint64_t)&v26[v25]);
  (*(void (**)(uint64_t, uint64_t, void (*)(uint64_t, void *, uint64_t, uint64_t, void *), char *, uint64_t, uint64_t))(a7 + 32))(v23, v32, sub_1A919889C, v26, v28, a7);
  return swift_release();
}

uint64_t sub_1A9197BCC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A9197A28(a1, v1[5], v1[6], v1[7], v1[2], v1[3], v1[4]);
}

void sub_1A9197BDC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a6;
  v15 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for MediaAPIResponse(0, a9, v18, v19);
  MEMORY[0x1E0C80A78](v20);
  v22 = (uint64_t *)((char *)&v32 - v21);
  if (a1 && a2)
  {
    v23 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC4F8);
    v24 = sub_1A93F8EC8();
    if (v24)
    {
      v25 = v24;
      sub_1A9114B88(a7, (uint64_t)v17);
      MediaAPIResponse.init(objects:response:contentHash:parameters:)(v25, (uint64_t)v23, a3, a4, (uint64_t)v17, a9, v22);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
      sub_1A93F8430();
      sub_1A93F8424();
    }
    else
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94D0) | 0x8000000000000000;
      sub_1A9198984();
      v30 = swift_allocError();
      *v31 = a9;
      v31[1] = v29;
      v33 = v30;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
      sub_1A93F8430();
      sub_1A93F8418();

    }
  }
  else
  {
    sub_1A9198984();
    v26 = swift_allocError();
    *v27 = a5;
    v27[1] = 0;
    v33 = v26;
    v28 = a5;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
    sub_1A93F8430();
    sub_1A93F8418();
  }
}

uint64_t MediaRequestControllerProtocol.perform(params:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  return swift_task_switch();
}

uint64_t sub_1A9197E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94A8);
  *v4 = v0;
  v4[1] = sub_1A9197EF0;
  return sub_1A93F9204();
}

uint64_t sub_1A9197EF0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A9197F5C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1A9197F78()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A9197FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94C0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9, v12);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  MediaRequestControllerProtocol.perform(params:callback:)(a3, (uint64_t)sub_1A9198668, v14, a4, a5);
  return swift_release();
}

uint64_t sub_1A91980AC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A9197FAC(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1A91980B8(int a1, int a2, id a3, unint64_t a4, char a5)
{
  id v6;

  if ((a5 & 1) != 0)
  {
    v6 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94C0);
    return sub_1A93F8418();
  }
  else
  {
    sub_1A90D8068((uint64_t)a3, a4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94C0);
    return sub_1A93F8424();
  }
}

id sub_1A919813C@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1A9198190@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1A91981E0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.cachePolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.cachePolicy.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.cachePolicy.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.performRecursivelyWithParsing(params:account:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.performRecursivelyWithParsing(params:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.performRecursively(params:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.perform(params:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.send<A>(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.send<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 72)
                                                                                     + *(_QWORD *)(a6 + 72));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1A9164CD4;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t method lookup function for MediaRequestController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MediaRequestController.responseQueue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MediaRequestController.responseQueue.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MediaRequestController.responseQueue.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MediaRequestController.cachePolicy.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MediaRequestController.cachePolicy.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MediaRequestController.cachePolicy.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MediaRequestController.performRecursivelyWithParsing(params:account:callback:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MediaRequestController.performRecursivelyWithParsing(params:callback:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MediaRequestController.performRecursively(params:callback:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MediaRequestController.perform(params:callback:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

_QWORD *initializeBufferWithCopyOfBuffer for MediaRequestControllerError(_QWORD *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  sub_1A919846C(*(id *)a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

id sub_1A919846C(id result, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0)
    return result;
  return result;
}

void destroy for MediaRequestControllerError(uint64_t a1)
{
  sub_1A9198484(*(id *)a1, *(_QWORD *)(a1 + 8));
}

void sub_1A9198484(id a1, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0)

}

uint64_t assignWithCopy for MediaRequestControllerError(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  sub_1A919846C(*(id *)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  sub_1A9198484(v5, v6);
  return a1;
}

uint64_t assignWithTake for MediaRequestControllerError(uint64_t a1, _OWORD *a2)
{
  void *v3;
  uint64_t v4;

  v3 = *(void **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_1A9198484(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaRequestControllerError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)(a1 + 8) >> 57) >> 6) | (2
                                                          * ((*(_QWORD *)(a1 + 8) >> 57) & 0x38 | *(_QWORD *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MediaRequestControllerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A91985B8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) >> 63;
}

uint64_t sub_1A91985C4(uint64_t result)
{
  *(_QWORD *)(result + 8) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1A91985D4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for MediaRequestControllerError()
{
  return &type metadata for MediaRequestControllerError;
}

uint64_t sub_1A9198604()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94C0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1A9198668(int a1, char a2, void *a3, unint64_t a4, char a5)
{
  int v8;
  char v9;

  v8 = a2 & 1;
  v9 = a5 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94C0);
  return sub_1A91980B8(a1, v8, a3, a4, v9);
}

uint64_t sub_1A91986D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  type metadata accessor for MediaAPIResponse(255, *(_QWORD *)(v4 + 24), a3, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v5 = sub_1A93F8430();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = type metadata accessor for MediaRequest.Params();
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4 + v7, v5);
  v11 = v4 + ((v7 + v8 + v10) & ~v10);
  sub_1A9114BD0(*(_QWORD *)v11, *(_QWORD *)(v11 + 8), *(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24), *(_QWORD *)(v11 + 32), *(_BYTE *)(v11 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v11 + *(int *)(v9 + 96);
  v13 = sub_1A93F726C();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A919889C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v10 = *(_QWORD *)(v5 + 16);
  v11 = *(_QWORD *)(v5 + 24);
  type metadata accessor for MediaAPIResponse(255, v11, a3, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v12 = *(_QWORD *)(sub_1A93F8430() - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 64);
  v15 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MediaRequest.Params() - 8) + 80);
  sub_1A9197BDC(a1, a2, a3, a4, a5, v5 + v13, v5 + ((v13 + v14 + v15) & ~v15), v10, v11);
}

unint64_t sub_1A9198984()
{
  unint64_t result;

  result = qword_1EEAB94C8;
  if (!qword_1EEAB94C8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequestControllerError, &type metadata for MediaRequestControllerError);
    atomic_store(result, (unint64_t *)&qword_1EEAB94C8);
  }
  return result;
}

unint64_t sub_1A91989C8()
{
  unint64_t result;

  result = qword_1ED2AC698[0];
  if (!qword_1ED2AC698[0])
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequestResponseParser.MediaRequestResponseParseError, &type metadata for MediaRequestResponseParser.MediaRequestResponseParseError);
    atomic_store(result, qword_1ED2AC698);
  }
  return result;
}

id sub_1A9198A0C(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_1A9198A5C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A9197400(v1[6], v1[7], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_1A9198A80()
{
  uint64_t v0;
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  sub_1A91970F0();
  sub_1A93F9390();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v1 = sub_1A93F8430();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1A9198B3C(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  sub_1A91970F0();
  sub_1A93F9390();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  sub_1A93F8430();
  return sub_1A9197134(a1);
}

uint64_t objectdestroy_20Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for MediaRequest.Params();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A9114BD0(*(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + v3 + 16), *(_QWORD *)(v0 + v3 + 24), *(_QWORD *)(v0 + v3 + 32), *(_BYTE *)(v0 + v3 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 96);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1A9198D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v11 = *(_QWORD *)(type metadata accessor for MediaRequest.Params() - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A91953C4(a1, a2, a3, a4, a5, *(void (**)(_QWORD, void *))(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD **)(v5 + 32), v5 + v12, *(void **)(v5 + v13), *(void **)(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A9198E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for MediaRequest.Params();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 24) & ~v2);
  sub_1A9114BD0(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_BYTE *)(v3 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 96);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1A9198F94(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MediaRequest.Params() - 8) + 80);
  return sub_1A92F0DF4(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1A9198FD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for MediaRequest.Params();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  sub_1A9114BD0(*(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + v3 + 16), *(_QWORD *)(v0 + v3 + 24), *(_QWORD *)(v0 + v3 + 32), *(_BYTE *)(v0 + v3 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 96);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1A9199160(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for MediaRequest.Params() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A9195EA4(a1, a2, *(void (**)(_QWORD, unint64_t, _QWORD, id, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A91991D4()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A9199218()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1A9199264(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1A908182C(0, v1, 0);
    v2 = v9;
    v4 = a1 + 48;
    do
    {
      sub_1A93F810C();
      sub_1A93F810C();
      sub_1A93F8DE4();
      v6 = *(_QWORD *)(v9 + 16);
      v5 = *(_QWORD *)(v9 + 24);
      if (v6 >= v5 >> 1)
        sub_1A908182C(v5 > 1, v6 + 1, 1);
      *(_QWORD *)(v9 + 16) = v6 + 1;
      v7 = v9 + 16 * v6;
      *(_QWORD *)(v7 + 32) = 0;
      *(_QWORD *)(v7 + 40) = 0xE000000000000000;
      v4 += 48;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A9199388()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x62694C6C61636F6CLL;
  if (*v0 != 1)
    v1 = 0x7265666E69;
  if (*v0)
    return v1;
  else
    return 0x495041616964656DLL;
}

uint64_t MediaRequest.Params.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  char v15;
  uint64_t v16;
  char v17;
  _OWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t result;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  _OWORD v30[2];
  _OWORD v31[3];
  _QWORD *v32[2];
  __int128 v33;
  uint64_t v34;

  v1 = sub_1A93F936C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_QWORD *)sub_1A908A4A8(MEMORY[0x1E0DEE9D8]);
  *((_QWORD *)&v33 + 1) = type metadata accessor for MediaRequest.Params();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v32);
  sub_1A9114B88(v0, (uint64_t)boxed_opaque_existential_1);
  sub_1A93F933C();
  sub_1A93F9360();
  sub_1A93F8DCC();
  swift_release();
  swift_retain();
  sub_1A93F8EA4();
  sub_1A91997E0((uint64_t)v31, (uint64_t)v32);
  if (!v34)
  {
LABEL_17:
    swift_release_n();
    swift_bridgeObjectRetain_n();
    v23 = (_QWORD *)sub_1A930C234((uint64_t)v5);
    swift_bridgeObjectRelease();
    v32[0] = v23;
    sub_1A9199778(v32);
    swift_bridgeObjectRelease();
    v24 = (_QWORD *)sub_1A9199264((uint64_t)v32[0]);
    swift_bridgeObjectRelease();
    swift_release();
    v32[0] = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
    sub_1A90819B0();
    v25 = sub_1A93F7FE0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return v25;
  }
  while (1)
  {
    while (1)
    {
      v8 = v32[0];
      v7 = v32[1];
      sub_1A908A5DC(&v33, v31);
      if (v7)
        break;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
      sub_1A93F8EA4();
      sub_1A91997E0((uint64_t)v31, (uint64_t)v32);
      if (!v34)
        goto LABEL_17;
    }
    v27 = v4;
    v28 = v2;
    v9 = v1;
    sub_1A906443C((uint64_t)v31, (uint64_t)v30);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v29 = v5;
    v12 = sub_1A9094640((uint64_t)v8, (uint64_t)v7);
    v13 = v5[2];
    v14 = (v11 & 1) == 0;
    if (__OFADD__(v13, v14))
      break;
    v15 = v11;
    if (v5[3] >= v13 + v14)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v5 = v29;
        if ((v11 & 1) != 0)
          goto LABEL_12;
      }
      else
      {
        sub_1A9306F64();
        v5 = v29;
        if ((v15 & 1) != 0)
          goto LABEL_12;
      }
    }
    else
    {
      sub_1A92FE0B8();
      v16 = sub_1A9094640((uint64_t)v8, (uint64_t)v7);
      if ((v15 & 1) != (v17 & 1))
        goto LABEL_20;
      v12 = v16;
      v5 = v29;
      if ((v15 & 1) != 0)
      {
LABEL_12:
        v18 = (_OWORD *)(v5[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
        sub_1A908A5DC(v30, v18);
        goto LABEL_16;
      }
    }
    v5[(v12 >> 6) + 8] |= 1 << v12;
    v19 = (_QWORD *)(v5[6] + 16 * v12);
    *v19 = v8;
    v19[1] = v7;
    sub_1A908A5DC(v30, (_OWORD *)(v5[7] + 32 * v12));
    v20 = v5[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_19;
    v5[2] = v22;
    swift_bridgeObjectRetain();
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
    sub_1A93F8EA4();
    sub_1A91997E0((uint64_t)v31, (uint64_t)v32);
    v1 = v9;
    v4 = v27;
    v2 = v28;
    if (!v34)
      goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  sub_1A93F9258();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1A9199778(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_1A92343BC(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_1A91998DC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A91997E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A9199828(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1A9199854();
  result = sub_1A9199898();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A9199854()
{
  unint64_t result;

  result = qword_1EEAB94E0;
  if (!qword_1EEAB94E0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940BDD0, &_s6SourceON);
    atomic_store(result, (unint64_t *)&qword_1EEAB94E0);
  }
  return result;
}

unint64_t sub_1A9199898()
{
  unint64_t result;

  result = qword_1EEAB94E8;
  if (!qword_1EEAB94E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94185C8, &_s6SourceON);
    atomic_store(result, (unint64_t *)&qword_1EEAB94E8);
  }
  return result;
}

uint64_t sub_1A91998DC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  int v19;
  __int128 *v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v34;
  __int128 *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *__dst;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v2 = a1[1];
  result = sub_1A93F9054();
  if (result >= v2)
  {
    if (v2 < 0)
      goto LABEL_149;
    if (v2)
      return sub_1A919A058(0, v2, 1, a1);
    return result;
  }
  if (v2 >= 0)
    v4 = v2;
  else
    v4 = v2 + 1;
  if (v2 < -1)
    goto LABEL_157;
  v102 = result;
  v109 = v1;
  if (v2 < 2)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v2 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v9 = (char *)MEMORY[0x1E0DEE9D8];
      v10 = a1;
LABEL_115:
      v92 = v9;
      v101 = v7;
      if (v11 >= 2)
      {
        v93 = *v10;
        do
        {
          v94 = v11 - 2;
          if (v11 < 2)
            goto LABEL_144;
          if (!v93)
            goto LABEL_156;
          v95 = v92;
          v96 = *(_QWORD *)&v92[16 * v94 + 32];
          v97 = *(_QWORD *)&v92[16 * v11 + 24];
          v98 = v109;
          sub_1A919A184((char *)(v93 + 48 * v96), (char *)(v93 + 48 * *(_QWORD *)&v92[16 * v11 + 16]), v93 + 48 * v97, __dst);
          v109 = v98;
          if (v98)
            break;
          if (v97 < v96)
            goto LABEL_145;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v95 = sub_1A9234330((uint64_t)v95);
          if (v94 >= *((_QWORD *)v95 + 2))
            goto LABEL_146;
          v99 = &v95[16 * v94 + 32];
          *(_QWORD *)v99 = v96;
          *((_QWORD *)v99 + 1) = v97;
          v100 = *((_QWORD *)v95 + 2);
          if (v11 > v100)
            goto LABEL_147;
          memmove(&v95[16 * v11 + 16], &v95[16 * v11 + 32], 16 * (v100 - v11));
          v92 = v95;
          *((_QWORD *)v95 + 2) = v100 - 1;
          v11 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_112:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v101 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v101 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v5 = v4 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94F0);
    v6 = sub_1A93F837C();
    *(_QWORD *)(v6 + 16) = v5;
    v101 = v6;
    __dst = (char *)(v6 + 32);
  }
  v8 = 0;
  v9 = (char *)MEMORY[0x1E0DEE9D8];
  v10 = a1;
  while (1)
  {
    v12 = v8++;
    if (v8 < v2)
    {
      v13 = *v10;
      sub_1A919A4F8(*v10 + 48 * v8, (uint64_t)&v107);
      sub_1A919A4F8(v13 + 48 * v12, (uint64_t)&v105);
      if (v105 == v107 && v106 == v108)
        v15 = 0;
      else
        v15 = sub_1A93F90C0();
      sub_1A919A540((uint64_t)&v105);
      sub_1A919A540((uint64_t)&v107);
      v8 = v12 + 2;
      if (v12 + 2 < v2)
      {
        v16 = v13;
        v17 = v13 + 48 * v12 + 48;
        while (1)
        {
          sub_1A919A4F8(v17 + 48, (uint64_t)&v107);
          sub_1A919A4F8(v17, (uint64_t)&v105);
          v18 = v105 == v107 && v106 == v108;
          v19 = v18 ? 0 : sub_1A93F90C0();
          sub_1A919A540((uint64_t)&v105);
          sub_1A919A540((uint64_t)&v107);
          if (((v15 ^ v19) & 1) != 0)
            break;
          ++v8;
          v17 += 48;
          if (v2 == v8)
          {
            v8 = v2;
            break;
          }
        }
        v13 = v16;
      }
      if ((v15 & 1) != 0)
      {
        if (v8 < v12)
          goto LABEL_150;
        if (v12 < v8)
        {
          v20 = (__int128 *)(v13 + 48 * v8 - 48);
          v21 = (__int128 *)(v13 + 48 * v12);
          v22 = v8;
          v23 = v12;
          do
          {
            if (v23 != --v22)
            {
              if (!v13)
                goto LABEL_155;
              v24 = *v21;
              v25 = v21[1];
              v26 = v21[2];
              v28 = v20[1];
              v27 = v20[2];
              *v21 = *v20;
              v21[1] = v28;
              v21[2] = v27;
              v20[1] = v25;
              v20[2] = v26;
              *v20 = v24;
            }
            ++v23;
            v20 -= 3;
            v21 += 3;
          }
          while (v23 < v22);
        }
      }
    }
    if (v8 >= v2)
      goto LABEL_64;
    if (__OFSUB__(v8, v12))
      goto LABEL_148;
    if (v8 - v12 >= v102)
      goto LABEL_64;
    if (__OFADD__(v12, v102))
      goto LABEL_151;
    if (v12 + v102 < v2)
      v2 = v12 + v102;
    if (v2 < v12)
      break;
    if (v8 != v2)
    {
      v29 = 48 * v8;
      do
      {
        v30 = v12;
        v31 = v29;
        while (1)
        {
          v32 = *v10 + v31;
          sub_1A919A4F8(v32, (uint64_t)&v107);
          sub_1A919A4F8(v32 - 48, (uint64_t)&v105);
          if (v105 == v107 && v106 == v108)
            break;
          v34 = sub_1A93F90C0();
          sub_1A919A540((uint64_t)&v105);
          sub_1A919A540((uint64_t)&v107);
          if ((v34 & 1) == 0)
            goto LABEL_53;
          if (!*v10)
            goto LABEL_153;
          v35 = (__int128 *)(*v10 + v31);
          v37 = v35[1];
          v36 = v35[2];
          v38 = *v35;
          v39 = *(v35 - 2);
          *v35 = *(v35 - 3);
          v35[1] = v39;
          v35[2] = *(v35 - 1);
          *(v35 - 3) = v38;
          *(v35 - 2) = v37;
          *(v35 - 1) = v36;
          v31 -= 48;
          if (v8 == ++v30)
            goto LABEL_53;
        }
        sub_1A919A540((uint64_t)&v105);
        sub_1A919A540((uint64_t)&v107);
LABEL_53:
        ++v8;
        v29 += 48;
      }
      while (v8 != v2);
      v8 = v2;
    }
LABEL_64:
    if (v8 < v12)
      goto LABEL_143;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_1A9233E0C(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v41 = *((_QWORD *)v9 + 2);
    v40 = *((_QWORD *)v9 + 3);
    v11 = v41 + 1;
    if (v41 >= v40 >> 1)
      v9 = sub_1A9233E0C((char *)(v40 > 1), v41 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v11;
    v42 = v9 + 32;
    v43 = &v9[16 * v41 + 32];
    *(_QWORD *)v43 = v12;
    *((_QWORD *)v43 + 1) = v8;
    if (v41)
    {
      v10 = a1;
      while (1)
      {
        v44 = v11 - 1;
        if (v11 >= 4)
        {
          v49 = &v42[16 * v11];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_132;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_133;
          v56 = v11 - 2;
          v57 = &v42[16 * v11 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_135;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_138;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_142;
            v72 = v47 < v82;
            goto LABEL_102;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v73 = *((_QWORD *)v9 + 4);
            v74 = *((_QWORD *)v9 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_96;
          }
          v46 = *((_QWORD *)v9 + 4);
          v45 = *((_QWORD *)v9 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_134;
        v56 = v11 - 2;
        v62 = &v42[16 * v11 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_137;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_140;
        if (__OFADD__(v66, v71))
          goto LABEL_141;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_102:
          if (v72)
            v44 = v56;
          goto LABEL_104;
        }
LABEL_96:
        if ((v67 & 1) != 0)
          goto LABEL_136;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_139;
        if (v78 < v66)
          goto LABEL_15;
LABEL_104:
        v83 = v44 - 1;
        if (v44 - 1 >= v11)
        {
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        v84 = *v10;
        if (!*v10)
          goto LABEL_154;
        v85 = v9;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = &v42[16 * v44];
        v89 = *((_QWORD *)v88 + 1);
        v90 = v109;
        sub_1A919A184((char *)(v84 + 48 * *(_QWORD *)v86), (char *)(v84 + 48 * *(_QWORD *)v88), v84 + 48 * v89, __dst);
        v109 = v90;
        if (v90)
          goto LABEL_112;
        if (v89 < v87)
          goto LABEL_129;
        if (v44 > *((_QWORD *)v85 + 2))
          goto LABEL_130;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v42[16 * v83 + 8] = v89;
        v91 = *((_QWORD *)v85 + 2);
        if (v44 >= v91)
          goto LABEL_131;
        v9 = v85;
        v11 = v91 - 1;
        memmove(&v42[16 * v44], v88 + 16, 16 * (v91 - 1 - v44));
        *((_QWORD *)v85 + 2) = v91 - 1;
        v72 = v91 > 2;
        v10 = a1;
        if (!v72)
          goto LABEL_15;
      }
    }
    v11 = 1;
    v10 = a1;
LABEL_15:
    v2 = v10[1];
    if (v8 >= v2)
    {
      v7 = v101;
      goto LABEL_115;
    }
  }
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t sub_1A919A058(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _QWORD v19[6];
  _QWORD v20[6];

  if (a3 != a2)
  {
    v5 = a3;
    v7 = result;
    v8 = 48 * a3;
LABEL_6:
    v9 = v7;
    v10 = v8;
    while (1)
    {
      v11 = *a4 + v10;
      sub_1A919A4F8(v11, (uint64_t)v20);
      sub_1A919A4F8(v11 - 48, (uint64_t)v19);
      if (v19[0] == v20[0] && v19[1] == v20[1])
      {
        sub_1A919A540((uint64_t)v19);
        result = sub_1A919A540((uint64_t)v20);
LABEL_5:
        ++v5;
        v8 += 48;
        if (v5 == a2)
          return result;
        goto LABEL_6;
      }
      v13 = sub_1A93F90C0();
      sub_1A919A540((uint64_t)v19);
      result = sub_1A919A540((uint64_t)v20);
      if ((v13 & 1) == 0)
        goto LABEL_5;
      if (!*a4)
        break;
      v14 = (__int128 *)(*a4 + v10);
      v16 = v14[1];
      v15 = v14[2];
      v17 = *v14;
      v18 = *(v14 - 2);
      *v14 = *(v14 - 3);
      v14[1] = v18;
      v14[2] = *(v14 - 1);
      *(v14 - 3) = v17;
      *(v14 - 2) = v16;
      *(v14 - 1) = v15;
      v10 -= 48;
      if (v5 == ++v9)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A919A184(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v14;
  char *v15;
  unint64_t v16;
  __int128 v17;
  __int128 v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  char *v26;
  char v28;
  char *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;

  v4 = __dst;
  v6 = a2;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 48;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 48;
  v40 = __src;
  v39 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      if (__dst != a2 || &a2[48 * v11] <= __dst)
        memmove(__dst, a2, 48 * v11);
      v22 = &v4[48 * v11];
      v38 = v22;
      v40 = v6;
      if (__src < v6 && v10 >= 48)
      {
        v23 = (char *)(a3 - 48);
        do
        {
          sub_1A919A4F8((uint64_t)(v22 - 48), (uint64_t)&v36);
          v26 = v6 - 48;
          sub_1A919A4F8((uint64_t)(v6 - 48), (uint64_t)&v34);
          if (v34 == v36 && v35 == v37)
            v28 = 0;
          else
            v28 = sub_1A93F90C0();
          v29 = v23 + 48;
          sub_1A919A540((uint64_t)&v34);
          sub_1A919A540((uint64_t)&v36);
          if ((v28 & 1) != 0)
          {
            if (v29 != v6 || v23 >= v6)
            {
              v24 = *(_OWORD *)v26;
              v25 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v23 + 1) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v23 + 2) = v25;
              *(_OWORD *)v23 = v24;
            }
            v40 -= 48;
            v22 = v38;
            if (v38 <= v4)
              break;
          }
          else
          {
            v30 = (unint64_t)v38;
            v22 = v38 - 48;
            v38 -= 48;
            if ((unint64_t)v29 < v30 || (unint64_t)v23 >= v30 || v29 != (char *)v30)
            {
              v31 = *(_OWORD *)v22;
              v32 = *(_OWORD *)(v30 - 16);
              *((_OWORD *)v23 + 1) = *(_OWORD *)(v30 - 32);
              *((_OWORD *)v23 + 2) = v32;
              *(_OWORD *)v23 = v31;
            }
            v26 = v6;
            if (v22 <= v4)
              break;
          }
          v23 -= 48;
          v6 = v26;
        }
        while (v26 > __src);
      }
LABEL_51:
      sub_1A9234110((void **)&v40, (const void **)&v39, &v38);
      return 1;
    }
  }
  else if (v8 >= -47)
  {
    if (__dst != __src || &__src[48 * v9] <= __dst)
      memmove(__dst, __src, 48 * v9);
    v12 = (unint64_t)&v4[48 * v9];
    v38 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      while (1)
      {
        sub_1A919A4F8((uint64_t)v6, (uint64_t)&v36);
        sub_1A919A4F8((uint64_t)v4, (uint64_t)&v34);
        if (v34 == v36 && v35 == v37)
          break;
        v14 = sub_1A93F90C0();
        sub_1A919A540((uint64_t)&v34);
        sub_1A919A540((uint64_t)&v36);
        if ((v14 & 1) == 0)
          goto LABEL_18;
        v15 = v40;
        v16 = (unint64_t)(v6 + 48);
        if (v40 >= v6 && (unint64_t)v40 < v16 && v40 == v6)
        {
          v15 = v6;
        }
        else
        {
          v17 = *(_OWORD *)v6;
          v18 = *((_OWORD *)v6 + 2);
          *((_OWORD *)v40 + 1) = *((_OWORD *)v6 + 1);
          *((_OWORD *)v15 + 2) = v18;
          *(_OWORD *)v15 = v17;
        }
LABEL_22:
        v40 = v15 + 48;
        v4 = v39;
        if ((unint64_t)v39 < v12)
        {
          v6 = (char *)v16;
          if (v16 < a3)
            continue;
        }
        goto LABEL_51;
      }
      sub_1A919A540((uint64_t)&v34);
      sub_1A919A540((uint64_t)&v36);
LABEL_18:
      v15 = v40;
      v19 = v39 + 48;
      if (v40 != v39 || v40 >= v19)
      {
        v20 = *(_OWORD *)v39;
        v21 = *((_OWORD *)v39 + 2);
        *((_OWORD *)v40 + 1) = *((_OWORD *)v39 + 1);
        *((_OWORD *)v15 + 2) = v21;
        *(_OWORD *)v15 = v20;
      }
      v39 = v19;
      v16 = (unint64_t)v6;
      goto LABEL_22;
    }
    goto LABEL_51;
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A919A4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A919A540(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MTEpisodePubDateLimit.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x6B656557656E6FLL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x736B6565576F7774;
      break;
    case 2:
      result = 0x68746E6F4D656E6FLL;
      break;
    case 3:
      result = 0x74696D694C6F6ELL;
      break;
    default:
      type metadata accessor for MTEpisodePubDateLimit(0);
      result = sub_1A93F921C();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1A919A634()
{
  _QWORD *v0;
  uint64_t result;

  result = 0x6B656557656E6FLL;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      result = 0x736B6565576F7774;
      break;
    case 2:
      result = 0x68746E6F4D656E6FLL;
      break;
    case 3:
      result = 0x74696D694C6F6ELL;
      break;
    default:
      result = sub_1A93F921C();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1A919A6E0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v14 = MEMORY[0x1E0DEE9D8];
    result = sub_1A908182C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v14;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (char *)MEMORY[0x1AF4129DC](v5, a1);
      else
        v6 = (char *)*(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = &v6[OBJC_IVAR___MTServerPodcastEpisode_id];
      swift_beginAccess();
      v9 = *(_QWORD *)v8;
      v10 = *((_QWORD *)v8 + 1);
      swift_bridgeObjectRetain();

      v12 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      if (v12 >= v11 >> 1)
        sub_1A908182C(v11 > 1, v12 + 1, 1);
      ++v5;
      *(_QWORD *)(v14 + 16) = v12 + 1;
      v13 = v14 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v9;
      *(_QWORD *)(v13 + 40) = v10;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A919A860(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void **v11;
  char *v12;
  char *v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  objc_class *v21;
  objc_super v22;
  uint64_t v23;

  result = MEMORY[0x1E0DEE9D8];
  v23 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = v4[4];
      if (v5)
      {
        v19 = v4[3];
        v20 = (void *)v4[5];
        v6 = v4[1];
        v18 = v4[2];
        v8 = *(v4 - 1);
        v7 = *v4;
        v9 = *(v4 - 2);
        v21 = (objc_class *)type metadata accessor for ServerPodcastEpisode();
        v10 = (char *)objc_allocWithZone(v21);
        v11 = (void **)&v10[OBJC_IVAR___MTServerPodcastEpisode_relationships];
        *(_QWORD *)&v10[OBJC_IVAR___MTServerPodcastEpisode_relationships] = 0;
        v12 = &v10[OBJC_IVAR___MTServerPodcastEpisode_id];
        *(_QWORD *)v12 = v9;
        *((_QWORD *)v12 + 1) = v8;
        v13 = &v10[OBJC_IVAR___MTServerPodcastEpisode_type];
        *(_QWORD *)v13 = v7;
        *((_QWORD *)v13 + 1) = v6;
        v14 = &v10[OBJC_IVAR___MTServerPodcastEpisode_href];
        *(_QWORD *)v14 = v18;
        *((_QWORD *)v14 + 1) = v19;
        *(_QWORD *)&v10[OBJC_IVAR___MTServerPodcastEpisode_attributes] = v5;
        swift_beginAccess();
        v15 = *v11;
        *v11 = v20;
        swift_retain_n();
        v16 = v20;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v17 = v16;

        v22.receiver = v10;
        v22.super_class = v21;
        objc_msgSendSuper2(&v22, sel_init);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();

        MEMORY[0x1AF412004]();
        if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A93F834C();
        sub_1A93F8394();
        sub_1A93F8328();
      }
      v4 += 9;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v23;
  }
  return result;
}

uint64_t sub_1A919AA80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1A93F7D58();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F7DB8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_queue);
  aBlock[4] = sub_1A91A82EC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_58;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v13[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v3, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_1A919AC5C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  const char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  os_signpost_id_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  int v38;
  char *v39;
  const char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  __int128 v44[11];
  __int128 v45[11];
  _OWORD v46[11];

  v3 = sub_1A93F75FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v35 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - v11;
  v13 = sub_1A93F762C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v43 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A91A7644((__int128 *)(a1 + 16), v46);
  if (sub_1A919F704((uint64_t)v46) == 8)
  {
    v41 = v9;
    v16 = a1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
    v39 = (char *)sub_1A93F73A4();
    v1 = v17;
    LODWORD(v40) = *(unsigned __int8 *)(v16 + *(int *)(type metadata accessor for StoreFeedUpdater.Update(0) + 28));
    if (qword_1ED2A8670 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v18 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A8658);
  v42 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v43, v18, v13);
  sub_1A93F7620();
  sub_1A93F75D8();
  swift_bridgeObjectRetain();
  v19 = sub_1A93F7620();
  v38 = sub_1A93F8940();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    v35 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v35(v41, v12, v3);
    v20 = swift_slowAlloc();
    v36 = v13;
    v21 = v20;
    v22 = swift_slowAlloc();
    v37 = v3;
    v23 = v22;
    *(_QWORD *)&v45[0] = v22;
    *(_DWORD *)v21 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v44[0] = sub_1A906436C((uint64_t)v39, v1, (uint64_t *)v45);
    v39 = v6;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    v24 = (_DWORD)v40 == 0;
    v25 = "DeltaFeedUpdate";
    if ((_DWORD)v40)
      v25 = "BootstrapFeedUpdate";
    v40 = v25;
    *(_WORD *)(v21 + 12) = 2080;
    if (v24)
      v26 = 0x65654661746C6544;
    else
      v26 = 0xD000000000000013;
    if (v24)
      v27 = 0xEF65746164705564;
    else
      v27 = 0x80000001A94464F0;
    *(_QWORD *)&v44[0] = sub_1A906436C(v26, v27, (uint64_t *)v45);
    v28 = (uint64_t)v39;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    v29 = v41;
    v30 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v19, (os_signpost_type_t)v38, v30, v40, "[identifier=%{name=identifier}s] %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    v31 = v23;
    v3 = v37;
    MEMORY[0x1AF41411C](v31, -1, -1);
    v32 = v21;
    v13 = v36;
    MEMORY[0x1AF41411C](v32, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v29, v3);
    v35((char *)v28, v12, v3);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v12, v3);
  }
  sub_1A93F765C();
  swift_allocObject();
  v33 = sub_1A93F7650();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v13);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_overallInterval) = v33;
  swift_release();
  sub_1A91A82F4((uint64_t)v45);
  sub_1A91A7644(v45, v44);
  return sub_1A919B0A0(v44);
}

uint64_t sub_1A919B0A0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];
  __int128 v19[11];

  v2 = v1;
  v4 = sub_1A93F7D58();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v16 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7DB8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A91A7644(a1, v19);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v2;
  sub_1A91A7644(v19, (_OWORD *)(v12 + 24));
  aBlock[4] = sub_1A91A82B0;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_55;
  v13 = _Block_copy(aBlock);
  swift_retain();
  sub_1A91A7684((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_1A919EBB8);
  sub_1A93F7D88();
  v17 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v5, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

void sub_1A919B2F8(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  int v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  os_log_t v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76[22];
  _OWORD v77[15];
  __int128 v78[11];
  _OWORD v79[11];
  _OWORD v80[11];

  v2 = v1;
  v4 = sub_1A93F7638();
  v59 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  MEMORY[0x1E0C80A78](v4);
  v57 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v56 = (char *)&v52 - v7;
  v8 = sub_1A93F762C();
  MEMORY[0x1E0C80A78](v8);
  v64 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v62 = (char *)&v52 - v11;
  v12 = sub_1A93F75FC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v58 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v63 = (char *)&v52 - v16;
  MEMORY[0x1E0C80A78](v17);
  v61 = (char *)&v52 - v18;
  MEMORY[0x1E0C80A78](v19);
  v71 = (char *)&v52 - v20;
  MEMORY[0x1E0C80A78](v21);
  v70 = (char *)&v52 - v22;
  MEMORY[0x1E0C80A78](v23);
  v69 = (char *)&v52 - v24;
  MEMORY[0x1E0C80A78](v25);
  v68 = (char *)&v52 - v26;
  MEMORY[0x1E0C80A78](v27);
  v67 = (char *)&v52 - v28;
  MEMORY[0x1E0C80A78](v29);
  v66 = (char *)&v52 - v30;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v52 - v32;
  MEMORY[0x1E0C80A78](v34);
  v65 = (char *)&v52 - v35;
  v73 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1E0C80A78](v73);
  v37 = (char *)&v52 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A91A7644(a1, v78);
  sub_1A91A7644((__int128 *)(v2 + 16), v79);
  sub_1A91A7644((__int128 *)(v2 + 16), v80);
  sub_1A91A7644(v78, (_OWORD *)(v2 + 16));
  sub_1A91A7684((uint64_t)v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_1A919EBB8);
  sub_1A91A7684((uint64_t)v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_1A919EBB8);
  sub_1A91A7684((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_1A919EF58);
  if (qword_1ED2A87E0 != -1)
    swift_once();
  v38 = sub_1A93F7698();
  __swift_project_value_buffer(v38, (uint64_t)qword_1ED2A87C0);
  sub_1A91A7684((uint64_t)v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_1A919EBB8);
  sub_1A91A7684((uint64_t)v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_1A919EBB8);
  swift_retain();
  v39 = sub_1A93F7674();
  v40 = sub_1A93F87B4();
  v41 = v40;
  v42 = os_log_type_enabled(v39, v40);
  v75 = v33;
  if (v42)
  {
    v43 = swift_slowAlloc();
    v74 = v13;
    v44 = v43;
    v55 = swift_slowAlloc();
    v76[0] = v55;
    *(_DWORD *)v44 = 141558531;
    *(_QWORD *)&v77[0] = 1752392040;
    v54 = v41;
    sub_1A93F8AA8();
    *(_WORD *)(v44 + 12) = 2081;
    v72 = v12;
    v52 = v44 + 14;
    sub_1A9064630(v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, (uint64_t)v37, type metadata accessor for StoreFeedUpdater.Update);
    v45 = (uint64_t *)&v37[*(int *)(v73 + 32)];
    v53 = v39;
    v47 = *v45;
    v46 = v45[1];
    swift_bridgeObjectRetain();
    sub_1A9064714((uint64_t)v37, type metadata accessor for StoreFeedUpdater.Update);
    *(_QWORD *)&v77[0] = sub_1A906436C(v47, v46, v76);
    sub_1A93F8AA8();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 22) = 2082;
    sub_1A91A7644(v78, v77);
    sub_1A91A73D8();
    *(_QWORD *)&v77[0] = sub_1A906436C(v48, v49, v76);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A91A7684((uint64_t)v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_1A919EF58);
    sub_1A91A7684((uint64_t)v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_1A919EF58);
    v39 = v53;
    _os_log_impl(&dword_1A904E000, v53, (os_log_type_t)v54, "Job %{private,mask.hash}s: %{public}s", (uint8_t *)v44, 0x20u);
    v50 = v55;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v50, -1, -1);
    MEMORY[0x1AF41411C](v44, -1, -1);
  }
  else
  {
    swift_release();
    sub_1A91A7684((uint64_t)v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_1A919EF58);
    sub_1A91A7684((uint64_t)v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_1A919EF58);
  }

  sub_1A919E614();
  sub_1A91A7644(v78, v77);
  v51 = (char *)&loc_1A919B890 + *((int *)qword_1A919D398 + sub_1A919F704((uint64_t)v77));
  __asm { BR              X10 }
}

uint64_t sub_1A919D3C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *updated;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  void *v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  NSObject *v35;
  int v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  os_signpost_id_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _QWORD v60[2];
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  char v72;
  __int128 v73;
  __int128 v74;
  unint64_t v75;
  char v76;

  v1 = v0;
  v65 = sub_1A93F75FC();
  v2 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v63 = (char *)v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v66 = (char *)v60 - v5;
  updated = (int *)type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1E0C80A78](updated);
  v8 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v12);
  v68 = (uint64_t)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v74 + 1) = &type metadata for Podcasts;
  v14 = sub_1A90A4238();
  v75 = v14;
  LOBYTE(v73) = 39;
  v15 = sub_1A93F7500();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v73);
  if ((v15 & 1) != 0
    && (*((_QWORD *)&v74 + 1) = &type metadata for Podcasts,
        v75 = v14,
        LOBYTE(v73) = 52,
        v16 = sub_1A93F7500(),
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v73),
        (v16 & 1) != 0))
  {
    v17 = &unk_1E54D6D18;
  }
  else
  {
    v17 = &unk_1E54D6D40;
  }
  v62 = (uint64_t)v17;
  v64 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405950;
  *(_BYTE *)(inited + 32) = 3;
  *(_QWORD *)(inited + 40) = &unk_1E54D6D68;
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = &unk_1E54D6D90;
  v61 = sub_1A91129C4(inited);
  v75 = 0;
  v73 = 0u;
  v74 = 0u;
  v76 = 4;
  v72 = 1;
  v71 = 1;
  v70 = 4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1A9405520;
  v20 = v1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  v69 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update + updated[7]);
  *(_QWORD *)(v19 + 32) = sub_1A93F9060();
  *(_QWORD *)(v19 + 40) = v21;
  LOBYTE(v69) = 1;
  v22 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v11, 1, 1, v22);
  v23 = *(_BYTE *)(v20 + updated[9]);
  v60[1] = v20;
  sub_1A9064630(v20, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
  v67 = v1;
  if ((v23 & 1) != 0)
    v24 = 0;
  else
    v24 = v8[updated[11]];
  sub_1A9064714((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
  v25 = MEMORY[0x1E0DEE9D8];
  v26 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  v27 = sub_1A9112728(v25);
  sub_1A911273C(v25);
  v29 = v28;
  v30 = sub_1A9112844(v25);
  v31 = sub_1A9112858(v25);
  *((_QWORD *)&v59 + 1) = sub_1A911286C(v25);
  *(_QWORD *)&v59 = v31;
  *((_QWORD *)&v58 + 1) = v25;
  *((_QWORD *)&v57 + 1) = v30;
  *(_QWORD *)&v58 = v61;
  *(_QWORD *)&v57 = v25;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&v73, &v72, &v71, &v70, v26, v27, v29, v62, v68, v57, v58, v25, v19, (char *)&v69, 0, 1, v59, 0, 1,
    0,
    (uint64_t)v11,
    0,
    0,
    v24,
    0,
    0,
    v25,
    0,
    0,
    2);
  if (qword_1ED2A8670 != -1)
    swift_once();
  v32 = sub_1A93F762C();
  __swift_project_value_buffer(v32, (uint64_t)qword_1ED2A8658);
  v33 = v67;
  swift_retain_n();
  v34 = v66;
  sub_1A93F75F0();
  v35 = sub_1A93F7620();
  v36 = sub_1A93F8940();
  v37 = sub_1A93F8A6C();
  v38 = v65;
  if ((v37 & 1) != 0)
  {
    v39 = v64;
    v40 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v41 = v63;
    v40(v63, v34, v65);
    v42 = (uint8_t *)swift_slowAlloc();
    v43 = swift_slowAlloc();
    *(_QWORD *)&v73 = v43;
    LODWORD(v62) = v36;
    *(_DWORD *)v42 = 136315138;
    v44 = sub_1A93F73A4();
    v69 = sub_1A906436C(v44, v45, (uint64_t *)&v73);
    v33 = v67;
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    v46 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v35, (os_signpost_type_t)v62, v46, "MAPINetwork", "[identifier=%{name=identifier}s] MediaAPIRequestShowMetadata", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v43, -1, -1);
    v47 = v42;
    v34 = v66;
    MEMORY[0x1AF41411C](v47, -1, -1);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
  }
  else
  {
    swift_release_n();

    v39 = v64;
    v40 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v41 = v63;
  }
  v40(v41, v34, v38);
  sub_1A93F765C();
  swift_allocObject();
  v48 = sub_1A93F7650();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v38);
  v50 = *(_QWORD *)(v33 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController + 24);
  v49 = *(_QWORD *)(v33 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v33 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController), v50);
  v51 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A7270);
  v52 = swift_allocObject();
  swift_weakInit();
  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = v48;
  *(_QWORD *)(v53 + 24) = v52;
  v54 = sub_1A9066D74(&qword_1ED2A7268, qword_1ED2A7270, (uint64_t)&protocol conformance descriptor for ServerGenericResponse<A>);
  swift_retain();
  v55 = v68;
  MediaRequestControllerProtocol.perform<A>(params:parsing:callback:)(v68, v51, (uint64_t)sub_1A91A7764, v53, v50, v51, v49, v54);
  swift_release();
  swift_release();
  return sub_1A9064714(v55, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
}

void sub_1A919DABC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t updated;
  void *v7;
  _QWORD *v8;
  void *v9;
  id v10;
  _OWORD v11[11];
  __int128 aBlock;
  __int128 v13;
  void (*v14)();
  _QWORD *v15;
  void *v16;

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  if (*(_BYTE *)(v4 + *(int *)(type metadata accessor for StoreFeedUpdater.Update(0) + 28)) == 1)
  {
    v14 = 0;
    aBlock = 0u;
    v13 = 0u;
    LOBYTE(v15) = 0x80;
    v16 = a1;
    sub_1A91A77DC((uint64_t)&aBlock);
    sub_1A91A7644(&aBlock, v11);
    v5 = a1;
    sub_1A919B0A0(v11);
    sub_1A919F1E0(0, 0, 0, 0, 0, 0x80u);

  }
  else
  {
    LOBYTE(aBlock) = 5;
    updated = FeedUpdateType.beginInterval()();
    v7 = *(void **)(v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx);
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = updated;
    v8[3] = v2;
    v8[4] = a1;
    v14 = sub_1A91A77D0;
    v15 = v8;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v13 = sub_1A908A91C;
    *((_QWORD *)&v13 + 1) = &block_descriptor_15;
    v9 = _Block_copy(&aBlock);
    v10 = a1;
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v7, sel_performBlock_, v9);
    _Block_release(v9);
    swift_release();
  }
}

void sub_1A919DC48(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, _QWORD);
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  id v15;
  void *v16;
  _BYTE *v17;
  _OWORD v18[11];
  __int128 v19[10];
  char v20;

  v3 = v2;
  v6 = v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  v7 = *(uint64_t (**)(void *, uint64_t, _QWORD))(v6
                                                         + *(int *)(type metadata accessor for FeedUpdateRequest() + 60));
  if (!v7)
    goto LABEL_4;
  LOBYTE(v19[0]) = 6;
  swift_retain();
  FeedUpdateType.beginInterval()();
  v8 = (void *)v7(a1, 1, *(_QWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx));
  LOBYTE(v19[0]) = 6;
  FeedUpdateType.endInterval(for:)();
  if (objc_msgSend(v8, sel_shouldContinue))
  {
    swift_release();

    sub_1A9085818((uint64_t)v7);
LABEL_4:
    v9 = *(_OWORD *)(a2 + 144);
    v19[8] = *(_OWORD *)(a2 + 128);
    v19[9] = v9;
    v20 = *(_BYTE *)(a2 + 160);
    v10 = *(_OWORD *)(a2 + 80);
    v19[4] = *(_OWORD *)(a2 + 64);
    v19[5] = v10;
    v11 = *(_OWORD *)(a2 + 112);
    v19[6] = *(_OWORD *)(a2 + 96);
    v19[7] = v11;
    v12 = *(_OWORD *)(a2 + 16);
    v19[0] = *(_OWORD *)a2;
    v19[1] = v12;
    v13 = *(_OWORD *)(a2 + 48);
    v19[2] = *(_OWORD *)(a2 + 32);
    v19[3] = v13;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a1;
    v15 = a1;
    sub_1A91A115C(v19, (uint64_t)sub_1A91A7A18, v14);
    swift_release();
    return;
  }
  sub_1A9069320();
  v16 = (void *)swift_allocError();
  *v17 = 11;
  *(_QWORD *)&v19[0] = v16;
  sub_1A91A7784((uint64_t)v19);
  sub_1A91A7644(v19, v18);
  sub_1A919B0A0(v18);
  swift_release();

  sub_1A9085818((uint64_t)v7);
}

uint64_t sub_1A919DE14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, _QWORD);
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  _OWORD v12[11];
  __int128 v13[3];
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = v2;
  v6 = v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  v7 = *(void (**)(uint64_t, uint64_t, _QWORD))(v6
                                                       + *(int *)(type metadata accessor for FeedUpdateRequest() + 64));
  if (v7)
  {
    LOBYTE(v13[0]) = 7;
    swift_retain();
    FeedUpdateType.beginInterval()();
    v7(a1, a2, *(_QWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx));
    LOBYTE(v13[0]) = 7;
    FeedUpdateType.endInterval(for:)();
    sub_1A9085818((uint64_t)v7);
    swift_release();
  }
  v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 48);
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 56);
  v10 = *(_OWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 16);
  v13[0] = *(_OWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData);
  v13[1] = v10;
  v13[2] = *(_OWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 32);
  v14 = v8;
  v15 = v9;
  v16 = 0;
  sub_1A91A77F4((uint64_t)v13);
  sub_1A91A7644(v13, v12);
  swift_bridgeObjectRetain();
  sub_1A919B0A0(v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A919DF3C(__int128 *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  os_log_t v22;
  uint64_t v23;
  uint64_t updated;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  _QWORD *v43;
  void *v44;
  id v45;
  uint64_t v46;
  void (**v47)(void *, _QWORD);
  void (*v48)(uint64_t, uint64_t *);
  os_log_t v50;
  os_log_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  char v61;
  _OWORD v62[11];

  v3 = v2;
  v6 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A91A7644(a1, v62);
  if (sub_1A919F704((uint64_t)v62) - 3 >= 3)
  {
    LOBYTE(v56) = 17;
    updated = FeedUpdateType.beginInterval()();
    if (qword_1ED2A87E0 != -1)
      swift_once();
    v25 = sub_1A93F7698();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED2A87C0);
    swift_retain();
    v26 = a2;
    v27 = sub_1A93F7674();
    v28 = sub_1A93F879C();
    v29 = v28;
    v30 = &unk_1ED2B8000;
    if (os_log_type_enabled(v27, v28))
    {
      v31 = swift_slowAlloc();
      v54 = updated;
      v32 = v31;
      v52 = (_QWORD *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v53 = v33;
      *(_DWORD *)v32 = 141558531;
      v55 = 1752392040;
      v56 = v33;
      sub_1A93F8AA8();
      *(_WORD *)(v32 + 12) = 2081;
      LODWORD(v51) = v29;
      v50 = v27;
      sub_1A9064630(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, (uint64_t)v8, type metadata accessor for StoreFeedUpdater.Update);
      v34 = (uint64_t *)&v8[*(int *)(v6 + 32)];
      v35 = *v34;
      v36 = v34[1];
      swift_bridgeObjectRetain();
      sub_1A9064714((uint64_t)v8, type metadata accessor for StoreFeedUpdater.Update);
      v55 = sub_1A906436C(v35, v36, &v56);
      sub_1A93F8AA8();
      swift_release();
      v30 = (_QWORD *)&unk_1ED2B8000;
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 22) = 2112;
      v37 = sub_1A93F711C();
      v55 = v37;
      sub_1A93F8AA8();
      v38 = v52;
      *v52 = v37;

      v39 = v50;
      _os_log_impl(&dword_1A904E000, v50, (os_log_type_t)v51, "Job %{private,mask.hash}s: Failed with error %@", (uint8_t *)v32, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v38, -1, -1);
      v40 = v53;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v40, -1, -1);
      MEMORY[0x1AF41411C](v32, -1, -1);

    }
    else
    {
      swift_release();

    }
    v46 = v3 + v30[320];
    v47 = (void (**)(void *, _QWORD))(v46 + *(int *)(type metadata accessor for FeedUpdateRequest() + 56));
    if (*v47)
      (*v47)(a2, 0);
    v48 = *(void (**)(uint64_t, uint64_t *))(v3
                                                    + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_completion);
    v56 = (uint64_t)a2;
    v57 = 0u;
    v58 = 0u;
    v59 = 0u;
    v60 = 0;
    v61 = 1;
    v48(v46, &v56);
    LOBYTE(v55) = 17;
  }
  else
  {
    LOBYTE(v56) = 19;
    v9 = FeedUpdateType.beginInterval()();
    if (qword_1ED2A87E0 != -1)
      swift_once();
    v10 = sub_1A93F7698();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A87C0);
    swift_retain();
    v11 = a2;
    v12 = sub_1A93F7674();
    v13 = sub_1A93F879C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v54 = v9;
      v15 = v14;
      v52 = (_QWORD *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v53 = v16;
      *(_DWORD *)v15 = 141558531;
      v55 = 1752392040;
      v56 = v16;
      sub_1A93F8AA8();
      *(_WORD *)(v15 + 12) = 2081;
      v50 = (os_log_t)(v15 + 14);
      v51 = v12;
      sub_1A9064630(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, (uint64_t)v8, type metadata accessor for StoreFeedUpdater.Update);
      v17 = (uint64_t *)&v8[*(int *)(v6 + 32)];
      v19 = *v17;
      v18 = v17[1];
      swift_bridgeObjectRetain();
      sub_1A9064714((uint64_t)v8, type metadata accessor for StoreFeedUpdater.Update);
      v55 = sub_1A906436C(v19, v18, &v56);
      sub_1A93F8AA8();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 22) = 2112;
      v20 = sub_1A93F711C();
      v55 = v20;
      sub_1A93F8AA8();
      v21 = v52;
      *v52 = v20;

      v22 = v51;
      _os_log_impl(&dword_1A904E000, v51, v13, "Job %{private,mask.hash}s: Partially Succeeded with error %@", (uint8_t *)v15, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v21, -1, -1);
      v23 = v53;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v23, -1, -1);
      MEMORY[0x1AF41411C](v15, -1, -1);

    }
    else
    {
      swift_release();

    }
    LOBYTE(v56) = 18;
    v41 = FeedUpdateType.beginInterval()();
    v42 = *(void **)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx);
    v43 = (_QWORD *)swift_allocObject();
    v43[2] = v41;
    v43[3] = v3;
    v43[4] = a2;
    *((_QWORD *)&v58 + 1) = sub_1A91A8178;
    *(_QWORD *)&v59 = v43;
    v56 = MEMORY[0x1E0C809B0];
    *(_QWORD *)&v57 = 1107296256;
    *((_QWORD *)&v57 + 1) = sub_1A908A91C;
    *(_QWORD *)&v58 = &block_descriptor_37;
    v44 = _Block_copy(&v56);
    swift_retain();
    v45 = a2;
    swift_retain();
    swift_release();
    objc_msgSend(v42, sel_performBlock_, v44);
    _Block_release(v44);
    swift_release();
    LOBYTE(v56) = 19;
  }
  FeedUpdateType.endInterval(for:)();
  return swift_release();
}

void sub_1A919E614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  const char *v16;
  uint8_t *v17;
  os_signpost_id_t v18;
  os_log_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  os_log_t v22;
  int v23;
  NSObject *v24;
  int v25;

  v1 = sub_1A93F7638();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F75FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentInterval))
    return;
  v12 = v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalName;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalName + 17) & 1) != 0)
    return;
  v24 = *(NSObject **)v12;
  v25 = *(unsigned __int8 *)(v12 + 16);
  v13 = qword_1ED2A8670;
  swift_retain();
  if (v13 != -1)
    swift_once();
  v14 = sub_1A93F762C();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A8658);
  v15 = sub_1A93F7620();
  sub_1A93F7644();
  v23 = sub_1A93F8934();
  if ((sub_1A93F8A6C() & 1) == 0)
    goto LABEL_9;
  v22 = v15;
  if ((v25 & 1) == 0)
  {
    v15 = v24;
    if (!v24)
    {
      __break(1u);
LABEL_9:

      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      swift_release();
      return;
    }
    goto LABEL_14;
  }
  if ((unint64_t)v24 >> 32)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v24 >> 11 == 27)
  {
LABEL_21:
    __break(1u);
    return;
  }
  if (v24 >> 16 > 0x10)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v15 = sub_1A910F87C();
LABEL_14:
  swift_retain();
  sub_1A93F7668();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v4, v1) == *MEMORY[0x1E0DF2190])
  {
    v16 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v16 = "";
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v17 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v17 = 0;
  v18 = sub_1A93F75E4();
  v19 = v22;
  _os_signpost_emit_with_name_impl(&dword_1A904E000, v22, (os_signpost_type_t)v23, v18, (const char *)v15, v16, v17, 2u);
  MEMORY[0x1AF41411C](v17, -1, -1);

  v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v11, v5);
  swift_release();
  v20(v8, v5);
}

uint64_t sub_1A919E8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD v4[11];

  sub_1A91A7644((__int128 *)(v0 + 16), v4);
  sub_1A91A7684((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_1A919EF58);
  sub_1A9064714(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, type metadata accessor for StoreFeedUpdater.Update);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_signpostID;
  v2 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1A9064714(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_bagConfiguration, (uint64_t (*)(_QWORD))type metadata accessor for FeedManagerBagConfiguration);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider);

  swift_release();
  sub_1A91A8334(*(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalMetadata), *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalMetadata + 8));
  swift_release();
  return v0;
}

uint64_t sub_1A919EA44()
{
  sub_1A919E8F0();
  return swift_deallocClassInstance();
}

uint64_t sub_1A919EA68()
{
  return type metadata accessor for StoreFeedUpdaterJob();
}

uint64_t type metadata accessor for StoreFeedUpdaterJob()
{
  uint64_t result;

  result = qword_1ED2A6D70;
  if (!qword_1ED2A6D70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A919EAAC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for StoreFeedUpdater.Update(319);
  if (v1 <= 0x3F)
  {
    result = sub_1A93F75FC();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for FeedManagerBagConfiguration();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

id sub_1A919EBB8(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, id a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16, id a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned __int8 a22,char a23)
{
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  unsigned __int8 v31;

  if ((a23 & 1) != 0)
    v23 = 8;
  else
    v23 = 0;
  v24 = a6;
  v25 = a5;
  v26 = a4;
  v27 = a3;
  v28 = a2;
  switch(v23 & 0xFFFFFFF8 | (a22 >> 3) & 7)
  {
    case 0u:
    case 6u:
      return result;
    case 1u:
      sub_1A919EE40((uint64_t)result, a2, a3, a4, a5, a6);
      result = a7;
      return result;
    case 2u:
      v31 = a7;
      v29 = result;
      sub_1A919EE40(v28, v27, v26, v25, v24, v31);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A919EEC4(a11, a12, a13, a14, a15, a16);
      result = a17;
      a2 = a18;
      a3 = a19;
      a5 = a21;
      a4 = a20;
      LOBYTE(a6) = a22 & 0xC7;
      goto LABEL_9;
    case 3u:
      goto LABEL_9;
    case 4u:
      sub_1A919EE40((uint64_t)result, a2, a3, a4, a5, a6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A919EEC4(a10, a11, a12, a13, a14, a15);
      result = a16;
      a2 = (uint64_t)a17;
      a3 = a18;
      a4 = a19;
      LOBYTE(a6) = a21;
      a5 = a20;
LABEL_9:
      result = (id)sub_1A919EE40((uint64_t)result, a2, a3, a4, a5, a6);
      break;
    case 5u:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 7u:
      result = sub_1A919EED8(result, a2, a3, a4, a5, a6, (int)a7, a8, a9);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A919EE40(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 >> 6 == 1)
    return sub_1A919EE64(result, a2, a3, a4, a5, a6 & 0x3F);
  if (!(a6 >> 6))
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1A919EE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t result;

  if (a6 < 2u)
    return swift_bridgeObjectRetain();
  if (a6 == 3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  result = a2;
  if (a6 == 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1A919EEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 0xFF)
    return sub_1A919EE64(a1, a2, a3, a4, a5, a6);
  return a1;
}

id sub_1A919EED8(id result, int a2, int a3, int a4, int a5, int a6, int a7, id a8, char a9)
{
  if (a9 == 1)
    return result;
  if (!a9)
    return (id)swift_bridgeObjectRetain();
  return result;
}

void destroy for StoreFeedUpdaterJob.State(uint64_t a1)
{
  sub_1A919EF58(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(void **)(a1 + 120), *(void **)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_BYTE *)(a1 + 168),
    *(_BYTE *)(a1 + 169));
}

void sub_1A919EF58(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned __int8 a22,char a23)
{
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v30;

  if ((a23 & 1) != 0)
    v23 = 8;
  else
    v23 = 0;
  v24 = a6;
  v25 = a5;
  v26 = a4;
  v27 = a3;
  v28 = a2;
  switch(v23 & 0xFFFFFFF8 | (a22 >> 3) & 7)
  {
    case 0u:
    case 6u:
      goto LABEL_6;
    case 1u:
      sub_1A919F1E0((uint64_t)a1, a2, a3, a4, a5, a6);
      a1 = a7;
LABEL_6:

      return;
    case 2u:
      v30 = a7;

      sub_1A919F1E0(v28, v27, v26, v25, v24, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A919F204(a11, a12, a13, a14, a15, a16);
      a1 = a17;
      a2 = a18;
      a3 = a19;
      a5 = a21;
      a4 = a20;
      LOBYTE(a6) = a22 & 0xC7;
      goto LABEL_9;
    case 3u:
      goto LABEL_9;
    case 4u:
      sub_1A919F1E0((uint64_t)a1, a2, a3, a4, a5, a6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A919F204(a10, a11, a12, a13, a14, a15);
      a1 = a16;
      a2 = (uint64_t)a17;
      a3 = a18;
      a4 = a19;
      LOBYTE(a6) = a21;
      a5 = a20;
LABEL_9:
      sub_1A919F1E0((uint64_t)a1, a2, a3, a4, a5, a6);
      break;
    case 5u:
      swift_bridgeObjectRelease();
      break;
    case 7u:
      sub_1A919F218(a1, a2, a3, a4, a5, a6, (int)a7, a8, a9);
      break;
    default:
      return;
  }
}

uint64_t sub_1A919F1E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 >> 6 == 1)
    return sub_1A9114BD0(result, a2, a3, a4, a5, a6 & 0x3F);
  if (!(a6 >> 6))
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A919F204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 0xFF)
    return sub_1A9114BD0(a1, a2, a3, a4, a5, a6);
  return a1;
}

void sub_1A919F218(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, id a8, char a9)
{
  if (a9 == 1)
  {

  }
  else if (!a9)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for StoreFeedUpdaterJob.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  char v26;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(void **)(a2 + 48);
  v6 = *(void **)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(void **)(a2 + 120);
  v20 = *(void **)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_QWORD *)(a2 + 160);
  v25 = *(_BYTE *)(a2 + 168);
  v26 = *(_BYTE *)(a2 + 169);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(id *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  sub_1A919EBB8(*(id *)a2, v9, v10, v11, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26);
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_BYTE *)(a1 + 168) = v25;
  *(_BYTE *)(a1 + 169) = v26;
  return a1;
}

uint64_t assignWithCopy for StoreFeedUpdaterJob.State(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  unsigned __int8 v27;
  char v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  char v43;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(void **)(a2 + 48);
  v10 = *(void **)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v30 = *(_QWORD *)(a2 + 72);
  v31 = *(_QWORD *)(a2 + 80);
  v32 = *(_QWORD *)(a2 + 88);
  v33 = *(_QWORD *)(a2 + 96);
  v34 = *(_QWORD *)(a2 + 104);
  v35 = *(_QWORD *)(a2 + 112);
  v36 = *(void **)(a2 + 120);
  v37 = *(void **)(a2 + 128);
  v38 = *(_QWORD *)(a2 + 136);
  v39 = *(_QWORD *)(a2 + 144);
  v40 = *(_QWORD *)(a2 + 152);
  v41 = *(_QWORD *)(a2 + 160);
  v42 = *(_BYTE *)(a2 + 168);
  v43 = *(_BYTE *)(a2 + 169);
  sub_1A919EBB8(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43);
  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v18 = *(void **)(a1 + 48);
  v19 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v30;
  *(_QWORD *)(a1 + 80) = v31;
  *(_QWORD *)(a1 + 88) = v32;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v33;
  *(_QWORD *)(a1 + 104) = v34;
  *(_QWORD *)(a1 + 112) = v35;
  *(_QWORD *)(a1 + 120) = v36;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v37;
  *(_QWORD *)(a1 + 136) = v38;
  *(_QWORD *)(a1 + 144) = v39;
  *(_QWORD *)(a1 + 152) = v40;
  v26 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = v41;
  v27 = *(_BYTE *)(a1 + 168);
  *(_BYTE *)(a1 + 168) = v42;
  v28 = *(_BYTE *)(a1 + 169);
  *(_BYTE *)(a1 + 169) = v43;
  sub_1A919EF58(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((void **)&v23 + 1), (void *)v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    v27,
    v28);
  return a1;
}

__n128 __swift_memcpy170_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_OWORD *)(a1 + 154) = *(__int128 *)((char *)a2 + 154);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for StoreFeedUpdaterJob.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  unsigned __int8 v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v3 = *(_QWORD *)(a2 + 160);
  v4 = *(_BYTE *)(a2 + 168);
  v5 = *(_BYTE *)(a2 + 169);
  v6 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(void **)(a1 + 48);
  v13 = *(void **)(a1 + 56);
  v14 = *(_OWORD *)(a1 + 64);
  v15 = *(_OWORD *)(a1 + 80);
  v16 = *(_OWORD *)(a1 + 96);
  v17 = *(_OWORD *)(a1 + 112);
  v18 = *(_OWORD *)(a1 + 128);
  v19 = *(_OWORD *)(a1 + 144);
  v20 = *(_QWORD *)(a1 + 160);
  v21 = *(_BYTE *)(a1 + 168);
  v22 = *(_BYTE *)(a1 + 169);
  v23 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v23;
  v24 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v24;
  v25 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v25;
  v26 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v26;
  v27 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v27;
  *(_QWORD *)(a1 + 160) = v3;
  *(_BYTE *)(a1 + 168) = v4;
  *(_BYTE *)(a1 + 169) = v5;
  sub_1A919EF58(v6, v8, v7, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((void **)&v17 + 1), (void *)v18, *((uint64_t *)&v18 + 1), v19,
    *((uint64_t *)&v19 + 1),
    v20,
    v21,
    v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreFeedUpdaterJob.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F8 && *(_BYTE *)(a1 + 170))
    return (*(_DWORD *)a1 + 2040);
  v3 = ((*(unsigned __int8 *)(a1 + 168) >> 3) & 7 | (8 * *(unsigned __int8 *)(a1 + 169))) ^ 0x7FF;
  if (v3 >= 0x7F7)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for StoreFeedUpdaterJob.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7F7)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 168) = 0;
    *(_QWORD *)result = a2 - 2040;
    if (a3 >= 0x7F8)
      *(_BYTE *)(result + 170) = 1;
  }
  else
  {
    if (a3 >= 0x7F8)
      *(_BYTE *)(result + 170) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 160) = 0;
      *(_OWORD *)(result + 128) = 0u;
      *(_OWORD *)(result + 144) = 0u;
      *(_OWORD *)(result + 96) = 0u;
      *(_OWORD *)(result + 112) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 80) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 168) = 8 * (-(char)a2 & 7);
      *(_BYTE *)(result + 169) = -a2 >> 3;
    }
  }
  return result;
}

uint64_t sub_1A919F704(uint64_t a1)
{
  int v1;
  unsigned int v2;

  if (*(_BYTE *)(a1 + 169))
    v1 = 8;
  else
    v1 = 0;
  v2 = v1 & 0xFFFFFFF8 | (*(unsigned __int8 *)(a1 + 168) >> 3) & 7;
  if (v2 <= 7)
    return v2;
  else
    return (*(_DWORD *)a1 + 8);
}

uint64_t sub_1A919F730(uint64_t result)
{
  *(_BYTE *)(result + 168) &= 0xC7u;
  return result;
}

uint64_t sub_1A919F740(uint64_t result, unsigned int a2)
{
  if (a2 < 8)
  {
    *(_BYTE *)(result + 168) = *(_BYTE *)(result + 168) & 0xC7 | (8 * (a2 & 7));
  }
  else
  {
    *(_QWORD *)result = a2 - 8;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_BYTE *)(result + 168) = 0;
  }
  *(_BYTE *)(result + 169) = a2 > 7;
  return result;
}

ValueMetadata *type metadata accessor for StoreFeedUpdaterJob.State()
{
  return &type metadata for StoreFeedUpdaterJob.State;
}

void sub_1A919F7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  id *v24;
  uint64_t v25;
  NSObject *v26;
  os_signpost_type_t v27;
  const char *v28;
  os_signpost_type_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  int v34;
  const char *v35;
  int v36;
  int v37;
  const char *v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint8_t *v42;
  os_signpost_id_t v43;
  void (*v44)(_BYTE *, uint64_t);
  id *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint8_t *v49;
  os_signpost_id_t v50;
  void (*v51)(_BYTE *, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54;
  int v55;
  BOOL v56;
  char *v57;
  uint64_t v58;
  _BYTE *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE v64[4];
  int v65;
  uint64_t v66;
  const char *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD v71[11];
  __int128 v72[11];

  v67 = (const char *)sub_1A93F7638();
  v7 = *((_QWORD *)v67 - 1);
  MEMORY[0x1E0C80A78](v67);
  v9 = &v64[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v64[-v11];
  v13 = sub_1A93F75FC();
  v69 = *(_QWORD *)(v13 - 8);
  v70 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = &v64[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v68 = &v64[-v17];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v64[-v19];
  v21 = *(_QWORD *)a3;
  v22 = *(unsigned __int8 *)(a3 + 8);
  v23 = a5 + 16;
  if (v22 != 1)
  {
    v31 = qword_1ED2A8670;
    swift_bridgeObjectRetain();
    if (v31 != -1)
      swift_once();
    v32 = sub_1A93F762C();
    __swift_project_value_buffer(v32, (uint64_t)qword_1ED2A8658);
    v33 = sub_1A93F7620();
    sub_1A93F7644();
    v34 = sub_1A93F8934();
    if ((sub_1A93F8A6C() & 1) != 0)
    {
      swift_retain();
      sub_1A93F7668();
      swift_release();
      v35 = v67;
      v36 = (*(uint64_t (**)(_BYTE *, const char *))(v7 + 88))(v9, v67);
      v37 = *MEMORY[0x1E0DF2190];
      v66 = v23;
      v65 = v34;
      if (v36 == v37)
      {
        v38 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_BYTE *, const char *))(v7 + 8))(v9, v35);
        v38 = "SUCCESS";
      }
      v47 = v68;
      v46 = v69;
      v48 = v70;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v69 + 16))(v68, v15, v70);
      v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v49 = 0;
      v50 = sub_1A93F75E4();
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v33, (os_signpost_type_t)v65, v50, "MAPINetwork", v38, v49, 2u);
      MEMORY[0x1AF41411C](v49, -1, -1);

      v51 = *(void (**)(_BYTE *, uint64_t))(v46 + 8);
      v51(v15, v48);
      v51(v47, v48);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v69 + 8))(v15, v70);
    }
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      v61 = sub_1A93F8E5C();
      sub_1A909CFC0((id)v21, 0);
      if (v61)
        goto LABEL_23;
    }
    else if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_23:
      if ((v21 & 0xC000000000000001) != 0)
      {
        v52 = (char *)MEMORY[0x1AF4129DC](0, v21);
      }
      else
      {
        if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v52 = (char *)*(id *)(v21 + 32);
      }
      v53 = v52;
      sub_1A909CFC0((id)v21, 0);
      v54 = *(_QWORD *)&v53[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes];
      if (!v54 || ((v55 = *(unsigned __int8 *)(v54 + 48), v55 != 2) ? (v56 = (v55 & 1) == 0) : (v56 = 0), !v56))
      {
        swift_beginAccess();
        if (swift_weakLoadStrong())
        {
          *(_QWORD *)&v72[0] = v53;
          sub_1A91A7770((uint64_t)v72);
          sub_1A91A7644(v72, v71);
          v57 = v53;
          sub_1A919B0A0(v71);

          swift_release();
          return;
        }
        goto LABEL_35;
      }
      swift_beginAccess();
      if (!swift_weakLoadStrong())
      {
LABEL_35:

        return;
      }
      sub_1A9069320();
      v58 = swift_allocError();
      *v59 = 16;
      *(_QWORD *)&v72[0] = v58;
      sub_1A91A7784((uint64_t)v72);
      sub_1A91A7644(v72, v71);
      sub_1A919B0A0(v71);

      swift_release();
      v60 = (void *)v58;
LABEL_39:

      return;
    }
    sub_1A909CFC0((id)v21, 0);
    swift_beginAccess();
    if (!swift_weakLoadStrong())
      return;
    sub_1A9069320();
    v62 = swift_allocError();
    *v63 = 1;
    *(_QWORD *)&v72[0] = v62;
    sub_1A91A7784((uint64_t)v72);
    sub_1A91A7644(v72, v71);
    sub_1A919B0A0(v71);
    swift_release();
    v60 = (void *)v62;
    goto LABEL_39;
  }
  v24 = (id *)(id)v21;
  if (qword_1ED2A8670 != -1)
    swift_once();
  v25 = sub_1A93F762C();
  __swift_project_value_buffer(v25, (uint64_t)qword_1ED2A8658);
  v26 = sub_1A93F7620();
  sub_1A93F7644();
  v27 = sub_1A93F8934();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    v66 = a5 + 16;
    swift_retain();
    sub_1A93F7668();
    swift_release();
    v28 = v67;
    v29 = v27;
    if ((*(unsigned int (**)(_BYTE *, const char *))(v7 + 88))(v12, v67) == *MEMORY[0x1E0DF2190])
    {
      v30 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, const char *))(v7 + 8))(v12, v28);
      v30 = "FAILURE";
    }
    v67 = v30;
    v40 = v68;
    v39 = v69;
    v41 = v70;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v69 + 16))(v68, v20, v70);
    v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v42 = 0;
    v43 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v26, v29, v43, "MAPINetwork", v67, v42, 2u);
    MEMORY[0x1AF41411C](v42, -1, -1);

    v44 = *(void (**)(_BYTE *, uint64_t))(v39 + 8);
    v44(v20, v41);
    v44(v40, v41);
  }
  else
  {

    (*(void (**)(_BYTE *, uint64_t))(v69 + 8))(v20, v70);
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    *(_QWORD *)&v72[0] = v21;
    sub_1A91A7784((uint64_t)v72);
    sub_1A91A7644(v72, v71);
    v45 = (id *)(id)v21;
    sub_1A919B0A0(v71);
    swift_release();
    sub_1A909CFC0((id)v21, 1);
  }
  sub_1A909CFC0((id)v21, 1);
}

void sub_1A919FE84(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  unsigned __int8 v15;
  char v16;
  uint64_t v17;
  char v18;
  id v19;
  _OWORD v20[11];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;

  LOBYTE(v21) = 5;
  FeedUpdateType.endInterval(for:)();
  v5 = a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  v6 = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx), sel_podcastForStoreId_, *(_QWORD *)(a2+ OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update+ *(int *)(type metadata accessor for FeedUpdateRequest() + 28)));
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_nextSyncToken);
    if (v8)
    {
      v9 = v8;
      v10 = sub_1A93F8040();
      v12 = v11;

      v13 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0)
        v13 = v10 & 0xFFFFFFFFFFFFLL;
      if (v13)
      {
        v14 = 0;
        v15 = 0;
        v16 = 1;
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }
    else
    {

    }
  }
  v10 = 0;
  v12 = 0;
  v16 = 0;
  v15 = 0x80;
  v14 = 1;
LABEL_10:
  v17 = type metadata accessor for StoreFeedUpdater.Update(0);
  if ((v16 & 1) != 0 || (*(_BYTE *)(v5 + *(int *)(v17 + 28)) & 1) != 0)
    goto LABEL_16;
  v18 = v14 ^ 1;
  if (v12 | v10)
    v18 = 1;
  if ((v18 & 1) != 0)
  {
LABEL_16:
    *(_QWORD *)&v21 = v10;
    *((_QWORD *)&v21 + 1) = v12;
    *(_QWORD *)&v23 = 0;
    v22 = 0uLL;
    BYTE8(v23) = v15;
    *(_QWORD *)&v24 = a3;
    sub_1A91A77DC((uint64_t)&v21);
    sub_1A91A7644(&v21, v20);
    v19 = a3;
    sub_1A919B0A0(v20);
    sub_1A919F1E0(v10, v12, 0, 0, 0, v15);

  }
  else
  {
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    v25 = 2;
    sub_1A91A77F4((uint64_t)&v21);
    sub_1A91A7644(&v21, v20);
    sub_1A919B0A0(v20);
  }
}

uint64_t sub_1A91A005C(__int128 *a1, uint64_t a2, void *a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t result;
  id v10;
  _OWORD v11[11];
  _BYTE v12[169];
  __int128 v13[9];
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;

  v4 = a1[9];
  v23 = a1[8];
  v24 = v4;
  v25 = *((_BYTE *)a1 + 160);
  v5 = a1[5];
  v19 = a1[4];
  v20 = v5;
  v6 = a1[7];
  v21 = a1[6];
  v22 = v6;
  v7 = a1[1];
  v15 = *a1;
  v16 = v7;
  v8 = a1[3];
  v17 = a1[2];
  v18 = v8;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_OWORD *)&v12[72] = v19;
    *(_OWORD *)&v12[56] = v18;
    *(_OWORD *)&v12[120] = v22;
    *(_OWORD *)&v12[136] = v23;
    *(_OWORD *)&v12[152] = v24;
    *(_OWORD *)&v12[88] = v20;
    *(_OWORD *)&v12[104] = v21;
    *(_OWORD *)&v12[8] = v15;
    *(_QWORD *)v12 = a3;
    v12[168] = v25;
    *(_OWORD *)&v12[24] = v16;
    *(_OWORD *)&v12[40] = v17;
    v13[8] = *(_OWORD *)&v12[128];
    v14[0] = *(_OWORD *)&v12[144];
    *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)&v12[153];
    v13[4] = *(_OWORD *)&v12[64];
    v13[5] = *(_OWORD *)&v12[80];
    v13[6] = *(_OWORD *)&v12[96];
    v13[7] = *(_OWORD *)&v12[112];
    v13[0] = *(_OWORD *)v12;
    v13[1] = *(_OWORD *)&v12[16];
    v13[2] = *(_OWORD *)&v12[32];
    v13[3] = *(_OWORD *)&v12[48];
    sub_1A91A7808((uint64_t)v13);
    sub_1A91A7644(v13, v11);
    v10 = a3;
    sub_1A91A7820((uint64_t)&v15);
    sub_1A919B0A0(v11);
    swift_release();
    return sub_1A91A78F4((uint64_t)v12);
  }
  return result;
}

uint64_t sub_1A91A0198(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t inited;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  int v56;
  __int128 v57;
  uint64_t v58;
  char v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  NSObject *v81;
  int v82;
  void (*v83)(char *, char *, uint64_t);
  char *v84;
  uint64_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  os_signpost_id_t v90;
  uint64_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  int *updated;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  __int128 v122;
  _QWORD v123[5];
  char v124;
  char v125;
  char v126;
  uint64_t v127;
  __int128 v128;
  __int128 v129;
  char v130;
  __int128 v131[3];
  _OWORD v132[2];
  unsigned __int8 v133;
  uint64_t v134[6];
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  unsigned __int8 v138;

  v4 = v3;
  v116 = a2;
  v117 = a3;
  v115 = sub_1A93F75FC();
  v6 = *(_QWORD *)(v115 - 8);
  MEMORY[0x1E0C80A78](v115);
  v113 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v118 = (char *)&v106 - v9;
  updated = (int *)type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1E0C80A78](updated);
  v111 = (uint64_t)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v11);
  v120 = (uint64_t)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A91A7A20(a1, v131);
  LOBYTE(v135) = 9;
  v114 = FeedUpdateType.beginInterval()();
  sub_1A91A7A20(v131, v132);
  v19 = v133 >> 6;
  v121 = v15;
  v119 = v6;
  if (v19)
  {
    if (v19 == 1)
    {
      v133 &= 0x3Fu;
      sub_1A91A7A38((uint64_t)v132, (uint64_t)v134);
      if (qword_1ED2A87E0 != -1)
        swift_once();
      v20 = sub_1A93F7698();
      __swift_project_value_buffer(v20, (uint64_t)qword_1ED2A87C0);
      swift_retain();
      v21 = sub_1A93F7674();
      v22 = sub_1A93F87B4();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        *(_QWORD *)&v122 = swift_slowAlloc();
        v135 = v122;
        *(_DWORD *)v23 = 141558275;
        v127 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v23 + 12) = 2081;
        v110 = v23 + 14;
        sub_1A9064630(v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, (uint64_t)v18, type metadata accessor for StoreFeedUpdater.Update);
        v24 = (uint64_t *)&v18[*(int *)(v16 + 32)];
        v25 = *v24;
        v26 = v24[1];
        swift_bridgeObjectRetain();
        sub_1A9064714((uint64_t)v18, type metadata accessor for StoreFeedUpdater.Update);
        v127 = sub_1A906436C(v25, v26, &v135);
        sub_1A93F8AA8();
        swift_release();
        swift_bridgeObjectRelease();
        v27 = "Job %{private,mask.hash}s: Requesting sync with next page";
LABEL_15:
        _os_log_impl(&dword_1A904E000, v21, v22, v27, (uint8_t *)v23, 0x16u);
        v44 = v122;
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v44, -1, -1);
        v39 = v23;
        goto LABEL_16;
      }
    }
    else
    {
      if (qword_1ED2A87E0 != -1)
        swift_once();
      v40 = sub_1A93F7698();
      __swift_project_value_buffer(v40, (uint64_t)qword_1ED2A87C0);
      swift_retain();
      v21 = sub_1A93F7674();
      v22 = sub_1A93F87B4();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        *(_QWORD *)&v122 = swift_slowAlloc();
        v135 = v122;
        *(_DWORD *)v23 = 141558275;
        v134[0] = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v23 + 12) = 2081;
        v110 = v23 + 14;
        sub_1A9064630(v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, (uint64_t)v18, type metadata accessor for StoreFeedUpdater.Update);
        v41 = (uint64_t *)&v18[*(int *)(v16 + 32)];
        v42 = *v41;
        v43 = v41[1];
        swift_bridgeObjectRetain();
        sub_1A9064714((uint64_t)v18, type metadata accessor for StoreFeedUpdater.Update);
        v134[0] = sub_1A906436C(v42, v43, &v135);
        sub_1A93F8AA8();
        swift_release();
        swift_bridgeObjectRelease();
        v27 = "Job %{private,mask.hash}s: Requesting Bootstrap";
        goto LABEL_15;
      }
    }

    swift_release();
  }
  else
  {
    v133 &= 0x3Fu;
    v110 = *((_QWORD *)&v132[0] + 1);
    v28 = *(_QWORD *)&v132[0];
    v29 = qword_1ED2A87E0;
    swift_bridgeObjectRetain();
    if (v29 != -1)
      swift_once();
    v30 = sub_1A93F7698();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED2A87C0);
    swift_retain_n();
    sub_1A91A7B3C((uint64_t)v131, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A919EE40);
    v31 = sub_1A93F7674();
    v32 = sub_1A93F87B4();
    *(_QWORD *)&v122 = v31;
    LODWORD(v109) = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v108 = swift_slowAlloc();
      v135 = v108;
      *(_DWORD *)v33 = 141558787;
      v134[0] = 1752392040;
      v107 = v28;
      sub_1A93F8AA8();
      *(_WORD *)(v33 + 12) = 2081;
      sub_1A9064630(v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, (uint64_t)v18, type metadata accessor for StoreFeedUpdater.Update);
      v34 = (uint64_t *)&v18[*(int *)(v16 + 32)];
      v36 = *v34;
      v35 = v34[1];
      swift_bridgeObjectRetain();
      sub_1A9064714((uint64_t)v18, type metadata accessor for StoreFeedUpdater.Update);
      v134[0] = sub_1A906436C(v36, v35, &v135);
      sub_1A93F8AA8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 22) = 2160;
      v134[0] = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v33 + 32) = 2081;
      v37 = v110;
      swift_bridgeObjectRetain();
      v134[0] = sub_1A906436C(v107, v37, &v135);
      sub_1A93F8AA8();
      sub_1A91A7B3C((uint64_t)v131, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A919F1E0);
      sub_1A91A7B3C((uint64_t)v131, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A919F1E0);
      swift_bridgeObjectRelease();
      v21 = v122;
      _os_log_impl(&dword_1A904E000, (os_log_t)v122, (os_log_type_t)v109, "Job %{private,mask.hash}s: Requesting sync with nextSyncToken %{private,mask.hash}s", (uint8_t *)v33, 0x2Au);
      v38 = v108;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v38, -1, -1);
      v39 = v33;
LABEL_16:
      MEMORY[0x1AF41411C](v39, -1, -1);

      goto LABEL_19;
    }
    swift_release_n();
    sub_1A91A7B3C((uint64_t)v131, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A919F1E0);
    sub_1A91A7B3C((uint64_t)v131, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A919F1E0);

  }
LABEL_19:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A47B0);
  inited = swift_initStackObject();
  v122 = xmmword_1A9405520;
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_BYTE *)(inited + 32) = 1;
  *(_QWORD *)(inited + 40) = &unk_1E54D6DB8;
  v46 = sub_1A9112F9C(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A96E8);
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = v122;
  *(_BYTE *)(v47 + 32) = 4;
  *(_QWORD *)&v137 = &type metadata for Podcasts;
  v48 = sub_1A90A4238();
  *((_QWORD *)&v137 + 1) = v48;
  LOBYTE(v135) = 20;
  v49 = sub_1A93F7500();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v135);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7F0);
  if ((v49 & 1) != 0)
  {
    v50 = swift_initStackObject();
    *(_OWORD *)(v50 + 16) = xmmword_1A9405950;
    *(_BYTE *)(v50 + 32) = 0;
    *(_QWORD *)(v50 + 40) = &unk_1E54D6DE0;
    *(_BYTE *)(v50 + 48) = 4;
    *(_QWORD *)(v50 + 56) = &unk_1E54D6E08;
    v110 = sub_1A91129C4(v50);
    v52 = *(_QWORD *)(v47 + 16);
    v51 = *(_QWORD *)(v47 + 24);
    if (v52 >= v51 >> 1)
      v47 = (uint64_t)sub_1A9118AEC((char *)(v51 > 1), v52 + 1, 1, (char *)v47);
    v53 = v111;
    *(_QWORD *)(v47 + 16) = v52 + 1;
    *(_BYTE *)(v47 + v52 + 32) = 3;
  }
  else
  {
    v54 = swift_initStackObject();
    *(_OWORD *)(v54 + 16) = v122;
    *(_BYTE *)(v54 + 32) = 0;
    *(_QWORD *)(v54 + 40) = &unk_1E54D6E30;
    v110 = sub_1A91129C4(v54);
    v53 = v111;
  }
  sub_1A91A7A20(v131, &v135);
  v56 = v138 >> 6;
  v57 = 0uLL;
  if (v56)
  {
    if (v56 == 1)
    {
      LOBYTE(v56) = v138 & 0x3F;
      v138 &= 0x3Fu;
      v58 = v135;
      v55 = v136;
      v57 = v137;
    }
    else
    {
      v58 = 0;
      v55 = 0uLL;
    }
  }
  else
  {
    v138 &= 0x3Fu;
    v58 = v135;
    *(_QWORD *)&v55 = v136;
    LOBYTE(v56) = 2;
  }
  v127 = v58;
  v128 = v55;
  v129 = v57;
  v130 = v56;
  v126 = 1;
  v125 = 1;
  v124 = 0;
  v123[3] = &type metadata for Podcasts;
  v123[4] = v48;
  LOBYTE(v123[0]) = 20;
  sub_1A91A7B3C((uint64_t)v131, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A919EE40);
  v59 = sub_1A93F7500();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v123);
  if ((v59 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v46 = sub_1A9112F9C(MEMORY[0x1E0DEE9D8]);
  }
  v60 = updated;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = v122;
  v62 = v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  v123[0] = *(_QWORD *)(v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update + v60[7]);
  *(_QWORD *)(v61 + 32) = sub_1A93F9060();
  *(_QWORD *)(v61 + 40) = v63;
  LOBYTE(v123[0]) = 1;
  if (objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod))
  {
    if (qword_1EEAB6CD0 != -1)
      swift_once();
    v64 = &qword_1EEAB86A8;
  }
  else
  {
    if (qword_1ED2A7EB8 != -1)
      swift_once();
    v64 = &qword_1ED2A7EB0;
  }
  v111 = v47;
  v65 = MEMORY[0x1E0DEE9D8];
  v66 = *v64 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_deltaNumberOfEpisodesToRequestPerPage;
  v109 = *(_QWORD *)v66;
  LODWORD(v108) = *(unsigned __int8 *)(v66 + 8);
  sub_1A9062170(v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_bagConfiguration, v120, &qword_1ED2AD3D0);
  v67 = *(_BYTE *)(v62 + v60[9]);
  sub_1A9064630(v62, v53, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
  *(_QWORD *)&v122 = v4;
  updated = (int *)v46;
  if ((v67 & 1) != 0)
    v68 = 0;
  else
    v68 = *(_BYTE *)(v53 + v60[11]);
  sub_1A9064714(v53, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
  v69 = v60[8];
  v107 = v62;
  v70 = (uint64_t *)(v62 + v69);
  v71 = *v70;
  v72 = v70[1];
  swift_bridgeObjectRetain();
  v73 = sub_1A9112728(v65);
  sub_1A911273C(v65);
  v75 = v74;
  v76 = sub_1A9112844(v65);
  v77 = sub_1A9112858(v65);
  *((_QWORD *)&v105 + 1) = sub_1A911286C(v65);
  *(_QWORD *)&v105 = v77;
  *((_QWORD *)&v104 + 1) = v65;
  *((_QWORD *)&v103 + 1) = v76;
  *(_QWORD *)&v104 = v110;
  *(_QWORD *)&v103 = v65;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((__int128 *)&v127, &v126, &v125, &v124, (uint64_t)updated, v73, v75, v65, (uint64_t)v121, v103, v104, v111, v61, (char *)v123, v109, v108, v105, 0, 1,
    1,
    v120,
    0,
    0,
    v68,
    0,
    0,
    v65,
    v71,
    v72,
    2);
  if (qword_1ED2A8670 != -1)
    swift_once();
  v78 = sub_1A93F762C();
  __swift_project_value_buffer(v78, (uint64_t)qword_1ED2A8658);
  v79 = v122;
  swift_retain_n();
  v80 = v118;
  sub_1A93F75F0();
  v81 = sub_1A93F7620();
  v82 = sub_1A93F8940();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    v83 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
    v84 = v113;
    LODWORD(v120) = v82;
    v85 = v115;
    v83(v113, v80, v115);
    v86 = (uint8_t *)swift_slowAlloc();
    v87 = swift_slowAlloc();
    v127 = v87;
    *(_DWORD *)v86 = 136315138;
    v88 = sub_1A93F73A4();
    v123[0] = sub_1A906436C(v88, v89, &v127);
    v79 = v122;
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    v90 = sub_1A93F75E4();
    v91 = v119;
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v81, (os_signpost_type_t)v120, v90, "MAPINetwork", "[identifier=%{name=identifier}s] MediaAPIRequestEpisodes", v86, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v87, -1, -1);
    v92 = v86;
    v80 = v118;
    MEMORY[0x1AF41411C](v92, -1, -1);

    (*(void (**)(char *, uint64_t))(v91 + 8))(v84, v85);
  }
  else
  {
    swift_release_n();

    v91 = v119;
    v83 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
    v85 = v115;
    v84 = v113;
  }
  v83(v84, v80, v85);
  sub_1A93F765C();
  swift_allocObject();
  v93 = sub_1A93F7650();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v80, v85);
  v95 = *(_QWORD *)(v79 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController + 24);
  v94 = *(_QWORD *)(v79 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v79 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController), v95);
  v96 = swift_allocObject();
  swift_weakInit();
  v97 = swift_allocObject();
  v98 = v114;
  *(_QWORD *)(v97 + 16) = v93;
  *(_QWORD *)(v97 + 24) = v98;
  *(_QWORD *)(v97 + 32) = v96;
  sub_1A91A7A20(v131, (_OWORD *)(v97 + 40));
  v99 = v117;
  *(_QWORD *)(v97 + 88) = v116;
  *(_QWORD *)(v97 + 96) = v99;
  sub_1A91A7B3C((uint64_t)v131, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A919EE40);
  v100 = sub_1A91A7AF8();
  swift_retain();
  swift_retain();
  swift_retain();
  v101 = (uint64_t)v121;
  MediaRequestControllerProtocol.perform<A>(params:parsing:callback:)((uint64_t)v121, (uint64_t)&type metadata for ServerSyncResponse, (uint64_t)sub_1A91A7AC4, v97, v95, (uint64_t)&type metadata for ServerSyncResponse, v94, v100);
  swift_release();
  swift_release();
  swift_release();
  return sub_1A9064714(v101, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
}

uint64_t sub_1A91A10E8(void *a1, uint64_t a2, uint64_t a3)
{
  FeedUpdateType.beginInterval()();
  objc_msgSend(a1, sel_unsafeIngestShow_, a3);
  FeedUpdateType.endInterval(for:)();
  return swift_release();
}

uint64_t sub_1A91A115C(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _BYTE *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t updated;
  void *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[7];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  char v56;

  v4 = v3;
  v6 = a1[8];
  v7 = a1[9];
  v8 = a1[6];
  v53 = a1[7];
  v54 = v6;
  v55 = v7;
  v10 = a1[4];
  v9 = a1[5];
  v56 = *((_BYTE *)a1 + 160);
  v51 = v9;
  v52 = v8;
  v11 = a1[1];
  v46 = *a1;
  v47 = v11;
  v12 = a1[2];
  v49 = a1[3];
  v50 = v10;
  v48 = v12;
  LOBYTE(aBlock[0]) = 12;
  FeedUpdateType.beginInterval()();
  v13 = v49;
  v14 = swift_bridgeObjectRetain();
  v43 = sub_1A919A860(v14);
  result = swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v49 + 16);
  if (v16)
  {
    v42 = a3;
    swift_bridgeObjectRetain_n();
    v17 = (_BYTE *)(v49 + 96);
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((*v17 & 0xFE) != 2 && (*v17 & 1) != 0)
      {
        v21 = *((_QWORD *)v17 - 8);
        v22 = *((_QWORD *)v17 - 7);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_1A907ECFC(0, v18[2] + 1, 1, v18);
        v24 = v18[2];
        v23 = v18[3];
        if (v24 >= v23 >> 1)
          v18 = sub_1A907ECFC((_QWORD *)(v23 > 1), v24 + 1, 1, v18);
        v18[2] = v24 + 1;
        v19 = &v18[2 * v24];
        v19[4] = v21;
        v19[5] = v22;
      }
      v17 += 72;
      --v16;
    }
    while (v16);
    result = swift_bridgeObjectRelease_n();
    a3 = v42;
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v25 = (_QWORD *)(v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData);
  v26 = *(_QWORD *)(v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *v25 = v28;
    v29 = *(_QWORD *)(v13 + 16);
    v30 = v25[1];
    v27 = __OFADD__(v30, v29);
    v31 = v30 + v29;
    if (!v27)
    {
      v25[1] = v31;
      LOBYTE(aBlock[0]) = 11;
      updated = FeedUpdateType.beginInterval()();
      v33 = *(void **)(v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx);
      v34 = swift_allocObject();
      v35 = v53;
      v36 = v55;
      *(_OWORD *)(v34 + 160) = v54;
      *(_OWORD *)(v34 + 176) = v36;
      v37 = v51;
      v38 = v52;
      *(_OWORD *)(v34 + 96) = v50;
      *(_OWORD *)(v34 + 112) = v37;
      *(_QWORD *)(v34 + 16) = updated;
      *(_QWORD *)(v34 + 24) = v4;
      *(_BYTE *)(v34 + 192) = v56;
      *(_OWORD *)(v34 + 128) = v38;
      *(_OWORD *)(v34 + 144) = v35;
      v39 = v47;
      *(_OWORD *)(v34 + 32) = v46;
      *(_OWORD *)(v34 + 48) = v39;
      v40 = v49;
      *(_OWORD *)(v34 + 64) = v48;
      *(_OWORD *)(v34 + 80) = v40;
      *(_QWORD *)(v34 + 200) = a2;
      *(_QWORD *)(v34 + 208) = a3;
      *(_QWORD *)(v34 + 216) = v43;
      *(_QWORD *)(v34 + 224) = v18;
      aBlock[4] = sub_1A91A7DC0;
      aBlock[5] = v34;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1A908A91C;
      aBlock[3] = &block_descriptor_25_1;
      v41 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      sub_1A91A7820((uint64_t)&v46);
      sub_1A90858C0(a2);
      swift_release();
      objc_msgSend(v33, sel_performBlock_, v41);
      _Block_release(v41);
      swift_release();
      LOBYTE(aBlock[0]) = 12;
      FeedUpdateType.endInterval(for:)();
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A91A145C(uint64_t a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t result;
  _OWORD v7[11];
  __int128 v8[10];
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;

  v1 = *(_OWORD *)(a1 + 144);
  v18 = *(_OWORD *)(a1 + 128);
  v19 = v1;
  v20 = *(_BYTE *)(a1 + 160);
  v2 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 64);
  v15 = v2;
  v3 = *(_OWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a1 + 96);
  v17 = v3;
  v4 = *(_OWORD *)(a1 + 16);
  v10 = *(_OWORD *)a1;
  v11 = v4;
  v5 = *(_OWORD *)(a1 + 48);
  v12 = *(_OWORD *)(a1 + 32);
  v13 = v5;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8[8] = v18;
    v8[9] = v19;
    v9 = v20;
    v8[4] = v14;
    v8[5] = v15;
    v8[6] = v16;
    v8[7] = v17;
    v8[0] = v10;
    v8[1] = v11;
    v8[2] = v12;
    v8[3] = v13;
    sub_1A91A7D08((uint64_t)v8);
    sub_1A91A7644(v8, v7);
    sub_1A91A7820((uint64_t)&v10);
    sub_1A919B0A0(v7);
    swift_release();
    return sub_1A91A7BD4((uint64_t)&v10);
  }
  return result;
}

uint64_t sub_1A91A1540(uint64_t a1, int a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, __int128 *a7, void (*a8)(_OWORD *), uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  const char *v24;
  uint8_t *v25;
  os_signpost_id_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t result;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  __int128 *v41;
  uint64_t v42;
  void (*v43)(_OWORD *);
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[8];
  char v47;
  _OWORD v48[3];

  v43 = a8;
  v41 = a7;
  v45 = a5;
  v40 = a2;
  v42 = a1;
  v11 = sub_1A93F7638();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F75FC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v30 - v20;
  v39 = *a3;
  v38 = a3[1];
  v37 = a3[2];
  v36 = a3[3];
  v35 = a3[4];
  v34 = a3[5];
  v33 = a3[6];
  v32 = a3[7];
  v31 = *((unsigned __int8 *)a3 + 64);
  v44 = a6 + 16;
  if (qword_1ED2A8670 != -1)
    swift_once();
  v22 = sub_1A93F762C();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ED2A8658);
  v23 = sub_1A93F7620();
  sub_1A93F7644();
  v30 = sub_1A93F8934();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    swift_retain();
    sub_1A93F7668();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v14, v11) == *MEMORY[0x1E0DF2190])
    {
      v24 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v24 = "";
    }
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    v26 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v23, (os_signpost_type_t)v30, v26, "MAPINetwork", v24, v25, 2u);
    MEMORY[0x1AF41411C](v25, -1, -1);

    v27 = *(void (**)(char *, uint64_t))(v16 + 8);
    v27(v21, v15);
    v27(v18, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }
  LOBYTE(v46[0]) = 9;
  FeedUpdateType.endInterval(for:)();
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v29 = v40 & 1;
    sub_1A91A7A20(v41, v48);
    v46[0] = v39;
    v46[1] = v38;
    v46[2] = v37;
    v46[3] = v36;
    v46[4] = v35;
    v46[5] = v34;
    v46[6] = v33;
    v46[7] = v32;
    v47 = v31;
    sub_1A91A1904((uint64_t)v48, v42, v29, (uint64_t)v46, v43, a9);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A91A1904(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void (*a5)(_OWORD *), uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (**v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  char v54;
  void (*v55)(char *, uint64_t);
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  os_signpost_id_t v61;
  uint64_t v62;
  uint8_t *v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  void (**v66)(char *, uint64_t);
  uint64_t v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  int v74;
  _BOOL4 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  _BOOL4 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  int v105;
  _BOOL4 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  void *v114;
  id v115;
  NSObject *v116;
  char *v117;
  os_signpost_type_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  const char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int (*v128)(uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  void *v131;
  _BYTE *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  char v138;
  uint64_t v139;
  char *v140;
  char v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unsigned __int8 v149;
  NSObject *v150;
  char *v151;
  os_signpost_type_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  void (**v158)(char *, uint64_t);
  const char *v159;
  uint64_t v160;
  NSObject *v161;
  os_log_type_t v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  void *v174;
  char *v175;
  char *v176;
  uint8_t *v177;
  os_signpost_id_t v178;
  char v179;
  uint8_t *v180;
  os_signpost_id_t v181;
  uint64_t v183;
  _BYTE *v184;
  char *v185;
  void (**v186)(char *, uint64_t);
  char *v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  void (*v204)(_OWORD *);
  char *v205;
  uint64_t v206;
  char *v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void (*v218)(char *, uint64_t);
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  void *v227;
  uint64_t v228;
  uint64_t v229;
  _OWORD v230[10];
  unsigned __int8 v231;
  __int128 v232[4];
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  unsigned __int8 v239;

  v7 = v6;
  v203 = a6;
  v204 = a5;
  LODWORD(v220) = a3;
  v221 = a2;
  v228 = sub_1A93F7638();
  v223 = *(_QWORD *)(v228 - 8);
  MEMORY[0x1E0C80A78](v228);
  v205 = (char *)&v185 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v188 = (char *)&v185 - v12;
  MEMORY[0x1E0C80A78](v13);
  v191 = (char *)&v185 - v14;
  MEMORY[0x1E0C80A78](v15);
  v209 = (char *)&v185 - v16;
  MEMORY[0x1E0C80A78](v17);
  v192 = (char *)&v185 - v18;
  MEMORY[0x1E0C80A78](v19);
  v187 = (char *)&v185 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C38);
  MEMORY[0x1E0C80A78](v21);
  v194 = (char *)&v185 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1A93F6F60();
  v226 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v189 = (char *)&v185 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1E0C80A78](v210);
  v211 = (uint64_t)&v185 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1A93F75FC();
  v27 = *(void (***)(char *, uint64_t))(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v219 = (char *)&v185 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v190 = (char *)&v185 - v30;
  MEMORY[0x1E0C80A78](v31);
  v196 = (char *)&v185 - v32;
  MEMORY[0x1E0C80A78](v33);
  v208 = (char *)&v185 - v34;
  MEMORY[0x1E0C80A78](v35);
  v207 = (char *)&v185 - v36;
  MEMORY[0x1E0C80A78](v37);
  v193 = (char *)&v185 - v38;
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v185 - v40;
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v185 - v43;
  v45 = *(_QWORD *)a1;
  v200 = *(_QWORD *)(a1 + 8);
  v201 = v45;
  v46 = *(_QWORD *)(a1 + 16);
  v198 = *(_QWORD *)(a1 + 24);
  v199 = v46;
  v197 = *(_QWORD *)(a1 + 32);
  v202 = *(unsigned __int8 *)(a1 + 40);
  v227 = *(void **)a4;
  v47 = *(_QWORD *)(a4 + 8);
  v48 = *(_QWORD *)(a4 + 24);
  v216 = *(_QWORD *)(a4 + 16);
  v217 = v48;
  v222 = *(_QWORD *)(a4 + 32);
  v49 = *(_QWORD *)(a4 + 40);
  v213 = v47;
  v214 = v49;
  v50 = *(_QWORD *)(a4 + 56);
  v212 = *(_QWORD *)(a4 + 48);
  LODWORD(v225) = *(unsigned __int8 *)(a4 + 64);
  if (qword_1ED2A8670 != -1)
    swift_once();
  v51 = sub_1A93F762C();
  v52 = __swift_project_value_buffer(v51, (uint64_t)qword_1ED2A8658);
  swift_retain_n();
  sub_1A93F75F0();
  v224 = v52;
  v53 = sub_1A93F7620();
  LODWORD(v218) = sub_1A93F8940();
  v54 = sub_1A93F8A6C();
  v229 = v7;
  v206 = v50;
  v195 = v23;
  if ((v54 & 1) != 0)
  {
    v186 = v27;
    v55 = v27[2];
    ((void (*)(char *, char *, uint64_t))v55)(v41, v44, v26);
    v56 = (uint8_t *)swift_slowAlloc();
    v57 = swift_slowAlloc();
    v215 = v26;
    v58 = v57;
    *(_DWORD *)v56 = 136315138;
    *(_QWORD *)&v232[0] = v57;
    v59 = sub_1A93F73A4();
    *(_QWORD *)&v230[0] = sub_1A906436C(v59, v60, (uint64_t *)v232);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    v61 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v53, (os_signpost_type_t)v218, v61, "ParseEpisodesResponse", "[identifier=%{name=identifier}s] ParseEpisodesResponse", v56, 0xCu);
    swift_arrayDestroy();
    v62 = v58;
    v26 = v215;
    MEMORY[0x1AF41411C](v62, -1, -1);
    v63 = v56;
    v7 = v229;
    MEMORY[0x1AF41411C](v63, -1, -1);

    v27 = v186;
    v186[1](v41, v26);
    v64 = v55;
  }
  else
  {
    swift_release_n();

    v64 = v27[2];
  }
  v218 = v64;
  ((void (*)(char *, char *, uint64_t))v64)(v41, v44, v26);
  sub_1A93F765C();
  swift_allocObject();
  v65 = sub_1A93F7650();
  v66 = (void (**)(char *, uint64_t))v27[1];
  ((void (*)(char *, uint64_t))v66)(v44, v26);
  v67 = v226;
  if ((v225 & 1) != 0)
  {
    v68 = v227;
    *(_QWORD *)&v232[0] = v227;
    v69 = v227;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    swift_willThrowTypedImpl();
    v70 = v228;
    goto LABEL_8;
  }
  v85 = v227;
  v70 = v228;
  v86 = v222;
  if ((v222 & 0x100) != 0)
  {
    if (qword_1ED2A87E0 != -1)
      swift_once();
    v90 = sub_1A93F7698();
    __swift_project_value_buffer(v90, (uint64_t)qword_1ED2A87C0);
    swift_retain();
    v91 = sub_1A93F7674();
    v92 = sub_1A93F87B4();
    v93 = os_log_type_enabled(v91, v92);
    v185 = v41;
    if (v93)
    {
      v94 = swift_slowAlloc();
      v227 = (void *)swift_slowAlloc();
      *(_QWORD *)&v232[0] = v227;
      *(_DWORD *)v94 = 141558275;
      *(_QWORD *)&v230[0] = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v94 + 12) = 2081;
      v226 = v94 + 14;
      v95 = v211;
      sub_1A9064630(v229 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, v211, type metadata accessor for StoreFeedUpdater.Update);
      v96 = (uint64_t *)(v95 + *(int *)(v210 + 32));
      v97 = v26;
      v186 = v66;
      v98 = *v96;
      v99 = v96[1];
      swift_bridgeObjectRetain();
      sub_1A9064714(v95, type metadata accessor for StoreFeedUpdater.Update);
      v100 = v98;
      v26 = v97;
      *(_QWORD *)&v230[0] = sub_1A906436C(v100, v99, (uint64_t *)v232);
      v70 = v228;
      sub_1A93F8AA8();
      swift_release();
      v66 = v186;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v91, v92, "Job %{private,mask.hash}s: Server Meta is asking for reset, needs bootstrap", (uint8_t *)v94, 0x16u);
      v101 = v227;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v101, -1, -1);
      MEMORY[0x1AF41411C](v94, -1, -1);

    }
    else
    {

      swift_release();
    }
    v117 = v208;
    memset(v232, 0, sizeof(v232));
    LOBYTE(v233) = 2;
    sub_1A91A77F4((uint64_t)v232);
    sub_1A91A7644(v232, v230);
    sub_1A919B0A0(v230);
    v116 = sub_1A93F7620();
    sub_1A93F7644();
    v118 = sub_1A93F8934();
    v138 = sub_1A93F8A6C();
    v139 = v223;
    v140 = v209;
    if ((v138 & 1) != 0)
    {
      swift_retain();
LABEL_59:
      sub_1A93F7668();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v139 + 88))(v140, v70) == *MEMORY[0x1E0DF2190])
      {
        v122 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v139 + 8))(v140, v70);
        v122 = "";
      }
      v119 = v185;
      ((void (*)(char *, char *, uint64_t))v218)(v185, v117, v26);
LABEL_64:
      v180 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v180 = 0;
      v181 = sub_1A93F75E4();
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v116, v118, v181, "ParseEpisodesResponse", v122, v180, 2u);
      MEMORY[0x1AF41411C](v180, -1, -1);

      ((void (*)(char *, uint64_t))v66)(v117, v26);
      goto LABEL_65;
    }
LABEL_61:

    v119 = v117;
LABEL_65:
    ((void (*)(char *, uint64_t))v66)(v119, v26);
    return swift_release();
  }
  v186 = v66;
  if ((v222 & 1) != 0)
  {
    v215 = v26;
    v225 = v65;
    v220 = 0;
    v221 = 0;
    v88 = v216;
    v89 = v217;
  }
  else
  {
    if (!v217)
    {
      if (qword_1ED2A87E0 != -1)
        swift_once();
      v160 = sub_1A93F7698();
      __swift_project_value_buffer(v160, (uint64_t)qword_1ED2A87C0);
      swift_retain();
      v161 = sub_1A93F7674();
      v162 = sub_1A93F87B4();
      v163 = v162;
      if (os_log_type_enabled(v161, v162))
      {
        v164 = swift_slowAlloc();
        LODWORD(v226) = v163;
        v165 = v7;
        v166 = v164;
        v167 = (void *)swift_slowAlloc();
        v185 = v41;
        v227 = v167;
        *(_QWORD *)&v232[0] = v167;
        *(_DWORD *)v166 = 141558275;
        *(_QWORD *)&v230[0] = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v166 + 12) = 2081;
        v225 = v166 + 14;
        v168 = v211;
        sub_1A9064630(v165 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, v211, type metadata accessor for StoreFeedUpdater.Update);
        v169 = (uint64_t *)(v168 + *(int *)(v210 + 32));
        v170 = v26;
        v171 = *v169;
        v172 = v169[1];
        swift_bridgeObjectRetain();
        sub_1A9064714(v168, type metadata accessor for StoreFeedUpdater.Update);
        v173 = v171;
        v26 = v170;
        *(_QWORD *)&v230[0] = sub_1A906436C(v173, v172, (uint64_t *)v232);
        v70 = v228;
        sub_1A93F8AA8();
        swift_release();
        v66 = v186;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v161, (os_log_type_t)v226, "Job %{private,mask.hash}s: Response is missing nextSyncToken", (uint8_t *)v166, 0x16u);
        v174 = v227;
        swift_arrayDestroy();
        v41 = v185;
        MEMORY[0x1AF41411C](v174, -1, -1);
        MEMORY[0x1AF41411C](v166, -1, -1);

      }
      else
      {

        swift_release();
      }
      sub_1A9069320();
      v183 = swift_allocError();
      *v184 = 2;
      swift_willThrow();
      v68 = (void *)v183;
LABEL_8:
      if ((v220 & 1) == 0)
      {
        if (v221 == 400)
        {
          if (qword_1ED2A87E0 != -1)
            swift_once();
          v71 = sub_1A93F7698();
          __swift_project_value_buffer(v71, (uint64_t)qword_1ED2A87C0);
          swift_retain();
          v72 = sub_1A93F7674();
          v73 = sub_1A93F87B4();
          v74 = v73;
          v75 = os_log_type_enabled(v72, v73);
          v185 = v41;
          if (v75)
          {
            v76 = swift_slowAlloc();
            v227 = (void *)swift_slowAlloc();
            *(_QWORD *)&v232[0] = v227;
            *(_DWORD *)v76 = 141558275;
            *(_QWORD *)&v230[0] = 1752392040;
            sub_1A93F8AA8();
            *(_WORD *)(v76 + 12) = 2081;
            v225 = v76 + 14;
            LODWORD(v226) = v74;
            v77 = v211;
            sub_1A9064630(v229 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, v211, type metadata accessor for StoreFeedUpdater.Update);
            v78 = (uint64_t *)(v77 + *(int *)(v210 + 32));
            v79 = v68;
            v80 = v26;
            v186 = v66;
            v81 = *v78;
            v82 = v78[1];
            swift_bridgeObjectRetain();
            sub_1A9064714(v77, type metadata accessor for StoreFeedUpdater.Update);
            v83 = v81;
            v26 = v80;
            v68 = v79;
            *(_QWORD *)&v230[0] = sub_1A906436C(v83, v82, (uint64_t *)v232);
            v70 = v228;
            sub_1A93F8AA8();
            swift_release();
            v66 = v186;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1A904E000, v72, (os_log_type_t)v226, "Job %{private,mask.hash}s: Server returned 400, needs bootstrap", (uint8_t *)v76, 0x16u);
            v84 = v227;
            swift_arrayDestroy();
            MEMORY[0x1AF41411C](v84, -1, -1);
            MEMORY[0x1AF41411C](v76, -1, -1);

          }
          else
          {

            swift_release();
          }
          memset(v232, 0, sizeof(v232));
          LOBYTE(v233) = 2;
          sub_1A91A77F4((uint64_t)v232);
          sub_1A91A7644(v232, v230);
          sub_1A919B0A0(v230);

          v116 = sub_1A93F7620();
          v117 = v196;
          sub_1A93F7644();
          v118 = sub_1A93F8934();
          v141 = sub_1A93F8A6C();
          v139 = v223;
          if ((v141 & 1) != 0)
          {
            swift_retain();
            v140 = v191;
            goto LABEL_59;
          }
          goto LABEL_61;
        }
        if ((unint64_t)(v221 - 500) <= 0x63)
        {
          if (qword_1ED2A87E0 != -1)
            swift_once();
          v102 = sub_1A93F7698();
          __swift_project_value_buffer(v102, (uint64_t)qword_1ED2A87C0);
          swift_retain();
          v103 = sub_1A93F7674();
          v104 = sub_1A93F87B4();
          v105 = v104;
          v106 = os_log_type_enabled(v103, v104);
          v185 = v41;
          if (v106)
          {
            v107 = swift_slowAlloc();
            v227 = (void *)swift_slowAlloc();
            *(_QWORD *)&v232[0] = v227;
            *(_DWORD *)v107 = 141558531;
            *(_QWORD *)&v230[0] = 1752392040;
            sub_1A93F8AA8();
            *(_WORD *)(v107 + 12) = 2081;
            v225 = v107 + 14;
            LODWORD(v226) = v105;
            v108 = v211;
            sub_1A9064630(v229 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, v211, type metadata accessor for StoreFeedUpdater.Update);
            v109 = (uint64_t *)(v108 + *(int *)(v210 + 32));
            v110 = v26;
            v186 = v66;
            v111 = *v109;
            v112 = v109[1];
            swift_bridgeObjectRetain();
            sub_1A9064714(v108, type metadata accessor for StoreFeedUpdater.Update);
            v113 = v111;
            v26 = v110;
            *(_QWORD *)&v230[0] = sub_1A906436C(v113, v112, (uint64_t *)v232);
            sub_1A93F8AA8();
            swift_release();
            v66 = v186;
            swift_bridgeObjectRelease();
            *(_WORD *)(v107 + 22) = 2048;
            *(_QWORD *)&v230[0] = v221;
            v70 = v228;
            sub_1A93F8AA8();
            _os_log_impl(&dword_1A904E000, v103, (os_log_type_t)v226, "Job %{private,mask.hash}s: Server return %ld, needs retry", (uint8_t *)v107, 0x20u);
            v114 = v227;
            swift_arrayDestroy();
            MEMORY[0x1AF41411C](v114, -1, -1);
            MEMORY[0x1AF41411C](v107, -1, -1);

          }
          else
          {

            swift_release();
          }
          *(__int128 *)((char *)v232 + 8) = 0u;
          *(__int128 *)((char *)&v232[1] + 8) = 0u;
          *(__int128 *)((char *)&v232[2] + 8) = 0u;
          *(_QWORD *)&v232[0] = 1;
          *((_QWORD *)&v232[3] + 1) = 0;
          LOBYTE(v233) = 2;
          sub_1A91A77F4((uint64_t)v232);
          sub_1A91A7644(v232, v230);
          sub_1A919B0A0(v230);

          v116 = sub_1A93F7620();
          v117 = v190;
          sub_1A93F7644();
          v118 = sub_1A93F8934();
          v179 = sub_1A93F8A6C();
          v139 = v223;
          if ((v179 & 1) != 0)
          {
            swift_retain();
            v140 = v188;
            goto LABEL_59;
          }
          goto LABEL_61;
        }
      }
      *(_QWORD *)&v232[0] = v68;
      sub_1A91A7784((uint64_t)v232);
      sub_1A91A7644(v232, v230);
      v115 = v68;
      sub_1A919B0A0(v230);

      v116 = sub_1A93F7620();
      v117 = v219;
      sub_1A93F7644();
      v118 = sub_1A93F8934();
      if ((sub_1A93F8A6C() & 1) != 0)
      {
        v119 = v41;
        swift_retain();
        v120 = v205;
        sub_1A93F7668();
        swift_release();
        v121 = v223;
        if ((*(unsigned int (**)(char *, uint64_t))(v223 + 88))(v120, v70) == *MEMORY[0x1E0DF2190])
        {
          v122 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v121 + 8))(v120, v70);
          v122 = "";
        }
        v117 = v219;
        ((void (*)(char *, char *, uint64_t))v218)(v119, v219, v26);
        goto LABEL_64;
      }
      goto LABEL_61;
    }
    v215 = v26;
    v225 = v65;
    v87 = swift_bridgeObjectRetain();
    v86 = v222;
    v88 = v216;
    v220 = v216;
    v221 = v87;
    v89 = v87;
  }
  v123 = v212;
  v124 = v213;
  v125 = v214;
  if (v213)
  {
    v126 = v206;
    sub_1A91A7CA8(v85, v213, v88, v89, v86, v214, v212, v206, 0);
    swift_bridgeObjectRetain();
    v127 = (uint64_t)v194;
    sub_1A93F6F30();
    swift_bridgeObjectRelease();
    v128 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
    v129 = v67;
    v130 = v195;
    if (v128(v127, 1, v195) == 1)
    {
      sub_1A905FD54(v127, &qword_1ED2A5C38);
      swift_bridgeObjectRelease();
      sub_1A91A7B74(v85, v124, v216, v217, v86, v125, v212, v126, 0);
      sub_1A9069320();
      v131 = (void *)swift_allocError();
      *v132 = 3;
      *(_QWORD *)&v232[0] = v131;
      sub_1A91A7784((uint64_t)v232);
      sub_1A91A7644(v232, v230);
      sub_1A919B0A0(v230);

      v116 = sub_1A93F7620();
      v133 = v193;
      sub_1A93F7644();
      v118 = sub_1A93F8934();
      if ((sub_1A93F8A6C() & 1) == 0)
      {

        ((void (*)(char *, uint64_t))v186)(v133, v215);
        return swift_release();
      }
      v119 = v41;
      swift_retain();
      v134 = v187;
      sub_1A93F7668();
      swift_release();
      v135 = v223;
      v136 = v228;
      v137 = (*(uint64_t (**)(char *, uint64_t))(v223 + 88))(v134, v228);
      v66 = v186;
      if (v137 == *MEMORY[0x1E0DF2190])
      {
        v122 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v135 + 8))(v134, v136);
        v122 = "";
      }
      v26 = v215;
      v117 = v193;
      ((void (*)(char *, char *, uint64_t))v218)(v119, v193, v215);
      goto LABEL_64;
    }
    v185 = v41;
    v142 = v189;
    (*(void (**)(char *, uint64_t, uint64_t))(v129 + 32))(v189, v127, v130);
    v229 = sub_1A93F6F00();
    v219 = v143;
    v211 = sub_1A93F6EC4();
    (*(void (**)(char *, uint64_t))(v129 + 8))(v142, v130);
    LODWORD(v226) = 3;
    v210 = 0xE300000000000000;
    v124 = 7628135;
    v123 = v212;
  }
  else
  {
    v185 = v41;
    swift_bridgeObjectRetain();
    v126 = v206;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v229 = 0;
    v219 = 0;
    v210 = 0;
    v211 = 0;
    LODWORD(v226) = 255;
  }
  v145 = v200;
  v144 = v201;
  v146 = v198;
  v147 = v199;
  v148 = v197;
  v149 = v202;
  sub_1A919EE40(v201, v200, v199, v198, v197, v202);
  sub_1A919EE40(v144, v145, v147, v146, v148, v149);
  swift_bridgeObjectRetain();
  sub_1A91A7B74(v227, v213, v216, v217, v222, v214, v123, v126, 0);
  *(_QWORD *)&v232[0] = v144;
  *((_QWORD *)&v232[0] + 1) = v145;
  *(_QWORD *)&v232[1] = v147;
  *((_QWORD *)&v232[1] + 1) = v146;
  *(_QWORD *)&v232[2] = v148;
  BYTE8(v232[2]) = v149;
  *(_QWORD *)&v232[3] = v126;
  *((_QWORD *)&v232[3] + 1) = v220;
  *(_QWORD *)&v233 = v221;
  *((_QWORD *)&v233 + 1) = v229;
  *(_QWORD *)&v234 = v219;
  *((_QWORD *)&v234 + 1) = v211;
  *(_QWORD *)&v235 = v124;
  *((_QWORD *)&v235 + 1) = v210;
  LOBYTE(v236) = v226;
  *((_QWORD *)&v236 + 1) = v144;
  *(_QWORD *)&v237 = v145;
  *((_QWORD *)&v237 + 1) = v147;
  *(_QWORD *)&v238 = v146;
  *((_QWORD *)&v238 + 1) = v148;
  v239 = v149;
  v230[8] = v237;
  v230[9] = v238;
  v231 = v149;
  v230[4] = v233;
  v230[5] = v234;
  v230[6] = v235;
  v230[7] = v236;
  v230[0] = v232[0];
  v230[1] = v232[1];
  v230[2] = v232[2];
  v230[3] = v232[3];
  v204(v230);
  sub_1A91A7BD4((uint64_t)v232);
  v150 = sub_1A93F7620();
  v151 = v207;
  sub_1A93F7644();
  v152 = sub_1A93F8934();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    swift_retain();
    v153 = v192;
    sub_1A93F7668();
    swift_release();
    v154 = v223;
    v155 = v228;
    v156 = (*(uint64_t (**)(char *, uint64_t))(v223 + 88))(v153, v228);
    v157 = v215;
    v158 = v186;
    if (v156 == *MEMORY[0x1E0DF2190])
    {
      v159 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v154 + 8))(v153, v155);
      v159 = "";
    }
    v175 = v185;
    v176 = v207;
    ((void (*)(char *, char *, uint64_t))v218)(v185, v207, v157);
    v177 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v177 = 0;
    v178 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v150, v152, v178, "ParseEpisodesResponse", v159, v177, 2u);
    MEMORY[0x1AF41411C](v177, -1, -1);

    ((void (*)(char *, uint64_t))v158)(v176, v157);
    ((void (*)(char *, uint64_t))v158)(v175, v157);
  }
  else
  {

    ((void (*)(char *, uint64_t))v186)(v151, v215);
  }
  return swift_release();
}

void sub_1A91A2FA4(uint64_t a1, uint64_t a2, __int128 *a3, void (*a4)(_QWORD, id), uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (**v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t updated;
  id v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  int8x16_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  os_log_t v64;
  char *v65;
  id v66;
  void *v67;
  os_log_t v68;
  uint64_t v69;
  void (*v70)(char *, os_log_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v74)(uint64_t, uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  NSObject *v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  void (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  void *v97;
  _BYTE *v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t (*v109)(void);
  id v110;
  void (*v111)(_QWORD, id);
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  void *v119;
  void *v120;
  void *v121;
  uint64_t v122;
  __int128 *v123;
  void *v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int128 *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  NSObject *v139;
  os_log_type_t v140;
  _BOOL4 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  NSObject *v149;
  os_log_type_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  __int128 v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  NSObject *v162;
  os_log_type_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t *v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  BOOL v172;
  uint64_t v173;
  uint64_t v174;
  id v175;
  void *v176;
  NSObject *v177;
  os_log_type_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  void *v187;
  id v188;
  char *v189;
  void *v190;
  id v191;
  id v192;
  id v193;
  NSObject *v194;
  os_log_type_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  unint64_t v201;
  _QWORD v202[2];
  uint64_t v203;
  uint64_t v204;
  void (**v205)(char *, uint64_t, uint64_t);
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  os_log_t v213;
  uint64_t v214;
  id v215;
  __int128 v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  id v222;
  void (*v223)(_QWORD, id);
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  __int128 *v229;
  uint64_t v230;
  _OWORD v231[11];
  __int128 v232;
  unint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char v236;
  __int128 v237[3];
  __int128 v238[3];
  uint64_t v239;
  int8x16_t v240;
  int8x16_t v241;
  unsigned __int8 v242;
  _OWORD v243[2];
  char v244;
  _BYTE v245[56];

  v219 = a7;
  v217 = a6;
  v214 = a5;
  v223 = a4;
  v229 = a3;
  v226 = sub_1A93F73E0();
  v228 = *(_QWORD *)(v226 - 8);
  MEMORY[0x1E0C80A78](v226);
  v212 = (char *)v202 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v213 = (os_log_t)((char *)v202 - v10);
  MEMORY[0x1E0C80A78](v11);
  v209 = (char *)v202 - v12;
  v220 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1E0C80A78](v220);
  v221 = (uint64_t)v202 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = sub_1A93F7698();
  v14 = *(_QWORD *)(v225 - 8);
  MEMORY[0x1E0C80A78](v225);
  v208 = (char *)v202 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v202 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C80);
  MEMORY[0x1E0C80A78](v19);
  v211 = (uint64_t)v202 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v218 = (uint64_t)v202 - v22;
  MEMORY[0x1E0C80A78](v23);
  v206 = (uint64_t)v202 - v24;
  MEMORY[0x1E0C80A78](v25);
  v207 = (uint64_t)v202 - v26;
  MEMORY[0x1E0C80A78](v27);
  *((_QWORD *)&v216 + 1) = (char *)v202 - v28;
  MEMORY[0x1E0C80A78](v29);
  v31 = (void (**)(char *, uint64_t, uint64_t))((char *)v202 - v30);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)v202 - v33;
  MEMORY[0x1E0C80A78](v35);
  v227 = (char *)v202 - v36;
  LOBYTE(v232) = 11;
  FeedUpdateType.endInterval(for:)();
  v37 = *(void **)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx);
  v230 = a2;
  v38 = a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  updated = type metadata accessor for FeedUpdateRequest();
  v40 = objc_retainAutoreleasedReturnValue(objc_msgSend(v37, sel_podcastForStoreId_, *(_QWORD *)(v38
                                                                                               + *(int *)(updated + 28))));
  if (!v40)
  {
    v205 = v31;
    sub_1A93F7170();
    v41 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v40 = objc_msgSend(v37, sel_podcastForFeedUrl_, v41);

    v31 = v205;
    if (!v40)
      goto LABEL_20;
  }
  v215 = v37;
  *(_QWORD *)&v216 = updated;
  v224 = v38;
  v42 = objc_msgSend(v40, sel_uuid);
  if (!v42)
  {

LABEL_20:
    sub_1A9069320();
    v97 = (void *)swift_allocError();
    *v98 = 10;
    *(_QWORD *)&v232 = v97;
    sub_1A91A7784((uint64_t)&v232);
    sub_1A91A7644(&v232, v231);
    sub_1A919B0A0(v231);

    return;
  }
  v43 = v42;
  v204 = sub_1A93F8040();
  v210 = v44;

  sub_1A91A7A20(v229, v238);
  sub_1A91A7A20(v238, &v239);
  v222 = v40;
  if ((v242 & 0xC0) == 0x80 && v242 == 128)
  {
    v45 = vorrq_s8(v240, v241);
    if (!(*(_QWORD *)&vorr_s8(*(int8x8_t *)v45.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v45, v45, 8uLL)) | v239))
    {
      v205 = v31;
      v46 = (uint64_t)v227;
      sub_1A93F73D4();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v228 + 56))(v46, 0, 1, v226);
      if (qword_1ED2A87E0 != -1)
        swift_once();
      v47 = v225;
      v48 = __swift_project_value_buffer(v225, (uint64_t)qword_1ED2A87C0);
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v18, v48, v47);
      sub_1A9062170(v46, (uint64_t)v34, &qword_1ED2A5C80);
      swift_retain();
      v49 = sub_1A93F7674();
      v50 = sub_1A93F87B4();
      if (!os_log_type_enabled(v49, (os_log_type_t)v50))
      {
        swift_release();
        sub_1A905FD54((uint64_t)v34, &qword_1ED2A5C80);

        (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v47);
        goto LABEL_30;
      }
      LODWORD(v209) = v50;
      v213 = v49;
      v51 = (uint64_t)v34;
      v52 = swift_slowAlloc();
      v208 = (char *)swift_slowAlloc();
      *(_QWORD *)&v232 = v208;
      *(_DWORD *)v52 = 141558531;
      *(_QWORD *)&v231[0] = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v52 + 12) = 2081;
      *((_QWORD *)&v216 + 1) = v52 + 14;
      v53 = v221;
      sub_1A9064630(v224, v221, type metadata accessor for StoreFeedUpdater.Update);
      v54 = (uint64_t *)(v53 + *(int *)(v220 + 32));
      v56 = *v54;
      v55 = v54[1];
      swift_bridgeObjectRetain();
      v57 = v51;
      sub_1A9064714(v53, type metadata accessor for StoreFeedUpdater.Update);
      *(_QWORD *)&v231[0] = sub_1A906436C(v56, v55, (uint64_t *)&v232);
      v207 = (uint64_t)v231 + 8;
      sub_1A93F8AA8();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 22) = 2082;
      v58 = (uint64_t)v205;
      sub_1A9062170(v51, (uint64_t)v205, &qword_1ED2A5C80);
      v59 = v228;
      v60 = v226;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v228 + 48))(v58, 1, v226) == 1)
      {
LABEL_84:
        __break(1u);
        goto LABEL_85;
      }
      *((_QWORD *)&v216 + 1) = v52 + 24;
      sub_1A9066CA8(&qword_1ED2A5C78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v61 = sub_1A93F9060();
      v63 = v62;
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v60);
      *(_QWORD *)&v231[0] = sub_1A906436C(v61, v63, (uint64_t *)&v232);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A905FD54(v57, &qword_1ED2A5C80);
      v64 = v213;
      _os_log_impl(&dword_1A904E000, v213, (os_log_type_t)v209, "Job %{private,mask.hash}s: Processing: Starting a new bootstrap with token %{public}s", (uint8_t *)v52, 0x20u);
      v65 = v208;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v65, -1, -1);
      MEMORY[0x1AF41411C](v52, -1, -1);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v225);
      goto LABEL_29;
    }
  }
  v66 = objc_msgSend(v40, sel_bootstrapGeneration);
  if (!v66)
  {
    v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v228 + 56);
    v71 = *((_QWORD *)&v216 + 1);
    v72 = v226;
    v73(*((_QWORD *)&v216 + 1), 1, 1, v226);
    goto LABEL_22;
  }
  v67 = v66;
  v205 = (void (**)(char *, uint64_t, uint64_t))v14;
  v68 = v213;
  sub_1A93F73C8();

  v69 = v228;
  v70 = *(void (**)(char *, os_log_t, uint64_t))(v228 + 32);
  v71 = *((_QWORD *)&v216 + 1);
  v72 = v226;
  v70(*((char **)&v216 + 1), v68, v226);
  v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56);
  v73(v71, 0, 1, v72);
  v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  if (v74(v71, 1, v72) == 1)
  {
LABEL_22:
    v99 = v225;
    sub_1A905FD54(v71, &qword_1ED2A5C80);
    v46 = (uint64_t)v227;
    v73((uint64_t)v227, 1, 1, v72);
    if (qword_1ED2A87E0 != -1)
      swift_once();
    __swift_project_value_buffer(v99, (uint64_t)qword_1ED2A87C0);
    swift_retain();
    v100 = sub_1A93F7674();
    v101 = sub_1A93F87B4();
    if (os_log_type_enabled(v100, v101))
    {
      v102 = swift_slowAlloc();
      v103 = swift_slowAlloc();
      *(_QWORD *)&v232 = v103;
      *(_DWORD *)v102 = 141558275;
      *(_QWORD *)&v231[0] = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v102 + 12) = 2081;
      *((_QWORD *)&v216 + 1) = v102 + 14;
      v104 = v221;
      sub_1A9064630(v224, v221, type metadata accessor for StoreFeedUpdater.Update);
      v105 = (uint64_t *)(v104 + *(int *)(v220 + 32));
      v106 = *v105;
      v107 = v105[1];
      swift_bridgeObjectRetain();
      sub_1A9064714(v104, type metadata accessor for StoreFeedUpdater.Update);
      *(_QWORD *)&v231[0] = sub_1A906436C(v106, v107, (uint64_t *)&v232);
      sub_1A93F8AA8();
      swift_release();
      v46 = (uint64_t)v227;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v100, v101, "Job %{private,mask.hash}s: Processing new delta update", (uint8_t *)v102, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v103, -1, -1);
      MEMORY[0x1AF41411C](v102, -1, -1);

    }
    else
    {

      swift_release();
    }
LABEL_30:
    v108 = *(_QWORD *)(v230 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v230 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider), *(_QWORD *)(v230 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider + 24));
    v109 = *(uint64_t (**)(void))(v108 + 8);
    swift_bridgeObjectRetain();
    v110 = v222;
    v111 = (void (*)(_QWORD, id))v109();
    swift_bridgeObjectRelease();
    if (v223)
      v223(v111, v110);
    v223 = v111;
    v112 = v217;
    v113 = v228;
    if (v217 >> 62)
    {
      swift_bridgeObjectRetain();
      v114 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v114 = *(_QWORD *)((v217 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v115 = v225;
    v116 = v226;
    v117 = v219;
    if (v114 || *(_QWORD *)(v219 + 16))
    {
      v118 = v112;
      v119 = v223;
      sub_1A91A4C78(v110, v46, v118, (char *)v223);
      v120 = (void *)sub_1A91A6050(v117);
      sub_1A91A653C((uint64_t)v120, v119);

    }
    else
    {
      if (qword_1ED2A87E0 != -1)
        swift_once();
      __swift_project_value_buffer(v115, (uint64_t)qword_1ED2A87C0);
      swift_retain();
      v162 = sub_1A93F7674();
      v163 = sub_1A93F87B4();
      if (os_log_type_enabled(v162, v163))
      {
        v164 = swift_slowAlloc();
        v219 = swift_slowAlloc();
        *(_QWORD *)&v232 = v219;
        *(_DWORD *)v164 = 141558275;
        *(_QWORD *)&v231[0] = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v164 + 12) = 2081;
        v217 = v164 + 14;
        v165 = v221;
        sub_1A9064630(v224, v221, type metadata accessor for StoreFeedUpdater.Update);
        v166 = (uint64_t *)(v165 + *(int *)(v220 + 32));
        v167 = *v166;
        v168 = v166[1];
        swift_bridgeObjectRetain();
        v169 = v165;
        v115 = v225;
        v116 = v226;
        sub_1A9064714(v169, type metadata accessor for StoreFeedUpdater.Update);
        *(_QWORD *)&v231[0] = sub_1A906436C(v167, v168, (uint64_t *)&v232);
        v110 = v222;
        sub_1A93F8AA8();
        swift_release();
        v46 = (uint64_t)v227;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v162, v163, "Job %{private,mask.hash}s: Sync response contained no updates", (uint8_t *)v164, 0x16u);
        v170 = v219;
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v170, -1, -1);
        MEMORY[0x1AF41411C](v164, -1, -1);

      }
      else
      {

        swift_release();
      }
      v113 = v228;
    }
    if (*((_QWORD *)v229 + 8))
    {
      swift_bridgeObjectRetain();
      v121 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
    }
    else
    {
      v121 = 0;
    }
    objc_msgSend(v110, sel_setNextSyncToken_, v121);

    v122 = v218;
    sub_1A9062170(v46, v218, &qword_1ED2A5C80);
    v123 = *(__int128 **)(v113 + 48);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v123)(v122, 1, v116) == 1)
    {
      v124 = 0;
    }
    else
    {
      v124 = (void *)sub_1A93F73B0();
      (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v122, v116);
    }
    objc_msgSend(v110, sel_setBootstrapGeneration_, v124);

    v125 = *((unsigned __int8 *)v229 + 112);
    if (v125 == 255)
      goto LABEL_67;
    v126 = *((_QWORD *)v229 + 10);
    *(_QWORD *)&v216 = *((_QWORD *)v229 + 9);
    *((_QWORD *)&v216 + 1) = v126;
    v127 = *((_QWORD *)v229 + 12);
    v217 = *((_QWORD *)v229 + 11);
    v218 = v127;
    v219 = *((_QWORD *)v229 + 13);
    v128 = v230 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_bagConfiguration;
    v129 = v229;
    if (*(_BYTE *)(v128 + *(int *)(type metadata accessor for FeedManagerBagConfiguration() + 24)) == 1
      && (sub_1A91A7A20((__int128 *)((char *)v129 + 120), v237), sub_1A91A7A20(v237, v243), (v244 & 0xC0) == 0x40))
    {
      v229 = v123;
      v244 &= 0x3Fu;
      sub_1A91A7A38((uint64_t)v243, (uint64_t)v245);
      v131 = *((_QWORD *)&v216 + 1);
      v130 = v216;
      v232 = v216;
      v132 = v115;
      v134 = v217;
      v133 = v218;
      v233 = v217;
      v234 = v218;
      v135 = v219;
      v235 = v219;
      v236 = v125;
      sub_1A91A7A38((uint64_t)v245, (uint64_t)v231);
      v136 = v131;
      v46 = (uint64_t)v227;
      v137 = v134;
      v115 = v132;
      sub_1A919EEC4(v130, v136, v137, v133, v135, v125);
      _s18PodcastsFoundation12MediaRequestC0D4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)&v232);
      if ((v138 & 1) != 0)
      {
        sub_1A919F204(v216, *((uint64_t *)&v216 + 1), v217, v218, v219, v125);
        if (qword_1ED2A87E0 != -1)
          swift_once();
        __swift_project_value_buffer(v132, (uint64_t)qword_1ED2A87C0);
        swift_retain();
        v139 = sub_1A93F7674();
        v140 = sub_1A93F87A8();
        v141 = os_log_type_enabled(v139, v140);
        v116 = v226;
        v123 = v229;
        if (v141)
        {
          v142 = swift_slowAlloc();
          v219 = swift_slowAlloc();
          *(_QWORD *)&v232 = v219;
          *(_DWORD *)v142 = 141558275;
          *(_QWORD *)&v231[0] = 1752392040;
          sub_1A93F8AA8();
          *(_WORD *)(v142 + 12) = 2081;
          v218 = v142 + 14;
          v143 = v221;
          sub_1A9064630(v224, v221, type metadata accessor for StoreFeedUpdater.Update);
          v144 = (uint64_t *)(v143 + *(int *)(v220 + 32));
          v145 = *v144;
          v146 = v144[1];
          swift_bridgeObjectRetain();
          v147 = v143;
          v116 = v226;
          sub_1A9064714(v147, type metadata accessor for StoreFeedUpdater.Update);
          v115 = v225;
          *(_QWORD *)&v231[0] = sub_1A906436C(v145, v146, (uint64_t *)&v232);
          v110 = v222;
          sub_1A93F8AA8();
          swift_release();
          v46 = (uint64_t)v227;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A904E000, v139, v140, "Job %{private,mask.hash}s: Next link is the same page we just loaded, we're stuck in a loop, ending update.", (uint8_t *)v142, 0x16u);
          v148 = v219;
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v148, -1, -1);
          MEMORY[0x1AF41411C](v142, -1, -1);

        }
        else
        {

          swift_release();
        }
        v113 = v228;
        v171 = *(_QWORD *)(v230 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 40);
        v172 = __OFADD__(v171, 1);
        v173 = v171 + 1;
        if (!v172)
        {
          *(_QWORD *)(v230 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 40) = v173;
LABEL_67:
          LOBYTE(v232) = 13;
          v229 = (__int128 *)FeedUpdateType.beginInterval()();
          objc_msgSend(v110, sel_setFeedUpdateNeedsRetry_, 0);
          v174 = v211;
          sub_1A9062170(v46, v211, &qword_1ED2A5C80);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v123)(v174, 1, v116) == 1)
          {
            sub_1A905FD54(v174, &qword_1ED2A5C80);
            v175 = v215;
            v176 = v223;
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v113 + 32))(v212, v174, v116);
            if (qword_1ED2A87E0 != -1)
              swift_once();
            __swift_project_value_buffer(v115, (uint64_t)qword_1ED2A87C0);
            swift_retain();
            v177 = sub_1A93F7674();
            v178 = sub_1A93F87B4();
            if (os_log_type_enabled(v177, v178))
            {
              v179 = swift_slowAlloc();
              v180 = swift_slowAlloc();
              *(_QWORD *)&v232 = v180;
              *(_DWORD *)v179 = 141558275;
              *(_QWORD *)&v231[0] = 1752392040;
              sub_1A93F8AA8();
              *(_WORD *)(v179 + 12) = 2081;
              v219 = v179 + 14;
              v181 = v221;
              sub_1A9064630(v224, v221, type metadata accessor for StoreFeedUpdater.Update);
              v182 = (uint64_t *)(v181 + *(int *)(v220 + 32));
              v184 = *v182;
              v183 = v182[1];
              swift_bridgeObjectRetain();
              v116 = v226;
              sub_1A9064714(v181, type metadata accessor for StoreFeedUpdater.Update);
              v185 = v184;
              v46 = (uint64_t)v227;
              *(_QWORD *)&v231[0] = sub_1A906436C(v185, v183, (uint64_t *)&v232);
              sub_1A93F8AA8();
              swift_release();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1A904E000, v177, v178, "Job %{private,mask.hash}s: Bootstrap completed, feed deleting all episodes that are not in this bootstrap.", (uint8_t *)v179, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1AF41411C](v180, -1, -1);
              MEMORY[0x1AF41411C](v179, -1, -1);

            }
            else
            {

              swift_release();
            }
            v186 = (void *)objc_opt_self();
            v187 = (void *)sub_1A93F8010();
            v188 = objc_msgSend(v186, sel_predicateForAllEpisodesOnPodcastUuid_, v187);

            v189 = v212;
            v190 = (void *)_sSo9MTEpisodeC18PodcastsFoundationE31predicateForEpisodesNotMatching19bootstrapGenerationSo11NSPredicateC0C04UUIDV_tFZ_0();
            v191 = objc_msgSend(v188, sel_AND_, v190);

            v192 = objc_msgSend(v186, sel_predicateForFeedDeleted_, 0);
            v193 = objc_msgSend(v191, sel_AND_, v192);

            v176 = v223;
            sub_1A91A653C((uint64_t)v193, v223);
            v110 = v222;
            objc_msgSend(v222, sel_setBootstrapGeneration_, 0);

            (*(void (**)(char *, uint64_t))(v228 + 8))(v189, v116);
            v115 = v225;
            v175 = v215;
          }
          objc_msgSend(v176, sel_unsafeFinalizeIngestion);
          objc_msgSend(v110, sel_setImporting_, 0);
          objc_msgSend(v110, sel_setIsTransitioningFromImplicit_, 0);
          objc_msgSend(v175, sel_saveInCurrentBlock);
          if (qword_1ED2A87E0 != -1)
            swift_once();
          __swift_project_value_buffer(v115, (uint64_t)qword_1ED2A87C0);
          swift_retain();
          v194 = sub_1A93F7674();
          v195 = sub_1A93F87B4();
          if (os_log_type_enabled(v194, v195))
          {
            v196 = swift_slowAlloc();
            v197 = swift_slowAlloc();
            *(_QWORD *)&v232 = v197;
            *(_DWORD *)v196 = 141558275;
            *(_QWORD *)&v231[0] = 1752392040;
            sub_1A93F8AA8();
            *(_WORD *)(v196 + 12) = 2081;
            v228 = v196 + 14;
            v198 = v221;
            sub_1A9064630(v224, v221, type metadata accessor for StoreFeedUpdater.Update);
            v199 = (uint64_t *)(v198 + *(int *)(v220 + 32));
            v200 = *v199;
            v201 = v199[1];
            swift_bridgeObjectRetain();
            sub_1A9064714(v198, type metadata accessor for StoreFeedUpdater.Update);
            *(_QWORD *)&v231[0] = sub_1A906436C(v200, v201, (uint64_t *)&v232);
            sub_1A93F8AA8();
            swift_release();
            v46 = (uint64_t)v227;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1A904E000, v194, v195, "Job %{private,mask.hash}s: Episode Processing fully completed", (uint8_t *)v196, 0x16u);
            swift_arrayDestroy();
            v110 = v222;
            MEMORY[0x1AF41411C](v197, -1, -1);
            MEMORY[0x1AF41411C](v196, -1, -1);

          }
          else
          {

            swift_release();
          }
          LOBYTE(v232) = 13;
          FeedUpdateType.endInterval(for:)();
          *(_QWORD *)&v232 = v204;
          *((_QWORD *)&v232 + 1) = v210;
          sub_1A91A7DD4((uint64_t)&v232);
          sub_1A91A7644(&v232, v231);
          sub_1A919B0A0(v231);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_release();

          v161 = v46;
LABEL_81:
          sub_1A905FD54(v161, &qword_1ED2A5C80);
          return;
        }
        __break(1u);
        goto LABEL_84;
      }
    }
    else
    {
      sub_1A919EE64(v216, *((uint64_t *)&v216 + 1), v217, v218, v219, v125);
    }
    swift_bridgeObjectRelease();
    LOBYTE(v232) = 16;
    v229 = (__int128 *)FeedUpdateType.beginInterval()();
    objc_msgSend(v110, sel_setFeedUpdateNeedsRetry_, 1);
    objc_msgSend(v223, sel_unsafeIngestPage);
    objc_msgSend(v215, sel_saveInCurrentBlock);
    if (qword_1ED2A87E0 != -1)
      swift_once();
    __swift_project_value_buffer(v115, (uint64_t)qword_1ED2A87C0);
    swift_retain();
    v149 = sub_1A93F7674();
    v150 = sub_1A93F87B4();
    if (os_log_type_enabled(v149, v150))
    {
      v151 = swift_slowAlloc();
      v228 = swift_slowAlloc();
      *(_QWORD *)&v232 = v228;
      *(_DWORD *)v151 = 141558275;
      *(_QWORD *)&v231[0] = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v151 + 12) = 2081;
      v226 = v151 + 14;
      v152 = v221;
      sub_1A9064630(v224, v221, type metadata accessor for StoreFeedUpdater.Update);
      v153 = (uint64_t *)(v152 + *(int *)(v220 + 32));
      v155 = *v153;
      v154 = v153[1];
      swift_bridgeObjectRetain();
      sub_1A9064714(v152, type metadata accessor for StoreFeedUpdater.Update);
      *(_QWORD *)&v231[0] = sub_1A906436C(v155, v154, (uint64_t *)&v232);
      sub_1A93F8AA8();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v149, v150, "Job %{private,mask.hash}s: Episode Processing complete, moving to next page", (uint8_t *)v151, 0x16u);
      v156 = v228;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v156, -1, -1);
      MEMORY[0x1AF41411C](v151, -1, -1);

    }
    else
    {

      swift_release();
    }
    LOBYTE(v232) = 16;
    FeedUpdateType.endInterval(for:)();
    v157 = v216;
    v232 = v216;
    v159 = v217;
    v158 = v218;
    v233 = v217;
    v234 = v218;
    v160 = v219;
    v235 = v219;
    v236 = v125 | 0x40;
    sub_1A91A80B0((uint64_t)&v232);
    sub_1A91A7644(&v232, v231);
    sub_1A919B0A0(v231);
    swift_unknownObjectRelease();
    swift_release();

    sub_1A919F204(v157, *((uint64_t *)&v157 + 1), v159, v158, v160, v125);
    v161 = (uint64_t)v227;
    goto LABEL_81;
  }
  v75 = v209;
  v70(v209, (os_log_t)v71, v72);
  v76 = (uint64_t)v227;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v227, v75, v72);
  v73(v76, 0, 1, v72);
  v77 = v225;
  if (qword_1ED2A87E0 != -1)
    swift_once();
  v78 = __swift_project_value_buffer(v77, (uint64_t)qword_1ED2A87C0);
  v79 = (uint64_t)v205;
  v80 = v208;
  v205[2](v208, v78, v77);
  v81 = v207;
  sub_1A9062170(v76, v207, &qword_1ED2A5C80);
  swift_retain_n();
  v82 = sub_1A93F7674();
  v83 = sub_1A93F87B4();
  if (!os_log_type_enabled(v82, (os_log_type_t)v83))
  {

    sub_1A905FD54(v81, &qword_1ED2A5C80);
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v77);
    (*(void (**)(char *, uint64_t))(v228 + 8))(v75, v226);
    goto LABEL_29;
  }
  LODWORD(v213) = v83;
  v84 = swift_slowAlloc();
  v203 = swift_slowAlloc();
  *(_QWORD *)&v232 = v203;
  *(_DWORD *)v84 = 141558531;
  *(_QWORD *)&v231[0] = 1752392040;
  sub_1A93F8AA8();
  *(_WORD *)(v84 + 12) = 2081;
  *((_QWORD *)&v216 + 1) = v84 + 14;
  v85 = v221;
  sub_1A9064630(v224, v221, type metadata accessor for StoreFeedUpdater.Update);
  v86 = (uint64_t *)(v85 + *(int *)(v220 + 32));
  v88 = *v86;
  v87 = v86[1];
  swift_bridgeObjectRetain();
  sub_1A9064714(v85, type metadata accessor for StoreFeedUpdater.Update);
  *(_QWORD *)&v231[0] = sub_1A906436C(v88, v87, (uint64_t *)&v232);
  v202[1] = (char *)v231 + 8;
  v89 = v81;
  sub_1A93F8AA8();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v84 + 22) = 2082;
  v90 = v206;
  sub_1A9062170(v81, v206, &qword_1ED2A5C80);
  v91 = v226;
  if (v74(v90, 1, v226) != 1)
  {
    sub_1A9066CA8(&qword_1ED2A5C78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v92 = sub_1A93F9060();
    v94 = v93;
    v95 = *(void (**)(uint64_t, uint64_t))(v228 + 8);
    v95(v90, v91);
    *(_QWORD *)&v231[0] = sub_1A906436C(v92, v94, (uint64_t *)&v232);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A905FD54(v89, &qword_1ED2A5C80);
    _os_log_impl(&dword_1A904E000, v82, (os_log_type_t)v213, "Job %{private,mask.hash}s: Processing: Continuing bootstrap with token %{public}s", (uint8_t *)v84, 0x20u);
    v96 = v203;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v96, -1, -1);
    MEMORY[0x1AF41411C](v84, -1, -1);

    ((void (*)(char *, uint64_t))v205[1])(v208, v225);
    v95((uint64_t)v209, v91);
LABEL_29:
    v46 = (uint64_t)v227;
    goto LABEL_30;
  }
LABEL_85:
  __break(1u);
}

uint64_t sub_1A91A4C78(void *a1, uint64_t a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  unsigned __int8 v62;
  char *v63;
  double v64;
  double v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  id v69;
  void *v70;
  char *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(uint64_t, uint64_t, uint64_t);
  int v87;
  id v88;
  void *v89;
  uint64_t v90;
  id v91;
  double v92;
  double v93;
  unsigned int v94;
  int v95;
  double v96;
  unsigned int v97;
  id v98;
  NSObject *v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  id v109;
  int v110;
  void *v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  os_log_t v120;
  uint64_t v121;
  id v122;
  uint64_t inited;
  unint64_t v124;
  __CFString *v125;
  unint64_t v126;
  id v127;
  uint64_t v128;
  void *v129;
  id v130;
  uint64_t result;
  uint64_t v132;
  id v133;
  uint64_t updated;
  uint64_t v135;
  __int128 v136;
  char *v137;
  void (*v138)(char *, uint64_t);
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  os_log_t v145;
  unint64_t v146;
  unint64_t v147;
  __int128 v148;
  __CFString *v149;
  char *v150;
  uint64_t v151;
  id v152;
  int v153;
  id v154;
  char *v155;
  char *v156;
  double v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  double v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t aBlock[6];
  double v172;
  char v173;

  v5 = v4;
  v161 = a4;
  v169 = a2;
  v152 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C80);
  MEMORY[0x1E0C80A78](v7);
  v164 = (uint64_t)&v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v160 = (uint64_t)&v132 - v10;
  v142 = sub_1A93F738C();
  v168 = *(_QWORD *)(v142 - 8);
  MEMORY[0x1E0C80A78](v142);
  v141 = (char *)&v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1E0C80A78](v140);
  v139 = (uint64_t)&v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(aBlock[0]) = 14;
  updated = FeedUpdateType.beginInterval()();
  v13 = 0;
  v14 = sub_1A919A6E0(a3);
  sub_1A93F8040();
  v15 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v16 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v15, sel_initWithEntityName_, v16);

  v18 = (void *)sub_1A91A6050(v14);
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setPredicate_, v18);

  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v133 = v17;
  v19 = sub_1A93F89DC();
  v32 = v19;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v167 = a3;
  v156 = v5;
  if (v20)
  {
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1A929E62C(0, v20 & ~(v20 >> 63), 0);
    if (v20 < 0)
    {
      __break(1u);
      goto LABEL_76;
    }
    v166 = 0;
    v21 = 0;
    v22 = aBlock[0];
    v170 = v32 & 0xC000000000000001;
    v23 = v32;
    do
    {
      if (*(double *)&v170 == 0.0)
        v24 = *(id *)(v32 + 8 * v21 + 32);
      else
        v24 = (id)MEMORY[0x1AF4129DC](v21, v32);
      v25 = v24;
      v172 = COERCE_DOUBLE(objc_msgSend(v24, sel_storeTrackId));
      v26 = sub_1A93F9060();
      v28 = v27;
      aBlock[0] = v22;
      v30 = *(_QWORD *)(v22 + 16);
      v29 = *(_QWORD *)(v22 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1A929E62C(v29 > 1, v30 + 1, 1);
        v22 = aBlock[0];
      }
      ++v21;
      *(_QWORD *)(v22 + 16) = v30 + 1;
      v31 = (_QWORD *)(v22 + 24 * v30);
      v31[4] = v26;
      v31[5] = v28;
      v31[6] = v25;
      v32 = v23;
    }
    while (v20 != v21);
    swift_bridgeObjectRelease();
    a3 = v167;
    v5 = v156;
    v13 = v166;
    if (*(_QWORD *)(v22 + 16))
      goto LABEL_13;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9E90);
      v33 = sub_1A93F8E8C();
      goto LABEL_18;
    }
  }
  v33 = MEMORY[0x1E0DEE9E0];
LABEL_18:
  aBlock[0] = v33;
  v34 = swift_bridgeObjectRetain();
  sub_1A91A7DF0(v34, 1, aBlock);
  if (!v13)
  {
    swift_bridgeObjectRelease_n();
    v35 = aBlock[0];
    v36 = a3 >> 62;
    if (a3 >> 62)
      goto LABEL_70;
    v37 = *(uint64_t *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
    v38 = *(double *)(v35 + 16);
    v39 = v37 - *(_QWORD *)&v38;
    if (__OFSUB__(v37, *(_QWORD *)&v38))
    {
      __break(1u);
    }
    else
    {
      v40 = &v5[OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData];
      v41 = *(_QWORD *)&v5[OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 16];
      v42 = __OFADD__(v41, v39);
      v43 = v41 + v39;
      if (!v42)
      {
        *((_QWORD *)v40 + 2) = v43;
        v44 = *((_QWORD *)v40 + 3);
        v42 = __OFADD__(v44, *(_QWORD *)&v38);
        v45 = v44 + *(_QWORD *)&v38;
        if (!v42)
        {
          v170 = v37;
          *((_QWORD *)v40 + 3) = v45;
          if (qword_1ED2A87E0 == -1)
          {
LABEL_25:
            v151 = sub_1A93F7698();
            __swift_project_value_buffer(v151, (uint64_t)qword_1ED2A87C0);
            swift_retain();
            v46 = sub_1A93F7674();
            v47 = sub_1A93F87B4();
            LODWORD(v166) = v47;
            v48 = os_log_type_enabled(v46, v47);
            v49 = &unk_1ED2B8000;
            v50 = MEMORY[0x1E0DEE9B8];
            if (v48)
            {
              v51 = swift_slowAlloc();
              v165 = v36;
              v52 = v51;
              v163 = swift_slowAlloc();
              aBlock[0] = v163;
              *(_DWORD *)v52 = 141559043;
              *(_QWORD *)&v172 = 1752392040;
              sub_1A93F8AA8();
              *(_WORD *)(v52 + 12) = 2081;
              *(_QWORD *)&v162 = v37 - *(_QWORD *)&v38;
              v53 = v139;
              sub_1A9064630((uint64_t)&v156[OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update], v139, type metadata accessor for StoreFeedUpdater.Update);
              v54 = (uint64_t *)(v53 + *(int *)(v140 + 32));
              v55 = v35;
              v57 = *v54;
              v56 = v54[1];
              swift_bridgeObjectRetain();
              v49 = (_QWORD *)&unk_1ED2B8000;
              sub_1A9064714(v53, type metadata accessor for StoreFeedUpdater.Update);
              v58 = v57;
              v35 = v55;
              v50 = MEMORY[0x1E0DEE9B8];
              v172 = COERCE_DOUBLE(sub_1A906436C(v58, v56, aBlock));
              sub_1A93F8AA8();
              swift_release();
              swift_bridgeObjectRelease();
              *(_WORD *)(v52 + 22) = 2048;
              v172 = *(double *)&v170;
              sub_1A93F8AA8();
              *(_WORD *)(v52 + 32) = 2048;
              v172 = v38;
              sub_1A93F8AA8();
              *(_WORD *)(v52 + 42) = 2048;
              v172 = v162;
              sub_1A93F8AA8();
              _os_log_impl(&dword_1A904E000, v46, (os_log_type_t)v166, "Job %{private,mask.hash}s: Ingesting %ld episodes. %ld updates and %ld inserts.", (uint8_t *)v52, 0x34u);
              v59 = v163;
              swift_arrayDestroy();
              a3 = v167;
              MEMORY[0x1AF41411C](v59, -1, -1);
              v60 = v52;
              v36 = v165;
              MEMORY[0x1AF41411C](v60, -1, -1);

            }
            else
            {

              swift_release();
            }
            v61 = v152;
            v62 = objc_msgSend(v152, sel_importing);
            v5 = v161;
            if ((v62 & 1) != 0 || (objc_msgSend(v61, sel_isHiddenOrImplicitlyFollowed) & 1) != 0)
              LODWORD(v165) = 0;
            else
              LODWORD(v165) = objc_msgSend(v61, sel_isTransitioningFromImplicit) ^ 1;
            v63 = v141;
            sub_1A93F7374();
            sub_1A93F72D8();
            v65 = v64;
            v138 = *(void (**)(char *, uint64_t))(v168 + 8);
            v138(v63, v142);
            if (v36)
            {
              swift_bridgeObjectRetain();
              v66 = sub_1A93F8E5C();
              if (!v66)
              {
LABEL_68:

                swift_bridgeObjectRelease();
                swift_release();
                LOBYTE(aBlock[0]) = 14;
                FeedUpdateType.endInterval(for:)();
                return swift_release();
              }
            }
            else
            {
              v66 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v66)
                goto LABEL_68;
            }
            v155 = &v156[v49[320]];
            v170 = a3 & 0xC000000000000001;
            v150 = &v173;
            v137 = (char *)&v172 + 4;
            v149 = CFSTR("com.apple.podcasts.storeEpisodeInsert");
            v68 = 4;
            *(_QWORD *)&v67 = 141560835;
            v136 = v67;
            v135 = v50 + 8;
            v148 = xmmword_1A940BE60;
            v147 = 0x80000001A9446610;
            v146 = 0x80000001A9446630;
            v166 = v66;
            v159 = v35;
            while (1)
            {
              if (*(double *)&v170 == 0.0)
                v71 = (char *)*(id *)(a3 + 8 * v68);
              else
                v71 = (char *)MEMORY[0x1AF4129DC](v68 - 4, a3);
              v70 = v71;
              v36 = v68 - 3;
              if (__OFADD__(v68 - 4, 1))
              {
                __break(1u);
LABEL_70:
                swift_bridgeObjectRetain();
                *(double *)&v37 = COERCE_DOUBLE(sub_1A93F8E5C());
                swift_bridgeObjectRelease();
                goto LABEL_21;
              }
              v72 = (uint64_t *)&v71[OBJC_IVAR___MTServerPodcastEpisode_id];
              if (*(_QWORD *)(v35 + 16))
              {
                v74 = *v72;
                v73 = v72[1];
                swift_bridgeObjectRetain();
                v75 = sub_1A9094640(v74, v73);
                if ((v76 & 1) != 0)
                {
                  v77 = *(id *)(*(_QWORD *)(v35 + 56) + 8 * v75);
                  swift_bridgeObjectRelease();

                  v78 = v160;
                  sub_1A9062170(v169, v160, &qword_1ED2A5C80);
                  v79 = sub_1A93F73E0();
                  v80 = *(_QWORD *)(v79 - 8);
                  v81 = 0;
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79) != 1)
                  {
                    v82 = v160;
                    v81 = sub_1A93F73B0();
                    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v82, v79);
                  }
                  objc_msgSend(v77, sel_setBootstrapGeneration_, v81);
                  v66 = v166;
                  goto LABEL_38;
                }
                swift_bridgeObjectRelease();
              }
              v69 = objc_msgSend(v5, sel_unsafeIngestNewEpisode_, v70);
              if (!v69)
              {
                if ((v165 & 1) != 0)
                  goto LABEL_40;
                goto LABEL_39;
              }
              v168 = v68 - 3;
              v83 = v164;
              sub_1A9062170(v169, v164, &qword_1ED2A5C80);
              v84 = sub_1A93F73E0();
              v85 = *(_QWORD *)(v84 - 8);
              v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
              v87 = v86(v83, 1, v84);
              v88 = v69;
              v89 = 0;
              if (v87 != 1)
              {
                v90 = v164;
                v89 = (void *)sub_1A93F73B0();
                (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v90, v84);
              }
              objc_msgSend(v88, sel_setBootstrapGeneration_, v89);

              if (!(_DWORD)v165)
              {
                a3 = v167;
                v5 = v161;
                v35 = v159;
                v66 = v166;
                v36 = v168;
                goto LABEL_39;
              }
              v91 = v88;
              objc_msgSend(v91, sel_pubDate);
              v93 = v92;
              v158 = (uint64_t)v91;
              v94 = objc_msgSend(v91, sel_backCatalog);
              v95 = v86(v169, 1, v84);
              v96 = *(double *)&v155[*(int *)(type metadata accessor for FeedUpdateRequest() + 48)];
              v97 = objc_msgSend(v152, sel_subscribed);
              if (qword_1EEAB6D70 != -1)
                swift_once();
              LODWORD(v162) = v94;
              v157 = v96;
              LODWORD(v163) = v97;
              __swift_project_value_buffer(v151, (uint64_t)qword_1EEABA6A8);
              swift_retain();
              v98 = v70;
              v99 = sub_1A93F7674();
              v100 = sub_1A93F87B4();
              if (os_log_type_enabled(v99, (os_log_type_t)v100))
              {
                v144 = v100;
                v145 = v99;
                v153 = v95;
                v101 = swift_slowAlloc();
                v154 = v98;
                v102 = v101;
                v143 = swift_slowAlloc();
                aBlock[0] = v143;
                *(_DWORD *)v102 = v136;
                *(_QWORD *)&v172 = 1752392040;
                sub_1A93F8AA8();
                *(_WORD *)(v102 + 12) = 2081;
                v103 = v139;
                sub_1A9064630((uint64_t)v155, v139, type metadata accessor for StoreFeedUpdater.Update);
                v104 = (uint64_t *)(v103 + *(int *)(v140 + 32));
                v105 = *v104;
                v106 = v104[1];
                swift_bridgeObjectRetain();
                sub_1A9064714(v103, type metadata accessor for StoreFeedUpdater.Update);
                v172 = COERCE_DOUBLE(sub_1A906436C(v105, v106, aBlock));
                sub_1A93F8AA8();
                swift_release();
                swift_bridgeObjectRelease();
                *(_WORD *)(v102 + 22) = 2080;
                v107 = *v72;
                v108 = v72[1];
                swift_bridgeObjectRetain();
                v172 = COERCE_DOUBLE(sub_1A906436C(v107, v108, aBlock));
                sub_1A93F8AA8();

                swift_bridgeObjectRelease();
                *(_WORD *)(v102 + 32) = 2080;
                if (qword_1EEAB6CE0 != -1)
                  swift_once();
                v109 = objc_msgSend((id)qword_1EEAB94F8, sel_stringFromTimeInterval_, v65 - v93);
                v110 = v153;
                if (v109)
                {
                  v111 = v109;
                  v112 = sub_1A93F8040();
                  v114 = v113;

                }
                else
                {
                  v114 = 0xEF474E4952545320;
                  v112 = 0x41544C4544204F4ELL;
                }
                v81 = v158;
                LODWORD(v158) = v110 != 1;
                v172 = COERCE_DOUBLE(sub_1A906436C(v112, v114, aBlock));
                sub_1A93F8AA8();
                swift_bridgeObjectRelease();
                *(_WORD *)(v102 + 42) = 2048;
                v172 = v65 - v93;
                sub_1A93F8AA8();
                *(_WORD *)(v102 + 52) = 2048;
                v172 = v65;
                sub_1A93F8AA8();
                *(_WORD *)(v102 + 62) = 2080;
                v115 = v141;
                sub_1A93F72CC();
                sub_1A9066CA8((unint64_t *)&qword_1ED2A5C58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
                v116 = v142;
                v117 = sub_1A93F9060();
                v119 = v118;
                v138(v115, v116);
                v172 = COERCE_DOUBLE(sub_1A906436C(v117, v119, aBlock));
                sub_1A93F8AA8();
                swift_bridgeObjectRelease();
                *(_WORD *)(v102 + 72) = 2048;
                v172 = v93;
                sub_1A93F8AA8();
                *(_WORD *)(v102 + 82) = 1024;
                LODWORD(v172) = v163;
                sub_1A93F8AA8();
                *(_WORD *)(v102 + 88) = 1024;
                LODWORD(v172) = LODWORD(v162);
                sub_1A93F8AA8();
                *(_WORD *)(v102 + 94) = 1024;
                LODWORD(v172) = v158;
                sub_1A93F8AA8();
                *(_WORD *)(v102 + 100) = 2048;
                v172 = v157;
                sub_1A93F8AA8();
                v120 = v145;
                _os_log_impl(&dword_1A904E000, v145, (os_log_type_t)v144, "Job %{private,mask.hash}s: Metrics event for %s - insert delta %s - %f - current time %f - pub date %s - %f - is show followed %{BOOL}d - back catalog %{BOOL}d - bootstrap update %{BOOL}d - feed update source %ld", (uint8_t *)v102, 0x6Eu);
                v121 = v143;
                swift_arrayDestroy();
                MEMORY[0x1AF41411C](v121, -1, -1);
                MEMORY[0x1AF41411C](v102, -1, -1);

                v36 = v168;
                v77 = v154;
              }
              else
              {

                swift_release();
                v36 = v168;
                v81 = v158;
                v77 = v98;
              }
              v122 = objc_msgSend(objc_allocWithZone((Class)PFCoreAnalyticsChannel), sel_init);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9730);
              inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = v148;
              v124 = v147;
              *(_QWORD *)(inited + 32) = 0xD000000000000012;
              *(_QWORD *)(inited + 40) = v124;
              v125 = v149;
              *(_QWORD *)(inited + 48) = sub_1A93F8598();
              strcpy((char *)(inited + 56), "isBackCatalog");
              *(_WORD *)(inited + 70) = -4864;
              *(_QWORD *)(inited + 72) = sub_1A93F8400();
              *(_QWORD *)(inited + 80) = 0x7473746F6F427369;
              *(_QWORD *)(inited + 88) = 0xEB00000000706172;
              *(_QWORD *)(inited + 96) = sub_1A93F8400();
              *(_QWORD *)(inited + 104) = 0xD000000000000010;
              *(_QWORD *)(inited + 112) = v146;
              *(_QWORD *)(inited + 120) = sub_1A93F8694();
              strcpy((char *)(inited + 128), "isShowFollowed");
              *(_BYTE *)(inited + 143) = -18;
              *(_QWORD *)(inited + 144) = sub_1A93F8400();
              v126 = sub_1A90C1B64(inited);
              v127 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
              v128 = swift_allocObject();
              *(_QWORD *)(v128 + 16) = v126;
              aBlock[4] = (uint64_t)sub_1A90D287C;
              aBlock[5] = v128;
              aBlock[0] = MEMORY[0x1E0C809B0];
              aBlock[1] = 1107296256;
              aBlock[2] = (uint64_t)sub_1A90AC824;
              aBlock[3] = (uint64_t)&block_descriptor_31;
              v129 = _Block_copy(aBlock);
              swift_release();
              v130 = objc_msgSend(v127, sel_initWithName_generator_, v125, v129);

              _Block_release(v129);
              objc_msgSend(v122, sel_sendEvent_, v130);

              v70 = (void *)v81;
              v5 = v161;
              v66 = v166;
              v35 = v159;
LABEL_38:
              v69 = v70;

              v70 = (void *)v81;
              a3 = v167;
LABEL_39:

              v70 = v69;
LABEL_40:

              ++v68;
              if (v36 == v66)
                goto LABEL_68;
            }
          }
LABEL_74:
          swift_once();
          goto LABEL_25;
        }
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
    }
    __break(1u);
    goto LABEL_73;
  }
LABEL_76:
  swift_bridgeObjectRelease();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1A91A6050(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  void *v37;
  id v38;
  _QWORD v39[3];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v3 = a1 + 32;
    result = swift_bridgeObjectRetain();
    v5 = 0;
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v7 = (uint64_t *)(v3 + 16 * v5);
      v8 = *v7;
      v9 = v7[1];
      v10 = HIBYTE(v9) & 0xF;
      v11 = v8 & 0xFFFFFFFFFFFFLL;
      if ((v9 & 0x2000000000000000) != 0)
        v12 = HIBYTE(v9) & 0xF;
      else
        v12 = v8 & 0xFFFFFFFFFFFFLL;
      if (v12)
      {
        if ((v9 & 0x1000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          v15 = sub_1A92DA254(v8, v9, 10);
          v31 = v30;
          result = swift_bridgeObjectRelease();
          if ((v31 & 1) == 0)
            goto LABEL_48;
        }
        else if ((v9 & 0x2000000000000000) != 0)
        {
          v39[0] = v8;
          v39[1] = v9 & 0xFFFFFFFFFFFFFFLL;
          if (v8 == 43)
          {
            if (!v10)
              goto LABEL_70;
            if (v10 == 1 || (BYTE1(v8) - 48) > 9u)
              goto LABEL_4;
            v15 = (BYTE1(v8) - 48);
            if (v10 == 2)
              goto LABEL_48;
            if ((BYTE2(v8) - 48) <= 9u)
            {
              v15 = 10 * (BYTE1(v8) - 48) + (BYTE2(v8) - 48);
              v16 = v10 - 3;
              if (v10 != 3)
              {
                v17 = (unsigned __int8 *)v39 + 3;
                while (1)
                {
                  v18 = *v17 - 48;
                  if (v18 > 9)
                    goto LABEL_4;
                  v19 = 10 * v15;
                  if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
                    goto LABEL_4;
                  v15 = v19 + v18;
                  if (__OFADD__(v19, v18))
                    goto LABEL_4;
                  ++v17;
                  if (!--v16)
                    goto LABEL_48;
                }
              }
              goto LABEL_48;
            }
          }
          else if (v8 == 45)
          {
            if (!v10)
            {
              __break(1u);
LABEL_70:
              __break(1u);
              return result;
            }
            if (v10 == 1 || (BYTE1(v8) - 48) > 9u)
              goto LABEL_4;
            if (v10 == 2)
            {
              v15 = -(uint64_t)(BYTE1(v8) - 48);
              goto LABEL_48;
            }
            if ((BYTE2(v8) - 48) <= 9u)
            {
              v15 = -10 * (BYTE1(v8) - 48) - (BYTE2(v8) - 48);
              v24 = v10 - 3;
              if (v10 != 3)
              {
                v27 = (unsigned __int8 *)v39 + 3;
                while (1)
                {
                  v28 = *v27 - 48;
                  if (v28 > 9)
                    goto LABEL_4;
                  v29 = 10 * v15;
                  if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
                    goto LABEL_4;
                  v15 = v29 - v28;
                  if (__OFSUB__(v29, v28))
                    goto LABEL_4;
                  ++v27;
                  if (!--v24)
                    goto LABEL_48;
                }
              }
              goto LABEL_48;
            }
          }
          else if (v10 && (v8 - 48) <= 9u)
          {
            v15 = (v8 - 48);
            if (v10 == 1)
              goto LABEL_48;
            if ((BYTE1(v8) - 48) <= 9u)
            {
              v15 = 10 * (v8 - 48) + (BYTE1(v8) - 48);
              v20 = v10 - 2;
              if (v10 != 2)
              {
                v21 = (unsigned __int8 *)v39 + 2;
                while (1)
                {
                  v22 = *v21 - 48;
                  if (v22 > 9)
                    goto LABEL_4;
                  v23 = 10 * v15;
                  if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
                    goto LABEL_4;
                  v15 = v23 + v22;
                  if (__OFADD__(v23, v22))
                    goto LABEL_4;
                  ++v21;
                  if (!--v20)
                    goto LABEL_48;
                }
              }
              goto LABEL_48;
            }
          }
        }
        else
        {
          if ((v8 & 0x1000000000000000) != 0)
            v13 = (unsigned __int8 *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
          else
            v13 = (unsigned __int8 *)sub_1A93F8D48();
          result = (uint64_t)sub_1A92DA234(v13, v11, 10);
          if ((v14 & 1) == 0)
          {
            v15 = result;
LABEL_48:
            result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_1A9118AF8(0, v6[2] + 1, 1, v6);
              v6 = (_QWORD *)result;
            }
            v26 = v6[2];
            v25 = v6[3];
            if (v26 >= v25 >> 1)
            {
              result = (uint64_t)sub_1A9118AF8((_QWORD *)(v25 > 1), v26 + 1, 1, v6);
              v6 = (_QWORD *)result;
            }
            v6[2] = v26 + 1;
            v6[v26 + 4] = v15;
          }
        }
      }
LABEL_4:
      if (++v5 == v1)
      {
        swift_bridgeObjectRelease();
        v2 = MEMORY[0x1E0DEE9D8];
        v32 = v6[2];
        if (!v32)
          goto LABEL_67;
LABEL_63:
        v39[0] = v2;
        sub_1A93F8D84();
        v33 = 0;
        do
        {
          v34 = v33 + 1;
          objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, v6[v33 + 4]);
          sub_1A93F8D60();
          sub_1A93F8D90();
          sub_1A93F8D9C();
          sub_1A93F8D6C();
          v33 = v34;
        }
        while (v32 != v34);
        v35 = v39[0];
        swift_bridgeObjectRelease();
        goto LABEL_68;
      }
    }
  }
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v32 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (v32)
    goto LABEL_63;
LABEL_67:
  swift_bridgeObjectRelease();
  v35 = MEMORY[0x1E0DEE9D8];
LABEL_68:
  v36 = (void *)objc_opt_self();
  sub_1A9159A30(v35);
  swift_bridgeObjectRelease();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
  sub_1A91A80C8();
  v37 = (void *)sub_1A93F85EC();
  swift_bridgeObjectRelease();
  v38 = objc_msgSend(v36, sel_predicateForEpisodeStoreTrackIds_, v37);

  return (uint64_t)v38;
}

void sub_1A91A653C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t i;
  id v32;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD v36[2];
  int v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t updated;
  uint64_t v42;
  uint64_t v43;

  v3 = v2;
  v6 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v43) = 15;
  updated = FeedUpdateType.beginInterval()();
  sub_1A93F8040();
  v9 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v10 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  objc_msgSend(v11, sel_setPredicate_, a1);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v12 = sub_1A93F89DC();
  v34 = v12;
  v35 = v12 >> 62;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 32);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 32) = v16;
    if (qword_1ED2A87E0 == -1)
      goto LABEL_5;
  }
  swift_once();
LABEL_5:
  v17 = sub_1A93F7698();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED2A87C0);
  swift_bridgeObjectRetain();
  swift_retain();
  v18 = sub_1A93F7674();
  v19 = sub_1A93F87B4();
  v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v21 = swift_slowAlloc();
    v38 = v13;
    v22 = (uint64_t)v8;
    v23 = v6;
    v24 = v21;
    v25 = swift_slowAlloc();
    v39 = v25;
    *(_DWORD *)v24 = 141558531;
    v42 = 1752392040;
    v43 = v25;
    v37 = v20;
    sub_1A93F8AA8();
    *(_WORD *)(v24 + 12) = 2081;
    v36[1] = v24 + 14;
    sub_1A9064630(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, v22, type metadata accessor for StoreFeedUpdater.Update);
    v26 = (uint64_t *)(v22 + *(int *)(v23 + 32));
    v40 = v11;
    v27 = *v26;
    v28 = v26[1];
    swift_bridgeObjectRetain();
    sub_1A9064714(v22, type metadata accessor for StoreFeedUpdater.Update);
    v42 = sub_1A906436C(v27, v28, &v43);
    sub_1A93F8AA8();
    swift_release();
    v11 = v40;
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2048;
    v42 = v38;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v18, (os_log_type_t)v37, "Job %{private,mask.hash}s: Feed deleting %ld episodes", (uint8_t *)v24, 0x20u);
    v29 = v39;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v29, -1, -1);
    MEMORY[0x1AF41411C](v24, -1, -1);

    if (v35)
      goto LABEL_7;
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
    if (v35)
    {
LABEL_7:
      swift_bridgeObjectRetain();
      v30 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
      if (!v30)
        goto LABEL_17;
      goto LABEL_11;
    }
  }
  v30 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v30)
  {
LABEL_17:

    swift_bridgeObjectRelease();
    LOBYTE(v43) = 15;
    FeedUpdateType.endInterval(for:)();
    swift_release();
    return;
  }
LABEL_11:
  if (v30 >= 1)
  {
    for (i = 0; i != v30; ++i)
    {
      if ((v34 & 0xC000000000000001) != 0)
        v32 = (id)MEMORY[0x1AF4129DC](i, v34);
      else
        v32 = *(id *)(v34 + 8 * i + 32);
      v33 = v32;
      objc_msgSend(a2, sel_unsafeDeleteFeedDeletedEpisode_, v32);

    }
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1A91A69CC()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3570]), sel_init);
  objc_msgSend(v0, sel_setAllowedUnits_, 240);
  objc_msgSend(v0, sel_setUnitsStyle_, 1);

  qword_1EEAB94F8 = (uint64_t)v0;
}

void sub_1A91A6A34(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t updated;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  void *v53;
  void *v54;
  id v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  _BOOL4 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  id v74;
  char *v75;
  uint64_t v76[2];
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t aBlock;
  uint64_t v89;
  uint64_t (*v90)(uint64_t);
  void *v91;
  uint64_t (*v92)();
  _QWORD *v93;

  v82 = a3;
  v80 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1E0C80A78](v80);
  v5 = (char *)v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7D58();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F7DB8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v83 = (char *)v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(aBlock) = 18;
  FeedUpdateType.endInterval(for:)();
  v13 = *(void **)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx);
  v14 = a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  updated = type metadata accessor for FeedUpdateRequest();
  v16 = *(_QWORD *)(v14 + *(int *)(updated + 28));
  v77 = v13;
  v17 = objc_msgSend(v13, sel_podcastForStoreId_, v16);
  v85 = v9;
  v86 = v7;
  v84 = v11;
  v81 = v14;
  if (v17)
  {
    v76[0] = (uint64_t)v5;
    v78 = v10;
    v79 = v6;
    v18 = v17;
    v20 = *(_QWORD *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider + 24);
    v19 = *(_QWORD *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider), v20);
    v21 = *(_QWORD *)(v14 + *(int *)(updated + 48));
    v22 = a2;
    v23 = *(_QWORD *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_updaterJobUUID);
    v24 = *(_QWORD *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_updaterJobUUID + 8);
    v25 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8);
    swift_bridgeObjectRetain();
    v26 = (void *)v25(v18, v21, v23, v24, v20, v19);
    swift_bridgeObjectRelease();
    v76[1] = (uint64_t)v26;
    objc_msgSend(v26, sel_unsafeFinalizeIngestion);
    objc_msgSend(v18, sel_setFeedUpdateNeedsRetry_, 1);
    objc_msgSend(v77, sel_saveInCurrentBlock);
    v77 = v18;
    v27 = objc_msgSend(v18, sel_uuid);
    if (v27)
    {
      v28 = v27;
      v29 = sub_1A93F8040();
      v31 = v30;

    }
    else
    {
      v29 = 0;
      v31 = 0;
    }
    v50 = v78;
    v51 = v84;
    v52 = (_QWORD *)swift_allocObject();
    v52[2] = v22;
    v52[3] = v29;
    v53 = v82;
    v52[4] = v31;
    v52[5] = v53;
    v92 = sub_1A91A8228;
    v93 = v52;
    aBlock = MEMORY[0x1E0C809B0];
    v89 = 1107296256;
    v90 = sub_1A908A91C;
    v91 = &block_descriptor_49;
    v54 = _Block_copy(&aBlock);
    swift_retain();
    v55 = v53;
    v56 = v83;
    sub_1A93F7D88();
    v87 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
    v57 = v85;
    v58 = v79;
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v56, v57, v54);
    _Block_release(v54);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v57, v58);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v56, v50);
    swift_release();
    if (qword_1ED2A87E0 != -1)
      swift_once();
    v59 = sub_1A93F7698();
    __swift_project_value_buffer(v59, (uint64_t)qword_1ED2A87C0);
    swift_retain();
    v60 = sub_1A93F7674();
    v61 = sub_1A93F87B4();
    v62 = os_log_type_enabled(v60, v61);
    v63 = v81;
    if (v62)
    {
      v64 = swift_slowAlloc();
      v65 = swift_slowAlloc();
      *(_DWORD *)v64 = 141558275;
      v87 = 1752392040;
      aBlock = v65;
      sub_1A93F8AA8();
      *(_WORD *)(v64 + 12) = 2081;
      v86 = v64 + 14;
      v66 = v63;
      v67 = v76[0];
      sub_1A9064630(v66, v76[0], type metadata accessor for StoreFeedUpdater.Update);
      v68 = (uint64_t *)(v67 + *(int *)(v80 + 32));
      v70 = *v68;
      v69 = v68[1];
      swift_bridgeObjectRetain();
      sub_1A9064714(v67, type metadata accessor for StoreFeedUpdater.Update);
      v87 = sub_1A906436C(v70, v69, &aBlock);
      sub_1A93F8AA8();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v60, v61, "Job %{private,mask.hash}s: Episode Processing partially completed", (uint8_t *)v64, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v65, -1, -1);
      MEMORY[0x1AF41411C](v64, -1, -1);
      swift_unknownObjectRelease();

      return;
    }

    swift_unknownObjectRelease();
  }
  else
  {
    v32 = v80;
    if (qword_1ED2A87E0 != -1)
      swift_once();
    v33 = sub_1A93F7698();
    __swift_project_value_buffer(v33, (uint64_t)qword_1ED2A87C0);
    v34 = a2;
    swift_retain();
    v35 = sub_1A93F7674();
    v36 = sub_1A93F87B4();
    v37 = v6;
    if (os_log_type_enabled(v35, v36))
    {
      v38 = swift_slowAlloc();
      v78 = v10;
      v39 = v38;
      v40 = (void *)swift_slowAlloc();
      v77 = v40;
      *(_DWORD *)v39 = 141558275;
      v87 = 1752392040;
      aBlock = (uint64_t)v40;
      sub_1A93F8AA8();
      *(_WORD *)(v39 + 12) = 2081;
      sub_1A9064630(v81, (uint64_t)v5, type metadata accessor for StoreFeedUpdater.Update);
      v41 = (uint64_t *)&v5[*(int *)(v32 + 32)];
      v79 = v37;
      v43 = *v41;
      v42 = v41[1];
      swift_bridgeObjectRetain();
      sub_1A9064714((uint64_t)v5, type metadata accessor for StoreFeedUpdater.Update);
      v44 = v43;
      v45 = v84;
      v87 = sub_1A906436C(v44, v42, &aBlock);
      sub_1A93F8AA8();
      swift_release();
      v37 = v79;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v35, v36, "Job %{private,mask.hash}s: Partial Success failed to finalize", (uint8_t *)v39, 0x16u);
      v46 = v77;
      swift_arrayDestroy();
      v47 = v85;
      MEMORY[0x1AF41411C](v46, -1, -1);
      v48 = v39;
      v49 = v78;
      MEMORY[0x1AF41411C](v48, -1, -1);

    }
    else
    {

      swift_release();
      v45 = v84;
      v47 = v85;
      v49 = v10;
    }
    v81 = *(_QWORD *)(v34 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_queue);
    v71 = swift_allocObject();
    v72 = v82;
    *(_QWORD *)(v71 + 16) = v34;
    *(_QWORD *)(v71 + 24) = v72;
    v92 = sub_1A91A8190;
    v93 = (_QWORD *)v71;
    aBlock = MEMORY[0x1E0C809B0];
    v89 = 1107296256;
    v90 = sub_1A908A91C;
    v91 = &block_descriptor_43;
    v73 = _Block_copy(&aBlock);
    swift_retain();
    v74 = v72;
    v75 = v83;
    sub_1A93F7D88();
    v87 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v75, v47, v73);
    _Block_release(v73);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v47, v37);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v75, v49);
  }
  swift_release();
}

uint64_t sub_1A91A72F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  BOOL v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t *);
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char v19;

  v8 = a1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8
                                                        + *(int *)(type metadata accessor for FeedUpdateRequest() + 64));
  if (v9)
    v10 = a3 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx);
    swift_retain();
    v9(a2, a3, v11);
    sub_1A9085818((uint64_t)v9);
  }
  v12 = *(uint64_t (**)(uint64_t, uint64_t *))(a1
                                                     + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_completion);
  v14 = a4;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0;
  v19 = 1;
  return v12(v8, &v14);
}

void sub_1A91A73D8()
{
  __int128 *v0;
  char *v1;
  __int128 v2[11];
  _OWORD v3[11];

  sub_1A91A7644(v0, v2);
  sub_1A91A7644(v2, v3);
  v1 = (char *)sub_1A91A7454 + 4 * byte_1A940BE80[sub_1A919F704((uint64_t)v3)];
  __asm { BR              X10 }
}

unint64_t sub_1A91A7454()
{
  uint64_t v0;

  sub_1A919F730(v0 - 256);
  return 0xD000000000000026;
}

_OWORD *sub_1A91A7644(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[6];
  a2[5] = a1[5];
  a2[6] = v6;
  a2[3] = v4;
  a2[4] = v5;
  v7 = a1[7];
  v8 = a1[8];
  v9 = a1[9];
  *(_OWORD *)((char *)a2 + 154) = *(__int128 *)((char *)a1 + 154);
  a2[8] = v8;
  a2[9] = v9;
  a2[7] = v7;
  return a2;
}

uint64_t sub_1A91A7684(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_WORD *)(a1 + 168));
  return a1;
}

uint64_t sub_1A91A76F8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A91A771C(uint64_t a1)
{
  return sub_1A91A145C(a1);
}

uint64_t sub_1A91A7724()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A91A7750(__int128 *a1)
{
  uint64_t v1;

  return sub_1A91A005C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1A91A7758()
{
  return objectdestroy_8Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1A91A7764(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A919F7B4(a1, a2 & 1, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1A91A7770(uint64_t result)
{
  *(_BYTE *)(result + 168) &= 0xC7u;
  *(_BYTE *)(result + 169) = 0;
  return result;
}

uint64_t sub_1A91A7784(uint64_t result)
{
  *(_BYTE *)(result + 168) = *(_BYTE *)(result + 168) & 0xC7 | 0x30;
  *(_BYTE *)(result + 169) = 0;
  return result;
}

uint64_t sub_1A91A779C()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1A91A77D0()
{
  uint64_t v0;

  sub_1A919FE84(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1A91A77DC(uint64_t result)
{
  *(_BYTE *)(result + 168) = *(_BYTE *)(result + 168) & 0xC7 | 8;
  *(_BYTE *)(result + 169) = 0;
  return result;
}

uint64_t sub_1A91A77F4(uint64_t result)
{
  *(_BYTE *)(result + 168) |= 0x38u;
  *(_BYTE *)(result + 169) = 0;
  return result;
}

uint64_t sub_1A91A7808(uint64_t result)
{
  *(_BYTE *)(result + 168) = *(_BYTE *)(result + 168) & 0xC7 | 0x10;
  *(_BYTE *)(result + 169) = 0;
  return result;
}

uint64_t sub_1A91A7820(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 128);
  v14 = *(_QWORD *)(a1 + 120);
  v11 = *(_QWORD *)(a1 + 144);
  v12 = *(_QWORD *)(a1 + 136);
  v10 = *(_QWORD *)(a1 + 152);
  v7 = *(_BYTE *)(a1 + 112);
  v8 = *(_BYTE *)(a1 + 160);
  sub_1A919EE40(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A919EEC4(v2, v3, v4, v5, v6, v7);
  sub_1A919EE40(v14, v13, v12, v11, v10, v8);
  return a1;
}

uint64_t sub_1A91A78F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_QWORD *)(a1 + 80);
  v11 = *(_QWORD *)(a1 + 104);
  v12 = *(_QWORD *)(a1 + 96);
  v10 = *(_QWORD *)(a1 + 112);
  v19 = *(_QWORD *)(a1 + 136);
  v20 = *(_QWORD *)(a1 + 128);
  v17 = *(_QWORD *)(a1 + 152);
  v18 = *(_QWORD *)(a1 + 144);
  v16 = *(_QWORD *)(a1 + 160);
  v7 = *(_BYTE *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 120);
  v15 = *(_BYTE *)(a1 + 168);

  sub_1A919F1E0(v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A919F204(v14, v13, v12, v11, v10, v8);
  sub_1A919F1E0(v20, v19, v18, v17, v16, v15);
  return a1;
}

uint64_t sub_1A91A79F4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A91A7A18(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A91A10E8(a1, a2, *(_QWORD *)(v2 + 16));
}

_OWORD *sub_1A91A7A20(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(__int128 *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_1A91A7A38(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

uint64_t sub_1A91A7A74()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  sub_1A919F1E0(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91A7AC4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1A91A1540(a1, a2 & 1, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), (__int128 *)(v3 + 40), *(void (**)(_OWORD *))(v3 + 88), *(_QWORD *)(v3 + 96));
}

unint64_t sub_1A91A7AF8()
{
  unint64_t result;

  result = qword_1ED2A6A58;
  if (!qword_1ED2A6A58)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ServerSyncResponse, &type metadata for ServerSyncResponse);
    atomic_store(result, (unint64_t *)&qword_1ED2A6A58);
  }
  return result;
}

uint64_t sub_1A91A7B3C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

void sub_1A91A7B74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A91A7BD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 128);
  v14 = *(_QWORD *)(a1 + 120);
  v11 = *(_QWORD *)(a1 + 144);
  v12 = *(_QWORD *)(a1 + 136);
  v10 = *(_QWORD *)(a1 + 152);
  v7 = *(_BYTE *)(a1 + 112);
  v8 = *(_BYTE *)(a1 + 160);
  sub_1A919F1E0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A919F204(v2, v3, v4, v5, v6, v7);
  sub_1A919F1E0(v14, v13, v12, v11, v10, v8);
  return a1;
}

id sub_1A91A7CA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) != 0)
    return a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return (id)swift_bridgeObjectRetain();
}

uint64_t sub_1A91A7D08(uint64_t result)
{
  *(_BYTE *)(result + 168) = *(_BYTE *)(result + 168) & 0xC7 | 0x20;
  *(_BYTE *)(result + 169) = 0;
  return result;
}

uint64_t sub_1A91A7D20()
{
  uint64_t v0;
  int v1;

  swift_release();
  swift_release();
  sub_1A919F1E0(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 144);
  if (v1 != 255)
    sub_1A9114BD0(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), v1);
  sub_1A919F1E0(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_BYTE *)(v0 + 192));
  if (*(_QWORD *)(v0 + 200))
    swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A91A7DC0()
{
  uint64_t v0;

  sub_1A91A2FA4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (__int128 *)(v0 + 32), *(void (**)(_QWORD, id))(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
}

uint64_t sub_1A91A7DD4(uint64_t result)
{
  *(_BYTE *)(result + 168) = *(_BYTE *)(result + 168) & 0xC7 | 0x28;
  *(_BYTE *)(result + 169) = 0;
  return result;
}

uint64_t sub_1A91A7DF0(uint64_t result, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  void **i;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  id v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  char v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v6 = result;
    v7 = (_QWORD *)swift_bridgeObjectRetain();
    v9 = v7[4];
    v8 = v7[5];
    v10 = (void *)v7[6];
    v11 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    v48 = v10;
    v13 = sub_1A9094640(v9, v8);
    v14 = v11[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v17 = v12;
    if (v11[3] < v16)
    {
      sub_1A9300530(v16, a2 & 1);
      v18 = sub_1A9094640(v9, v8);
      if ((v17 & 1) != (v19 & 1))
      {
LABEL_27:
        result = sub_1A93F9258();
        __break(1u);
        return result;
      }
      v13 = v18;
      v20 = (_QWORD *)*a3;
      if ((v17 & 1) == 0)
        goto LABEL_12;
LABEL_9:
      v21 = *(id *)(v20[7] + 8 * v13);
      swift_bridgeObjectRelease();

      v22 = v20[7];
      *(_QWORD *)(v22 + 8 * v13) = v21;
      v23 = v3 - 1;
      if (v3 == 1)
        return swift_bridgeObjectRelease();
LABEL_16:
      for (i = (void **)(v6 + 72); ; i += 3)
      {
        v33 = (uint64_t)*(i - 2);
        v32 = (uint64_t)*(i - 1);
        v34 = *i;
        v35 = (_QWORD *)*a3;
        swift_bridgeObjectRetain();
        v36 = v34;
        v37 = sub_1A9094640(v33, v32);
        v39 = v35[2];
        v40 = (v38 & 1) == 0;
        v26 = __OFADD__(v39, v40);
        v41 = v39 + v40;
        if (v26)
          break;
        v42 = v38;
        if (v35[3] < v41)
        {
          sub_1A9300530(v41, 1);
          v37 = sub_1A9094640(v33, v32);
          if ((v42 & 1) != (v43 & 1))
            goto LABEL_27;
        }
        v44 = (_QWORD *)*a3;
        if ((v42 & 1) != 0)
        {
          v29 = 8 * v37;
          v30 = *(id *)(v44[7] + 8 * v37);
          swift_bridgeObjectRelease();

          v31 = v44[7];
          *(_QWORD *)(v31 + v29) = v30;
        }
        else
        {
          v44[(v37 >> 6) + 8] |= 1 << v37;
          v45 = (uint64_t *)(v44[6] + 16 * v37);
          *v45 = v33;
          v45[1] = v32;
          *(_QWORD *)(v44[7] + 8 * v37) = v36;
          v46 = v44[2];
          v26 = __OFADD__(v46, 1);
          v47 = v46 + 1;
          if (v26)
            goto LABEL_26;
          v44[2] = v47;
        }
        if (!--v23)
          return swift_bridgeObjectRelease();
      }
      goto LABEL_25;
    }
    if ((a2 & 1) != 0)
    {
      v20 = (_QWORD *)*a3;
      if ((v12 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_1A9308648();
      v20 = (_QWORD *)*a3;
      if ((v17 & 1) != 0)
        goto LABEL_9;
    }
LABEL_12:
    v20[(v13 >> 6) + 8] |= 1 << v13;
    v24 = (uint64_t *)(v20[6] + 16 * v13);
    *v24 = v9;
    v24[1] = v8;
    *(_QWORD *)(v20[7] + 8 * v13) = v48;
    v25 = v20[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v27;
    v23 = v3 - 1;
    if (v3 == 1)
      return swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1A91A80B0(uint64_t result)
{
  *(_BYTE *)(result + 168) = *(_BYTE *)(result + 168) & 0xC7 | 0x18;
  *(_BYTE *)(result + 169) = 0;
  return result;
}

unint64_t sub_1A91A80C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2A9590;
  if (!qword_1ED2A9590)
  {
    v1 = sub_1A9072534(255, (unint64_t *)&qword_1ED2A4230);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2A9590);
  }
  return result;
}

uint64_t sub_1A91A8120()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A91A8144()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1A91A8178()
{
  uint64_t v0;

  sub_1A91A6A34(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1A91A8184()
{
  return objectdestroy_8Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_1A91A8190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t *);
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(uint64_t (**)(uint64_t, uint64_t *))(v1
                                                    + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_completion);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = 0u;
  v6 = 0u;
  v7 = 0u;
  v8 = 0;
  v9 = 1;
  return v2(v1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, &v4);
}

uint64_t sub_1A91A81F4()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A91A8228()
{
  uint64_t *v0;

  return sub_1A91A72F4(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1A91A8234()
{
  uint64_t v0;

  swift_release();
  sub_1A919EF58(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(void **)(v0 + 72), *(void **)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(void **)(v0 + 144), *(void **)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168),
    *(_QWORD *)(v0 + 176),
    *(_QWORD *)(v0 + 184),
    *(_BYTE *)(v0 + 192),
    *(_BYTE *)(v0 + 193));
  return swift_deallocObject();
}

void sub_1A91A82B0()
{
  uint64_t v0;
  __int128 v1[11];

  sub_1A91A7644((__int128 *)(v0 + 24), v1);
  sub_1A919B2F8(v1);
}

uint64_t sub_1A91A82EC()
{
  uint64_t v0;

  return sub_1A919AC5C(v0);
}

double sub_1A91A82F4(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_WORD *)(a1 + 168) = 256;
  return result;
}

uint64_t sub_1A91A8334(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for StoreFeedUpdaterJob.ValidSyncResponse(uint64_t a1)
{
  int v2;

  sub_1A919F1E0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 112);
  if (v2 != 255)
    sub_1A9114BD0(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), v2);
  return sub_1A919F1E0(*(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_BYTE *)(a1 + 160));
}

uint64_t initializeWithCopy for StoreFeedUpdaterJob.ValidSyncResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  sub_1A919EE40(*(_QWORD *)a2, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  v10 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v11 = *(unsigned __int8 *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 == 255)
  {
    v17 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v17;
    *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
  }
  else
  {
    v12 = *(_QWORD *)(a2 + 72);
    v13 = *(_QWORD *)(a2 + 80);
    v14 = *(_QWORD *)(a2 + 88);
    v15 = *(_QWORD *)(a2 + 96);
    v16 = *(_QWORD *)(a2 + 104);
    sub_1A919EE64(v12, v13, v14, v15, v16, v11);
    *(_QWORD *)(a1 + 72) = v12;
    *(_QWORD *)(a1 + 80) = v13;
    *(_QWORD *)(a1 + 88) = v14;
    *(_QWORD *)(a1 + 96) = v15;
    *(_QWORD *)(a1 + 104) = v16;
    *(_BYTE *)(a1 + 112) = v11;
  }
  v18 = *(_QWORD *)(a2 + 120);
  v19 = *(_QWORD *)(a2 + 128);
  v20 = *(_QWORD *)(a2 + 136);
  v21 = *(_QWORD *)(a2 + 144);
  v22 = *(_QWORD *)(a2 + 152);
  v23 = *(_BYTE *)(a2 + 160);
  sub_1A919EE40(v18, v19, v20, v21, v22, v23);
  *(_QWORD *)(a1 + 120) = v18;
  *(_QWORD *)(a1 + 128) = v19;
  *(_QWORD *)(a1 + 136) = v20;
  *(_QWORD *)(a1 + 144) = v21;
  *(_QWORD *)(a1 + 152) = v22;
  *(_BYTE *)(a1 + 160) = v23;
  return a1;
}

uint64_t assignWithCopy for StoreFeedUpdaterJob.ValidSyncResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  __int128 *v16;
  __int128 *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  sub_1A919EE40(*(_QWORD *)a2, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  v15 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v9;
  sub_1A919F1E0(v10, v11, v12, v13, v14, v15);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = (__int128 *)(a1 + 72);
  v17 = (__int128 *)(a2 + 72);
  v18 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v18 == 255)
    {
      v37 = *v17;
      v38 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
      *v16 = v37;
      *(_OWORD *)(a1 + 88) = v38;
    }
    else
    {
      v30 = *(_QWORD *)(a2 + 72);
      v31 = *(_QWORD *)(a2 + 80);
      v32 = *(_QWORD *)(a2 + 88);
      v33 = *(_QWORD *)(a2 + 96);
      v34 = *(_QWORD *)(a2 + 104);
      sub_1A919EE64(v30, v31, v32, v33, v34, *(_BYTE *)(a2 + 112));
      *(_QWORD *)(a1 + 72) = v30;
      *(_QWORD *)(a1 + 80) = v31;
      *(_QWORD *)(a1 + 88) = v32;
      *(_QWORD *)(a1 + 96) = v33;
      *(_QWORD *)(a1 + 104) = v34;
      *(_BYTE *)(a1 + 112) = v18;
    }
  }
  else if (v18 == 255)
  {
    sub_1A91A86F4(a1 + 72);
    v35 = *(_OWORD *)(a2 + 97);
    v36 = *(_OWORD *)(a2 + 88);
    *v16 = *v17;
    *(_OWORD *)(a1 + 88) = v36;
    *(_OWORD *)(a1 + 97) = v35;
  }
  else
  {
    v19 = *(_QWORD *)(a2 + 72);
    v20 = *(_QWORD *)(a2 + 80);
    v21 = *(_QWORD *)(a2 + 88);
    v22 = *(_QWORD *)(a2 + 96);
    v23 = *(_QWORD *)(a2 + 104);
    sub_1A919EE64(v19, v20, v21, v22, v23, *(_BYTE *)(a2 + 112));
    v24 = *(_QWORD *)(a1 + 72);
    v25 = *(_QWORD *)(a1 + 80);
    v26 = *(_QWORD *)(a1 + 88);
    v27 = *(_QWORD *)(a1 + 96);
    v28 = *(_QWORD *)(a1 + 104);
    *(_QWORD *)(a1 + 72) = v19;
    *(_QWORD *)(a1 + 80) = v20;
    *(_QWORD *)(a1 + 88) = v21;
    *(_QWORD *)(a1 + 96) = v22;
    *(_QWORD *)(a1 + 104) = v23;
    v29 = *(_BYTE *)(a1 + 112);
    *(_BYTE *)(a1 + 112) = v18;
    sub_1A9114BD0(v24, v25, v26, v27, v28, v29);
  }
  v39 = *(_QWORD *)(a2 + 120);
  v40 = *(_QWORD *)(a2 + 128);
  v41 = *(_QWORD *)(a2 + 136);
  v42 = *(_QWORD *)(a2 + 144);
  v43 = *(_QWORD *)(a2 + 152);
  v44 = *(_BYTE *)(a2 + 160);
  sub_1A919EE40(v39, v40, v41, v42, v43, v44);
  v45 = *(_QWORD *)(a1 + 120);
  v46 = *(_QWORD *)(a1 + 128);
  v47 = *(_QWORD *)(a1 + 136);
  v48 = *(_QWORD *)(a1 + 144);
  v49 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 120) = v39;
  *(_QWORD *)(a1 + 128) = v40;
  *(_QWORD *)(a1 + 136) = v41;
  *(_QWORD *)(a1 + 144) = v42;
  *(_QWORD *)(a1 + 152) = v43;
  v50 = *(_BYTE *)(a1 + 160);
  *(_BYTE *)(a1 + 160) = v44;
  sub_1A919F1E0(v45, v46, v47, v48, v49, v50);
  return a1;
}

uint64_t sub_1A91A86F4(uint64_t a1)
{
  destroy for MediaRequest.RequestType(a1);
  return a1;
}

__n128 __swift_memcpy161_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for StoreFeedUpdaterJob.ValidSyncResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  unsigned __int8 v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 32) = v4;
  v12 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v5;
  sub_1A919F1E0(v6, v7, v8, v9, v10, v12);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v13;
  swift_bridgeObjectRelease();
  v14 = *(unsigned __int8 *)(a1 + 112);
  if (v14 == 255)
    goto LABEL_5;
  v15 = *(unsigned __int8 *)(a2 + 112);
  if (v15 == 255)
  {
    sub_1A91A86F4(a1 + 72);
LABEL_5:
    v22 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v22;
    *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
    goto LABEL_6;
  }
  v16 = *(_QWORD *)(a2 + 104);
  v17 = *(_QWORD *)(a1 + 72);
  v18 = *(_QWORD *)(a1 + 80);
  v19 = *(_QWORD *)(a1 + 88);
  v20 = *(_QWORD *)(a1 + 96);
  v21 = *(_QWORD *)(a1 + 104);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = v16;
  *(_BYTE *)(a1 + 112) = v15;
  sub_1A9114BD0(v17, v18, v19, v20, v21, v14);
LABEL_6:
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_BYTE *)(a2 + 160);
  v25 = *(_QWORD *)(a1 + 120);
  v26 = *(_QWORD *)(a1 + 128);
  v27 = *(_QWORD *)(a1 + 136);
  v28 = *(_QWORD *)(a1 + 144);
  v29 = *(_QWORD *)(a1 + 152);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = v23;
  v30 = *(_BYTE *)(a1 + 160);
  *(_BYTE *)(a1 + 160) = v24;
  sub_1A919F1E0(v25, v26, v27, v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreFeedUpdaterJob.ValidSyncResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 161))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreFeedUpdaterJob.ValidSyncResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 160) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 161) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 161) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreFeedUpdaterJob.ValidSyncResponse()
{
  return &type metadata for StoreFeedUpdaterJob.ValidSyncResponse;
}

uint64_t destroy for StoreFeedUpdaterJob.SyncRequest(uint64_t a1)
{
  return sub_1A919F1E0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for StoreFeedUpdaterJob.SyncRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1A919EE40(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for StoreFeedUpdaterJob.SyncRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1A919EE40(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1A919F1E0(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for StoreFeedUpdaterJob.SyncRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unsigned __int8 v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_1A919F1E0(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreFeedUpdaterJob.SyncRequest(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x1E && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 30);
  v3 = ((*(unsigned __int8 *)(a1 + 40) >> 1) & 0x1C | (*(unsigned __int8 *)(a1 + 40) >> 6)) ^ 0x1F;
  if (v3 >= 0x1D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for StoreFeedUpdaterJob.SyncRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1D)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 30;
    if (a3 >= 0x1E)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0x1E)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 32) = 0;
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 40) = 8 * (((-a2 >> 2) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1A91A8B70(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 40);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A91A8B90(uint64_t result)
{
  *(_BYTE *)(result + 40) &= 0x3Fu;
  return result;
}

uint64_t sub_1A91A8BA0(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + 40) = *(_BYTE *)(result + 40) & 7 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_BYTE *)(result + 40) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreFeedUpdaterJob.SyncRequest()
{
  return &type metadata for StoreFeedUpdaterJob.SyncRequest;
}

uint64_t getEnumTagSinglePayload for StoreFeedUpdaterJob.ValidSyncResponse.NextSyncInfo(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StoreFeedUpdaterJob.ValidSyncResponse.NextSyncInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_1A91A8C8C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1A91A8CA4(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreFeedUpdaterJob.ValidSyncResponse.NextSyncInfo()
{
  return &type metadata for StoreFeedUpdaterJob.ValidSyncResponse.NextSyncInfo;
}

uint64_t static RemoteInterestError.== infix(_:_:)()
{
  return 1;
}

uint64_t RemoteInterestError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t RemoteInterestError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

void sub_1A91A8D68()
{
  off_1EEAB9560 = &unk_1E54D6E58;
}

uint64_t static RemoteInterest.knownSyncKeys.getter()
{
  return sub_1A91A8EAC(&qword_1EEAB6CE8);
}

unint64_t static RemoteInterest.unknownSyncKey.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1A91A8DB4()
{
  _QWORD *v0;
  uint64_t result;
  unint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  if (qword_1EEAB6CE8 != -1)
    swift_once();
  v0 = off_1EEAB9560;
  swift_bridgeObjectRetain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1A907ECFC(0, v0[2] + 1, 1, v0);
    v0 = (_QWORD *)result;
  }
  v3 = v0[2];
  v2 = v0[3];
  if (v3 >= v2 >> 1)
  {
    result = (uint64_t)sub_1A907ECFC((_QWORD *)(v2 > 1), v3 + 1, 1, v0);
    v0 = (_QWORD *)result;
  }
  v0[2] = v3 + 1;
  v4 = &v0[2 * v3];
  v4[4] = 0xD000000000000015;
  v4[5] = 0x80000001A9446670;
  qword_1EEAB9568 = (uint64_t)v0;
  return result;
}

uint64_t static RemoteInterest.allSyncKeys.getter()
{
  return sub_1A91A8EAC(&qword_1EEAB6CF0);
}

uint64_t sub_1A91A8EAC(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t RemoteInterest.adamID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

double RemoteInterest.interestValue.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t RemoteInterest.interestValueUpdatedDate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t RemoteInterest.unknownSyncProperties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteInterest.init(dictionary:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  int v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[2];
  char v29;

  if (*(_QWORD *)(a1 + 16)
    && (v4 = sub_1A9094640(0x44496D616461, 0xE600000000000000), (v5 & 1) != 0)
    && (sub_1A906443C(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)v28), (swift_dynamicCast() & 1) != 0)
    && *(_QWORD *)(a1 + 16)
    && (v6 = v27, v7 = sub_1A9094640(0x7473657265746E69, 0xED000065756C6156), (v8 & 1) != 0)
    && (sub_1A906443C(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)v28), (swift_dynamicCast() & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) && (v9 = sub_1A9094640(0xD000000000000018, 0x80000001A9442790), (v10 & 1) != 0))
    {
      sub_1A906443C(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)v28);
      v11 = swift_dynamicCast();
      if (v11)
        v12 = v27;
      else
        v12 = 0;
      v13 = v11 ^ 1;
    }
    else
    {
      v12 = 0;
      v13 = 1;
    }
    v29 = v13;
    if (qword_1EEAB6CE8 != -1)
      swift_once();
    v15 = (char *)off_1EEAB9560;
    v16 = *((_QWORD *)off_1EEAB9560 + 2);
    if (v16)
    {
      v26 = v12;
      swift_bridgeObjectRetain();
      v17 = (uint64_t *)(v15 + 40);
      do
      {
        v18 = *(v17 - 1);
        v19 = *v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v20 = sub_1A9094640(v18, v19);
        v22 = v21;
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1A9306F64();
          swift_bridgeObjectRelease();
          sub_1A908A5DC((_OWORD *)(*(_QWORD *)(a1 + 56) + 32 * v20), v28);
          sub_1A91AA990(v20, a1);
          swift_bridgeObjectRelease();
        }
        else
        {
          memset(v28, 0, sizeof(v28));
        }
        v17 += 2;
        sub_1A90A593C((uint64_t)v28);
        swift_bridgeObjectRelease();
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
      v12 = v26;
      v6 = v27;
    }
    v23 = swift_bridgeObjectRetain();
    v24 = sub_1A91A920C(v23);
    result = swift_bridgeObjectRelease_n();
    v25 = v29;
    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v27;
    *(_QWORD *)(a2 + 16) = v12;
    *(_BYTE *)(a2 + 24) = v25;
    *(_QWORD *)(a2 + 32) = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A91A95B8();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A91A920C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  _BYTE v30[72];
  _BYTE v31[40];
  __int128 v32;
  _OWORD v33[2];
  _BYTE v34[40];
  __int128 v35;
  _OWORD v36[2];
  __int128 v37;
  _OWORD v38[2];
  uint64_t v39;
  _OWORD *v40;

  v2 = MEMORY[0x1E0DEE9E0];
  v39 = MEMORY[0x1E0DEE9E0];
  v29 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v3) >> 6;
  v40 = v38;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v13 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_34;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v15 >= v28)
      goto LABEL_36;
    v16 = *(_QWORD *)(v29 + 8 * v15);
    v17 = v7 + 1;
    if (!v16)
    {
      v17 = v7 + 2;
      if (v7 + 2 >= v28)
        goto LABEL_36;
      v16 = *(_QWORD *)(v29 + 8 * v17);
      if (!v16)
      {
        v17 = v7 + 3;
        if (v7 + 3 >= v28)
          goto LABEL_36;
        v16 = *(_QWORD *)(v29 + 8 * v17);
        if (!v16)
        {
          v17 = v7 + 4;
          if (v7 + 4 >= v28)
            goto LABEL_36;
          v16 = *(_QWORD *)(v29 + 8 * v17);
          if (!v16)
            break;
        }
      }
    }
LABEL_33:
    v5 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
    v7 = v17;
LABEL_34:
    v23 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v14);
    v25 = *v23;
    v24 = v23[1];
    sub_1A906443C(*(_QWORD *)(a1 + 56) + 32 * v14, (uint64_t)v40);
    *(_QWORD *)&v37 = v25;
    *((_QWORD *)&v37 + 1) = v24;
    v35 = v37;
    v36[0] = v38[0];
    v36[1] = v38[1];
    sub_1A906443C((uint64_t)v36, (uint64_t)&v32);
    swift_bridgeObjectRetain();
    sub_1A929CB28((uint64_t)&v32, (uint64_t)v30);
    sub_1A91AC008((uint64_t)v30, (uint64_t)v34);
    v26 = v35;
    v32 = v35;
    sub_1A908A5DC(v36, v33);
    sub_1A91AC008((uint64_t)v34, (uint64_t)v31);
    v27 = *(_QWORD *)(v2 + 16);
    if (*(_QWORD *)(v2 + 24) <= v27)
    {
      sub_1A92FDD94(v27 + 1, 1);
      v2 = v39;
    }
    sub_1A93F92DC();
    sub_1A93F7FBC();
    result = sub_1A93F9324();
    v8 = v2 + 64;
    v9 = -1 << *(_BYTE *)(v2 + 32);
    v10 = result & ~v9;
    v11 = v10 >> 6;
    if (((-1 << v10) & ~*(_QWORD *)(v2 + 64 + 8 * (v10 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v10) & ~*(_QWORD *)(v2 + 64 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v19 = 0;
      v20 = (unint64_t)(63 - v9) >> 6;
      do
      {
        if (++v11 == v20 && (v19 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        v21 = v11 == v20;
        if (v11 == v20)
          v11 = 0;
        v19 |= v21;
        v22 = *(_QWORD *)(v8 + 8 * v11);
      }
      while (v22 == -1);
      v12 = __clz(__rbit64(~v22)) + (v11 << 6);
    }
    *(_QWORD *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v12) = v26;
    sub_1A91AC008((uint64_t)v31, *(_QWORD *)(v2 + 56) + 40 * v12);
    ++*(_QWORD *)(v2 + 16);
    result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  }
  v18 = v7 + 5;
  if (v7 + 5 >= v28)
  {
LABEL_36:
    sub_1A9120240();
    return v2;
  }
  v16 = *(_QWORD *)(v29 + 8 * v18);
  if (v16)
  {
    v17 = v7 + 5;
    goto LABEL_33;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v28)
      goto LABEL_36;
    v16 = *(_QWORD *)(v29 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_33;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1A91A9594()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1A91A959C()
{
  return 0xD000000000000015;
}

unint64_t sub_1A91A95B8()
{
  unint64_t result;

  result = qword_1EEAB9570;
  if (!qword_1EEAB9570)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for RemoteInterestError, &type metadata for RemoteInterestError);
    atomic_store(result, (unint64_t *)&qword_1EEAB9570);
  }
  return result;
}

unint64_t sub_1A91A9604()
{
  unint64_t result;

  result = qword_1EEAB9578;
  if (!qword_1EEAB9578)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for RemoteInterestError, &type metadata for RemoteInterestError);
    atomic_store(result, (unint64_t *)&qword_1EEAB9578);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RemoteInterestError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A91A9688 + 4 * asc_1A940BFF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A91A96A8 + 4 * byte_1A940BFF5[v4]))();
}

_BYTE *sub_1A91A9688(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A91A96A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A91A96B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A91A96B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A91A96C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A91A96C8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RemoteInterestError()
{
  return &type metadata for RemoteInterestError;
}

uint64_t destroy for RemoteInterest()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RemoteInterest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RemoteInterest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RemoteInterest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteInterest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteInterest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteInterest()
{
  return &type metadata for RemoteInterest;
}

unint64_t sub_1A91A9878(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A93F92DC();
        sub_1A93F930C();
        result = sub_1A93F9324();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_QWORD *)(v12 + 8 * v3);
          v14 = (_QWORD *)(v12 + 8 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = v15 + 40 * v3;
          v17 = (__int128 *)(v15 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= (unint64_t)v17 + 40))
          {
            v9 = *v17;
            v10 = v17[1];
            *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
            *(_OWORD *)v16 = v9;
            *(_OWORD *)(v16 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A91A9A44(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A93F92DC();
        swift_bridgeObjectRetain();
        sub_1A93F7FBC();
        v11 = sub_1A93F9324();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A91A9C2C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A93F92DC();
        sub_1A93F930C();
        result = sub_1A93F9324();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_QWORD *)(v10 + 8 * v3);
          v12 = (_QWORD *)(v10 + 8 * v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_BYTE *)(v13 + v3);
          v15 = (_BYTE *)(v13 + v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1A91A9DE4(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_1A93F8A30();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_OWORD *)(v18 + 16 * v3);
            v20 = (_OWORD *)(v18 + 16 * v6);
            if (16 * v3 != 16 * v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1A91A9F9C(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_1A93F8A30();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_BYTE *)(v18 + v3);
            v20 = (_BYTE *)(v18 + v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1A91AA14C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_1A93F92DC();
        sub_1A93F7FBC();
        swift_bridgeObjectRelease();
        result = sub_1A93F9324();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v9 < v8)
          goto LABEL_11;
LABEL_12:
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_BYTE *)(v10 + v3);
        v12 = (_BYTE *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1)
          *v11 = *v12;
        v13 = *(_QWORD *)(a2 + 56);
        v14 = *(_QWORD *)(*(_QWORD *)(sub_1A93F738C() - 8) + 72);
        v15 = v14 * v3;
        result = v13 + v14 * v3;
        v16 = v14 * v6;
        v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v15 == v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v9 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v9)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A91AA340(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  const void *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A91314A4(*(_QWORD *)(a2 + 48) + 72 * v6, (uint64_t)&v22);
        sub_1A93F92DC();
        sub_1A93F930C();
        sub_1A93F7FBC();
        sub_1A93F9300();
        v9 = sub_1A93F9324();
        result = sub_1A91314E0((uint64_t)&v22);
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          result = v11 + 72 * v3;
          v12 = (const void *)(v11 + 72 * v6);
          if (v3 != v6 || result >= (unint64_t)v12 + 72)
            result = (unint64_t)memmove((void *)result, v12, 0x48uLL);
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_QWORD *)(v13 + 8 * v3);
          v15 = (_QWORD *)(v13 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A91AA544(unint64_t a1, uint64_t a2)
{
  return sub_1A91AB560(a1, a2, type metadata accessor for StoreFeedUpdater.Update);
}

unint64_t sub_1A91AA550(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_1A93F92D0();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A91AA6E4(unint64_t a1, uint64_t a2)
{
  return sub_1A91AB560(a1, a2, type metadata accessor for StoreFeedUpdater.Retry);
}

void sub_1A91AA6F0(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;

  v4 = sub_1A93F73E0();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_1A93F8B68();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v33 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v34 + 72);
      v32 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v32(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        sub_1A9066CA8((unint64_t *)&qword_1ED2A1F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v18 = sub_1A93F7FA4();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v33)
        {
          if (v19 >= v33 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v7 = v14;
            if (v15 * a1 < v16
              || (v12 = v15, *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = (_QWORD *)(v22 + 8 * a1);
            v24 = (_QWORD *)(v22 + 8 * v9);
            if (a1 != v9 || (a1 = v9, v23 >= v24 + 1))
            {
              *v23 = *v24;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v33 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v25;
    v27 = (-1 << a1) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1A91AA990(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A93F92DC();
        swift_bridgeObjectRetain();
        sub_1A93F7FBC();
        v10 = sub_1A93F9324();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1A91AAB64(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v4 = sub_1A93F726C();
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v28 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTMLRequest();
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a2 + 64;
  v14 = -1 << *(_BYTE *)(a2 + 32);
  v15 = (a1 + 1) & ~v14;
  if (((1 << v15) & *(_QWORD *)(a2 + 64 + 8 * (v15 >> 6))) != 0)
  {
    v34 = v10;
    v31 = ~v14;
    v16 = sub_1A93F8B68();
    v29 = a2 + 64;
    if ((*(_QWORD *)(v13 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
    {
      v17 = v32;
      v30 = (v16 + 1) & v31;
      v33 = *(_QWORD *)(v34 + 72);
      v18 = *(_QWORD *)(a2 + 48);
      v34 = v33 * v15;
      sub_1A9064630(v18 + v33 * v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
      sub_1A93F92DC();
      sub_1A906A3F0((uint64_t)v12, (uint64_t)v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v4) == 1)
      {
        sub_1A93F92F4();
      }
      else
      {
        v19 = v8;
        v20 = v4;
        v21 = v28;
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v28, v19, v20);
        sub_1A93F92F4();
        sub_1A9066CA8(&qword_1EEAB9148, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
        sub_1A93F7FB0();
        (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v20);
      }
      sub_1A93F9300();
      swift_bridgeObjectRetain();
      sub_1A93F7FBC();
      swift_bridgeObjectRelease();
      __asm { BR              X9 }
    }
    v22 = (uint64_t *)(v29 + 8 * (a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v13 + 8 * (a1 >> 6));
    v23 = *v22;
    v24 = (-1 << a1) - 1;
  }
  *v22 = v23 & v24;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
    JUMPOUT(0x1A91AB038);
  }
  *(_QWORD *)(a2 + 16) = v27;
  ++*(_DWORD *)(a2 + 36);
}

void sub_1A91AB05C(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v4 = sub_1A93F726C();
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v28 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a2 + 64;
  v14 = -1 << *(_BYTE *)(a2 + 32);
  v15 = (a1 + 1) & ~v14;
  if (((1 << v15) & *(_QWORD *)(a2 + 64 + 8 * (v15 >> 6))) != 0)
  {
    v34 = v10;
    v31 = ~v14;
    v16 = sub_1A93F8B68();
    v29 = a2 + 64;
    if ((*(_QWORD *)(v13 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
    {
      v17 = v32;
      v30 = (v16 + 1) & v31;
      v33 = *(_QWORD *)(v34 + 72);
      v18 = *(_QWORD *)(a2 + 48);
      v34 = v33 * v15;
      sub_1A9064630(v18 + v33 * v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
      sub_1A93F92DC();
      sub_1A906A3F0((uint64_t)v12, (uint64_t)v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v4) == 1)
      {
        sub_1A93F92F4();
      }
      else
      {
        v19 = v8;
        v20 = v4;
        v21 = v28;
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v28, v19, v20);
        sub_1A93F92F4();
        sub_1A9066CA8(&qword_1EEAB9148, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
        sub_1A93F7FB0();
        (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v20);
      }
      sub_1A93F9300();
      swift_bridgeObjectRetain();
      sub_1A93F7FBC();
      swift_bridgeObjectRelease();
      __asm { BR              X9 }
    }
    v22 = (uint64_t *)(v29 + 8 * (a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v13 + 8 * (a1 >> 6));
    v23 = *v22;
    v24 = (-1 << a1) - 1;
  }
  *v22 = v23 & v24;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
    JUMPOUT(0x1A91AB530);
  }
  *(_QWORD *)(a2 + 16) = v27;
  ++*(_DWORD *)(a2 + 36);
}

unint64_t sub_1A91AB554(unint64_t a1, uint64_t a2)
{
  return sub_1A91AB560(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CADF50]);
}

unint64_t sub_1A91AB560(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_1A93F8B68();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      do
      {
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_QWORD *)(v11 + 8 * v7);
        result = sub_1A93F92D0();
        v13 = result & v9;
        if (v4 >= (uint64_t)v10)
        {
          if (v13 < v10 || v4 < (uint64_t)v13)
            goto LABEL_6;
        }
        else if (v13 < v10 && v4 < (uint64_t)v13)
        {
          goto LABEL_6;
        }
        v16 = (_QWORD *)(v11 + 8 * v4);
        if (v4 != v7 || v16 >= v12 + 1)
          *v16 = *v12;
        v17 = *(_QWORD *)(a2 + 56);
        v18 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v19 = v18 * v4;
        result = v17 + v18 * v4;
        v20 = v18 * v7;
        v21 = v17 + v18 * v7 + v18;
        if (v19 < v20 || result >= v21)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v19 == v20)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
      }
      while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    v23 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v24 = *v23;
    v25 = (-1 << v4) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v5 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1A91AB728(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;

  v4 = sub_1A93F6D80();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_1A93F8B68();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v33 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v34 + 72);
      v32 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v32(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        sub_1A9066CA8(&qword_1EEAB7E28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], MEMORY[0x1E0CADF60]);
        v18 = sub_1A93F7FA4();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v33)
        {
          if (v19 >= v33 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v7 = v14;
            if (v15 * a1 < v16
              || (v12 = v15, *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = (_QWORD *)(v22 + 8 * a1);
            v24 = (_QWORD *)(v22 + 8 * v9);
            if (a1 != v9 || (a1 = v9, v23 >= v24 + 1))
            {
              *v23 = *v24;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v33 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v25;
    v27 = (-1 << a1) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1A91AB9C8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_1A93F92DC();
        sub_1A93F930C();
        result = sub_1A93F9324();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v9 < v8)
          goto LABEL_11;
LABEL_12:
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_QWORD *)(v10 + 8 * v3);
        v12 = (_QWORD *)(v10 + 8 * v6);
        if (v3 != v6 || v11 >= v12 + 1)
          *v11 = *v12;
        v13 = *(_QWORD *)(a2 + 56);
        v14 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ThinClientEpisodeStateModel() - 8) + 72);
        v15 = v14 * v3;
        result = v13 + v14 * v3;
        v16 = v14 * v6;
        v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v15 == v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v9 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v9)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A91ABBA8(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v3 = result;
  v4 = a2 + 64;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(a2 + 32));
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    result = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v5);
      sub_1A93F92DC();
      __asm { BR              X8 }
    }
    v7 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v8 = *v7;
    v9 = (-1 << v3) - 1;
  }
  else
  {
    v7 = (uint64_t *)(v4 + 8 * (result >> 6));
    v9 = *v7;
    v8 = (-1 << result) - 1;
  }
  *v7 = v9 & v8;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = __OFSUB__(v10, 1);
  v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1A91ABE20);
  }
  *(_QWORD *)(a2 + 16) = v12;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1A91ABE38(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  const void *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _BYTE v22[256];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A9131434(*(_QWORD *)(a2 + 48) + (v6 << 8), (uint64_t)v22);
        sub_1A93F92DC();
        ArtworkRequest.hash(into:)();
        v9 = sub_1A93F9324();
        result = sub_1A9131470((uint64_t)v22);
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          result = v11 + (v3 << 8);
          v12 = (const void *)(v11 + (v6 << 8));
          if (v3 != v6 || result >= (unint64_t)v12 + 256)
            result = (unint64_t)memmove((void *)result, v12, 0x100uLL);
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_QWORD *)(v13 + 8 * v3);
          v15 = (_QWORD *)(v13 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1A91AC008(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

unint64_t sub_1A91AC044(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_1A93F92D0();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_OWORD *)(v15 + 16 * v3);
            v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t URL.fileSize()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t inited;
  void *v8;
  id v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = sub_1A93F7074();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A44A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  v8 = (void *)*MEMORY[0x1E0C99998];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0C99998];
  v9 = v8;
  sub_1A9133D84(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1A93F717C();
  result = swift_bridgeObjectRelease();
  if (!v1)
  {
    v11 = sub_1A93F7068();
    if ((v12 & 1) != 0)
    {
      type metadata accessor for FileError();
      sub_1A915BB28();
      swift_allocError();
      v15 = v14;
      v16 = sub_1A93F726C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 2, v16);
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    else
    {
      v13 = v11;
      if (v11 < 0)
      {
        result = sub_1A93F8E08();
        __break(1u);
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        *a1 = v13;
      }
    }
  }
  return result;
}

Swift::Bool __swiftcall URL.isRemoteAddress()()
{
  uint64_t v0;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;

  sub_1A93F723C();
  if (v0)
  {
    swift_bridgeObjectRetain();
    v1 = sub_1A93F816C();
    swift_bridgeObjectRelease();
    if ((v1 & 1) != 0)
      goto LABEL_7;
    swift_bridgeObjectRetain();
    v2 = sub_1A93F816C();
    swift_bridgeObjectRelease();
    if ((v2 & 1) != 0)
      goto LABEL_7;
    swift_bridgeObjectRetain();
    v3 = sub_1A93F816C();
    swift_bridgeObjectRelease();
    if ((v3 & 1) != 0
      || (swift_bridgeObjectRetain(), v4 = sub_1A93F816C(), swift_bridgeObjectRelease(), (v4 & 1) != 0)
      || (swift_bridgeObjectRetain(), v5 = sub_1A93F816C(), swift_bridgeObjectRelease(), (v5 & 1) != 0))
    {
LABEL_7:
      swift_bridgeObjectRelease();
      v6 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      v6 = sub_1A93F816C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_arrayDestroy();
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

Swift::Bool __swiftcall URL.isMediaLibraryURL()()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v0 = sub_1A93F723C();
  if (v1)
  {
    if (v0 == 0x62696C2D646F7069 && v1 == 0xEC00000079726172)
      v2 = 1;
    else
      v2 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  return v2 & 1;
}

uint64_t sub_1A91AC618(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1A91182E8(0, *(_QWORD *)(v3 + 16) + 1, 1, v3);
  v5 = *(_QWORD *)(v3 + 16);
  v4 = *(_QWORD *)(v3 + 24);
  if (v5 >= v4 >> 1)
    v3 = sub_1A91182E8(v4 > 1, v5 + 1, 1, v3);
  *(_QWORD *)(v3 + 16) = v5 + 1;
  v6 = sub_1A93F6EAC();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v5, a1, v6);
  *v1 = v3;
  return result;
}

uint64_t sub_1A91AC6E0(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1A9119B08(0, *(_QWORD *)(v3 + 16) + 1, 1, (char *)v3);
    v3 = result;
  }
  v6 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v6 >= v5 >> 1)
  {
    result = (uint64_t)sub_1A9119B08((char *)(v5 > 1), v6 + 1, 1, (char *)v3);
    v3 = result;
  }
  *(_QWORD *)(v3 + 16) = v6 + 1;
  *(_BYTE *)(v3 + v6 + 32) = a1;
  *v1 = v3;
  return result;
}

PodcastsFoundation::OAuthAuthenticationError_optional __swiftcall OAuthAuthenticationError.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::OAuthAuthenticationError_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t OAuthAuthenticationError.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A91AC810 + 4 * a9_0[*v0]))(0x645F737365636361, 0xED00006465696E65);
}

uint64_t sub_1A91AC810()
{
  return 0x5F64696C61766E69;
}

void sub_1A91AC8F8(char *a1)
{
  sub_1A92F8BD0(*a1);
}

uint64_t sub_1A91AC904()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A93F92DC();
  sub_1A92271C4((uint64_t)v3, v1);
  return sub_1A93F9324();
}

void sub_1A91AC948(uint64_t a1)
{
  char *v1;

  sub_1A92271C4(a1, *v1);
}

uint64_t sub_1A91AC950()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A93F92DC();
  sub_1A92271C4((uint64_t)v3, v1);
  return sub_1A93F9324();
}

PodcastsFoundation::OAuthAuthenticationError_optional sub_1A91AC990(Swift::String *a1)
{
  return OAuthAuthenticationError.init(rawValue:)(*a1);
}

uint64_t sub_1A91AC99C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = OAuthAuthenticationError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void OAuthAuthenticationErrorResponse.error.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t OAuthAuthenticationErrorResponse.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OAuthAuthenticationErrorResponse.detailURI.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void OAuthAuthenticationErrorResponse.sessionError.getter(_BYTE *a1@<X8>)
{
  char *v1;

  *a1 = byte_1A940C2E4[*v1];
}

void OAuthAuthenticationErrorResponse.responseItems.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_1A93F6EAC();
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v1);
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AC7E0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1A9405520;
  __asm { BR              X10 }
}

unint64_t sub_1A91ACB34()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  sub_1A93F6E88();
  swift_bridgeObjectRelease();
  if (v6)
  {
    sub_1A93F6E88();
    v2 = sub_1A91182E8(1, 2, 1, v2);
    *(_QWORD *)(v2 + 16) = 2;
    v9 = v4;
    v10 = *(_QWORD *)(v8 - 88);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v2 + v0 + v1, v9, v10);
    if (!v3)
      return v2;
  }
  else
  {
    v10 = *(_QWORD *)(v8 - 88);
    if (!v3)
      return v2;
  }
  sub_1A93F6E88();
  v12 = *(_QWORD *)(v2 + 16);
  v11 = *(_QWORD *)(v2 + 24);
  if (v12 >= v11 >> 1)
    v2 = sub_1A91182E8(v11 > 1, v12 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v12 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v2 + v0 + v12 * v1, v7, v10);
  return v2;
}

void __swiftcall OAuthAuthenticationErrorResponse.init(body:)(PodcastsFoundation::OAuthAuthenticationErrorResponse_optional *__return_ptr retstr, Swift::OpaquePointer body)
{
  uint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t *v17;
  void *v18;
  uint64_t v19;
  unsigned __int8 v20;

  if (!*((_QWORD *)body._rawValue + 2))
    goto LABEL_4;
  v4 = sub_1A9094640(0x726F727265, 0xE500000000000000);
  if ((v5 & 1) == 0
    || (v6 = (uint64_t *)(*((_QWORD *)body._rawValue + 7) + 16 * v4),
        v7 = *v6,
        v8 = (void *)v6[1],
        swift_bridgeObjectRetain(),
        v9._countAndFlagsBits = v7,
        v9._object = v8,
        OAuthAuthenticationError.init(rawValue:)(v9),
        v20 == 10))
  {
LABEL_4:
    swift_bridgeObjectRelease();
    *(_QWORD *)&retstr->value.error = 0;
    retstr->value.description.value._countAndFlagsBits = 0;
    retstr->value.detailURI.value._countAndFlagsBits = 0;
    retstr->value.detailURI.value._object = 0;
    retstr->value.description.value._object = (void *)1;
    return;
  }
  if (!*((_QWORD *)body._rawValue + 2))
  {
    v13 = 0;
    v14 = 0;
    goto LABEL_13;
  }
  v10 = sub_1A9094640(0xD000000000000011, 0x80000001A9446690);
  if ((v11 & 1) == 0)
  {
    v14 = 0;
    v13 = 0;
    if (*((_QWORD *)body._rawValue + 2))
      goto LABEL_11;
LABEL_13:
    v19 = 0;
    v18 = 0;
    goto LABEL_14;
  }
  v12 = (uint64_t *)(*((_QWORD *)body._rawValue + 7) + 16 * v10);
  v14 = *v12;
  v13 = (void *)v12[1];
  swift_bridgeObjectRetain();
  if (!*((_QWORD *)body._rawValue + 2))
    goto LABEL_13;
LABEL_11:
  v15 = sub_1A9094640(0x72755F726F727265, 0xE900000000000069);
  if ((v16 & 1) == 0)
    goto LABEL_13;
  v17 = (uint64_t *)(*((_QWORD *)body._rawValue + 7) + 16 * v15);
  v19 = *v17;
  v18 = (void *)v17[1];
  swift_bridgeObjectRetain();
LABEL_14:
  swift_bridgeObjectRelease();
  *(_QWORD *)&retstr->value.error = v20;
  retstr->value.description.value._countAndFlagsBits = v14;
  retstr->value.description.value._object = v13;
  retstr->value.detailURI.value._countAndFlagsBits = v19;
  retstr->value.detailURI.value._object = v18;
}

void __swiftcall OAuthAuthenticationErrorResponse.init(error:description:detailURI:)(PodcastsFoundation::OAuthAuthenticationErrorResponse *__return_ptr retstr, PodcastsFoundation::OAuthAuthenticationError error, Swift::String_optional description, Swift::String_optional detailURI)
{
  retstr->error = *(_BYTE *)error;
  retstr->description = description;
  retstr->detailURI = detailURI;
}

uint64_t sub_1A91ACEBC()
{
  return sub_1A91ACEE0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A91182DC);
}

uint64_t sub_1A91ACEC8()
{
  return sub_1A91ACEE0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A91182E8);
}

uint64_t sub_1A91ACED4()
{
  return sub_1A91ACEE0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A9119B08);
}

uint64_t sub_1A91ACEE0(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

uint64_t sub_1A91ACF34(uint64_t a1)
{
  return sub_1A91ACF58(a1, (uint64_t (*)(BOOL))sub_1A91182DC);
}

uint64_t sub_1A91ACF40(uint64_t a1)
{
  return sub_1A91ACF58(a1, (uint64_t (*)(BOOL))sub_1A91182E8);
}

uint64_t sub_1A91ACF4C(uint64_t a1)
{
  return sub_1A91ACF58(a1, (uint64_t (*)(BOOL))sub_1A9119B08);
}

uint64_t sub_1A91ACF58(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

uint64_t sub_1A91ACF9C(uint64_t result, char a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = result + 1;
  *(_BYTE *)(v3 + result + 32) = a2;
  return result;
}

uint64_t sub_1A91ACFB4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  *(_QWORD *)(v5 + 16) = a1 + 1;
  v6 = sub_1A93F6EAC();
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * a1, a2, v6);
}

unint64_t sub_1A91AD01C()
{
  unint64_t result;

  result = qword_1EEAB9580;
  if (!qword_1EEAB9580)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for OAuthAuthenticationError, &type metadata for OAuthAuthenticationError);
    atomic_store(result, (unint64_t *)&qword_1EEAB9580);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OAuthAuthenticationError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for OAuthAuthenticationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1A91AD13C + 4 * byte_1A940C159[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1A91AD170 + 4 * byte_1A940C154[v4]))();
}

uint64_t sub_1A91AD170(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91AD178(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91AD180);
  return result;
}

uint64_t sub_1A91AD18C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91AD194);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1A91AD198(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91AD1A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OAuthAuthenticationError()
{
  return &type metadata for OAuthAuthenticationError;
}

uint64_t destroy for OAuthAuthenticationErrorResponse()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OAuthAuthenticationErrorResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for OAuthAuthenticationErrorResponse(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for OAuthAuthenticationErrorResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OAuthAuthenticationErrorResponse(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OAuthAuthenticationErrorResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for OAuthAuthenticationErrorResponse()
{
  return &type metadata for OAuthAuthenticationErrorResponse;
}

uint64_t sub_1A91AD3B4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v24 = *(_QWORD *)(a1 + 16);
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1A929E454(0, v1, 0);
  v2 = v25;
  result = sub_1A93E94F8(a1);
  v6 = result;
  v7 = v24;
  v8 = 0;
  v9 = a1 + 64;
  v10 = a1 + 80;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v12 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_24;
    v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v6) + OBJC_IVAR___PFFairPlayAsset_adamID);
    v15 = *(_QWORD *)(v25 + 16);
    v14 = *(_QWORD *)(v25 + 24);
    if (v15 >= v14 >> 1)
    {
      v22 = v9;
      v23 = v5;
      v21 = v10;
      result = sub_1A929E454(v14 > 1, v15 + 1, 1);
      v10 = v21;
      v9 = v22;
      v5 = v23;
      v7 = v24;
    }
    *(_QWORD *)(v25 + 16) = v15 + 1;
    *(_QWORD *)(v25 + 8 * v15 + 32) = v13;
    v11 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v11)
      goto LABEL_25;
    v16 = *(_QWORD *)(v9 + 8 * v12);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v11 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v18 = v12 + 1;
      v19 = (unint64_t)(v11 + 63) >> 6;
      if (v12 + 1 < v19)
      {
        v20 = *(_QWORD *)(v9 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v11 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v12)
          {
            v20 = *(_QWORD *)(v10 + 8 * v12++);
            if (v20)
            {
              v18 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v8;
    v6 = v11;
    if (v8 == v7)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

id FairPlayValidationManager.__allocating_init(episodeRemovalManager:)(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  id v4;
  id v5;
  uint64_t v6;
  id v7;

  v2 = v1;
  v4 = objc_allocWithZone(v2);
  v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FairPlayKeyLoader()), sel_init);
  type metadata accessor for CoreDataFairPlayEpisodeDataFetcher();
  v6 = swift_allocObject();
  v7 = sub_1A906AF34(v5, a1, v6, (char *)objc_allocWithZone(v2));

  swift_release();
  swift_unknownObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v7;
}

id FairPlayValidationManager.init(episodeRemovalManager:)(uint64_t a1)
{
  objc_class *ObjectType;
  id v3;
  uint64_t v4;
  id v5;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FairPlayKeyLoader()), sel_init);
  type metadata accessor for CoreDataFairPlayEpisodeDataFetcher();
  v4 = swift_allocObject();
  v5 = sub_1A906AF34(v3, a1, v4, (char *)objc_allocWithZone(ObjectType));

  swift_release();
  swift_unknownObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

void sub_1A91AD744(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, void *a5, unint64_t a6)
{
  objc_class *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  objc_super v39;
  uint64_t v40;
  uint64_t v41;

  if (a2)
  {
    if (!a3)
      return;
    v8 = (objc_class *)type metadata accessor for FairPlayValidationManager.Response();
    v9 = (char *)objc_allocWithZone(v8);
    v10 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v9[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_renewedAdamIDs] = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v9[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_failedAdamIDs] = v10;
    *(_QWORD *)&v9[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs] = v10;
    v39.receiver = v9;
    v39.super_class = v8;
    v11 = (char *)objc_msgSendSuper2(&v39, sel_init);
    v12 = v11;
    v13 = a2;
    goto LABEL_13;
  }
  v15 = (char *)sub_1A91ADBBC(a6, a1);
  if (*(_QWORD *)(*(_QWORD *)&v15[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs]
                 + 16))
  {
    v16 = swift_bridgeObjectRetain();
    sub_1A91AE560(v16);
    swift_bridgeObjectRelease();
  }
  if (qword_1ED2A8890 != -1)
    swift_once();
  v17 = sub_1A93F7698();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED2A8878);
  v18 = v15;
  v19 = a5;
  v12 = v18;
  v20 = v19;
  v21 = sub_1A93F7674();
  v22 = sub_1A93F87B4();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v41 = v38;
    *(_DWORD *)v23 = 136316675;
    v24 = sub_1A90CAA90();
    sub_1A906436C(v24, v25, &v41);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2160;
    sub_1A93F8AA8();
    *(_WORD *)(v23 + 22) = 2081;
    v26 = swift_bridgeObjectRetain();
    v27 = MEMORY[0x1AF412034](v26, MEMORY[0x1E0DEDC60]);
    v29 = v28;
    swift_bridgeObjectRelease();
    sub_1A906436C(v27, v29, &v41);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 32) = 2160;
    sub_1A93F8AA8();
    *(_WORD *)(v23 + 42) = 2081;
    v30 = swift_bridgeObjectRetain();
    v31 = MEMORY[0x1AF412034](v30, MEMORY[0x1E0DEDC60]);
    v33 = v32;
    swift_bridgeObjectRelease();
    sub_1A906436C(v31, v33, &v41);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 52) = 2160;
    sub_1A93F8AA8();
    *(_WORD *)(v23 + 62) = 2081;
    v34 = swift_bridgeObjectRetain();
    v35 = MEMORY[0x1AF412034](v34, MEMORY[0x1E0DEDC60]);
    v37 = v36;
    swift_bridgeObjectRelease();
    v40 = sub_1A906436C(v35, v37, &v41);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v21, v22, "%s Finished validating downloaded FairPlay episodes with errors for adamIds: %{private,mask.hash}s, episodes to be removed: %{private,mask.hash}s, successfully renewed %{private,mask.hash}s.", (uint8_t *)v23, 0x48u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v38, -1, -1);
    MEMORY[0x1AF41411C](v23, -1, -1);

    if (!a3)
      goto LABEL_14;
    goto LABEL_12;
  }

  if (a3)
  {
LABEL_12:
    v11 = v12;
    v13 = 0;
LABEL_13:
    a3(v11, v13);
  }
LABEL_14:

}

id sub_1A91ADBBC(unint64_t a1, uint64_t a2)
{
  void *v2;
  unint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t j;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id result;
  unint64_t v16;
  uint64_t i;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  unint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  objc_class *v72;
  char *v73;
  objc_class *v74;
  char *v75;
  _QWORD *v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  int64_t v85;
  int64_t v86;
  _QWORD *v87;
  objc_super v88;
  objc_super v89;
  uint64_t v90[3];
  unint64_t v91;

  v3 = a1;
  v4 = a1 >> 62;
  if (!*(_QWORD *)(a2 + 16))
  {
    if (!v4)
    {
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_14;
    }
LABEL_85:
    swift_bridgeObjectRetain();
    v13 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
LABEL_14:
    v14 = MEMORY[0x1E0DEE9D8];
    if (v13)
    {
      v91 = MEMORY[0x1E0DEE9D8];
      result = (id)sub_1A929E454(0, v13 & ~(v13 >> 63), 0);
      if (v13 < 0)
      {
        __break(1u);
        return result;
      }
      v16 = v91;
      if ((v3 & 0xC000000000000001) != 0)
      {
        for (i = 0; i != v13; ++i)
        {
          v18 = *(_QWORD *)(MEMORY[0x1AF4129DC](i, v3) + OBJC_IVAR___PFFairPlayAsset_adamID);
          swift_unknownObjectRelease();
          v91 = v16;
          v20 = *(_QWORD *)(v16 + 16);
          v19 = *(_QWORD *)(v16 + 24);
          if (v20 >= v19 >> 1)
          {
            sub_1A929E454(v19 > 1, v20 + 1, 1);
            v16 = v91;
          }
          *(_QWORD *)(v16 + 16) = v20 + 1;
          *(_QWORD *)(v16 + 8 * v20 + 32) = v18;
        }
      }
      else
      {
        v76 = (_QWORD *)(v3 + 32);
        v77 = *(_QWORD *)(v91 + 16);
        do
        {
          v78 = *(_QWORD *)(*v76 + OBJC_IVAR___PFFairPlayAsset_adamID);
          v91 = v16;
          v79 = *(_QWORD *)(v16 + 24);
          if (v77 >= v79 >> 1)
          {
            sub_1A929E454(v79 > 1, v77 + 1, 1);
            v16 = v91;
          }
          *(_QWORD *)(v16 + 16) = v77 + 1;
          *(_QWORD *)(v16 + 8 * v77 + 32) = v78;
          ++v76;
          ++v77;
          --v13;
        }
        while (v13);
      }
    }
    else
    {
      v16 = MEMORY[0x1E0DEE9D8];
    }
    v74 = (objc_class *)type metadata accessor for FairPlayValidationManager.Response();
    v75 = (char *)objc_allocWithZone(v74);
    *(_QWORD *)&v75[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_renewedAdamIDs] = v16;
    *(_QWORD *)&v75[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_failedAdamIDs] = v14;
    *(_QWORD *)&v75[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs] = v14;
    v88.receiver = v75;
    v88.super_class = v74;
    return objc_msgSendSuper2(&v88, sel_init);
  }
  v5 = v2;
  v6 = a2;
  if (v4)
  {
LABEL_81:
    swift_bridgeObjectRetain();
    v7 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v7)
    goto LABEL_26;
  v91 = MEMORY[0x1E0DEE9D8];
  sub_1A929E454(0, v7 & ~(v7 >> 63), 0);
  if (v7 < 0)
  {
    __break(1u);
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  v8 = v91;
  if ((v3 & 0xC000000000000001) != 0)
  {
    for (j = 0; j != v7; ++j)
    {
      v10 = *(_QWORD *)(MEMORY[0x1AF4129DC](j, v3) + OBJC_IVAR___PFFairPlayAsset_adamID);
      swift_unknownObjectRelease();
      v91 = v8;
      v12 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v8 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1A929E454(v11 > 1, v12 + 1, 1);
        v8 = v91;
      }
      *(_QWORD *)(v8 + 16) = v12 + 1;
      *(_QWORD *)(v8 + 8 * v12 + 32) = v10;
    }
  }
  else
  {
    v21 = (_QWORD *)(v3 + 32);
    v22 = *(_QWORD *)(v91 + 16);
    do
    {
      v23 = *(_QWORD *)(*v21 + OBJC_IVAR___PFFairPlayAsset_adamID);
      v91 = v8;
      v24 = *(_QWORD *)(v8 + 24);
      if (v22 >= v24 >> 1)
      {
        sub_1A929E454(v24 > 1, v22 + 1, 1);
        v8 = v91;
      }
      *(_QWORD *)(v8 + 16) = v22 + 1;
      *(_QWORD *)(v8 + 8 * v22 + 32) = v23;
      ++v21;
      ++v22;
      --v7;
    }
    while (v7);
  }
LABEL_26:
  v25 = sub_1A915A2DC(v8);
  swift_bridgeObjectRelease();
  v26 = swift_bridgeObjectRetain();
  v3 = 0;
  v27 = sub_1A91AD3B4(v26);
  swift_bridgeObjectRelease();
  v28 = sub_1A915A2DC(v27);
  swift_bridgeObjectRelease();
  v81 = v28;
  if (*(_QWORD *)(v28 + 16) <= *(_QWORD *)(v25 + 16) >> 3)
  {
    v91 = v25;
    sub_1A9270EFC(v28);
    v80 = v91;
  }
  else
  {
    v80 = sub_1A91F3594(v28, v25);
  }
  v91 = MEMORY[0x1E0DEE9D8];
  v84 = v6 + 64;
  v29 = 1 << *(_BYTE *)(v6 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v31 = v30 & *(_QWORD *)(v6 + 64);
  v85 = (unint64_t)(v29 + 63) >> 6;
  swift_bridgeObjectRetain();
  v32 = 0;
  v33 = &unk_1ED2A8000;
  v82 = v5;
  v83 = v6;
  while (1)
  {
    if (v31)
    {
      v34 = __clz(__rbit64(v31));
      v31 &= v31 - 1;
      v86 = v32;
      v35 = v34 | (v32 << 6);
      goto LABEL_50;
    }
    v36 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
    if (v36 >= v85)
      goto LABEL_58;
    v37 = *(_QWORD *)(v84 + 8 * v36);
    v38 = v32 + 1;
    if (!v37)
    {
      v38 = v32 + 2;
      if (v32 + 2 >= v85)
        goto LABEL_58;
      v37 = *(_QWORD *)(v84 + 8 * v38);
      if (!v37)
      {
        v38 = v32 + 3;
        if (v32 + 3 >= v85)
          goto LABEL_58;
        v37 = *(_QWORD *)(v84 + 8 * v38);
        if (!v37)
          break;
      }
    }
LABEL_49:
    v31 = (v37 - 1) & v37;
    v86 = v38;
    v35 = __clz(__rbit64(v37)) + (v38 << 6);
LABEL_50:
    v40 = 8 * v35;
    v41 = *(void **)(*(_QWORD *)(v6 + 56) + v40);
    v42 = *(id *)(*(_QWORD *)(v6 + 48) + v40);
    v43 = v41;
    if (v33[274] != -1)
      swift_once();
    v44 = sub_1A93F7698();
    __swift_project_value_buffer(v44, (uint64_t)qword_1ED2A8878);
    v45 = v42;
    v46 = v41;
    v47 = v5;
    v3 = (unint64_t)v45;
    v48 = v41;
    v49 = v47;
    v50 = sub_1A93F7674();
    v51 = sub_1A93F879C();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = swift_slowAlloc();
      v53 = (_QWORD *)swift_slowAlloc();
      v54 = swift_slowAlloc();
      v90[0] = v54;
      *(_DWORD *)v52 = 136316163;
      v55 = sub_1A90CAA90();
      *(_QWORD *)(v52 + 4) = sub_1A906436C(v55, v56, v90);

      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2160;
      *(_QWORD *)(v52 + 14) = 1752392040;
      *(_WORD *)(v52 + 22) = 2113;
      *(_QWORD *)(v52 + 24) = v3;
      *v53 = v3;

      *(_WORD *)(v52 + 32) = 2160;
      *(_QWORD *)(v52 + 34) = 1752392040;
      *(_WORD *)(v52 + 42) = 2081;
      swift_getErrorValue();
      v57 = sub_1A93F927C();
      *(_QWORD *)(v52 + 44) = sub_1A906436C(v57, v58, v90);
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v50, v51, "%s Unable to renew key for asset: %{private,mask.hash}@, with error: %{private,mask.hash}s.", (uint8_t *)v52, 0x34u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      v59 = v53;
      v33 = (_QWORD *)&unk_1ED2A8000;
      MEMORY[0x1AF41411C](v59, -1, -1);
      swift_arrayDestroy();
      v60 = v54;
      v5 = v82;
      MEMORY[0x1AF41411C](v60, -1, -1);
      v61 = v52;
      v6 = v83;
      MEMORY[0x1AF41411C](v61, -1, -1);
    }
    else
    {

    }
    swift_getErrorValue();
    if (sub_1A91AF570(v90[2]))
    {
      v62 = (id)v3;
      MEMORY[0x1AF412004]();
      if (*(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1A93F834C();
      sub_1A93F8394();
      sub_1A93F8328();
    }

    v32 = v86;
  }
  v39 = v32 + 4;
  if (v32 + 4 < v85)
  {
    v37 = *(_QWORD *)(v84 + 8 * v39);
    if (!v37)
    {
      while (1)
      {
        v38 = v39 + 1;
        if (__OFADD__(v39, 1))
          goto LABEL_80;
        if (v38 >= v85)
          goto LABEL_58;
        v37 = *(_QWORD *)(v84 + 8 * v38);
        ++v39;
        if (v37)
          goto LABEL_49;
      }
    }
    v38 = v32 + 4;
    goto LABEL_49;
  }
LABEL_58:
  swift_release();
  v63 = sub_1A930C328(v80);
  swift_bridgeObjectRelease();
  v3 = (unint64_t)sub_1A930C328(v81);
  swift_bridgeObjectRelease();
  v64 = v91;
  if (v91 >> 62)
  {
    swift_bridgeObjectRetain();
    v65 = sub_1A93F8E5C();
  }
  else
  {
    v65 = *(_QWORD *)((v91 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v65)
  {
    v90[0] = MEMORY[0x1E0DEE9D8];
    sub_1A929E454(0, v65 & ~(v65 >> 63), 0);
    if (v65 < 0)
      goto LABEL_84;
    v87 = (_QWORD *)v3;
    v66 = v63;
    v67 = 0;
    v68 = v90[0];
    do
    {
      if ((v64 & 0xC000000000000001) != 0)
      {
        v69 = *(_QWORD *)(MEMORY[0x1AF4129DC](v67, v64) + OBJC_IVAR___PFFairPlayAsset_adamID);
        swift_unknownObjectRelease();
      }
      else
      {
        v69 = *(_QWORD *)(*(_QWORD *)(v64 + 8 * v67 + 32) + OBJC_IVAR___PFFairPlayAsset_adamID);
      }
      v90[0] = v68;
      v71 = *(_QWORD *)(v68 + 16);
      v70 = *(_QWORD *)(v68 + 24);
      if (v71 >= v70 >> 1)
      {
        sub_1A929E454(v70 > 1, v71 + 1, 1);
        v68 = v90[0];
      }
      ++v67;
      *(_QWORD *)(v68 + 16) = v71 + 1;
      *(_QWORD *)(v68 + 8 * v71 + 32) = v69;
    }
    while (v65 != v67);
    swift_bridgeObjectRelease();
    v63 = v66;
    v3 = (unint64_t)v87;
  }
  else
  {
    swift_bridgeObjectRelease();
    v68 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v72 = (objc_class *)type metadata accessor for FairPlayValidationManager.Response();
  v73 = (char *)objc_allocWithZone(v72);
  *(_QWORD *)&v73[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_renewedAdamIDs] = v63;
  *(_QWORD *)&v73[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_failedAdamIDs] = v3;
  *(_QWORD *)&v73[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs] = v68;
  v89.receiver = v73;
  v89.super_class = v72;
  return objc_msgSendSuper2(&v89, sel_init);
}

