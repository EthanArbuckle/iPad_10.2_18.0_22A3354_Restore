void sub_1A91AE560(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  char *v11;
  char *v12;
  NSObject *v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v3 = sub_1A93F7E18();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)&v1[OBJC_IVAR___PFFairPlayValidationManager_internalQueue];
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x1E0DEF740], v3, v5);
  v9 = v8;
  LOBYTE(v8) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v8 & 1) != 0)
  {
    if (qword_1ED2A8890 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v10 = sub_1A93F7698();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A8878);
  v11 = v1;
  swift_bridgeObjectRetain_n();
  v12 = v11;
  v13 = sub_1A93F7674();
  v14 = sub_1A93F87B4();
  if (os_log_type_enabled(v13, (os_log_type_t)v14))
  {
    v40 = v14;
    v15 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v43 = v39;
    *(_DWORD *)v15 = 136315651;
    v16 = sub_1A90CAA90();
    v42 = sub_1A906436C(v16, v17, &v43);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2160;
    v42 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v15 + 22) = 2081;
    v18 = *(_QWORD *)(a1 + 16);
    v19 = MEMORY[0x1E0DEE9D8];
    if (v18)
    {
      v35 = v15;
      v36 = v13;
      v37 = v12;
      v42 = MEMORY[0x1E0DEE9D8];
      sub_1A908182C(0, v18, 0);
      v19 = v42;
      v38 = a1;
      v20 = (uint64_t *)(a1 + 32);
      do
      {
        v21 = *v20++;
        v41 = v21;
        v22 = sub_1A93F9060();
        v24 = v23;
        v42 = v19;
        v26 = *(_QWORD *)(v19 + 16);
        v25 = *(_QWORD *)(v19 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1A908182C(v25 > 1, v26 + 1, 1);
          v19 = v42;
        }
        *(_QWORD *)(v19 + 16) = v26 + 1;
        v27 = v19 + 16 * v26;
        *(_QWORD *)(v27 + 32) = v22;
        *(_QWORD *)(v27 + 40) = v24;
        --v18;
      }
      while (v18);
      v12 = v37;
      v15 = v35;
      v13 = v36;
    }
    v42 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
    v28 = sub_1A93F7FE0();
    v30 = v29;
    swift_bridgeObjectRelease();
    v42 = sub_1A906436C(v28, v30, &v43);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v13, (os_log_type_t)v40, "%s Attempting to remove episodes with adamIDs: %{private,mask.hash}s.", (uint8_t *)v15, 0x20u);
    v31 = v39;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v31, -1, -1);
    MEMORY[0x1AF41411C](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v32 = *(void **)&v12[OBJC_IVAR___PFFairPlayValidationManager_episodeRemovalManager];
  if (v32)
  {
    v33 = (void *)sub_1A93F82F8();
    objc_msgSend(v32, sel_removeEpisodesWith_, v33);

  }
}

void sub_1A91AE978(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t v14;
  char *v15;
  char *v16;
  NSObject *v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  NSObject *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t aBlock[6];

  v7 = sub_1A93F7E18();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)&v3[OBJC_IVAR___PFFairPlayValidationManager_internalQueue];
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x1E0DEF740], v7, v9);
  v13 = v12;
  LOBYTE(v12) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  if ((v12 & 1) != 0)
  {
    if (qword_1ED2A8890 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v14 = sub_1A93F7698();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A8878);
  v15 = v3;
  swift_bridgeObjectRetain_n();
  v16 = v15;
  v17 = sub_1A93F7674();
  v18 = sub_1A93F8784();
  if (!os_log_type_enabled(v17, (os_log_type_t)v18))
  {

    swift_bridgeObjectRelease_n();
LABEL_18:
    v40 = *(void **)&v16[OBJC_IVAR___PFFairPlayValidationManager_keyLoader];
    type metadata accessor for FairPlayAsset();
    v41 = (void *)sub_1A93F82F8();
    v42 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v43 = (_QWORD *)swift_allocObject();
    v43[2] = v42;
    v43[3] = a2;
    v43[4] = a3;
    aBlock[4] = (uint64_t)sub_1A91AF828;
    aBlock[5] = (uint64_t)v43;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1A9342A8C;
    aBlock[3] = (uint64_t)&block_descriptor_23;
    v44 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v40, sel_renewKeyRequestsWithAssets_completion_, v41, v44);
    _Block_release(v44);

    return;
  }
  v50 = v18;
  v19 = swift_slowAlloc();
  v49 = swift_slowAlloc();
  aBlock[0] = v49;
  *(_DWORD *)v19 = 136315651;
  v20 = sub_1A90CAA90();
  v54 = sub_1A906436C(v20, v21, aBlock);
  sub_1A93F8AA8();

  swift_bridgeObjectRelease();
  *(_WORD *)(v19 + 12) = 2160;
  v54 = 1752392040;
  sub_1A93F8AA8();
  v51 = (uint8_t *)v19;
  *(_WORD *)(v19 + 22) = 2081;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v23 = MEMORY[0x1E0DEE9D8];
  v52 = a2;
  if (!v22)
  {
LABEL_17:
    v35 = v51;
    v54 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
    v36 = sub_1A93F7FE0();
    v38 = v37;
    swift_bridgeObjectRelease();
    v54 = sub_1A906436C(v36, v38, aBlock);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v17, (os_log_type_t)v50, "%s Attempting to renew keys for episodes with adamIDs: %{private,mask.hash}s.", v35, 0x20u);
    v39 = v49;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v39, -1, -1);
    MEMORY[0x1AF41411C](v35, -1, -1);

    a2 = v52;
    goto LABEL_18;
  }
  v54 = MEMORY[0x1E0DEE9D8];
  sub_1A908182C(0, v22 & ~(v22 >> 63), 0);
  if ((v22 & 0x8000000000000000) == 0)
  {
    v46 = v17;
    v47 = v16;
    v48 = a3;
    v24 = 0;
    v23 = v54;
    v25 = a1 & 0xC000000000000001;
    v26 = a1;
    do
    {
      if (v25)
        v27 = (char *)MEMORY[0x1AF4129DC](v24, a1);
      else
        v27 = (char *)*(id *)(a1 + 8 * v24 + 32);
      v28 = v27;
      v53 = *(_QWORD *)&v27[OBJC_IVAR___PFFairPlayAsset_adamID];
      v29 = sub_1A93F9060();
      v31 = v30;

      v54 = v23;
      v33 = *(_QWORD *)(v23 + 16);
      v32 = *(_QWORD *)(v23 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1A908182C(v32 > 1, v33 + 1, 1);
        v23 = v54;
      }
      ++v24;
      *(_QWORD *)(v23 + 16) = v33 + 1;
      v34 = v23 + 16 * v33;
      *(_QWORD *)(v34 + 32) = v29;
      *(_QWORD *)(v34 + 40) = v31;
      a1 = v26;
    }
    while (v22 != v24);
    v16 = v47;
    a3 = v48;
    v17 = v46;
    goto LABEL_17;
  }
  __break(1u);
}

id FairPlayValidationManager.Response.__allocating_init(renewedAdamIDs:failedAdamIDs:removedAdamIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  objc_super v9;

  v7 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v7[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_renewedAdamIDs] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_failedAdamIDs] = a2;
  *(_QWORD *)&v7[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs] = a3;
  v9.receiver = v7;
  v9.super_class = v3;
  return objc_msgSendSuper2(&v9, sel_init);
}

id FairPlayValidationManager.Response.init(renewedAdamIDs:failedAdamIDs:removedAdamIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_renewedAdamIDs] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_failedAdamIDs] = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs] = a3;
  v9.receiver = v3;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

id FairPlayValidationManager.Response.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FairPlayValidationManager.Response.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FairPlayValidationManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1A91AF0F0(uint64_t a1, void *a2, uint64_t a3, void (*a4)(unint64_t, void *), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v10 = sub_1A93F7D58();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1A93F7DB8();
  v14 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v17 = MEMORY[0x1AF41420C](a3 + 16);
  if (v17)
  {
    v18 = (void *)v17;
    v27 = *(_QWORD *)(v17 + OBJC_IVAR___PFFairPlayValidationManager_internalQueue);
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = v18;
    v19[3] = a4;
    v19[4] = a5;
    v19[5] = a1;
    v19[6] = a2;
    aBlock[4] = sub_1A91AF870;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_29_0;
    v20 = v11;
    v21 = _Block_copy(aBlock);
    v22 = v18;
    swift_retain();
    swift_bridgeObjectRetain();
    v23 = a2;
    sub_1A93F7D88();
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v16, v13, v21);
    _Block_release(v21);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v28);

    return swift_release();
  }
  else
  {
    v25 = sub_1A91130A8(MEMORY[0x1E0DEE9D8]);
    sub_1A91AF710();
    v26 = (void *)swift_allocError();
    a4(v25, v26);

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A91AF390(void *a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint8_t *v17;
  uint64_t v19;
  uint64_t v20;

  if (qword_1ED2A8890 != -1)
    swift_once();
  v9 = sub_1A93F7698();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A8878);
  v10 = a1;
  v11 = sub_1A93F7674();
  v12 = sub_1A93F8784();
  if (os_log_type_enabled(v11, v12))
  {
    v19 = a5;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v20 = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = sub_1A90CAA90();
    sub_1A906436C(v15, v16, &v20);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v11, v12, "%s Finished key renewal process.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v14, -1, -1);
    v17 = v13;
    a5 = v19;
    MEMORY[0x1AF41411C](v17, -1, -1);

  }
  else
  {

  }
  return a2(a4, a5);
}

BOOL sub_1A91AF570(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))(v5, v6, a1, v3);
  v7 = sub_1A93F9084();
  if (v7)
  {
    v8 = (void *)v7;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
  }
  else
  {
    v8 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v9, v5, a1);
  }
  v10 = (void *)sub_1A93F711C();

  v11 = objc_msgSend(v10, sel_code);
  return v11 == (id)-1002;
}

uint64_t sub_1A91AF674()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A91AF698()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t method lookup function for FairPlayValidationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for FairPlayValidationManager.Response()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FairPlayValidationManager.Response.__allocating_init(renewedAdamIDs:failedAdamIDs:removedAdamIDs:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1A91AF6EC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

unint64_t sub_1A91AF710()
{
  unint64_t result;

  result = qword_1EEAB95C8;
  if (!qword_1EEAB95C8)
  {
    result = MEMORY[0x1AF414014](&unk_1A940C420, &type metadata for FairPlayValidationError);
    atomic_store(result, (unint64_t *)&qword_1EEAB95C8);
  }
  return result;
}

uint64_t sub_1A91AF754()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91AF788()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A91AF7B4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A91AF7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A91AD744(a1, a2, *(void (**)(char *, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1A91AF7FC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91AF828(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1A91AF0F0(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(unint64_t, void *))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1A91AF834()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A91AF870()
{
  uint64_t v0;

  return sub_1A91AF390(*(void **)(v0 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t storeEnumTagSinglePayload for FairPlayValidationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A91AF8C0 + 4 * byte_1A940C310[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A91AF8E0 + 4 * byte_1A940C315[v4]))();
}

_BYTE *sub_1A91AF8C0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A91AF8E0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A91AF8E8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A91AF8F0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A91AF8F8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A91AF900(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FairPlayValidationError()
{
  return &type metadata for FairPlayValidationError;
}

unint64_t sub_1A91AF920()
{
  unint64_t result;

  result = qword_1EEAB95D0;
  if (!qword_1EEAB95D0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940C3F8, &type metadata for FairPlayValidationError);
    atomic_store(result, (unint64_t *)&qword_1EEAB95D0);
  }
  return result;
}

uint64_t ChannelAttributes.DisplayType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1684627824;
  if (*v0 != 1)
    v1 = 0x646972627968;
  if (*v0)
    return v1;
  else
    return 1701147238;
}

uint64_t ServerChannel.href.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_href);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerChannel.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1A91AFA40()
{
  void *v0;

  swift_bridgeObjectRetain();
  v0 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ServerChannel.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_type);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerChannel.attributes.getter()
{
  return swift_retain();
}

uint64_t ServerChannel.relationships.getter()
{
  return swift_retain();
}

uint64_t sub_1A91AFAE0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A91AFB08 + 4 * byte_1A940C490[*v0]))(1717924456, 0xE400000000000000);
}

uint64_t sub_1A91AFB08()
{
  return 25705;
}

uint64_t sub_1A91AFB14()
{
  return 1701869940;
}

uint64_t sub_1A91AFB20()
{
  return 0x7475626972747461;
}

uint64_t sub_1A91AFB3C()
{
  return 0x6E6F6974616C6572;
}

uint64_t sub_1A91AFB60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A91B5BBC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A91AFB84(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1A91AFB90()
{
  sub_1A91AFECC();
  return sub_1A93F945C();
}

uint64_t sub_1A91AFBB8()
{
  sub_1A91AFECC();
  return sub_1A93F9468();
}

id ServerChannel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ServerChannel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ServerChannel()
{
  return objc_opt_self();
}

uint64_t sub_1A91AFCA4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4418);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91AFECC();
  sub_1A93F93D8();
  LOBYTE(v13) = 0;
  sub_1A93F9000();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1A93F9000();
    LOBYTE(v13) = 2;
    sub_1A93F9000();
    v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes);
    HIBYTE(v12) = 3;
    type metadata accessor for ChannelAttributes();
    sub_1A9066CE8(&qword_1ED2A2360, v9, (uint64_t (*)(uint64_t))type metadata accessor for ChannelAttributes, (uint64_t)&protocol conformance descriptor for ChannelAttributes);
    sub_1A93F9030();
    v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_relationships);
    HIBYTE(v12) = 4;
    type metadata accessor for ChannelRelationships();
    sub_1A9066CE8(&qword_1ED2A2BB8, v10, (uint64_t (*)(uint64_t))type metadata accessor for ChannelRelationships, (uint64_t)&protocol conformance descriptor for ChannelRelationships);
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A91AFECC()
{
  unint64_t result;

  result = qword_1ED2A20E8;
  if (!qword_1ED2A20E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D474, &type metadata for ServerChannel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A20E8);
  }
  return result;
}

uint64_t type metadata accessor for ChannelAttributes()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ChannelRelationships()
{
  return objc_opt_self();
}

unint64_t ServerChannel.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ServerChannel.init(from:)(a1);
}

unint64_t ServerChannel.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  objc_super v27;
  char v28;
  uint64_t v29;

  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A43B0);
  v4 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v7);
  v8 = sub_1A91AFECC();
  v9 = v1;
  sub_1A93F93C0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);

    type metadata accessor for ServerChannel();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v29) = 0;
    v10 = sub_1A93F8F4C();
    v12 = v9;
    v13 = (uint64_t *)&v9[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_href];
    *v13 = v10;
    v13[1] = v14;
    LOBYTE(v29) = 1;
    v15 = sub_1A93F8F4C();
    v16 = (uint64_t *)&v12[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
    *v16 = v15;
    v16[1] = v17;
    LOBYTE(v29) = 2;
    v18 = sub_1A93F8F4C();
    v19 = (uint64_t *)&v12[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_type];
    *v19 = v18;
    v19[1] = v20;
    type metadata accessor for ChannelAttributes();
    v28 = 3;
    sub_1A9066CE8(&qword_1ED2A2368, v21, (uint64_t (*)(uint64_t))type metadata accessor for ChannelAttributes, (uint64_t)&protocol conformance descriptor for ChannelAttributes);
    sub_1A93F8F7C();
    *(_QWORD *)&v12[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes] = v29;
    type metadata accessor for ChannelRelationships();
    v28 = 4;
    sub_1A9066CE8(&qword_1ED2A2BC0, v22, (uint64_t (*)(uint64_t))type metadata accessor for ChannelRelationships, (uint64_t)&protocol conformance descriptor for ChannelRelationships);
    sub_1A93F8F34();
    *(_QWORD *)&v12[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_relationships] = v29;

    v23 = (objc_class *)type metadata accessor for ServerChannel();
    v27.receiver = v12;
    v27.super_class = v23;
    v8 = (unint64_t)objc_msgSendSuper2(&v27, sel_init);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v25);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  }
  return v8;
}

unint64_t sub_1A91B0338@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  id v5;
  unint64_t result;

  v5 = objc_allocWithZone((Class)type metadata accessor for ServerChannel());
  result = ServerChannel.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A91B0388(_QWORD *a1)
{
  return sub_1A91AFCA4(a1);
}

PodcastsFoundation::ChannelAttributes::DisplayType_optional __swiftcall ChannelAttributes.DisplayType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (PodcastsFoundation::ChannelAttributes::DisplayType_optional)sub_1A91B2AB0(v1);
}

uint64_t sub_1A91B03B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92F9738(*a1, *a2);
}

uint64_t sub_1A91B03C0()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A91B044C()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A91B04B4()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::ChannelAttributes::DisplayType_optional sub_1A91B053C(Swift::String *a1)
{
  return ChannelAttributes.DisplayType.init(rawValue:)(*a1);
}

void sub_1A91B0548(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE400000000000000;
  v5 = 1684627824;
  if (v2 != 1)
  {
    v5 = 0x646972627968;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701147238;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A91B0594()
{
  sub_1A91B7080();
  return sub_1A93F82BC();
}

uint64_t sub_1A91B05F0()
{
  sub_1A91B7080();
  return sub_1A93F828C();
}

PodcastsFoundation::ChannelAttributes::SubscriptionType_optional __swiftcall ChannelAttributes.SubscriptionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (PodcastsFoundation::ChannelAttributes::SubscriptionType_optional)sub_1A91B2AB0(v1);
}

uint64_t ChannelAttributes.SubscriptionType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x687475616FLL;
  if (*v0 != 1)
    v1 = 0x7374736163646F70;
  if (*v0)
    return v1;
  else
    return 1936748641;
}

uint64_t sub_1A91B0698(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92F973C(*a1, *a2);
}

uint64_t sub_1A91B06A4()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A91B0738()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A91B07A8()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::ChannelAttributes::SubscriptionType_optional sub_1A91B0838(Swift::String *a1)
{
  return ChannelAttributes.SubscriptionType.init(rawValue:)(*a1);
}

void sub_1A91B0844(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x687475616FLL;
  if (v2 != 1)
  {
    v5 = 0x7374736163646F70;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1936748641;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A91B0898()
{
  sub_1A91B703C();
  return sub_1A93F82BC();
}

uint64_t sub_1A91B08F4()
{
  sub_1A91B703C();
  return sub_1A93F828C();
}

uint64_t ChannelAttributes.description.getter()
{
  return swift_retain();
}

uint64_t ChannelAttributes.artwork.getter()
{
  return swift_retain();
}

uint64_t ChannelAttributes.showCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t ChannelAttributes.availableShowCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

void ChannelAttributes.displayType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 73);
}

uint64_t ChannelAttributes.isSubscribed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 74);
}

uint64_t ChannelAttributes.subscriptionEnabledDate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A91B09A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + 88))
  {
    if (qword_1ED2A93B0 != -1)
      swift_once();
    v6 = (void *)qword_1ED2A93A8;
    v7 = (void *)sub_1A93F8010();
    v8 = objc_msgSend(v6, sel_dateFromString_, v7);

    if (v8)
    {
      sub_1A93F7368();

      v9 = sub_1A93F738C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 0, 1, v9);
    }
    else
    {
      v12 = sub_1A93F738C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
    }
    return sub_1A90A13C8((uint64_t)v5, a1);
  }
  else
  {
    v10 = sub_1A93F738C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

uint64_t ChannelAttributes.subscriptionName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelAttributes.editorialArtwork.getter()
{
  return swift_retain();
}

uint64_t ChannelAttributes.subscriptionOffers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ChannelAttributes.logoArtwork.getter()
{
  return swift_retain();
}

uint64_t ChannelAttributes.backgroundSwatch.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelAttributes.personalizedSubscriptionOffers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ChannelAttributes.url.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

void ChannelAttributes.subscriptionType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 176);
}

uint64_t sub_1A91B0BCC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;

  if (*(_QWORD *)(v0 + 152))
    v1 = *(_QWORD *)(v0 + 152);
  else
    v1 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v0 + 120))
    v2 = *(_QWORD *)(v0 + 120);
  else
    v2 = MEMORY[0x1E0DEE9D8];
  v4 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A9136690(v2);
  return v4;
}

uint64_t sub_1A91B0C34@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;

  if (*(_QWORD *)(v1 + 152))
    v3 = *(_QWORD *)(v1 + 152);
  else
    v3 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(v1 + 120);
  if (v4)
    v5 = v4;
  else
    v5 = MEMORY[0x1E0DEE9D8];
  v15 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A9136690(v5);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1A93F8E5C();
    v6 = result;
    if (result)
      goto LABEL_9;
LABEL_22:
    v9 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_23:
    swift_bridgeObjectRelease_n();
    if (*((_QWORD *)v9 + 2))
    {
      *a1 = v9[32];
      return swift_bridgeObjectRelease();
    }
    else
    {
      result = swift_bridgeObjectRelease();
      *a1 = 4;
    }
    return result;
  }
  v6 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_22;
LABEL_9:
  if (v6 >= 1)
  {
    v8 = 0;
    v9 = (char *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      if ((v15 & 0xC000000000000001) != 0)
      {
        v10 = MEMORY[0x1AF4129DC](v8++, v15);
        v11 = *(unsigned __int8 *)(v10 + 208);
        swift_unknownObjectRelease();
        if (v11 != 4)
          goto LABEL_17;
      }
      else
      {
        v12 = *(_QWORD *)(v15 + 32 + 8 * v8++);
        v11 = *(unsigned __int8 *)(v12 + 208);
        if (v11 != 4)
        {
LABEL_17:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1A91188C0(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
          v14 = *((_QWORD *)v9 + 2);
          v13 = *((_QWORD *)v9 + 3);
          if (v14 >= v13 >> 1)
            v9 = sub_1A91188C0((char *)(v13 > 1), v14 + 1, 1, v9);
          *((_QWORD *)v9 + 2) = v14 + 1;
          v9[v14 + 32] = v11;
        }
      }
      if (v8 == v6)
        goto LABEL_23;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A91B0E20(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A91B0E5C + 4 * byte_1A940C495[a1]))(0x7470697263736564, 0xEB000000006E6F69);
}

uint64_t sub_1A91B0E5C()
{
  return 0x6B726F77747261;
}

uint64_t sub_1A91B0E74()
{
  return 1701667182;
}

uint64_t sub_1A91B0E84()
{
  return 0x6E756F43776F6873;
}

unint64_t sub_1A91B0EA0()
{
  return 0xD000000000000012;
}

uint64_t sub_1A91B0F8C()
{
  return 7107189;
}

uint64_t sub_1A91B0FB8()
{
  unsigned __int8 *v0;

  return sub_1A91B0E20(*v0);
}

uint64_t sub_1A91B0FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A91B5DD0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A91B0FE4(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_1A91B0FF0()
{
  sub_1A91B4838();
  return sub_1A93F945C();
}

uint64_t sub_1A91B1018()
{
  sub_1A91B4838();
  return sub_1A93F9468();
}

uint64_t ChannelAttributes.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ChannelAttributes.__deallocating_deinit()
{
  ChannelAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A91B10CC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4428);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91B4838();
  sub_1A93F93D8();
  v14 = *(_QWORD *)(v3 + 16);
  v13 = 0;
  type metadata accessor for ServerDescription();
  sub_1A9066CE8(&qword_1ED2A2638, 255, (uint64_t (*)(uint64_t))type metadata accessor for ServerDescription, (uint64_t)&protocol conformance descriptor for ServerDescription);
  sub_1A93F8FE8();
  if (!v2)
  {
    v14 = *(_QWORD *)(v3 + 24);
    v13 = 1;
    type metadata accessor for ServerArtwork();
    sub_1A9066CE8(&qword_1ED2A1FF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
    sub_1A93F8FE8();
    LOBYTE(v14) = 2;
    sub_1A93F9000();
    LOBYTE(v14) = 3;
    sub_1A93F8FDC();
    LOBYTE(v14) = 4;
    sub_1A93F8FDC();
    LOBYTE(v14) = *(_BYTE *)(v3 + 73);
    v13 = 5;
    sub_1A91B487C();
    sub_1A93F8FE8();
    LOBYTE(v14) = 6;
    sub_1A93F8FC4();
    LOBYTE(v14) = 7;
    sub_1A93F8FB8();
    LOBYTE(v14) = 8;
    sub_1A93F8FB8();
    v14 = *(_QWORD *)(v3 + 112);
    v13 = 9;
    type metadata accessor for ChannelEditorialArtworkContainer();
    sub_1A9066CE8(&qword_1ED2A3760, v9, (uint64_t (*)(uint64_t))type metadata accessor for ChannelEditorialArtworkContainer, (uint64_t)&protocol conformance descriptor for ChannelEditorialArtworkContainer);
    sub_1A93F8FE8();
    v14 = *(_QWORD *)(v3 + 120);
    v13 = 10;
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4110);
    sub_1A91B4988(&qword_1ED2A4118, &qword_1ED2A2710, (uint64_t)&protocol conformance descriptor for SubscriptionOffer, MEMORY[0x1E0DEAF10]);
    v12 = v10;
    sub_1A93F8FE8();
    v14 = *(_QWORD *)(v3 + 128);
    v13 = 11;
    sub_1A93F8FE8();
    LOBYTE(v14) = 12;
    sub_1A93F8FB8();
    v14 = *(_QWORD *)(v3 + 152);
    v13 = 13;
    sub_1A93F8FE8();
    LOBYTE(v14) = 14;
    sub_1A93F8FB8();
    LOBYTE(v14) = *(_BYTE *)(v3 + 176);
    v13 = 15;
    sub_1A91B4900();
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ChannelAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ChannelAttributes.init(from:)(a1);
  return v2;
}

uint64_t ChannelAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  char v20;
  uint64_t v21;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A43C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91B4838();
  sub_1A93F93C0();
  if (v2)
  {
    type metadata accessor for ChannelAttributes();
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for ServerDescription();
    v20 = 0;
    sub_1A9066CE8(&qword_1ED2A2640, 255, (uint64_t (*)(uint64_t))type metadata accessor for ServerDescription, (uint64_t)&protocol conformance descriptor for ServerDescription);
    sub_1A93F8F34();
    *(_QWORD *)(v1 + 16) = v21;
    type metadata accessor for ServerArtwork();
    v20 = 1;
    sub_1A9066CE8(&qword_1ED2A2000, 255, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
    sub_1A93F8F34();
    *(_QWORD *)(v1 + 24) = v21;
    LOBYTE(v21) = 2;
    *(_QWORD *)(v1 + 32) = sub_1A93F8F4C();
    *(_QWORD *)(v1 + 40) = v9;
    LOBYTE(v21) = 3;
    v19[1] = 0;
    *(_QWORD *)(v1 + 48) = sub_1A93F8F28();
    *(_BYTE *)(v1 + 56) = v10 & 1;
    LOBYTE(v21) = 4;
    *(_QWORD *)(v1 + 64) = sub_1A93F8F28();
    *(_BYTE *)(v1 + 72) = v11 & 1;
    v20 = 5;
    sub_1A91B4944();
    sub_1A93F8F34();
    *(_BYTE *)(v1 + 73) = v21;
    LOBYTE(v21) = 6;
    *(_BYTE *)(v1 + 74) = sub_1A93F8F10();
    LOBYTE(v21) = 7;
    *(_QWORD *)(v1 + 80) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 88) = v13;
    LOBYTE(v21) = 8;
    *(_QWORD *)(v1 + 96) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 104) = v14;
    type metadata accessor for ChannelEditorialArtworkContainer();
    v20 = 9;
    sub_1A9066CE8(&qword_1ED2A3768, v15, (uint64_t (*)(uint64_t))type metadata accessor for ChannelEditorialArtworkContainer, (uint64_t)&protocol conformance descriptor for ChannelEditorialArtworkContainer);
    sub_1A93F8F34();
    *(_QWORD *)(v1 + 112) = v21;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4110);
    v20 = 10;
    v19[3] = sub_1A91B4988(&qword_1ED2A4120, &qword_1ED2A2718, (uint64_t)&protocol conformance descriptor for SubscriptionOffer, MEMORY[0x1E0DEAF40]);
    v19[4] = v16;
    sub_1A93F8F34();
    *(_QWORD *)(v3 + 120) = v21;
    v20 = 11;
    sub_1A93F8F34();
    *(_QWORD *)(v3 + 128) = v21;
    LOBYTE(v21) = 12;
    *(_QWORD *)(v3 + 136) = sub_1A93F8F04();
    *(_QWORD *)(v3 + 144) = v17;
    v20 = 13;
    sub_1A93F8F34();
    *(_QWORD *)(v3 + 152) = v21;
    LOBYTE(v21) = 14;
    *(_QWORD *)(v3 + 160) = sub_1A93F8F04();
    *(_QWORD *)(v3 + 168) = v18;
    v20 = 15;
    sub_1A91B4A0C();
    sub_1A93F8F34();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_BYTE *)(v3 + 176) = v21;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1A91B1D8C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A91B47B4(a1, (void (*)(void))type metadata accessor for ChannelAttributes, (uint64_t (*)(uint64_t))ChannelAttributes.init(from:), a2);
}

uint64_t sub_1A91B1DB4(_QWORD *a1)
{
  return sub_1A91B10CC(a1);
}

void *ChannelRelationships.podcasts.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_1A91B1DF8()
{
  return 0x7374736163646F70;
}

uint64_t sub_1A91B1E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7374736163646F70 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A93F90C0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A91B1EA4()
{
  sub_1A91B4A50();
  return sub_1A93F945C();
}

uint64_t sub_1A91B1ECC()
{
  sub_1A91B4A50();
  return sub_1A93F9468();
}

uint64_t ChannelRelationships.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ChannelRelationships.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t ChannelRelationships.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9608);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91B4A50();
  sub_1A93F93D8();
  v9[1] = *(_QWORD *)(v2 + 16);
  type metadata accessor for PodcastRelationshipContainer();
  sub_1A9066CE8(&qword_1EEAB9618, 255, (uint64_t (*)(uint64_t))type metadata accessor for PodcastRelationshipContainer, (uint64_t)&protocol conformance descriptor for PodcastRelationshipContainer);
  sub_1A93F8FE8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ChannelRelationships.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ChannelRelationships.init(from:)(a1);
  return v2;
}

uint64_t ChannelRelationships.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9620);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91B4A50();
  sub_1A93F93C0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for PodcastRelationshipContainer();
    sub_1A9066CE8(qword_1ED2A5750, 255, (uint64_t (*)(uint64_t))type metadata accessor for PodcastRelationshipContainer, (uint64_t)&protocol conformance descriptor for PodcastRelationshipContainer);
    sub_1A93F8F34();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v4);
    *(_QWORD *)(v1 + 16) = v10;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_1A91B220C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = ChannelRelationships.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1A91B2260(_QWORD *a1)
{
  return ChannelRelationships.encode(to:)(a1);
}

uint64_t ChannelEditorialArtworkContainer.channelPageBackground.getter()
{
  return swift_retain();
}

uint64_t ChannelEditorialArtworkContainer.channelFeaturingSquare.getter()
{
  return swift_retain();
}

uint64_t ChannelEditorialArtworkContainer.storeFlowcase.getter()
{
  return swift_retain();
}

uint64_t ChannelEditorialArtworkContainer.contentLogoTrimmed.getter()
{
  return swift_retain();
}

uint64_t sub_1A91B22A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A91B22D8 + 4 * byte_1A940C4A5[a1]))(0xD000000000000014, 0x80000001A94469E0);
}

uint64_t sub_1A91B2340()
{
  unsigned __int8 *v0;

  return sub_1A91B22A0(*v0);
}

uint64_t sub_1A91B2348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A91B641C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A91B236C()
{
  sub_1A91B4A94();
  return sub_1A93F945C();
}

uint64_t sub_1A91B2394()
{
  sub_1A91B4A94();
  return sub_1A93F9468();
}

uint64_t ChannelEditorialArtworkContainer.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ChannelEditorialArtworkContainer.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A91B244C(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A43F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91B4A94();
  sub_1A93F93D8();
  v11 = v3[2];
  HIBYTE(v10) = 0;
  type metadata accessor for ServerArtwork();
  sub_1A9066CE8(&qword_1ED2A1FF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
  sub_1A93F8FE8();
  if (!v2)
  {
    v11 = v3[3];
    HIBYTE(v10) = 1;
    sub_1A93F8FE8();
    v11 = v3[4];
    HIBYTE(v10) = 2;
    sub_1A93F8FE8();
    v11 = v3[5];
    HIBYTE(v10) = 3;
    sub_1A93F8FE8();
    v11 = v3[6];
    HIBYTE(v10) = 4;
    sub_1A93F8FE8();
    v11 = v3[7];
    HIBYTE(v10) = 5;
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ChannelEditorialArtworkContainer.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ChannelEditorialArtworkContainer.init(from:)(a1);
  return v2;
}

_QWORD *ChannelEditorialArtworkContainer.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4390);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91B4A94();
  sub_1A93F93C0();
  if (v2)
  {
    type metadata accessor for ChannelEditorialArtworkContainer();
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for ServerArtwork();
    v10 = 0;
    sub_1A9066CE8(&qword_1ED2A2000, 255, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
    sub_1A93F8F34();
    v1[2] = v11;
    v10 = 1;
    sub_1A93F8F34();
    v1[3] = v11;
    v10 = 2;
    sub_1A93F8F34();
    v1[4] = v11;
    v10 = 3;
    v9 = 0;
    sub_1A93F8F34();
    v1[5] = v11;
    v10 = 4;
    sub_1A93F8F34();
    v1[6] = v11;
    v10 = 5;
    sub_1A93F8F34();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v1[7] = v11;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_1A91B2A5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A91B47B4(a1, (void (*)(void))type metadata accessor for ChannelEditorialArtworkContainer, (uint64_t (*)(uint64_t))ChannelEditorialArtworkContainer.init(from:), a2);
}

uint64_t sub_1A91B2A84(_QWORD *a1)
{
  return sub_1A91B244C(a1);
}

PodcastsFoundation::SubscriptionOffer::Kind_optional __swiftcall SubscriptionOffer.Kind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (PodcastsFoundation::SubscriptionOffer::Kind_optional)sub_1A91B2AB0(v1);
}

uint64_t sub_1A91B2AB0@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t SubscriptionOffer.Kind.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x687475616FLL;
  if (*v0 != 1)
    v1 = 0x6269726373627573;
  if (*v0)
    return v1;
  else
    return 0x7070612D6E69;
}

uint64_t sub_1A91B2B5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92F9628(*a1, *a2);
}

uint64_t sub_1A91B2B68()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A91B2C04()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A91B2C7C()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::SubscriptionOffer::Kind_optional sub_1A91B2D14(Swift::String *a1)
{
  return SubscriptionOffer.Kind.init(rawValue:)(*a1);
}

void sub_1A91B2D20(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x687475616FLL;
  if (v2 != 1)
  {
    v5 = 0x6269726373627573;
    v4 = 0xE900000000000065;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7070612D6E69;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A91B2D7C()
{
  sub_1A91B6FF8();
  return sub_1A93F82BC();
}

uint64_t sub_1A91B2DD8()
{
  sub_1A91B6FF8();
  return sub_1A93F828C();
}

PodcastsFoundation::SubscriptionOffer::AppType_optional __swiftcall SubscriptionOffer.AppType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::SubscriptionOffer::AppType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1A91B2E7C(char *a1)
{
  sub_1A92F94FC(*a1);
}

void sub_1A91B2E88()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A91B2ED0()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A91B2F2C()
{
  __asm { BR              X10 }
}

uint64_t sub_1A91B2F64()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A91B2FAC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A91B2FF0()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::SubscriptionOffer::AppType_optional sub_1A91B304C(Swift::String *a1)
{
  return SubscriptionOffer.AppType.init(rawValue:)(*a1);
}

uint64_t sub_1A91B3058()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A91B3084 + 4 * byte_1A940C4BB[*v0]))();
}

void sub_1A91B3084(_QWORD *a1@<X8>)
{
  *a1 = 1937204590;
  a1[1] = 0xE400000000000000;
}

void sub_1A91B3098(_QWORD *a1@<X8>)
{
  *a1 = 30324;
  a1[1] = 0xE200000000000000;
}

void sub_1A91B30A8(_QWORD *a1@<X8>)
{
  *a1 = 0x6C616E7265747865;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1A91B30C4()
{
  sub_1A91B6FB4();
  return sub_1A93F82BC();
}

uint64_t sub_1A91B3120()
{
  sub_1A91B6FB4();
  return sub_1A93F828C();
}

uint64_t SubscriptionOffer.isFamily.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t SubscriptionOffer.isSubscribed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t SubscriptionOffer.eligibilityType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SubscriptionOffer.offerName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

void SubscriptionOffer.kind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 72);
}

uint64_t SubscriptionOffer.isStudent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t SubscriptionOffer.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SubscriptionOffer.freeTrial.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t SubscriptionOffer.isFree.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 176);
}

uint64_t SubscriptionOffer.valueProposition.getter()
{
  return swift_retain();
}

uint64_t SubscriptionOffer.appId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

void SubscriptionOffer.appType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 208);
}

uint64_t SubscriptionOffer.appName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 216);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SubscriptionOffer.appArtwork.getter()
{
  return swift_retain();
}

uint64_t SubscriptionOffer.authorizationUrl.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A91B32C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A91B32EC + 4 * byte_1A940C4BF[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1A91B32EC()
{
  return 0x796C696D61467369;
}

uint64_t sub_1A91B3304()
{
  return 0x7263736275537369;
}

uint64_t sub_1A91B3324()
{
  return 0x6C69626967696C65;
}

uint64_t sub_1A91B3348()
{
  return 0x6D614E726566666FLL;
}

uint64_t sub_1A91B3364()
{
  return 1684957547;
}

uint64_t sub_1A91B3374()
{
  return 0x656C746974;
}

uint64_t sub_1A91B3388()
{
  return 0x646F69726570;
}

uint64_t sub_1A91B339C()
{
  return 0x6E65647574537369;
}

uint64_t sub_1A91B33BC()
{
  return 0x7470697263736564;
}

uint64_t sub_1A91B33DC()
{
  return 0x6D61726150797562;
}

uint64_t sub_1A91B33FC()
{
  return 0x6169725465657266;
}

uint64_t sub_1A91B341C()
{
  return 0x6169725465657266;
}

uint64_t sub_1A91B3440()
{
  return 0x656572467369;
}

unint64_t sub_1A91B3454()
{
  return 0xD000000000000010;
}

uint64_t sub_1A91B34DC()
{
  unsigned __int8 *v0;

  return sub_1A91B32C4(*v0);
}

uint64_t sub_1A91B34E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A91B6690(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A91B3508(_BYTE *a1@<X8>)
{
  *a1 = 20;
}

uint64_t sub_1A91B3514()
{
  sub_1A91B4AD8();
  return sub_1A93F945C();
}

uint64_t sub_1A91B353C()
{
  sub_1A91B4AD8();
  return sub_1A93F9468();
}

uint64_t SubscriptionOffer.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SubscriptionOffer.__deallocating_deinit()
{
  SubscriptionOffer.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A91B3600(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9628);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91B4AD8();
  sub_1A93F93D8();
  LOBYTE(v11) = 0;
  sub_1A93F9000();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_1A93F8FC4();
    LOBYTE(v11) = 2;
    sub_1A93F8FC4();
    LOBYTE(v11) = 3;
    sub_1A93F8FB8();
    LOBYTE(v11) = 4;
    sub_1A93F8FB8();
    LOBYTE(v11) = *(_BYTE *)(v3 + 72);
    v12 = 5;
    sub_1A91B4B1C();
    sub_1A93F8FE8();
    LOBYTE(v11) = 6;
    sub_1A93F8FB8();
    LOBYTE(v11) = 7;
    sub_1A93F8FB8();
    LOBYTE(v11) = 8;
    sub_1A93F8FC4();
    LOBYTE(v11) = 9;
    sub_1A93F8FB8();
    LOBYTE(v11) = 10;
    sub_1A93F8FB8();
    LOBYTE(v11) = 11;
    sub_1A93F8FC4();
    LOBYTE(v11) = 12;
    sub_1A93F8FB8();
    LOBYTE(v11) = 13;
    sub_1A93F8FC4();
    v11 = *(_QWORD *)(v3 + 184);
    v12 = 14;
    type metadata accessor for ValueProposition();
    sub_1A9066CE8(&qword_1EEAB9640, v9, (uint64_t (*)(uint64_t))type metadata accessor for ValueProposition, (uint64_t)&protocol conformance descriptor for ValueProposition);
    sub_1A93F8FE8();
    LOBYTE(v11) = 15;
    sub_1A93F8FB8();
    LOBYTE(v11) = *(_BYTE *)(v3 + 208);
    v12 = 16;
    sub_1A91B4B80();
    sub_1A93F8FE8();
    LOBYTE(v11) = 17;
    sub_1A93F8FB8();
    v11 = *(_QWORD *)(v3 + 232);
    v12 = 18;
    type metadata accessor for ServerArtwork();
    sub_1A9066CE8(&qword_1ED2A1FF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
    sub_1A93F8FE8();
    LOBYTE(v11) = 19;
    sub_1A93F8FB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SubscriptionOffer.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SubscriptionOffer.init(from:)(a1);
  return v2;
}

uint64_t SubscriptionOffer.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9650);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91B4AD8();
  sub_1A93F93C0();
  if (v2)
  {
    type metadata accessor for SubscriptionOffer();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v25) = 0;
    *(_QWORD *)(v1 + 16) = sub_1A93F8F4C();
    *(_QWORD *)(v1 + 24) = v9;
    LOBYTE(v25) = 1;
    *(_BYTE *)(v1 + 32) = sub_1A93F8F10();
    LOBYTE(v25) = 2;
    *(_BYTE *)(v1 + 33) = sub_1A93F8F10();
    LOBYTE(v25) = 3;
    *(_QWORD *)(v1 + 40) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 48) = v11;
    LOBYTE(v25) = 4;
    *(_QWORD *)(v1 + 56) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 64) = v12;
    v26 = 5;
    sub_1A91B4BC4();
    v24 = 0;
    sub_1A93F8F34();
    *(_BYTE *)(v1 + 72) = v25;
    LOBYTE(v25) = 6;
    *(_QWORD *)(v1 + 80) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 88) = v13;
    LOBYTE(v25) = 7;
    *(_QWORD *)(v1 + 96) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 104) = v14;
    LOBYTE(v25) = 8;
    *(_BYTE *)(v1 + 112) = sub_1A93F8F10();
    LOBYTE(v25) = 9;
    *(_QWORD *)(v1 + 120) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 128) = v15;
    LOBYTE(v25) = 10;
    *(_QWORD *)(v1 + 136) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 144) = v16;
    LOBYTE(v25) = 11;
    *(_BYTE *)(v1 + 152) = sub_1A93F8F10();
    LOBYTE(v25) = 12;
    *(_QWORD *)(v1 + 160) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 168) = v17;
    LOBYTE(v25) = 13;
    *(_BYTE *)(v1 + 176) = sub_1A93F8F10();
    type metadata accessor for ValueProposition();
    v26 = 14;
    sub_1A9066CE8(&qword_1EEAB9660, v18, (uint64_t (*)(uint64_t))type metadata accessor for ValueProposition, (uint64_t)&protocol conformance descriptor for ValueProposition);
    sub_1A93F8F34();
    *(_QWORD *)(v1 + 184) = v25;
    LOBYTE(v25) = 15;
    *(_QWORD *)(v1 + 192) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 200) = v19;
    v26 = 16;
    sub_1A91B4C08();
    sub_1A93F8F34();
    *(_BYTE *)(v1 + 208) = v25;
    LOBYTE(v25) = 17;
    *(_QWORD *)(v1 + 216) = sub_1A93F8F04();
    *(_QWORD *)(v1 + 224) = v20;
    type metadata accessor for ServerArtwork();
    v26 = 18;
    sub_1A9066CE8(&qword_1ED2A2000, 255, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
    sub_1A93F8F34();
    *(_QWORD *)(v1 + 232) = v25;
    LOBYTE(v25) = 19;
    v21 = sub_1A93F8F04();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v3 + 240) = v21;
    *(_QWORD *)(v3 + 248) = v23;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1A91B4300@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A91B47B4(a1, (void (*)(void))type metadata accessor for SubscriptionOffer, (uint64_t (*)(uint64_t))SubscriptionOffer.init(from:), a2);
}

uint64_t sub_1A91B4328(_QWORD *a1)
{
  return sub_1A91B3600(a1);
}

uint64_t ValueProposition.price.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ValueProposition.priceForDisplay.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A91B43A0()
{
  _BYTE *v0;

  if (*v0)
    return 0x726F466563697270;
  else
    return 0x6563697270;
}

uint64_t sub_1A91B43E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A91B6EA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A91B4408()
{
  sub_1A91B4C4C();
  return sub_1A93F945C();
}

uint64_t sub_1A91B4430()
{
  sub_1A91B4C4C();
  return sub_1A93F9468();
}

uint64_t ValueProposition.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ValueProposition.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A91B44A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9670);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91B4C4C();
  sub_1A93F93D8();
  v8[15] = 0;
  sub_1A93F9000();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A93F9000();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ValueProposition.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ValueProposition.init(from:)(a1);
  return v2;
}

uint64_t ValueProposition.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9680);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91B4C4C();
  sub_1A93F93C0();
  if (v2)
  {
    type metadata accessor for ValueProposition();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v16 = 0;
    *(_QWORD *)(v1 + 16) = sub_1A93F8F4C();
    *(_QWORD *)(v1 + 24) = v9;
    v15 = 1;
    v11 = sub_1A93F8F4C();
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v3 + 32) = v11;
    *(_QWORD *)(v3 + 40) = v13;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1A91B478C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A91B47B4(a1, (void (*)(void))type metadata accessor for ValueProposition, (uint64_t (*)(uint64_t))ValueProposition.init(from:), a2);
}

uint64_t sub_1A91B47B4@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X5>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;

  a2();
  v8 = swift_allocObject();
  result = a3(a1);
  if (!v4)
    *a4 = v8;
  return result;
}

uint64_t sub_1A91B4818(_QWORD *a1)
{
  return sub_1A91B44A8(a1);
}

unint64_t sub_1A91B4838()
{
  unint64_t result;

  result = qword_1ED2A2330;
  if (!qword_1ED2A2330)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D424, &type metadata for ChannelAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A2330);
  }
  return result;
}

unint64_t sub_1A91B487C()
{
  unint64_t result;

  result = qword_1ED2A2348;
  if (!qword_1ED2A2348)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ChannelAttributes.DisplayType, &type metadata for ChannelAttributes.DisplayType);
    atomic_store(result, (unint64_t *)&qword_1ED2A2348);
  }
  return result;
}

uint64_t type metadata accessor for ChannelEditorialArtworkContainer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SubscriptionOffer()
{
  return objc_opt_self();
}

unint64_t sub_1A91B4900()
{
  unint64_t result;

  result = qword_1EEAB9600;
  if (!qword_1EEAB9600)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ChannelAttributes.SubscriptionType, &type metadata for ChannelAttributes.SubscriptionType);
    atomic_store(result, (unint64_t *)&qword_1EEAB9600);
  }
  return result;
}

unint64_t sub_1A91B4944()
{
  unint64_t result;

  result = qword_1ED2A2358;
  if (!qword_1ED2A2358)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ChannelAttributes.DisplayType, &type metadata for ChannelAttributes.DisplayType);
    atomic_store(result, (unint64_t *)&qword_1ED2A2358);
  }
  return result;
}

uint64_t sub_1A91B4988(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A4110);
    v11 = sub_1A9066CE8(a2, v10, (uint64_t (*)(uint64_t))type metadata accessor for SubscriptionOffer, a3);
    result = MEMORY[0x1AF414014](a4, v9, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A91B4A0C()
{
  unint64_t result;

  result = qword_1ED2A6850;
  if (!qword_1ED2A6850)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ChannelAttributes.SubscriptionType, &type metadata for ChannelAttributes.SubscriptionType);
    atomic_store(result, (unint64_t *)&qword_1ED2A6850);
  }
  return result;
}

unint64_t sub_1A91B4A50()
{
  unint64_t result;

  result = qword_1EEAB9610;
  if (!qword_1EEAB9610)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D3D4, &type metadata for ChannelRelationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9610);
  }
  return result;
}

unint64_t sub_1A91B4A94()
{
  unint64_t result;

  result = qword_1ED2A3748;
  if (!qword_1ED2A3748)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D384, &type metadata for ChannelEditorialArtworkContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A3748);
  }
  return result;
}

unint64_t sub_1A91B4AD8()
{
  unint64_t result;

  result = qword_1EEAB9630;
  if (!qword_1EEAB9630)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D334, &type metadata for SubscriptionOffer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9630);
  }
  return result;
}

unint64_t sub_1A91B4B1C()
{
  unint64_t result;

  result = qword_1EEAB9638;
  if (!qword_1EEAB9638)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for SubscriptionOffer.Kind, &type metadata for SubscriptionOffer.Kind);
    atomic_store(result, (unint64_t *)&qword_1EEAB9638);
  }
  return result;
}

uint64_t type metadata accessor for ValueProposition()
{
  return objc_opt_self();
}

unint64_t sub_1A91B4B80()
{
  unint64_t result;

  result = qword_1EEAB9648;
  if (!qword_1EEAB9648)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for SubscriptionOffer.AppType, &type metadata for SubscriptionOffer.AppType);
    atomic_store(result, (unint64_t *)&qword_1EEAB9648);
  }
  return result;
}

unint64_t sub_1A91B4BC4()
{
  unint64_t result;

  result = qword_1EEAB9658;
  if (!qword_1EEAB9658)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for SubscriptionOffer.Kind, &type metadata for SubscriptionOffer.Kind);
    atomic_store(result, (unint64_t *)&qword_1EEAB9658);
  }
  return result;
}

unint64_t sub_1A91B4C08()
{
  unint64_t result;

  result = qword_1EEAB9668;
  if (!qword_1EEAB9668)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for SubscriptionOffer.AppType, &type metadata for SubscriptionOffer.AppType);
    atomic_store(result, (unint64_t *)&qword_1EEAB9668);
  }
  return result;
}

unint64_t sub_1A91B4C4C()
{
  unint64_t result;

  result = qword_1EEAB9678;
  if (!qword_1EEAB9678)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D2E4, &type metadata for ValueProposition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9678);
  }
  return result;
}

unint64_t sub_1A91B4C94()
{
  unint64_t result;

  result = qword_1EEAB9688;
  if (!qword_1EEAB9688)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ChannelAttributes.DisplayType, &type metadata for ChannelAttributes.DisplayType);
    atomic_store(result, (unint64_t *)&qword_1EEAB9688);
  }
  return result;
}

unint64_t sub_1A91B4CDC()
{
  unint64_t result;

  result = qword_1EEAB9690;
  if (!qword_1EEAB9690)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ChannelAttributes.SubscriptionType, &type metadata for ChannelAttributes.SubscriptionType);
    atomic_store(result, (unint64_t *)&qword_1EEAB9690);
  }
  return result;
}

unint64_t sub_1A91B4D24()
{
  unint64_t result;

  result = qword_1EEAB9698;
  if (!qword_1EEAB9698)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for SubscriptionOffer.Kind, &type metadata for SubscriptionOffer.Kind);
    atomic_store(result, (unint64_t *)&qword_1EEAB9698);
  }
  return result;
}

unint64_t sub_1A91B4D6C()
{
  unint64_t result;

  result = qword_1EEAB96A0;
  if (!qword_1EEAB96A0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for SubscriptionOffer.AppType, &type metadata for SubscriptionOffer.AppType);
    atomic_store(result, (unint64_t *)&qword_1EEAB96A0);
  }
  return result;
}

uint64_t method lookup function for ServerChannel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ServerChannel.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ServerChannel.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t method lookup function for ChannelAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChannelAttributes.subscriptionEnabledDateResolved.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ChannelAttributes.allOffers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ChannelAttributes.appType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ChannelAttributes.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ChannelAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

ValueMetadata *type metadata accessor for ChannelAttributes.DisplayType()
{
  return &type metadata for ChannelAttributes.DisplayType;
}

ValueMetadata *type metadata accessor for ChannelAttributes.SubscriptionType()
{
  return &type metadata for ChannelAttributes.SubscriptionType;
}

uint64_t method lookup function for ChannelRelationships()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChannelRelationships.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for ChannelEditorialArtworkContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChannelEditorialArtworkContainer.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ChannelEditorialArtworkContainer.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for SubscriptionOffer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SubscriptionOffer.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of SubscriptionOffer.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t _s18PodcastsFoundation17ChannelAttributesC11DisplayTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A91B4F78 + 4 * byte_1A940C4D8[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A91B4FAC + 4 * byte_1A940C4D3[v4]))();
}

uint64_t sub_1A91B4FAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91B4FB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91B4FBCLL);
  return result;
}

uint64_t sub_1A91B4FC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91B4FD0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A91B4FD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91B4FDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionOffer.Kind()
{
  return &type metadata for SubscriptionOffer.Kind;
}

uint64_t storeEnumTagSinglePayload for SubscriptionOffer.AppType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A91B5044 + 4 * byte_1A940C4E2[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A91B5078 + 4 * byte_1A940C4DD[v4]))();
}

uint64_t sub_1A91B5078(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91B5080(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91B5088);
  return result;
}

uint64_t sub_1A91B5094(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91B509CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A91B50A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91B50A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t method lookup function for ValueProposition()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ValueProposition.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ValueProposition.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t storeEnumTagSinglePayload for ValueProposition.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A91B5140 + 4 * byte_1A940C4EC[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A91B5174 + 4 * byte_1A940C4E7[v4]))();
}

uint64_t sub_1A91B5174(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91B517C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91B5184);
  return result;
}

uint64_t sub_1A91B5190(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91B5198);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A91B519C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91B51A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ValueProposition.CodingKeys()
{
  return &type metadata for ValueProposition.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SubscriptionOffer.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionOffer.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_1A91B529C + 4 * byte_1A940C4F6[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_1A91B52D0 + 4 * byte_1A940C4F1[v4]))();
}

uint64_t sub_1A91B52D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91B52D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91B52E0);
  return result;
}

uint64_t sub_1A91B52EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91B52F4);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_1A91B52F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91B5300(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionOffer.CodingKeys()
{
  return &type metadata for SubscriptionOffer.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ChannelEditorialArtworkContainer.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A91B5368 + 4 * byte_1A940C500[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A91B539C + 4 * byte_1A940C4FB[v4]))();
}

uint64_t sub_1A91B539C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91B53A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91B53ACLL);
  return result;
}

uint64_t sub_1A91B53B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91B53C0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A91B53C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91B53CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChannelEditorialArtworkContainer.CodingKeys()
{
  return &type metadata for ChannelEditorialArtworkContainer.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ChannelRelationships.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A91B5428 + 4 * byte_1A940C505[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A91B5448 + 4 * byte_1A940C50A[v4]))();
}

_BYTE *sub_1A91B5428(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A91B5448(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A91B5450(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A91B5458(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A91B5460(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A91B5468(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ChannelRelationships.CodingKeys()
{
  return &type metadata for ChannelRelationships.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ChannelAttributes.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ChannelAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1A91B5560 + 4 * byte_1A940C514[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1A91B5594 + 4 * byte_1A940C50F[v4]))();
}

uint64_t sub_1A91B5594(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91B559C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91B55A4);
  return result;
}

uint64_t sub_1A91B55B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91B55B8);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1A91B55BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91B55C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChannelAttributes.CodingKeys()
{
  return &type metadata for ChannelAttributes.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ServerChannel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A91B562C + 4 * byte_1A940C51E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A91B5660 + 4 * byte_1A940C519[v4]))();
}

uint64_t sub_1A91B5660(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91B5668(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91B5670);
  return result;
}

uint64_t sub_1A91B567C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91B5684);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A91B5688(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91B5690(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerChannel.CodingKeys()
{
  return &type metadata for ServerChannel.CodingKeys;
}

unint64_t sub_1A91B56B0()
{
  unint64_t result;

  result = qword_1EEAB9758;
  if (!qword_1EEAB9758)
  {
    result = MEMORY[0x1AF414014](&unk_1A940CF24, &type metadata for ServerChannel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9758);
  }
  return result;
}

unint64_t sub_1A91B56F8()
{
  unint64_t result;

  result = qword_1EEAB9760;
  if (!qword_1EEAB9760)
  {
    result = MEMORY[0x1AF414014](&unk_1A940CFDC, &type metadata for ChannelAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9760);
  }
  return result;
}

unint64_t sub_1A91B5740()
{
  unint64_t result;

  result = qword_1EEAB9768;
  if (!qword_1EEAB9768)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D094, &type metadata for ChannelRelationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9768);
  }
  return result;
}

unint64_t sub_1A91B5788()
{
  unint64_t result;

  result = qword_1EEAB9770;
  if (!qword_1EEAB9770)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D14C, &type metadata for ChannelEditorialArtworkContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9770);
  }
  return result;
}

unint64_t sub_1A91B57D0()
{
  unint64_t result;

  result = qword_1EEAB9778;
  if (!qword_1EEAB9778)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D204, &type metadata for SubscriptionOffer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9778);
  }
  return result;
}

unint64_t sub_1A91B5818()
{
  unint64_t result;

  result = qword_1EEAB9780;
  if (!qword_1EEAB9780)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D2BC, &type metadata for ValueProposition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9780);
  }
  return result;
}

unint64_t sub_1A91B5860()
{
  unint64_t result;

  result = qword_1EEAB9788;
  if (!qword_1EEAB9788)
  {
    result = MEMORY[0x1AF414014]("\r=\r<", &type metadata for ValueProposition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9788);
  }
  return result;
}

unint64_t sub_1A91B58A8()
{
  unint64_t result;

  result = qword_1EEAB9790;
  if (!qword_1EEAB9790)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D254, &type metadata for ValueProposition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9790);
  }
  return result;
}

unint64_t sub_1A91B58F0()
{
  unint64_t result;

  result = qword_1EEAB9798;
  if (!qword_1EEAB9798)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D174, &type metadata for SubscriptionOffer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9798);
  }
  return result;
}

unint64_t sub_1A91B5938()
{
  unint64_t result;

  result = qword_1EEAB97A0;
  if (!qword_1EEAB97A0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D19C, &type metadata for SubscriptionOffer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB97A0);
  }
  return result;
}

unint64_t sub_1A91B5980()
{
  unint64_t result;

  result = qword_1ED2A3758;
  if (!qword_1ED2A3758)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D0BC, &type metadata for ChannelEditorialArtworkContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A3758);
  }
  return result;
}

unint64_t sub_1A91B59C8()
{
  unint64_t result;

  result = qword_1ED2A3750;
  if (!qword_1ED2A3750)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D0E4, &type metadata for ChannelEditorialArtworkContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A3750);
  }
  return result;
}

unint64_t sub_1A91B5A10()
{
  unint64_t result;

  result = qword_1EEAB97A8;
  if (!qword_1EEAB97A8)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D004, &type metadata for ChannelRelationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB97A8);
  }
  return result;
}

unint64_t sub_1A91B5A58()
{
  unint64_t result;

  result = qword_1EEAB97B0;
  if (!qword_1EEAB97B0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940D02C, &type metadata for ChannelRelationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB97B0);
  }
  return result;
}

unint64_t sub_1A91B5AA0()
{
  unint64_t result;

  result = qword_1ED2A2340;
  if (!qword_1ED2A2340)
  {
    result = MEMORY[0x1AF414014](&unk_1A940CF4C, &type metadata for ChannelAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A2340);
  }
  return result;
}

unint64_t sub_1A91B5AE8()
{
  unint64_t result;

  result = qword_1ED2A2338;
  if (!qword_1ED2A2338)
  {
    result = MEMORY[0x1AF414014](&unk_1A940CF74, &type metadata for ChannelAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A2338);
  }
  return result;
}

unint64_t sub_1A91B5B30()
{
  unint64_t result;

  result = qword_1ED2A20F8;
  if (!qword_1ED2A20F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A940CE94, &type metadata for ServerChannel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A20F8);
  }
  return result;
}

unint64_t sub_1A91B5B78()
{
  unint64_t result;

  result = qword_1ED2A20F0;
  if (!qword_1ED2A20F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940CEBC, &type metadata for ServerChannel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A20F0);
  }
  return result;
}

uint64_t sub_1A91B5BBC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1717924456 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A91B5DD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E756F43776F6873 && a2 == 0xE900000000000074 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A9441C40 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x5479616C70736964 && a2 == 0xEB00000000657079 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7263736275537369 && a2 == 0xEC00000064656269 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A9441C90 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A9441D00 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A9441C20 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A9441C00 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x777472416F676F6CLL && a2 == 0xEB000000006B726FLL || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A9446950 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001A9441BE0 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A9441CE0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

uint64_t sub_1A91B641C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001A94469E0 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A9446A00 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A9446A20 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A9446A40 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F6C4665726F7473 && a2 == 0xED00006573616377 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A9446A70)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1A91B6690(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x796C696D61467369 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7263736275537369 && a2 == 0xEC00000064656269 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C69626967696C65 && a2 == 0xEF65707954797469 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D614E726566666FLL && a2 == 0xE900000000000065 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x646F69726570 && a2 == 0xE600000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E65647574537369 && a2 == 0xE900000000000074 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6D61726150797562 && a2 == 0xE900000000000073 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6169725465657266 && a2 == 0xE90000000000006CLL || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6169725465657266 && a2 == 0xEF646F697265506CLL || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x656572467369 && a2 == 0xE600000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A9446B30 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x6449707061 && a2 == 0xE500000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x65707954707061 && a2 == 0xE700000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x656D614E707061 && a2 == 0xE700000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x6F77747241707061 && a2 == 0xEA00000000006B72 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A9446B70)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 19;
    else
      return 20;
  }
}

uint64_t sub_1A91B6EA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6563697270 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F466563697270 && a2 == 0xEF79616C70736944)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1A91B6FB4()
{
  unint64_t result;

  result = qword_1EEAB97B8;
  if (!qword_1EEAB97B8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for SubscriptionOffer.AppType, &type metadata for SubscriptionOffer.AppType);
    atomic_store(result, (unint64_t *)&qword_1EEAB97B8);
  }
  return result;
}

unint64_t sub_1A91B6FF8()
{
  unint64_t result;

  result = qword_1EEAB97C0;
  if (!qword_1EEAB97C0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for SubscriptionOffer.Kind, &type metadata for SubscriptionOffer.Kind);
    atomic_store(result, (unint64_t *)&qword_1EEAB97C0);
  }
  return result;
}

unint64_t sub_1A91B703C()
{
  unint64_t result;

  result = qword_1EEAB97C8;
  if (!qword_1EEAB97C8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ChannelAttributes.SubscriptionType, &type metadata for ChannelAttributes.SubscriptionType);
    atomic_store(result, (unint64_t *)&qword_1EEAB97C8);
  }
  return result;
}

unint64_t sub_1A91B7080()
{
  unint64_t result;

  result = qword_1ED2A2350;
  if (!qword_1ED2A2350)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ChannelAttributes.DisplayType, &type metadata for ChannelAttributes.DisplayType);
    atomic_store(result, (unint64_t *)&qword_1ED2A2350);
  }
  return result;
}

id MAPITranscriptTimeBombedURLProvider.workQueue.getter()
{
  id *v0;

  return *v0;
}

uint64_t MAPITranscriptTimeBombedURLProvider.timeBombedURLs(for:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v4 = *v1;
  v3 = v1[1];
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_1A91B7160((uint64_t *)(v3 + 16), a1, v4, v3, &v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  return v6;
}

uint64_t sub_1A91B7160@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16[9];
  uint64_t v17;

  v10 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v11 = sub_1A912E538(a2), (v12 & 1) != 0))
  {
    *a5 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
    return swift_retain();
  }
  else
  {
    v16[0] = a3;
    v16[1] = a4;
    v14 = sub_1A91B7250((uint64_t)a2);
    sub_1A91314A4((uint64_t)a2, (uint64_t)v16);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *a1;
    *a1 = 0x8000000000000000;
    sub_1A930E0D8(v14, v16, isUniquelyReferenced_nonNull_native);
    *a1 = v17;
    swift_bridgeObjectRelease();
    result = sub_1A91314E0((uint64_t)v16);
    *a5 = v14;
  }
  return result;
}

uint64_t sub_1A91B7250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  id v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  id v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[4];
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v41 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB97D8);
  v45 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB97E0);
  v49 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB97E8);
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v43 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB97F0);
  v53 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v42 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB97F8);
  v54 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v50 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)v1;
  v14 = *(_QWORD *)(v1 + 8);
  sub_1A91314A4(a1, (uint64_t)&v57);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = v60;
  *(_OWORD *)(v15 + 64) = v59;
  *(_OWORD *)(v15 + 80) = v16;
  *(_QWORD *)(v15 + 96) = v61;
  v17 = v58;
  *(_OWORD *)(v15 + 32) = v57;
  *(_OWORD *)(v15 + 48) = v17;
  v18 = v13;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9800);
  sub_1A9066D74(&qword_1EEAB9808, &qword_1EEAB9800, MEMORY[0x1E0C96108]);
  sub_1A93F7AAC();
  *(_QWORD *)&v57 = v18;
  v19 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v5, 1, 1, v19);
  sub_1A9066C6C();
  sub_1A9066D74(&qword_1EEAB9810, &qword_1EEAB97D8, MEMORY[0x1E0C96148]);
  sub_1A905FD90();
  v20 = v18;
  v21 = v9;
  v22 = v44;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v5, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v22);
  type metadata accessor for TranscriptData.TimeBombedURLs();
  sub_1A9066D74(&qword_1EEAB9818, &qword_1EEAB97E0, MEMORY[0x1E0C95CB8]);
  v23 = v43;
  v24 = v47;
  sub_1A93F7B84();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v21, v24);
  v25 = v42;
  sub_1A9339DEC(v42);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v48);
  v26 = v41;
  sub_1A91314A4(v41, (uint64_t)&v57);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v20;
  *(_QWORD *)(v27 + 24) = v14;
  v28 = v60;
  *(_OWORD *)(v27 + 64) = v59;
  *(_OWORD *)(v27 + 80) = v28;
  *(_QWORD *)(v27 + 96) = v61;
  v29 = v58;
  *(_OWORD *)(v27 + 32) = v57;
  *(_OWORD *)(v27 + 48) = v29;
  sub_1A91314A4(v26, (uint64_t)&v57);
  sub_1A91314A4((uint64_t)&v57, (uint64_t)v55);
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v20;
  *(_QWORD *)(v30 + 24) = v14;
  v31 = v55[3];
  *(_OWORD *)(v30 + 64) = v55[2];
  *(_OWORD *)(v30 + 80) = v31;
  *(_QWORD *)(v30 + 96) = v56;
  v32 = v55[1];
  *(_OWORD *)(v30 + 32) = v55[0];
  *(_OWORD *)(v30 + 48) = v32;
  sub_1A9066D74(&qword_1EEAB9820, &qword_1EEAB97F0, MEMORY[0x1E0C95708]);
  v33 = v20;
  swift_retain_n();
  v34 = v33;
  v35 = v51;
  v36 = v50;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  sub_1A91314E0((uint64_t)&v57);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v25, v35);
  sub_1A9066D74(&qword_1EEAB9828, &qword_1EEAB97F8, MEMORY[0x1E0C957C0]);
  v37 = v52;
  v38 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v37);
  return v38;
}

uint64_t sub_1A91B77F0@<X0>(_QWORD *a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  _OWORD v19[4];
  uint64_t v20;

  v4 = type metadata accessor for MediaRequest.Params();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - v9;
  sub_1A91B7B3C(a1, (uint64_t)&v18 - v9);
  sub_1A9114B88((uint64_t)v10, (uint64_t)v7);
  sub_1A91314A4((uint64_t)a1, (uint64_t)v19);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = swift_allocObject();
  sub_1A917695C((uint64_t)v7, v12 + v11);
  v13 = v12 + ((v6 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  v14 = v19[3];
  *(_OWORD *)(v13 + 32) = v19[2];
  *(_OWORD *)(v13 + 48) = v14;
  *(_QWORD *)(v13 + 64) = v20;
  v15 = v19[1];
  *(_OWORD *)v13 = v19[0];
  *(_OWORD *)(v13 + 16) = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9800);
  swift_allocObject();
  v16 = sub_1A93F7A94();
  result = sub_1A9114C30((uint64_t)v10);
  *a2 = v16;
  return result;
}

uint64_t sub_1A91B793C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_attributes;
  v5 = v3 + *(int *)(type metadata accessor for ServerTranscript.Attributes(0) + 20) + v4;
  v6 = type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
  sub_1A906A3F0(v5 + *(int *)(v6 + 20), a2);
  v7 = a2 + *(int *)(type metadata accessor for TranscriptData.TimeBombedURLs() + 20);
  return sub_1A906A3F0(v5, v7);
}

uint64_t sub_1A91B79B0(uint64_t a1, uint64_t a2, os_unfair_lock_s *a3, uint64_t *a4)
{
  uint64_t *v5;
  os_unfair_lock_s *v6;
  uint64_t v8;

  v5 = (uint64_t *)&a3[4];
  v6 = a3 + 6;
  os_unfair_lock_lock(a3 + 6);
  sub_1A91B7A68(v5, a4, &v8);
  os_unfair_lock_unlock(v6);
  return swift_release();
}

uint64_t sub_1A91B7A0C(uint64_t a1, os_unfair_lock_s *a2, uint64_t *a3)
{
  uint64_t *v4;
  os_unfair_lock_s *v5;
  uint64_t v7;

  v4 = (uint64_t *)&a2[4];
  v5 = a2 + 6;
  os_unfair_lock_lock(a2 + 6);
  sub_1A91B7A68(v4, a3, &v7);
  os_unfair_lock_unlock(v5);
  return swift_release();
}

uint64_t sub_1A91B7A68@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v6;
  char v7;
  char v8;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRetain();
  v6 = sub_1A912E538(a2);
  v8 = v7;
  result = swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *a1;
    v13 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1A93087F8();
      v11 = v13;
    }
    sub_1A91314E0(*(_QWORD *)(v11 + 48) + 72 * v6);
    v12 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v6);
    sub_1A91AA340(v6, v11);
    *a1 = v11;
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  *a3 = v12;
  return result;
}

uint64_t sub_1A91B7B3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23[13];
  char v24;
  char v25;
  char v26;
  __int128 v27[2];
  uint64_t v28;
  char v29;

  v22 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  memset(v27, 0, sizeof(v27));
  v29 = 4;
  v26 = 0;
  v25 = 1;
  v24 = 3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1A9405520;
  *(_QWORD *)v23 = *a1;
  sub_1A915997C();
  *(_QWORD *)(v6 + 32) = sub_1A93F8B38();
  *(_QWORD *)(v6 + 40) = v7;
  v23[0] = 1;
  v8 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  v9 = MEMORY[0x1E0DEE9D8];
  v10 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  v11 = sub_1A9112728(v9);
  sub_1A911273C(v9);
  v13 = v12;
  v14 = sub_1A9112844(v9);
  v15 = sub_1A9112844(v9);
  v16 = sub_1A9112858(v9);
  *((_QWORD *)&v20 + 1) = sub_1A911286C(v9);
  *(_QWORD *)&v20 = v16;
  *(_QWORD *)&v19 = v15;
  *((_QWORD *)&v19 + 1) = &unk_1E54D6F28;
  *(_QWORD *)&v18 = v9;
  *((_QWORD *)&v18 + 1) = v14;
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v27, &v26, &v25, &v24, v10, v11, v13, v9, v22, v18, v19, v9, v6, v23, 0, 1, v20, 0, 1,
           0,
           (uint64_t)v5,
           0,
           0,
           0,
           0,
           0,
           v9,
           0,
           0,
           2);
}

uint64_t sub_1A91B7D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, void *, uint64_t, uint64_t, void *);
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __int128 v25;
  __int128 v26;
  void *v27;
  uint64_t (**v28)(uint64_t, void *, uint64_t, uint64_t, void *);
  id v29;
  uint64_t v31;
  id v32;
  uint64_t v33;
  _OWORD v34[4];
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v33 = a3;
  v8 = type metadata accessor for MediaRequest.Params();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v13 = objc_allocWithZone((Class)type metadata accessor for MediaRequestController());
  swift_retain();
  v32 = objc_msgSend(v13, sel_init);
  sub_1A91314A4(a4, (uint64_t)v34);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1A909CFCC;
  *(_QWORD *)(v14 + 24) = v12;
  v15 = v34[3];
  *(_OWORD *)(v14 + 64) = v34[2];
  *(_OWORD *)(v14 + 80) = v15;
  *(_QWORD *)(v14 + 96) = v35;
  v16 = v34[1];
  *(_OWORD *)(v14 + 32) = v34[0];
  *(_OWORD *)(v14 + 48) = v16;
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v18 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((_QWORD *)v18 + 2) = v17;
  *((_QWORD *)v18 + 3) = sub_1A91B8AAC;
  *((_QWORD *)v18 + 4) = v14;
  sub_1A93F9330();
  sub_1A9114B88(a3, (uint64_t)v11);
  v19 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v20 = (v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 79) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject();
  sub_1A917695C((uint64_t)v11, v23 + v19);
  *(_QWORD *)(v23 + v20) = MEMORY[0x1E0DEE9D8];
  v24 = v23 + v21;
  *(_QWORD *)(v24 + 64) = v40;
  v25 = v39;
  *(_OWORD *)(v24 + 32) = v38;
  *(_OWORD *)(v24 + 48) = v25;
  v26 = v37;
  *(_OWORD *)v24 = v36;
  *(_OWORD *)(v24 + 16) = v26;
  v27 = v32;
  *(_QWORD *)(v23 + v22) = v32;
  v28 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v28 = sub_1A9114B7C;
  v28[1] = v18;
  swift_retain();
  swift_retain();
  v29 = v27;
  swift_retain();
  sub_1A9195C30(v33, 0, (uint64_t)sub_1A91161FC, v23);
  swift_release();

  swift_release();
  swift_release();
  return swift_release();
}

void sub_1A91B7FA4(unint64_t a1, int a2, int a3, int a4, id a5, void (*a6)(_QWORD *, _QWORD), int a7, uint64_t a8)
{
  _QWORD *v9;

  v9 = sub_1A91B8CA8(a8, a1, a5);
  a6(v9, 0);
  sub_1A91B8E14(v9);
}

uint64_t sub_1A91B8008(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;

  v2 = (_QWORD *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_attributes);
  if (*v2 == *(_QWORD *)(a2 + 8) && v2[1] == *(_QWORD *)(a2 + 16))
    return 1;
  else
    return sub_1A93F90C0() & 1;
}

uint64_t sub_1A91B8070()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 8);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
  sub_1A91B87C8((uint64_t *)(v2 + 16), &v3);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
  return v3;
}

uint64_t _s18PodcastsFoundation35MAPITranscriptTimeBombedURLProviderV0C5ErrorO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v6;
  BOOL v7;
  _OWORD v8[4];
  uint64_t v9;
  uint64_t v10[10];
  _BYTE v11[16];
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  unint64_t v18;

  sub_1A91B87E4(a1, (uint64_t)v11);
  sub_1A91B87E4(a2, (uint64_t)&v13);
  if (v12 == 2)
  {
    if ((_QWORD)v14 != 2)
      goto LABEL_12;
  }
  else
  {
    if (v12 != 1)
    {
      if (v12)
      {
        sub_1A91B87E4((uint64_t)v11, (uint64_t)v10);
        v4 = v10[9];
        if ((unint64_t)v14 >= 3)
        {
          v6 = v18;
          v8[2] = v15;
          v8[3] = v16;
          v9 = v17;
          v8[0] = v13;
          v8[1] = v14;
          v7 = _s18PodcastsFoundation17TranscriptRequestV2eeoiySbAC_ACtFZ_0(v10, (uint64_t *)v8);
          sub_1A91314E0((uint64_t)v10);
          if (v7)
          {
            v3 = sub_1A9146DDC(v4, v6);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A91314E0((uint64_t)v8);
            sub_1A91B8818((uint64_t)v11);
            return v3 & 1;
          }
          sub_1A91314E0((uint64_t)v8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A91B8818((uint64_t)v11);
          goto LABEL_13;
        }
        swift_bridgeObjectRelease();
        sub_1A91314E0((uint64_t)v10);
      }
      else if (!(_QWORD)v14)
      {
        goto LABEL_9;
      }
LABEL_12:
      sub_1A905FD54((uint64_t)v11, &qword_1EEAB97D0);
LABEL_13:
      v3 = 0;
      return v3 & 1;
    }
    if ((_QWORD)v14 != 1)
      goto LABEL_12;
  }
LABEL_9:
  sub_1A91B8818((uint64_t)v11);
  v3 = 1;
  return v3 & 1;
}

uint64_t assignWithCopy for MAPITranscriptTimeBombedURLProvider(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

id *assignWithTake for MAPITranscriptTimeBombedURLProvider(id *a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_release();
  return a1;
}

unint64_t destroy for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 56))
      __swift_destroy_boxed_opaque_existential_0(a1 + 32);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v4 = *(_QWORD *)(a2 + 16);
  if (v4 < 0xFFFFFFFF)
  {
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = v4;
    *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
    v5 = (_OWORD *)(a2 + 32);
    v6 = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    if (v6)
    {
      v7 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v6;
      *(_QWORD *)(a1 + 64) = v7;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 32, a2 + 32, v6);
    }
    else
    {
      v10 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *v5;
      *(_OWORD *)(a1 + 48) = v10;
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    }
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v4 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16) >= 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
      v5 = *(_QWORD *)(a2 + 56);
      if (*(_QWORD *)(a1 + 56))
      {
        if (v5)
        {
          __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
LABEL_19:
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          return a1;
        }
        __swift_destroy_boxed_opaque_existential_0(a1 + 32);
      }
      else if (v5)
      {
        *(_QWORD *)(a1 + 56) = v5;
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, a2 + 32);
        goto LABEL_19;
      }
      v14 = *(_OWORD *)(a2 + 32);
      v15 = *(_OWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 32) = v14;
      *(_OWORD *)(a1 + 48) = v15;
      goto LABEL_19;
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 56))
      __swift_destroy_boxed_opaque_existential_0(a1 + 32);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v4 < 0xFFFFFFFF)
  {
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v9 = *(_OWORD *)(a2 + 16);
    v10 = *(_OWORD *)(a2 + 32);
    v11 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v11;
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = v10;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v6 = (_OWORD *)(a1 + 32);
  v7 = (__int128 *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 32, a2 + 32, v8);
  }
  else
  {
    v12 = *v7;
    v13 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *v6 = v12;
    *(_OWORD *)(a1 + 48) = v13;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  if (*(_QWORD *)(a1 + 16) < 0xFFFFFFFFuLL)
  {
LABEL_9:
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    return a1;
  }
  v4 = *(_QWORD *)(a2 + 16);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 56))
      __swift_destroy_boxed_opaque_existential_0(a1 + 32);
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_0(a1 + 32);
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2 + 2;
  }
  return result;
}

uint64_t sub_1A91B8768(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_1A91B8780(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 72) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 16) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError()
{
  return &type metadata for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError;
}

uint64_t sub_1A91B87C8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A91B7160(a1, *(uint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1A91B87E4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError(a2, a1);
  return a2;
}

uint64_t sub_1A91B8818(uint64_t a1)
{
  destroy for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError(a1);
  return a1;
}

uint64_t sub_1A91B8848@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A91B77F0((_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1A91B8858(uint64_t a1)
{
  uint64_t v1;

  return sub_1A91B79B0(a1, *(_QWORD *)(v1 + 16), *(os_unfair_lock_s **)(v1 + 24), (uint64_t *)(v1 + 32));
}

uint64_t sub_1A91B8868()
{
  uint64_t v0;

  return sub_1A91B7A0C(*(_QWORD *)(v0 + 16), *(os_unfair_lock_s **)(v0 + 24), (uint64_t *)(v0 + 32));
}

uint64_t sub_1A91B8874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for MediaRequest.Params();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  sub_1A9114BD0(*(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + v3 + 16), *(_QWORD *)(v0 + v3 + 24), *(_QWORD *)(v0 + v3 + 32), *(_BYTE *)(v0 + v3 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(v1 + 96);
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v4 + 56))
    __swift_destroy_boxed_opaque_existential_0(v0 + v4 + 32);
  return swift_deallocObject();
}

uint64_t sub_1A91B89EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for MediaRequest.Params() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1A91B7D30(a1, a2, v2 + v6, v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1A91B8A4C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91B8A70()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 88))
    __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  return swift_deallocObject();
}

void sub_1A91B8AAC(unint64_t a1, int a2, int a3, int a4, void *a5)
{
  uint64_t v5;

  sub_1A91B7FA4(a1, a2, a3, a4, a5, *(void (**)(_QWORD *, _QWORD))(v5 + 16), *(_QWORD *)(v5 + 24), v5 + 32);
}

uint64_t sub_1A91B8AB8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A91B8ADC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91B8B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for MediaRequest.Params();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  sub_1A9114BD0(*(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + v3 + 16), *(_QWORD *)(v0 + v3 + 24), *(_QWORD *)(v0 + v3 + 32), *(_BYTE *)(v0 + v3 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 96);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + ((((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1A91B8CA8(uint64_t a1, unint64_t a2, id a3)
{
  _QWORD *v3;
  id v5;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];

  if (!a3)
  {
    if (a2)
    {
      v8 = sub_1A926143C(a2);
      if (v8)
      {
        v9 = v8;
        MEMORY[0x1E0C80A78](v8);
        v14[2] = a1;
        v10 = sub_1A933A38C((uint64_t (*)(id *))sub_1A91B8E64, (uint64_t)v14, v9);
        if (v10)
        {
          v3 = v10;
          swift_bridgeObjectRelease();
          return v3;
        }
        sub_1A91B8E20();
        swift_allocError();
        v3 = (_QWORD *)v13;
        sub_1A91314A4(a1, v13);
        v3[9] = v9;
      }
      else
      {
        sub_1A91B8E20();
        swift_allocError();
        *(_QWORD *)v12 = 0;
        *(_QWORD *)(v12 + 8) = 0;
        *(_QWORD *)(v12 + 16) = 1;
        *(_OWORD *)(v12 + 24) = 0u;
        *(_OWORD *)(v12 + 40) = 0u;
        *(_OWORD *)(v12 + 56) = 0u;
        *(_QWORD *)(v12 + 72) = 0;
      }
    }
    else
    {
      sub_1A91B8E20();
      swift_allocError();
      *v11 = 0u;
      v11[1] = 0u;
      v11[2] = 0u;
      v11[3] = 0u;
      v11[4] = 0u;
    }
  }
  v5 = a3;
  swift_willThrow();
  return v3;
}

void sub_1A91B8E14(id a1)
{

}

unint64_t sub_1A91B8E20()
{
  unint64_t result;

  result = qword_1EEAB9830;
  if (!qword_1EEAB9830)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError, &type metadata for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError);
    atomic_store(result, (unint64_t *)&qword_1EEAB9830);
  }
  return result;
}

uint64_t sub_1A91B8E64(_QWORD *a1)
{
  uint64_t v1;

  return sub_1A91B8008(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1A91B8E84@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 16);
  return swift_retain();
}

uint64_t StoreFeedUpdater.__allocating_init(bagConfiguration:ctx:ingesterProvider:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  StoreFeedUpdater.init(bagConfiguration:ctx:ingesterProvider:)(a1, a2, a3);
  return v6;
}

void sub_1A91B8EE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t updated;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  void *v23;
  void *v24;
  _BYTE *v25;
  id v26;
  uint64_t v27;
  uint64_t aBlock[6];

  updated = type metadata accessor for FeedUpdateRequest();
  v4 = *(_QWORD *)(updated - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](updated);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = *(_QWORD *)(a1 + *(int *)(v7 + 28));
  v8 = aBlock[0];
  v9 = sub_1A93F9060();
  v11 = v10;
  if (objc_msgSend((id)objc_opt_self(), sel_isEmpty_, v8))
  {
    if (qword_1ED2A87E0 != -1)
      swift_once();
    v12 = sub_1A93F7698();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A87C0);
    swift_bridgeObjectRetain();
    v13 = sub_1A93F7674();
    v14 = sub_1A93F87B4();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = swift_slowAlloc();
      *(_DWORD *)v15 = 141558275;
      v27 = 1752392040;
      aBlock[0] = v16;
      sub_1A93F8AA8();
      *(_WORD *)(v15 + 12) = 2081;
      swift_bridgeObjectRetain();
      v27 = sub_1A906436C(v9, v11, aBlock);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A904E000, v13, v14, "Update request for %{private,mask.hash}s denied because it's not a valid adamID", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v16, -1, -1);
      MEMORY[0x1AF41411C](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1A9069320();
    v24 = (void *)swift_allocError();
    *v25 = 0;
    FeedUpdateRequest.failRequest(_:)(v24);

  }
  else
  {
    v26 = *(id *)(v1 + 24);
    sub_1A9064630(a1, (uint64_t)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
    v17 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v18 = (v5 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    v19 = v9;
    v20 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
    v21 = swift_allocObject();
    sub_1A9116174((uint64_t)v6, v21 + v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
    *(_QWORD *)(v21 + v18) = v1;
    *(_QWORD *)(v21 + v20) = v8;
    v22 = (uint64_t *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v22 = v19;
    v22[1] = v11;
    aBlock[4] = (uint64_t)sub_1A91C03D0;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1A908A91C;
    aBlock[3] = (uint64_t)&block_descriptor_17;
    v23 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v26, sel_performBlock_, v23);
    _Block_release(v23);
  }
}

uint64_t sub_1A91B9258(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t updated;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  char v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  os_signpost_id_t v37;
  uint8_t *v38;
  int *v39;
  void (*v40)(char *, uint64_t);
  id v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  unint64_t v69;
  id v70;
  void *v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  int *v75;
  uint64_t v76;
  id v77;
  void *v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  char v87;
  unsigned __int8 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  unint64_t v93;
  uint64_t v94;
  void *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  int *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t aBlock[7];

  v119 = a5;
  v103 = a4;
  v106 = a3;
  v121 = a2;
  v107 = sub_1A93F7D58();
  v6 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v117 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7DB8();
  v115 = *(_QWORD *)(v8 - 8);
  v116 = v8;
  MEMORY[0x1E0C80A78](v8);
  v114 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for StoreFeedUpdater.Update(0);
  v111 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v11 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = v10;
  MEMORY[0x1E0C80A78](v12);
  v113 = (uint64_t)&v100 - v13;
  v14 = sub_1A93F75FC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v105 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v100 - v18;
  updated = type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1E0C80A78](updated);
  v109 = (uint64_t)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v104 = (uint64_t)&v100 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v100 - v25;
  if (qword_1ED2A8670 != -1)
    swift_once();
  v27 = sub_1A93F762C();
  __swift_project_value_buffer(v27, (uint64_t)qword_1ED2A8658);
  sub_1A9064630(a1, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
  sub_1A93F75F0();
  v28 = sub_1A93F7620();
  v102 = sub_1A93F894C();
  v29 = sub_1A93F8A6C();
  v118 = v6;
  v110 = a1;
  v108 = (int *)updated;
  if ((v29 & 1) != 0)
  {
    v101 = v15;
    v30 = v14;
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v105, v19, v14);
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    aBlock[0] = v32;
    *(_DWORD *)v31 = 136315138;
    v33 = sub_1A93F73A4();
    v122 = sub_1A906436C(v33, v34, aBlock);
    v35 = v121;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9064714((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
    v36 = v105;
    v37 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v28, (os_signpost_type_t)v102, v37, "PrepareForFeedUpdateScheduled", "[identifier=%{name=identifier}s] PrepareForFeedUpdateScheduled", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v32, -1, -1);
    v38 = v31;
    v39 = (int *)v120;
    MEMORY[0x1AF41411C](v38, -1, -1);

    v40 = *(void (**)(char *, uint64_t))(v101 + 8);
    v40(v19, v30);
    v40(v36, v30);
  }
  else
  {

    sub_1A9064714((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
    v39 = (int *)v120;
    v35 = v121;
  }
  v41 = objc_msgSend(*(id *)(v35 + 24), sel_podcastForStoreId_, v106);
  v42 = v119;
  if (v41)
  {
    v43 = v41;
    if (qword_1ED2A87E0 != -1)
      swift_once();
    v44 = sub_1A93F7698();
    __swift_project_value_buffer(v44, (uint64_t)qword_1ED2A87C0);
    v45 = v43;
    swift_bridgeObjectRetain_n();
    v46 = v45;
    v47 = sub_1A93F7674();
    v48 = sub_1A93F87B4();
    if (os_log_type_enabled(v47, v48))
    {
      v106 = v11;
      v49 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      aBlock[0] = v50;
      *(_DWORD *)v49 = 136315907;
      v51 = objc_msgSend(v46, sel_uuid);
      if (v51)
      {
        v52 = v51;
        v53 = sub_1A93F8040();
        v55 = v54;

      }
      else
      {
        v53 = 0;
        v55 = 0xE000000000000000;
      }
      v122 = sub_1A906436C(v53, v55, aBlock);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2160;
      v122 = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v49 + 22) = 2081;
      v69 = v119;
      swift_bridgeObjectRetain();
      v122 = sub_1A906436C(v103, v69, aBlock);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v49 + 32) = 2081;
      v70 = objc_msgSend(v46, sel_title);
      if (v70)
      {
        v71 = v70;
        v72 = sub_1A93F8040();
        v74 = v73;

      }
      else
      {
        v72 = 0;
        v74 = 0xE000000000000000;
      }
      v122 = sub_1A906436C(v72, v74, aBlock);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v47, v48, "Creating update for MTPodcast %s for %{private,mask.hash}s - %{private}s", (uint8_t *)v49, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v50, -1, -1);
      MEMORY[0x1AF41411C](v49, -1, -1);

      v11 = v106;
      v39 = (int *)v120;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v75 = v108;
    v76 = v110;
    if ((*(_BYTE *)(v110 + v108[10]) & 1) == 0
      && (v77 = objc_msgSend(v46, sel_nextSyncToken)) != 0
      && (v78 = v77, v79 = sub_1A93F8040(), v81 = v80, v78, v81))
    {
      swift_bridgeObjectRelease();
      if ((v81 & 0x2000000000000000) != 0)
        v82 = HIBYTE(v81) & 0xF;
      else
        v82 = v79 & 0xFFFFFFFFFFFFLL;
      v83 = v104;
      sub_1A9064630(v76, v104, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
      if (v82)
      {
        v84 = *(_QWORD *)(v83 + v75[12]);
        sub_1A9064714(v83, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
        if (v84 == 23)
          v85 = *(_BYTE *)(v121 + 72);
        else
          v85 = 0;
        goto LABEL_35;
      }
    }
    else
    {
      v83 = v104;
      sub_1A9064630(v76, v104, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
    }
    sub_1A9064714(v83, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
    v85 = 1;
LABEL_35:
    v86 = v109;
    sub_1A9064630(v76, v109, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
    v87 = *(_BYTE *)(v76 + v75[9]);
    v88 = objc_msgSend(v46, sel_feedUpdateNeedsRetry);
    sub_1A9064630(v86, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
    v11[v39[5]] = v87;
    v11[v39[6]] = v88;
    v11[v39[7]] = v85;
    aBlock[0] = *(_QWORD *)(v86 + v75[7]);
    v89 = sub_1A93F9060();
    v91 = v90;
    sub_1A9064714(v86, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
    v92 = (uint64_t *)&v11[v39[8]];
    *v92 = v89;
    v92[1] = v91;
    v68 = v113;
    sub_1A9116174((uint64_t)v11, v113, type metadata accessor for StoreFeedUpdater.Update);

    v35 = v121;
    goto LABEL_36;
  }
  if (qword_1ED2A87E0 != -1)
    swift_once();
  v56 = sub_1A93F7698();
  __swift_project_value_buffer(v56, (uint64_t)qword_1ED2A87C0);
  swift_bridgeObjectRetain_n();
  v57 = sub_1A93F7674();
  v58 = sub_1A93F87B4();
  if (os_log_type_enabled(v57, v58))
  {
    v59 = swift_slowAlloc();
    v60 = swift_slowAlloc();
    *(_DWORD *)v59 = 141558275;
    v122 = 1752392040;
    aBlock[0] = v60;
    sub_1A93F8AA8();
    *(_WORD *)(v59 + 12) = 2081;
    swift_bridgeObjectRetain();
    v122 = sub_1A906436C(v103, v42, aBlock);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v57, v58, "No matching MTPodcast found for storeID %{private,mask.hash}s. Probably a new follow. Creating bootstrap update.", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v60, -1, -1);
    MEMORY[0x1AF41411C](v59, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v62 = v109;
  v61 = v110;
  v63 = v108;
  sub_1A9064630(v110, v109, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
  LOBYTE(v61) = *(_BYTE *)(v61 + v63[9]);
  sub_1A9064630(v62, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
  v11[v39[5]] = v61;
  v11[v39[6]] = 1;
  v11[v39[7]] = 1;
  aBlock[0] = *(_QWORD *)(v62 + v63[7]);
  v64 = sub_1A93F9060();
  v66 = v65;
  sub_1A9064714(v62, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
  v67 = (uint64_t *)&v11[v39[8]];
  *v67 = v64;
  v67[1] = v66;
  v68 = v113;
  sub_1A9116174((uint64_t)v11, v113, type metadata accessor for StoreFeedUpdater.Update);
LABEL_36:
  sub_1A9064630(v68, (uint64_t)v11, type metadata accessor for StoreFeedUpdater.Update);
  v93 = (*(unsigned __int8 *)(v111 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80);
  v94 = swift_allocObject();
  *(_QWORD *)(v94 + 16) = v35;
  sub_1A9116174((uint64_t)v11, v94 + v93, type metadata accessor for StoreFeedUpdater.Update);
  aBlock[4] = (uint64_t)sub_1A91C2A90;
  aBlock[5] = v94;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A908A91C;
  aBlock[3] = (uint64_t)&block_descriptor_25_2;
  v95 = _Block_copy(aBlock);
  swift_retain();
  v96 = v114;
  sub_1A93F7D88();
  v122 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  v97 = v117;
  v98 = v107;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v96, v97, v95);
  _Block_release(v95);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v96, v116);
  sub_1A9064714(v68, type metadata accessor for StoreFeedUpdater.Update);
  return swift_release();
}

uint64_t sub_1A91B9EC4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  id v27;
  uint64_t v28;
  NSObject *v29;
  os_signpost_type_t v30;
  char v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  os_signpost_id_t v38;
  uint8_t *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t updated;
  uint64_t v44;
  os_unfair_lock_s *v45;
  os_unfair_lock_s *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88[3];
  uint64_t v89[4];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A65F8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v84 = (uint64_t)&v77 - v8;
  v9 = sub_1A93F75FC();
  v85 = *(_QWORD *)(v9 - 8);
  v86 = v9;
  MEMORY[0x1E0C80A78](v9);
  v83 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v77 - v12;
  v14 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1E0C80A78](v14);
  v79 = (uint64_t)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v82 = (uint64_t)&v77 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v77 - v19;
  v21 = sub_1A93F7E18();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (uint64_t *)((char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = (void *)v2[2];
  *v25 = v26;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v22 + 104))(v25, *MEMORY[0x1E0DEF740], v21, v23);
  v27 = v26;
  LOBYTE(v26) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v25, v21);
  if ((v26 & 1) != 0)
  {
    v78 = v14;
    if (qword_1ED2A8670 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v28 = sub_1A93F762C();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED2A8658);
  sub_1A9064630(a1, (uint64_t)v20, type metadata accessor for StoreFeedUpdater.Update);
  sub_1A93F75F0();
  v29 = sub_1A93F7620();
  v30 = sub_1A93F894C();
  v31 = sub_1A93F8A6C();
  v81 = v6;
  if ((v31 & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v83, v13, v86);
    v32 = swift_slowAlloc();
    v80 = a1;
    v33 = (uint8_t *)v32;
    v34 = swift_slowAlloc();
    v89[0] = v34;
    *(_DWORD *)v33 = 136315138;
    v35 = sub_1A93F73A4();
    v88[0] = sub_1A906436C(v35, v36, v89);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9064714((uint64_t)v20, type metadata accessor for StoreFeedUpdater.Update);
    v37 = v83;
    v38 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v29, v30, v38, "EvaluationScheduled", "[identifier=%{name=identifier}s]", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v34, -1, -1);
    v39 = v33;
    a1 = v80;
    MEMORY[0x1AF41411C](v39, -1, -1);

    v40 = v86;
    v41 = *(void (**)(char *, uint64_t))(v85 + 8);
    v41(v13, v86);
    v41(v37, v40);
  }
  else
  {

    sub_1A9064714((uint64_t)v20, type metadata accessor for StoreFeedUpdater.Update);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v13, v86);
  }
  v42 = v2[4];
  updated = type metadata accessor for FeedUpdateRequest();
  v44 = *(int *)(updated + 28);
  v89[0] = *(_QWORD *)(a1 + v44);
  MEMORY[0x1E0C80A78](updated);
  *(&v77 - 4) = v42;
  *(&v77 - 3) = (uint64_t)v89;
  *(&v77 - 2) = a1;
  v46 = v45 + 4;
  os_unfair_lock_lock(v45 + 4);
  sub_1A9171390((_QWORD *(*)(uint64_t *__return_ptr))sub_1A91C2618, v88);
  os_unfair_lock_unlock(v46);
  v47 = *(_QWORD *)(a1 + v44);
  swift_beginAccess();
  v48 = v2[8];
  if (*(_QWORD *)(v48 + 16) && (v49 = sub_1A906C424(v47), (v50 & 1) != 0))
  {
    v51 = v49;
    v52 = *(_QWORD *)(v48 + 56);
    v53 = type metadata accessor for StoreFeedUpdater.Retry(0);
    v54 = *(_QWORD *)(v53 - 8);
    v55 = v52 + *(_QWORD *)(v54 + 72) * v51;
    v56 = v84;
    sub_1A9064630(v55, v84, type metadata accessor for StoreFeedUpdater.Retry);
    v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56);
    v57(v56, 0, 1, v53);
    sub_1A905FD54(v56, qword_1ED2A65F8);
    if (qword_1ED2A87E0 != -1)
      swift_once();
    v58 = sub_1A93F7698();
    __swift_project_value_buffer(v58, (uint64_t)qword_1ED2A87C0);
    v59 = v82;
    sub_1A9064630(a1, v82, type metadata accessor for StoreFeedUpdater.Update);
    v60 = sub_1A93F7674();
    v61 = sub_1A93F87B4();
    v62 = v61;
    if (os_log_type_enabled(v60, v61))
    {
      v63 = swift_slowAlloc();
      v86 = v53;
      v64 = v63;
      v65 = swift_slowAlloc();
      v80 = a1;
      v85 = v65;
      *(_DWORD *)v64 = 141558275;
      v87 = 1752392040;
      v88[0] = v65;
      LODWORD(v84) = v62;
      sub_1A93F8AA8();
      *(_WORD *)(v64 + 12) = 2081;
      v83 = (char *)(v64 + 14);
      v66 = v79;
      sub_1A9064630(v59, v79, type metadata accessor for StoreFeedUpdater.Update);
      v67 = (uint64_t *)(v66 + *(int *)(v78 + 32));
      v69 = *v67;
      v68 = v67[1];
      swift_bridgeObjectRetain();
      sub_1A9064714(v66, type metadata accessor for StoreFeedUpdater.Update);
      v87 = sub_1A906436C(v69, v68, v88);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A9064714(v82, type metadata accessor for StoreFeedUpdater.Update);
      _os_log_impl(&dword_1A904E000, v60, (os_log_type_t)v84, "Update %{private,mask.hash}s: clearing retries because a new request has come in", (uint8_t *)v64, 0x16u);
      v70 = v85;
      swift_arrayDestroy();
      a1 = v80;
      MEMORY[0x1AF41411C](v70, -1, -1);
      v71 = v64;
      v53 = v86;
      MEMORY[0x1AF41411C](v71, -1, -1);
    }
    else
    {
      sub_1A9064714(v59, type metadata accessor for StoreFeedUpdater.Update);
    }

    v74 = *(_QWORD *)(a1 + v44);
    v75 = (uint64_t)v81;
    v57((uint64_t)v81, 1, 1, v53);
    swift_beginAccess();
    sub_1A927C704(v75, v74);
    swift_endAccess();
  }
  else
  {
    v72 = type metadata accessor for StoreFeedUpdater.Retry(0);
    v73 = v84;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v84, 1, 1, v72);
    sub_1A905FD54(v73, qword_1ED2A65F8);
  }
  return sub_1A91BA624(a1);
}

uint64_t sub_1A91BA624(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t updated;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int **v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  int **v38;
  int *v39;
  int *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  int **v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t, int *);
  int v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  _BOOL4 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  int **v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int *v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  char v117;
  int *v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  char v123;
  uint64_t v124;
  _QWORD v126[2];
  uint64_t v127;
  uint64_t v128;
  int **v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148[4];

  v2 = v1;
  updated = type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1E0C80A78](updated);
  v140 = (uint64_t)v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A66A0);
  v128 = *(_QWORD *)(v130 - 8);
  MEMORY[0x1E0C80A78](v130);
  v129 = (int **)((char *)v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v134 = (_QWORD *)((char *)v126 - v8);
  MEMORY[0x1E0C80A78](v9);
  v133 = (uint64_t)v126 - v10;
  v143 = (int *)type metadata accessor for StoreFeedUpdater.Update(0);
  v131 = *((_QWORD *)v143 - 1);
  MEMORY[0x1E0C80A78](v143);
  v139 = (char *)v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v138 = (char *)v126 - v13;
  MEMORY[0x1E0C80A78](v14);
  v137 = (uint64_t)v126 - v15;
  MEMORY[0x1E0C80A78](v16);
  v136 = (uint64_t)v126 - v17;
  MEMORY[0x1E0C80A78](v18);
  v144 = (uint64_t)v126 - v19;
  MEMORY[0x1E0C80A78](v20);
  v142 = (uint64_t)v126 - v21;
  MEMORY[0x1E0C80A78](v22);
  v127 = (uint64_t)v126 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v126 - v25;
  MEMORY[0x1E0C80A78](v27);
  v132 = (uint64_t)v126 - v28;
  MEMORY[0x1E0C80A78](v29);
  v141 = (uint64_t)v126 - v30;
  MEMORY[0x1E0C80A78](v31);
  v33 = (int **)((char *)v126 - v32);
  v34 = sub_1A93F7E18();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x1E0C80A78](v34);
  v38 = (int **)((char *)v126 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = (int *)v2[2];
  *v38 = v39;
  (*(void (**)(int **, _QWORD, uint64_t, double))(v35 + 104))(v38, *MEMORY[0x1E0DEF740], v34, v36);
  v40 = v39;
  v41 = sub_1A93F7E3C();
  (*(void (**)(int **, uint64_t))(v35 + 8))(v38, v34);
  if ((v41 & 1) == 0)
  {
    __break(1u);
    goto LABEL_51;
  }
  sub_1A9064630(a1, (uint64_t)v33, type metadata accessor for StoreFeedUpdater.Update);
  v42 = *(uint64_t *)((char *)v33 + *(int *)(updated + 28));
  v43 = v2[5];
  v44 = sub_1A91BF810(v42);
  v38 = v33;
  v39 = v143;
  if ((v44 & 1) == 0 || *((_BYTE *)v33 + v143[7]) != 1)
  {
    if ((sub_1A91BF810(v42) & 1) == 0)
    {
      v60 = v2[6];
      if ((sub_1A91BF810(v42) & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A96F8);
        v70 = *(_QWORD *)(v128 + 72);
        v71 = (*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
        v72 = swift_allocObject();
        *(_OWORD *)(v72 + 16) = xmmword_1A9405950;
        v133 = v72;
        v73 = v72 + v71;
        v128 = v43;
        sub_1A91BF9B8(v42, v72 + v71);
        v74 = v73 + v70;
        sub_1A91BF9B8(v42, v73 + v70);
        v126[0] = v73;
        v75 = (uint64_t)v134;
        sub_1A91C25D0(v73, (uint64_t)v134);
        v76 = (uint64_t)v129;
        sub_1A91C2880(v75, (uint64_t)v129);
        v77 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v131 + 48);
        v78 = v77(v76, 1, v39);
        v126[1] = v60;
        if (v78 == 1)
        {
          sub_1A905FD54(v76, qword_1ED2A66A0);
          v79 = MEMORY[0x1E0DEE9D8];
        }
        else
        {
          v80 = v132;
          sub_1A9116174(v76, v132, type metadata accessor for StoreFeedUpdater.Update);
          sub_1A9116174(v80, (uint64_t)v26, type metadata accessor for StoreFeedUpdater.Update);
          v79 = MEMORY[0x1E0DEE9D8];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v79 = sub_1A9118B04(0, *(_QWORD *)(v79 + 16) + 1, 1, v79);
          v82 = *(_QWORD *)(v79 + 16);
          v81 = *(_QWORD *)(v79 + 24);
          if (v82 >= v81 >> 1)
            v79 = sub_1A9118B04(v81 > 1, v82 + 1, 1, v79);
          *(_QWORD *)(v79 + 16) = v82 + 1;
          sub_1A9116174((uint64_t)v26, v79+ ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80))+ *(_QWORD *)(v131 + 72) * v82, type metadata accessor for StoreFeedUpdater.Update);
        }
        v83 = (uint64_t)v134;
        sub_1A91C25D0(v74, (uint64_t)v134);
        sub_1A91C2880(v83, v76);
        if (v77(v76, 1, v39) == 1)
        {
          sub_1A905FD54(v76, qword_1ED2A66A0);
        }
        else
        {
          v84 = v132;
          sub_1A9116174(v76, v132, type metadata accessor for StoreFeedUpdater.Update);
          sub_1A9116174(v84, (uint64_t)v26, type metadata accessor for StoreFeedUpdater.Update);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v79 = sub_1A9118B04(0, *(_QWORD *)(v79 + 16) + 1, 1, v79);
          v86 = *(_QWORD *)(v79 + 16);
          v85 = *(_QWORD *)(v79 + 24);
          if (v86 >= v85 >> 1)
            v79 = sub_1A9118B04(v85 > 1, v86 + 1, 1, v79);
          *(_QWORD *)(v79 + 16) = v86 + 1;
          sub_1A9116174((uint64_t)v26, v79+ ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80))+ *(_QWORD *)(v131 + 72) * v86, type metadata accessor for StoreFeedUpdater.Update);
        }
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        v87 = *(_QWORD *)(v79 + 16);
        if (v87)
        {
          if (qword_1ED2A87E0 != -1)
            swift_once();
          v130 = v79;
          v88 = sub_1A93F7698();
          __swift_project_value_buffer(v88, (uint64_t)qword_1ED2A87C0);
          v89 = sub_1A93F7674();
          v90 = sub_1A93F87B4();
          v91 = os_log_type_enabled(v89, v90);
          v135 = updated;
          if (v91)
          {
            v92 = swift_slowAlloc();
            v93 = swift_slowAlloc();
            v148[0] = v93;
            *(_DWORD *)v92 = 141558275;
            v146 = 1752392040;
            v134 = &v147;
            sub_1A93F8AA8();
            *(_WORD *)(v92 + 12) = 2081;
            v133 = v92 + 14;
            swift_beginAccess();
            v94 = v141;
            sub_1A9064630((uint64_t)v38, v141, type metadata accessor for StoreFeedUpdater.Update);
            v95 = (uint64_t *)(v94 + v39[8]);
            v96 = v38;
            v97 = *v95;
            v98 = v95[1];
            swift_bridgeObjectRetain();
            sub_1A9064714(v94, type metadata accessor for StoreFeedUpdater.Update);
            v99 = v97;
            v38 = v96;
            v146 = sub_1A906436C(v99, v98, v148);
            sub_1A93F8AA8();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1A904E000, v89, v90, "There is a pending update for %{private,mask.hash}s. Merging together.", (uint8_t *)v92, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1AF41411C](v93, -1, -1);
            MEMORY[0x1AF41411C](v92, -1, -1);
          }

          v100 = v140;
          swift_beginAccess();
          v129 = v38;
          v101 = v142;
          sub_1A9064630((uint64_t)v38, v142, type metadata accessor for StoreFeedUpdater.Update);
          v102 = v39[5];
          v133 = v39[6];
          v134 = (uint64_t *)v102;
          v132 = v39[7];
          v103 = v101;
          v104 = v130 + ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80));
          v131 = *(_QWORD *)(v131 + 72);
          swift_bridgeObjectRetain();
          v105 = v144;
          do
          {
            sub_1A9064630(v104, v105, type metadata accessor for StoreFeedUpdater.Update);
            sub_1A9064630(v103, v100, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
            v115 = *((_BYTE *)v134 + v103);
            v116 = v137;
            sub_1A9064630(v105, v137, type metadata accessor for StoreFeedUpdater.Update);
            if ((v115 & 1) != 0)
            {
              v117 = 1;
              v118 = v143;
            }
            else
            {
              v118 = v143;
              v117 = *(_BYTE *)(v116 + v143[5]);
            }
            v120 = (uint64_t)v138;
            v119 = (uint64_t)v139;
            sub_1A9064714(v116, type metadata accessor for StoreFeedUpdater.Update);
            v121 = *(_BYTE *)(v103 + v133);
            sub_1A9064630(v144, v120, type metadata accessor for StoreFeedUpdater.Update);
            if ((v121 & 1) != 0)
              v122 = 1;
            else
              v122 = *(_BYTE *)(v120 + v118[6]);
            sub_1A9064714(v120, type metadata accessor for StoreFeedUpdater.Update);
            v123 = *(_BYTE *)(v142 + v132);
            sub_1A9064630(v144, v119, type metadata accessor for StoreFeedUpdater.Update);
            if ((v123 & 1) != 0)
            {
              v107 = 1;
              v106 = v143;
            }
            else
            {
              v106 = v143;
              v107 = *(_BYTE *)(v119 + v143[7]);
            }
            sub_1A9064714(v119, type metadata accessor for StoreFeedUpdater.Update);
            v100 = v140;
            v108 = v141;
            sub_1A9064630(v140, v141, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
            *(_BYTE *)(v108 + v106[5]) = v117;
            *(_BYTE *)(v108 + v106[6]) = v122;
            *(_BYTE *)(v108 + v106[7]) = v107;
            v146 = *(_QWORD *)(v100 + *(int *)(v135 + 28));
            v109 = sub_1A93F9060();
            v111 = v110;
            sub_1A9064714(v100, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
            v112 = (uint64_t *)(v108 + v106[8]);
            *v112 = v109;
            v112[1] = v111;
            v113 = v108;
            v114 = v136;
            sub_1A9116174(v113, v136, type metadata accessor for StoreFeedUpdater.Update);
            v105 = v144;
            sub_1A9064714(v144, type metadata accessor for StoreFeedUpdater.Update);
            v103 = v142;
            sub_1A9064714(v142, type metadata accessor for StoreFeedUpdater.Update);
            sub_1A9116174(v114, v103, type metadata accessor for StoreFeedUpdater.Update);
            v104 += v131;
            --v87;
          }
          while (v87);
          swift_bridgeObjectRelease();
          v124 = v127;
          sub_1A9116174(v103, v127, type metadata accessor for StoreFeedUpdater.Update);
          swift_bridgeObjectRelease();
          v38 = v129;
          sub_1A91C2194(v124, (uint64_t)v129);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_beginAccess();
        sub_1A91BE6D8((uint64_t)v38);
        goto LABEL_48;
      }
    }
    if (qword_1ED2A87E0 == -1)
    {
LABEL_12:
      v61 = sub_1A93F7698();
      __swift_project_value_buffer(v61, (uint64_t)qword_1ED2A87C0);
      v62 = sub_1A93F7674();
      v63 = sub_1A93F87B4();
      if (os_log_type_enabled(v62, v63))
      {
        v64 = swift_slowAlloc();
        v65 = swift_slowAlloc();
        v146 = v65;
        *(_DWORD *)v64 = 141558275;
        v148[0] = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v64 + 12) = 2081;
        swift_beginAccess();
        v66 = v141;
        sub_1A9064630((uint64_t)v38, v141, type metadata accessor for StoreFeedUpdater.Update);
        v67 = (uint64_t *)(v66 + v39[8]);
        v68 = *v67;
        v69 = v67[1];
        swift_bridgeObjectRetain();
        sub_1A9064714(v66, type metadata accessor for StoreFeedUpdater.Update);
        v145 = sub_1A906436C(v68, v69, &v146);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v62, v63, "There is already an update running for %{private,mask.hash}s. Dropping this redundant request.", (uint8_t *)v64, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v65, -1, -1);
        MEMORY[0x1AF41411C](v64, -1, -1);

        v59 = (uint64_t)v38;
        return sub_1A9064714(v59, type metadata accessor for StoreFeedUpdater.Update);
      }

LABEL_48:
      v59 = (uint64_t)v38;
      return sub_1A9064714(v59, type metadata accessor for StoreFeedUpdater.Update);
    }
LABEL_51:
    swift_once();
    goto LABEL_12;
  }
  if (qword_1ED2A87E0 != -1)
    swift_once();
  v45 = sub_1A93F7698();
  __swift_project_value_buffer(v45, (uint64_t)qword_1ED2A87C0);
  v46 = sub_1A93F7674();
  v47 = sub_1A93F87B4();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = swift_slowAlloc();
    v144 = swift_slowAlloc();
    v148[0] = v144;
    *(_DWORD *)v48 = 141558275;
    v146 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v48 + 12) = 2081;
    v142 = v48 + 14;
    swift_beginAccess();
    v49 = v141;
    sub_1A9064630((uint64_t)v33, v141, type metadata accessor for StoreFeedUpdater.Update);
    v50 = (uint64_t *)(v49 + v143[8]);
    v51 = v33;
    v53 = *v50;
    v52 = v50[1];
    swift_bridgeObjectRetain();
    v54 = v49;
    v55 = v143;
    sub_1A9064714(v54, type metadata accessor for StoreFeedUpdater.Update);
    v56 = v53;
    v38 = v51;
    v39 = v55;
    v146 = sub_1A906436C(v56, v52, v148);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v46, v47, "There is a running delta update for %{private,mask.hash}s. This is a bootstrap update, holding until the delta is done.", (uint8_t *)v48, 0x16u);
    v57 = v144;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v57, -1, -1);
    MEMORY[0x1AF41411C](v48, -1, -1);
  }

  swift_beginAccess();
  v58 = v133;
  sub_1A9064630((uint64_t)v38, v133, type metadata accessor for StoreFeedUpdater.Update);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v131 + 56))(v58, 0, 1, v39);
  swift_beginAccess();
  sub_1A927C52C(v58, v42);
  swift_endAccess();
  v59 = (uint64_t)v38;
  return sub_1A9064714(v59, type metadata accessor for StoreFeedUpdater.Update);
}

void sub_1A91BB56C(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  double v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  id v41;
  uint64_t updated;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(_QWORD, _QWORD, _QWORD);
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  NSObject *v75;
  os_log_type_t v76;
  int v77;
  uint64_t v78;
  uint64_t *v79;
  void (*v80)(_QWORD, _QWORD, _QWORD);
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  os_log_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  void (*v101)(_QWORD, _QWORD);
  char *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  void *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  id v118;
  void (*v119)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t *v126;
  uint64_t v127;
  Class isa;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  _QWORD *v141;
  os_log_t v142;
  char *v143;
  uint64_t v144;
  void (*v145)(_QWORD, _QWORD, _QWORD);
  id *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t aBlock[6];
  uint64_t v152;
  uint64_t v153;

  v136 = sub_1A93F7D58();
  v135 = *(_QWORD *)(v136 - 8);
  MEMORY[0x1E0C80A78](v136);
  v134 = (char *)&v118 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_1A93F7DB8();
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v131 = (char *)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_1A93F7D40();
  v127 = *(_QWORD *)(v129 - 8);
  MEMORY[0x1E0C80A78](v129);
  v126 = (uint64_t *)((char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v140 = sub_1A93F7DE8();
  v124 = *(_QWORD *)(v140 - 8);
  MEMORY[0x1E0C80A78](v140);
  v123 = (char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v139 = (char *)&v118 - v8;
  v142 = (os_log_t)type metadata accessor for StoreFeedUpdater.Update(0);
  isa = v142[-1].isa;
  MEMORY[0x1E0C80A78](v142);
  v10 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v137 = (uint64_t)&v118 - v12;
  MEMORY[0x1E0C80A78](v13);
  v149 = (char *)&v118 - v14;
  v130 = v15;
  MEMORY[0x1E0C80A78](v16);
  v143 = (char *)&v118 - v17;
  v18 = sub_1A93F73E0();
  v144 = *(_QWORD *)(v18 - 8);
  v145 = (void (*)(_QWORD, _QWORD, _QWORD))v18;
  MEMORY[0x1E0C80A78](v18);
  v125 = (char *)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v138 = (char *)&v118 - v21;
  v122 = v22;
  MEMORY[0x1E0C80A78](v23);
  v148 = (char *)&v118 - v24;
  v150 = type metadata accessor for StoreFeedUpdater.Retry(0);
  v25 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v141 = (id *)((char *)&v118 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v27);
  v29 = (uint64_t *)((char *)&v118 - v28);
  v30 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A65F8);
  MEMORY[0x1E0C80A78](v30);
  v146 = (id *)((char *)&v118 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v118 - v33;
  v35 = sub_1A93F7E18();
  v36 = *(char **)(v35 - 8);
  v37 = MEMORY[0x1E0C80A78](v35);
  v39 = (id *)((char *)&v118 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v147 = v1;
  v40 = *(void **)(v1 + 16);
  *v39 = v40;
  (*((void (**)(_QWORD *, _QWORD, uint64_t, double))v36 + 13))(v39, *MEMORY[0x1E0DEF740], v35, v37);
  v41 = v40;
  LOBYTE(v40) = sub_1A93F7E3C();
  (*((void (**)(_QWORD *, uint64_t))v36 + 1))(v39, v35);
  if ((v40 & 1) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  updated = type metadata accessor for FeedUpdateRequest();
  v36 = a1;
  if ((a1[*(int *)(updated + 52)] & 1) != 0)
  {
    if (qword_1ED2A87E0 == -1)
    {
LABEL_4:
      v43 = sub_1A93F7698();
      __swift_project_value_buffer(v43, (uint64_t)qword_1ED2A87C0);
      sub_1A9064630((uint64_t)v36, (uint64_t)v10, type metadata accessor for StoreFeedUpdater.Update);
      v44 = sub_1A93F7674();
      v45 = sub_1A93F87B4();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = swift_slowAlloc();
        v47 = swift_slowAlloc();
        aBlock[0] = v47;
        *(_DWORD *)v46 = 141558275;
        v153 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v46 + 12) = 2081;
        v48 = v149;
        sub_1A9064630((uint64_t)v10, (uint64_t)v149, type metadata accessor for StoreFeedUpdater.Update);
        v49 = (uint64_t *)&v48[SLODWORD(v142[4].isa)];
        v50 = *v49;
        v51 = v49[1];
        swift_bridgeObjectRetain();
        sub_1A9064714((uint64_t)v48, type metadata accessor for StoreFeedUpdater.Update);
        v153 = sub_1A906436C(v50, v51, aBlock);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        sub_1A9064714((uint64_t)v10, type metadata accessor for StoreFeedUpdater.Update);
        _os_log_impl(&dword_1A904E000, v44, v45, "Update %{private,mask.hash}s: Not retryable, dropping.", (uint8_t *)v46, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v47, -1, -1);
        MEMORY[0x1AF41411C](v46, -1, -1);
      }
      else
      {
        sub_1A9064714((uint64_t)v10, type metadata accessor for StoreFeedUpdater.Update);
      }

      return;
    }
LABEL_32:
    swift_once();
    goto LABEL_4;
  }
  v118 = v41;
  v120 = *(int *)(updated + 28);
  v52 = *(_QWORD *)&a1[v120];
  v53 = v147;
  v121 = v147 + 64;
  swift_beginAccess();
  v54 = *(_QWORD *)(v53 + 64);
  if (*(_QWORD *)(v54 + 16))
  {
    v55 = sub_1A906C424(v52);
    v57 = (uint64_t)v143;
    v56 = v144;
    v58 = v150;
    if ((v59 & 1) != 0)
    {
      sub_1A9064630(*(_QWORD *)(v54 + 56) + *(_QWORD *)(v25 + 72) * v55, (uint64_t)v34, type metadata accessor for StoreFeedUpdater.Retry);
      v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
      v61 = v34;
      v62 = 0;
    }
    else
    {
      v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
      v61 = v34;
      v62 = 1;
    }
    v119 = v60;
    v60(v61, v62, 1, v58);
    v63 = v149;
  }
  else
  {
    v58 = v150;
    v119 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
    v119(v34, 1, 1, v150);
    v63 = v149;
    v57 = (uint64_t)v143;
    v56 = v144;
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v34, 1, v58))
  {
    sub_1A905FD54((uint64_t)v34, qword_1ED2A65F8);
    v64 = 0;
  }
  else
  {
    sub_1A9064630((uint64_t)v34, (uint64_t)v29, type metadata accessor for StoreFeedUpdater.Retry);
    sub_1A905FD54((uint64_t)v34, qword_1ED2A65F8);
    v64 = *v29;
    sub_1A9064714((uint64_t)v29, type metadata accessor for StoreFeedUpdater.Retry);
  }
  v65 = v145;
  v66 = *(_QWORD *)(v53 + 80);
  if (v64 < *(_QWORD *)(v66 + 16))
  {
    v67 = v141;
    *v141 = v64 + 1;
    v68 = v150;
    v69 = (char *)v67 + *(int *)(v150 + 20);
    sub_1A93F73D4();
    v145 = *(void (**)(_QWORD, _QWORD, _QWORD))(v56 + 16);
    v145(v148, v69, v65);
    v70 = *(_QWORD *)&v36[v120];
    v71 = (uint64_t)v67;
    v72 = (char *)v146;
    sub_1A9064630(v71, (uint64_t)v146, type metadata accessor for StoreFeedUpdater.Retry);
    v119(v72, 0, 1, v68);
    swift_beginAccess();
    sub_1A927C704((uint64_t)v72, v70);
    swift_endAccess();
    if (v64 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v64 < *(_QWORD *)(v66 + 16))
    {
      v150 = *(_QWORD *)(v66 + 8 * v64 + 32);
      if (qword_1ED2A87E0 == -1)
      {
LABEL_21:
        v73 = sub_1A93F7698();
        __swift_project_value_buffer(v73, (uint64_t)qword_1ED2A87C0);
        sub_1A9064630((uint64_t)v36, v57, type metadata accessor for StoreFeedUpdater.Update);
        v74 = v138;
        v145(v138, v148, v65);
        v75 = sub_1A93F7674();
        v76 = sub_1A93F87B4();
        v77 = v76;
        if (os_log_type_enabled(v75, v76))
        {
          v78 = swift_slowAlloc();
          v144 = swift_slowAlloc();
          aBlock[0] = v144;
          *(_DWORD *)v78 = 141558787;
          v152 = 1752392040;
          sub_1A93F8AA8();
          *(_WORD *)(v78 + 12) = 2081;
          LODWORD(v143) = v77;
          sub_1A9064630(v57, (uint64_t)v63, type metadata accessor for StoreFeedUpdater.Update);
          v79 = (uint64_t *)&v63[SLODWORD(v142[4].isa)];
          v142 = v75;
          v80 = v65;
          v82 = *v79;
          v81 = v79[1];
          swift_bridgeObjectRetain();
          sub_1A9064714((uint64_t)v149, type metadata accessor for StoreFeedUpdater.Update);
          v83 = v82;
          v63 = v149;
          v152 = sub_1A906436C(v83, v81, aBlock);
          sub_1A93F8AA8();
          swift_bridgeObjectRelease();
          sub_1A9064714(v57, type metadata accessor for StoreFeedUpdater.Update);
          *(_WORD *)(v78 + 22) = 2080;
          sub_1A9066CA8(&qword_1ED2A5C78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v84 = v138;
          v85 = sub_1A93F9060();
          v152 = sub_1A906436C(v85, v86, aBlock);
          sub_1A93F8AA8();
          swift_bridgeObjectRelease();
          v65 = v80;
          v146 = *(id **)(v56 + 8);
          ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD)))v146)(v84, v80);
          *(_WORD *)(v78 + 32) = 2048;
          v87 = v150;
          v152 = v150;
          sub_1A93F8AA8();
          v88 = v142;
          _os_log_impl(&dword_1A904E000, v142, (os_log_type_t)v143, "Update %{private,mask.hash}s Retry %s: will retry after %ld seconds", (uint8_t *)v78, 0x2Au);
          v89 = v144;
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v89, -1, -1);
          MEMORY[0x1AF41411C](v78, -1, -1);

        }
        else
        {
          sub_1A9064714(v57, type metadata accessor for StoreFeedUpdater.Update);
          v146 = *(id **)(v56 + 8);
          ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD)))v146)(v74, v65);

          v87 = v150;
        }
        v102 = v123;
        sub_1A93F7DDC();
        v103 = v126;
        *v126 = v87;
        v104 = v127;
        v105 = v129;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v127 + 104))(v103, *MEMORY[0x1E0DEF4A0], v129);
        MEMORY[0x1AF411B3C](v102, v103);
        (*(void (**)(uint64_t *, uint64_t))(v104 + 8))(v103, v105);
        v149 = *(char **)(v124 + 8);
        ((void (*)(char *, uint64_t))v149)(v102, v140);
        v106 = swift_allocObject();
        swift_weakInit();
        sub_1A9064630((uint64_t)v36, (uint64_t)v63, type metadata accessor for StoreFeedUpdater.Update);
        v107 = v125;
        v145(v125, v148, v65);
        v108 = (*((unsigned __int8 *)isa + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)isa + 80);
        v109 = v56;
        v110 = (v130 + *(unsigned __int8 *)(v56 + 80) + v108) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
        v111 = (v122 + v110 + 7) & 0xFFFFFFFFFFFFFFF8;
        v112 = swift_allocObject();
        *(_QWORD *)(v112 + 16) = v106;
        sub_1A9116174((uint64_t)v63, v112 + v108, type metadata accessor for StoreFeedUpdater.Update);
        (*(void (**)(unint64_t, char *, _QWORD))(v109 + 32))(v112 + v110, v107, v65);
        *(_QWORD *)(v112 + v111) = v150;
        aBlock[4] = (uint64_t)sub_1A91C2808;
        aBlock[5] = v112;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1A908A91C;
        aBlock[3] = (uint64_t)&block_descriptor_17;
        v113 = _Block_copy(aBlock);
        swift_retain();
        v114 = v131;
        sub_1A93F7D88();
        v152 = MEMORY[0x1E0DEE9D8];
        sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
        sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
        v115 = v134;
        v116 = v136;
        sub_1A93F8B5C();
        v117 = v139;
        MEMORY[0x1AF41252C](v139, v114, v115, v113);
        _Block_release(v113);
        (*(void (**)(char *, uint64_t))(v135 + 8))(v115, v116);
        (*(void (**)(char *, uint64_t))(v132 + 8))(v114, v133);
        ((void (*)(char *, uint64_t))v149)(v117, v140);
        ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD)))v146)(v148, v65);
        sub_1A9064714((uint64_t)v141, type metadata accessor for StoreFeedUpdater.Retry);
        swift_release();
        swift_release();
        return;
      }
LABEL_35:
      swift_once();
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_35;
  }
  if (qword_1ED2A87E0 != -1)
    swift_once();
  v90 = sub_1A93F7698();
  __swift_project_value_buffer(v90, (uint64_t)qword_1ED2A87C0);
  v91 = v137;
  sub_1A9064630((uint64_t)v36, v137, type metadata accessor for StoreFeedUpdater.Update);
  v92 = sub_1A93F7674();
  v93 = sub_1A93F87B4();
  if (os_log_type_enabled(v92, v93))
  {
    v94 = swift_slowAlloc();
    v148 = (char *)swift_slowAlloc();
    aBlock[0] = (uint64_t)v148;
    *(_DWORD *)v94 = 141558531;
    v152 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v94 + 12) = 2081;
    v149 = v36;
    v147 = v94 + 14;
    sub_1A9064630(v91, (uint64_t)v63, type metadata accessor for StoreFeedUpdater.Update);
    v95 = (uint64_t *)&v63[SLODWORD(v142[4].isa)];
    v96 = (uint64_t)v63;
    v98 = *v95;
    v97 = v95[1];
    swift_bridgeObjectRetain();
    sub_1A9064714(v96, type metadata accessor for StoreFeedUpdater.Update);
    v152 = sub_1A906436C(v98, v97, aBlock);
    v36 = v149;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9064714(v91, type metadata accessor for StoreFeedUpdater.Update);
    *(_WORD *)(v94 + 22) = 2048;
    v152 = v64;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v92, v93, "Update %{private,mask.hash}s: Failed to trigger another retry, used all backoffs. nextBackoffIndex=%ld.", (uint8_t *)v94, 0x20u);
    v99 = v148;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v99, -1, -1);
    MEMORY[0x1AF41411C](v94, -1, -1);
  }
  else
  {
    sub_1A9064714(v91, type metadata accessor for StoreFeedUpdater.Update);
  }

  v100 = *(_QWORD *)&v36[v120];
  v101 = (void (*)(_QWORD, _QWORD))v146;
  v119((char *)v146, 1, 1, v150);
  swift_beginAccess();
  sub_1A927C704((uint64_t)v101, v100);
  swift_endAccess();
}

uint64_t sub_1A91BC59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A91BC614(a2, a3, a4);
    return swift_release();
  }
  return result;
}

void sub_1A91BC614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  os_unfair_lock_s *v66;
  os_unfair_lock_s *v67;
  _BYTE v68[4];
  int v69;
  os_log_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v73 = a3;
  v81 = sub_1A93F73E0();
  v6 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v8 = &v68[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v74 = &v68[-v10];
  v78 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1E0C80A78](v78);
  v12 = &v68[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v79 = &v68[-v14];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v68[-v16];
  v18 = type metadata accessor for StoreFeedUpdater.Retry(0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = &v68[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v22);
  v77 = &v68[-v23];
  v24 = *(int *)(type metadata accessor for FeedUpdateRequest() + 28);
  v80 = a1;
  v75 = v24;
  v25 = *(_QWORD *)(a1 + v24);
  swift_beginAccess();
  v76 = v3;
  v26 = *(_QWORD *)(v3 + 64);
  if (*(_QWORD *)(v26 + 16))
  {
    v27 = sub_1A906C424(v25);
    if ((v28 & 1) != 0)
    {
      sub_1A9064630(*(_QWORD *)(v26 + 56) + *(_QWORD *)(v19 + 72) * v27, (uint64_t)v21, type metadata accessor for StoreFeedUpdater.Retry);
      v29 = (uint64_t)v21;
      v30 = v77;
      sub_1A9116174(v29, (uint64_t)v77, type metadata accessor for StoreFeedUpdater.Retry);
      if ((sub_1A93F73BC() & 1) != 0)
      {
        if (qword_1ED2A87E0 != -1)
          swift_once();
        v31 = sub_1A93F7698();
        __swift_project_value_buffer(v31, (uint64_t)qword_1ED2A87C0);
        sub_1A9064630(v80, (uint64_t)v17, type metadata accessor for StoreFeedUpdater.Update);
        v32 = v74;
        v33 = v81;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v74, a2, v81);
        v34 = sub_1A93F7674();
        v35 = sub_1A93F87B4();
        v36 = v35;
        if (os_log_type_enabled(v34, v35))
        {
          v37 = swift_slowAlloc();
          v38 = swift_slowAlloc();
          v71 = v38;
          *(_DWORD *)v37 = 141558787;
          v82 = 1752392040;
          v83 = v38;
          sub_1A93F8AA8();
          *(_WORD *)(v37 + 12) = 2081;
          v70 = v34;
          v72 = v6;
          v69 = v36;
          v39 = v32;
          v40 = v79;
          sub_1A9064630((uint64_t)v17, (uint64_t)v79, type metadata accessor for StoreFeedUpdater.Update);
          v41 = (uint64_t *)&v40[*(int *)(v78 + 32)];
          v42 = *v41;
          v43 = v41[1];
          swift_bridgeObjectRetain();
          sub_1A9064714((uint64_t)v40, type metadata accessor for StoreFeedUpdater.Update);
          v82 = sub_1A906436C(v42, v43, &v83);
          sub_1A93F8AA8();
          swift_bridgeObjectRelease();
          sub_1A9064714((uint64_t)v17, type metadata accessor for StoreFeedUpdater.Update);
          *(_WORD *)(v37 + 22) = 2080;
          sub_1A9066CA8(&qword_1ED2A5C78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v44 = sub_1A93F9060();
          v82 = sub_1A906436C(v44, v45, &v83);
          sub_1A93F8AA8();
          swift_bridgeObjectRelease();
          (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v39, v33);
          *(_WORD *)(v37 + 32) = 2048;
          v82 = v73;
          sub_1A93F8AA8();
          v34 = v70;
          _os_log_impl(&dword_1A904E000, v70, (os_log_type_t)v69, "Update %{private,mask.hash}s Retry %s: Retrying after %ld seconds", (uint8_t *)v37, 0x2Au);
          v46 = v71;
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v46, -1, -1);
          MEMORY[0x1AF41411C](v37, -1, -1);
        }
        else
        {
          sub_1A9064714((uint64_t)v17, type metadata accessor for StoreFeedUpdater.Update);
          (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v32, v33);
        }

        v63 = v80;
        v83 = *(_QWORD *)(v80 + v75);
        MEMORY[0x1E0C80A78](v64);
        *(_QWORD *)&v68[-32] = v65;
        *(_QWORD *)&v68[-24] = &v83;
        *(_QWORD *)&v68[-16] = v63;
        v67 = v66 + 4;
        os_unfair_lock_lock(v66 + 4);
        sub_1A9171390((_QWORD *(*)(uint64_t *__return_ptr))sub_1A91C2618, &v82);
        os_unfair_lock_unlock(v67);
        sub_1A91BA624(v63);
        sub_1A9064714((uint64_t)v77, type metadata accessor for StoreFeedUpdater.Retry);
        return;
      }
      sub_1A9064714((uint64_t)v30, type metadata accessor for StoreFeedUpdater.Retry);
    }
  }
  if (qword_1ED2A87E0 != -1)
    swift_once();
  v47 = sub_1A93F7698();
  __swift_project_value_buffer(v47, (uint64_t)qword_1ED2A87C0);
  sub_1A9064630(v80, (uint64_t)v12, type metadata accessor for StoreFeedUpdater.Update);
  v48 = v81;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v81);
  v49 = sub_1A93F7674();
  v50 = sub_1A93F87B4();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = swift_slowAlloc();
    v72 = v6;
    v77 = v8;
    v52 = v51;
    v53 = swift_slowAlloc();
    v80 = v53;
    *(_DWORD *)v52 = 141558531;
    v82 = 1752392040;
    v83 = v53;
    sub_1A93F8AA8();
    *(_WORD *)(v52 + 12) = 2081;
    v54 = v79;
    sub_1A9064630((uint64_t)v12, (uint64_t)v79, type metadata accessor for StoreFeedUpdater.Update);
    v55 = (uint64_t *)&v54[*(int *)(v78 + 32)];
    v56 = *v55;
    v57 = v55[1];
    swift_bridgeObjectRetain();
    sub_1A9064714((uint64_t)v54, type metadata accessor for StoreFeedUpdater.Update);
    v82 = sub_1A906436C(v56, v57, &v83);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9064714((uint64_t)v12, type metadata accessor for StoreFeedUpdater.Update);
    *(_WORD *)(v52 + 22) = 2080;
    sub_1A9066CA8(&qword_1ED2A5C78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v58 = v77;
    v59 = v81;
    v60 = sub_1A93F9060();
    v82 = sub_1A906436C(v60, v61, &v83);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v58, v59);
    _os_log_impl(&dword_1A904E000, v49, v50, "Update %{private,mask.hash}s Retry %s: Retry no longer found in retries, dropping.", (uint8_t *)v52, 0x20u);
    v62 = v80;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v62, -1, -1);
    MEMORY[0x1AF41411C](v52, -1, -1);
  }
  else
  {
    sub_1A9064714((uint64_t)v12, type metadata accessor for StoreFeedUpdater.Update);
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v48);
  }

}

uint64_t sub_1A91BCDD8(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t updated;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  _QWORD *v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t v68;
  int8x16_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  _BOOL4 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  int *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  _QWORD *v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  void *v140;
  _BYTE *v141;
  uint64_t v142;
  void *v143;
  _BYTE *v144;
  _BYTE *v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  char *v166;
  NSObject *v167;
  _QWORD *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  _BYTE v176[48];
  uint64_t v177;
  char v178;
  uint64_t v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  uint64_t v183;

  v3 = (_QWORD *)a2;
  sub_1A905466C(a2, (uint64_t)&v174);
  v168 = v174;
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A66A0);
  MEMORY[0x1E0C80A78](v5);
  v163 = (uint64_t)&v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v158 = (char *)&v155 - v8;
  updated = type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1E0C80A78](updated);
  v160 = (uint64_t)&v155 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v161 = (uint64_t)&v155 - v12;
  v170 = type metadata accessor for StoreFeedUpdater.Update(0);
  v165 = *(_QWORD **)(v170 - 8);
  MEMORY[0x1E0C80A78](v170);
  v166 = (char *)&v155 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v164 = (uint64_t)&v155 - v15;
  MEMORY[0x1E0C80A78](v16);
  v162 = (uint64_t)&v155 - v17;
  MEMORY[0x1E0C80A78](v18);
  v156 = (uint64_t)&v155 - v19;
  MEMORY[0x1E0C80A78](v20);
  v157 = (uint64_t)&v155 - v21;
  MEMORY[0x1E0C80A78](v22);
  v159 = (uint64_t)&v155 - v23;
  MEMORY[0x1E0C80A78](v24);
  v169 = (char *)&v155 - v25;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v155 - v27;
  MEMORY[0x1E0C80A78](v29);
  v31 = ((char *)&v155 - v30);
  v32 = (_QWORD *)sub_1A93F7E18();
  v33 = *(v32 - 1);
  v34 = MEMORY[0x1E0C80A78](v32);
  v36 = (uint64_t *)((char *)&v155 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v171 = v2;
  v37 = *(void **)(v2 + 16);
  *v36 = v37;
  (*(void (**)(_QWORD *, _QWORD, _QWORD *, double))(v33 + 104))(v36, *MEMORY[0x1E0DEF740], v32, v34);
  v38 = v37;
  v39 = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, _QWORD *))(v33 + 8))(v36, v32);
  if ((v39 & 1) == 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  v32 = *(_QWORD **)&a1[*(int *)(updated + 28)];
  sub_1A9064630((uint64_t)a1, (uint64_t)v31, type metadata accessor for StoreFeedUpdater.Update);
  sub_1A905466C((uint64_t)v3, (uint64_t)&v175);
  v36 = (_QWORD *)v175;
  v39 = (uint64_t)a1;
  if (v178)
  {
    if (v178 == 1)
    {
      v165 = v3;
      v167 = v31;
      v3 = v168;
      v40 = v168;
      if (qword_1ED2A87E0 == -1)
      {
LABEL_5:
        v41 = sub_1A93F7698();
        __swift_project_value_buffer(v41, (uint64_t)qword_1ED2A87C0);
        v42 = (uint64_t)v166;
        sub_1A9064630(v39, (uint64_t)v166, type metadata accessor for StoreFeedUpdater.Update);
        v43 = sub_1A93F7674();
        v44 = sub_1A93F87B4();
        v45 = v44;
        v46 = os_log_type_enabled(v43, v44);
        v47 = (uint64_t)v169;
        if (v46)
        {
          v48 = swift_slowAlloc();
          LODWORD(v163) = v45;
          v49 = v48;
          v164 = swift_slowAlloc();
          v179 = v164;
          *(_DWORD *)v49 = 141558275;
          v173 = 1752392040;
          sub_1A93F8AA8();
          *(_WORD *)(v49 + 12) = 2081;
          v162 = v49 + 14;
          sub_1A9064630(v42, v47, type metadata accessor for StoreFeedUpdater.Update);
          v50 = (uint64_t *)(v47 + *(int *)(v170 + 32));
          v51 = v32;
          v53 = *v50;
          v52 = v50[1];
          swift_bridgeObjectRetain();
          sub_1A9064714(v47, type metadata accessor for StoreFeedUpdater.Update);
          v54 = v53;
          v32 = v51;
          v173 = sub_1A906436C(v54, v52, &v179);
          sub_1A93F8AA8();
          swift_bridgeObjectRelease();
          v3 = v168;
          sub_1A9064714(v42, type metadata accessor for StoreFeedUpdater.Update);
          _os_log_impl(&dword_1A904E000, v43, (os_log_type_t)v163, "Update %{private,mask.hash}s failed", (uint8_t *)v49, 0x16u);
          v55 = v164;
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v55, -1, -1);
          MEMORY[0x1AF41411C](v49, -1, -1);
        }
        else
        {
          sub_1A9064714(v42, type metadata accessor for StoreFeedUpdater.Update);
        }

        v83 = v171;
        v84 = (uint64_t)v165;
        v85 = v3;
        v31 = v167;
        sub_1A91BE1E4(v36, 1, v83, v32, v167);
        sub_1A91C2560(v84);
        sub_1A91C2560(v84);
        return sub_1A9064714((uint64_t)v31, type metadata accessor for StoreFeedUpdater.Update);
      }
LABEL_45:
      swift_once();
      goto LABEL_5;
    }
    v69 = vorrq_s8(*(int8x16_t *)&v176[8], *(int8x16_t *)&v176[24]);
    if (v175 | *(_QWORD *)&vorr_s8(*(int8x8_t *)v69.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v69, v69, 8uLL)) | *(_QWORD *)&v176[40] | v177 | *(_QWORD *)v176)
    {
      v156 = updated;
      if (qword_1ED2A87E0 != -1)
        swift_once();
      v166 = (char *)v32;
      v70 = sub_1A93F7698();
      v71 = __swift_project_value_buffer(v70, (uint64_t)qword_1ED2A87C0);
      v72 = v162;
      sub_1A9064630(v39, v162, type metadata accessor for StoreFeedUpdater.Update);
      v73 = sub_1A93F7674();
      v74 = sub_1A93F87B4();
      v75 = os_log_type_enabled(v73, v74);
      v167 = v31;
      if (v75)
      {
        v76 = swift_slowAlloc();
        v77 = swift_slowAlloc();
        v179 = v77;
        *(_DWORD *)v76 = 141558275;
        v173 = 1752392040;
        v168 = (_QWORD *)v39;
        sub_1A93F8AA8();
        *(_WORD *)(v76 + 12) = 2081;
        v78 = (uint64_t)v169;
        sub_1A9064630(v72, (uint64_t)v169, type metadata accessor for StoreFeedUpdater.Update);
        v79 = (uint64_t *)(v78 + *(int *)(v170 + 32));
        v159 = v71;
        v80 = v72;
        v82 = *v79;
        v81 = v79[1];
        swift_bridgeObjectRetain();
        sub_1A9064714(v78, type metadata accessor for StoreFeedUpdater.Update);
        v173 = sub_1A906436C(v82, v81, &v179);
        v39 = (uint64_t)v168;
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        sub_1A9064714(v80, type metadata accessor for StoreFeedUpdater.Update);
        _os_log_impl(&dword_1A904E000, v73, v74, "Update %{private,mask.hash}s failed with retry.", (uint8_t *)v76, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v77, -1, -1);
        MEMORY[0x1AF41411C](v76, -1, -1);
      }
      else
      {
        sub_1A9064714(v72, type metadata accessor for StoreFeedUpdater.Update);
      }

      v99 = v171;
      v100 = v164;
      swift_beginAccess();
      v101 = *(_QWORD *)(v99 + 56);
      if (*(_QWORD *)(v101 + 16) && (v102 = sub_1A906C424(v166), (v103 & 1) != 0))
      {
        v104 = v165;
        v105 = v163;
        sub_1A9064630(*(_QWORD *)(v101 + 56) + v165[9] * v102, v163, type metadata accessor for StoreFeedUpdater.Update);
        v106 = v170;
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v104[7])(v105, 0, 1, v170);
        sub_1A905FD54(v105, qword_1ED2A66A0);
        sub_1A9064630(v39, v100, type metadata accessor for StoreFeedUpdater.Update);
        v107 = sub_1A93F7674();
        v108 = sub_1A93F87B4();
        if (os_log_type_enabled(v107, v108))
        {
          v109 = swift_slowAlloc();
          v110 = swift_slowAlloc();
          v173 = v110;
          *(_DWORD *)v109 = 141558275;
          v172 = 1752392040;
          sub_1A93F8AA8();
          *(_WORD *)(v109 + 12) = 2081;
          v111 = v100;
          v112 = (uint64_t)v169;
          sub_1A9064630(v111, (uint64_t)v169, type metadata accessor for StoreFeedUpdater.Update);
          v113 = (uint64_t *)(v112 + *(int *)(v106 + 32));
          v114 = *v113;
          v115 = v113[1];
          swift_bridgeObjectRetain();
          sub_1A9064714(v112, type metadata accessor for StoreFeedUpdater.Update);
          v172 = sub_1A906436C(v114, v115, &v173);
          sub_1A93F8AA8();
          swift_bridgeObjectRelease();
          sub_1A9064714(v164, type metadata accessor for StoreFeedUpdater.Update);
          _os_log_impl(&dword_1A904E000, v107, v108, "Update %{private,mask.hash}s: There's a pending update, dropping retry.", (uint8_t *)v109, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v110, -1, -1);
          MEMORY[0x1AF41411C](v109, -1, -1);
        }
        else
        {
          sub_1A9064714(v100, type metadata accessor for StoreFeedUpdater.Update);
        }

      }
      else
      {
        v116 = v163;
        v117 = (int *)v170;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v165[7])(v163, 1, 1, v170);
        sub_1A905FD54(v116, qword_1ED2A66A0);
        v118 = v161;
        FeedUpdateRequest.copyWithoutCompletion()(v161);
        v119 = v160;
        sub_1A9064630(v118, v160, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
        v120 = v39;
        v121 = *(_BYTE *)(v39 + v117[5]);
        LOBYTE(v116) = *(_BYTE *)(v120 + v117[6]);
        v122 = *(_BYTE *)(v120 + v117[7]);
        v123 = v169;
        sub_1A9064630(v119, (uint64_t)v169, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
        v123[v117[5]] = v121;
        v123[v117[6]] = v116;
        v123[v117[7]] = v122;
        v173 = *(_QWORD *)(v119 + *(int *)(v156 + 28));
        v124 = sub_1A93F9060();
        v126 = v125;
        sub_1A9064714(v119, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
        v127 = (uint64_t *)&v123[v117[8]];
        *v127 = v124;
        v127[1] = v126;
        sub_1A91BB56C(v123);
        sub_1A9064714((uint64_t)v123, type metadata accessor for StoreFeedUpdater.Update);
        sub_1A9064714(v118, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
      }
      v31 = v167;
      sub_1A9069320();
      v139 = (void *)swift_allocError();
      v140 = v139;
      *v141 = 12;
      v142 = v99;
      v143 = v166;
LABEL_40:
      sub_1A91BE1E4(v139, 1, v142, v143, v31);

      return sub_1A9064714((uint64_t)v31, type metadata accessor for StoreFeedUpdater.Update);
    }
    v87 = (int *)v170;
    if ((a1[*(int *)(v170 + 28)] & 1) != 0)
    {
      if (qword_1ED2A87E0 != -1)
        swift_once();
      v88 = sub_1A93F7698();
      __swift_project_value_buffer(v88, (uint64_t)qword_1ED2A87C0);
      v89 = v156;
      sub_1A9064630((uint64_t)a1, v156, type metadata accessor for StoreFeedUpdater.Update);
      v90 = sub_1A93F7674();
      v91 = sub_1A93F879C();
      if (os_log_type_enabled(v90, v91))
      {
        v92 = swift_slowAlloc();
        v93 = swift_slowAlloc();
        v167 = v31;
        v94 = v93;
        v179 = v93;
        *(_DWORD *)v92 = 141558275;
        v173 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v92 + 12) = 2081;
        v168 = (_QWORD *)(v92 + 14);
        v95 = (uint64_t)v169;
        sub_1A9064630(v89, (uint64_t)v169, type metadata accessor for StoreFeedUpdater.Update);
        v96 = (uint64_t *)(v95 + v87[8]);
        v97 = *v96;
        v98 = v96[1];
        swift_bridgeObjectRetain();
        sub_1A9064714(v95, type metadata accessor for StoreFeedUpdater.Update);
        v173 = sub_1A906436C(v97, v98, &v179);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        sub_1A9064714(v89, type metadata accessor for StoreFeedUpdater.Update);
        _os_log_impl(&dword_1A904E000, v90, v91, "Update %{private,mask.hash}s failed. Bootstrap needed another bootstrap. Failing request to prevent a loop.", (uint8_t *)v92, 0x16u);
        swift_arrayDestroy();
        v31 = v167;
        MEMORY[0x1AF41411C](v94, -1, -1);
        MEMORY[0x1AF41411C](v92, -1, -1);
      }
      else
      {
        sub_1A9064714(v89, type metadata accessor for StoreFeedUpdater.Update);
      }

      sub_1A9069320();
      v139 = (void *)swift_allocError();
      v140 = v139;
      *v144 = 4;
      v142 = v171;
      v143 = v32;
      goto LABEL_40;
    }
    v156 = updated;
    sub_1A9064714((uint64_t)v31, type metadata accessor for StoreFeedUpdater.Update);
    if (qword_1ED2A87E0 != -1)
      swift_once();
    v128 = sub_1A93F7698();
    __swift_project_value_buffer(v128, (uint64_t)qword_1ED2A87C0);
    v168 = a1;
    v129 = v159;
    sub_1A9064630((uint64_t)a1, v159, type metadata accessor for StoreFeedUpdater.Update);
    v130 = sub_1A93F7674();
    v131 = sub_1A93F87B4();
    if (os_log_type_enabled(v130, v131))
    {
      v132 = swift_slowAlloc();
      v133 = swift_slowAlloc();
      v179 = v133;
      *(_DWORD *)v132 = 141558275;
      v173 = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v132 + 12) = 2081;
      v167 = (v132 + 14);
      v31 = v169;
      sub_1A9064630(v129, (uint64_t)v169, type metadata accessor for StoreFeedUpdater.Update);
      v134 = (uint64_t *)((char *)v31 + v87[8]);
      v135 = v32;
      v137 = *v134;
      v136 = v134[1];
      swift_bridgeObjectRetain();
      sub_1A9064714((uint64_t)v31, type metadata accessor for StoreFeedUpdater.Update);
      v138 = v137;
      v32 = v135;
      v173 = sub_1A906436C(v138, v136, &v179);
      sub_1A93F8AA8();
      v87 = (int *)v170;
      swift_bridgeObjectRelease();
      sub_1A9064714(v159, type metadata accessor for StoreFeedUpdater.Update);
      _os_log_impl(&dword_1A904E000, v130, v131, "Bootstrap requested for %{private,mask.hash}s. Starting over.", (uint8_t *)v132, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v133, -1, -1);
      MEMORY[0x1AF41411C](v132, -1, -1);

    }
    else
    {
      sub_1A9064714(v129, type metadata accessor for StoreFeedUpdater.Update);

      v31 = v169;
    }
    v146 = v168;
    v147 = v161;
    sub_1A9064630((uint64_t)v168, v161, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
    v148 = v146[v87[5]];
    LOBYTE(v146) = v146[v87[6]];
    v149 = v157;
    sub_1A9064630(v147, v157, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
    *(_BYTE *)(v149 + v87[5]) = v148;
    *(_BYTE *)(v149 + v87[6]) = (_BYTE)v146;
    *(_BYTE *)(v149 + v87[7]) = 1;
    v179 = *(_QWORD *)(v147 + *(int *)(v156 + 28));
    v150 = sub_1A93F9060();
    v152 = v151;
    sub_1A9064714(v147, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
    v153 = (uint64_t *)(v149 + v87[8]);
    *v153 = v150;
    v153[1] = v152;
    sub_1A9116174(v149, (uint64_t)v31, type metadata accessor for StoreFeedUpdater.Update);
    v154 = (uint64_t)v158;
    ((void (*)(char *, uint64_t, uint64_t, int *))v165[7])(v158, 1, 1, v87);
    swift_beginAccess();
    sub_1A927C52C(v154, (uint64_t)v32);
    swift_endAccess();
    sub_1A91BA624((uint64_t)v31);
  }
  else
  {
    v180 = *(_OWORD *)v176;
    v181 = *(_OWORD *)&v176[16];
    v182 = *(_OWORD *)&v176[32];
    v179 = v175;
    v183 = v177;
    if (qword_1ED2A87E0 != -1)
      swift_once();
    v56 = sub_1A93F7698();
    __swift_project_value_buffer(v56, (uint64_t)qword_1ED2A87C0);
    v168 = a1;
    sub_1A9064630((uint64_t)a1, (uint64_t)v28, type metadata accessor for StoreFeedUpdater.Update);
    v57 = sub_1A93F7674();
    v58 = sub_1A93F87B4();
    v59 = os_log_type_enabled(v57, v58);
    v60 = v170;
    if (v59)
    {
      v61 = swift_slowAlloc();
      v62 = swift_slowAlloc();
      v167 = v31;
      v63 = v62;
      v173 = v62;
      *(_DWORD *)v61 = 141558275;
      v172 = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v61 + 12) = 2081;
      v166 = (char *)(v61 + 14);
      v64 = (uint64_t)v169;
      sub_1A9064630((uint64_t)v28, (uint64_t)v169, type metadata accessor for StoreFeedUpdater.Update);
      v65 = (uint64_t *)(v64 + *(int *)(v60 + 32));
      v66 = v32;
      v67 = *v65;
      v68 = v65[1];
      swift_bridgeObjectRetain();
      sub_1A9064714(v64, type metadata accessor for StoreFeedUpdater.Update);
      v172 = sub_1A906436C(v67, v68, &v173);
      sub_1A93F8AA8();
      v32 = v66;
      swift_bridgeObjectRelease();
      sub_1A9064714((uint64_t)v28, type metadata accessor for StoreFeedUpdater.Update);
      _os_log_impl(&dword_1A904E000, v57, v58, "Update %{private,mask.hash}s completed", (uint8_t *)v61, 0x16u);
      swift_arrayDestroy();
      v31 = v167;
      MEMORY[0x1AF41411C](v63, -1, -1);
      MEMORY[0x1AF41411C](v61, -1, -1);
    }
    else
    {
      sub_1A9064714((uint64_t)v28, type metadata accessor for StoreFeedUpdater.Update);
    }

    v86 = v171;
    sub_1A91C1DA8((uint64_t)&v179, (uint64_t)v168);
    sub_1A91BE1E4(0, 0, v86, v32, v31);
  }
  return sub_1A9064714((uint64_t)v31, type metadata accessor for StoreFeedUpdater.Update);
}

uint64_t sub_1A91BE1E4(void *a1, int a2, uint64_t a3, void *a4, NSObject *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  void *v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[3];

  v52 = a1;
  v53 = a5;
  LODWORD(v51) = a2;
  v7 = type metadata accessor for StoreFeedUpdater.Update(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v50 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v46 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v46 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A66A0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v46 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v46 - v23;
  v54 = a3 + 56;
  swift_beginAccess();
  v25 = *(_QWORD *)(a3 + 56);
  if (*(_QWORD *)(v25 + 16) && (v26 = sub_1A906C424(a4), (v27 & 1) != 0))
  {
    sub_1A9064630(*(_QWORD *)(v25 + 56) + *(_QWORD *)(v8 + 72) * v26, (uint64_t)v24, type metadata accessor for StoreFeedUpdater.Update);
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v28(v24, 0, 1, v7);
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v28(v24, 1, 1, v7);
  }
  sub_1A91C25D0((uint64_t)v24, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v21, 1, v7) == 1)
  {
    v29 = v51 & 1;
    sub_1A905FD54((uint64_t)v21, qword_1ED2A66A0);
    sub_1A934EF9C((uint64_t)a4, v52, v29);
  }
  else
  {
    v51 = v28;
    v52 = a4;
    sub_1A9116174((uint64_t)v21, (uint64_t)v15, type metadata accessor for StoreFeedUpdater.Update);
    if (qword_1ED2A87E0 != -1)
      swift_once();
    v30 = sub_1A93F7698();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED2A87C0);
    sub_1A9064630((uint64_t)v53, (uint64_t)v12, type metadata accessor for StoreFeedUpdater.Update);
    v31 = sub_1A93F7674();
    v32 = sub_1A93F87B4();
    v33 = v32;
    v53 = v31;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      v48 = v35;
      *(_DWORD *)v34 = 141558275;
      v55 = 1752392040;
      v56[0] = v35;
      v49 = a3;
      sub_1A93F8AA8();
      *(_WORD *)(v34 + 12) = 2081;
      v46 = v34 + 14;
      v47 = v33;
      v36 = v50;
      sub_1A9064630((uint64_t)v12, v50, type metadata accessor for StoreFeedUpdater.Update);
      v37 = (uint64_t *)(v36 + *(int *)(v7 + 32));
      v38 = v18;
      v39 = v15;
      v41 = *v37;
      v40 = v37[1];
      swift_bridgeObjectRetain();
      sub_1A9064714(v36, type metadata accessor for StoreFeedUpdater.Update);
      v42 = v41;
      v15 = v39;
      v18 = v38;
      v55 = sub_1A906436C(v42, v40, v56);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A9064714((uint64_t)v12, type metadata accessor for StoreFeedUpdater.Update);
      v43 = v53;
      _os_log_impl(&dword_1A904E000, v53, (os_log_type_t)v47, "Kicking off pending bootstrap update for %{private,mask.hash}s.", (uint8_t *)v34, 0x16u);
      v44 = v48;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v44, -1, -1);
      MEMORY[0x1AF41411C](v34, -1, -1);

    }
    else
    {
      sub_1A9064714((uint64_t)v12, type metadata accessor for StoreFeedUpdater.Update);

    }
    v51(v18, 1, 1, v7);
    swift_beginAccess();
    sub_1A927C52C((uint64_t)v18, (uint64_t)v52);
    swift_endAccess();
    sub_1A91BA624((uint64_t)v15);
    sub_1A9064714((uint64_t)v15, type metadata accessor for StoreFeedUpdater.Update);
  }
  return sub_1A905FD54((uint64_t)v24, qword_1ED2A66A0);
}

uint64_t StoreFeedUpdater.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StoreFeedUpdater.__deallocating_deinit()
{
  StoreFeedUpdater.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A91BE6D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  id v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  int *updated;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char v47;
  int v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  _QWORD v66[2];
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80[3];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9660);
  MEMORY[0x1E0C80A78](v4);
  v70 = (uint64_t)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for StoreFeedUpdater.Update(0);
  v6 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v69 = (uint64_t)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v71 = (char *)v66 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v66 - v11;
  MEMORY[0x1E0C80A78](v13);
  v76 = (uint64_t)v66 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v66 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v66 - v19;
  MEMORY[0x1E0C80A78](v21);
  v77 = (uint64_t)v66 - v22;
  v23 = sub_1A93F7E18();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x1E0C80A78](v23);
  v27 = (_QWORD *)((char *)v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = *(void **)(v2 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_queue);
  *v27 = v28;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v24 + 104))(v27, *MEMORY[0x1E0DEF740], v23, v25);
  v29 = v28;
  LOBYTE(v28) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v24 + 8))(v27, v23);
  if ((v28 & 1) != 0)
  {
    v30 = (uint64_t *)(v2 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_pendingQueue);
    swift_beginAccess();
    v31 = *v30;
    v74 = *(_QWORD *)(*v30 + 16);
    if (v74)
    {
      v67 = v30;
      v68 = v2;
      v32 = v31 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      updated = (int *)type metadata accessor for FeedUpdateRequest();
      v34 = updated[13];
      v72 = *(_QWORD *)(v6 + 72);
      v75 = *(unsigned __int8 *)(a1 + v34);
      v66[1] = v31;
      swift_bridgeObjectRetain();
      v6 = 0;
      v73 = v20;
      while (1)
      {
        v35 = v77;
        sub_1A9064630(v32, v77, type metadata accessor for StoreFeedUpdater.Update);
        if (v75)
        {
          v36 = *(_BYTE *)(v35 + updated[13]);
          sub_1A9064714(v35, type metadata accessor for StoreFeedUpdater.Update);
          if ((v36 & 1) == 0)
            goto LABEL_23;
        }
        else
        {
          sub_1A9064714(v35, type metadata accessor for StoreFeedUpdater.Update);
        }
        v37 = *(_QWORD *)(a1 + updated[12]);
        sub_1A9064630(v32, (uint64_t)v20, type metadata accessor for StoreFeedUpdater.Update);
        if (v37 == 23)
        {
          v38 = *(_QWORD *)&v20[updated[12]];
          sub_1A9064714((uint64_t)v20, type metadata accessor for StoreFeedUpdater.Update);
          if (v38 != 23)
            goto LABEL_23;
          sub_1A9064630(v32, (uint64_t)v17, type metadata accessor for StoreFeedUpdater.Update);
        }
        else
        {
          sub_1A9064714((uint64_t)v20, type metadata accessor for StoreFeedUpdater.Update);
          sub_1A9064630(v32, (uint64_t)v17, type metadata accessor for StoreFeedUpdater.Update);
          if (v37 == 8)
          {
            v39 = *(_QWORD *)&v17[updated[12]];
            sub_1A9064714((uint64_t)v17, type metadata accessor for StoreFeedUpdater.Update);
            if (v39 != 8)
              goto LABEL_23;
            goto LABEL_17;
          }
        }
        sub_1A9064714((uint64_t)v17, type metadata accessor for StoreFeedUpdater.Update);
LABEL_17:
        v40 = v6;
        v41 = v17;
        v42 = a1;
        v43 = v78;
        v44 = v42;
        v45 = *(unsigned __int8 *)(v42 + *(int *)(v78 + 24));
        v46 = v76;
        sub_1A9064630(v32, v76, type metadata accessor for StoreFeedUpdater.Update);
        if (v45 == 1)
        {
          v47 = *(_BYTE *)(v46 + *(int *)(v43 + 24));
          sub_1A9064714(v46, type metadata accessor for StoreFeedUpdater.Update);
          if ((v47 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            v30 = v67;
            v2 = v68;
            v27 = v71;
            v17 = (char *)v78;
            a1 = v44;
            v6 = v40;
            goto LABEL_27;
          }
        }
        else
        {
          sub_1A9064714(v46, type metadata accessor for StoreFeedUpdater.Update);
        }
        a1 = v44;
        v48 = *(unsigned __int8 *)(v44 + updated[9]);
        sub_1A9064630(v32, (uint64_t)v12, type metadata accessor for StoreFeedUpdater.Update);
        if (v48 == 1)
        {
          v49 = v12[updated[9]];
          sub_1A9064714((uint64_t)v12, type metadata accessor for StoreFeedUpdater.Update);
          v17 = v41;
          v6 = v40;
          if ((v49 & 1) == 0)
          {
LABEL_23:
            swift_bridgeObjectRelease();
            v30 = v67;
            v2 = v68;
            goto LABEL_26;
          }
        }
        else
        {
          sub_1A9064714((uint64_t)v12, type metadata accessor for StoreFeedUpdater.Update);
          v17 = v41;
          v6 = v40;
        }
        ++v6;
        v20 = v73;
        v32 += v72;
        if (v74 == v6)
        {
          swift_bridgeObjectRelease();
          v30 = v67;
          v2 = v68;
          v6 = *(_QWORD *)(*v67 + 16);
          goto LABEL_26;
        }
      }
    }
    v6 = 0;
LABEL_26:
    v27 = v71;
    v17 = (char *)v78;
LABEL_27:
    swift_beginAccess();
    if (*(_QWORD *)(*v30 + 16) >= v6)
    {
      v50 = v70;
      sub_1A9064630(a1, v70, type metadata accessor for StoreFeedUpdater.Update);
      sub_1A917319C(v6, v6, v50);
      swift_endAccess();
      if (qword_1ED2A87E0 == -1)
        goto LABEL_29;
      goto LABEL_35;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_35:
  swift_once();
LABEL_29:
  v51 = sub_1A93F7698();
  __swift_project_value_buffer(v51, (uint64_t)qword_1ED2A87C0);
  sub_1A9064630(a1, (uint64_t)v27, type metadata accessor for StoreFeedUpdater.Update);
  swift_retain();
  v52 = sub_1A93F7674();
  v53 = sub_1A93F87B4();
  v54 = v53;
  if (os_log_type_enabled(v52, v53))
  {
    v55 = swift_slowAlloc();
    LODWORD(v77) = v54;
    v56 = v55;
    v78 = swift_slowAlloc();
    v80[0] = v78;
    *(_DWORD *)v56 = 136315907;
    v57 = *(_QWORD *)(v2 + 16);
    v58 = *(_QWORD *)(v2 + 24);
    swift_bridgeObjectRetain();
    v79 = sub_1A906436C(v57, v58, v80);
    sub_1A93F8AA8();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 12) = 2160;
    v79 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v56 + 22) = 2081;
    v59 = v69;
    sub_1A9064630((uint64_t)v27, v69, type metadata accessor for StoreFeedUpdater.Update);
    v60 = (uint64_t *)(v59 + *((int *)v17 + 8));
    v61 = v6;
    v62 = *v60;
    v63 = v60[1];
    swift_bridgeObjectRetain();
    sub_1A9064714(v59, type metadata accessor for StoreFeedUpdater.Update);
    v79 = sub_1A906436C(v62, v63, v80);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9064714((uint64_t)v27, type metadata accessor for StoreFeedUpdater.Update);
    *(_WORD *)(v56 + 32) = 2048;
    v79 = v61;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v52, (os_log_type_t)v77, "%s: inserting %{private,mask.hash}s at index %ld", (uint8_t *)v56, 0x2Au);
    v64 = v78;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v64, -1, -1);
    MEMORY[0x1AF41411C](v56, -1, -1);
  }
  else
  {
    swift_release();
    sub_1A9064714((uint64_t)v27, type metadata accessor for StoreFeedUpdater.Update);
  }

  return sub_1A91BEE2C();
}

uint64_t sub_1A91BEE2C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  NSObject *v40;
  uint64_t v41;
  _BYTE *v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t updated;
  uint64_t v52;
  uint64_t *v53;
  char v54;
  os_unfair_lock_s *v55;
  os_unfair_lock_s *v56;
  os_unfair_lock_s *v57;
  uint64_t v58;
  _BYTE v59[12];
  int v60;
  uint64_t v61;
  NSObject *v62;
  id v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68[5];

  v1 = v0;
  v2 = type metadata accessor for FeedManagerBagConfiguration();
  MEMORY[0x1E0C80A78](v2);
  v66 = &v59[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v64 = type metadata accessor for StoreFeedUpdater.Update(0);
  v4 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v65 = &v59[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v59[-v7];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v59[-v10];
  MEMORY[0x1E0C80A78](v12);
  v14 = &v59[-v13];
  v15 = (_QWORD *)sub_1A93F7E18();
  v16 = *(v15 - 1);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = &v59[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = *(void **)((char *)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_queue);
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, _QWORD *, double))(v16 + 104))(v19, *MEMORY[0x1E0DEF740], v15, v17);
  v21 = v20;
  v22 = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, _QWORD *))(v16 + 8))(v19, v15);
  if ((v22 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22 = (uint64_t)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_runningQueue;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v22 + 16) >= v1[4])
    return result;
  v15 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_pendingQueue);
  result = swift_beginAccess();
  if (!*(_QWORD *)(*v15 + 16))
    return result;
  swift_beginAccess();
  v24 = *v15;
  if (!*(_QWORD *)(*v15 + 16))
    goto LABEL_16;
  v63 = v21;
  v21 = (id)((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  sub_1A9064630((uint64_t)v21 + v24, (uint64_t)v14, type metadata accessor for StoreFeedUpdater.Update);
  sub_1A9174238(0, 1);
  swift_endAccess();
  sub_1A9064630((uint64_t)v14, (uint64_t)v11, type metadata accessor for StoreFeedUpdater.Update);
  swift_beginAccess();
  v15 = *(_QWORD **)v22;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v22 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_17:
    v15 = (_QWORD *)sub_1A9118B04(0, v15[2] + 1, 1, (unint64_t)v15);
    *(_QWORD *)v22 = v15;
  }
  v27 = v15[2];
  v26 = v15[3];
  if (v27 >= v26 >> 1)
  {
    v15 = (_QWORD *)sub_1A9118B04(v26 > 1, v27 + 1, 1, (unint64_t)v15);
    *(_QWORD *)v22 = v15;
  }
  v15[2] = v27 + 1;
  sub_1A9116174((uint64_t)v11, (uint64_t)v21 + (_QWORD)v15 + *(_QWORD *)(v4 + 72) * v27, type metadata accessor for StoreFeedUpdater.Update);
  swift_endAccess();
  if (qword_1ED2A87E0 != -1)
    swift_once();
  v28 = sub_1A93F7698();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED2A87C0);
  sub_1A9064630((uint64_t)v14, (uint64_t)v8, type metadata accessor for StoreFeedUpdater.Update);
  swift_retain();
  v29 = sub_1A93F7674();
  v30 = sub_1A93F87B4();
  v31 = v30;
  v62 = v29;
  v32 = os_log_type_enabled(v29, v30);
  v33 = (uint64_t)v65;
  if (v32)
  {
    v34 = swift_slowAlloc();
    v61 = swift_slowAlloc();
    v68[0] = v61;
    *(_DWORD *)v34 = 136315651;
    v60 = v31;
    v35 = v1[2];
    v36 = v1[3];
    swift_bridgeObjectRetain();
    v67 = sub_1A906436C(v35, v36, v68);
    sub_1A93F8AA8();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2160;
    v67 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v34 + 22) = 2081;
    sub_1A9064630((uint64_t)v8, v33, type metadata accessor for StoreFeedUpdater.Update);
    v37 = (uint64_t *)(v33 + *(int *)(v64 + 32));
    v38 = *v37;
    v39 = v37[1];
    swift_bridgeObjectRetain();
    sub_1A9064714(v33, type metadata accessor for StoreFeedUpdater.Update);
    v67 = sub_1A906436C(v38, v39, v68);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9064714((uint64_t)v8, type metadata accessor for StoreFeedUpdater.Update);
    v40 = v62;
    _os_log_impl(&dword_1A904E000, v62, (os_log_type_t)v60, "%s: starting %{private,mask.hash}s", (uint8_t *)v34, 0x20u);
    v41 = v61;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v41, -1, -1);
    MEMORY[0x1AF41411C](v34, -1, -1);

  }
  else
  {
    swift_release();
    sub_1A9064714((uint64_t)v8, type metadata accessor for StoreFeedUpdater.Update);

  }
  sub_1A9064630((uint64_t)v14, v33, type metadata accessor for StoreFeedUpdater.Update);
  v42 = v66;
  sub_1A9064630((uint64_t)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_bagConfiguration, (uint64_t)v66, (uint64_t (*)(_QWORD))type metadata accessor for FeedManagerBagConfiguration);
  v43 = *(void **)((char *)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_ctx);
  sub_1A905DC3C((uint64_t)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_ingesterProvider, (uint64_t)v68);
  v44 = v33;
  v45 = *(void **)((char *)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_mediaRequestController);
  v46 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for StoreFeedUpdaterJob();
  v47 = swift_allocObject();
  v48 = v63;
  v49 = v43;
  v50 = sub_1A91C21F8(v44, (uint64_t)v42, v49, (uint64_t)v68, (uint64_t)v45, v48, (uint64_t)sub_1A91C21D8, v46, v47);

  swift_release();
  updated = type metadata accessor for FeedUpdateRequest();
  v52 = *(_QWORD *)&v14[*(int *)(updated + 28)];
  v53 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_jobs);
  swift_beginAccess();
  swift_retain();
  v54 = swift_isUniquelyReferenced_nonNull_native();
  v67 = *v53;
  *v53 = 0x8000000000000000;
  sub_1A930E248(v50, v52, v54);
  *v53 = v67;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v55 = *(os_unfair_lock_s **)(v50
                             + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update
                             + *(int *)(updated + 72));
  v56 = v55 + 4;
  v57 = v55 + 6;
  os_unfair_lock_lock(v55 + 6);
  sub_1A923BD30(v56);
  os_unfair_lock_unlock(v57);
  v58 = sub_1A919AA80();
  sub_1A91BEE2C(v58);
  swift_release();
  return sub_1A9064714((uint64_t)v14, type metadata accessor for StoreFeedUpdater.Update);
}

uint64_t sub_1A91BF56C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    a4(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A91BF5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = sub_1A93F7E18();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v3 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_queue);
  *v10 = (uint64_t)v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, double))(v7 + 104))(v10, *MEMORY[0x1E0DEF740], v6, v8);
  v12 = v11;
  v13 = sub_1A93F7E3C();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v10, v6);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FeedUpdateRequest() + 28));
  v10 = (uint64_t *)(v3 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_jobs);
  swift_beginAccess();
  v15 = sub_1A906C424(v14);
  if ((v16 & 1) == 0)
    goto LABEL_5;
  v13 = v15;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *v10;
  v27 = *v10;
  *v10 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_11;
  while (1)
  {
    sub_1A91AA540(v13, v18);
    *v10 = v18;
    swift_release();
    swift_bridgeObjectRelease();
LABEL_5:
    v19 = swift_endAccess();
    v13 = (uint64_t)&v26;
    MEMORY[0x1E0C80A78](v19);
    *(&v26 - 2) = a1;
    v20 = v3 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_runningQueue;
    swift_beginAccess();
    v10 = 0;
    v21 = sub_1A91BFEF8((uint64_t (*)(unint64_t))sub_1A91C1D5C);
    v22 = *(_QWORD *)(*(_QWORD *)v20 + 16);
    if (v22 >= v21)
      break;
LABEL_10:
    __break(1u);
LABEL_11:
    sub_1A93089E0();
    v18 = v27;
  }
  sub_1A9174238(v21, v22);
  v23 = swift_endAccess();
  v24 = *(void (**)(uint64_t, uint64_t))(v3
                                                + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_completionCallback);
  if (v24)
  {
    swift_retain();
    v24(a1, a2);
    v23 = sub_1A9085818((uint64_t)v24);
  }
  return sub_1A91BEE2C(v23);
}

uint64_t sub_1A91BF810(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  BOOL v23;
  uint64_t v24;

  v3 = type metadata accessor for StoreFeedUpdater.Update(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F7E18();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_queue);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x1E0DEF740], v7, v9);
  v13 = v12;
  LOBYTE(v12) = sub_1A93F7E3C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  if ((v12 & 1) != 0)
  {
    v15 = (uint64_t *)(v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_runningQueue);
    swift_beginAccess();
    v16 = *v15;
    v17 = *(_QWORD *)(v16 + 16);
    if (!v17)
      return 0;
    v18 = v16 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v19 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    v20 = v17 - 1;
    do
    {
      sub_1A9064630(v18, (uint64_t)v6, type metadata accessor for StoreFeedUpdater.Update);
      v21 = *(_QWORD *)&v6[*(int *)(type metadata accessor for FeedUpdateRequest() + 28)];
      sub_1A9064714((uint64_t)v6, type metadata accessor for StoreFeedUpdater.Update);
      v23 = v21 == a1;
      v22 = v21 == a1;
      v23 = v23 || v20-- == 0;
      v18 += v19;
    }
    while (!v23);
    swift_bridgeObjectRelease();
    return v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A91BF9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  char v15;
  uint64_t result;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = type metadata accessor for StoreFeedUpdater.Update(0);
  v28 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7E18();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v2 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_queue);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v9 + 104))(v12, *MEMORY[0x1E0DEF740], v8, v10);
  v14 = v13;
  v15 = sub_1A93F7E3C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  if ((v15 & 1) != 0)
  {
    v17 = (uint64_t *)(v2 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_pendingQueue);
    swift_beginAccess();
    v18 = *v17;
    v19 = *(_QWORD *)(*v17 + 16);
    if (v19)
    {
      v26 = v5;
      v27 = a2;
      v20 = v18 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
      v21 = *(_QWORD *)(v28 + 72);
      swift_bridgeObjectRetain();
      v22 = 0;
      while (1)
      {
        sub_1A9064630(v20, (uint64_t)v7, type metadata accessor for StoreFeedUpdater.Update);
        v23 = *(_QWORD *)&v7[*(int *)(type metadata accessor for FeedUpdateRequest() + 28)];
        sub_1A9064714((uint64_t)v7, type metadata accessor for StoreFeedUpdater.Update);
        if (v23 == a1)
          break;
        ++v22;
        v20 += v21;
        if (v19 == v22)
        {
          swift_bridgeObjectRelease();
          v24 = 1;
          a2 = v27;
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      swift_beginAccess();
      a2 = v27;
      sub_1A91BFBDC(v22, v27);
      swift_endAccess();
      v24 = 0;
LABEL_9:
      v5 = v26;
    }
    else
    {
      v24 = 1;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(a2, v24, 1, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A91BFBDC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1A9398DEC(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = *(_QWORD *)(type metadata accessor for StoreFeedUpdater.Update(0) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  result = sub_1A9116174(v10, a2, type metadata accessor for StoreFeedUpdater.Update);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    result = sub_1A93F8E98();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    result = swift_arrayInitWithTakeBackToFront();
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

uint64_t sub_1A91BFD18()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A9064714(v0 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_bagConfiguration, (uint64_t (*)(_QWORD))type metadata accessor for FeedManagerBagConfiguration);

  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_ingesterProvider);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A9085818(*(_QWORD *)(v0 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_completionCallback));
  return v0;
}

uint64_t sub_1A91BFDD0()
{
  sub_1A91BFD18();
  return swift_deallocClassInstance();
}

uint64_t sub_1A91BFDF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1A91BFE28(int8x16_t *a1, uint64_t *a2)
{
  int v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int8x16_t v12;

  v2 = *((unsigned __int8 *)a2 + 64);
  if (!a1[4].i8[0])
    return v2 == 0;
  if (a1[4].i8[0] == 1)
    return v2 == 1;
  v5 = *a2;
  v4 = a2[1];
  v7 = a2[2];
  v6 = a2[3];
  v9 = a2[4];
  v8 = a2[5];
  v11 = a2[6];
  v10 = a2[7];
  v12 = vorrq_s8(a1[1], a1[2]);
  if (a1->i64[0] | *(_QWORD *)&vorr_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)) | a1[3].i64[0] | a1[3].i64[1] | a1->i64[1])
  {
    if (v2 != 2 || v5 != 1 || v7 | v4 | v6 | v9 | v8 | v11 | v10)
      return 0;
  }
  else if (v2 != 2 || v7 | v4 | v5 | v6 | v9 | v8 | v11 | v10)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_1A91BFEF8(uint64_t (*a1)(unint64_t))
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v1;
  v5 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1E0C80A78](v5);
  v34 = (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v33 = (uint64_t)&v30 - v8;
  MEMORY[0x1E0C80A78](v9);
  v35 = (uint64_t)&v30 - v11;
  v12 = *v1;
  v13 = *(_QWORD *)(*v1 + 16);
  if (!v13)
    return 0;
  v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v10 + 72);
  swift_bridgeObjectRetain();
  v16 = 0;
  v31 = v14;
  while (1)
  {
    v17 = a1(v12 + v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((v17 & 1) != 0)
      break;
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v12 + 16);
    }
  }
  result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    v19 = *(_QWORD *)(v12 + 16);
    if (v16 + 1 == v19)
      return v16;
    v20 = v15 + v14;
    v21 = v16 + 1;
    v30 = v1;
    v32 = v15;
    while (v21 < v19)
    {
      v22 = v3;
      v36 = v20;
      v23 = v35;
      sub_1A9064630(v12 + v20, v35, type metadata accessor for StoreFeedUpdater.Update);
      v24 = a1(v23);
      result = sub_1A9064714(v23, type metadata accessor for StoreFeedUpdater.Update);
      if ((v24 & 1) != 0)
      {
        v3 = v22;
        v25 = v32;
      }
      else
      {
        v3 = v22;
        v25 = v32;
        if (v21 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0)
            goto LABEL_32;
          v26 = *v3;
          v27 = *(_QWORD *)(*v3 + 16);
          if (v16 >= v27)
            goto LABEL_33;
          result = sub_1A9064630(v26 + v31 + v16 * v32, v33, type metadata accessor for StoreFeedUpdater.Update);
          if (v21 >= v27)
            goto LABEL_34;
          sub_1A9064630(v26 + v36, v34, type metadata accessor for StoreFeedUpdater.Update);
          result = swift_isUniquelyReferenced_nonNull_native();
          v3 = v30;
          *v30 = v26;
          if ((result & 1) == 0)
          {
            result = sub_1A9398DEC(v26);
            v26 = result;
            *v3 = result;
          }
          if (v16 >= *(_QWORD *)(v26 + 16))
            goto LABEL_35;
          result = sub_1A91C2194(v34, v26 + v31 + v16 * v25);
          if (v21 >= *(_QWORD *)(*v3 + 16))
            goto LABEL_36;
          result = sub_1A91C2194(v33, *v3 + v36);
        }
        if (__OFADD__(v16++, 1))
          goto LABEL_31;
      }
      v29 = v21 + 1;
      if (__OFADD__(v21, 1))
        goto LABEL_30;
      v12 = *v3;
      v19 = *(_QWORD *)(*v3 + 16);
      ++v21;
      v20 = v36 + v25;
      if (v29 == v19)
        return v16;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A91C0200()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A91C0224(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A91BF56C(a1, a2, v2, (void (*)(uint64_t, uint64_t))sub_1A91BCDD8);
}

uint64_t sub_1A91C0244()
{
  uint64_t v0;
  int *updated;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  updated = (int *)type metadata accessor for FeedUpdateRequest();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)updated - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)updated - 1) + 80));
  v3 = sub_1A93F73E0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = v2 + updated[5];
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v8 = v2 + updated[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + updated[14]))
    swift_release();
  if (*(_QWORD *)(v2 + updated[15]))
    swift_release();
  if (*(_QWORD *)(v2 + updated[16]))
    swift_release();
  if (*(_QWORD *)(v2 + updated[17]))
    swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A91C03D0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for FeedUpdateRequest() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A91B9258(v0 + v2, *(_QWORD *)(v0 + v3), *(char **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t method lookup function for StoreFeedUpdater()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StoreFeedUpdater.updatingStoreIDs.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of StoreFeedUpdater.__allocating_init(bagConfiguration:ctx:ingesterProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of StoreFeedUpdater.updateFeed(request:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t sub_1A91C0458()
{
  return type metadata accessor for StoreFeedUpdater.Queue(0);
}

uint64_t *sub_1A91C0460(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1A93F73E0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1A91C04E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1A93F73E0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_1A91C0520(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A93F73E0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1A91C057C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A93F73E0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1A91C05D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A93F73E0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1A91C0634(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A93F73E0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1A91C0690()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A91C069C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_1A93F73E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1A91C06DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A91C06E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_1A93F73E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t type metadata accessor for StoreFeedUpdater.Retry(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1ED2A65C0);
}

uint64_t sub_1A91C0740()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F73E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for StoreFeedUpdater.UpdaterJobMetricsData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StoreFeedUpdater.UpdaterJobMetricsData(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for StoreFeedUpdater.UpdaterJobMetricsData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StoreFeedUpdater.UpdaterJobMetricsData(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerSyncResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerSyncResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreFeedUpdater.UpdaterJobMetricsData()
{
  return &type metadata for StoreFeedUpdater.UpdaterJobMetricsData;
}

void destroy for StoreFeedUpdater.Result(uint64_t a1)
{
  sub_1A919F218(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(id *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t initializeWithCopy for StoreFeedUpdater.Result(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(void **)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1A919EED8(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for StoreFeedUpdater.Result(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(void **)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1A919EED8(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(void **)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  sub_1A919F218(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for StoreFeedUpdater.Result(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_BYTE *)(a2 + 64);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(void **)(a1 + 56);
  v12 = *(_BYTE *)(a1 + 64);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 64) = v3;
  sub_1A919F218(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreFeedUpdater.Result(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreFeedUpdater.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A91C0BDC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 64) <= 1u)
    return *(unsigned __int8 *)(a1 + 64);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A91C0BF4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_QWORD *)(result + 56) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StoreFeedUpdater.Result()
{
  return &type metadata for StoreFeedUpdater.Result;
}

_QWORD *sub_1A91C0C30(_QWORD *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int *updated;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A93F73E0();
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    updated = (int *)type metadata accessor for FeedUpdateRequest();
    v9 = updated[5];
    v10 = (char *)a1 + v9;
    v11 = &a2[v9];
    v12 = sub_1A93F726C();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v14(v10, v11, v12);
    v15 = updated[6];
    v16 = (char *)a1 + v15;
    v17 = &a2[v15];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(&a2[v15], 1, v12))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v14(v16, v17, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
    }
    *(_QWORD *)((char *)a1 + updated[7]) = *(_QWORD *)&a2[updated[7]];
    v20 = updated[8];
    v21 = (_QWORD *)((char *)a1 + v20);
    v22 = &a2[v20];
    v23 = *((_QWORD *)v22 + 1);
    *v21 = *(_QWORD *)v22;
    v21[1] = v23;
    *((_BYTE *)a1 + updated[9]) = a2[updated[9]];
    *((_BYTE *)a1 + updated[10]) = a2[updated[10]];
    *((_BYTE *)a1 + updated[11]) = a2[updated[11]];
    *(_QWORD *)((char *)a1 + updated[12]) = *(_QWORD *)&a2[updated[12]];
    *((_BYTE *)a1 + updated[13]) = a2[updated[13]];
    v24 = updated[14];
    v25 = (_QWORD *)((char *)a1 + v24);
    v26 = &a2[v24];
    v27 = *(_QWORD *)&a2[v24];
    swift_bridgeObjectRetain();
    if (v27)
    {
      v28 = *((_QWORD *)v26 + 1);
      *v25 = v27;
      v25[1] = v28;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v25 = *(_OWORD *)v26;
    }
    v29 = updated[15];
    v30 = (_QWORD *)((char *)a1 + v29);
    v31 = &a2[v29];
    if (*(_QWORD *)v31)
    {
      v32 = *((_QWORD *)v31 + 1);
      *v30 = *(_QWORD *)v31;
      v30[1] = v32;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v30 = *(_OWORD *)v31;
    }
    v33 = updated[16];
    v34 = (_QWORD *)((char *)a1 + v33);
    v35 = &a2[v33];
    if (*(_QWORD *)v35)
    {
      v36 = *((_QWORD *)v35 + 1);
      *v34 = *(_QWORD *)v35;
      v34[1] = v36;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
    }
    v37 = updated[17];
    v38 = (_QWORD *)((char *)a1 + v37);
    v39 = &a2[v37];
    if (*(_QWORD *)v39)
    {
      v40 = *((_QWORD *)v39 + 1);
      *v38 = *(_QWORD *)v39;
      v38[1] = v40;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v38 = *(_OWORD *)v39;
    }
    *(_QWORD *)((char *)a1 + updated[18]) = *(_QWORD *)&a2[updated[18]];
    v41 = a3[6];
    *((_BYTE *)a1 + a3[5]) = a2[a3[5]];
    *((_BYTE *)a1 + v41) = a2[v41];
    v42 = a3[8];
    *((_BYTE *)a1 + a3[7]) = a2[a3[7]];
    v43 = (_QWORD *)((char *)a1 + v42);
    v44 = &a2[v42];
    v45 = *((_QWORD *)v44 + 1);
    *v43 = *(_QWORD *)v44;
    v43[1] = v45;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1A91C0EC8(uint64_t a1)
{
  uint64_t v2;
  int *updated;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  v2 = sub_1A93F73E0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  updated = (int *)type metadata accessor for FeedUpdateRequest();
  v4 = a1 + updated[5];
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v8 = a1 + updated[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + updated[14]))
    swift_release();
  if (*(_QWORD *)(a1 + updated[15]))
    swift_release();
  if (*(_QWORD *)(a1 + updated[16]))
    swift_release();
  if (*(_QWORD *)(a1 + updated[17]))
    swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A91C1004(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *updated;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;

  v6 = sub_1A93F73E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  updated = (int *)type metadata accessor for FeedUpdateRequest();
  v8 = updated[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1A93F726C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 16);
  v13(v9, v10, v11);
  v14 = updated[6];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v14, 1, v11))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  *(_QWORD *)(a1 + updated[7]) = *(_QWORD *)(a2 + updated[7]);
  v18 = updated[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  *(_BYTE *)(a1 + updated[9]) = *(_BYTE *)(a2 + updated[9]);
  *(_BYTE *)(a1 + updated[10]) = *(_BYTE *)(a2 + updated[10]);
  *(_BYTE *)(a1 + updated[11]) = *(_BYTE *)(a2 + updated[11]);
  *(_QWORD *)(a1 + updated[12]) = *(_QWORD *)(a2 + updated[12]);
  *(_BYTE *)(a1 + updated[13]) = *(_BYTE *)(a2 + updated[13]);
  v22 = updated[14];
  v23 = (_QWORD *)(a1 + v22);
  v24 = a2 + v22;
  v25 = *(_QWORD *)(a2 + v22);
  swift_bridgeObjectRetain();
  if (v25)
  {
    v26 = *(_QWORD *)(v24 + 8);
    *v23 = v25;
    v23[1] = v26;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
  }
  v27 = updated[15];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  if (*v29)
  {
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
  }
  v31 = updated[16];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  if (*v33)
  {
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
  }
  v35 = updated[17];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  if (*v37)
  {
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v36 = *(_OWORD *)v37;
  }
  *(_QWORD *)(a1 + updated[18]) = *(_QWORD *)(a2 + updated[18]);
  v39 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v39) = *(_BYTE *)(a2 + v39);
  v40 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A91C1270(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int *updated;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t (*v16)(const void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;

  v5 = sub_1A93F73E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a1, a2, v5);
  updated = (int *)type metadata accessor for FeedUpdateRequest();
  v7 = updated[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = updated[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16((const void *)(a1 + v13), 1, v10);
  v18 = v16(v15, 1, v10);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v12(v14, v15, v10);
LABEL_7:
  *(_QWORD *)(a1 + updated[7]) = *(_QWORD *)(a2 + updated[7]);
  v20 = updated[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + updated[9]) = *(_BYTE *)(a2 + updated[9]);
  *(_BYTE *)(a1 + updated[10]) = *(_BYTE *)(a2 + updated[10]);
  *(_BYTE *)(a1 + updated[11]) = *(_BYTE *)(a2 + updated[11]);
  *(_QWORD *)(a1 + updated[12]) = *(_QWORD *)(a2 + updated[12]);
  *(_BYTE *)(a1 + updated[13]) = *(_BYTE *)(a2 + updated[13]);
  v23 = updated[14];
  v24 = (_QWORD *)(a1 + v23);
  v25 = a2 + v23;
  v26 = *(_QWORD *)(a1 + v23);
  v27 = *(_QWORD *)(a2 + v23);
  if (v26)
  {
    if (v27)
    {
      v28 = *(_QWORD *)(v25 + 8);
      *v24 = v27;
      v24[1] = v28;
      swift_retain();
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v27)
  {
    v29 = *(_QWORD *)(v25 + 8);
    *v24 = v27;
    v24[1] = v29;
    swift_retain();
    goto LABEL_14;
  }
  *(_OWORD *)v24 = *(_OWORD *)v25;
LABEL_14:
  v30 = updated[15];
  v31 = (_QWORD *)(a1 + v30);
  v32 = a2 + v30;
  v33 = *(_QWORD *)(a1 + v30);
  v34 = *(_QWORD *)(a2 + v30);
  if (v33)
  {
    if (v34)
    {
      v35 = *(_QWORD *)(v32 + 8);
      *v31 = v34;
      v31[1] = v35;
      swift_retain();
      swift_release();
      goto LABEL_21;
    }
    swift_release();
  }
  else if (v34)
  {
    v36 = *(_QWORD *)(v32 + 8);
    *v31 = v34;
    v31[1] = v36;
    swift_retain();
    goto LABEL_21;
  }
  *(_OWORD *)v31 = *(_OWORD *)v32;
LABEL_21:
  v37 = updated[16];
  v38 = (_QWORD *)(a1 + v37);
  v39 = a2 + v37;
  v40 = *(_QWORD *)(a1 + v37);
  v41 = *(_QWORD *)(a2 + v37);
  if (v40)
  {
    if (v41)
    {
      v42 = *(_QWORD *)(v39 + 8);
      *v38 = v41;
      v38[1] = v42;
      swift_retain();
      swift_release();
      goto LABEL_28;
    }
    swift_release();
  }
  else if (v41)
  {
    v43 = *(_QWORD *)(v39 + 8);
    *v38 = v41;
    v38[1] = v43;
    swift_retain();
    goto LABEL_28;
  }
  *(_OWORD *)v38 = *(_OWORD *)v39;
LABEL_28:
  v44 = updated[17];
  v45 = (_QWORD *)(a1 + v44);
  v46 = a2 + v44;
  v47 = *(_QWORD *)(a1 + v44);
  v48 = *(_QWORD *)(a2 + v44);
  if (!v47)
  {
    if (v48)
    {
      v50 = *(_QWORD *)(v46 + 8);
      *v45 = v48;
      v45[1] = v50;
      swift_retain();
      goto LABEL_35;
    }
LABEL_34:
    *(_OWORD *)v45 = *(_OWORD *)v46;
    goto LABEL_35;
  }
  if (!v48)
  {
    swift_release();
    goto LABEL_34;
  }
  v49 = *(_QWORD *)(v46 + 8);
  *v45 = v48;
  v45[1] = v49;
  swift_retain();
  swift_release();
LABEL_35:
  *(_QWORD *)(a1 + updated[18]) = *(_QWORD *)(a2 + updated[18]);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v51 = a3[8];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  *v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A91C1624(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *updated;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_1A93F73E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  updated = (int *)type metadata accessor for FeedUpdateRequest();
  v8 = updated[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1A93F726C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  v14 = updated[6];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v14, 1, v11))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  *(_QWORD *)(a1 + updated[7]) = *(_QWORD *)(a2 + updated[7]);
  *(_OWORD *)(a1 + updated[8]) = *(_OWORD *)(a2 + updated[8]);
  *(_BYTE *)(a1 + updated[9]) = *(_BYTE *)(a2 + updated[9]);
  *(_BYTE *)(a1 + updated[10]) = *(_BYTE *)(a2 + updated[10]);
  *(_BYTE *)(a1 + updated[11]) = *(_BYTE *)(a2 + updated[11]);
  *(_QWORD *)(a1 + updated[12]) = *(_QWORD *)(a2 + updated[12]);
  *(_BYTE *)(a1 + updated[13]) = *(_BYTE *)(a2 + updated[13]);
  v18 = updated[14];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v21 = *v20;
  if (*v20)
  {
    v22 = v20[1];
    *v19 = v21;
    v19[1] = v22;
  }
  else
  {
    *(_OWORD *)v19 = *(_OWORD *)v20;
  }
  v23 = updated[15];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v26 = *v25;
  if (*v25)
  {
    v27 = v25[1];
    *v24 = v26;
    v24[1] = v27;
  }
  else
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
  }
  v28 = updated[16];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (uint64_t *)(a2 + v28);
  v31 = *v30;
  if (*v30)
  {
    v32 = v30[1];
    *v29 = v31;
    v29[1] = v32;
  }
  else
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  v33 = updated[17];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v36 = *v35;
  if (*v35)
  {
    v37 = v35[1];
    *v34 = v36;
    v34[1] = v37;
  }
  else
  {
    *(_OWORD *)v34 = *(_OWORD *)v35;
  }
  *(_QWORD *)(a1 + updated[18]) = *(_QWORD *)(a2 + updated[18]);
  v38 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v38) = *(_BYTE *)(a2 + v38);
  v39 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v39) = *(_OWORD *)(a2 + v39);
  return a1;
}

uint64_t sub_1A91C1860(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int *updated;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t (*v16)(const void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;

  v5 = sub_1A93F73E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a1, a2, v5);
  updated = (int *)type metadata accessor for FeedUpdateRequest();
  v7 = updated[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = updated[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16((const void *)(a1 + v13), 1, v10);
  v18 = v16(v15, 1, v10);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v12(v14, v15, v10);
LABEL_7:
  *(_QWORD *)(a1 + updated[7]) = *(_QWORD *)(a2 + updated[7]);
  v20 = updated[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + updated[9]) = *(_BYTE *)(a2 + updated[9]);
  *(_BYTE *)(a1 + updated[10]) = *(_BYTE *)(a2 + updated[10]);
  *(_BYTE *)(a1 + updated[11]) = *(_BYTE *)(a2 + updated[11]);
  *(_QWORD *)(a1 + updated[12]) = *(_QWORD *)(a2 + updated[12]);
  *(_BYTE *)(a1 + updated[13]) = *(_BYTE *)(a2 + updated[13]);
  v25 = updated[14];
  v26 = (_QWORD *)(a1 + v25);
  v27 = a2 + v25;
  v28 = *(_QWORD *)(a1 + v25);
  v29 = *(_QWORD *)(a2 + v25);
  if (v28)
  {
    if (v29)
    {
      v30 = *(_QWORD *)(v27 + 8);
      *v26 = v29;
      v26[1] = v30;
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v29)
  {
    v31 = *(_QWORD *)(v27 + 8);
    *v26 = v29;
    v26[1] = v31;
    goto LABEL_14;
  }
  *(_OWORD *)v26 = *(_OWORD *)v27;
LABEL_14:
  v32 = updated[15];
  v33 = (_QWORD *)(a1 + v32);
  v34 = a2 + v32;
  v35 = *(_QWORD *)(a1 + v32);
  v36 = *(_QWORD *)(a2 + v32);
  if (v35)
  {
    if (v36)
    {
      v37 = *(_QWORD *)(v34 + 8);
      *v33 = v36;
      v33[1] = v37;
      swift_release();
      goto LABEL_21;
    }
    swift_release();
  }
  else if (v36)
  {
    v38 = *(_QWORD *)(v34 + 8);
    *v33 = v36;
    v33[1] = v38;
    goto LABEL_21;
  }
  *(_OWORD *)v33 = *(_OWORD *)v34;
LABEL_21:
  v39 = updated[16];
  v40 = (_QWORD *)(a1 + v39);
  v41 = a2 + v39;
  v42 = *(_QWORD *)(a1 + v39);
  v43 = *(_QWORD *)(a2 + v39);
  if (v42)
  {
    if (v43)
    {
      v44 = *(_QWORD *)(v41 + 8);
      *v40 = v43;
      v40[1] = v44;
      swift_release();
      goto LABEL_28;
    }
    swift_release();
  }
  else if (v43)
  {
    v45 = *(_QWORD *)(v41 + 8);
    *v40 = v43;
    v40[1] = v45;
    goto LABEL_28;
  }
  *(_OWORD *)v40 = *(_OWORD *)v41;
LABEL_28:
  v46 = updated[17];
  v47 = (_QWORD *)(a1 + v46);
  v48 = a2 + v46;
  v49 = *(_QWORD *)(a1 + v46);
  v50 = *(_QWORD *)(a2 + v46);
  if (!v49)
  {
    if (v50)
    {
      v52 = *(_QWORD *)(v48 + 8);
      *v47 = v50;
      v47[1] = v52;
      goto LABEL_35;
    }
LABEL_34:
    *(_OWORD *)v47 = *(_OWORD *)v48;
    goto LABEL_35;
  }
  if (!v50)
  {
    swift_release();
    goto LABEL_34;
  }
  v51 = *(_QWORD *)(v48 + 8);
  *v47 = v50;
  v47[1] = v51;
  swift_release();
LABEL_35:
  *(_QWORD *)(a1 + updated[18]) = *(_QWORD *)(a2 + updated[18]);
  swift_release();
  v53 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v53) = *(_BYTE *)(a2 + v53);
  v54 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v55 = (_QWORD *)(a1 + v54);
  v56 = (uint64_t *)(a2 + v54);
  v58 = *v56;
  v57 = v56[1];
  *v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A91C1BB4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A91C1BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t updated;
  uint64_t v7;
  unint64_t v9;

  updated = type metadata accessor for FeedUpdateRequest();
  v7 = *(_QWORD *)(updated - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, updated);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1A91C1C40()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A91C1C4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FeedUpdateRequest();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for StoreFeedUpdater.Update(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1ED2A6658);
}

uint64_t sub_1A91C1CDC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FeedUpdateRequest();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_1A91C1D5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t updated;

  v3 = *(_QWORD *)(v1 + 16);
  updated = type metadata accessor for FeedUpdateRequest();
  return *(_QWORD *)(a1 + *(int *)(updated + 28)) == *(_QWORD *)(v3 + *(int *)(updated + 28));
}

void sub_1A91C1DA8(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t updated;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  id v19;

  v19 = (id)objc_opt_self();
  v4 = (void *)sub_1A93F8010();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9760);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1A940D5D0;
  v6 = MEMORY[0x1E0DEA968];
  sub_1A93F8C1C();
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v5 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v5 + 72) = v7;
  sub_1A93F8C1C();
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v5 + 168) = v8;
  *(_QWORD *)(v5 + 144) = v9;
  sub_1A93F8C1C();
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v5 + 240) = v8;
  *(_QWORD *)(v5 + 216) = v10;
  sub_1A93F8C1C();
  v11 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(v5 + 312) = v8;
  *(_QWORD *)(v5 + 288) = v11;
  sub_1A93F8C1C();
  v12 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v5 + 384) = v8;
  *(_QWORD *)(v5 + 360) = v12;
  sub_1A93F8C1C();
  v13 = *(_QWORD *)a1;
  *(_QWORD *)(v5 + 456) = v8;
  *(_QWORD *)(v5 + 432) = v13;
  sub_1A93F8C1C();
  updated = type metadata accessor for FeedUpdateRequest();
  v15 = *(_QWORD *)(a2 + *(int *)(updated + 28));
  *(_QWORD *)(v5 + 528) = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(v5 + 504) = v15;
  sub_1A93F8C1C();
  v16 = *(_QWORD *)(a2 + *(int *)(updated + 48));
  *(_QWORD *)(v5 + 600) = v8;
  *(_QWORD *)(v5 + 576) = v16;
  sub_1A93F8C1C();
  *(_QWORD *)(v5 + 672) = v6;
  *(_QWORD *)(v5 + 648) = 1668184435;
  *(_QWORD *)(v5 + 656) = 0xE400000000000000;
  sub_1A93F8C1C();
  v17 = *(_BYTE *)(a2 + *(int *)(type metadata accessor for StoreFeedUpdater.Update(0) + 28));
  *(_QWORD *)(v5 + 744) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(v5 + 720) = v17;
  sub_1A93F8C1C();
  *(_QWORD *)(v5 + 816) = v6;
  *(_OWORD *)(v5 + 792) = *(_OWORD *)(a1 + 48);
  sub_1A91C25A8(a1);
  sub_1A91129D8(v5);
  v18 = (void *)sub_1A93F7ED8();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_recordEvent_dataSource_data_, v4, 0, v18);

}

uint64_t sub_1A91C2194(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StoreFeedUpdater.Update(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A91C21D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A91BF56C(a1, a2, v2, (void (*)(uint64_t, uint64_t))sub_1A91BF5E0);
}

uint64_t sub_1A91C21F8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[5];
  __int128 v45[10];

  v39 = a7;
  v38 = a4;
  v43 = sub_1A93F75FC();
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v40 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A93F73E0();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for MediaRequestController();
  v44[4] = &protocol witness table for MediaRequestController;
  v44[3] = v20;
  v44[0] = a5;
  sub_1A91C2538((uint64_t)v45);
  sub_1A91A7644(v45, (_OWORD *)(a9 + 16));
  v21 = a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalName;
  *(_WORD *)(v21 + 16) = 256;
  *(_QWORD *)v21 = 0;
  *(_QWORD *)(v21 + 8) = 0;
  *(_QWORD *)(a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentInterval) = 0;
  v22 = a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalMetadata;
  *(_OWORD *)v22 = 0u;
  *(_OWORD *)(v22 + 16) = 0u;
  *(_OWORD *)(v22 + 32) = 0u;
  *(_QWORD *)(v22 + 48) = 0;
  *(_QWORD *)(a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_overallInterval) = 0;
  v42 = a1;
  v23 = a1;
  v24 = a2;
  v25 = v38;
  sub_1A9064630(v23, a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, type metadata accessor for StoreFeedUpdater.Update);
  sub_1A9064630(v24, a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_bagConfiguration, (uint64_t (*)(_QWORD))type metadata accessor for FeedManagerBagConfiguration);
  *(_QWORD *)(a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx) = a3;
  sub_1A905DC3C(v25, a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider);
  sub_1A905DC3C((uint64_t)v44, a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController);
  *(_QWORD *)(a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_queue) = a6;
  v26 = (_QWORD *)(a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_completion);
  *v26 = v39;
  v26[1] = a8;
  v27 = a3;
  v28 = a6;
  swift_retain();
  sub_1A93F73D4();
  v29 = sub_1A93F73A4();
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v32 = (uint64_t *)(a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_updaterJobUUID);
  *v32 = v29;
  v32[1] = v31;
  v33 = a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData;
  *(_OWORD *)(v33 + 16) = 0u;
  *(_OWORD *)(v33 + 32) = 0u;
  *(_OWORD *)v33 = 0u;
  *(_QWORD *)(v33 + 48) = v29;
  *(_QWORD *)(v33 + 56) = v31;
  v34 = qword_1ED2A8670;
  swift_bridgeObjectRetain();
  if (v34 != -1)
    swift_once();
  v35 = sub_1A93F762C();
  __swift_project_value_buffer(v35, (uint64_t)qword_1ED2A8658);
  sub_1A93F7620();
  v36 = v40;
  sub_1A93F75D8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  __swift_destroy_boxed_opaque_existential_0(v25);
  sub_1A9064714(v24, (uint64_t (*)(_QWORD))type metadata accessor for FeedManagerBagConfiguration);
  sub_1A9064714(v42, type metadata accessor for StoreFeedUpdater.Update);
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_signpostID, v36, v43);
  return a9;
}

double sub_1A91C2538(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 153) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 169) = 1;
  return result;
}

uint64_t sub_1A91C2560(uint64_t a1)
{
  sub_1A919F218(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(id *)(a1 + 56), *(_BYTE *)(a1 + 64));
  return a1;
}

uint64_t sub_1A91C25A8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A91C25D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A66A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_1A91C2618@<W0>(_BYTE *a1@<X8>)
{
  return sub_1A91C28C8(a1);
}

uint64_t sub_1A91C262C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *updated;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(type metadata accessor for StoreFeedUpdater.Update(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v14 = *(_QWORD *)(v1 + 64);
  v3 = sub_1A93F73E0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  swift_release();
  v6 = v0 + ((v2 + 24) & ~v2);
  v15 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v15(v6, v3);
  updated = (int *)type metadata accessor for FeedUpdateRequest();
  v8 = v6 + updated[5];
  v9 = sub_1A93F726C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v12 = v6 + updated[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
    v11(v12, v9);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + updated[14]))
    swift_release();
  if (*(_QWORD *)(v6 + updated[15]))
    swift_release();
  if (*(_QWORD *)(v6 + updated[16]))
    swift_release();
  if (*(_QWORD *)(v6 + updated[17]))
    swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v15(v0 + ((((v2 + 24) & ~v2) + v14 + v5) & ~v5), v3);
  return swift_deallocObject();
}

uint64_t sub_1A91C2808()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for StoreFeedUpdater.Update(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_1A93F73E0() - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return sub_1A91BC59C(*(_QWORD *)(v0 + 16), v0 + v2, v0 + v5, *(_QWORD *)(v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A91C2880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A66A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_1A91C28C8@<W0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _BOOL8 result;

  result = sub_1A934EB68(*(_QWORD *)(v1 + 16), **(_QWORD **)(v1 + 24), *(_QWORD *)(v1 + 32));
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1A91C2900()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *updated;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;

  v1 = *(_QWORD *)(type metadata accessor for StoreFeedUpdater.Update(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  v3 = v0 + v2;
  v4 = sub_1A93F73E0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  updated = (int *)type metadata accessor for FeedUpdateRequest();
  v6 = v0 + v2 + updated[5];
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v10 = v0 + v2 + updated[6];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + updated[14]))
    swift_release();
  if (*(_QWORD *)(v3 + updated[15]))
    swift_release();
  if (*(_QWORD *)(v3 + updated[16]))
    swift_release();
  if (*(_QWORD *)(v3 + updated[17]))
    swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A91C2A90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StoreFeedUpdater.Update(0) - 8) + 80);
  return sub_1A91B9EC4(v0 + ((v1 + 24) & ~v1));
}

uint64_t IMURLBag.getCategoriesSyncThreshold()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = v0;
  return swift_task_switch();
}

uint64_t sub_1A91C2AF4()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(*(id *)(v0 + 136), sel_fetchCategoriesSyncThresholdValue);
  *(_QWORD *)(v0 + 144) = v1;
  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1A91C2BAC;
  v2 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v3 = (_QWORD *)(v0 + 80);
  v3[1] = 0x40000000;
  v3[2] = sub_1A91C2DF8;
  v3[3] = &block_descriptor_18;
  v3[4] = v2;
  objc_msgSend(v1, sel_asyncValueWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_1A91C2BAC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1A91C2C0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1A91C2C48()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 144);
  swift_willThrow();

  if (qword_1ED2A58F8 != -1)
    swift_once();
  v2 = *(void **)(v0 + 152);
  v3 = sub_1A93F7698();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED2A58D8);
  v4 = v2;
  v5 = sub_1A93F7674();
  v6 = sub_1A93F879C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 152);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = sub_1A93F711C();
    *(_QWORD *)(v0 + 80) = v11;
    sub_1A93F8AA8();
    *v10 = v11;

    _os_log_impl(&dword_1A904E000, v5, v6, "[Categories Sync] Could not get the threshold value from bag with error: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v10, -1, -1);
    MEMORY[0x1AF41411C](v9, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A91C2DF8(uint64_t result, void *a2, char a3, void *a4)
{
  _QWORD *v5;
  id v6;
  uint64_t v7;
  id v8;

  if (a4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    swift_allocError();
    *v5 = a4;
    v6 = a4;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40);
    *(_QWORD *)v7 = a2;
    *(_BYTE *)(v7 + 8) = a3;
    v8 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A91C2E88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1A91C2EE8;
  v3[17] = v2;
  return swift_task_switch();
}

uint64_t sub_1A91C2EE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

PodcastsFoundation::FeedUpdaterError_optional __swiftcall FeedUpdaterError.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 17;
  if ((unint64_t)rawValue < 0x11)
    v2 = rawValue;
  *v1 = v2;
  return (PodcastsFoundation::FeedUpdaterError_optional)rawValue;
}

uint64_t FeedUpdaterError.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

PodcastsFoundation::FeedUpdaterError_optional sub_1A91C2F58(Swift::Int *a1)
{
  return FeedUpdaterError.init(rawValue:)(*a1);
}

id FeedUpdaterObjcError.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id FeedUpdaterObjcError.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedUpdaterObjcError();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for FeedUpdaterObjcError()
{
  return objc_opt_self();
}

id FeedUpdaterObjcError.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedUpdaterObjcError();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static FeedUpdaterObjcError.domainName.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9848);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9850);
  return sub_1A93F8094();
}

uint64_t static FeedUpdaterObjcError.feedURLIsEmpty.getter()
{
  return sub_1A91C3144(7);
}

uint64_t static FeedUpdaterObjcError.localShowMissing.getter()
{
  return sub_1A91C3144(10);
}

uint64_t static FeedUpdaterObjcError.preProcessHookDeniedUpdate.getter()
{
  return sub_1A91C3144(11);
}

uint64_t static FeedUpdaterObjcError.internetNotReachable.getter()
{
  return sub_1A91C3144(13);
}

uint64_t static FeedUpdaterObjcError.feedUpdatesDisabled.getter()
{
  return sub_1A91C3144(14);
}

uint64_t static FeedUpdaterObjcError.notYetUpdatable.getter()
{
  return sub_1A91C3144(15);
}

uint64_t static FeedUpdaterObjcError.nonSubscribableShow.getter()
{
  return sub_1A91C3144(16);
}

uint64_t sub_1A91C3144(char a1)
{
  uint64_t result;
  _BYTE *v3;

  sub_1A9069320();
  result = swift_allocError();
  *v3 = a1;
  return result;
}

unint64_t sub_1A91C3184()
{
  unint64_t result;

  result = qword_1EEAB9858;
  if (!qword_1EEAB9858)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for FeedUpdaterError, &type metadata for FeedUpdaterError);
    atomic_store(result, (unint64_t *)&qword_1EEAB9858);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EpisodeSortType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedUpdaterError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_1A91C32A4 + 4 * byte_1A940D795[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_1A91C32D8 + 4 * byte_1A940D790[v4]))();
}

uint64_t sub_1A91C32D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91C32E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91C32E8);
  return result;
}

uint64_t sub_1A91C32F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91C32FCLL);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_1A91C3300(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91C3308(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedUpdaterError()
{
  return &type metadata for FeedUpdaterError;
}

uint64_t sub_1A91C3324()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);

  return swift_deallocObject();
}

uint64_t sub_1A91C3358()
{
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A91C33C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48);
  v4 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v3, a1, v4);
  sub_1A93F73D4();
  type metadata accessor for DownloadConsistency.Issue(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A91C3440()
{
  return sub_1A9066D74(&qword_1ED2A9330, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF38]);
}

uint64_t MAPICategoriesProvider.__allocating_init(mediaRequestController:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1A905D4AC(a1, v2 + 16);
  return v2;
}

uint64_t MAPICategoriesProvider.init(mediaRequestController:)(__int128 *a1)
{
  uint64_t v1;

  sub_1A905D4AC(a1, v1 + 16);
  return v1;
}

uint64_t MAPICategoriesProvider.getAllCategories(completion:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  __int128 v35[2];
  uint64_t v36;
  char v37;

  v29 = a1;
  v30 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = 0;
  memset(v35, 0, sizeof(v35));
  v37 = 4;
  v34 = 5;
  v33 = 1;
  v32 = 4;
  v31 = 1;
  v9 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
  v10 = MEMORY[0x1E0DEE9D8];
  v28 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  v11 = sub_1A9112728(v10);
  sub_1A911273C(v10);
  v13 = v12;
  v14 = sub_1A9112844(v10);
  v15 = sub_1A9112844(v10);
  v16 = sub_1A9112858(v10);
  *((_QWORD *)&v27 + 1) = sub_1A911286C(v10);
  *(_QWORD *)&v27 = v16;
  *(_QWORD *)&v26 = v15;
  *((_QWORD *)&v26 + 1) = v10;
  *(_QWORD *)&v25 = v10;
  *((_QWORD *)&v25 + 1) = v14;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v35, &v34, &v33, &v32, v28, v11, v13, v10, (uint64_t)v8, v25, v26, v10, v10, &v31, 300, 0, v27, 0, 1,
    0,
    (uint64_t)v5,
    0,
    0,
    0,
    0,
    0,
    v10,
    0,
    0,
    2);
  v17 = v2 + 2;
  v18 = v2[5];
  v19 = v2[6];
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9860);
  v21 = swift_allocObject();
  v22 = v30;
  *(_QWORD *)(v21 + 16) = v29;
  *(_QWORD *)(v21 + 24) = v22;
  v23 = sub_1A91C37F0();
  swift_retain();
  MediaRequestControllerProtocol.perform<A>(params:parsing:callback:)((uint64_t)v8, v20, (uint64_t)sub_1A91C37B4, v21, v18, v20, v19, v23);
  swift_release();
  return sub_1A9114C30((uint64_t)v8);
}

uint64_t MAPICategoriesProvider.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t MAPICategoriesProvider.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1A91C3770(uint64_t a1, uint64_t a2)
{
  return MAPICategoriesProvider.getAllCategories(completion:)(a1, a2);
}

uint64_t sub_1A91C3790()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91C37B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t *);
  char v5;
  uint64_t v7;
  char v8;

  v4 = *(uint64_t (**)(uint64_t *))(v3 + 16);
  v5 = *((_BYTE *)a3 + 8);
  v7 = *a3;
  v8 = v5;
  return v4(&v7);
}

unint64_t sub_1A91C37F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEAB9868;
  if (!qword_1EEAB9868)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEAB9860);
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ServerGenericResponse<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EEAB9868);
  }
  return result;
}

uint64_t type metadata accessor for MAPICategoriesProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for MAPICategoriesProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MAPICategoriesProvider.__allocating_init(mediaRequestController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t AssetSourceStep.source.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

void sub_1A91C388C()
{
  type metadata accessor for AssetSourceStep();
}

uint64_t sub_1A91C38CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v5 = v2 + ((v4 + 48) & ~v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v5, v1);
  (*(void (**)(uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5 + *(int *)(a1 + 52));
  return swift_deallocObject();
}

uint64_t *sub_1A91C3948(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_1A91C3A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A91C3A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A91C3AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A91C3B5C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A91C3C38 + 4 * byte_1A940DA30[v17 - 1]))();
}

void sub_1A91C3CB4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_1A91C3EB4()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  uint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v3 = type metadata accessor for EmitLifecycle(255, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  MEMORY[0x1AF414014](&protocol conformance descriptor for EmitLifecycle<A>, v3);
  sub_1A93F7AB8();
  JUMPOUT(0x1AF414014);
}

uint64_t kMTCategoryEntityName.getter()
{
  return 0x6F6765746143544DLL;
}

uint64_t kCategoryName.getter()
{
  return 1701667182;
}

uint64_t kCategoryAdamID.getter()
{
  return 0x44496D616461;
}

uint64_t kCategoryInterest.getter()
{
  return 0x7473657265746E69;
}

uint64_t kCategoryPodcasts.getter()
{
  return 0x7374736163646F70;
}

unint64_t kCategoryInterestInterestValue.getter()
{
  return 0xD000000000000016;
}

id static MTCategory.createFetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1A93F8010();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1A91C4054(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_name);
  v4 = sub_1A93F8040();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1A91C40A8(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1A93F8040();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_1A91C4108(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  uint64_t v7;
  id v8;

  v6 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v7 = sub_1A93F8010();
  else
    v7 = 0;
  v8 = (id)v7;
  objc_msgSend(v6, *a5);

}

void sub_1A91C4164(id *a1@<X0>, SEL *a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, unint64_t *a4@<X5>, uint64_t *a5@<X8>)
{
  id v8;
  uint64_t v9;

  v8 = objc_msgSend(*a1, *a2);
  a3(0);
  sub_1A9066CA8(a4, a3, MEMORY[0x1E0DEFCF8]);
  v9 = sub_1A93F85F8();

  *a5 = v9;
}

void sub_1A91C41EC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6, SEL *a7)
{
  void *v10;
  id v11;

  v10 = *a2;
  a5(0);
  sub_1A9066CA8(a6, a5, MEMORY[0x1E0DEFCF8]);
  v11 = (id)sub_1A93F85EC();
  objc_msgSend(v10, *a7, v11);

}

id MTCategory.artworkHeight.getter()
{
  return sub_1A91C4290((SEL *)&selRef_artworkHeightNumber);
}

id MTCategory.artworkWidth.getter()
{
  return sub_1A91C4290((SEL *)&selRef_artworkWidthNumber);
}

id sub_1A91C4290(SEL *a1)
{
  void *v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(v1, *a1);
  v3 = result;
  if (result)
  {
    objc_msgSend(result, sel_doubleValue);
    v5 = v4;

    return (id)v5;
  }
  return result;
}

id MTCategory.isFavorited.getter()
{
  void *v0;
  id result;
  void *v2;
  double v3;
  double v4;

  result = objc_msgSend(v0, sel_interest);
  if (result)
  {
    v2 = result;
    objc_msgSend(result, sel_interestValue);
    v4 = v3;

    return (id)(v4 == 1.0);
  }
  return result;
}

uint64_t MTCategory.followedShowsCount.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t result;
  unint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t *v18;

  v1 = objc_msgSend(v0, sel_podcasts);
  sub_1A91C675C();
  sub_1A9066CA8((unint64_t *)&qword_1EEAB98A8, (uint64_t (*)(uint64_t))sub_1A91C675C, MEMORY[0x1E0DEFCF8]);
  v2 = sub_1A93F85F8();

  if ((v2 & 0xC000000000000001) != 0)
  {
    v3 = (unint64_t *)MEMORY[0x1E0DEE9E8];
    v18 = (unint64_t *)MEMORY[0x1E0DEE9E8];
    sub_1A93F8B8C();
    if (sub_1A93F8BE0())
    {
      do
      {
        swift_dynamicCast();
        if ((objc_msgSend(v17, sel_subscribed) & 1) != 0)
        {
          v4 = v18;
          v5 = v18[2];
          if (v18[3] <= v5)
          {
            sub_1A90A35D8(v5 + 1, &qword_1EEAB98F8);
            v4 = v18;
          }
          result = sub_1A93F8A30();
          v7 = v4 + 7;
          v8 = -1 << *((_BYTE *)v4 + 32);
          v9 = result & ~v8;
          v10 = v9 >> 6;
          if (((-1 << v9) & ~v4[(v9 >> 6) + 7]) != 0)
          {
            v11 = __clz(__rbit64((-1 << v9) & ~v4[(v9 >> 6) + 7])) | v9 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v12 = 0;
            v13 = (unint64_t)(63 - v8) >> 6;
            do
            {
              if (++v10 == v13 && (v12 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              v14 = v10 == v13;
              if (v10 == v13)
                v10 = 0;
              v12 |= v14;
              v15 = v7[v10];
            }
            while (v15 == -1);
            v11 = __clz(__rbit64(~v15)) + (v10 << 6);
          }
          *(unint64_t *)((char *)v7 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
          *(_QWORD *)(v4[6] + 8 * v11) = v17;
          ++v4[2];
        }
        else
        {

        }
      }
      while (sub_1A93F8BE0());
      v3 = v18;
    }
    swift_release();
    if (((unint64_t)v3 & 0xC000000000000001) != 0)
      goto LABEL_24;
  }
  else
  {
    v3 = sub_1A91C6798(v2);
    if (((unint64_t)v3 & 0xC000000000000001) != 0)
    {
LABEL_24:
      v16 = sub_1A93F8BBC();
      goto LABEL_25;
    }
  }
  v16 = v3[2];
LABEL_25:
  swift_release();
  return v16;
}

Swift::Void __swiftcall MTCategory.setArtworkHeightNumber(_:)(NSNumber a1)
{
  void *v1;

  objc_msgSend(v1, sel_setArtworkHeightNumber_, a1.super.super.isa);
}

Swift::Void __swiftcall MTCategory.setArtworkWidthNumber(_:)(NSNumber a1)
{
  void *v1;

  objc_msgSend(v1, sel_setArtworkWidthNumber_, a1.super.super.isa);
}

uint64_t sub_1A91C45E8(uint64_t a1)
{
  return sub_1A90A35D8(a1, &qword_1EEAB98B8);
}

uint64_t sub_1A91C45F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98D0);
  v3 = sub_1A93F8C34();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_35;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_35;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_35;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_35:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_41;
                  if (v11 >= v8)
                    goto LABEL_35;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v21 = *v19;
      v20 = v19[1];
      sub_1A93F92DC();
      sub_1A93F92F4();
      if (v20)
      {
        swift_bridgeObjectRetain();
        sub_1A93F7FBC();
        swift_bridgeObjectRelease();
      }
      result = sub_1A93F9324();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v21;
      v13[1] = v20;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A91C48FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98C8);
  result = sub_1A93F8C34();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_1A93F92D0();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A91C4B7C(uint64_t a1)
{
  return sub_1A90A35D8(a1, &qword_1ED2ABD48);
}

uint64_t sub_1A91C4B88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_1A93F73E0();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABD40);
  v6 = sub_1A93F8C34();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_1A9066CA8((unint64_t *)&qword_1ED2A1F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
      result = sub_1A93F7FA4();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

void sub_1A91C4EF4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  _OWORD v19[4];
  uint64_t v20;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9910);
  v3 = sub_1A93F8C34();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v15 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return;
        }
        if (v15 >= v8)
          goto LABEL_22;
        v16 = v5[v15];
        ++v9;
        if (!v16)
        {
          v9 = v15 + 1;
          if (v15 + 1 >= v8)
            goto LABEL_22;
          v16 = v5[v9];
          if (!v16)
          {
            v9 = v15 + 2;
            if (v15 + 2 >= v8)
              goto LABEL_22;
            v16 = v5[v9];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_22:
                swift_release();
                v18 = 1 << *(_BYTE *)(v2 + 32);
                if (v18 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v18 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v5 = -1 << v18;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v5[v17];
              if (!v16)
              {
                while (1)
                {
                  v9 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_28;
                  if (v9 >= v8)
                    goto LABEL_22;
                  v16 = v5[v9];
                  ++v17;
                  if (v16)
                    goto LABEL_21;
                }
              }
              v9 = v17;
            }
          }
        }
LABEL_21:
        v7 = (v16 - 1) & v16;
        v11 = __clz(__rbit64(v16)) + (v9 << 6);
      }
      v12 = *(_QWORD *)(v2 + 48) + 72 * v11;
      v13 = *(_OWORD *)(v12 + 48);
      v19[2] = *(_OWORD *)(v12 + 32);
      v19[3] = v13;
      v20 = *(_QWORD *)(v12 + 64);
      v14 = *(_OWORD *)(v12 + 16);
      v19[0] = *(_OWORD *)v12;
      v19[1] = v14;
      sub_1A9329214((uint64_t)v19, v3);
    }
  }
  swift_release();
  *v1 = v3;
}

uint64_t sub_1A91C50E4(uint64_t a1)
{
  return sub_1A90A35D8(a1, &qword_1EEAB98F8);
}

uint64_t sub_1A91C50F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD *v33;

  v1 = v0;
  v2 = type metadata accessor for CategoryModel();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9908);
  v7 = sub_1A93F8C34();
  v8 = v7;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 1 << *(_BYTE *)(v6 + 32);
    v10 = *(_QWORD *)(v6 + 56);
    v33 = (_QWORD *)(v6 + 56);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & v10;
    v31 = v0;
    v32 = (unint64_t)(v9 + 63) >> 6;
    v13 = v7 + 56;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v32)
          goto LABEL_33;
        v20 = v33[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v32)
            goto LABEL_33;
          v20 = v33[v15];
          if (!v20)
          {
            v15 = v19 + 2;
            if (v19 + 2 >= v32)
              goto LABEL_33;
            v20 = v33[v15];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v31;
                v30 = 1 << *(_BYTE *)(v6 + 32);
                if (v30 > 63)
                  bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v30;
                *(_QWORD *)(v6 + 16) = 0;
                break;
              }
              v20 = v33[v21];
              if (!v20)
              {
                while (1)
                {
                  v15 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_39;
                  if (v15 >= v32)
                    goto LABEL_33;
                  v20 = v33[v15];
                  ++v21;
                  if (v20)
                    goto LABEL_23;
                }
              }
              v15 = v21;
            }
          }
        }
LABEL_23:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(_QWORD *)(v3 + 72);
      sub_1A915A7C8(*(_QWORD *)(v6 + 48) + v22 * v18, (uint64_t)v5);
      sub_1A93F92DC();
      sub_1A93F930C();
      sub_1A93F7FBC();
      result = sub_1A93F9324();
      v23 = -1 << *(_BYTE *)(v8 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        v16 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      result = sub_1A915A7C8((uint64_t)v5, *(_QWORD *)(v8 + 48) + v16 * v22);
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

uint64_t sub_1A91C542C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  _QWORD *v17;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9900);
  v3 = sub_1A93F8C34();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_27;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v17 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v16 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v7 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v16 > 1)
  {
    v8 = *(_QWORD *)(v2 + 64);
    v9 = 1;
    if (v8)
      goto LABEL_19;
    v9 = 2;
    if (v16 > 2)
    {
      v8 = *(_QWORD *)(v2 + 72);
      if (v8)
        goto LABEL_19;
      v9 = 3;
      if (v16 > 3)
      {
        v8 = *(_QWORD *)(v2 + 80);
        if (!v8)
        {
          v10 = 4;
          if (v16 > 4)
          {
            v8 = *(_QWORD *)(v2 + 88);
            if (v8)
            {
              v9 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v9 = v10 + 1;
              if (__OFADD__(v10, 1))
              {
                __break(1u);
                JUMPOUT(0x1A91C57E0);
              }
              if (v9 >= v16)
                break;
              v8 = v17[v9];
              ++v10;
              if (v8)
                goto LABEL_19;
            }
          }
          goto LABEL_23;
        }
LABEL_19:
        v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
        v11 = *(_QWORD *)(v2 + 48) + 16 * v7;
        v12 = *(unsigned __int8 *)(v11 + 8);
        v13 = *(unsigned __int8 *)(v11 + 9);
        sub_1A93F92DC();
        sub_1A93F92F4();
        if (v12 != 1)
          sub_1A93F930C();
        __asm { BR              X8 }
      }
    }
  }
LABEL_23:
  swift_release();
  v1 = v0;
  v14 = 1 << *(_BYTE *)(v2 + 32);
  if (v14 > 63)
    bzero(v17, ((unint64_t)(v14 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v17 = -1 << v14;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_27:
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_1A91C57F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98F0);
  v3 = sub_1A93F8C34();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_25;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v7)
  {
    v9 = __clz(__rbit64(v7));
    goto LABEL_20;
  }
  if (v8 > 1)
  {
    v10 = *(_QWORD *)(v2 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_19;
    v11 = 2;
    if (v8 > 2)
    {
      v10 = *(_QWORD *)(v2 + 72);
      if (v10)
        goto LABEL_19;
      v11 = 3;
      if (v8 > 3)
      {
        v10 = *(_QWORD *)(v2 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v8 > 4)
          {
            v10 = *(_QWORD *)(v2 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x1A91C5B44);
              }
              if (v11 >= v8)
                break;
              v10 = v5[v11];
              ++v12;
              if (v10)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_20:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v9);
        sub_1A93F92DC();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v1 = v0;
  v14 = 1 << *(_BYTE *)(v2 + 32);
  if (v14 > 63)
    bzero((void *)(v2 + 56), ((unint64_t)(v14 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v5 = -1 << v14;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_1A91C5B58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7E40);
  result = sub_1A93F8C34();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v29 = (_QWORD *)(v2 + 56);
    v6 = 1 << *(_BYTE *)(v2 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v6 + 63) >> 6;
    v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9)
          goto LABEL_33;
        v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v9)
            goto LABEL_33;
          v16 = v29[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v9)
              goto LABEL_33;
            v16 = v29[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v28;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v9)
                    goto LABEL_33;
                  v16 = v29[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v8 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(v2 + 48) + 16 * v14;
      v19 = *(_QWORD *)v18;
      v20 = *(_BYTE *)(v18 + 8);
      sub_1A93F92DC();
      sub_1A93F92E8();
      result = sub_1A93F9324();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 16 * v11;
      *(_QWORD *)v12 = v19;
      *(_BYTE *)(v12 + 8) = v20;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A91C5E44(uint64_t a1)
{
  return sub_1A90A35D8(a1, &qword_1EEAB98C0);
}

uint64_t sub_1A91C5E50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98E8);
  v3 = sub_1A93F8C34();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
      sub_1A93F92DC();
      sub_1A93F7FBC();
      swift_bridgeObjectRelease();
      result = sub_1A93F9324();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A91C6120()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98B0);
  v3 = sub_1A93F8C34();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v32 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v31 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if (v15 >= v31)
          goto LABEL_38;
        v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v31)
            goto LABEL_38;
          v16 = v32[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v31)
              goto LABEL_38;
            v16 = v32[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_38:
                swift_release();
                v1 = v0;
                v30 = 1 << *(_BYTE *)(v2 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_44;
                  if (v10 >= v31)
                    goto LABEL_38;
                  v16 = v32[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = *(_QWORD *)(v2 + 48) + 24 * v14;
      v20 = *(void **)v18;
      v19 = *(void **)(v18 + 8);
      v21 = *(unsigned __int8 *)(v18 + 16);
      sub_1A93F92DC();
      if (v21)
      {
        sub_1A93F92E8();
        if (v21 == 1)
        {
          sub_1A93F7FBC();
        }
        else
        {
          v22 = v20;
          sub_1A93F8A48();
          sub_1A9158B44(v20, v19, 2);
        }
      }
      else
      {
        sub_1A93F92E8();
        sub_1A93F930C();
      }
      result = sub_1A93F9324();
      v23 = -1 << *(_BYTE *)(v4 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
      *(_QWORD *)v12 = v20;
      *(_QWORD *)(v12 + 8) = v19;
      *(_BYTE *)(v12 + 16) = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A91C6480()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98E0);
  v3 = sub_1A93F8C34();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1A93F92DC();
      sub_1A93F9444();
      result = sub_1A93F9324();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_1A91C675C()
{
  unint64_t result;

  result = qword_1ED2A4260;
  if (!qword_1ED2A4260)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2A4260);
  }
  return result;
}

unint64_t *sub_1A91C6798(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  unint64_t *v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_1A91C6C2C((_QWORD *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v6 = sub_1A91C6C2C((unint64_t *)v7, v4, v2);
    swift_release();
    MEMORY[0x1AF41411C](v7, -1, -1);
  }
  return v6;
}

char *keypath_get_selector_adamID()
{
  return sel_adamID;
}

id sub_1A91C6900@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_adamID);
  *a2 = result;
  return result;
}

id sub_1A91C6930(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAdamID_, *a1);
}

char *keypath_get_selector_artworkPrimaryColor()
{
  return sel_artworkPrimaryColor;
}

void sub_1A91C6950(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1A91C40A8(a1, (SEL *)&selRef_artworkPrimaryColor, a2);
}

void sub_1A91C696C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1A91C4108(a1, a2, a3, a4, (SEL *)&selRef_setArtworkPrimaryColor_);
}

char *keypath_get_selector_artworkTemplateURL()
{
  return sel_artworkTemplateURL;
}

void sub_1A91C6994(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1A91C40A8(a1, (SEL *)&selRef_artworkTemplateURL, a2);
}

void sub_1A91C69B0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1A91C4108(a1, a2, a3, a4, (SEL *)&selRef_setArtworkTemplateURL_);
}

char *keypath_get_selector_color()
{
  return sel_color;
}

void sub_1A91C69D8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1A91C40A8(a1, (SEL *)&selRef_color, a2);
}

void sub_1A91C69F4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1A91C4108(a1, a2, a3, a4, (SEL *)&selRef_setColor_);
}

char *keypath_get_selector_name()
{
  return sel_name;
}

void sub_1A91C6A20(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_1A93F8010();
  objc_msgSend(v2, sel_setName_, v3);

}

char *keypath_get_selector_url()
{
  return sel_url;
}

void sub_1A91C6A7C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1A91C40A8(a1, (SEL *)&selRef_url, a2);
}

void sub_1A91C6A98(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1A91C4108(a1, a2, a3, a4, (SEL *)&selRef_setUrl_);
}

char *keypath_get_selector_interest()
{
  return sel_interest;
}

id sub_1A91C6AC0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_interest);
  *a2 = result;
  return result;
}

id sub_1A91C6AF8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setInterest_, *a1);
}

char *keypath_get_selector_podcasts()
{
  return sel_podcasts;
}

void sub_1A91C6B18(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1A91C4164(a1, (SEL *)&selRef_podcasts, (uint64_t (*)(uint64_t))sub_1A91C675C, (unint64_t *)&qword_1EEAB98A8, a2);
}

void sub_1A91C6B44(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1A91C41EC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1A91C675C, (unint64_t *)&qword_1EEAB98A8, (SEL *)&selRef_setPodcasts_);
}

char *keypath_get_selector_parent()
{
  return sel_parent;
}

id sub_1A91C6B7C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_parent);
  *a2 = result;
  return result;
}

id sub_1A91C6BB4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setParent_, *a1);
}

char *keypath_get_selector_children()
{
  return sel_children;
}

void sub_1A91C6BD4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1A91C4164(a1, (SEL *)&selRef_children, (uint64_t (*)(uint64_t))type metadata accessor for MTCategory, &qword_1EEAB98D8, a2);
}

void sub_1A91C6C00(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1A91C41EC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))type metadata accessor for MTCategory, &qword_1EEAB98D8, (SEL *)&selRef_setChildren_);
}

unint64_t *sub_1A91C6C2C(unint64_t *result, uint64_t a2, uint64_t a3)
{
  unint64_t *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v4 = result;
  v5 = 0;
  v6 = 0;
  v7 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_24;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_24;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    result = (unint64_t *)objc_msgSend(*(id *)(*(_QWORD *)(a3 + 48) + 8 * v13), sel_subscribed);
    if ((_DWORD)result)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_1A91F1AA8(v4, a2, v5, a3);
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    goto LABEL_24;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

const char *static FeedUpdatePhaseName.requestShowMetadata.getter()
{
  return "RequestShowMetadata";
}

const char *static FeedUpdatePhaseName.prepareForInitialEpisodesRequest.getter()
{
  return "PrepareForInitialEpisodesRequest";
}

const char *static FeedUpdatePhaseName.requestInitialEpisodes.getter()
{
  return "RequestInitialEpisodes";
}

const char *static FeedUpdatePhaseName.processShowMetadataAndInitialEpisodes.getter()
{
  return "ProcessShowMetadataAndInitialEpisodes";
}

const char *static FeedUpdatePhaseName.requestEpisodes.getter()
{
  return "RequestEpisodes";
}

const char *static FeedUpdatePhaseName.processEpisodes.getter()
{
  return "ProcessEpisodes";
}

const char *static FeedUpdatePhaseName.processingCompleted.getter()
{
  return "ProcessingCompleted";
}

ValueMetadata *type metadata accessor for FeedUpdatePhaseName()
{
  return &type metadata for FeedUpdatePhaseName;
}

uint64_t sub_1A91C6E60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v2 = sub_1A93F7EA8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9066CA8(&qword_1ED2AD1E8, v6, MEMORY[0x1E0CA9A58]);
  v7 = sub_1A93F81B4();
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1A908182C(0, v7 & ~(v7 >> 63), 0);
  v8 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  result = sub_1A93F81A8();
  if ((v7 & 0x8000000000000000) == 0)
  {
    v10 = v37;
    if (v7)
    {
      v11 = *(_QWORD *)(v36 + 16);
      v34 = v36;
      *(_QWORD *)&v35 = v11;
      v33 = v36 + 32;
      v32 = xmmword_1A9405520;
      v12 = v37;
      while ((_QWORD)v35 != v12)
      {
        if ((v10 & 0x8000000000000000) != 0)
          goto LABEL_21;
        if (v12 >= *(_QWORD *)(v34 + 16))
          goto LABEL_22;
        v13 = *(_BYTE *)(v33 + v12);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
        v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = v32;
        *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEDE70];
        *(_QWORD *)(v14 + 64) = MEMORY[0x1E0DEDEC8];
        *(_BYTE *)(v14 + 32) = v13;
        result = sub_1A93F8070();
        v15 = result;
        v17 = v16;
        v38 = v8;
        v19 = *(_QWORD *)(v8 + 16);
        v18 = *(_QWORD *)(v8 + 24);
        if (v19 >= v18 >> 1)
        {
          result = sub_1A908182C(v18 > 1, v19 + 1, 1);
          v8 = v38;
        }
        *(_QWORD *)(v8 + 16) = v19 + 1;
        v20 = v8 + 16 * v19;
        *(_QWORD *)(v20 + 32) = v15;
        *(_QWORD *)(v20 + 40) = v17;
        ++v12;
        if (!--v7)
        {
          v37 = v12;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    else
    {
      v12 = v37;
LABEL_12:
      v21 = v36;
      v22 = *(_QWORD *)(v36 + 16);
      if (v12 == v22)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return v8;
      }
      v35 = xmmword_1A9405520;
      while (v12 < v22)
      {
        v23 = *(_BYTE *)(v21 + 32 + v12);
        v37 = v12 + 1;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
        v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = v35;
        *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEDE70];
        *(_QWORD *)(v24 + 64) = MEMORY[0x1E0DEDEC8];
        *(_BYTE *)(v24 + 32) = v23;
        result = sub_1A93F8070();
        v25 = result;
        v27 = v26;
        v38 = v8;
        v29 = *(_QWORD *)(v8 + 16);
        v28 = *(_QWORD *)(v8 + 24);
        if (v29 >= v28 >> 1)
        {
          result = sub_1A908182C(v28 > 1, v29 + 1, 1);
          v8 = v38;
        }
        *(_QWORD *)(v8 + 16) = v29 + 1;
        v30 = v8 + 16 * v29;
        *(_QWORD *)(v30 + 32) = v25;
        *(_QWORD *)(v30 + 40) = v27;
        v12 = v37;
        v22 = *(_QWORD *)(v21 + 16);
        if (v37 == v22)
          goto LABEL_13;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t MediaStreamedAssetCache.sourceURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A91C7278(&OBJC_IVAR___PFMediaStreamedAssetCache_sourceURL, a1);
}

uint64_t MediaStreamedAssetCache.pathExtension.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___PFMediaStreamedAssetCache_pathExtension);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaStreamedAssetCache.cacheLocation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A91C7278(&OBJC_IVAR___PFMediaStreamedAssetCache_cacheLocation, a1);
}

uint64_t sub_1A91C7278@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *a1;
  v5 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t MediaStreamedAssetCache.purgeability.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + OBJC_IVAR___PFMediaStreamedAssetCache_purgeability);
}

id MediaStreamedAssetCache.__allocating_init(sourceURL:)(char *a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void (*v11)(char *, uint64_t);
  id v12;
  uint64_t v14;

  v3 = sub_1A93F726C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_allocWithZone(v1);
  v8 = (void *)sub_1A93F71A0();
  v9 = objc_msgSend((id)objc_opt_self(), sel_streamedMediaAssetURL);
  sub_1A93F7200();

  v10 = (void *)sub_1A93F71A0();
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  v12 = objc_msgSend(v7, sel_initWithSourceURL_cacheLocation_purgeability_, v8, v10, 512);

  v11(a1, v3);
  return v12;
}

id MediaStreamedAssetCache.init(sourceURL:)(char *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  void (*v11)(char *, uint64_t);
  id v12;
  uint64_t v14;

  v2 = v1;
  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)sub_1A93F71A0();
  v9 = objc_msgSend((id)objc_opt_self(), sel_streamedMediaAssetURL);
  sub_1A93F7200();

  v10 = (void *)sub_1A93F71A0();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  v12 = objc_msgSend(v2, sel_initWithSourceURL_cacheLocation_purgeability_, v8, v10, 512);

  v11(a1, v4);
  return v12;
}

uint64_t MediaStreamedAssetCache.__allocating_init(sourceURL:cacheLocation:purgeability:)(uint64_t a1, uint64_t a2, int a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return MediaStreamedAssetCache.init(sourceURL:cacheLocation:purgeability:)(a1, a2, a3);
}

uint64_t MediaStreamedAssetCache.persistentFileURL()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1A93F726C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F71B8();
  sub_1A93F71C4();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void MediaStreamedAssetCache.streamCacheURL()(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR___PFMediaStreamedAssetCache_phase);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1A91C7688(v4, v1, a1);
  os_unfair_lock_unlock(v5);
}

void sub_1A91C7688(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int EnumCaseMultiPayload;
  _BYTE *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t);
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  uint8_t *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v44 = a2;
  v42 = a3;
  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v35 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v35 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v35 - v15;
  v17 = type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A906E638(a1, (uint64_t)v19);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1A91C8E40();
      swift_allocError();
      *v21 = 0;
      swift_willThrow();
      sub_1A906E5B0((uint64_t)v19);
    }
    else
    {
      v31 = v43;
      sub_1A91C8E84();
      if (!v31)
      {
        sub_1A91C8698((uint64_t)v16);
        sub_1A906E5B0(a1);
        (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a1, v16, v4);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v42, v16, v4);
      }
    }
  }
  else
  {
    v41 = v7;
    v39 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v39(v13, v19, v4);
    if (qword_1ED2AD108 != -1)
      swift_once();
    v40 = a1;
    v22 = sub_1A93F7698();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED2AD0F0);
    v38 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v38(v10, v13, v4);
    v23 = sub_1A93F7674();
    v24 = sub_1A93F879C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v46 = v37;
      v36 = v25;
      *(_DWORD *)v25 = 136315138;
      v35[1] = v25 + 4;
      v26 = sub_1A93F714C();
      v45 = sub_1A906436C(v26, v27, &v46);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      v28(v10, v4);
      v29 = v36;
      _os_log_impl(&dword_1A904E000, v23, v24, "Attempting to start streaming to a cache location that's already actively streaming. Previously streaming to %s", v36, 0xCu);
      v30 = v37;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v30, -1, -1);
      MEMORY[0x1AF41411C](v29, -1, -1);
    }
    else
    {
      v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      v28(v10, v4);
    }

    v32 = v43;
    v33 = (uint64_t)v41;
    sub_1A91C8E84();
    if (!v32)
    {
      sub_1A91C8698(v33);
      v34 = v40;
      sub_1A906E5B0(v40);
      v38((char *)v34, (char *)v33, v4);
      swift_storeEnumTagMultiPayload();
      v39(v42, (char *)v33, v4);
    }
    v28(v13, v4);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MediaStreamedAssetCache.complete()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___PFMediaStreamedAssetCache_phase);
  v2 = v1 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v1 + 16);
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1A91C7C58(v2, v0);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1A91C7C58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  unsigned int v30;
  char *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  id v35;
  uint8_t *v36;
  uint8_t *v37;
  void *v38;
  unsigned int v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  unint64_t v47;
  char *v48;
  char *v49;
  char v50;
  _BYTE *v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  _BOOL4 v55;
  char *v56;
  id v57;
  uint8_t *v58;
  uint8_t *v59;
  id v60;
  id v61;
  char *v62;
  uint64_t v63;
  void *v64;
  void *v65;
  char *v66;
  unsigned int v67;
  int v68;
  id v69;
  uint64_t v70;
  id v71;
  _QWORD v72[2];
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  char *v76;
  uint64_t v77;
  id v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;

  v77 = a2;
  v81 = *MEMORY[0x1E0C80C00];
  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v72 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v72 - v12;
  v14 = type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A906E638(a1, (uint64_t)v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      if (qword_1ED2AD108 != -1)
        swift_once();
      v18 = sub_1A93F7698();
      __swift_project_value_buffer(v18, (uint64_t)qword_1ED2AD0F0);
      v19 = sub_1A93F7674();
      v20 = sub_1A93F879C();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_1A904E000, v19, v20, "Calling complete on a stream that has already completed. This is not an error, but is unexpected.", v21, 2u);
        MEMORY[0x1AF41411C](v21, -1, -1);
      }

      return sub_1A906E5B0((uint64_t)v16);
    }
    else
    {
      sub_1A91C8E40();
      swift_allocError();
      *v51 = 1;
      return swift_willThrow();
    }
  }
  v75 = v2;
  v76 = v13;
  v74 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v74(v13, v16, v4);
  v23 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1A93F71B8();
  sub_1A93F71C4();
  v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v7, v4);
  v25 = sub_1A93F7164();
  v27 = v26;
  swift_bridgeObjectRelease();
  v28 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000) == 0)
    v28 = v25 & 0xFFFFFFFFFFFFLL;
  if (v28)
  {
    sub_1A93F7224();
    v29 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v30 = objc_msgSend(v23, sel_fileExistsAtPath_, v29);

    v72[1] = v14;
    v73 = a1;
    v31 = v76;
    if (v30)
    {
      if (qword_1ED2AD108 != -1)
        swift_once();
      v32 = sub_1A93F7698();
      __swift_project_value_buffer(v32, (uint64_t)qword_1ED2AD0F0);
      v33 = sub_1A93F7674();
      v34 = sub_1A93F8784();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = v23;
        v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v36 = 0;
        _os_log_impl(&dword_1A904E000, v33, v34, "Asset at URL was previously streamed. Overwriting with new data", v36, 2u);
        v37 = v36;
        v23 = v35;
        MEMORY[0x1AF41411C](v37, -1, -1);
      }

      v38 = (void *)sub_1A93F71A0();
      *(_QWORD *)&v79 = 0;
      v39 = objc_msgSend(v23, sel_removeItemAtURL_error_, v38, &v79);

      if (!v39)
      {
        v61 = (id)v79;
        sub_1A93F7128();

        goto LABEL_30;
      }
      v40 = (id)v79;
    }
    sub_1A93F7224();
    v41 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v78 = 0;
    v42 = objc_msgSend(v23, sel_attributesOfItemAtPath_error_, v41, &v78);

    v43 = v78;
    if (v42)
    {
      v76 = (char *)v23;
      type metadata accessor for FileAttributeKey(0);
      sub_1A9066CA8((unint64_t *)&unk_1ED2A93F8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1A940545C);
      v44 = sub_1A93F7EFC();
      v45 = v43;

      if (*(_QWORD *)(v44 + 16))
      {
        v46 = (id)*MEMORY[0x1E0CB2AF0];
        v47 = sub_1A912E5B4((uint64_t)v46);
        v48 = v76;
        v49 = v31;
        if ((v50 & 1) != 0)
        {
          sub_1A906443C(*(_QWORD *)(v44 + 56) + 32 * v47, (uint64_t)&v79);
        }
        else
        {
          v79 = 0u;
          v80 = 0u;
        }

      }
      else
      {
        v79 = 0u;
        v80 = 0u;
        v48 = v76;
        v49 = v31;
      }
      v63 = v73;
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v80 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0 && v78)
        {
          v64 = (void *)sub_1A93F71A0();
          v65 = (void *)sub_1A93F71A0();
          *(_QWORD *)&v79 = 0;
          v66 = v48;
          v67 = objc_msgSend(v48, sel_moveItemAtURL_toURL_error_, v64, v65, &v79);

          if (v67)
          {
            v68 = *(_DWORD *)(v77 + OBJC_IVAR___PFMediaStreamedAssetCache_purgeability);
            v69 = (id)v79;
            v70 = v75;
            sub_1A92B7958(v68);
            if (!v70)
            {

              sub_1A906E5B0(v63);
              v24(v49, v4);
              v74((char *)v63, v10, v4);
              return swift_storeEnumTagMultiPayload();
            }

          }
          else
          {
            v71 = (id)v79;
            sub_1A93F7128();

            swift_willThrow();
          }
        }
        else
        {

        }
      }
      else
      {

        sub_1A905FD54((uint64_t)&v79, qword_1ED2AC800);
      }
      v24(v10, v4);
      v62 = v49;
      return ((uint64_t (*)(char *, uint64_t))v24)(v62, v4);
    }
    v60 = v78;
    sub_1A93F7128();

LABEL_30:
    swift_willThrow();

    v24(v10, v4);
    v62 = v31;
    return ((uint64_t (*)(char *, uint64_t))v24)(v62, v4);
  }
  if (qword_1ED2AD108 != -1)
    swift_once();
  v52 = sub_1A93F7698();
  __swift_project_value_buffer(v52, (uint64_t)qword_1ED2AD0F0);
  v53 = sub_1A93F7674();
  v54 = sub_1A93F879C();
  v55 = os_log_type_enabled(v53, v54);
  v56 = v76;
  if (v55)
  {
    v57 = v23;
    v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v58 = 0;
    _os_log_impl(&dword_1A904E000, v53, v54, "Asset at URL does not have a valid path extension. Skipping cache.", v58, 2u);
    v59 = v58;
    v23 = v57;
    MEMORY[0x1AF41411C](v59, -1, -1);
  }

  v24(v10, v4);
  return ((uint64_t (*)(char *, uint64_t))v24)(v56, v4);
}

BOOL static MediaStreamedAssetCache.StreamCacheError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MediaStreamedAssetCache.StreamCacheError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t MediaStreamedAssetCache.StreamCacheError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A91C8698@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a1;
  v1 = sub_1A93F73E0();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v24 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A93F726C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v23 - v14;
  v16 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v17 = objc_msgSend(v16, sel_temporaryDirectory);

  sub_1A93F7200();
  sub_1A93F71B8();
  v18 = *(void (**)(char *, uint64_t))(v4 + 8);
  v18(v6, v3);
  v19 = v28;
  sub_1A91C8E84();
  if (v19)
  {
    v20 = v9;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v12, v9, v3);
    v21 = v24;
    sub_1A93F73D4();
    sub_1A93F73A4();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v26);
    sub_1A93F71AC();
    swift_bridgeObjectRelease();
    v18(v12, v3);
    sub_1A93F71C4();
    v20 = v15;
  }
  return ((uint64_t (*)(char *, uint64_t))v18)(v20, v3);
}

id MediaStreamedAssetCache.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MediaStreamedAssetCache.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MediaStreamedAssetCache.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1A91C8994()
{
  unint64_t result;

  result = qword_1EEAB9930;
  if (!qword_1EEAB9930)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaStreamedAssetCache.StreamCacheError, &type metadata for MediaStreamedAssetCache.StreamCacheError);
    atomic_store(result, (unint64_t *)&qword_1EEAB9930);
  }
  return result;
}

uint64_t method lookup function for MediaStreamedAssetCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MediaStreamedAssetCache.__allocating_init(sourceURL:cacheLocation:purgeability:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t storeEnumTagSinglePayload for MediaStreamedAssetCache.StreamCacheError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A91C8A38 + 4 * byte_1A940DB45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A91C8A6C + 4 * asc_1A940DB40[v4]))();
}

uint64_t sub_1A91C8A6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91C8A74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91C8A7CLL);
  return result;
}

uint64_t sub_1A91C8A88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91C8A90);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A91C8A94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91C8A9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaStreamedAssetCache.StreamCacheError()
{
  return &type metadata for MediaStreamedAssetCache.StreamCacheError;
}

uint64_t *sub_1A91C8AB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v7 = sub_1A93F726C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1A91C8BA4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1A906E5B0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1A93F726C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_1A91C8C78(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1A93F726C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1A91C8D3C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1A906E5B0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1A93F726C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1A91C8E10(uint64_t a1)
{
  uint64_t v1;

  return sub_1A91C7C58(a1, *(_QWORD *)(v1 + 16));
}

void sub_1A91C8E28(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  sub_1A91C7688(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1A91C8E40()
{
  unint64_t result;

  result = qword_1EEAB9A18;
  if (!qword_1EEAB9A18)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaStreamedAssetCache.StreamCacheError, &type metadata for MediaStreamedAssetCache.StreamCacheError);
    atomic_store(result, (unint64_t *)&qword_1EEAB9A18);
  }
  return result;
}

void sub_1A91C8E84()
{
  id v0;
  void *v1;
  unsigned __int8 v2;
  void *v3;
  unsigned int v4;
  void *v5;
  unsigned int v6;
  id v7;
  id v8;
  void *v9;
  unsigned int v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1A93F7224();
  LOBYTE(v13) = 1;
  v1 = (void *)sub_1A93F8010();
  v2 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v1, &v13);
  swift_bridgeObjectRelease();

  if ((v2 & 1) == 0)
  {
    sub_1A93F7224();
    v3 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(v0, sel_fileExistsAtPath_, v3, v13, v14);

    if (v4)
    {
      v5 = (void *)sub_1A93F71A0();
      v13 = 0;
      v6 = objc_msgSend(v0, sel_removeItemAtURL_error_, v5, &v13);

      v7 = v13;
      if (!v6)
        goto LABEL_7;
      v8 = v13;
    }
    v9 = (void *)sub_1A93F71A0();
    v13 = 0;
    v10 = objc_msgSend(v0, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v9, 1, 0, &v13);

    v7 = v13;
    if (v10)
    {
      v11 = v13;
      goto LABEL_8;
    }
LABEL_7:
    v12 = v7;
    sub_1A93F7128();

    swift_willThrow();
  }
LABEL_8:

}

uint64_t dispatch thunk of SubscriptionConfirmationSheetHandlerProtocol.presentSubscriptionConfirmation(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

id ContentKeyRequest.__allocating_init(from:adamId:requestType:offlineRequest:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  objc_class *v5;
  id v9;
  void *v10;
  id v11;

  v9 = objc_allocWithZone(v5);
  v10 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initFrom_adamId_requestType_offlineRequest_, a1, v10, a4, a5 & 1);

  return v11;
}

id ContentKeyRequest.init(from:adamId:requestType:offlineRequest:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  void *v5;
  void *v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  void *v34;
  _QWORD v36[2];
  int v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  _QWORD v43[3];
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;

  v6 = v5;
  v37 = a5;
  v38 = a4;
  v36[1] = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F726C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_identifier, v13))
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
    v16 = v40;
    v17 = __swift_project_boxed_opaque_existential_1(v39, v40);
    *((_QWORD *)&v42 + 1) = v16;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v41);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(boxed_opaque_existential_1, v17, v16);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
  }
  else
  {
    v41 = 0u;
    v42 = 0u;
  }
  sub_1A91C9540((uint64_t)&v41, (uint64_t)v43);
  v19 = v44;
  if (!v44)
  {
    sub_1A905FD54((uint64_t)v43, &qword_1EEAB9A20);
    v45 = 0u;
    v46 = 0u;
    goto LABEL_9;
  }
  v20 = __swift_project_boxed_opaque_existential_1(v43, v44);
  *((_QWORD *)&v46 + 1) = v19;
  v21 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v45);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v21, v20, v19);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
  if (!*((_QWORD *)&v46 + 1))
  {
LABEL_9:
    sub_1A905FD54((uint64_t)&v45, qword_1ED2AC800);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    v47 = 0;
    v48 = 0;
  }
  if (objc_msgSend(a1, sel_identifier))
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
    v22 = v40;
    v23 = __swift_project_boxed_opaque_existential_1(v39, v40);
    *((_QWORD *)&v42 + 1) = v22;
    v24 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v41);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v24, v23, v22);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
  }
  else
  {
    v41 = 0u;
    v42 = 0u;
  }
  sub_1A91C9540((uint64_t)&v41, (uint64_t)v43);
  v25 = v44;
  if (!v44)
  {
    sub_1A905FD54((uint64_t)v43, &qword_1EEAB9A20);
    v45 = 0u;
    v46 = 0u;
    goto LABEL_20;
  }
  v26 = __swift_project_boxed_opaque_existential_1(v43, v44);
  *((_QWORD *)&v46 + 1) = v25;
  v27 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v45);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v27, v26, v25);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
  if (!*((_QWORD *)&v46 + 1))
  {
LABEL_20:
    sub_1A905FD54((uint64_t)&v45, qword_1ED2AC800);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_21:
    sub_1A905FD54((uint64_t)v10, &qword_1ED2AD3D0);
    if (!v48)
      goto LABEL_18;
LABEL_22:
    swift_bridgeObjectRetain();
    v33 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v34 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v32 = objc_msgSend(v6, sel_initWithKeyIdentifier_adamId_requestType_offlineRequest_secureInvalidationDsid_, v33, v34, v38, v37 & 1, 0);

    swift_bridgeObjectRelease();
    return v32;
  }
  v28 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, v28 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    goto LABEL_21;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
  v29 = sub_1A93F7170();
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v47 = v29;
  v48 = v31;
  swift_bridgeObjectRelease();
  if (v48)
    goto LABEL_22;
LABEL_18:
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1A91C9540(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A91C95EC(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1A929E454(0, v2, 0);
    result = v9;
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v6 = *v4++;
      v5 = v6;
      v10 = result;
      v8 = *(_QWORD *)(result + 16);
      v7 = *(_QWORD *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1A929E454(v7 > 1, v8 + 1, 1);
        result = v10;
      }
      *(_QWORD *)(result + 16) = v8 + 1;
      *(_QWORD *)(result + 8 * v8 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

unint64_t sub_1A91C96A8(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C20);
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C18);
  v9 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v26 = (uint64_t)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v24 = (uint64_t)v23 - v12;
  if (a1 >> 62)
    goto LABEL_18;
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain();
  for (; v13; v13 = sub_1A93F8E5C())
  {
    v23[1] = a2;
    v23[2] = v3;
    v14 = MEMORY[0x1E0DEE9D8];
    v25 = a1 & 0xC000000000000001;
    v15 = 4;
    v16 = a1;
    while (1)
    {
      v3 = v15 - 4;
      v18 = v25 ? (id)MEMORY[0x1AF4129DC](v15 - 4, a1) : *(id *)(a1 + 8 * v15);
      a2 = v18;
      a1 = v15 - 3;
      if (__OFADD__(v3, 1))
        break;
      sub_1A91CB70C(v18, v8);

      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v27) == 1)
      {
        sub_1A905FD54((uint64_t)v8, &qword_1ED2A5C20);
      }
      else
      {
        v19 = v24;
        sub_1A9062F08((uint64_t)v8, v24, &qword_1ED2A5C18);
        sub_1A9062F08(v19, v26, &qword_1ED2A5C18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v14 = sub_1A9118C24(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
        v21 = *(_QWORD *)(v14 + 16);
        v20 = *(_QWORD *)(v14 + 24);
        if (v21 >= v20 >> 1)
          v14 = sub_1A9118C24(v20 > 1, v21 + 1, 1, v14);
        *(_QWORD *)(v14 + 16) = v21 + 1;
        sub_1A9062F08(v26, v14+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v21, &qword_1ED2A5C18);
      }
      ++v15;
      v17 = a1 == v13;
      a1 = v16;
      if (v17)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_18:
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v14 = MEMORY[0x1E0DEE9D8];
LABEL_20:
  swift_release_n();
  return v14;
}

double sub_1A91C9968@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1A93F7AE8();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1A91C99EC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1A93F7AF4();
}

uint64_t sub_1A91C9A78()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1A93F7AE8();
  swift_release();
  return swift_release();
}

uint64_t sub_1A91C9AE4()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB78);
  sub_1A93F7AD0();
  return swift_endAccess();
}

uint64_t sub_1A91C9B48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, double);
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB70);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB78);
  sub_1A93F7ADC();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_1A91C9C58()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB78);
  sub_1A93F7AD0();
  return swift_endAccess();
}

uint64_t MediaSpaceCalculator.mediaPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_mediaPath;
  v4 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaSpaceCalculator.__allocating_init(mediaPath:calculationQueue:managedObjectContext:notificationCenter:fileManager:)(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  MediaSpaceCalculator.init(mediaPath:calculationQueue:managedObjectContext:notificationCenter:fileManager:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t MediaSpaceCalculator.init(mediaPath:calculationQueue:managedObjectContext:notificationCenter:fileManager:)(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;

  v6 = v5;
  v66 = a5;
  v79 = a4;
  v52 = a2;
  v76 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v10);
  v67 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1A93F8850();
  v72 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v63 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A93F8988();
  v54 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v52 - v17;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABA48);
  v56 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB968);
  v58 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB9C0);
  v62 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v53 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABA28);
  v25 = *(_QWORD *)(v24 - 8);
  v68 = v24;
  v69 = v25;
  MEMORY[0x1E0C80A78](v24);
  v59 = (char *)&v52 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABA18);
  v28 = *(_QWORD *)(v27 - 8);
  v70 = v27;
  v71 = v28;
  MEMORY[0x1E0C80A78](v27);
  v64 = (char *)&v52 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB840);
  v78 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v65 = (char *)&v52 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_observerSink) = 0;
  v31 = v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_mediaPath;
  v75 = sub_1A93F726C();
  v77 = *(_QWORD *)(v75 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16))(v31, a1, v75);
  swift_beginAccess();
  v82 = 0;
  v80 = 0u;
  v81 = 0u;
  sub_1A93F7AC4();
  swift_endAccess();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_managedObjectContext) = a3;
  sub_1A905DC3C(a5, v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_fileManager);
  v32 = v52;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_workQueue) = v52;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9110);
  swift_allocObject();
  v61 = a3;
  v33 = v32;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_requestSubject) = sub_1A93F798C();
  sub_1A93F8994();
  sub_1A93F8994();
  sub_1A9066CA8((unint64_t *)&qword_1ED2A41D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  sub_1A93F7BCC();
  v34 = *(void (**)(char *, uint64_t))(v54 + 8);
  v34(v15, v13);
  v34(v18, v13);
  sub_1A9066D74(&qword_1ED2ABA40, &qword_1ED2ABA48, MEMORY[0x1E0C95C80]);
  v35 = v55;
  sub_1A93F7B84();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v20, v35);
  *(_QWORD *)&v80 = *(_QWORD *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_requestSubject);
  sub_1A9066D74(&qword_1ED2AB960, &qword_1ED2AB968, MEMORY[0x1E0C95950]);
  sub_1A9066D74(&qword_1ED2A9108, &qword_1ED2A9110, MEMORY[0x1E0C95F48]);
  v36 = v53;
  v37 = v57;
  sub_1A93F7BC0();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v22, v37);
  v38 = v63;
  sub_1A93F8838();
  *(_QWORD *)&v80 = v33;
  v39 = v33;
  v40 = sub_1A93F882C();
  v41 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v67, 1, 1, v40);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1ED2AB9B8, &qword_1ED2AB9C0, MEMORY[0x1E0C95A60]);
  sub_1A905FD90();
  v42 = v59;
  v43 = v60;
  sub_1A93F7C8C();
  sub_1A905FD54(v41, &qword_1ED2A1C88);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v38, v74);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v36, v43);
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = sub_1A91CA5D0;
  *(_QWORD *)(v44 + 24) = v6;
  swift_retain();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB9B0);
  sub_1A9066D74(&qword_1ED2ABA20, &qword_1ED2ABA28, MEMORY[0x1E0C95BB0]);
  sub_1A9066D74(&qword_1ED2AB9A8, &qword_1ED2AB9B0, MEMORY[0x1E0C959F8]);
  v45 = v64;
  v46 = v68;
  sub_1A93F7D34();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v46);
  sub_1A9066D74(&qword_1ED2ABA10, &qword_1ED2ABA18, MEMORY[0x1E0C95B78]);
  v47 = v65;
  v48 = v70;
  sub_1A93F7B30();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v45, v48);
  swift_getKeyPath();
  *(_QWORD *)&v80 = v6;
  sub_1A9066D74(&qword_1ED2AB838, &qword_1ED2AB840, MEMORY[0x1E0C95708]);
  v49 = v73;
  v50 = sub_1A93F7D10();

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v66);
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v75);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v49);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_observerSink) = v50;
  swift_release();
  return v6;
}

uint64_t sub_1A91CA5D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91CA5F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

__n128 sub_1A91CA618@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  __n128 result;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_BYTE *)(a1 + 40);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 32) = v2;
  *(_BYTE *)(a2 + 40) = v3;
  return result;
}

uint64_t sub_1A91CA634()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9110);
  sub_1A9066D74(&qword_1ED2A9100, &qword_1ED2A9110, MEMORY[0x1E0C95F40]);
  return sub_1A93F7AA0();
}

uint64_t sub_1A91CA698@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;

  v2 = v1;
  v40 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5A18);
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A59E0);
  v35 = *(_QWORD *)(v9 - 8);
  v36 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA418);
  v38 = *(_QWORD *)(v12 - 8);
  v39 = v12;
  MEMORY[0x1E0C80A78](v12);
  v37 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v14 = sub_1A93F7698();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A3F08);
  v15 = sub_1A93F7674();
  v16 = sub_1A93F8784();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_1A904E000, v15, v16, "Attempting to recompute media storage distribution", v17, 2u);
    MEMORY[0x1AF41411C](v17, -1, -1);
  }

  v18 = sub_1A93F726C();
  swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v19, v2 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_mediaPath, v18);
  v20 = *(void **)(v2 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_managedObjectContext);
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v20;
  v21[3] = sub_1A91CDBC0;
  v21[4] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5A70);
  swift_allocObject();
  swift_retain();
  v22 = v20;
  v23 = sub_1A93F7A94();
  v41 = *(id *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_workQueue);
  v24 = v41;
  v42 = v23;
  v25 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v5, 1, 1, v25);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1ED2A5A68, &qword_1ED2A5A70, MEMORY[0x1E0C96108]);
  sub_1A905FD90();
  v26 = v24;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v5, &qword_1ED2A1C88);

  swift_release();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_1A91CDC10;
  *(_QWORD *)(v27 + 24) = v2;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5AE0);
  sub_1A9066D74(&qword_1ED2A5A10, &qword_1ED2A5A18, MEMORY[0x1E0C95CB8]);
  v28 = v34;
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v28);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB190);
  v29 = v36;
  v30 = v37;
  sub_1A93F7824();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB48);
  sub_1A9066D74(&qword_1ED2AB9D8, &qword_1ED2AA418, MEMORY[0x1E0C95B48]);
  sub_1A9066D74(&qword_1ED2ABB40, &qword_1ED2ABB48, MEMORY[0x1E0C960B0]);
  v31 = v39;
  sub_1A93F7BB4();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v31);
  return swift_release();
}

void sub_1A91CAB64(uint64_t *a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t v4;

  v3 = sub_1A91CD4D0();
  sub_1A9072534(0, &qword_1ED2A9390);
  v4 = sub_1A93F89DC();

  if (!v1)
    *a1 = v4;
}

uint64_t sub_1A91CABD8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t inited;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t result;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a2;
  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1A93F7074();
  v8 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *a1;
  v11 = swift_projectBox();
  swift_beginAccess();
  sub_1A93F71E8();
  swift_endAccess();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A44A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405950;
  v13 = (void *)*MEMORY[0x1E0C99CF0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0C99CF0];
  v14 = (void *)*MEMORY[0x1E0C99BB8];
  *(_QWORD *)(inited + 40) = *MEMORY[0x1E0C99BB8];
  v15 = v13;
  v16 = v14;
  v17 = sub_1A9133D84(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1A93F717C();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return swift_bridgeObjectRelease();
  }
  v30 = v8;
  v19 = v32;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  v20 = sub_1A93F7050();
  if ((v21 & 1) != 0)
    v22 = 0;
  else
    v22 = v20;
  if (v22 < 0)
    goto LABEL_9;
  v23 = sub_1A93F705C();
  v7 = v19;
  v17 = v30;
  if ((v24 & 1) != 0)
  {
LABEL_10:
    v25 = 0;
    goto LABEL_11;
  }
  v25 = v23;
  if (v23 < 0)
  {
LABEL_9:
    sub_1A93F8E08();
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  sub_1A91CAEBC((uint64_t)&unk_1E54D6F50, &v36);
  v26 = v36;
  sub_1A91CAEBC((uint64_t)&unk_1E54D6F90, &v35);
  v27 = v35;
  sub_1A91CAEBC((uint64_t)&unk_1E54D6FC0, &v34);
  result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v10, v31);
  v28 = v34;
  *(_QWORD *)v7 = v22;
  *((_QWORD *)v7 + 1) = v25;
  *((_QWORD *)v7 + 2) = v26;
  *((_QWORD *)v7 + 3) = v27;
  *((_QWORD *)v7 + 4) = v28;
  v7[40] = 0;
  return result;
}

uint64_t sub_1A91CAEBC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD v22[4];

  v3 = sub_1A91C95EC(a1);
  v4 = sub_1A915A2DC(v3);
  swift_bridgeObjectRelease();
  v22[2] = v4;
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1A91CD7FC(v5, (uint64_t (*)(uint64_t, uint64_t *))sub_1A91CDC6C, (uint64_t)v22);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v8 = 0;
  v9 = 0;
  v10 = v6 + 64;
  v11 = 1 << *(_BYTE *)(v6 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v6 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  do
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v8 << 6);
    }
    else
    {
      v19 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_27;
      if (v19 >= v14)
      {
LABEL_25:
        result = swift_release();
        *a2 = v9;
        return result;
      }
      v20 = *(_QWORD *)(v10 + 8 * v19);
      ++v8;
      if (!v20)
      {
        v8 = v19 + 1;
        if (v19 + 1 >= v14)
          goto LABEL_25;
        v20 = *(_QWORD *)(v10 + 8 * v8);
        if (!v20)
        {
          v8 = v19 + 2;
          if (v19 + 2 >= v14)
            goto LABEL_25;
          v20 = *(_QWORD *)(v10 + 8 * v8);
          if (!v20)
          {
            v8 = v19 + 3;
            if (v19 + 3 >= v14)
              goto LABEL_25;
            v20 = *(_QWORD *)(v10 + 8 * v8);
            if (!v20)
            {
              v8 = v19 + 4;
              if (v19 + 4 >= v14)
                goto LABEL_25;
              v20 = *(_QWORD *)(v10 + 8 * v8);
              if (!v20)
              {
                v21 = v19 + 5;
                if (v21 >= v14)
                  goto LABEL_25;
                v20 = *(_QWORD *)(v10 + 8 * v21);
                if (!v20)
                {
                  while (1)
                  {
                    v8 = v21 + 1;
                    if (__OFADD__(v21, 1))
                      goto LABEL_28;
                    if (v8 >= v14)
                      goto LABEL_25;
                    v20 = *(_QWORD *)(v10 + 8 * v8);
                    ++v21;
                    if (v20)
                      goto LABEL_24;
                  }
                }
                v8 = v21;
              }
            }
          }
        }
      }
LABEL_24:
      v13 = (v20 - 1) & v20;
      v16 = __clz(__rbit64(v20)) + (v8 << 6);
    }
    v17 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v16);
    v18 = __CFADD__(v9, v17);
    v9 += v17;
  }
  while (!v18);
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A91CB07C(void **a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  _OWORD v13[2];
  uint64_t v14;
  char v15;

  v1 = *a1;
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v2 = sub_1A93F7698();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A3F08);
  v3 = v1;
  v4 = v1;
  v5 = sub_1A93F7674();
  v6 = sub_1A93F879C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_QWORD *)&v13[0] = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    v10 = sub_1A93F8094();
    sub_1A906436C(v10, v11, (uint64_t *)v13);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A904E000, v5, v6, "Encountered error while computing space distribution values: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v8, -1, -1);
    MEMORY[0x1AF41411C](v7, -1, -1);
  }
  else
  {

  }
  v14 = 0;
  memset(v13, 0, sizeof(v13));
  v15 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AB190);
  return sub_1A93F7A58();
}

uint64_t sub_1A91CB274(unint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;

  swift_retain();
  v4 = sub_1A91C96A8(a1, v1);
  v5 = sub_1A91CD358(v4, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))sub_1A91CDBA8);
  swift_bridgeObjectRelease();
  if (v2)
    return (uint64_t)v1;
  v6 = v5[2];
  if (!v6)
  {
    v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_17:
    swift_bridgeObjectRelease();
    return (uint64_t)v1;
  }
  swift_bridgeObjectRetain();
  v7 = v5 + 5;
  v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v9 = *(v7 - 1);
    v8 = *v7;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = sub_1A906C424(v9);
    v13 = v1[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      break;
    v16 = v11;
    if (v1[3] >= v15)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1A9308C44();
    }
    else
    {
      sub_1A9300D84(v15, isUniquelyReferenced_nonNull_native);
      v17 = sub_1A906C424(v9);
      if ((v16 & 1) != (v18 & 1))
        goto LABEL_22;
      v12 = v17;
    }
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      v1[(v12 >> 6) + 8] |= 1 << v12;
      v19 = 8 * v12;
      *(_QWORD *)(v1[6] + v19) = v9;
      *(_QWORD *)(v1[7] + v19) = 0;
      v20 = v1[2];
      v21 = __OFADD__(v20, 1);
      v22 = v20 + 1;
      if (v21)
        goto LABEL_21;
      v1[2] = v22;
    }
    v23 = v1[7];
    v24 = *(_QWORD *)(v23 + 8 * v12);
    v25 = __CFADD__(v24, v8);
    v26 = v24 + v8;
    if (v25)
      goto LABEL_20;
    v7 += 2;
    *(_QWORD *)(v23 + 8 * v12) = v26;
    if (!--v6)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

void sub_1A91CB450(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;

  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A91CBAA0(a2, &v27);
  if (!v3)
  {
    if (v28 == 1)
    {
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
      *(_BYTE *)(a3 + 16) = 1;
    }
    else
    {
      v26 = v27;
      if (qword_1ED2A3F28 != -1)
        swift_once();
      v11 = sub_1A93F7698();
      __swift_project_value_buffer(v11, (uint64_t)qword_1ED2A3F08);
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
      v12 = sub_1A93F7674();
      v13 = sub_1A93F8784();
      v14 = v13;
      if (os_log_type_enabled(v12, v13))
      {
        v15 = swift_slowAlloc();
        v25 = a1;
        v16 = v15;
        v24 = swift_slowAlloc();
        v27 = v24;
        *(_DWORD *)v16 = 136315650;
        v22[1] = v16 + 4;
        sub_1A9066CA8(qword_1ED2ABE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
        v23 = v14;
        v17 = sub_1A93F9060();
        v29 = sub_1A906436C(v17, v18, (uint64_t *)&v27);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        *(_WORD *)(v16 + 12) = 2048;
        v19 = v26;
        v29 = v26 >> 20;
        sub_1A93F8AA8();
        *(_WORD *)(v16 + 22) = 2048;
        v29 = v19;
        sub_1A93F8AA8();
        _os_log_impl(&dword_1A904E000, v12, (os_log_type_t)v23, "Found downloaded file at %s with size: %llu MB (%lluB)", (uint8_t *)v16, 0x20u);
        v20 = v24;
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v20, -1, -1);
        v21 = v16;
        a1 = v25;
        MEMORY[0x1AF41411C](v21, -1, -1);

      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

        v19 = v26;
      }
      *(_QWORD *)a3 = a1;
      *(_QWORD *)(a3 + 8) = v19;
      *(_BYTE *)(a3 + 16) = 0;
    }
  }
}

uint64_t sub_1A91CB70C@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t *v16;
  char *v17;
  uint64_t v18;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[24];
  uint64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v26 = sub_1A93F8040();
  *((_QWORD *)&v26 + 1) = v11;
  swift_bridgeObjectRetain();
  v12 = objc_msgSend(a1, sel___swift_objectForKeyedSubscript_, sub_1A93F9228());
  swift_unknownObjectRelease();
  if (v12)
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  sub_1A9062F08((uint64_t)&v26, (uint64_t)v28, qword_1ED2AC800);
  if (!v29)
  {
    swift_bridgeObjectRelease();
    sub_1A905FD54((uint64_t)v28, qword_1ED2AC800);
LABEL_18:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C18);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v23[0] = v24;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v26 = sub_1A93F8040();
  *((_QWORD *)&v26 + 1) = v13;
  swift_bridgeObjectRetain();
  v14 = objc_msgSend(a1, sel___swift_objectForKeyedSubscript_, sub_1A93F9228());
  swift_unknownObjectRelease();
  if (v14)
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  sub_1A9062F08((uint64_t)&v26, (uint64_t)v28, qword_1ED2AC800);
  if (!v29)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = qword_1ED2AC800;
    v17 = v28;
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v15 = v24;
  swift_bridgeObjectRelease();
  sub_1A93F7248();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v16 = &qword_1ED2AD3D0;
    v17 = v6;
LABEL_16:
    sub_1A905FD54((uint64_t)v17, v16);
    goto LABEL_18;
  }
  v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v20(v10, v6, v7);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C18);
  v22 = (char *)a2 + *(int *)(v21 + 48);
  *a2 = v15;
  v20(v22, v10, v7);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 0, 1, v21);
}

void sub_1A91CBAA0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  id v28;
  id v29;
  id v30;
  _QWORD *v31;
  uint8_t *v32;
  _QWORD *v33;
  id v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v33 = a2;
  v37 = *MEMORY[0x1E0C80C00];
  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_fileManager + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_fileManager), *(_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_fileManager + 24));
  v9 = sub_1A93F7224();
  v10 = (*(uint64_t (**)(uint64_t))(v8 + 32))(v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_1A93F7224();
    v12 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v35 = 0;
    v13 = objc_msgSend(v11, sel_attributesOfItemAtPath_error_, v12, &v35);

    v14 = (void *)v35;
    if (!v13)
    {
      v29 = (id)v35;
      sub_1A93F7128();

      swift_willThrow();
      return;
    }
    type metadata accessor for FileAttributeKey(0);
    sub_1A9066CA8((unint64_t *)&unk_1ED2A93F8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1A940545C);
    v15 = sub_1A93F7EFC();
    v16 = v14;

    if (*(_QWORD *)(v15 + 16))
    {
      v17 = (id)*MEMORY[0x1E0CB2AF0];
      v18 = sub_1A912E5B4((uint64_t)v17);
      if ((v19 & 1) != 0)
      {
        sub_1A906443C(*(_QWORD *)(v15 + 56) + 32 * v18, (uint64_t)&v35);
      }
      else
      {
        v35 = 0u;
        v36 = 0u;
      }

    }
    else
    {
      v35 = 0u;
      v36 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v36 + 1))
    {
      sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v30 = v34;
        v28 = objc_msgSend(v34, sel_unsignedLongLongValue);

        v27 = 0;
        goto LABEL_20;
      }
    }
    else
    {
      sub_1A905FD54((uint64_t)&v35, qword_1ED2AC800);
    }
LABEL_19:
    v28 = 0;
    v27 = 1;
    goto LABEL_20;
  }
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v20 = sub_1A93F7698();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED2A3F08);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v21 = sub_1A93F7674();
  v22 = sub_1A93F879C();
  if (!os_log_type_enabled(v21, v22))
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    goto LABEL_19;
  }
  v23 = (uint8_t *)swift_slowAlloc();
  v24 = swift_slowAlloc();
  *(_QWORD *)&v35 = v24;
  *(_DWORD *)v23 = 136315138;
  v32 = v23 + 4;
  sub_1A9066CA8(qword_1ED2ABE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
  v25 = sub_1A93F9060();
  v34 = (id)sub_1A906436C(v25, v26, (uint64_t *)&v35);
  sub_1A93F8AA8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _os_log_impl(&dword_1A904E000, v21, v22, "Episode record references non-existing file: %s", v23, 0xCu);
  v27 = 1;
  swift_arrayDestroy();
  MEMORY[0x1AF41411C](v24, -1, -1);
  MEMORY[0x1AF41411C](v23, -1, -1);

  v28 = 0;
LABEL_20:
  v31 = v33;
  *v33 = v28;
  *((_BYTE *)v31 + 8) = v27;
}

uint64_t MediaSpaceCalculator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator__mediaDistribution;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_mediaPath;
  v4 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_fileManager);

  swift_release();
  swift_release();
  return v0;
}

uint64_t MediaSpaceCalculator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator__mediaDistribution;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_mediaPath;
  v4 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_fileManager);

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A91CC098@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for MediaSpaceCalculator();
  result = sub_1A93F7950();
  *a1 = result;
  return result;
}

void MediaSpaceCalculator.MediaSpaceDistribution.volumeSpace.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void MediaSpaceCalculator.MediaSpaceDistribution.volumeAvailableCapacity.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
}

void MediaSpaceCalculator.MediaSpaceDistribution.totalUsedSpace.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
}

void MediaSpaceCalculator.MediaSpaceDistribution.autoDownloadSpace.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
}

void MediaSpaceCalculator.MediaSpaceDistribution.manualDownloadSpace.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
}

id MediaSpaceCalculator.MediaSpaceDistribution.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id result;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  sub_1A93F8C70();
  sub_1A93F810C();
  v6 = (void *)objc_opt_self();
  result = objc_msgSend(v6, sel_stringWithBytesize_, v2);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v8 = result;
  sub_1A93F8040();

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  result = objc_msgSend(v6, sel_stringWithBytesize_, v1);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v9 = result;
  sub_1A93F8040();

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  result = objc_msgSend(v6, sel_stringWithBytesize_, v4);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v10 = result;
  sub_1A93F8040();

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  result = objc_msgSend(v6, sel_stringWithBytesize_, v3);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v11 = result;
  sub_1A93F8040();

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  result = objc_msgSend(v6, sel_stringWithBytesize_, v5);
  if (result)
  {
    v12 = result;
    sub_1A93F8040();

    sub_1A93F810C();
    swift_bridgeObjectRelease();
    sub_1A93F810C();
    return 0;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A91CC3B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A91CC3F0 + 4 * byte_1A940DCE0[a1]))(0x7053656D756C6F76, 0xEB00000000656361);
}

unint64_t sub_1A91CC3F0()
{
  return 0xD000000000000017;
}

uint64_t sub_1A91CC468()
{
  unsigned __int8 *v0;

  return sub_1A91CC3B4(*v0);
}

uint64_t sub_1A91CC470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A91CD96C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A91CC494()
{
  sub_1A91CCC28();
  return sub_1A93F945C();
}

uint64_t sub_1A91CC4BC()
{
  sub_1A91CCC28();
  return sub_1A93F9468();
}

uint64_t MediaSpaceCalculator.MediaSpaceDistribution.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9A28);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v17 = v1[2];
  v18 = v8;
  v10 = v1[3];
  v15 = v1[4];
  v16 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91CCC28();
  sub_1A93F93D8();
  v20 = v9;
  v19 = 0;
  sub_1A91CCC6C();
  sub_1A93F9030();
  if (!v2)
  {
    v12 = v16;
    v11 = v17;
    v20 = v18;
    v19 = 1;
    sub_1A93F9030();
    v20 = v11;
    v19 = 2;
    sub_1A93F9030();
    v20 = v12;
    v19 = 3;
    sub_1A93F9030();
    v20 = v15;
    v19 = 4;
    sub_1A93F9030();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MediaSpaceCalculator.MediaSpaceDistribution.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9A40);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91CCC28();
  sub_1A93F93C0();
  if (!v2)
  {
    v19 = 0;
    sub_1A91CCCB0();
    sub_1A93F8F7C();
    v9 = v20;
    v19 = 1;
    sub_1A93F8F7C();
    v18 = v9;
    v10 = v20;
    v19 = 2;
    sub_1A93F8F7C();
    v17 = v10;
    v11 = v20;
    v19 = 3;
    sub_1A93F8F7C();
    v16 = v20;
    v19 = 4;
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v20;
    v14 = v17;
    *a2 = v18;
    a2[1] = v14;
    v15 = v16;
    a2[2] = v11;
    a2[3] = v15;
    a2[4] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1A91CC940@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MediaSpaceCalculator.MediaSpaceDistribution.init(from:)(a1, a2);
}

uint64_t sub_1A91CC954(_QWORD *a1)
{
  return MediaSpaceCalculator.MediaSpaceDistribution.encode(to:)(a1);
}

uint64_t MediaSpaceCalculator.makeAsyncIterator()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABAF8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB70);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB78);
  sub_1A93F7AD0();
  swift_endAccess();
  v8 = sub_1A9066D74((unint64_t *)&qword_1ED2ABB68, &qword_1ED2ABB70, MEMORY[0x1E0C96190]);
  MEMORY[0x1AF411A34](v4, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1A93F7944();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1A91CCAC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABAF8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB70);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABB78);
  sub_1A93F7AD0();
  swift_endAccess();
  v8 = sub_1A9066D74((unint64_t *)&qword_1ED2ABB68, &qword_1ED2ABB70, MEMORY[0x1E0C96190]);
  MEMORY[0x1AF411A34](v4, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1A93F7944();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_release();
}

unint64_t sub_1A91CCC28()
{
  unint64_t result;

  result = qword_1EEAB9A30;
  if (!qword_1EEAB9A30)
  {
    result = MEMORY[0x1AF414014](&unk_1A940DFAC, &type metadata for MediaSpaceCalculator.MediaSpaceDistribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9A30);
  }
  return result;
}

unint64_t sub_1A91CCC6C()
{
  unint64_t result;

  result = qword_1EEAB9A38;
  if (!qword_1EEAB9A38)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for StorageSpace, &type metadata for StorageSpace);
    atomic_store(result, (unint64_t *)&qword_1EEAB9A38);
  }
  return result;
}

unint64_t sub_1A91CCCB0()
{
  unint64_t result;

  result = qword_1EEAB9A48;
  if (!qword_1EEAB9A48)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for StorageSpace, &type metadata for StorageSpace);
    atomic_store(result, (unint64_t *)&qword_1EEAB9A48);
  }
  return result;
}

uint64_t sub_1A91CCCF4()
{
  return MEMORY[0x1E0C96020];
}

uint64_t sub_1A91CCD00()
{
  return sub_1A9066D74(&qword_1ED2ABAE8, &qword_1ED2ABAF0, MEMORY[0x1E0C95E78]);
}

uint64_t sub_1A91CCD34()
{
  return type metadata accessor for MediaSpaceCalculator();
}

uint64_t type metadata accessor for MediaSpaceCalculator()
{
  uint64_t result;

  result = qword_1ED2AB1C8;
  if (!qword_1ED2AB1C8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A91CCD78()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A91CCE68();
  if (v0 <= 0x3F)
  {
    sub_1A93F726C();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MediaSpaceCalculator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MediaSpaceCalculator.mediaDistribution.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MediaSpaceCalculator.$mediaDistribution.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of MediaSpaceCalculator.__allocating_init(mediaPath:calculationQueue:managedObjectContext:notificationCenter:fileManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of MediaSpaceCalculator.requestRefresh()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

void sub_1A91CCE68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED2ABB80)
  {
    v0 = sub_1A93F7B00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED2ABB80);
  }
}

uint64_t getEnumTagSinglePayload for MediaSpaceCalculator.MediaSpaceDistribution(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MediaSpaceCalculator.MediaSpaceDistribution(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MediaSpaceCalculator.MediaSpaceDistribution()
{
  return &type metadata for MediaSpaceCalculator.MediaSpaceDistribution;
}

uint64_t storeEnumTagSinglePayload for MediaSpaceCalculator.MediaSpaceDistribution.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A91CCF6C + 4 * byte_1A940DCEA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A91CCFA0 + 4 * byte_1A940DCE5[v4]))();
}

uint64_t sub_1A91CCFA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91CCFA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91CCFB0);
  return result;
}

uint64_t sub_1A91CCFBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91CCFC4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A91CCFC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91CCFD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaSpaceCalculator.MediaSpaceDistribution.CodingKeys()
{
  return &type metadata for MediaSpaceCalculator.MediaSpaceDistribution.CodingKeys;
}

unint64_t sub_1A91CCFF0()
{
  unint64_t result;

  result = qword_1EEAB9A50;
  if (!qword_1EEAB9A50)
  {
    result = MEMORY[0x1AF414014](&unk_1A940DF84, &type metadata for MediaSpaceCalculator.MediaSpaceDistribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9A50);
  }
  return result;
}

unint64_t sub_1A91CD038()
{
  unint64_t result;

  result = qword_1EEAB9A58;
  if (!qword_1EEAB9A58)
  {
    result = MEMORY[0x1AF414014](&unk_1A940DEF4, &type metadata for MediaSpaceCalculator.MediaSpaceDistribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9A58);
  }
  return result;
}

unint64_t sub_1A91CD080()
{
  unint64_t result;

  result = qword_1EEAB9A60;
  if (!qword_1EEAB9A60)
  {
    result = MEMORY[0x1AF414014](&unk_1A940DF1C, &type metadata for MediaSpaceCalculator.MediaSpaceDistribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9A60);
  }
  return result;
}

uint64_t sub_1A91CD0C4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1A91CD0EC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v31;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABDB8);
  result = sub_1A93F8E8C();
  v9 = result;
  v31 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= a2)
        return v9;
      v16 = v31[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= a2)
          return v9;
        v16 = v31[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= a2)
            return v9;
          v16 = v31[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= a2)
              return v9;
            v16 = v31[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= a2)
                  return v9;
                v16 = v31[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = 8 * v14;
    v19 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + v18);
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    result = sub_1A93F92D0();
    v21 = -1 << *(_BYTE *)(v9 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = 8 * v24;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + v29) = v19;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v29) = v20;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1A91CD358(uint64_t a1, void (*a2)(_QWORD *__return_ptr, _QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v14;
  __int128 v15;
  char v16;
  void (*v17)(_QWORD *__return_ptr, _QWORD, _QWORD);

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C18);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (_QWORD *)(a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
  v9 = *(_QWORD *)(v7 + 72);
  swift_bridgeObjectRetain();
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v17 = a2;
  do
  {
    a2(&v15, *v8, (char *)v8 + *(int *)(v6 + 48));
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }
    if ((v16 & 1) == 0)
    {
      v14 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1A9118B18(0, v10[2] + 1, 1, v10);
      v12 = v10[2];
      v11 = v10[3];
      if (v12 >= v11 >> 1)
        v10 = sub_1A9118B18((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
      v10[2] = v12 + 1;
      *(_OWORD *)&v10[2 * v12 + 4] = v14;
      a2 = v17;
    }
    v8 = (_QWORD *)((char *)v8 + v9);
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v10;
}

id sub_1A91CD4D0()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  sub_1A93F8040();
  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  v3 = objc_msgSend((id)objc_opt_self(), sel_predicateForDownloaded_excludeHidden_, 1, 0);
  objc_msgSend(v2, sel_setPredicate_, v3);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A48C8);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1A94055A0;
  v5 = sub_1A93F8040();
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  v8 = sub_1A93F8040();
  *(_QWORD *)(v4 + 88) = v6;
  *(_QWORD *)(v4 + 64) = v8;
  *(_QWORD *)(v4 + 72) = v9;
  v10 = sub_1A93F8040();
  *(_QWORD *)(v4 + 120) = v6;
  *(_QWORD *)(v4 + 96) = v10;
  *(_QWORD *)(v4 + 104) = v11;
  v12 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPropertiesToFetch_, v12);

  objc_msgSend(v2, sel_setResultType_, 2);
  return v2;
}

uint64_t sub_1A91CD658(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t *))
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t *v21;
  uint64_t v22;

  v21 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 64;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    v16 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v12)
      return sub_1A91CD0EC(v21, a2, v6, a3);
    v17 = *(_QWORD *)(v8 + 8 * v16);
    ++v7;
    if (!v17)
    {
      v7 = v16 + 1;
      if (v16 + 1 >= v12)
        return sub_1A91CD0EC(v21, a2, v6, a3);
      v17 = *(_QWORD *)(v8 + 8 * v7);
      if (!v17)
      {
        v7 = v16 + 2;
        if (v16 + 2 >= v12)
          return sub_1A91CD0EC(v21, a2, v6, a3);
        v17 = *(_QWORD *)(v8 + 8 * v7);
        if (!v17)
          break;
      }
    }
LABEL_20:
    v11 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v7 << 6);
LABEL_5:
    v15 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v14);
    v22 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v14);
    result = a4(v15, &v22);
    if ((result & 1) != 0)
    {
      *(unint64_t *)((char *)v21 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
        return sub_1A91CD0EC(v21, a2, v6, a3);
      }
    }
  }
  v18 = v16 + 3;
  if (v18 >= v12)
    return sub_1A91CD0EC(v21, a2, v6, a3);
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
  {
    v7 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v7 >= v12)
      return sub_1A91CD0EC(v21, a2, v6, a3);
    v17 = *(_QWORD *)(v8 + 8 * v7);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1A91CD7FC(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_1A91CD658((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_1A91CD658((uint64_t)v11, v8, v6, a2);
    MEMORY[0x1AF41411C](v11, -1, -1);
  }
  return a3;
}

uint64_t sub_1A91CD96C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7053656D756C6F76 && a2 == 0xEB00000000656361;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A94473F0 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6573556C61746F74 && a2 == 0xEE00656361705364 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A9447410 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A9447430)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void sub_1A91CDBA8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A91CB450(a1, a2, a3);
}

void sub_1A91CDBC0(uint64_t *a1@<X8>)
{
  sub_1A91CAB64(a1);
}

uint64_t sub_1A91CDBD8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A91CDC04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A929B798(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1A91CDC10(unint64_t a1)
{
  return sub_1A91CB274(a1);
}

uint64_t sub_1A91CDC24@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1A91CDC54@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1A91CABD8(a1, a2);
}

BOOL sub_1A91CDC6C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A92EFBD8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t DownloadEnvironment.init(recordKeeper:fileStorage:dispatchQueue:)@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;

  sub_1A905D4AC(a1, a4);
  result = sub_1A905D4AC(a2, a4 + 40);
  *(_QWORD *)(a4 + 80) = a3;
  return result;
}

uint64_t *assignWithCopy for DownloadEnvironment(uint64_t *a1, uint64_t *a2)
{
  void *v4;
  void *v5;
  id v6;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  v4 = (void *)a2[10];
  v5 = (void *)a1[10];
  a1[10] = (uint64_t)v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for DownloadEnvironment(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 80);
  v6 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;

  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadEnvironment(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t dispatch thunk of AssetSource.fetch(asset:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t EpisodeUserFilter.hash(into:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;

  if (a3)
  {
    if (a3 != 1)
      __asm { BR              X9 }
    v4 = *(_QWORD *)(a2 + 16);
    v5 = *(unsigned __int8 *)(a2 + 24);
    sub_1A93F92E8();
    sub_1A912C900(v4, v5);
    EpisodeUserFilter.hash(into:)(a1, v4, v5);
    return sub_1A912C738(v4, v5);
  }
  else
  {
    sub_1A93F92E8();
    return sub_1A93F930C();
  }
}

uint64_t static EpisodeUserFilter.== infix(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  if (a2)
  {
    if (a2 == 1)
    {
      if (a4 == 1)
      {
        v4 = *(_QWORD *)(a1 + 16);
        v5 = *(_QWORD *)(a3 + 16);
        v6 = *(unsigned __int8 *)(a1 + 24);
        v7 = *(unsigned __int8 *)(a3 + 24);
        sub_1A912C900(v4, v6);
        sub_1A912C900(v5, v7);
        v8 = static EpisodeUserFilter.== infix(_:_:)(v4, v6, v5, v7);
        sub_1A912C738(v5, v7);
        sub_1A912C738(v4, v6);
        return v8 & 1;
      }
      return 0;
    }
    return ((uint64_t (*)(void))((char *)&loc_1A91CDFA8 + 4 * byte_1A940E0A6[a1]))();
  }
  else
  {
    if (a4)
      return 0;
    return a1 == a3;
  }
}

uint64_t sub_1A91CE044()
{
  return 0;
}

uint64_t sub_1A91CE050()
{
  sub_1A91CECE8();
  return sub_1A93F945C();
}

uint64_t sub_1A91CE078()
{
  sub_1A91CECE8();
  return sub_1A93F9468();
}

uint64_t sub_1A91CE0A0()
{
  sub_1A91CEC1C();
  return sub_1A93F945C();
}

uint64_t sub_1A91CE0C8()
{
  sub_1A91CEC1C();
  return sub_1A93F9468();
}

uint64_t sub_1A91CE0F0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A91CE11C + 4 * byte_1A940E0AC[*v0]))(0x6E6F73616573, 0xE600000000000000);
}

uint64_t sub_1A91CE11C()
{
  return 0x6F736970456C6C61;
}

uint64_t sub_1A91CE13C()
{
  return 0x646579616C706E75;
}

uint64_t sub_1A91CE154()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_1A91CE184()
{
  return 0x646579616C70;
}

uint64_t sub_1A91CE194()
{
  return 0x6269726373627573;
}

uint64_t sub_1A91CE1B4()
{
  return 0x657461647075;
}

uint64_t sub_1A91CE1C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A91CFE90(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A91CE1E8(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1A91CE1F4()
{
  sub_1A91CEB0C();
  return sub_1A93F945C();
}

uint64_t sub_1A91CE21C()
{
  sub_1A91CEB0C();
  return sub_1A93F9468();
}

uint64_t sub_1A91CE244()
{
  sub_1A91CEC60();
  return sub_1A93F945C();
}

uint64_t sub_1A91CE26C()
{
  sub_1A91CEC60();
  return sub_1A93F9468();
}

uint64_t sub_1A91CE294@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1A91CE2C0()
{
  sub_1A91CEBD8();
  return sub_1A93F945C();
}

uint64_t sub_1A91CE2E8()
{
  sub_1A91CEBD8();
  return sub_1A93F9468();
}

uint64_t sub_1A91CE310()
{
  sub_1A91CED2C();
  return sub_1A93F945C();
}

uint64_t sub_1A91CE338()
{
  sub_1A91CED2C();
  return sub_1A93F9468();
}

uint64_t sub_1A91CE360()
{
  sub_1A91CEB94();
  return sub_1A93F945C();
}

uint64_t sub_1A91CE388()
{
  sub_1A91CEB94();
  return sub_1A93F9468();
}

uint64_t sub_1A91CE3B0()
{
  sub_1A91CECA4();
  return sub_1A93F945C();
}

uint64_t sub_1A91CE3D8()
{
  sub_1A91CECA4();
  return sub_1A93F9468();
}

uint64_t sub_1A91CE400()
{
  sub_1A91CEB50();
  return sub_1A93F945C();
}

uint64_t sub_1A91CE428()
{
  sub_1A91CEB50();
  return sub_1A93F9468();
}

uint64_t EpisodeUserFilter.encode(to:)(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;

  v46 = a3;
  v47 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9A68);
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  MEMORY[0x1E0C80A78](v4);
  v43 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9A70);
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v40 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9A78);
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  MEMORY[0x1E0C80A78](v8);
  v37 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9A80);
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  MEMORY[0x1E0C80A78](v10);
  v34 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9A88);
  v32 = *(_QWORD *)(v12 - 8);
  v33 = v12;
  MEMORY[0x1E0C80A78](v12);
  v31 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9A90);
  v29[2] = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v29[1] = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9A98);
  MEMORY[0x1E0C80A78](v29[0]);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9AA0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9AA8);
  v48 = *(_QWORD *)(v19 - 8);
  v49 = v19;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91CEB0C();
  sub_1A93F93D8();
  if ((_BYTE)v46)
  {
    if (v46 != 1)
      __asm { BR              X9 }
    v22 = *(_QWORD *)(v47 + 16);
    v23 = *(_BYTE *)(v47 + 24);
    LOBYTE(v50) = 7;
    sub_1A912C900(v22, v23);
    sub_1A91CEB50();
    v24 = v43;
    v25 = v49;
    sub_1A93F8FAC();
    v50 = v22;
    v51 = v23;
    sub_1A9165960();
    v26 = v45;
    sub_1A93F9030();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v26);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v21, v25);
    return sub_1A912C738(v22, v23);
  }
  else
  {
    LOBYTE(v50) = 0;
    sub_1A91CED2C();
    v28 = v49;
    sub_1A93F8FAC();
    sub_1A93F903C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v21, v28);
  }
}

uint64_t EpisodeUserFilter.hashValue.getter(uint64_t a1, char a2)
{
  _BYTE v5[72];

  sub_1A93F92DC();
  EpisodeUserFilter.hash(into:)((uint64_t)v5, a1, a2);
  return sub_1A93F9324();
}

uint64_t EpisodeUserFilter.init(from:)(_QWORD *a1)
{
  return sub_1A91D01EC(a1);
}

uint64_t sub_1A91CEAB4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_1A93F92DC();
  EpisodeUserFilter.hash(into:)((uint64_t)v4, v1, v2);
  return sub_1A93F9324();
}

uint64_t sub_1A91CEB00(uint64_t a1)
{
  uint64_t v1;

  return EpisodeUserFilter.hash(into:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

unint64_t sub_1A91CEB0C()
{
  unint64_t result;

  result = qword_1EEAB9AB0;
  if (!qword_1EEAB9AB0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E96C, &type metadata for EpisodeUserFilter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9AB0);
  }
  return result;
}

unint64_t sub_1A91CEB50()
{
  unint64_t result;

  result = qword_1EEAB9AB8;
  if (!qword_1EEAB9AB8)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E91C, &type metadata for EpisodeUserFilter.UpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9AB8);
  }
  return result;
}

unint64_t sub_1A91CEB94()
{
  unint64_t result;

  result = qword_1EEAB9AC0;
  if (!qword_1EEAB9AC0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E8CC, &type metadata for EpisodeUserFilter.SubscriberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9AC0);
  }
  return result;
}

unint64_t sub_1A91CEBD8()
{
  unint64_t result;

  result = qword_1EEAB9AC8;
  if (!qword_1EEAB9AC8)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E87C, &type metadata for EpisodeUserFilter.PlayedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9AC8);
  }
  return result;
}

unint64_t sub_1A91CEC1C()
{
  unint64_t result;

  result = qword_1EEAB9AD0;
  if (!qword_1EEAB9AD0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E82C, &type metadata for EpisodeUserFilter.BookmarkedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9AD0);
  }
  return result;
}

unint64_t sub_1A91CEC60()
{
  unint64_t result;

  result = qword_1EEAB9AD8;
  if (!qword_1EEAB9AD8)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E7DC, &type metadata for EpisodeUserFilter.DownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9AD8);
  }
  return result;
}

unint64_t sub_1A91CECA4()
{
  unint64_t result;

  result = qword_1EEAB9AE0;
  if (!qword_1EEAB9AE0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E78C, &type metadata for EpisodeUserFilter.UnplayedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9AE0);
  }
  return result;
}

unint64_t sub_1A91CECE8()
{
  unint64_t result;

  result = qword_1EEAB9AE8;
  if (!qword_1EEAB9AE8)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E73C, &type metadata for EpisodeUserFilter.AllEpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9AE8);
  }
  return result;
}

unint64_t sub_1A91CED2C()
{
  unint64_t result;

  result = qword_1EEAB9AF0;
  if (!qword_1EEAB9AF0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E6EC, &type metadata for EpisodeUserFilter.SeasonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9AF0);
  }
  return result;
}

uint64_t sub_1A91CED70()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_1A93F92DC();
  EpisodeUserFilter.hash(into:)((uint64_t)v4, v1, v2);
  return sub_1A93F9324();
}

uint64_t sub_1A91CEDB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = sub_1A91D01EC(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_1A91CEDE4(_QWORD *a1)
{
  uint64_t v1;

  return EpisodeUserFilter.encode(to:)(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t sub_1A91CEE00(uint64_t a1, uint64_t a2)
{
  return static EpisodeUserFilter.== infix(_:_:)(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t EpisodeUserFilter.title.getter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = EpisodeUserFilter.canonical.getter(a1, a2);
  v3 = v2;
  if (v4)
    __asm { BR              X9 }
  if (qword_1ED2AD260 != -1)
    swift_once();
  sub_1A93F7044();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v5 = swift_allocObject();
  v6 = MEMORY[0x1E0DEDC60];
  *(_OWORD *)(v5 + 16) = xmmword_1A9405520;
  v7 = MEMORY[0x1E0DEDCD8];
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 32) = v3;
  v8 = sub_1A93F8070();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t EpisodeUserFilter.canonical.getter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1;
  if (a2 == 1)
  {
    v3 = *(_QWORD *)(a1 + 16);
    v4 = *(unsigned __int8 *)(a1 + 24);
    sub_1A912C900(v3, *(_BYTE *)(a1 + 24));
    v2 = EpisodeUserFilter.canonical.getter(v3, v4);
    sub_1A912C738(v3, v4);
  }
  else
  {
    sub_1A912C900(a1, a2);
  }
  return v2;
}

Swift::String __swiftcall EpisodeUserFilter.shelfTitle(hidesPlayedEpisodes:)(Swift::Bool hidesPlayedEpisodes)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t v9;
  void *v10;
  Swift::String result;

  v3 = v2;
  v4 = v1;
  v6 = EpisodeUserFilter.canonical.getter(v1, v2);
  if (v7 != 2 || v6 != 0)
  {
    sub_1A912C738(v6, v7);
LABEL_7:
    v9 = EpisodeUserFilter.title.getter(v4, v3);
    goto LABEL_11;
  }
  if (hidesPlayedEpisodes)
    goto LABEL_7;
  if (qword_1ED2AD260 != -1)
    swift_once();
  v9 = sub_1A93F7044();
LABEL_11:
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

uint64_t EpisodeUserFilter.emptyMessage.getter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = EpisodeUserFilter.canonical.getter(a1, a2);
  v3 = v2;
  if (v4)
    __asm { BR              X9 }
  if (qword_1ED2AD260 != -1)
    swift_once();
  sub_1A93F7044();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v5 = swift_allocObject();
  v6 = MEMORY[0x1E0DEDC60];
  *(_OWORD *)(v5 + 16) = xmmword_1A9405520;
  v7 = MEMORY[0x1E0DEDCD8];
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 32) = v3;
  v8 = sub_1A93F801C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t EpisodeUserFilter.symbolName.getter(uint64_t a1, char a2)
{
  unint64_t result;
  char v3;
  unint64_t v4;

  result = EpisodeUserFilter.canonical.getter(a1, a2);
  if (v3 == 2)
  {
    v4 = result - 1;
    result = 0;
    v3 = 0;
    switch(v4)
    {
      case 0uLL:
        result = 0x6162656C63726963;
        break;
      case 1uLL:
        result = 0x6F642E776F727261;
        break;
      case 2uLL:
        result = 0x6B72616D6B6F6F62;
        break;
      case 3uLL:
        result = 0xD000000000000010;
        break;
      case 4uLL:
        return result;
      default:
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    sub_1A912C738(result, v3);
    return 0;
  }
  return result;
}

uint64_t static EpisodeUserFilter.defaultFilter(seasonToShow:hidesPlayedEpisodes:)(uint64_t a1, char a2, char a3)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return a3 & 1;
  return result;
}

_QWORD *static EpisodeUserFilter.allAvailableFilters(seasonNumbers:hasBookmarkedEpisodes:hasPlayedEpisodes:hasSubscriberEpisodes:)(uint64_t a1, char a2, char a3, char a4)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  int64_t v20;
  _QWORD *v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v35;

  v35 = a1;
  swift_bridgeObjectRetain();
  sub_1A906C710(&v35);
  v8 = v35;
  v9 = *(_QWORD *)(v35 + 16);
  if (v9)
  {
    v4 = v35 + 24;
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (v9 <= *(_QWORD *)(v8 + 16))
    {
      v11 = *(_QWORD *)(v4 + 8 * v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1A9118C38(0, v10[2] + 1, 1, v10);
      v13 = v10[2];
      v12 = v10[3];
      if (v13 >= v12 >> 1)
        v10 = sub_1A9118C38((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
      v10[2] = v13 + 1;
      v14 = &v10[2 * v13];
      v14[4] = v11;
      *((_BYTE *)v14 + 40) = 0;
      if (!--v9)
        goto LABEL_12;
    }
    __break(1u);
  }
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_12:
  swift_release();
  v16 = v10[2];
  v17 = v16 + 3;
  if (__OFADD__(v16, 3))
  {
    __break(1u);
LABEL_39:
    v10 = sub_1A9118C38((_QWORD *)(v15 > 1), v16, 1, v10);
    v15 = v10[3];
    v19 = v15 >> 1;
    goto LABEL_20;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v15 = v10[3], v19 = v15 >> 1, (uint64_t)(v15 >> 1) < v17))
  {
    if (v16 <= v17)
      v20 = v16 + 3;
    else
      v20 = v16;
    v10 = sub_1A9118C38(isUniquelyReferenced_nonNull_native, v20, 1, v10);
    v15 = v10[3];
    v19 = v15 >> 1;
  }
  v4 = v10[2];
  v16 = v4 + 1;
  if (v19 <= v4)
    goto LABEL_39;
LABEL_20:
  v10[2] = v16;
  v21 = &v10[2 * v4];
  v21[4] = 0;
  *((_BYTE *)v21 + 40) = 2;
  v22 = v4 + 2;
  if (v19 <= v16)
  {
    v10 = sub_1A9118C38((_QWORD *)(v15 > 1), v4 + 2, 1, v10);
    v15 = v10[3];
    v19 = v15 >> 1;
  }
  v10[2] = v22;
  v23 = &v10[2 * v16];
  v23[4] = 1;
  *((_BYTE *)v23 + 40) = 2;
  v24 = v4 + 3;
  if (v19 <= v22)
    v10 = sub_1A9118C38((_QWORD *)(v15 > 1), v4 + 3, 1, v10);
  v10[2] = v24;
  v25 = &v10[2 * v22];
  v25[4] = 2;
  *((_BYTE *)v25 + 40) = 2;
  if ((a2 & 1) == 0)
  {
    v27 = v4 + 3;
    if ((a3 & 1) == 0)
      goto LABEL_33;
    goto LABEL_30;
  }
  v26 = v10[3];
  v27 = v4 + 4;
  if (v24 >= v26 >> 1)
    v10 = sub_1A9118C38((_QWORD *)(v26 > 1), v4 + 4, 1, v10);
  v10[2] = v27;
  v28 = &v10[2 * v24];
  v28[4] = 3;
  *((_BYTE *)v28 + 40) = 2;
  if ((a3 & 1) != 0)
  {
LABEL_30:
    v29 = v10[3];
    if (v27 >= v29 >> 1)
      v10 = sub_1A9118C38((_QWORD *)(v29 > 1), v27 + 1, 1, v10);
    v10[2] = v27 + 1;
    v30 = &v10[2 * v27];
    v30[4] = 4;
    *((_BYTE *)v30 + 40) = 2;
  }
LABEL_33:
  if ((a4 & 1) != 0)
  {
    v32 = v10[2];
    v31 = v10[3];
    if (v32 >= v31 >> 1)
      v10 = sub_1A9118C38((_QWORD *)(v31 > 1), v32 + 1, 1, v10);
    v10[2] = v32 + 1;
    v33 = &v10[2 * v32];
    v33[4] = 5;
    *((_BYTE *)v33 + 40) = 2;
  }
  return v10;
}

BOOL _s18PodcastsFoundation17EpisodeUserFilterO10isSeasonalSbvg_0(uint64_t a1, char a2)
{
  uint64_t v2;
  char v3;
  char v4;

  v2 = EpisodeUserFilter.canonical.getter(a1, a2);
  v4 = v3;
  if (v3)
    sub_1A912C738(v2, v3);
  return v4 == 0;
}

id EpisodeUserFilter.basePredicate.getter(uint64_t a1, char a2)
{
  uint64_t v2;
  char v3;

  v2 = EpisodeUserFilter.canonical.getter(a1, a2);
  if (v3)
    __asm { BR              X9 }
  return objc_msgSend((id)objc_opt_self(), sel_predicateForSeasonNumber_, v2);
}

uint64_t EpisodeUserFilter.supportsHidesPlayedEpisodes.getter(uint64_t a1, char a2)
{
  char v2;
  char v3;

  v2 = EpisodeUserFilter.canonical.getter(a1, a2);
  return (v3 == 0) | (0x2Cu >> v2) & 1;
}

BOOL EpisodeUserFilter.skipsTrailersDuringPlayback.getter(uint64_t a1, char a2)
{
  unint64_t v2;
  char v3;
  BOOL v4;

  v2 = EpisodeUserFilter.canonical.getter(a1, a2);
  if (v3)
    v4 = v2 >= 2;
  else
    v4 = 0;
  return !v4;
}

uint64_t EpisodeUserFilter.flipUpdateState.getter(uint64_t a1, char a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  if (a2 == 1)
  {
    v3 = *(_QWORD *)(a1 + 16);
    v4 = *(_BYTE *)(a1 + 24);
    sub_1A912C900(v3, v4);
    v5 = EpisodeUserFilter.canonical.getter(v3, v4);
    sub_1A912C738(v3, v4);
  }
  else
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    *(_BYTE *)(v5 + 24) = a2;
    sub_1A912C900(a1, a2);
  }
  return v5;
}

uint64_t sub_1A91CFC24(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*((_QWORD *)v16 - 1) >= v20)
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1A9233FB8((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A91CFE90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F73616573 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F736970456C6C61 && a2 == 0xEB00000000736564 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646579616C706E75 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEA00000000006465 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B72616D6B6F6F62 && a2 == 0xEA00000000006465 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x646579616C70 && a2 == 0xE600000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6269726373627573 && a2 == 0xEA00000000007265 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x657461647075 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1A91D01EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD v29[7];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;

  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9BA8);
  v49 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v48 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9BB0);
  v35 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v45 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9BB8);
  v5 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  v39 = v5;
  MEMORY[0x1E0C80A78](v4);
  v47 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9BC0);
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  MEMORY[0x1E0C80A78](v7);
  v46 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9BC8);
  v33 = *(_QWORD *)(v9 - 8);
  v34 = v9;
  MEMORY[0x1E0C80A78](v9);
  v44 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9BD0);
  v31 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  MEMORY[0x1E0C80A78](v11);
  v43 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9BD8);
  v29[6] = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v42 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9BE0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9BE8);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_1A91CEB0C();
  v23 = v51;
  sub_1A93F93C0();
  if (!v23)
  {
    v29[4] = v17;
    v29[2] = v15;
    v29[3] = v14;
    v29[5] = 0;
    v51 = v19;
    v24 = sub_1A93F8F94();
    v25 = v18;
    if (*(_QWORD *)(v24 + 16) == 1)
    {
      v29[1] = v18;
      __asm { BR              X10 }
    }
    v18 = sub_1A93F8D00();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7C28);
    *v27 = &type metadata for EpisodeUserFilter;
    sub_1A93F8EF8();
    sub_1A93F8CE8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v27, *MEMORY[0x1E0DEC450], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v21, v25);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
  return v18;
}

uint64_t sub_1A91D0B78()
{
  uint64_t v0;

  sub_1A912C738(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  return swift_deallocObject();
}

unint64_t sub_1A91D0BA4()
{
  unint64_t result;

  result = qword_1EEAB9AF8;
  if (!qword_1EEAB9AF8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeUserFilter, &type metadata for EpisodeUserFilter);
    atomic_store(result, (unint64_t *)&qword_1EEAB9AF8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for EpisodeUserFilter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A912C900(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for EpisodeUserFilter(uint64_t a1)
{
  return sub_1A912C738(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for EpisodeUserFilter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A912C900(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1A912C738(v5, v6);
  return a1;
}

uint64_t assignWithTake for EpisodeUserFilter(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1A912C738(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for Color(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Color(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A91D0D54(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A91D0D6C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter()
{
  return &type metadata for EpisodeUserFilter;
}

uint64_t getEnumTagSinglePayload for EpisodeUserFilter.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeUserFilter.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A91D0E70 + 4 * byte_1A940E0D8[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A91D0EA4 + 4 * byte_1A940E0D3[v4]))();
}

uint64_t sub_1A91D0EA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91D0EAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91D0EB4);
  return result;
}

uint64_t sub_1A91D0EC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91D0EC8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A91D0ECC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91D0ED4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.CodingKeys()
{
  return &type metadata for EpisodeUserFilter.CodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.SeasonCodingKeys()
{
  return &type metadata for EpisodeUserFilter.SeasonCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.AllEpisodesCodingKeys()
{
  return &type metadata for EpisodeUserFilter.AllEpisodesCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.UnplayedCodingKeys()
{
  return &type metadata for EpisodeUserFilter.UnplayedCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.DownloadedCodingKeys()
{
  return &type metadata for EpisodeUserFilter.DownloadedCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.BookmarkedCodingKeys()
{
  return &type metadata for EpisodeUserFilter.BookmarkedCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.PlayedCodingKeys()
{
  return &type metadata for EpisodeUserFilter.PlayedCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.SubscriberCodingKeys()
{
  return &type metadata for EpisodeUserFilter.SubscriberCodingKeys;
}

uint64_t _s18PodcastsFoundation17EpisodeUserFilterO16SeasonCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A91D0FA4 + 4 * byte_1A940E0DD[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A91D0FC4 + 4 * byte_1A940E0E2[v4]))();
}

_BYTE *sub_1A91D0FA4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A91D0FC4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A91D0FCC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A91D0FD4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A91D0FDC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A91D0FE4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.UpdateCodingKeys()
{
  return &type metadata for EpisodeUserFilter.UpdateCodingKeys;
}

unint64_t sub_1A91D1004()
{
  unint64_t result;

  result = qword_1EEAB9B00;
  if (!qword_1EEAB9B00)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E374, &type metadata for EpisodeUserFilter.UpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B00);
  }
  return result;
}

unint64_t sub_1A91D104C()
{
  unint64_t result;

  result = qword_1EEAB9B08;
  if (!qword_1EEAB9B08)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E60C, &type metadata for EpisodeUserFilter.SeasonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B08);
  }
  return result;
}

unint64_t sub_1A91D1094()
{
  unint64_t result;

  result = qword_1EEAB9B10;
  if (!qword_1EEAB9B10)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E6C4, &type metadata for EpisodeUserFilter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B10);
  }
  return result;
}

unint64_t sub_1A91D10DC()
{
  unint64_t result;

  result = qword_1EEAB9B18;
  if (!qword_1EEAB9B18)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E57C, &type metadata for EpisodeUserFilter.SeasonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B18);
  }
  return result;
}

unint64_t sub_1A91D1124()
{
  unint64_t result;

  result = qword_1EEAB9B20;
  if (!qword_1EEAB9B20)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E5A4, &type metadata for EpisodeUserFilter.SeasonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B20);
  }
  return result;
}

unint64_t sub_1A91D116C()
{
  unint64_t result;

  result = qword_1EEAB9B28;
  if (!qword_1EEAB9B28)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E52C, &type metadata for EpisodeUserFilter.AllEpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B28);
  }
  return result;
}

unint64_t sub_1A91D11B4()
{
  unint64_t result;

  result = qword_1EEAB9B30;
  if (!qword_1EEAB9B30)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E554, &type metadata for EpisodeUserFilter.AllEpisodesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B30);
  }
  return result;
}

unint64_t sub_1A91D11FC()
{
  unint64_t result;

  result = qword_1EEAB9B38;
  if (!qword_1EEAB9B38)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E4DC, &type metadata for EpisodeUserFilter.UnplayedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B38);
  }
  return result;
}

unint64_t sub_1A91D1244()
{
  unint64_t result;

  result = qword_1EEAB9B40;
  if (!qword_1EEAB9B40)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E504, &type metadata for EpisodeUserFilter.UnplayedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B40);
  }
  return result;
}

unint64_t sub_1A91D128C()
{
  unint64_t result;

  result = qword_1EEAB9B48;
  if (!qword_1EEAB9B48)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E48C, &type metadata for EpisodeUserFilter.DownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B48);
  }
  return result;
}

unint64_t sub_1A91D12D4()
{
  unint64_t result;

  result = qword_1EEAB9B50;
  if (!qword_1EEAB9B50)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E4B4, &type metadata for EpisodeUserFilter.DownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B50);
  }
  return result;
}

unint64_t sub_1A91D131C()
{
  unint64_t result;

  result = qword_1EEAB9B58;
  if (!qword_1EEAB9B58)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E43C, &type metadata for EpisodeUserFilter.BookmarkedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B58);
  }
  return result;
}

unint64_t sub_1A91D1364()
{
  unint64_t result;

  result = qword_1EEAB9B60;
  if (!qword_1EEAB9B60)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E464, &type metadata for EpisodeUserFilter.BookmarkedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B60);
  }
  return result;
}

unint64_t sub_1A91D13AC()
{
  unint64_t result;

  result = qword_1EEAB9B68;
  if (!qword_1EEAB9B68)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E3EC, &type metadata for EpisodeUserFilter.PlayedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B68);
  }
  return result;
}

unint64_t sub_1A91D13F4()
{
  unint64_t result;

  result = qword_1EEAB9B70;
  if (!qword_1EEAB9B70)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E414, &type metadata for EpisodeUserFilter.PlayedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B70);
  }
  return result;
}

unint64_t sub_1A91D143C()
{
  unint64_t result;

  result = qword_1EEAB9B78;
  if (!qword_1EEAB9B78)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E39C, &type metadata for EpisodeUserFilter.SubscriberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B78);
  }
  return result;
}

unint64_t sub_1A91D1484()
{
  unint64_t result;

  result = qword_1EEAB9B80;
  if (!qword_1EEAB9B80)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E3C4, &type metadata for EpisodeUserFilter.SubscriberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B80);
  }
  return result;
}

unint64_t sub_1A91D14CC()
{
  unint64_t result;

  result = qword_1EEAB9B88;
  if (!qword_1EEAB9B88)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E2E4, &type metadata for EpisodeUserFilter.UpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B88);
  }
  return result;
}

unint64_t sub_1A91D1514()
{
  unint64_t result;

  result = qword_1EEAB9B90;
  if (!qword_1EEAB9B90)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E30C, &type metadata for EpisodeUserFilter.UpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B90);
  }
  return result;
}

unint64_t sub_1A91D155C()
{
  unint64_t result;

  result = qword_1EEAB9B98;
  if (!qword_1EEAB9B98)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E634, &type metadata for EpisodeUserFilter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9B98);
  }
  return result;
}

unint64_t sub_1A91D15A4()
{
  unint64_t result;

  result = qword_1EEAB9BA0;
  if (!qword_1EEAB9BA0)
  {
    result = MEMORY[0x1AF414014](&unk_1A940E65C, &type metadata for EpisodeUserFilter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB9BA0);
  }
  return result;
}

void TranscriptParser.parse(ttmlData:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v5;
  id v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  _QWORD *v19;
  void *v21;
  uint64_t v22;

  v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TranscriptModelBuilder()), sel_init);
  v6 = objc_allocWithZone((Class)PFTTMLParser);
  sub_1A90D8068(a1, a2);
  v7 = (char *)v5;
  v8 = (void *)sub_1A93F729C();
  v9 = objc_msgSend(v6, sel_initWithData_delegate_, v8, v7);

  sub_1A905F180(a1, a2);
  v21 = v9;
  objc_msgSend(v9, sel_parse);
  v10 = *(_QWORD *)&v7[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_lockedPhase];
  v11 = (os_unfair_lock_s *)(v10 + 56);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 56));
  v13 = *(void **)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  v15 = *(_QWORD *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 40);
  v16 = *(_QWORD *)(v10 + 48);
  sub_1A91D1A48(v13, v12, v15);
  if (v22)
  {
    os_unfair_lock_unlock(v11);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v11);
    if (v15 >> 62)
    {
      if (v15 >> 62 == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();

        sub_1A91D1860(v13, v12, v15);
        *(_QWORD *)a3 = v13;
        *(_QWORD *)(a3 + 8) = v12;
        *(_BYTE *)(a3 + 16) = v15 & 1;
        *(_QWORD *)(a3 + 24) = a1;
        *(_QWORD *)(a3 + 32) = a2;
        *(_QWORD *)(a3 + 40) = v14;
        *(_QWORD *)(a3 + 48) = v16;
        sub_1A90D8068(a1, a2);
        return;
      }
      sub_1A91D18A0();
      swift_allocError();
      *v19 = 0;
    }
    else
    {
      sub_1A91D18A0();
      swift_allocError();
      *v17 = v13;
      v18 = v13;
    }
    swift_willThrow();
    sub_1A91D1860(v13, v12, v15);

  }
}

id sub_1A91D1820@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  *a2 = *(_QWORD *)a1;
  a2[1] = v2;
  a2[2] = v4;
  a2[3] = v5;
  a2[4] = v6;
  return sub_1A91D1A48(v3, v2, v4);
}

void sub_1A91D1860(void *a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (!(a3 >> 62))
  {

  }
}

unint64_t sub_1A91D18A0()
{
  unint64_t result;

  result = qword_1EEAB9BF0;
  if (!qword_1EEAB9BF0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for TTMLParserError, &type metadata for TTMLParserError);
    atomic_store(result, (unint64_t *)&qword_1EEAB9BF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptParser()
{
  return &type metadata for TranscriptParser;
}

_QWORD *initializeBufferWithCopyOfBuffer for TTMLParserError(_QWORD *a1, id *a2)
{
  id v3;
  id v4;

  v3 = *a2;
  v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for TTMLParserError(id *a1)
{

}

void **assignWithCopy for TTMLParserError(void **a1, id *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = *a2;
  v4 = *a2;
  v5 = *a1;
  *a1 = v3;

  return a1;
}

void **assignWithTake for TTMLParserError(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for TTMLParserError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TTMLParserError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTMLParserError()
{
  return &type metadata for TTMLParserError;
}

id sub_1A91D1A48(id result, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62 == 1)
  {
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
  else if (!(a3 >> 62))
  {
    return result;
  }
  return result;
}

id DownloadStateReportCollector.__allocating_init(managedObjectContext:episodePropertiesToReport:showPropertiesToReport:allEpisodes:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  objc_super v12;

  v9 = (char *)objc_allocWithZone(v4);
  v10 = &v9[OBJC_IVAR___PFDownloadsStateReportCollector_checker];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  *((_QWORD *)v10 + 2) = a3;
  v10[24] = a4;
  v12.receiver = v9;
  v12.super_class = v4;
  return objc_msgSendSuper2(&v12, sel_init);
}

id DownloadStateReportCollector.init(managedObjectContext:episodePropertiesToReport:showPropertiesToReport:allEpisodes:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char *v4;
  char *v5;
  objc_super v7;

  v5 = &v4[OBJC_IVAR___PFDownloadsStateReportCollector_checker];
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  *((_QWORD *)v5 + 2) = a3;
  v5[24] = a4;
  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for DownloadStateReportCollector();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_1A91D1BE4(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  _BYTE *v14;
  _QWORD v16[6];

  v6 = *(void **)&v2[OBJC_IVAR___PFDownloadsStateReportCollector_checker];
  v5 = *(_QWORD *)&v2[OBJC_IVAR___PFDownloadsStateReportCollector_checker + 8];
  v7 = *(_QWORD *)&v2[OBJC_IVAR___PFDownloadsStateReportCollector_checker + 16];
  v8 = v2[OBJC_IVAR___PFDownloadsStateReportCollector_checker + 24];
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = v2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v6;
  *(_QWORD *)(v10 + 24) = v5;
  *(_QWORD *)(v10 + 32) = v7;
  *(_BYTE *)(v10 + 40) = v8;
  *(_QWORD *)(v10 + 48) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v10 + 56) = sub_1A91D210C;
  *(_QWORD *)(v10 + 64) = v9;
  v16[4] = sub_1A91D22B8;
  v16[5] = v10;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1A908A91C;
  v16[3] = &block_descriptor_19;
  v11 = _Block_copy(v16);
  v12 = v6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v13 = v12;
  swift_retain();
  v14 = v2;
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlock_, v11);
  _Block_release(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1A91D1D58(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, unint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD v22[2];

  v6 = sub_1A93F6DBC();
  MEMORY[0x1E0C80A78](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABDF40);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  v10 = type metadata accessor for DownloadStateReport();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  sub_1A91D2364(a1, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1A91D23AC((uint64_t)v9);
    if (a2)
    {
      swift_getErrorValue();
      sub_1A93F927C();
    }
    v22[0] = 0;
    v22[1] = 0xE000000000000000;
    sub_1A93F8C70();
    swift_bridgeObjectRelease();
    strcpy((char *)v22, "{ 'error': '");
    BYTE5(v22[1]) = 0;
    HIWORD(v22[1]) = -5120;
    sub_1A93F810C();
    sub_1A93F810C();
    sub_1A93F6DEC();
    swift_allocObject();
    sub_1A93F6DE0();
    sub_1A93F6DB0();
    sub_1A93F6DC8();
    v18 = sub_1A93F6DD4();
    v20 = v19;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    a3(v18, v20);
    return sub_1A905F180(v18, v20);
  }
  else
  {
    sub_1A91D23EC((uint64_t)v9, (uint64_t)v13);
    sub_1A93F6DEC();
    swift_allocObject();
    sub_1A93F6DE0();
    sub_1A93F6DB0();
    sub_1A93F6DC8();
    sub_1A91D2430();
    v14 = sub_1A93F6DD4();
    v16 = v15;
    swift_release();
    a3(v14, v16);
    sub_1A905F180(v14, v16);
    return sub_1A91D2478((uint64_t)v13);
  }
}

uint64_t sub_1A91D20E0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A91D210C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A91D1D58(a1, a2, *(void (**)(uint64_t, unint64_t))(v2 + 16));
}

id DownloadStateReportCollector.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DownloadStateReportCollector.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DownloadStateReportCollector.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownloadStateReportCollector();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A91D2274()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91D22B8()
{
  uint64_t v0;

  return sub_1A9322484(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void (**)(char *, _QWORD))(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t method lookup function for DownloadStateReportCollector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DownloadStateReportCollector.__allocating_init(managedObjectContext:episodePropertiesToReport:showPropertiesToReport:allEpisodes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DownloadStateReportCollector.generateReport(completionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t sub_1A91D2300()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1A91D2324()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (id)sub_1A93F729C();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

uint64_t sub_1A91D2364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABDF40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A91D23AC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABDF40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A91D23EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DownloadStateReport();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A91D2430()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEAB9C00;
  if (!qword_1EEAB9C00)
  {
    v1 = type metadata accessor for DownloadStateReport();
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for DownloadStateReport, v1);
    atomic_store(result, (unint64_t *)&qword_1EEAB9C00);
  }
  return result;
}

uint64_t sub_1A91D2478(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DownloadStateReport();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ScheduleFrequency.init(rawValue:)()
{
  return 0;
}

unint64_t sub_1A91D24CC()
{
  unint64_t result;

  result = qword_1EEAB9C08;
  if (!qword_1EEAB9C08)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ScheduleFrequency, &type metadata for ScheduleFrequency);
    atomic_store(result, (unint64_t *)&qword_1EEAB9C08);
  }
  return result;
}

_QWORD *sub_1A91D2510@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 0;
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for ScheduleFrequency()
{
  return &type metadata for ScheduleFrequency;
}

uint64_t ScheduledOperationScheduler.__allocating_init(schedule:scheduleStorage:)(uint64_t a1, uint64_t a2)
{
  return sub_1A91D25B0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A91D2A78);
}

id static ScheduledOperationScheduler.weekly.getter()
{
  if (qword_1ED2A4870 != -1)
    swift_once();
  return (id)qword_1ED2A7C20;
}

uint64_t ScheduledOperationScheduler.schedule.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ScheduledOperationScheduler.storage.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ScheduledOperationScheduler.init(schedule:scheduleStorage:)(uint64_t a1, uint64_t a2)
{
  return sub_1A91D25B0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A91D2AE0);
}

uint64_t sub_1A91D25B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v7;

  ObjectType = swift_getObjectType();
  v7 = swift_getObjectType();
  return a3(a1, a2, v3, ObjectType, v7);
}

uint64_t sub_1A91D267C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void (*v26)(char *, uint64_t);
  void *v27;
  unsigned int v28;
  void *v29;
  void *v30;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void (*v35)(void);
  uint64_t v36;
  uint64_t v37;

  v34 = a4;
  v35 = a3;
  v7 = sub_1A93F738C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v32 - v18;
  v20 = *(void **)(v4 + OBJC_IVAR___PFScheduledOperationScheduler_storage);
  v36 = a1;
  v37 = a2;
  v21 = (void *)sub_1A93F8010();
  v33 = v20;
  v22 = objc_msgSend(v20, sel_lastExecutionOf_, v21);

  if (v22)
  {
    sub_1A93F7368();

    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v16, v23, 1, v7);
  sub_1A90A13C8((uint64_t)v16, (uint64_t)v19);
  v24 = *(void **)(v4 + OBJC_IVAR___PFScheduledOperationScheduler_schedule);
  sub_1A93F7374();
  v25 = (void *)sub_1A93F7314();
  v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v10, v7);
  sub_1A90A1CA8((uint64_t)v19, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
  {
    v27 = 0;
  }
  else
  {
    v27 = (void *)sub_1A93F7314();
    v26(v13, v7);
  }
  v28 = objc_msgSend(v24, sel_shouldExecuteOn_previousExecution_, v25, v27);

  if (v28)
  {
    v35();
    v29 = (void *)sub_1A93F8010();
    sub_1A93F7374();
    v30 = (void *)sub_1A93F7314();
    v26(v10, v7);
    objc_msgSend(v33, sel_recordExecutionOf_at_, v29, v30);

  }
  return sub_1A90AC3A4((uint64_t)v19);
}

void ScheduledOperationScheduler.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ScheduledOperationScheduler.__deallocating_deinit()
{
  return sub_1A91D2A44(type metadata accessor for ScheduledOperationScheduler);
}

unint64_t static ScheduledOperationConstants.reportStorageAnalyticsOperation.getter()
{
  return 0xD000000000000012;
}

id ScheduledOperationConstants.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ScheduledOperationConstants.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduledOperationConstants();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ScheduledOperationConstants.__deallocating_deinit()
{
  return sub_1A91D2A44(type metadata accessor for ScheduledOperationConstants);
}

id sub_1A91D2A44(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id sub_1A91D2A78(uint64_t a1, uint64_t a2)
{
  objc_class *v4;
  char *v5;
  objc_super v7;

  v4 = (objc_class *)type metadata accessor for ScheduledOperationScheduler();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR___PFScheduledOperationScheduler_schedule] = a1;
  *(_QWORD *)&v5[OBJC_IVAR___PFScheduledOperationScheduler_storage] = a2;
  v7.receiver = v5;
  v7.super_class = v4;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_1A91D2AE0(uint64_t a1, uint64_t a2, char *a3)
{
  objc_super v4;

  *(_QWORD *)&a3[OBJC_IVAR___PFScheduledOperationScheduler_schedule] = a1;
  *(_QWORD *)&a3[OBJC_IVAR___PFScheduledOperationScheduler_storage] = a2;
  v4.receiver = a3;
  v4.super_class = (Class)type metadata accessor for ScheduledOperationScheduler();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for ScheduledOperationConstants()
{
  return objc_opt_self();
}

uint64_t method lookup function for ScheduledOperationScheduler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScheduledOperationScheduler.__allocating_init(schedule:scheduleStorage:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ScheduledOperationScheduler.evaluate(operation:_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

SHCatalog_optional __swiftcall TranscriptData.catalog()()
{
  uint64_t v0;
  objc_class *v1;
  id v2;
  Swift::Bool v3;
  objc_class *v4;
  SHCatalog_optional result;

  if (*(_BYTE *)(v0 + 64) == 1)
  {
    v1 = 0;
  }
  else
  {
    v1 = *(objc_class **)v0;
    v2 = *(id *)v0;
  }
  v4 = v1;
  result.value.super.isa = v4;
  result.is_nil = v3;
  return result;
}

uint64_t TranscriptData.transcriptModel()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;

  if (*((_BYTE *)v1 + 64))
  {
    v3 = v1[1];
    v4 = v1[2];
    v6 = v1[3];
    v5 = v1[4];
    v8 = v1[5];
    v7 = v1[6];
    if (*((_BYTE *)v1 + 64) == 1)
    {
      v9 = *v1;
      sub_1A90D8068(v6, v5);
      v10 = v8;
      v8 = v5;
    }
    else
    {
      v11 = v1[7];
      sub_1A90D8068(v5, v8);
      v10 = v7;
      v7 = v11;
      v9 = v3;
      v3 = v4;
      LOBYTE(v4) = v6;
      v6 = v5;
    }
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    *a1 = v9;
    a1[1] = v3;
    a1[2] = v4 & 1;
    a1[3] = v6;
    a1[4] = v8;
    a1[5] = v10;
    a1[6] = v7;
  }
  else
  {
    a1[6] = 0;
    *((_OWORD *)a1 + 1) = 0u;
    *((_OWORD *)a1 + 2) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

uint64_t _s18PodcastsFoundation14TranscriptDataO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[8];
  char v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;

  v3 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(unsigned __int8 *)(a1 + 64);
  v12 = *(void **)a2;
  v11 = *(_QWORD *)(a2 + 8);
  v14 = *(_QWORD *)(a2 + 16);
  v13 = *(_QWORD *)(a2 + 24);
  v15 = *(_QWORD *)(a2 + 32);
  v16 = *(_QWORD *)(a2 + 40);
  v18 = *(_QWORD *)(a2 + 48);
  v17 = *(_QWORD *)(a2 + 56);
  v19 = *(unsigned __int8 *)(a2 + 64);
  v86[0] = *(_QWORD *)a1;
  v86[1] = v2;
  v86[2] = v5;
  v86[3] = v4;
  v86[4] = v7;
  v86[5] = v6;
  v86[6] = v8;
  v86[7] = v9;
  v87 = v10;
  v88 = v12;
  v89 = v11;
  v90 = v14;
  v91 = v13;
  v92 = v15;
  v93 = v16;
  v94 = v18;
  v95 = v17;
  v96 = v19;
  v71 = v9;
  if (!v10)
  {
    if (!v19)
    {
      v66 = v7;
      v69 = v8;
      v54 = v2;
      v57 = v6;
      v61 = v5;
      v63 = v4;
      v31 = v17;
      sub_1A90AC898();
      sub_1A91D3170(v12, v11, v14, v13, v15, v16, v18, v31, 0);
      sub_1A91D3170(v3, v54, v61, v63, v66, v57, v69, v9, 0);
      v32 = sub_1A93F8A3C();
      sub_1A91D34B8((uint64_t)v86);
      return v32 & 1;
    }
    goto LABEL_10;
  }
  if (v10 != 1)
  {
    if (v19 == 2)
    {
      v67 = v7;
      v70 = v8;
      v58 = v6;
      v60 = v17;
      v62 = v5;
      v64 = v4;
      v34 = v2;
      v35 = v17;
      sub_1A90AC898();
      sub_1A91D3170(v12, v11, v14, v13, v15, v16, v18, v35, 2);
      v55 = v34;
      sub_1A91D3170(v3, v34, v62, v64, v67, v58, v70, v71, 2);
      v36 = v3;
      v37 = v12;
      sub_1A90D8068(v67, v58);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A90D8068(v15, v16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38 = v36;
      LOBYTE(v36) = sub_1A93F8A3C();

      if ((v36 & 1) != 0)
      {
        v79 = v55;
        v80 = v62;
        v81 = v64 & 1;
        v82 = v67;
        v83 = v58;
        v84 = v70;
        v85 = v71;
        v72 = v11;
        v73 = v14;
        v74 = v13 & 1;
        v75 = v15;
        v76 = v16;
        v77 = v18;
        v78 = v60;
        v30 = _s18PodcastsFoundation15TranscriptModelV2eeoiySbAC_ACtFZ_0((uint64_t)&v79, (uint64_t)&v72);
        sub_1A91D34B8((uint64_t)v86);
        sub_1A905F180(v15, v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A905F180(v67, v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v30 & 1;
      }
      sub_1A905F180(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A905F180(v67, v58);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_11:
      sub_1A91D34B8((uint64_t)v86);
      v30 = 0;
      return v30 & 1;
    }
LABEL_10:
    v39 = v12;
    v40 = v11;
    v41 = v5;
    v42 = v14;
    v43 = v4;
    v44 = v13;
    v45 = v7;
    v46 = v15;
    v47 = v6;
    v48 = v16;
    v49 = v8;
    v50 = v2;
    sub_1A91D3170(v39, v40, v42, v44, v46, v48, v18, v17, v19);
    sub_1A91D3170(v3, v50, v41, v43, v45, v47, v49, v9, v10);
    goto LABEL_11;
  }
  if (v19 != 1)
    goto LABEL_10;
  v79 = (uint64_t)v3;
  v80 = v2;
  v81 = v5 & 1;
  v82 = v4;
  v83 = v7;
  v84 = v6;
  v85 = v8;
  v72 = (uint64_t)v12;
  v73 = v11;
  v74 = v14 & 1;
  v75 = v13;
  v76 = v15;
  v77 = v16;
  v78 = v18;
  v20 = v16;
  v52 = v18;
  v53 = v16;
  v21 = v5;
  v22 = v4;
  v23 = v13;
  v24 = v15;
  v51 = v15;
  v25 = v7;
  v65 = v7;
  v26 = v18;
  v27 = v6;
  v28 = v8;
  v56 = v13;
  v59 = v17;
  v29 = v2;
  sub_1A91D3170(v12, v11, v14, v23, v24, v20, v26, v17, 1);
  v68 = v28;
  sub_1A91D3170(v3, v29, v21, v22, v25, v27, v28, v71, 1);
  sub_1A91D3170(v12, v11, v14, v56, v51, v53, v52, v59, 1);
  sub_1A91D3170(v3, v29, v21, v22, v65, v27, v28, v71, 1);
  v30 = _s18PodcastsFoundation15TranscriptModelV2eeoiySbAC_ACtFZ_0((uint64_t)&v79, (uint64_t)&v72);
  sub_1A91D34B8((uint64_t)v86);
  sub_1A91D3248(v12, v11, v14, v56, v51, v53, v52, v59, 1);
  sub_1A91D3248(v3, v29, v21, v22, v65, v27, v68, v71, 1);
  return v30 & 1;
}

id sub_1A91D3170(id result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  id v11;

  switch(a9)
  {
    case 2:
      v11 = result;
      sub_1A90D8068(a5, a6);
      swift_bridgeObjectRetain();
      return (id)swift_bridgeObjectRetain();
    case 1:
      sub_1A90D8068(a4, a5);
      swift_bridgeObjectRetain();
      return (id)swift_bridgeObjectRetain();
    case 0:
      return result;
  }
  return result;
}

void destroy for TranscriptData(uint64_t a1)
{
  sub_1A91D3248(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

void sub_1A91D3248(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 2:

      sub_1A905F180(a5, a6);
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      return;
    case 1:
      sub_1A905F180(a4, a5);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 0:

      break;
  }
}

uint64_t initializeWithCopy for TranscriptData(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1A91D3170(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for TranscriptData(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1A91D3170(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  sub_1A91D3248(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for TranscriptData(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_BYTE *)(a2 + 64);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_BYTE *)(a1 + 64);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 64) = v3;
  sub_1A91D3248(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t sub_1A91D3498(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64);
}

uint64_t sub_1A91D34A0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptData()
{
  return &type metadata for TranscriptData;
}

uint64_t sub_1A91D34B8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(void **)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  v10 = *(_BYTE *)(a1 + 136);
  sub_1A91D3248(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  sub_1A91D3248(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t UninitializedCurrentValueSubject.value.getter()
{
  return sub_1A93F79BC();
}

uint64_t UninitializedCurrentValueSubject.send(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = sub_1A93F8A90();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v11 - v7, a1, v3, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v3);
  sub_1A93F79B0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t UninitializedCurrentValueSubject.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = a4;
  v19 = a1;
  v7 = *(_QWORD *)(a2 + 16);
  sub_1A93F8A90();
  v8 = *(_QWORD *)(a2 + 24);
  v9 = sub_1A93F79D4();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95FB8], v9);
  v10 = sub_1A93F7734();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v17 - v12;
  v20 = *v4;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v7;
  v14[3] = v8;
  v15 = v18;
  v14[4] = a3;
  v14[5] = v15;
  swift_retain();
  sub_1A93F7B30();
  swift_release();
  swift_release();
  sub_1A93F7728();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1A91D3794()
{
  return swift_deallocObject();
}

uint64_t sub_1A91D37A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1A93F8A90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_1A91D37EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UninitializedCurrentValueSubject.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t EpisodeBookmarkState.dictionaryKey.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6B72616D6B6F6F62;
  else
    return 0x6D6B6F6F42746F6ELL;
}

uint64_t static EpisodeBookmarkState.initialState.getter()
{
  return 0;
}

uint64_t static EpisodeBookmarkState.defaultState.getter()
{
  return 0;
}

BOOL static EpisodeBookmarkState.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t EpisodeBookmarkState.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t EpisodeBookmarkState.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A91D38D0()
{
  _BYTE *v0;

  if (*v0)
    return 0x6B72616D6B6F6F62;
  else
    return 0x6D6B6F6F42746F6ELL;
}

uint64_t static EpisodeBookmarkState.state(for:)(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 10);
}

{
  return *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for ThinClientEpisodeStateModel() + 20));
}

uint64_t sub_1A91D3924@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = type metadata accessor for ThinClientEpisodeStateModel();
  *a2 = *(_BYTE *)(a1 + *(int *)(result + 20));
  return result;
}

uint64_t Subscribers.Completion.failure()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v5, v7);
    v9 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v9, 1, v7);
}

uint64_t DownloadedAsset.episodeUuid.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DownloadedAsset.fileURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DownloadedAsset() + 20);
  v4 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for DownloadedAsset()
{
  uint64_t result;

  result = qword_1EEAB9C80;
  if (!qword_1EEAB9C80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DownloadedAsset.init(episodeUuid:fileURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(type metadata accessor for DownloadedAsset() + 20);
  v6 = sub_1A93F726C();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t DownloadedAsset.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  type metadata accessor for DownloadedAsset();
  sub_1A93F726C();
  sub_1A9066CA8(&qword_1EEAB9148, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  return sub_1A93F7FB0();
}

uint64_t static DownloadedAsset.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    type metadata accessor for DownloadedAsset();
    JUMPOUT(0x1AF410F0CLL);
  }
  return 0;
}

uint64_t DownloadedAsset.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  type metadata accessor for DownloadedAsset();
  sub_1A93F726C();
  sub_1A9066CA8(&qword_1EEAB9148, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1A93F7FB0();
  return sub_1A93F9324();
}

uint64_t sub_1A91D3CD4()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  sub_1A93F726C();
  sub_1A9066CA8(&qword_1EEAB9148, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1A93F7FB0();
  return sub_1A93F9324();
}

uint64_t sub_1A91D3D58()
{
  sub_1A93F7FBC();
  sub_1A93F726C();
  sub_1A9066CA8(&qword_1EEAB9148, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  return sub_1A93F7FB0();
}

uint64_t sub_1A91D3DC8()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  sub_1A93F726C();
  sub_1A9066CA8(&qword_1EEAB9148, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1A93F7FB0();
  return sub_1A93F9324();
}

uint64_t sub_1A91D3E48()
{
  return sub_1A9066CA8(&qword_1EEAB9C20, (uint64_t (*)(uint64_t))type metadata accessor for DownloadedAsset, (uint64_t)&protocol conformance descriptor for DownloadedAsset);
}

uint64_t sub_1A91D3E74(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_1A93F90C0() & 1) != 0)
    JUMPOUT(0x1AF410F0CLL);
  return 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for DownloadedAsset(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1A93F726C();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for DownloadedAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for DownloadedAsset(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1A93F726C();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for DownloadedAsset(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for DownloadedAsset(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for DownloadedAsset(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadedAsset()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A91D4188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for DownloadedAsset()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A91D4210(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A91D4284()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F726C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id static CoreDataFetcher.contextProvider.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
}

void static CoreDataFetcher.fetchPodcast(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A91D4BB8(a1, a2, a3, a4, (uint64_t)&unk_1E54E24B8, (uint64_t)sub_1A91D4344, (uint64_t)&block_descriptor_20);
}

void sub_1A91D4344()
{
  sub_1A91D478C((SEL *)&selRef_podcastForUuid_);
}

void static CoreDataFetcher.performAndWaitOnPodcast<A>(with:block:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_1A91D4650(a1, a2, a3, a4, (uint64_t)sub_1A91D43F0, a5);
}

void sub_1A91D435C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_msgSend(a1, sel_objectInEntity_predicate_, CFSTR("MTPodcast"), a2);
  if (v4)
  {
    v5 = v4;
    objc_opt_self();
    v4 = (id)swift_dynamicCastObjCClass();
    if (!v4)
    {

      v4 = 0;
    }
  }
  v6 = v4;
  a3();

}

void sub_1A91D43F0()
{
  uint64_t v0;

  sub_1A91D435C(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(void))(v0 + 40));
}

uint64_t static CoreDataFetcher.performAndPublishOnPodcast<A>(with:queue:block:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12;
  id v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;

  v12 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v13 = objc_msgSend(v12, sel_mainOrPrivateContext);

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a6;
  v14[3] = v13;
  v14[4] = a1;
  v14[5] = a2;
  v14[6] = a4;
  v14[7] = a5;
  v15 = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  v16 = NSManagedObjectContext.performAndPublish<A>(queue:_:)(a3, (uint64_t)sub_1A91D4638, (uint64_t)v14, a6);

  swift_release();
  return v16;
}

void sub_1A91D44F4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  void *v6;
  __CFString *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;

  v6 = (void *)objc_opt_self();
  v7 = CFSTR("MTPodcast");
  v8 = (void *)sub_1A93F8010();
  v9 = objc_msgSend(v6, sel_predicateForPodcastUUID_, v8);

  v10 = objc_msgSend(a1, sel_objectInEntity_predicate_, v7, v9);
  if (!v10)
    goto LABEL_4;
  objc_opt_self();
  v11 = swift_dynamicCastObjCClass();
  if (!v11)
  {

LABEL_4:
    v11 = 0;
  }
  v12 = (id)v11;
  a4();

}

uint64_t sub_1A91D4604()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91D4638()
{
  return sub_1A91D48FC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A91D44F4);
}

void static CoreDataFetcher.performAndWaitOnChannel<A>(for:block:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_1A91D4650(a1, a2, a3, a4, (uint64_t)sub_1A91D4708, a5);
}

void sub_1A91D4650(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  id v12;
  id v13;
  _QWORD v14[8];

  v12 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v13 = objc_msgSend(v12, sel_mainOrPrivateContext);

  v14[2] = a4;
  v14[3] = v13;
  v14[4] = a1;
  v14[5] = a2;
  v14[6] = a3;
  NSManagedObjectContext.performAndWait<A>(_:)(a5, (uint64_t)v14, a4, a6);

}

void sub_1A91D4708()
{
  uint64_t v0;
  void (*v1)(void);
  id v2;

  v1 = *(void (**)(void))(v0 + 40);
  v2 = objc_msgSend(*(id *)(v0 + 24), sel_channelForStoreId_, *(_QWORD *)(v0 + 32));
  v1();

}

void static CoreDataFetcher.fetchEpisode(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A91D4BB8(a1, a2, a3, a4, (uint64_t)&unk_1E54E2530, (uint64_t)sub_1A91D4780, (uint64_t)&block_descriptor_9);
}

void sub_1A91D4780()
{
  sub_1A91D478C((SEL *)&selRef_episodeForUuid_);
}

void sub_1A91D478C(SEL *a1)
{
  uint64_t v1;

  sub_1A91D4CE8(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(id))(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

void static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  id v12;
  id v13;
  _QWORD v14[8];

  v12 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v13 = objc_msgSend(v12, sel_mainOrPrivateContext);

  v14[2] = a5;
  v14[3] = v13;
  v14[4] = a1;
  v14[5] = a2;
  v14[6] = a3;
  v14[7] = a4;
  NSManagedObjectContext.performAndWait<A>(_:)((uint64_t)sub_1A91D48F0, (uint64_t)v14, a5, a6);

}

void sub_1A91D486C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  void *v6;
  id v7;

  v6 = (void *)sub_1A93F8010();
  v7 = objc_msgSend(a1, sel_episodeForUuid_, v6);

  a4(v7);
}

uint64_t sub_1A91D48F0()
{
  return sub_1A91D48FC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A91D486C);
}

uint64_t sub_1A91D48FC(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[3], v1[4], v1[5], v1[6], v1[7], v1[2]);
}

void static CoreDataFetcher.performAndWaitWithSaveOnEpisode(with:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  id v9;
  id v10;
  _QWORD *v11;
  void *v12;
  id v13;
  _QWORD v14[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v10 = objc_msgSend(v9, sel_mainOrPrivateContext);

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v8;
  v11[3] = v10;
  v11[4] = a1;
  v11[5] = a2;
  v11[6] = a3;
  v11[7] = a4;
  v14[4] = sub_1A91D4B90;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1A908A91C;
  v14[3] = &block_descriptor_18_1;
  v12 = _Block_copy(v14);
  swift_retain();
  v13 = v10;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlockAndWaitWithSave_, v12);
  _Block_release(v12);
  swift_release();

}

uint64_t sub_1A91D4A6C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A91D4A90(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void *))
{
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v8 = (void *)sub_1A93F8010();
  v9 = objc_msgSend(a2, sel_episodeForUuid_, v8);

  swift_beginAccess();
  v10 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v9;

  swift_beginAccess();
  v11 = *(void **)(a1 + 16);
  v12 = v11;
  a5(v11);

}

uint64_t sub_1A91D4B54()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91D4B90()
{
  return sub_1A912D6C8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A91D4A90);
}

void static CoreDataFetcher.fetchStation(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A91D4BB8(a1, a2, a3, a4, (uint64_t)&unk_1E54E25F8, (uint64_t)sub_1A91D4D68, (uint64_t)&block_descriptor_24);
}

void sub_1A91D4BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v13;
  id v14;
  _QWORD *v15;
  void *v16;
  id v17;
  _QWORD v18[6];

  v13 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v14 = objc_msgSend(v13, sel_privateQueueContext);

  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  v15[6] = a4;
  v18[4] = a6;
  v18[5] = v15;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 1107296256;
  v18[2] = sub_1A908A91C;
  v18[3] = a7;
  v16 = _Block_copy(v18);
  v17 = v14;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_performBlock_, v16);
  _Block_release(v16);

}

void sub_1A91D4CE8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id), uint64_t a5, SEL *a6)
{
  void *v9;
  id v10;

  v9 = (void *)sub_1A93F8010();
  v10 = objc_msgSend(a1, *a6, v9);

  a4(v10);
}

void sub_1A91D4D68()
{
  sub_1A91D478C((SEL *)&selRef_playlistForUuid_);
}

void static CoreDataFetcher.fetchStationShow(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v9;
  id v10;
  _QWORD *v11;
  void *v12;
  id v13;
  _QWORD v14[6];

  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v10 = objc_msgSend(v9, sel_privateQueueContext);

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v4;
  v11[3] = a1;
  v11[4] = a2;
  v11[5] = v10;
  v11[6] = a3;
  v11[7] = a4;
  v14[4] = sub_1A91D5048;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1A908A91C;
  v14[3] = &block_descriptor_30;
  v12 = _Block_copy(v14);
  swift_bridgeObjectRetain();
  v13 = v10;
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlock_, v12);
  _Block_release(v12);

}

void sub_1A91D4EA4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void *))
{
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  _QWORD aBlock[6];
  void *v15;

  v15 = 0;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = &v15;
  v9[3] = a4;
  v9[4] = a2;
  v9[5] = a3;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1A91D7854;
  *(_QWORD *)(v10 + 24) = v9;
  aBlock[4] = sub_1A91D7850;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_110;
  v11 = _Block_copy(aBlock);
  v12 = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWait_, v11);

  _Block_release(v11);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((a3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v13 = v15;
    swift_release();
    a5(v13);

  }
}

uint64_t sub_1A91D5014()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91D5048()
{
  return sub_1A912D6C8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A91D4EA4);
}

uint64_t static CoreDataFetcher.fetchStationShow(stationShowUuid:with:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v15;
  _QWORD aBlock[6];
  uint64_t v17;

  v17 = 0;
  if (a3)
  {
    v6 = a3;
  }
  else
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v6 = objc_msgSend(v7, sel_mainOrPrivateContext);

  }
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = &v17;
  v8[3] = v6;
  v8[4] = a1;
  v8[5] = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1A91D5268;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1A9055748;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_39;
  v10 = _Block_copy(aBlock);
  v11 = a3;
  v12 = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWait_, v10);

  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v15 = v17;
    swift_release();
    return v15;
  }
  return result;
}

void sub_1A91D5200(void **a1, void *a2)
{
  void *v4;
  id v5;
  void *v6;

  v4 = (void *)sub_1A93F8010();
  v5 = objc_msgSend(a2, sel_podcastPlaylistSettingsForUuid_, v4);

  v6 = *a1;
  *a1 = v5;

}

void sub_1A91D5268()
{
  uint64_t v0;

  sub_1A91D5200(*(void ***)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1A91D5274()
{
  return swift_deallocObject();
}

void static CoreDataFetcher.fetchPodcast(adamId:feedUrl:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  id v11;
  id v12;
  _QWORD *v13;
  void *v14;
  id v15;
  _QWORD v16[6];

  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v12 = objc_msgSend(v11, sel_privateQueueContext);

  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v5;
  v13[3] = a1;
  v13[4] = a2;
  v13[5] = a3;
  v13[6] = v12;
  v13[7] = a4;
  v13[8] = a5;
  v16[4] = sub_1A91D53F0;
  v16[5] = v13;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1A908A91C;
  v16[3] = &block_descriptor_45;
  v14 = _Block_copy(v16);
  swift_bridgeObjectRetain();
  v15 = v12;
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_performBlock_, v14);
  _Block_release(v14);

}

uint64_t sub_1A91D53BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1A91D53F0()
{
  uint64_t v0;
  void (*v1)(void);
  id v2;

  v1 = *(void (**)(void))(v0 + 56);
  v2 = (id)_s18PodcastsFoundation15CoreDataFetcherC12fetchPodcast6adamId7feedUrl4withSo9MTPodcastCSgs5Int64V_SSSgSo22NSManagedObjectContextCtFZ_0(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
  v1();

}

uint64_t static CoreDataFetcher.performAndWaitOnPodcast<A>(adamId:feedUrl:block:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v27 = a7;
  v14 = sub_1A93F8A90();
  v25 = *(_QWORD *)(v14 - 8);
  v26 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v24 - v15;
  v17 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v18 = objc_msgSend(v17, sel_mainOrPrivateContext);

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 56))(v16, 1, 1, a6);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a6;
  v19[3] = v7;
  v19[4] = a1;
  v19[5] = a2;
  v19[6] = a3;
  v19[7] = v18;
  v19[8] = v16;
  v19[9] = a4;
  v19[10] = a5;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_1A91D6A5C;
  *(_QWORD *)(v20 + 24) = v19;
  aBlock[4] = sub_1A91D7850;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_55_0;
  v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v22 = v18;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v22, sel_performBlockAndWait_, v21);

  _Block_release(v21);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v21 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v27, v16, v26);
    return swift_release();
  }
  return result;
}

unint64_t sub_1A91D5650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(void *), uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  unint64_t result;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void (*v26)(void *);
  uint64_t v27;

  v26 = a7;
  v27 = a6;
  v11 = sub_1A93F8A90();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v26 - v13;
  v15 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  swift_bridgeObjectRetain();
  v16 = objc_msgSend(v15, sel_initWithLongLong_, a2, v26);
  v17 = objc_allocWithZone((Class)MTStoreIdentifier);
  v18 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v17, sel_initWithFeedUrl_storeIdentifier_, v18, v16);

  v20 = objc_msgSend((id)objc_opt_self(), sel_predicateForIdentifer_, v19);
  result = _s18PodcastsFoundation15CoreDataFetcherC05fetchA03for2by4withSaySo9MTPodcastCGSgSo11NSPredicateC_SaySo16NSSortDescriptorCGSo22NSManagedObjectContextCtFZ_0((uint64_t)v20, MEMORY[0x1E0DEE9D8], a5);
  if (!result)
  {

    v25 = 0;
LABEL_12:
    v26(v25);

    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a9 - 8) + 56))(v14, 0, 1, a9);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 40))(v27, v14, v11);
  }
  v22 = result;
  v23 = result & 0xFFFFFFFFFFFFFF8;
  if (!(result >> 62))
  {
    if (*(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_10:

    v25 = 0;
    goto LABEL_11;
  }
  result = sub_1A93F8E5C();
  if (!result)
    goto LABEL_10;
LABEL_4:
  if ((v22 & 0xC000000000000001) != 0)
  {
    v24 = (id)MEMORY[0x1AF4129DC](0, v22);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v23 + 16))
  {
    v24 = *(id *)(v22 + 32);
LABEL_7:
    v25 = v24;

LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A91D586C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4260);
  v4 = sub_1A93F89DC();
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v5 < 1)
      return swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
LABEL_3:
    *a3 = v4;
  return swift_bridgeObjectRelease();
}

void static CoreDataFetcher.fetchEpisode(contentId:guid:title:pubDate:podcastUuid:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  id v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v12 = v11;
  v35 = a4;
  v36 = a5;
  v34 = a3;
  v33 = a2;
  v32 = a1;
  v38 = a11;
  v39 = a8;
  v37 = a10;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v20 = objc_msgSend(v19, sel_privateQueueContext);

  sub_1A90A1CA8(a7, (uint64_t)v18);
  v21 = (*(unsigned __int8 *)(v16 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v22 = (v17 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject();
  v25 = v32;
  *(_QWORD *)(v24 + 16) = v12;
  *(_QWORD *)(v24 + 24) = v25;
  *(_BYTE *)(v24 + 32) = v33 & 1;
  v26 = v35;
  *(_QWORD *)(v24 + 40) = v34;
  *(_QWORD *)(v24 + 48) = v26;
  *(_QWORD *)(v24 + 56) = v36;
  *(_QWORD *)(v24 + 64) = a6;
  sub_1A90A13C8((uint64_t)v18, v24 + v21);
  v27 = (_QWORD *)(v24 + v22);
  v28 = v38;
  *v27 = v39;
  v27[1] = a9;
  *(_QWORD *)(v24 + v23) = v20;
  v29 = (_QWORD *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v29 = v37;
  v29[1] = v28;
  aBlock[4] = sub_1A91D6B8C;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_61;
  v30 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = v20;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v31, sel_performBlock_, v30);
  _Block_release(v30);

}

uint64_t static CoreDataFetcher.fetchEpisode(contentId:guid:title:pubDate:podcastUuid:with:)(uint64_t a1, char a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, unint64_t a8, unint64_t a9, void *a10)
{
  return sub_1A91D6FB8(a1, a2 & 1, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t static CoreDataFetcher.fetchEpisodes(for:sortDescriptors:fetchLimit:with:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  return sub_1A91D6C24(a1, a2, a3, a4 & 1, a5);
}

uint64_t static CoreDataFetcher.fetchEpisodes(fromSeason:newerThanEpisodeNumber:inPodcastWithUUID:)(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_privateQueueContext);

  v6 = (void *)objc_opt_self();
  v7 = (void *)sub_1A93F8010();
  v8 = objc_msgSend(v6, sel_predicateForAllEpisodesOnPodcastUuid_, v7);

  v9 = objc_msgSend(v6, sel_predicateForSeasonNumber_, a1);
  v10 = objc_msgSend(v6, sel_predicateForEpisodesWithEpisodeNumbersGreaterThan_, a2);
  v11 = objc_msgSend(v8, sel_AND_, v9);
  v12 = objc_msgSend(v11, sel_AND_, v10);

  v13 = MEMORY[0x1E0DEE9D8];
  v14 = sub_1A91D6C24((uint64_t)v12, MEMORY[0x1E0DEE9D8], 0, 1, v5);

  if (v14)
    v15 = v14;
  else
    v15 = v13;

  return v15;
}

uint64_t static CoreDataFetcher.fetchEpisodes(newerThan:inPodcastWithUUID:)()
{
  id v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_privateQueueContext);

  v2 = (void *)objc_opt_self();
  v3 = (void *)sub_1A93F8010();
  v4 = objc_msgSend(v2, sel_predicateForAllEpisodesOnPodcastUuid_, v3);

  v5 = (void *)sub_1A93F7314();
  v6 = objc_msgSend(v2, sel_predicateForEpisodesPublishedAfterDate_, v5);

  v7 = objc_msgSend(v4, sel_AND_, v6);
  v8 = MEMORY[0x1E0DEE9D8];
  v9 = sub_1A91D6C24((uint64_t)v7, MEMORY[0x1E0DEE9D8], 0, 1, v1);

  if (v9)
    v10 = v9;
  else
    v10 = v8;

  return v10;
}

uint64_t sub_1A91D5E34(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v4 = sub_1A93F89DC();
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v5 >= 1)
      goto LABEL_3;
LABEL_5:
    swift_bridgeObjectRelease();
    *a3 = MEMORY[0x1E0DEE9D8];
    return swift_bridgeObjectRelease();
  }
  if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    goto LABEL_5;
LABEL_3:
  *a3 = v4;
  return swift_bridgeObjectRelease();
}

void static CoreDataFetcher.episodeUuid(for:completion:)(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3)
{
  id v6;
  id v7;
  id v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  _QWORD v13[6];

  if (a1 < 0)
  {
    __break(1u);
  }
  else if (objc_msgSend((id)objc_opt_self(), sel_isNotEmpty_, a1))
  {
    v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v7 = objc_msgSend(v6, sel_privateQueueContext);

    v8 = objc_msgSend((id)objc_opt_self(), sel_predicateForEpisodeStoreTrackId_, a1);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = v7;
    v9[3] = v8;
    v9[4] = a2;
    v9[5] = a3;
    v13[4] = sub_1A91D7728;
    v13[5] = v9;
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 1107296256;
    v13[2] = sub_1A908A91C;
    v13[3] = &block_descriptor_67;
    v10 = _Block_copy(v13);
    v11 = v7;
    v12 = v8;
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_performBlock_, v10);
    _Block_release(v10);

  }
  else
  {
    a2(0, 0);
  }
}

uint64_t sub_1A91D60A4(void *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = objc_msgSend(a1, sel_objectInEntity_predicate_, CFSTR("MTEpisode"), a2);
  if (v4)
  {
    v5 = v4;
    objc_opt_self();
    v6 = (void *)swift_dynamicCastObjCClass();
    if (v6)
    {
      v7 = objc_msgSend(v6, sel_uuid);
      if (v7)
      {
        v8 = v7;
        v9 = sub_1A93F8040();
        v11 = v10;

        a3(v9, v11);
        return swift_bridgeObjectRelease();
      }
    }

  }
  return ((uint64_t (*)(_QWORD, _QWORD))a3)(0, 0);
}

void static CoreDataFetcher.fetchEpisode(for:on:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  _QWORD *v17;
  void *v18;
  id v19;
  id v20;
  _QWORD v21[6];

  if (!a4)
    goto LABEL_6;
  v9 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v9 = a3 & 0xFFFFFFFFFFFFLL;
  if (v9)
  {
    v10 = (void *)objc_opt_self();
    v11 = (void *)sub_1A93F8010();
    v12 = (void *)sub_1A93F8010();
    v13 = objc_msgSend(v10, sel_predicateForEpisodeGuid_onFeedURL_, v11, v12);

  }
  else
  {
LABEL_6:
    v14 = (void *)objc_opt_self();
    v12 = (void *)sub_1A93F8010();
    v13 = objc_msgSend(v14, sel_predicateForEpisodeGuid_, v12);
  }

  v15 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v16 = objc_msgSend(v15, sel_privateQueueContext);

  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v6;
  v17[3] = v13;
  v17[4] = v16;
  v17[5] = a5;
  v17[6] = a6;
  v21[4] = sub_1A91D7768;
  v21[5] = v17;
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 1107296256;
  v21[2] = sub_1A908A91C;
  v21[3] = &block_descriptor_73_0;
  v18 = _Block_copy(v21);
  v19 = v13;
  v20 = v16;
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_performBlock_, v18);

  _Block_release(v18);
}

void sub_1A91D6374(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id))
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  id v9;

  v5 = sub_1A91D6C24(a2, MEMORY[0x1E0DEE9D8], 1, 0, a3);
  if (!v5)
    goto LABEL_10;
  v6 = v5;
  v7 = v5 & 0xFFFFFFFFFFFFFF8;
  if (v5 >> 62)
  {
    if (sub_1A93F8E5C())
      goto LABEL_4;
    goto LABEL_9;
  }
  if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    a4(0);
    return;
  }
LABEL_4:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v8 = (id)MEMORY[0x1AF4129DC](0, v6);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = *(id *)(v6 + 32);
LABEL_7:
    v9 = v8;
    swift_bridgeObjectRelease();
    a4(v9);

    return;
  }
  __break(1u);
}

uint64_t CoreDataFetcher.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CoreDataFetcher.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id MTPropertyChangeQueryObserver.firstResult.getter()
{
  void *v0;
  uint64_t v1;
  id *v2;
  void *v3;
  id v4;
  id v5;
  _QWORD v7[6];

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  v2 = (id *)(v1 + 16);
  v7[4] = sub_1A91D7778;
  v7[5] = v1;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = sub_1A91D662C;
  v7[3] = &block_descriptor_79;
  v3 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(v0, sel_results_, v3);
  _Block_release(v3);
  swift_beginAccess();
  v4 = *v2;
  v5 = *v2;
  swift_release();
  return v4;
}

void sub_1A91D6558(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;

  if (!a1)
  {
    v5 = 0;
    goto LABEL_10;
  }
  v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1A93F8E5C();
    if (!v5)
      goto LABEL_8;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v5)
    {
LABEL_8:
      swift_bridgeObjectRelease();
LABEL_10:
      swift_beginAccess();
      v7 = *(void **)(a2 + 16);
      *(_QWORD *)(a2 + 16) = v5;

      return;
    }
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x1AF4129DC](0, a1);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v4 + 16))
  {
    v6 = *(id *)(a1 + 32);
LABEL_7:
    v5 = (uint64_t)v6;
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1A91D662C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = a2;
  v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
    v2 = sub_1A93F8310();
  }
  swift_retain();
  v3(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t _s18PodcastsFoundation15CoreDataFetcherC05fetchA03for2by4withSaySo9MTPodcastCGSgSo11NSPredicateC_SaySo16NSSortDescriptorCGSo22NSManagedObjectContextCtFZ_0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  id v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  _QWORD aBlock[6];
  uint64_t v17;

  v17 = 0;
  sub_1A93F8040();
  v5 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v6 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  objc_msgSend(v7, sel_setPredicate_, a1);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v8 = (void *)sub_1A93F82F8();
  objc_msgSend(v7, sel_setSortDescriptors_, v8);

  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a3;
  v9[3] = v7;
  v9[4] = &v17;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1A91D77F4;
  *(_QWORD *)(v10 + 24) = v9;
  aBlock[4] = sub_1A91D7850;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_99;
  v11 = _Block_copy(aBlock);
  v12 = a3;
  v13 = v7;
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWait_, v11);

  _Block_release(v11);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v12 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v15 = v17;
    swift_release();
    return v15;
  }
  return result;
}

uint64_t _s18PodcastsFoundation15CoreDataFetcherC12fetchPodcast6adamId7feedUrl4withSo9MTPodcastCSgs5Int64V_SSSgSo22NSManagedObjectContextCtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  id v16;
  id v17;

  v7 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  swift_bridgeObjectRetain();
  v8 = objc_msgSend(v7, sel_initWithLongLong_, a1);
  if (a3)
  {
    v9 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v10 = objc_msgSend(objc_allocWithZone((Class)MTStoreIdentifier), sel_initWithFeedUrl_storeIdentifier_, v9, v8);

  v11 = objc_msgSend((id)objc_opt_self(), sel_predicateForIdentifer_, v10);
  v12 = _s18PodcastsFoundation15CoreDataFetcherC05fetchA03for2by4withSaySo9MTPodcastCGSgSo11NSPredicateC_SaySo16NSSortDescriptorCGSo22NSManagedObjectContextCtFZ_0((uint64_t)v11, MEMORY[0x1E0DEE9D8], a4);
  if (!v12)
  {

    return 0;
  }
  v13 = v12;
  v14 = v12 & 0xFFFFFFFFFFFFFF8;
  if (!(v12 >> 62))
  {
    result = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_7;
LABEL_13:

    v17 = 0;
    goto LABEL_14;
  }
  result = sub_1A93F8E5C();
  if (!result)
    goto LABEL_13;
LABEL_7:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v16 = (id)MEMORY[0x1AF4129DC](0, v13);
    goto LABEL_10;
  }
  if (*(_QWORD *)(v14 + 16))
  {
    v16 = *(id *)(v13 + 32);
LABEL_10:
    v17 = v16;

LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A91D6A28()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1A91D6A5C()
{
  uint64_t v0;

  return sub_1A91D5650(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(_QWORD *)(v0 + 64), *(void (**)(void *))(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1A91D6A90()
{
  return swift_deallocObject();
}

uint64_t sub_1A91D6AA0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = sub_1A93F738C();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1A91D6B8C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  void (*v5)(void);
  id v6;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(void (**)(void))(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  v6 = (id)sub_1A91D6FB8(*(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(void **)(v0 + v4));
  v5();

}

uint64_t sub_1A91D6C24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  id v9;
  void *v10;
  id v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t result;
  uint64_t v19;
  _QWORD aBlock[6];
  uint64_t v21;

  v21 = 0;
  sub_1A93F8040();
  v9 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v10 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  objc_msgSend(v11, sel_setPredicate_, a1);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v12 = (void *)sub_1A93F82F8();
  objc_msgSend(v11, sel_setSortDescriptors_, v12);

  if ((a4 & 1) == 0)
    objc_msgSend(v11, sel_setFetchLimit_, a3);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a5;
  v13[3] = v11;
  v13[4] = &v21;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1A91D77D8;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_1A91D7850;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_89_0;
  v15 = _Block_copy(aBlock);
  v16 = a5;
  v17 = v11;
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_performBlockAndWait_, v15);

  _Block_release(v15);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v16 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v19 = v21;
    swift_release();
    return v19;
  }
  return result;
}

id sub_1A91D6E58(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  id result;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  id v10;
  id v11;
  double v12;
  double v13;
  void *v14;

  if (!(a2 >> 62))
  {
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
    return 0;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (!v3)
    return 0;
LABEL_3:
  result = (id)sub_1A93F72D8();
  v6 = v5;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v7 = MEMORY[0x1AF4129DC](0, a2);
    result = (id)swift_bridgeObjectRelease();
    if (v3 >= 1)
    {
LABEL_6:
      swift_bridgeObjectRetain();
      v8 = 0;
      v9 = 1.79769313e308;
      do
      {
        if ((a2 & 0xC000000000000001) != 0)
          v10 = (id)MEMORY[0x1AF4129DC](v8, a2);
        else
          v10 = *(id *)(a2 + 8 * v8 + 32);
        v11 = v10;
        ++v8;
        objc_msgSend(v10, sel_pubDate);
        v13 = vabdd_f64(v12, v6);
        if (v13 >= v9)
          v14 = v11;
        else
          v14 = (void *)v7;
        if (v13 < v9)
        {
          v7 = (uint64_t)v11;
          v9 = v13;
        }

      }
      while (v3 != v8);
      swift_bridgeObjectRelease();
      return (id)v7;
    }
    goto LABEL_21;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    result = *(id *)(a2 + 32);
    v7 = (uint64_t)result;
    if (v3 >= 1)
      goto LABEL_6;
LABEL_21:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A91D6FB8(uint64_t a1, char a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, unint64_t a8, unint64_t a9, void *a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unsigned int v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t result;
  id v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;

  v70 = a6;
  v71 = a7;
  v69 = a5;
  v72 = a10;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v15);
  v68 = (uint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v67 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v67 - v21;
  v23 = sub_1A93F738C();
  MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v67 - v25;
  MEMORY[0x1E0C80A78](v27);
  v32 = (unint64_t)&v67 - v31;
  if (!a9)
    goto LABEL_71;
  v33 = HIBYTE(a9) & 0xF;
  if ((a9 & 0x2000000000000000) == 0)
    v33 = a8 & 0xFFFFFFFFFFFFLL;
  if (!v33)
  {
LABEL_71:
    if ((a2 & 1) != 0 || !objc_msgSend((id)objc_opt_self(), sel_isNotEmpty_, a1))
      return 0;
    v44 = objc_msgSend((id)objc_opt_self(), sel_predicateForEpisodeStoreTrackId_, a1);
    v45 = sub_1A91D6C24((uint64_t)v44, MEMORY[0x1E0DEE9D8], 0, 1, v72);
    if (v45)
    {
      v38 = v45;
      v46 = v45 & 0xFFFFFFFFFFFFFF8;
      if (v45 >> 62)
      {
        if (sub_1A93F8E5C())
        {
LABEL_19:
          if ((v38 & 0xC000000000000001) != 0)
          {
            v47 = (id)MEMORY[0x1AF4129DC](0, v38);
          }
          else
          {
            if (!*(_QWORD *)(v46 + 16))
            {
              __break(1u);
              goto LABEL_56;
            }
            v47 = *(id *)(v38 + 32);
          }
          v43 = v47;
          swift_bridgeObjectRelease();

          return (uint64_t)v43;
        }
      }
      else if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
    }

    return 0;
  }
  v67 = v28;
  if (a4)
  {
    v34 = v29;
    v35 = (void *)objc_opt_self();
    v36 = (void *)sub_1A93F8010();
    v37 = (void *)sub_1A93F8010();
    v38 = (int64_t)objc_msgSend(v35, sel_predicateForEpisodeGuid_onPodcastUuid_, v36, v37);

    v39 = sub_1A91D6C24(v38, MEMORY[0x1E0DEE9D8], 0, 1, v72);
    if (v39)
    {
      a3 = v39;
      sub_1A90A1CA8(v71, (uint64_t)v22);
      v40 = v67;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v22, 1, v67) == 1)
      {
        sub_1A90AC3A4((uint64_t)v22);
        v41 = a3 & 0xFFFFFFFFFFFFFF8;
        if (a3 >> 62)
        {
          swift_bridgeObjectRetain();
          v64 = sub_1A93F8E5C();
          swift_bridgeObjectRelease();
          if (!v64)
            goto LABEL_59;
        }
        else if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_59;
        }
        if ((a3 & 0xC000000000000001) == 0)
        {
          if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            v42 = *(id *)(a3 + 32);
LABEL_13:
            v43 = v42;
LABEL_44:
            swift_bridgeObjectRelease();

            return (uint64_t)v43;
          }
          __break(1u);
          goto LABEL_58;
        }
LABEL_56:
        v42 = (id)MEMORY[0x1AF4129DC](0, a3);
        goto LABEL_13;
      }
      (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v32, v22, v40);
      v43 = sub_1A91D6E58(v32, a3);
LABEL_46:
      swift_bridgeObjectRelease();

      (*(void (**)(unint64_t, uint64_t))(v34 + 8))(v32, v40);
      return (uint64_t)v43;
    }
    goto LABEL_60;
  }
  if ((a2 & 1) != 0
    || (v48 = v29,
        v49 = v30,
        v50 = objc_msgSend((id)objc_opt_self(), sel_isNotEmpty_, a1),
        v30 = v49,
        v29 = v48,
        !v50))
  {
LABEL_35:
    v43 = v70;
    if (!v70)
      return (uint64_t)v43;
    v32 = v30;
    v34 = v29;
    v59 = (void *)objc_opt_self();
    v60 = (void *)sub_1A93F8010();
    a3 = sub_1A93F8010();
    v38 = (int64_t)objc_msgSend(v59, sel_predicateForEpisodeTitle_onPodcastUuid_, v60, a3);

    v61 = sub_1A91D6C24(v38, MEMORY[0x1E0DEE9D8], 0, 1, v72);
    if (v61)
    {
      a8 = v61;
      v62 = v68;
      sub_1A90A1CA8(v71, v68);
      v40 = v67;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v62, 1, v67) == 1)
      {
        sub_1A90AC3A4(v62);
        v41 = a8 & 0xFFFFFFFFFFFFFF8;
        if (!(a8 >> 62))
        {
          if (!*(_QWORD *)((a8 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_59:
            swift_bridgeObjectRelease();
            goto LABEL_60;
          }
          goto LABEL_40;
        }
LABEL_58:
        swift_bridgeObjectRetain();
        v65 = sub_1A93F8E5C();
        swift_bridgeObjectRelease();
        if (!v65)
          goto LABEL_59;
LABEL_40:
        if ((a8 & 0xC000000000000001) != 0)
        {
          v63 = (id)MEMORY[0x1AF4129DC](0, a8);
          goto LABEL_43;
        }
        if (*(_QWORD *)(v41 + 16))
        {
          v63 = *(id *)(a8 + 32);
LABEL_43:
          v43 = v63;
          goto LABEL_44;
        }
        __break(1u);
LABEL_65:
        swift_bridgeObjectRetain();
        v66 = sub_1A93F8E5C();
        result = swift_bridgeObjectRelease();
        if (!v66)
          goto LABEL_66;
        goto LABEL_29;
      }
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v34 + 32))(v32, v62, v40);
      v43 = sub_1A91D6E58(v32, a8);
      goto LABEL_46;
    }
LABEL_60:

    return 0;
  }
  v51 = (void *)objc_opt_self();
  v52 = objc_msgSend(v51, sel_predicateForEpisodeStoreTrackId_, a1);
  v53 = (void *)sub_1A93F8010();
  v54 = objc_msgSend(v51, sel_predicateForAllEpisodesOnPodcastUuid_, v53);

  v55 = objc_msgSend(v52, sel_AND_, v54);
  a3 = (unint64_t)v55;
  v32 = sub_1A91D6C24(a3, MEMORY[0x1E0DEE9D8], 0, 1, v72);

  if (!v32)
  {

    v29 = v48;
    v30 = v49;
    goto LABEL_35;
  }
  sub_1A90A1CA8(v71, (uint64_t)v19);
  v56 = v67;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v19, 1, v67) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v26, v19, v56);
    v43 = sub_1A91D6E58((uint64_t)v26, v32);
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v56);
    return (uint64_t)v43;
  }
  result = sub_1A90AC3A4((uint64_t)v19);
  v41 = v32 & 0xFFFFFFFFFFFFFF8;
  if (v32 >> 62)
    goto LABEL_65;
  if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_66:
    swift_bridgeObjectRelease();

    return 0;
  }
LABEL_29:
  if ((v32 & 0xC000000000000001) != 0)
  {
    v58 = (id)MEMORY[0x1AF4129DC](0, v32);
    goto LABEL_32;
  }
  if (*(_QWORD *)(v41 + 16))
  {
    v58 = *(id *)(v32 + 32);
LABEL_32:
    v43 = v58;
    swift_bridgeObjectRelease();

    return (uint64_t)v43;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A91D76F4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91D7728()
{
  uint64_t v0;

  return sub_1A91D60A4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t, uint64_t))(v0 + 32));
}

uint64_t sub_1A91D7734()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A91D7768()
{
  uint64_t v0;

  sub_1A91D6374(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void (**)(id))(v0 + 40));
}

void sub_1A91D7778(unint64_t a1)
{
  uint64_t v1;

  sub_1A91D6558(a1, v1);
}

uint64_t type metadata accessor for CoreDataFetcher()
{
  return objc_opt_self();
}

uint64_t method lookup function for CoreDataFetcher()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A91D77AC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A91D77D8()
{
  uint64_t v0;

  return sub_1A91D5E34(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unint64_t **)(v0 + 32));
}

uint64_t sub_1A91D77E4()
{
  return swift_deallocObject();
}

uint64_t sub_1A91D77F4()
{
  uint64_t v0;

  return sub_1A91D586C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unint64_t **)(v0 + 32));
}

uint64_t sub_1A91D7800()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_32Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A91D7840()
{
  return swift_deallocObject();
}

uint64_t ReadOnlyCurrentValueSubject.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t ReadOnlyCurrentValueSubject.value.getter()
{
  return sub_1A93F79BC();
}

uint64_t ReadOnlyCurrentValueSubject.receive<A>(subscriber:)()
{
  return sub_1A93F79C8();
}

uint64_t sub_1A91D78F8()
{
  return ReadOnlyCurrentValueSubject.receive<A>(subscriber:)();
}

uint64_t type metadata accessor for ReadOnlyCurrentValueSubject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ReadOnlyCurrentValueSubject);
}

double ArtworkStyle.iconCornerRadius(for:)(char a1, double a2, double a3)
{
  double v4;
  BOOL v7;

  if (a1)
  {
    if (a1 == 1)
    {
      if (a2 >= a3)
        a2 = a3;
      return a2 * 0.5;
    }
    else
    {
      return a3 * 0.5;
    }
  }
  else
  {
    v4 = 3.0;
    if (a2 < 10.0 || a2 > 39.0)
    {
      v4 = 4.0;
      if (a2 < 40.0 || a2 > 99.0)
      {
        v7 = a2 > 279.0 || a2 < 99.0;
        v4 = 6.0;
        if (v7)
          return 8.0;
      }
    }
    return v4;
  }
}

double static ArtworkStyle.iconHeight(for:width:)(char a1, double result)
{
  if (a1 == 2)
    return result * 3.0 * 0.25;
  return result;
}

double static ArtworkStyle.iconWidth(for:height:)(char a1, double result)
{
  if (a1 == 2)
    return result * 4.0 / 3.0;
  return result;
}

uint64_t ArtworkStyle.rawValue.getter(char a1)
{
  if (!a1)
    return 0x526465646E756F72;
  if (a1 == 1)
    return 0x646E756F72;
  return 1819044208;
}

uint64_t sub_1A91D7A50(_BYTE *a1, _BYTE *a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v2 = *a1;
  v3 = 0xE500000000000000;
  v4 = 0x646E756F72;
  if (v2 != 1)
  {
    v4 = 1819044208;
    v3 = 0xE400000000000000;
  }
  if (*a1)
    v5 = v4;
  else
    v5 = 0x526465646E756F72;
  if (v2)
    v6 = v3;
  else
    v6 = 0xEB00000000746365;
  v7 = 0xE500000000000000;
  v8 = 0x646E756F72;
  if (*a2 != 1)
  {
    v8 = 1819044208;
    v7 = 0xE400000000000000;
  }
  if (*a2)
    v9 = v8;
  else
    v9 = 0x526465646E756F72;
  if (*a2)
    v10 = v7;
  else
    v10 = 0xEB00000000746365;
  if (v5 == v9 && v6 == v10)
    v11 = 1;
  else
    v11 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1A91D7B40()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A91D7BDC()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A91D7C54()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A91D7CEC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s18PodcastsFoundation12ArtworkStyleO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1A91D7D18(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEB00000000746365;
  v4 = 0xE500000000000000;
  v5 = 0x646E756F72;
  if (v2 != 1)
  {
    v5 = 1819044208;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x526465646E756F72;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A91D7D74()
{
  sub_1A91D7F78();
  return sub_1A93F82BC();
}

uint64_t sub_1A91D7DD0()
{
  sub_1A91D7F78();
  return sub_1A93F828C();
}

uint64_t _s18PodcastsFoundation12ArtworkStyleO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_1A91D7E68()
{
  unint64_t result;

  result = qword_1EEAB9CB8;
  if (!qword_1EEAB9CB8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkStyle, &type metadata for ArtworkStyle);
    atomic_store(result, (unint64_t *)&qword_1EEAB9CB8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArtworkStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A91D7EF8 + 4 * byte_1A940EFE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A91D7F2C + 4 * byte_1A940EFE0[v4]))();
}

uint64_t sub_1A91D7F2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91D7F34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91D7F3CLL);
  return result;
}

uint64_t sub_1A91D7F48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91D7F50);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A91D7F54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91D7F5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkStyle()
{
  return &type metadata for ArtworkStyle;
}

unint64_t sub_1A91D7F78()
{
  unint64_t result;

  result = qword_1EEAB9CC0;
  if (!qword_1EEAB9CC0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkStyle, &type metadata for ArtworkStyle);
    atomic_store(result, (unint64_t *)&qword_1EEAB9CC0);
  }
  return result;
}

id GenericDataSourceSection.__allocating_init(title:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  uint64_t (**v6)();
  char *v7;
  objc_super v9;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = (uint64_t (**)())&v5[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  *v6 = sub_1A9123748;
  v6[1] = 0;
  v7 = &v5[OBJC_IVAR___MTGenericDataSourceSection_storedTitle];
  *(_QWORD *)v7 = a1;
  *((_QWORD *)v7 + 1) = a2;
  v9.receiver = v5;
  v9.super_class = v2;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t GenericDataSourceSection.storedTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___MTGenericDataSourceSection_storedTitle);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A91D8108()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock);
  swift_beginAccess();
  v2 = *v1;
  swift_retain();
  return v2;
}

uint64_t sub_1A91D815C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  return v1 & 1;
}

uint64_t sub_1A91D821C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_release();
}

uint64_t sub_1A91D8278@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(*a1 + OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock);
  swift_beginAccess();
  v5 = *v3;
  v4 = v3[1];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_1A91D869C;
  a2[1] = v6;
  return swift_retain();
}

uint64_t sub_1A91D82F8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (**v6)();

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = (uint64_t (**)())(*a2 + OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock);
  swift_beginAccess();
  *v6 = sub_1A91D866C;
  v6[1] = (uint64_t (*)())v5;
  swift_retain();
  return swift_release();
}

uint64_t (*sub_1A91D8388())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id GenericDataSourceSection.init(title:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t (**v3)();
  char *v4;
  objc_super v6;

  v3 = (uint64_t (**)())&v2[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  *v3 = sub_1A9123748;
  v3[1] = 0;
  v4 = &v2[OBJC_IVAR___MTGenericDataSourceSection_storedTitle];
  *(_QWORD *)v4 = a1;
  *((_QWORD *)v4 + 1) = a2;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for GenericDataSourceSection();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for GenericDataSourceSection()
{
  return objc_opt_self();
}

id GenericDataSourceSection.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void GenericDataSourceSection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id GenericDataSourceSection.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GenericDataSourceSection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for GenericDataSourceSection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GenericDataSourceSection.shouldIncludeSeeAllBlock.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of GenericDataSourceSection.shouldIncludeSeeAllBlock.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of GenericDataSourceSection.shouldIncludeSeeAllBlock.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of GenericDataSourceSection.__allocating_init(title:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1A91D8608()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A91D862C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1A91D8648()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91D866C()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_1A91D869C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result & 1;
  return result;
}

uint64_t UniquePipeline.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t UniquePipeline.cache.getter()
{
  return swift_retain();
}

uint64_t sub_1A91D86F4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t *sub_1A91D8714(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = *(_QWORD *)(v8 + 64) + 7;
  v12 = v9 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v12 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || ((v11 + (v10 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
  }
  else
  {
    v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
    v17 = ((unint64_t)a2 + v10) & v16;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v16, v17, v5);
    *(_QWORD *)((v11 + (((unint64_t)a1 + v10) & v16)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v11 + v17) & 0xFFFFFFFFFFFFF8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_1A91D8838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, v12, v5);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A91D8908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, v5);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A91D89C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, v5);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1A91D8A90(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v12 = AssociatedTypeWitness;
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = *(_QWORD *)(v7 + 64) + v13;
  v15 = *(_QWORD *)(v9 + 64) + 7;
  if (v11 < a2)
  {
    if (((((v15 + (v14 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v16 = 2;
    else
      v16 = a2 - v11 + 1;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v18 = v17;
    else
      v18 = 0;
    __asm { BR              X3 }
  }
  if (v8 == v11)
  {
    v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v21 = a1;
    v10 = *(unsigned int *)(v7 + 84);
    return v20(v21, v10, v12);
  }
  v21 = (v14 + a1) & ~v13;
  if ((_DWORD)v10 == v11)
  {
    v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    v12 = v5;
    return v20(v21, v10, v12);
  }
  v22 = *(_QWORD *)((v15 + v21) & 0xFFFFFFFFFFFFF8);
  if (v22 >= 0xFFFFFFFF)
    LODWORD(v22) = -1;
  return (v22 + 1);
}

void sub_1A91D8C28(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;

  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 >= a3)
  {
    v14 = 0u;
    if (a2 <= v10)
      goto LABEL_19;
  }
  else
  {
    if (((*(_DWORD *)(v9 + 64) + 7 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v11) & ~(_DWORD)v11)) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v12 = a3 - v10 + 1;
    else
      v12 = 2;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
    if (a2 <= v10)
LABEL_19:
      __asm { BR              X17 }
  }
  if (((*(_DWORD *)(v9 + 64) + 7 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v11) & ~(_DWORD)v11)) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v15 = ~v10 + a2;
    bzero(a1, ((*(_QWORD *)(v9 + 64) + 7 + ((*(_QWORD *)(v8 + 64) + v11) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v15;
  }
  __asm { BR              X10 }
}

void sub_1A91D8D68()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x1A91D8DFCLL);
}

void sub_1A91D8D70()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x1A91D8D78);
  JUMPOUT(0x1A91D8DFCLL);
}

void sub_1A91D8DC4()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x1A91D8DFCLL);
}

void sub_1A91D8DCC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x1A91D8DFCLL);
}

uint64_t sub_1A91D8DD4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_WORD *)(v11 + v13) = 0;
  if (!(_DWORD)v12)
    JUMPOUT(0x1A91D8DFCLL);
  if ((_DWORD)a2 == v7)
  {
    v2 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 56);
    v3 = v11;
    v4 = v12;
    a1 = a2;
  }
  else
  {
    v3 = (v9 + v11) & v10;
    if ((_DWORD)a1 != v7)
      JUMPOUT(0x1A91D8DE0);
    v2 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 56);
    v4 = v12;
  }
  return v2(v3, v4, a1);
}

uint64_t sub_1A91D8E14()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1A91D8E9C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t dispatch thunk of CategoriesProvider.getAllCategories(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t DummyReachability.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DummyReachability.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t DummyReachability.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DummyReachability.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DummyReachability()
{
  return objc_opt_self();
}

uint64_t method lookup function for DummyReachability()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DummyReachability.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of DummyReachability.isReachableViaCellular.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of DummyReachability.isGlobalCellularEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of DummyReachability.isReachable.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DummyReachability.isReachableViaWifi.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DummyReachability.isPodcastsCellularDownloadsEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of TimelineAligner.cancelReading()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TimelineAligner.align(asset:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of TimelineAligner.pauseReadingIfNeeded()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TimelineAligner.resumeReadingIfNeeded()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t PodcastsMediaLibrary.Request.init(playbackQueueContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int16 v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;

  sub_1A91D90A8(*(_QWORD **)a1, (uint64_t)&v33);
  v4 = v36;
  if (v36 == 255)
  {
    sub_1A91D9610(a1);
    sub_1A912AC30((uint64_t)&v16);
  }
  else
  {
    v6 = v34;
    v5 = v35;
    v15 = v33;
    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(void **)(a1 + 40);
    v9 = *(_QWORD *)(a1 + 24);
    swift_bridgeObjectRetain();
    v10 = v8;
    sub_1A91D9610(a1);
    v16 = v15;
    v17 = v6;
    v18 = v5;
    v19 = v4;
    v20 = v8;
    v21 = v9;
    v22 = v7;
    v23 = 0u;
    v24 = 0u;
    v25 = 0u;
    v26 = 0u;
    v27 = 0u;
    v29 = 0;
    v28 = 2;
    v30 = 0;
    v31 = 0;
    v32 = 2;
    nullsub_1(&v16, v11, v12, v13);
  }
  return sub_1A916D818((uint64_t)&v16, a2);
}

void sub_1A91D90A8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  void **v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  Swift::String v9;
  void *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  Swift::String v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char v46;
  uint64_t *v47;
  uint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  _QWORD *v54;
  unint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  _QWORD *v58;
  char v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  char v66;

  v4 = a1[2];
  if (v4 >= 2)
  {
    swift_bridgeObjectRetain();
    v5 = (void **)(a1 + 5);
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v8 = (uint64_t)*(v5 - 1);
      v7 = *v5;
      swift_bridgeObjectRetain_n();
      v9._countAndFlagsBits = v8;
      v9._object = v7;
      URLTrackIdentifier.init(string:)(v9);
      if (v10)
      {

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v11 = v65;
        if (v65)
        {
          v12 = v66;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v6 = sub_1A9118FC4(0, v6[2] + 1, 1, v6);
          v14 = v6[2];
          v13 = v6[3];
          if (v14 >= v13 >> 1)
            v6 = sub_1A9118FC4((_QWORD *)(v13 > 1), v14 + 1, 1, v6);
          v6[2] = v14 + 1;
          v15 = &v6[2 * v14];
          v15[4] = v11;
          *((_BYTE *)v15 + 40) = v12;
        }
      }
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v65 = MEMORY[0x1E0DEE9E8];
    swift_retain();
    v20 = swift_bridgeObjectRetain();
    v21 = sub_1A91D9A34(v20);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v21 + 16) == 1)
    {
      v22 = *(unsigned __int8 *)(v21 + 40);
      swift_bridgeObjectRelease();
      if (v22 == 4)
      {
        v23 = v6[2];
        if (v23)
        {
          v24 = v6 + 4;
          v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          v63 = a2;
          v64 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          while (1)
          {
            v26 = *v24;
            v27 = *(_QWORD *)(*v24 + 16);
            swift_bridgeObjectRetain();
            if (v27)
            {
              v28 = sub_1A912E634(3);
              if ((v29 & 1) != 0 && (v30 = (unint64_t *)(*(_QWORD *)(v26 + 56) + 16 * v28), (v31 = v30[1]) != 0))
              {
                v32 = *v30;
                swift_bridgeObjectRetain();
                v38 = sub_1A931883C(v32, v31);
                swift_bridgeObjectRelease();
                v39 = v64;
                v40 = v25;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v39 = sub_1A91181BC(0, v64[2] + 1, 1, v64);
                v42 = v39[2];
                v41 = v39[3];
                if (v42 >= v41 >> 1)
                  v39 = sub_1A91181BC((_QWORD *)(v41 > 1), v42 + 1, 1, v39);
                v64 = v39;
                v39[2] = v42 + 1;
                v39[v42 + 4] = v38;
                v25 = v40;
                a2 = v63;
                if (!*(_QWORD *)(v26 + 16))
                  goto LABEL_46;
              }
              else if (!*(_QWORD *)(v26 + 16))
              {
                goto LABEL_46;
              }
              v33 = sub_1A912E634(3);
              if ((v34 & 1) != 0)
              {
                v35 = (unint64_t *)(*(_QWORD *)(v26 + 56) + 16 * v33);
                v36 = v35[1];
                if (v36)
                {
                  v37 = *v35;
                  swift_bridgeObjectRetain();
                  v43 = sub_1A931883C(v37, v36);
                  swift_bridgeObjectRelease();
                  if (v43 && v43 != 1000000000000)
                  {
                    swift_bridgeObjectRelease();
                    v52 = 0;
                    v61 = 0;
                    v62 = 0;
                    v53 = 0;
LABEL_49:
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      v25 = sub_1A9118E88(0, v25[2] + 1, 1, v25);
                    v54 = v25;
                    v55 = v25[2];
                    v56 = v54;
                    v57 = v54[3];
                    if (v55 >= v57 >> 1)
                      v56 = sub_1A9118E88((_QWORD *)(v57 > 1), v55 + 1, 1, v56);
                    v56[2] = v55 + 1;
                    v58 = &v56[5 * v55];
                    v25 = v56;
                    v58[4] = v43;
                    v58[5] = v52;
                    v58[6] = v62;
                    v58[7] = v61;
                    *((_BYTE *)v58 + 64) = v53;
                    goto LABEL_47;
                  }
                }
              }
              if (*(_QWORD *)(v26 + 16))
              {
                v45 = sub_1A912E634(8);
                if ((v46 & 1) != 0)
                {
                  v47 = (uint64_t *)(*(_QWORD *)(v26 + 56) + 16 * v45);
                  v52 = v47[1];
                  if (v52)
                  {
                    if (*(_QWORD *)(v26 + 16))
                    {
                      v43 = *v47;
                      swift_bridgeObjectRetain();
                      v48 = sub_1A912E634(5);
                      if ((v49 & 1) != 0)
                      {
                        v50 = (uint64_t *)(*(_QWORD *)(v26 + 56) + 16 * v48);
                        v51 = v50[1];
                        v62 = *v50;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        v61 = v51;
                        if (v51)
                        {
                          v53 = 1;
                          goto LABEL_49;
                        }
                      }
                      else
                      {
                        swift_bridgeObjectRelease();
                      }
                    }
                  }
                }
              }
            }
LABEL_46:
            swift_bridgeObjectRelease();
LABEL_47:
            v24 += 2;
            if (!--v23)
              goto LABEL_62;
          }
        }
        v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v64 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_62:
        swift_bridgeObjectRelease();
        v60 = (_QWORD *)(a2 + 8);
        if (v64[2] >= v25[2])
        {
          swift_bridgeObjectRelease();
          *(_QWORD *)a2 = v64;
          *(_QWORD *)(a2 + 16) = 0;
          *(_QWORD *)(a2 + 24) = 0;
          *v60 = 0;
          v59 = 1;
        }
        else
        {
          swift_bridgeObjectRelease();
          *(_QWORD *)a2 = v25;
          *(_QWORD *)(a2 + 16) = 0;
          *(_QWORD *)(a2 + 24) = 0;
          *v60 = 0;
          v59 = 7;
        }
        goto LABEL_58;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_57:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    v59 = -1;
LABEL_58:
    *(_BYTE *)(a2 + 32) = v59;
    return;
  }
  if (!v4)
    goto LABEL_57;
  v17 = a1[4];
  v16 = (void *)a1[5];
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = v17;
  v18._object = v16;
  URLTrackIdentifier.init(string:)(v18);
  if (v19)
  {

    goto LABEL_57;
  }
  if (!v65)
    goto LABEL_57;
  sub_1A91D964C((uint64_t)&v65);
  swift_bridgeObjectRelease();
}

uint64_t sub_1A91D9610(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A91D964C(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_1A91D968C()
{
  uint64_t v0;

  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_BYTE *)(v0 + 32) = 8;
}

uint64_t sub_1A91D9A34(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BYTE *i;
  uint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE v17[2];
  uint64_t v18;
  char v19;
  uint64_t v20;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = 0;
  v3 = result + 40;
  v4 = -(uint64_t)v1;
  v5 = MEMORY[0x1E0DEE9D8];
  v15 = result + 40;
  v16 = *(_QWORD *)(result + 16);
  do
  {
    if (v2 <= v1)
      v6 = v1;
    else
      v6 = v2;
    v7 = -(uint64_t)v6;
    for (i = (_BYTE *)(v3 + 16 * v2++); ; i += 16)
    {
      if (v7 + v2 == 1)
      {
        __break(1u);
        return result;
      }
      v9 = *((_QWORD *)i - 1);
      v10 = *i;
      v18 = v9;
      v19 = v10;
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      sub_1A93281AC((uint64_t)v17, v17[1]);
      if ((v11 & 1) != 0)
        break;
      result = swift_bridgeObjectRelease();
      ++v2;
      if (v4 + v2 == 1)
        return v5;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    v20 = v5;
    if ((result & 1) == 0)
    {
      result = sub_1A929E658(0, *(_QWORD *)(v5 + 16) + 1, 1);
      v5 = v20;
    }
    v13 = *(_QWORD *)(v5 + 16);
    v12 = *(_QWORD *)(v5 + 24);
    if (v13 >= v12 >> 1)
    {
      result = sub_1A929E658(v12 > 1, v13 + 1, 1);
      v5 = v20;
    }
    *(_QWORD *)(v5 + 16) = v13 + 1;
    v14 = v5 + 16 * v13;
    *(_QWORD *)(v14 + 32) = v9;
    *(_BYTE *)(v14 + 40) = v10;
    v3 = v15;
    v1 = v16;
  }
  while (v4 + v2);
  return v5;
}

uint64_t MetricsPageVariant.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t MetricsPageVariant.debugDescription.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD00000000000001ELL;
}

unint64_t sub_1A91D9C8C()
{
  return MetricsPageVariant.debugDescription.getter();
}

uint64_t MetricsPageVariant.description.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t MetricsPageVariant.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_1A93F90CC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsPageVariant.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F912C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsPageVariant.basic.getter()
{
  return 0x6369736162;
}

uint64_t static MetricsPageVariant.episodes.getter()
{
  return 0x7365646F73697045;
}

uint64_t static MetricsPageVariant.shows.getter()
{
  return 0x73776F6853;
}

uint64_t static MetricsPageVariant.video.getter()
{
  return 0x6F65646976;
}

unint64_t sub_1A91D9E74()
{
  unint64_t result;

  result = qword_1EEAB9DF8;
  if (!qword_1EEAB9DF8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsPageVariant, &type metadata for MetricsPageVariant);
    atomic_store(result, (unint64_t *)&qword_1EEAB9DF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsPageVariant()
{
  return &type metadata for MetricsPageVariant;
}

uint64_t sub_1A91D9EC8()
{
  uint64_t result;

  sub_1A9072534(0, &qword_1ED2A95B0);
  result = sub_1A93F8A60();
  qword_1EEAB9E00 = result;
  return result;
}

uint64_t sub_1A91D9F60()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_1A91DA00C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_delegate);
  swift_beginAccess();
  *v3 = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_1A91DA05C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_delegate);
  swift_beginAccess();
  *v3 = v2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1A91DA0C4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id MAPIResponseDatabaseObjectProvider.__allocating_init(with:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1A91DB748(a1);
  swift_unknownObjectRelease();
  return v4;
}

id MAPIResponseDatabaseObjectProvider.init(with:)(uint64_t a1)
{
  id v1;

  v1 = sub_1A91DB748(a1);
  swift_unknownObjectRelease();
  return v1;
}

void *sub_1A91DA1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  id v15;

  sub_1A91DA370();
  v5 = qword_1EEAB6CF8;
  v6 = *(id *)(v2 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_databaseObjectsCache);
  if (v5 != -1)
    swift_once();
  v7 = objc_msgSend(v6, sel_objectForKey_, qword_1EEAB9E00);

  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9E18);
    sub_1A93F7EF0();

  }
  v8 = sub_1A911581C(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_1A906C428(a2), (v10 & 1) != 0))
  {
    v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v11 + 16) && (v12 = sub_1A906C424(a1), (v13 & 1) != 0))
    {
      v14 = *(void **)(*(_QWORD *)(v11 + 56) + 8 * v12);
      v15 = v14;
    }
    else
    {
      v14 = 0;
    }
  }
  else
  {
    v14 = 0;
  }
  swift_bridgeObjectRelease();
  return v14;
}

void sub_1A91DA370()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  if (*(_BYTE *)(v0 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_needsParsing) == 1)
  {
    v1 = v0;
    v21 = OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_needsParsing;
    v2 = (_QWORD *)sub_1A911581C(MEMORY[0x1E0DEE9D8]);
    v3 = 0;
    while (1)
    {
      v5 = *(char **)((char *)&unk_1E54D7050 + v3 + 32);
      v6 = (void *)sub_1A91DA5C0(v5);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v23 = v2;
      v8 = v2;
      v10 = sub_1A906C428((uint64_t)v5);
      v11 = v2[2];
      v12 = (v9 & 1) == 0;
      v13 = v11 + v12;
      if (__OFADD__(v11, v12))
      {
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      v14 = v9;
      if (v2[3] >= v13)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v2 = v23;
          if ((v9 & 1) == 0)
            goto LABEL_12;
        }
        else
        {
          v8 = &v23;
          sub_1A9309118();
          v2 = v23;
          if ((v14 & 1) == 0)
            goto LABEL_12;
        }
      }
      else
      {
        sub_1A9301810(v13, isUniquelyReferenced_nonNull_native);
        v8 = v23;
        v15 = sub_1A906C428((uint64_t)v5);
        if ((v14 & 1) != (v16 & 1))
        {
          sub_1A93F9258();
          __break(1u);
          return;
        }
        v10 = v15;
        v2 = v23;
        if ((v14 & 1) == 0)
        {
LABEL_12:
          v2[(v10 >> 6) + 8] |= 1 << v10;
          v17 = 8 * v10;
          *(_QWORD *)(v2[6] + v17) = v5;
          *(_QWORD *)(v2[7] + v17) = v6;
          v18 = v2[2];
          v19 = __OFADD__(v18, 1);
          v20 = v18 + 1;
          if (v19)
            goto LABEL_20;
          v2[2] = v20;
          goto LABEL_4;
        }
      }
      v4 = v2[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v4 + 8 * v10) = v6;
LABEL_4:
      swift_bridgeObjectRelease();
      v3 += 8;
      if (v3 == 48)
      {
        v8 = *(id *)(v1 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_databaseObjectsCache);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9E18);
        v6 = (void *)sub_1A93F7ED8();
        swift_bridgeObjectRelease();
        if (qword_1EEAB6CF8 == -1)
        {
LABEL_17:
          objc_msgSend(v8, sel_setObject_forKey_, v6, qword_1EEAB9E00, v21);

          *(_BYTE *)(v1 + v22) = 0;
          return;
        }
LABEL_21:
        swift_once();
        goto LABEL_17;
      }
    }
  }
}

uint64_t sub_1A91DA5C0(char *a1)
{
  uint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t isUniquelyReferenced_nonNull_native;
  void *v57;
  id v58;
  void *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  char v69;
  unint64_t v70;
  uint64_t v71;
  _BOOL8 v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  void *v80;
  char *v81;
  id v82;
  id v83;
  id v84;
  void *v85;
  void *v86;
  id v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  id v92;
  void *v93;
  void *v94;
  uint64_t v95;
  void *v96;
  id v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  id v103;
  uint64_t v104;
  unint64_t v105;
  _QWORD *v106;
  char v107;
  unint64_t v108;
  uint64_t v109;
  _BOOL8 v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  char *v118;
  id v119;
  id v120;
  id v121;
  void *v122;
  void *v123;
  id v124;
  void *v125;
  void *v126;
  void *v127;
  id v128;
  void *v129;
  id v130;
  id v131;
  void *v132;
  id v133;
  void *v134;
  uint64_t v135;
  unint64_t v137;
  unint64_t v138;
  id v139[2];

  v139[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_response), sel_itemsFor_));
  v3 = sub_1A93F8310();

  if (v3 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v4 = sub_1A93F8E5C();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v6 = 4;
      while (1)
      {
        v7 = v6 - 4;
        if ((v3 & 0xC000000000000001) != 0)
        {
          v8 = (void *)MEMORY[0x1AF4129DC](v6 - 4, v3);
          v9 = v6 - 3;
          if (__OFADD__(v7, 1))
            goto LABEL_18;
        }
        else
        {
          v8 = *(void **)(v3 + 8 * v6);
          swift_unknownObjectRetain();
          v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        v10 = v5;
        if ((objc_msgSend(v8, sel_respondsToSelector_, sel_id) & 1) == 0)
          __break(1u);
        v11 = objc_msgSend(v8, sel_id);
        v12 = sub_1A93F8040();
        v14 = v13;

        v15 = sub_1A92D719C(v12, v14);
        LOBYTE(v12) = v16;
        swift_unknownObjectRelease();
        if ((v12 & 1) != 0)
        {
          v5 = v10;
        }
        else
        {
          v5 = v10;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v5 = sub_1A9118AF8(0, v10[2] + 1, 1, v10);
          v18 = v5[2];
          v17 = v5[3];
          if (v18 >= v17 >> 1)
            v5 = sub_1A9118AF8((_QWORD *)(v17 > 1), v18 + 1, 1, v5);
          v5[2] = v18 + 1;
          v5[v18 + 4] = v15;
        }
        ++v6;
        if (v9 == v4)
          goto LABEL_21;
      }
    }
  }
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_21:
  swift_bridgeObjectRelease_n();
  v19 = (void *)MEMORY[0x1E0DEE9D8];
  v20 = sub_1A91156D0(MEMORY[0x1E0DEE9D8]);
  if ((unint64_t)(a1 - 2) < 4)
  {
    swift_bridgeObjectRelease();
    v21 = sub_1A91156D0(MEMORY[0x1E0DEE9D8]);
    swift_bridgeObjectRelease();
    return v21;
  }
  v23 = v5;
  if (!a1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1A94055A0;
    *(_QWORD *)(v24 + 32) = sub_1A93F8040();
    *(_QWORD *)(v24 + 40) = v25;
    *(_QWORD *)(v24 + 48) = sub_1A93F8040();
    *(_QWORD *)(v24 + 56) = v26;
    *(_QWORD *)(v24 + 64) = sub_1A93F8040();
    *(_QWORD *)(v24 + 72) = v27;
    sub_1A93F8040();
    v28 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
    v29 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v30 = (char *)objc_msgSend(v28, sel_initWithEntityName_, v29);

    v31 = v5[2];
    a1 = v30;
    if (v31)
    {
      v139[0] = v19;
      sub_1A93F8D84();
      v32 = 0;
      do
      {
        v33 = v32 + 1;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, v5[v32 + 4]);
        sub_1A93F8D60();
        sub_1A93F8D90();
        v5 = v23;
        sub_1A93F8D9C();
        sub_1A93F8D6C();
        v32 = v33;
      }
      while (v31 != v33);
      v34 = v139[0];
      swift_bridgeObjectRelease();
      v30 = a1;
    }
    else
    {
      swift_bridgeObjectRelease();
      v34 = (id)MEMORY[0x1E0DEE9D8];
    }
    v48 = (void *)objc_opt_self();
    sub_1A9159A30((unint64_t)v34);
    swift_bridgeObjectRelease();
    sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
    sub_1A91A80C8();
    v49 = (void *)sub_1A93F85EC();
    swift_bridgeObjectRelease();
    v50 = objc_msgSend(v48, sel_predicateForPodcastStoreIDs_, v49);

    v51 = objc_msgSend(v48, sel_predicateForNotHiddenPodcasts);
    v52 = objc_msgSend(v50, sel_AND_, v51);

    objc_msgSend(v30, sel_setPredicate_, v52);
    sub_1A911E988(v24);
    v53 = (void *)sub_1A93F82F8();
    swift_bridgeObjectRelease();
    objc_msgSend(v30, sel_setPropertiesToFetch_, v53);

    sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
    v54 = (void *)sub_1A93F82F8();
    objc_msgSend(v30, sel_setSortDescriptors_, v54);

    v55 = OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_showsFRC;
    isUniquelyReferenced_nonNull_native = v20;
    if (*(_QWORD *)(v135 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_showsFRC))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v80 = (void *)objc_opt_self();
      v81 = v30;
      v82 = objc_msgSend(v80, sel_sharedInstance);
      v83 = objc_msgSend(v82, sel_mainQueueContext);

      v84 = objc_msgSend(objc_allocWithZone((Class)MTFetchedResultsController), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v81, v83, 0, 0);
      v85 = *(void **)(v135 + v55);
      *(_QWORD *)(v135 + v55) = v84;

      v86 = *(void **)(v135 + v55);
      if (v86)
      {
        v87 = v86;
        v88 = (void *)sub_1A93F82F8();
        swift_bridgeObjectRelease();
        objc_msgSend(v87, sel_setPropertyKeys_, v88);

        v89 = *(void **)(v135 + v55);
        if (!v89)
          goto LABEL_93;
      }
      else
      {
        swift_bridgeObjectRelease();
        v89 = *(void **)(v135 + v55);
        if (!v89)
          goto LABEL_93;
      }
      objc_msgSend(v89, sel_setDelegate_, v135);
      v127 = *(void **)(v135 + v55);
      if (!v127)
        goto LABEL_93;
      v139[0] = 0;
      if (objc_msgSend(v127, sel_performFetch_, v139))
      {
        v128 = v139[0];
      }
      else
      {
        v131 = v139[0];
        v132 = (void *)sub_1A93F7128();

        swift_willThrow();
      }
    }
    v57 = *(void **)(v135 + v55);
    if (v57)
    {
      v58 = objc_msgSend(v57, sel_fetchedObjects);
      if (v58)
      {
        v59 = v58;
        sub_1A9072534(0, (unint64_t *)&qword_1ED2A4260);
        v60 = sub_1A93F8310();

        if (v60 >> 62)
          goto LABEL_102;
        v61 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        while (v61)
        {
          v137 = v60 & 0xC000000000000001;
          v62 = 4;
          while (1)
          {
            v64 = v137 ? (id)MEMORY[0x1AF4129DC](v62 - 4, v60) : *(id *)(v60 + 8 * v62);
            v65 = v64;
            v66 = v62 - 3;
            if (__OFADD__(v62 - 4, 1))
              break;
            v67 = v60;
            v60 = (unint64_t)objc_msgSend(v64, sel_storeCollectionId);
            v68 = (_QWORD *)isUniquelyReferenced_nonNull_native;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v139[0] = v68;
            v70 = sub_1A906C424(v60);
            v71 = v68[2];
            v72 = (v69 & 1) == 0;
            v73 = v71 + v72;
            if (__OFADD__(v71, v72))
              goto LABEL_98;
            v74 = v69;
            if (v68[3] >= v73)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                sub_1A9308F74();
            }
            else
            {
              sub_1A9301558(v73, isUniquelyReferenced_nonNull_native);
              v75 = sub_1A906C424(v60);
              if ((v74 & 1) != (v76 & 1))
                goto LABEL_108;
              v70 = v75;
            }
            isUniquelyReferenced_nonNull_native = (uint64_t)v139[0];
            if ((v74 & 1) != 0)
            {
              v63 = *((_QWORD *)v139[0] + 7);

              *(_QWORD *)(v63 + 8 * v70) = v65;
            }
            else
            {
              *((_QWORD *)v139[0] + (v70 >> 6) + 8) |= 1 << v70;
              *(_QWORD *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 48) + 8 * v70) = v60;
              *(_QWORD *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 56) + 8 * v70) = v65;
              v77 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
              v78 = __OFADD__(v77, 1);
              v79 = v77 + 1;
              if (v78)
                goto LABEL_100;
              *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16) = v79;
            }
            swift_bridgeObjectRelease();
            ++v62;
            v60 = v67;
            if (v66 == v61)
              goto LABEL_105;
          }
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          swift_bridgeObjectRetain_n();
          v61 = sub_1A93F8E5C();
          swift_bridgeObjectRelease();
        }
        goto LABEL_105;
      }
    }
LABEL_93:

    return isUniquelyReferenced_nonNull_native;
  }
  if (a1 != (char *)1)
    goto LABEL_109;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1A940F470;
  *(_QWORD *)(v35 + 32) = sub_1A93F8040();
  *(_QWORD *)(v35 + 40) = v36;
  *(_QWORD *)(v35 + 48) = sub_1A93F8040();
  *(_QWORD *)(v35 + 56) = v37;
  *(_QWORD *)(v35 + 64) = sub_1A93F8040();
  *(_QWORD *)(v35 + 72) = v38;
  *(_QWORD *)(v35 + 80) = sub_1A93F8040();
  *(_QWORD *)(v35 + 88) = v39;
  *(_QWORD *)(v35 + 96) = sub_1A93F8040();
  *(_QWORD *)(v35 + 104) = v40;
  *(_QWORD *)(v35 + 112) = sub_1A93F8040();
  *(_QWORD *)(v35 + 120) = v41;
  sub_1A93F8040();
  v42 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v43 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v30 = (char *)objc_msgSend(v42, sel_initWithEntityName_, v43);

  v44 = v5[2];
  a1 = v30;
  if (v44)
  {
    v139[0] = v19;
    sub_1A93F8D84();
    v45 = 0;
    do
    {
      v46 = v45 + 1;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, v5[v45 + 4]);
      sub_1A93F8D60();
      sub_1A93F8D90();
      v5 = v23;
      sub_1A93F8D9C();
      sub_1A93F8D6C();
      v45 = v46;
    }
    while (v44 != v46);
    v47 = v139[0];
    swift_bridgeObjectRelease();
    v30 = a1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v47 = (id)MEMORY[0x1E0DEE9D8];
  }
  v90 = (void *)objc_opt_self();
  sub_1A9159A30((unint64_t)v47);
  swift_bridgeObjectRelease();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
  sub_1A91A80C8();
  v91 = (void *)sub_1A93F85EC();
  swift_bridgeObjectRelease();
  v92 = objc_msgSend(v90, sel_predicateForEpisodeStoreTrackIds_, v91);

  objc_msgSend(v30, sel_setPredicate_, v92);
  sub_1A911E988(v35);
  v93 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_setPropertiesToFetch_, v93);

  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v94 = (void *)sub_1A93F82F8();
  objc_msgSend(v30, sel_setSortDescriptors_, v94);

  v95 = OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_episodesFRC;
  isUniquelyReferenced_nonNull_native = v20;
  if (*(_QWORD *)(v135 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_episodesFRC))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v117 = (void *)objc_opt_self();
    v118 = v30;
    v119 = objc_msgSend(v117, sel_sharedInstance);
    v120 = objc_msgSend(v119, sel_mainQueueContext);

    v121 = objc_msgSend(objc_allocWithZone((Class)MTFetchedResultsController), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v118, v120, 0, 0);
    v122 = *(void **)(v135 + v95);
    *(_QWORD *)(v135 + v95) = v121;

    v123 = *(void **)(v135 + v95);
    if (v123)
    {
      v124 = v123;
      v125 = (void *)sub_1A93F82F8();
      swift_bridgeObjectRelease();
      objc_msgSend(v124, sel_setPropertyKeys_, v125);

      v126 = *(void **)(v135 + v95);
      if (!v126)
        goto LABEL_93;
    }
    else
    {
      swift_bridgeObjectRelease();
      v126 = *(void **)(v135 + v95);
      if (!v126)
        goto LABEL_93;
    }
    objc_msgSend(v126, sel_setDelegate_, v135);
    v129 = *(void **)(v135 + v95);
    if (!v129)
      goto LABEL_93;
    v139[0] = 0;
    if (objc_msgSend(v129, sel_performFetch_, v139))
    {
      v130 = v139[0];
    }
    else
    {
      v133 = v139[0];
      v134 = (void *)sub_1A93F7128();

      swift_willThrow();
    }
  }
  v96 = *(void **)(v135 + v95);
  if (!v96)
    goto LABEL_93;
  v97 = objc_msgSend(v96, sel_fetchedObjects);
  if (!v97)
    goto LABEL_93;
  v98 = v97;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v60 = sub_1A93F8310();

  if (v60 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v99 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v99)
      goto LABEL_66;
LABEL_105:

    swift_bridgeObjectRelease_n();
    return isUniquelyReferenced_nonNull_native;
  }
  v99 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v99)
    goto LABEL_105;
LABEL_66:
  v138 = v60 & 0xC000000000000001;
  v100 = 4;
  while (1)
  {
    if (v138)
      v102 = (id)MEMORY[0x1AF4129DC](v100 - 4, v60);
    else
      v102 = *(id *)(v60 + 8 * v100);
    v103 = v102;
    v104 = v100 - 3;
    if (__OFADD__(v100 - 4, 1))
      goto LABEL_97;
    v105 = v60;
    v60 = (unint64_t)objc_msgSend(v102, sel_storeTrackId);
    v106 = (_QWORD *)isUniquelyReferenced_nonNull_native;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v139[0] = v106;
    v108 = sub_1A906C424(v60);
    v109 = v106[2];
    v110 = (v107 & 1) == 0;
    v111 = v109 + v110;
    if (__OFADD__(v109, v110))
      goto LABEL_99;
    v112 = v107;
    if (v106[3] >= v111)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1A9308F74();
      goto LABEL_79;
    }
    sub_1A9301558(v111, isUniquelyReferenced_nonNull_native);
    v113 = sub_1A906C424(v60);
    if ((v112 & 1) != (v114 & 1))
      break;
    v108 = v113;
LABEL_79:
    isUniquelyReferenced_nonNull_native = (uint64_t)v139[0];
    if ((v112 & 1) != 0)
    {
      v101 = *((_QWORD *)v139[0] + 7);

      *(_QWORD *)(v101 + 8 * v108) = v103;
    }
    else
    {
      *((_QWORD *)v139[0] + (v108 >> 6) + 8) |= 1 << v108;
      *(_QWORD *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 48) + 8 * v108) = v60;
      *(_QWORD *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 56) + 8 * v108) = v103;
      v115 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
      v78 = __OFADD__(v115, 1);
      v116 = v115 + 1;
      if (v78)
        goto LABEL_101;
      *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16) = v116;
    }
    swift_bridgeObjectRelease();
    ++v100;
    v60 = v105;
    if (v104 == v99)
      goto LABEL_105;
  }
LABEL_108:
  sub_1A93F9258();
  __break(1u);
LABEL_109:
  v139[0] = a1;
  result = sub_1A93F921C();
  __break(1u);
  return result;
}

id sub_1A91DB570()
{
  uint64_t v0;
  id *v1;
  id result;

  *(_BYTE *)(v0 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_needsParsing) = 1;
  v1 = (id *)(v0 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_delegate);
  swift_beginAccess();
  result = *v1;
  if (*v1)
    return objc_msgSend(result, sel_mapiResponseDatabaseObjectsDidChange);
  return result;
}

id MAPIResponseDatabaseObjectProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MAPIResponseDatabaseObjectProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MAPIResponseDatabaseObjectProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MAPIResponseDatabaseObjectProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1A91DB748(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  objc_super v7;

  v3 = OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_databaseObjectsCache;
  v4 = objc_allocWithZone(MEMORY[0x1E0C99D38]);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  v5[OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_needsParsing] = 1;
  *(_QWORD *)&v5[OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_showsFRC] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_episodesFRC] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_delegate] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_response] = a1;
  swift_unknownObjectRetain();

  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for MAPIResponseDatabaseObjectProvider();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for MAPIResponseDatabaseObjectProvider()
{
  return objc_opt_self();
}

uint64_t sub_1A91DB830@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_delegate);
  swift_beginAccess();
  *a2 = *v3;
  return swift_unknownObjectRetain();
}

uint64_t method lookup function for MAPIResponseDatabaseObjectProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MAPIResponseDatabaseObjectProvider.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of MAPIResponseDatabaseObjectProvider.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of MAPIResponseDatabaseObjectProvider.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of MAPIResponseDatabaseObjectProvider.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of MAPIResponseDatabaseObjectProvider.databaseObject(with:contentType:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of MAPIResponseDatabaseObjectProvider.controllerDidChangeContent(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t sub_1A91DB928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *_s25HomePodRequestTransformerVMa()
{
  return &_s25HomePodRequestTransformerVN;
}

ValueMetadata *_s25DefaultRequestTransformerVMa()
{
  return &_s25DefaultRequestTransformerVN;
}

uint64_t sub_1A91DB950@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23;
  __int16 v24;
  char v25;
  void *v26;
  void *v27;
  id v28;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[32];
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[26];

  v3 = a1[9];
  v57 = a1[8];
  *(_OWORD *)v58 = v3;
  *(_OWORD *)&v58[10] = *(__int128 *)((char *)a1 + 154);
  v4 = a1[5];
  v53 = a1[4];
  v54 = v4;
  v5 = a1[7];
  v55 = a1[6];
  v56 = v5;
  v6 = a1[1];
  v50 = *a1;
  v51 = v6;
  v7 = a1[3];
  *(_OWORD *)v52 = a1[2];
  *(_OWORD *)&v52[16] = v7;
  if (v52[0] != 3)
  {
    v30 = a1[9];
    *(_OWORD *)(a2 + 128) = a1[8];
    *(_OWORD *)(a2 + 144) = v30;
    *(_OWORD *)(a2 + 154) = *(__int128 *)((char *)a1 + 154);
    v31 = a1[5];
    *(_OWORD *)(a2 + 64) = a1[4];
    *(_OWORD *)(a2 + 80) = v31;
    v32 = a1[7];
    *(_OWORD *)(a2 + 96) = a1[6];
    *(_OWORD *)(a2 + 112) = v32;
    v33 = a1[1];
    *(_OWORD *)a2 = *a1;
    *(_OWORD *)(a2 + 16) = v33;
    v35 = a1[2];
    v34 = a1[3];
LABEL_15:
    *(_OWORD *)(a2 + 32) = v35;
    *(_OWORD *)(a2 + 48) = v34;
    return sub_1A912D274((uint64_t)&v50);
  }
  v8 = v50;
  v9 = v51;
  sub_1A912C880(v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), 3u);
  v10 = sub_1A91DBE84(v50, *((uint64_t *)&v50 + 1));
  if ((v11 & 1) != 0)
  {
    if (qword_1EEAB6D68 != -1)
      swift_once();
    v36 = sub_1A93F7698();
    __swift_project_value_buffer(v36, (uint64_t)qword_1EEABA690);
    swift_bridgeObjectRetain();
    v37 = sub_1A93F7674();
    v38 = sub_1A93F879C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      v49 = v48;
      *(_DWORD *)v39 = 136446210;
      swift_bridgeObjectRetain();
      sub_1A906436C(v8, *((unint64_t *)&v8 + 1), &v49);
      sub_1A93F8AA8();
      sub_1A912C6B4(v8, *((uint64_t *)&v8 + 1), v9, *((uint64_t *)&v9 + 1), 3u);
      sub_1A912C6B4(v8, *((uint64_t *)&v8 + 1), v9, *((uint64_t *)&v9 + 1), 3u);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v37, v38, "Adam id not found in local library for %{public}s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v48, -1, -1);
      MEMORY[0x1AF41411C](v39, -1, -1);
    }
    else
    {
      sub_1A912C6B4(v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), 3u);
      sub_1A912C6B4(v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), 3u);
    }

    v40 = *(_OWORD *)v58;
    *(_OWORD *)(a2 + 128) = v57;
    *(_OWORD *)(a2 + 144) = v40;
    *(_OWORD *)(a2 + 154) = *(_OWORD *)&v58[10];
    v41 = v54;
    *(_OWORD *)(a2 + 64) = v53;
    *(_OWORD *)(a2 + 80) = v41;
    v42 = v56;
    *(_OWORD *)(a2 + 96) = v55;
    *(_OWORD *)(a2 + 112) = v42;
    v43 = v51;
    *(_OWORD *)a2 = v50;
    *(_OWORD *)(a2 + 16) = v43;
    v35 = *(_OWORD *)v52;
    v34 = *(_OWORD *)&v52[16];
    goto LABEL_15;
  }
  v47 = v10;
  sub_1A912C6B4(v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), 3u);
  if (qword_1EEAB6D68 != -1)
    swift_once();
  v12 = sub_1A93F7698();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EEABA690);
  v13 = sub_1A93F7674();
  v14 = sub_1A93F87B4();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_1A904E000, v13, v14, "Sucessfully transformed a local request to a MAPI request", v15, 2u);
    MEMORY[0x1AF41411C](v15, -1, -1);
  }

  v16 = *(_QWORD *)&v52[24];
  v18 = v53;
  v17 = v54;
  v44 = *((_QWORD *)&v53 + 1);
  v45 = v53;
  v19 = *((_QWORD *)&v54 + 1);
  v20 = v55;
  v21 = v56;
  v22 = v57;
  v23 = v58[2];
  v24 = *(_WORD *)v58;
  v46 = v58[0];
  v25 = v58[24];
  *(_QWORD *)a2 = v47;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 0;
  v26 = *(void **)&v52[8];
  *(_OWORD *)(a2 + 40) = *(_OWORD *)&v52[8];
  *(_QWORD *)(a2 + 56) = v16;
  *(_OWORD *)(a2 + 64) = v18;
  *(_QWORD *)(a2 + 80) = v17;
  *(_QWORD *)(a2 + 88) = v19;
  *(_OWORD *)(a2 + 96) = v20;
  *(_OWORD *)(a2 + 112) = v21;
  *(_OWORD *)(a2 + 128) = v22;
  *(_BYTE *)(a2 + 146) = v23;
  *(_WORD *)(a2 + 144) = v24;
  *(_OWORD *)(a2 + 152) = *(_OWORD *)&v58[8];
  *(_BYTE *)(a2 + 168) = v25;
  v27 = v26;
  *(_BYTE *)(a2 + 169) = 0;
  swift_bridgeObjectRetain();
  v28 = v27;
  return sub_1A912C8E4(v45, v44, v17, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v46);
}

void sub_1A91DBD98(void **a1, void *a2)
{
  void *v4;
  id v5;
  void *v6;

  v4 = (void *)sub_1A93F8010();
  v5 = objc_msgSend(a2, sel_podcastForUuid_, v4);

  v6 = *a1;
  *a1 = v5;

}

uint64_t sub_1A91DBE00@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _OWORD v25[2];

  v2 = a1[7];
  v3 = a1[9];
  v24 = a1[8];
  v25[0] = v3;
  *(_OWORD *)((char *)v25 + 10) = *(_OWORD *)((char *)a1 + 154);
  v4 = a1[3];
  v5 = a1[5];
  v20 = a1[4];
  v6 = v20;
  v21 = v5;
  v7 = a1[5];
  v8 = a1[7];
  v22 = a1[6];
  v9 = v22;
  v23 = v8;
  v10 = a1[1];
  v17[0] = *a1;
  v17[1] = v10;
  v11 = a1[3];
  v13 = *a1;
  v12 = a1[1];
  v18 = a1[2];
  v14 = v18;
  v19 = v11;
  v15 = a1[9];
  a2[8] = v24;
  a2[9] = v15;
  *(_OWORD *)((char *)a2 + 154) = *(_OWORD *)((char *)a1 + 154);
  a2[4] = v6;
  a2[5] = v7;
  a2[6] = v9;
  a2[7] = v2;
  *a2 = v13;
  a2[1] = v12;
  a2[2] = v14;
  a2[3] = v4;
  return sub_1A912D274((uint64_t)v17);
}

uint64_t sub_1A91DBE84(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t result;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  _QWORD aBlock[6];
  void *v17;

  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_mainQueueContext);

  v17 = 0;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = &v17;
  v6[3] = v5;
  v6[4] = a1;
  v6[5] = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1A91DC0C8;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_1A9055748;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_22;
  v8 = _Block_copy(aBlock);
  v9 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_performBlockAndWait_, v8);
  _Block_release(v8);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((a2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v11 = v17;
    if (v17)
    {
      v12 = (void *)objc_opt_self();
      v13 = v11;
      if (objc_msgSend(v12, sel_isEmpty_, objc_msgSend(v13, sel_storeCollectionId)))
      {

        v11 = 0;
      }
      else
      {
        v14 = (uint64_t)objc_msgSend(v13, sel_storeCollectionId);

        v11 = (void *)(v14 & ~(v14 >> 63));
      }
    }
    else
    {

    }
    v15 = v17;
    swift_release();

    return (uint64_t)v11;
  }
  return result;
}

uint64_t sub_1A91DC09C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A91DC0C8()
{
  uint64_t v0;

  sub_1A91DBD98(*(void ***)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1A91DC0D4()
{
  return swift_deallocObject();
}

uint64_t RetriggerableDeferred.init(createPublisher:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v22 = a3;
  v23 = a4;
  v28 = a5;
  v29 = a2;
  v26 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1F28);
  v5 = sub_1A93F7AB8();
  v25 = sub_1A91DC328();
  v6 = sub_1A93F77DC();
  v27 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - v8;
  v10 = MEMORY[0x1AF414014](MEMORY[0x1E0C96148], v5, v7);
  v21 = v10;
  v11 = MEMORY[0x1AF414014](MEMORY[0x1E0C95950], v6);
  v30 = v5;
  v31 = v6;
  v32 = v10;
  v33 = v11;
  v12 = sub_1A93F77A0();
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - v13;
  v30 = 0;
  swift_allocObject();
  v15 = sub_1A93F79EC();
  v30 = v15;
  v16 = (_QWORD *)swift_allocObject();
  v17 = v23;
  v16[2] = v22;
  v16[3] = v17;
  v16[4] = v26;
  v16[5] = v29;
  v16[6] = v15;
  swift_retain();
  swift_retain();
  sub_1A93F7B84();
  swift_release();
  MEMORY[0x1AF411A04](v6, v11, v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v6);
  MEMORY[0x1AF414014](MEMORY[0x1E0C95870], v12);
  v18 = sub_1A93F7B24();
  swift_release();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
  *v28 = v18;
  return result;
}

unint64_t sub_1A91DC328()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2A40B8;
  if (!qword_1ED2A40B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1F28);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2A40B8);
  }
  return result;
}

uint64_t sub_1A91DC374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v11;

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a5;
  v11[3] = a6;
  v11[4] = a2;
  v11[5] = a3;
  v11[6] = a4;
  swift_retain();
  swift_retain();
  return sub_1A93F7AAC();
}

uint64_t sub_1A91DC40C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A91DC374(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t sub_1A91DC41C(void (*a1)(uint64_t (*)(), uint64_t))
{
  uint64_t v2;

  v2 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  a1(sub_1A91DC5C4, v2);
  return swift_release_n();
}

uint64_t sub_1A91DC4A0()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A93F79B0();
    return swift_release();
  }
  return result;
}

uint64_t RetriggerableDeferred.receive<A>(subscriber:)()
{
  swift_getAssociatedTypeWitness();
  return sub_1A93F78F0();
}

uint64_t sub_1A91DC56C()
{
  return RetriggerableDeferred.receive<A>(subscriber:)();
}

uint64_t type metadata accessor for RetriggerableDeferred(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RetriggerableDeferred);
}

uint64_t sub_1A91DC590()
{
  uint64_t v0;

  return sub_1A91DC41C(*(void (**)(uint64_t (*)(), uint64_t))(v0 + 32));
}

uint64_t sub_1A91DC5A0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A91DC5C4()
{
  return sub_1A91DC4A0();
}

uint64_t sub_1A91DC5CC(uint64_t a1)
{
  return sub_1A9085918(a1, (void (*)(unint64_t, uint64_t))MEMORY[0x1E0DEF580], 0xD000000000000035, 0x80000001A9447C80, &qword_1EEAB9E68);
}

id static OS_dispatch_queue.transcriptsPreparationQueue.getter()
{
  return sub_1A906F330(&qword_1EEAB6D08, (id *)&qword_1EEAB9E68);
}

uint64_t sub_1A91DC614(uint64_t a1)
{
  return sub_1A9085918(a1, (void (*)(unint64_t, uint64_t))MEMORY[0x1E0DEF580], 0xD000000000000023, 0x80000001A9447C50, &qword_1EEAB9E70);
}

id static OS_dispatch_queue.assetReaderQueue.getter()
{
  return sub_1A906F330(&qword_1EEAB6D10, (id *)&qword_1EEAB9E70);
}

uint64_t sub_1A91DC65C(uint64_t a1)
{
  return sub_1A9085918(a1, (void (*)(unint64_t, uint64_t))MEMORY[0x1E0DEF580], 0xD000000000000027, 0x80000001A9447C20, &qword_1EEAB9E78);
}

id static OS_dispatch_queue.shazamAlignmentQueue.getter()
{
  return sub_1A906F330(&qword_1EEAB6D18, (id *)&qword_1EEAB9E78);
}

uint64_t sub_1A91DC6A4(uint64_t a1)
{
  return sub_1A9085918(a1, (void (*)(unint64_t, uint64_t))MEMORY[0x1E0DEF578], 0xD000000000000030, 0x80000001A9447BE0, (uint64_t *)&unk_1ED2A5B20);
}

id static OS_dispatch_queue.metricsProcessingQueue.getter()
{
  return sub_1A906F330(&qword_1ED2A5B30, qword_1ED2A5B20);
}

uint64_t sub_1A91DC6EC(uint64_t a1)
{
  return sub_1A9085918(a1, (void (*)(unint64_t, uint64_t))MEMORY[0x1E0DEF598], 0xD000000000000030, 0x80000001A9447BA0, &qword_1ED2ABCD8);
}

id static OS_dispatch_queue.storageComputationQueue.getter()
{
  return sub_1A906F330(&qword_1ED2AA448, (id *)&qword_1ED2ABCD8);
}

id static OS_dispatch_queue.backgroundURLSession.getter()
{
  return sub_1A906F330(&qword_1ED2A93C0, (id *)&qword_1ED2A93B8);
}

id static SharedDispatchQueues.localAssetSupportWorkQueue()()
{
  return sub_1A906F330(&qword_1ED2A93F0, (id *)&qword_1ED2A93E0);
}

id SharedDispatchQueues.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SharedDispatchQueues.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedDispatchQueues();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for SharedDispatchQueues()
{
  return objc_opt_self();
}

id SharedDispatchQueues.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedDispatchQueues();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t OS_dispatch_queue.enqueue(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  _QWORD v14[2];
  _QWORD aBlock[6];

  v1 = sub_1A93F7D58();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v14[0] = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F7DB8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F846C();
  v10 = sub_1A9066CA8(&qword_1ED2ABCE8, (uint64_t (*)(uint64_t))sub_1A9066C6C, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v9;
  v11[3] = v0;
  v11[4] = v10;
  aBlock[4] = sub_1A91DCA9C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_23;
  v12 = _Block_copy(aBlock);
  sub_1A93F7D88();
  v14[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v2, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v8, v4, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v14[0] + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t OS_dispatch_queue.asUnownedSerialExecutor()()
{
  uint64_t v0;

  sub_1A9066CA8(&qword_1ED2ABCE8, (uint64_t (*)(uint64_t))sub_1A9066C6C, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  return v0;
}

uint64_t sub_1A91DCA8C()
{
  return swift_deallocObject();
}

uint64_t sub_1A91DCA9C()
{
  return swift_job_run();
}

uint64_t sub_1A91DCAA8()
{
  return sub_1A9066CA8(&qword_1ED2ABCE0, (uint64_t (*)(uint64_t))sub_1A9066C6C, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
}

uint64_t sub_1A91DCAD4()
{
  MEMORY[0x1AF414014](&protocol conformance descriptor for OS_dispatch_queue);
  return sub_1A93F843C();
}

uint64_t sub_1A91DCB14()
{
  MEMORY[0x1AF414014](&protocol conformance descriptor for OS_dispatch_queue);
  return sub_1A93F8448();
}

uint64_t PlayButtonTimeFormatHelper.FormatStyle.calendarUnits.getter(char a1)
{
  return qword_1A940F8D8[a1];
}

uint64_t PlayButtonTimeFormatHelper.WidgetCountDownSizeRestrictingHelper.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t _s18PodcastsFoundation26PlayButtonTimeFormatHelperV0F5StyleO9hashValueSivg_0()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t PlayButtonTimeFormatHelper.showsProgressBar.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t _s18PodcastsFoundation26PlayButtonTimeFormatHelperV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2
    && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8)
    && *(unsigned __int8 *)(a1 + 9) == *(unsigned __int8 *)(a2 + 9))
  {
    return (*(unsigned __int8 *)(a2 + 10) ^ *(unsigned __int8 *)(a1 + 10) ^ 1) & 1;
  }
  else
  {
    return 0;
  }
}

unint64_t sub_1A91DCC48()
{
  unint64_t result;

  result = qword_1EEAB9E80;
  if (!qword_1EEAB9E80)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PlayButtonTimeFormatHelper.FormatStyle, &type metadata for PlayButtonTimeFormatHelper.FormatStyle);
    atomic_store(result, (unint64_t *)&qword_1EEAB9E80);
  }
  return result;
}

unint64_t sub_1A91DCC90()
{
  unint64_t result;

  result = qword_1EEAB9E88;
  if (!qword_1EEAB9E88)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PlayButtonTimeFormatHelper.WidgetCountDownSizeRestrictingHelper, &type metadata for PlayButtonTimeFormatHelper.WidgetCountDownSizeRestrictingHelper);
    atomic_store(result, (unint64_t *)&qword_1EEAB9E88);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PlayButtonTimeFormatHelper(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 11) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 11) = 0;
    if (a2)
      *(_BYTE *)(result + 10) = a2 + 1;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PlayButtonTimeFormatHelper.FormatStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A91DCD68 + 4 * byte_1A940F745[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A91DCD9C + 4 * byte_1A940F740[v4]))();
}

uint64_t sub_1A91DCD9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91DCDA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91DCDACLL);
  return result;
}

uint64_t sub_1A91DCDB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91DCDC0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A91DCDC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91DCDCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlayButtonTimeFormatHelper.FormatStyle()
{
  return &type metadata for PlayButtonTimeFormatHelper.FormatStyle;
}

uint64_t storeEnumTagSinglePayload for PlayButtonTimeFormatHelper.WidgetCountDownSizeRestrictingHelper(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A91DCE34 + 4 * byte_1A940F74F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A91DCE68 + 4 * byte_1A940F74A[v4]))();
}

uint64_t sub_1A91DCE68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91DCE70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91DCE78);
  return result;
}

uint64_t sub_1A91DCE84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91DCE8CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A91DCE90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91DCE98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlayButtonTimeFormatHelper.WidgetCountDownSizeRestrictingHelper()
{
  return &type metadata for PlayButtonTimeFormatHelper.WidgetCountDownSizeRestrictingHelper;
}

uint64_t TestingAssetCache.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  TestingAssetCache.init()();
  return v0;
}

uint64_t TestingAssetCache.init()()
{
  uint64_t v0;

  swift_getTupleTypeMetadata2();
  sub_1A93F8370();
  *(_QWORD *)(v0 + 16) = sub_1A93F7F20();
  return v0;
}

uint64_t TestingAssetCache.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TestingAssetCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t TestingAssetCache.asset(at:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];
  _QWORD v9[2];

  v1 = v0;
  v2 = *v0;
  (*(void (**)(_QWORD *__return_ptr, _QWORD))(*(_QWORD *)(*v0 + 96) + 16))(v9, *(_QWORD *)(*v0 + 80));
  v4 = v9[0];
  v3 = v9[1];
  swift_beginAccess();
  v5 = v1[2];
  v8[0] = v4;
  v8[1] = v3;
  v6 = *(_QWORD *)(v2 + 88);
  swift_bridgeObjectRetain();
  MEMORY[0x1AF411C8C](v8, v5, MEMORY[0x1E0DEA968], v6, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TestingAssetCache.store(asset:at:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[6];
  _QWORD v14[2];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 88);
  v5 = sub_1A93F8A90();
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v13 - v7;
  (*(void (**)(_QWORD *__return_ptr, _QWORD, double))(*(_QWORD *)(v3 + 96) + 16))(v14, *(_QWORD *)(v3 + 80), v6);
  v9 = v14[0];
  v10 = v14[1];
  v11 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v8, a1, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v4);
  v13[4] = v9;
  v13[5] = v10;
  swift_beginAccess();
  sub_1A93F7F5C();
  sub_1A93F7F80();
  return swift_endAccess();
}

uint64_t TestingAssetCache.containsAsset(for:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD v8[3];

  v1 = *v0;
  swift_beginAccess();
  v8[2] = v0[2];
  v2 = *(_QWORD *)(v1 + 96);
  v3 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 16);
  v4 = *(_QWORD *)(v1 + 80);
  swift_bridgeObjectRetain();
  v3(v8, v4, v2);
  v5 = sub_1A93F7F38();
  MEMORY[0x1AF414014](MEMORY[0x1E0DE9ED0], v5);
  v6 = sub_1A93F825C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t TestingAssetCache.invalidate(at:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  _QWORD v8[6];
  _QWORD v9[2];

  v1 = *v0;
  v2 = sub_1A93F8A90();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v8 - v5;
  (*(void (**)(_QWORD *__return_ptr, _QWORD, double))(*(_QWORD *)(v1 + 96) + 16))(v9, *(_QWORD *)(v1 + 80), v4);
  v8[4] = v9[0];
  v8[5] = v9[1];
  swift_beginAccess();
  sub_1A93F7F5C();
  sub_1A93F7F14();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A91DD364()
{
  return TestingAssetCache.asset(at:)();
}

uint64_t sub_1A91DD384(uint64_t a1)
{
  return TestingAssetCache.store(asset:at:)(a1);
}

uint64_t sub_1A91DD3A4()
{
  return TestingAssetCache.containsAsset(for:)() & 1;
}

uint64_t sub_1A91DD3C8()
{
  return TestingAssetCache.invalidate(at:)();
}

uint64_t sub_1A91DD3E8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TestingAssetCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TestingAssetCache);
}

uint64_t method lookup function for TestingAssetCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TestingAssetCache.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

Swift::Void __swiftcall MTPodcast.calculateNewEpisodeCount(in:serialShowsUseExperimentalRules:)(NSManagedObjectContext *in, Swift::Bool serialShowsUseExperimentalRules)
{
  void *v2;
  void *v5;
  id v6;
  id v7;
  char **v8;

  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v2, sel_showTypeInFeed);
  v7 = objc_msgSend(v5, sel_showTypeFromString_, v6);

  if (v7 != (id)1 && serialShowsUseExperimentalRules)
    v8 = &selRef_calculateSerialNewEpisodeCountIn_;
  else
    v8 = &selRef_calculateEpisodicNewEpisodeCountIn_;
  objc_msgSend(v2, *v8, in);
}

void sub_1A91DD5B0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  double v14;
  double v15;
  double v16;
  void (*v17)(char *, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  void *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  id v43;
  id v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  uint64_t i;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  id v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  char *v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  void (*v75)(char *, uint64_t);
  id v76;
  id v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;

  v1 = v0;
  v2 = sub_1A93F738C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v71 - v7;
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v71 - v11;
  v13 = objc_msgSend(v1, sel_uuid, v10);
  if (!v13
    || (v13, sub_1A93F72E4(), v15 = v14, objc_msgSend(v1, sel_lastDatePlayed), v16 + 2592000.0 < v15))
  {
    objc_msgSend(v1, sel_setNewEpisodesCount_, 0);
    objc_msgSend(v1, sel_setNewTrailersCount_, 0);
    return;
  }
  objc_msgSend(v1, sel_lastDatePlayed);
  sub_1A93F72CC();
  sub_1A93F7380();
  v80 = v8;
  sub_1A93F7308();
  v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v79 = v2;
  v75 = v17;
  v17(v5, v2);
  v18 = objc_msgSend(v1, sel_objectID);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1A9405950;
  v20 = sub_1A93F8040();
  v21 = v12;
  v23 = v22;
  *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v19 + 64) = sub_1A90A92DC();
  *(_QWORD *)(v19 + 32) = v20;
  *(_QWORD *)(v19 + 40) = v23;
  *(_QWORD *)(v19 + 96) = sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
  *(_QWORD *)(v19 + 104) = sub_1A91DE394();
  *(_QWORD *)(v19 + 72) = v18;
  v24 = v18;
  v25 = (void *)sub_1A93F8754();

  v26 = (void *)objc_opt_self();
  v78 = v21;
  v27 = (void *)sub_1A93F7314();
  v28 = objc_msgSend(v26, sel_predicateForEpisodesPublishedAfterDate_, v27);

  v77 = v25;
  v29 = objc_msgSend(v25, sel_AND_, v28);

  sub_1A93F8040();
  v30 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v31 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v32 = objc_msgSend(v30, sel_initWithKey_ascending_, v31, 0);

  sub_1A93F8040();
  v33 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v34 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v35 = objc_msgSend(v33, sel_initWithEntityName_, v34);

  objc_msgSend(v35, sel_setPredicate_, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1A9405960;
  *(_QWORD *)(v36 + 32) = v32;
  v81 = v36;
  sub_1A93F8328();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v76 = v32;
  v37 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setSortDescriptors_, v37);

  objc_msgSend(v35, sel_setFetchLimit_, 10);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v38 = sub_1A93F89DC();
  v39 = v38;
  if (!(v38 >> 62))
  {
    v40 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v41 = v40;
    v42 = v80;
    if (v40)
      goto LABEL_6;
LABEL_34:

    swift_bridgeObjectRelease_n();
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  v41 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v40 = sub_1A93F8E5C();
  v42 = v80;
  if (!v40)
    goto LABEL_34;
LABEL_6:
  v74 = v29;
  if ((v39 & 0xC000000000000001) != 0)
  {
    v43 = (id)MEMORY[0x1AF4129DC](0, v39);
  }
  else
  {
    if (!*(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v43 = *(id *)(v39 + 32);
  }
  v73 = v43;
  swift_bridgeObjectRelease();
  if (v41 > 9)
  {

    swift_bridgeObjectRelease();
    v29 = v74;
LABEL_35:

    goto LABEL_36;
  }
  v44 = v73;
  objc_msgSend(v73, sel_pubDate);
  v46 = v45;
  sub_1A93F72D8();
  v48 = v47;
  objc_msgSend(v1, sel_lastDatePlayed);
  v50 = v49;
  objc_msgSend(v44, sel_pubDate);
  if (v51 < v50 || v46 < v48)
  {

    swift_bridgeObjectRelease();
LABEL_36:
    v68 = v42;
    v69 = v79;
    v70 = v75;
    v75(v68, v79);
    v70(v78, v69);
    objc_msgSend(v1, sel_setNewEpisodesCount_, 0);
    objc_msgSend(v1, sel_setNewTrailersCount_, 0);
    return;
  }
  if (v41 < 1)
  {

    swift_bridgeObjectRelease();
    v63 = v42;
    v64 = v79;
    v65 = v75;
    v75(v63, v79);
    v65(v78, v64);
    v55 = 0;
    v62 = 0;
    goto LABEL_32;
  }
  v72 = v41;
  v81 = MEMORY[0x1E0DEE9D8];
  if (v40 < 1)
    goto LABEL_39;
  for (i = 0; i != v40; ++i)
  {
    if ((v39 & 0xC000000000000001) != 0)
      v53 = (id)MEMORY[0x1AF4129DC](i, v39);
    else
      v53 = *(id *)(v39 + 8 * i + 32);
    v54 = v53;
    if (objc_msgSend(v53, sel_isTrailer))
    {
      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  if ((v81 & 0x8000000000000000) == 0 && (v81 & 0x4000000000000000) == 0)
  {
    v55 = *(_QWORD *)(v81 + 16);

    goto LABEL_27;
  }
LABEL_40:
  swift_bridgeObjectRetain();
  v55 = sub_1A93F8E5C();

  swift_release();
LABEL_27:
  v57 = v78;
  v56 = v79;
  v58 = v80;
  v59 = v77;
  swift_release();

  v60 = v72;
  if (v55 == v72)
  {
    v61 = v75;
    v75(v58, v56);
    v61(v57, v56);
    v62 = 0;
    v55 = v60;
LABEL_32:
    objc_msgSend(v1, sel_setNewEpisodesCount_, v62);
    objc_msgSend(v1, sel_setNewTrailersCount_, v55);
    return;
  }
  v62 = v72 - v55;
  if (!__OFSUB__(v72, v55))
  {
    v66 = v58;
    v67 = v75;
    v75(v66, v56);
    v67(v57, v56);
    goto LABEL_32;
  }
  __break(1u);
}

void sub_1A91DE024(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  _BYTE *v16;
  double v17;
  id v18;
  id v19;
  __CFString *v20;
  id v21;
  unint64_t v22;
  int64_t v23;
  id v24;
  uint64_t v25;

  v2 = v1;
  v4 = sub_1A93F738C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v2, sel_uuid, v6);
  if (!v9)
  {
    objc_msgSend(v2, sel_setNewEpisodesCount_, 0);
    objc_msgSend(v2, sel_setNewTrailersCount_, 0);
    return;
  }
  v10 = v9;
  v25 = v4;
  objc_msgSend(v2, sel_lastDatePlayed);
  sub_1A93F72CC();
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_predicateForAllEpisodesOnPodcastUuid_, v10);

  v13 = (void *)sub_1A93F7314();
  v14 = objc_msgSend(v11, sel_predicateForEpisodesPublishedAfterDate_, v13);

  v15 = objc_msgSend(v12, sel_AND_, v14);
  v16 = objc_msgSend(a1, sel_countOfObjectsInEntity_predicate_, CFSTR("MTEpisode"), v15);
  objc_msgSend(v2, sel_lastDatePlayed);
  if (v17 == 0.0)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v25);

    objc_msgSend(v2, sel_setNewEpisodesCount_, 0);
    objc_msgSend(v2, sel_setNewTrailersCount_, 0);
    return;
  }
  v24 = a1;
  if (!v16)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v25);

    goto LABEL_10;
  }
  v18 = objc_msgSend(v11, sel_predicateForEpisodeType_, 1);
  v19 = objc_msgSend(v15, sel_AND_, v18);

  v20 = CFSTR("MTEpisode");
  v21 = v19;
  v22 = (unint64_t)objc_msgSend(v24, sel_countOfObjectsInEntity_predicate_, v20, v21);

  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if ((_BYTE *)v22 != v16)
  {
    v23 = (int64_t)&v16[-v22];
    if ((unint64_t)v16 >= v22)
    {
      if ((v23 & 0x8000000000000000) == 0)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v25);
        v16 = (_BYTE *)v22;
        goto LABEL_14;
      }
LABEL_18:
      __break(1u);
      return;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v25);
LABEL_10:
  v23 = 0;
LABEL_14:
  objc_msgSend(v2, sel_setNewEpisodesCount_, v23, v24);
  objc_msgSend(v2, sel_setNewTrailersCount_, v16);
}

unint64_t sub_1A91DE394()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEAB9F48;
  if (!qword_1EEAB9F48)
  {
    v1 = sub_1A9072534(255, (unint64_t *)&qword_1ED2A41B8);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1EEAB9F48);
  }
  return result;
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.enableSubscription(onPodcastUUID:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeEnableSubscription(onPodcastUUID:from:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.disableSubscription(onPodcastUUID:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.disableSubscription(onPodcastUUID:from:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.disableSubscriptions(onPodcastUUIDs:from:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.removeShowFromRecentlyUnfollowed(forPodcastUUID:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeBookmarkIfNeeded(episode:shouldDownloadEpisode:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeRemoveEpisodeFromBookmarksIfNeeded(episode:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeBookmark(episode:on:shouldDownloadEpisode:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeRemoveEpisodeFromBookmarks(episode:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.startTrackingChangesInDownloads()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.downloadEpisode(withUUID:isFromSaving:from:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 96))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.downloadEpisodes(with:isFromSaving:from:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 104)
                                                                                     + *(_QWORD *)(a6 + 104));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1A9164CD4;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.cancelDownload(forEpisodeWithUUID:userInitiated:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 112))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.cancelAllDownloads(userInitiated:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.removeDownload(forEpisodeWithUUID:from:shouldAllowAutomaticRedownloads:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 128))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeRemoveFromRecoveredEpisodesIfNeeded(episode:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.insertNewImplicitFollowIfNeeded(for:from:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 144))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeEpisodePlayedBeyondThresholdForFirstTime(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 152))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeMark(_:as:in:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 160))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeDidBumpLastDatePlayed(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeInsertNewImplicitFollow(for:from:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 176))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeImplicitlyFollowIfNeeded(_:for:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 184))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeRemoveImplicitFollowIfNeeded(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 192))();
}

uint64_t KCUTranscriptProvider.bearerToken.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id KCUTranscriptProvider.session.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t KCUTranscriptProvider.init(bearerToken:basePath:kcuTranscriptPath:kcuSignaturePath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  int *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;

  *a8 = a1;
  a8[1] = a2;
  v14 = (int *)type metadata accessor for KCUTranscriptProvider();
  v15 = (char *)a8 + v14[7];
  v16 = sub_1A93F726C();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a3, v16);
  v18 = (_QWORD *)((char *)a8 + v14[8]);
  *v18 = a4;
  v18[1] = a5;
  v19 = (_QWORD *)((char *)a8 + v14[9]);
  *v19 = a6;
  v19[1] = a7;
  a8[2] = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  v20 = sub_1A90C1D14(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5B90);
  v21 = swift_allocObject();
  *(_DWORD *)(v21 + 24) = 0;
  *(_QWORD *)(v21 + 16) = v20;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(a3, v16);
  a8[3] = v21;
  return result;
}

uint64_t type metadata accessor for KCUTranscriptProvider()
{
  uint64_t result;

  result = qword_1EEABA040;
  if (!qword_1EEABA040)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t KCUTranscriptProvider.prefetch(request:)(id *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  uint64_t v7;

  v3 = *(os_unfair_lock_s **)(v1 + 24);
  v4 = v3 + 4;
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1A91DE724(v4, v1, a1, &v7);
  os_unfair_lock_unlock(v5);
  return v7;
}

uint64_t sub_1A91DE724@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, id *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  char isUniquelyReferenced_nonNull_native;
  void (*v38)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v40;
  id *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  char *v52;
  _OWORD v53[4];
  uint64_t v54;
  id v55;

  v51 = a4;
  v50 = a1;
  v6 = type metadata accessor for KCUTranscriptProvider();
  v43 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v42 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v40 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA098);
  v47 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1A93F73E0();
  v49 = *(_QWORD *)(v46 - 8);
  v17 = *(_QWORD *)(v49 + 64);
  MEMORY[0x1E0C80A78](v46);
  v45 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v52 = (char *)&v40 - v19;
  sub_1A93F73D4();
  v41 = a3;
  *(_QWORD *)&v53[0] = KCUTranscriptProvider.transcript(for:)(a3);
  if (qword_1ED2A93F0 != -1)
    swift_once();
  v20 = (void *)qword_1ED2A93E0;
  v55 = (id)qword_1ED2A93E0;
  v21 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v13, 1, 1, v21);
  v22 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA0A0);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1EEABA0A8, &qword_1EEABA0A0, MEMORY[0x1E0C95D90]);
  sub_1A905FD90();
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v13, &qword_1ED2A1C88);

  swift_release();
  sub_1A91E1014(a2, (uint64_t)v10);
  sub_1A91314A4((uint64_t)v41, (uint64_t)v53);
  v23 = (uint64_t)v10;
  v24 = v42;
  sub_1A91E105C(v23, v42);
  v25 = v49;
  v41 = *(id **)(v49 + 16);
  v26 = (uint64_t)v45;
  v27 = v46;
  ((void (*)(char *, char *, uint64_t))v41)(v45, v52, v46);
  v28 = (*(unsigned __int8 *)(v43 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v29 = (v44 + *(unsigned __int8 *)(v25 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v30 = swift_allocObject();
  v31 = v53[3];
  *(_OWORD *)(v30 + 48) = v53[2];
  *(_OWORD *)(v30 + 64) = v31;
  *(_QWORD *)(v30 + 80) = v54;
  v32 = v53[1];
  *(_OWORD *)(v30 + 16) = v53[0];
  *(_OWORD *)(v30 + 32) = v32;
  sub_1A91E105C(v24, v30 + v28);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v25 + 32))(v30 + v29, v26, v27);
  sub_1A9066D74(&qword_1EEABA0B0, &qword_1EEABA098, MEMORY[0x1E0C95CB8]);
  v33 = v48;
  v34 = sub_1A93F7BA8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v33);
  v35 = v52;
  ((void (*)(uint64_t, char *, uint64_t))v41)(v26, v52, v27);
  swift_retain();
  v36 = v50;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v53[0] = *v36;
  *v36 = 0x8000000000000000;
  sub_1A930E66C(v34, v26, isUniquelyReferenced_nonNull_native);
  *v36 = *(_QWORD *)&v53[0];
  swift_bridgeObjectRelease();
  v38 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v38(v26, v27);
  result = ((uint64_t (*)(char *, uint64_t))v38)(v35, v27);
  *v51 = v34;
  return result;
}

uint64_t KCUTranscriptProvider.transcript(for:)(id *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  void *v39;
  uint64_t v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  _QWORD *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  int *v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  _QWORD *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v100;
  id *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  id *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(uint64_t, uint64_t);
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  id v150;

  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9F58);
  v129 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v128 = (char *)&v100 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9F60);
  v134 = *(_QWORD *)(v140 - 8);
  MEMORY[0x1E0C80A78](v140);
  v132 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v136 = (char *)&v100 - v6;
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9F68);
  MEMORY[0x1E0C80A78](v138);
  v130 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v133 = (uint64_t)&v100 - v9;
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9F70);
  v137 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v135 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9F78);
  v123 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v122 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v124 = (char *)&v100 - v13;
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9F80);
  MEMORY[0x1E0C80A78](v125);
  v121 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v127 = (uint64_t)&v100 - v16;
  v17 = type metadata accessor for KCUTranscriptProvider();
  v109 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v110 = v18;
  v145 = (uint64_t)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v19);
  v118 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9F88);
  MEMORY[0x1E0C80A78](v144);
  v141 = (uint64_t)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9F90);
  v111 = *(_QWORD *)(v146 - 8);
  MEMORY[0x1E0C80A78](v146);
  v143 = (char *)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9F98);
  v114 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116);
  v113 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v115 = (char *)&v100 - v25;
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9FA0);
  MEMORY[0x1E0C80A78](v119);
  v100 = (char *)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v149 = (uint64_t)&v100 - v28;
  v29 = sub_1A93F726C();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v100 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v100 - v34;
  v150 = *a1;
  sub_1A915997C();
  sub_1A93F8B38();
  sub_1A93F71B8();
  v36 = v141;
  swift_bridgeObjectRelease();
  v117 = v17;
  v147 = v35;
  sub_1A93F71B8();
  v120 = a1;
  v37 = v1;
  sub_1A91DFCAC((uint64_t)v32, (uint64_t)a1, v36);
  v38 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v112 = v32;
  v148 = v29;
  v142 = v38;
  v38((uint64_t)v32, v29);
  if (qword_1ED2A5B40 != -1)
    swift_once();
  v39 = (void *)qword_1ED2A5B38;
  v150 = (id)qword_1ED2A5B38;
  v108 = sub_1A93F882C();
  v107 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56);
  v40 = (uint64_t)v118;
  v107(v118, 1, 1, v108);
  v106 = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v105 = sub_1A9066D74(&qword_1EEAB9FA8, &qword_1EEAB9F88, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  v104 = sub_1A905FD90();
  v41 = v39;
  v42 = v143;
  sub_1A93F7C80();
  sub_1A905FD54(v40, &qword_1ED2A1C88);

  sub_1A905FD54(v36, &qword_1EEAB9F88);
  v43 = v145;
  sub_1A91E1014(v37, v145);
  v44 = *(unsigned __int8 *)(v109 + 80);
  v110 += (v44 + 16) & ~v44;
  v45 = (v44 + 16) & ~v44;
  v109 = v45;
  v103 = v44 | 7;
  v46 = swift_allocObject();
  sub_1A91E105C(v43, v46 + v45);
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = sub_1A91E10A0;
  *(_QWORD *)(v47 + 24) = v46;
  v102 = sub_1A9066D74(&qword_1EEAB9FB0, &qword_1EEAB9F90, MEMORY[0x1E0C95CB8]);
  v48 = v115;
  v49 = v146;
  sub_1A93F7C20();
  swift_release();
  v111 = *(_QWORD *)(v111 + 8);
  ((void (*)(char *, uint64_t))v111)(v42, v49);
  v50 = (uint64_t)v120;
  v101 = v120 + 4;
  v51 = v114;
  v52 = *(void (**)(char *, char *, uint64_t))(v114 + 16);
  v53 = v113;
  v54 = v116;
  v52(v113, v48, v116);
  sub_1A907C394(v50 + 32, (uint64_t)&v150);
  v55 = (uint64_t)v100;
  v52(v100, v53, v54);
  v56 = (int *)v119;
  sub_1A907C394((uint64_t)&v150, v55 + *(int *)(v119 + 36));
  v57 = v55 + v56[10];
  *(_QWORD *)v57 = "KCUTTMLFile";
  *(_QWORD *)(v57 + 8) = 11;
  *(_BYTE *)(v57 + 16) = 2;
  *(_BYTE *)(v55 + v56[12]) = 1;
  sub_1A905FD54((uint64_t)&v150, &qword_1ED2AD0C0);
  v58 = *(void (**)(char *, uint64_t))(v51 + 8);
  v58(v53, v54);
  v59 = (_QWORD *)(v55 + v56[11]);
  *v59 = 0;
  v59[1] = 0xE000000000000000;
  *(_BYTE *)(v55 + v56[13]) = 0;
  sub_1A9062F08(v55, v149, &qword_1EEAB9FA0);
  v58(v48, v54);
  v60 = (uint64_t)v112;
  sub_1A93F71B8();
  v61 = v141;
  sub_1A91DFCAC(v60, v50, v141);
  v142(v60, v148);
  v62 = (void *)qword_1ED2A5B38;
  v150 = (id)qword_1ED2A5B38;
  v107((char *)v40, 1, 1, v108);
  v63 = v62;
  v64 = v143;
  sub_1A93F7C80();
  sub_1A905FD54(v40, &qword_1ED2A1C88);

  sub_1A905FD54(v61, &qword_1EEAB9F88);
  v65 = v145;
  sub_1A91E1014(v37, v145);
  v66 = swift_allocObject();
  sub_1A91E105C(v65, v66 + v109);
  v67 = swift_allocObject();
  *(_QWORD *)(v67 + 16) = sub_1A91E1134;
  *(_QWORD *)(v67 + 24) = v66;
  sub_1A9072534(0, &qword_1EEAB9FB8);
  v68 = v124;
  v69 = v146;
  sub_1A93F7C20();
  swift_release();
  ((void (*)(char *, uint64_t))v111)(v64, v69);
  v70 = v123;
  v71 = *(void (**)(char *, char *, uint64_t))(v123 + 16);
  v72 = v122;
  v73 = v126;
  v71(v122, v68, v126);
  v74 = (uint64_t)v101;
  sub_1A907C394((uint64_t)v101, (uint64_t)&v150);
  v75 = (uint64_t)v121;
  v71(v121, v72, v73);
  v76 = (int *)v125;
  sub_1A907C394((uint64_t)&v150, v75 + *(int *)(v125 + 36));
  v77 = v75 + v76[10];
  *(_QWORD *)v77 = "KCUShazamSignatureFile";
  *(_QWORD *)(v77 + 8) = 22;
  *(_BYTE *)(v77 + 16) = 2;
  *(_BYTE *)(v75 + v76[12]) = 1;
  sub_1A905FD54((uint64_t)&v150, &qword_1ED2AD0C0);
  v78 = *(void (**)(char *, uint64_t))(v70 + 8);
  v78(v72, v73);
  v79 = (_QWORD *)(v75 + v76[11]);
  *v79 = 0;
  v79[1] = 0xE000000000000000;
  *(_BYTE *)(v75 + v76[13]) = 0;
  v80 = v127;
  sub_1A9062F08(v75, v127, &qword_1EEAB9F80);
  v78(v68, v73);
  sub_1A9066D74(&qword_1EEAB9FC0, &qword_1EEAB9F80, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  sub_1A9066D74(&qword_1EEAB9FC8, &qword_1EEAB9FA0, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  v81 = v128;
  v82 = v149;
  sub_1A93F7B54();
  v83 = swift_allocObject();
  *(_QWORD *)(v83 + 16) = sub_1A914E9F0;
  *(_QWORD *)(v83 + 24) = 0;
  sub_1A9066D74(&qword_1EEAB9FD0, &qword_1EEAB9F58, MEMORY[0x1E0C95698]);
  v84 = v136;
  v85 = v131;
  sub_1A93F7B84();
  swift_release();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v81, v85);
  v86 = v134;
  v87 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
  v88 = v132;
  v89 = v140;
  v87(v132, v84, v140);
  sub_1A907C394(v74, (uint64_t)&v150);
  v90 = (uint64_t)v130;
  v87(v130, v88, v89);
  v91 = (int *)v138;
  sub_1A907C394((uint64_t)&v150, v90 + *(int *)(v138 + 36));
  v92 = v90 + v91[10];
  *(_QWORD *)v92 = "KCUTranscriptData";
  *(_QWORD *)(v92 + 8) = 17;
  *(_BYTE *)(v92 + 16) = 2;
  *(_BYTE *)(v90 + v91[12]) = 1;
  sub_1A905FD54((uint64_t)&v150, &qword_1ED2AD0C0);
  v93 = *(void (**)(char *, uint64_t))(v86 + 8);
  v93(v88, v89);
  v94 = (_QWORD *)(v90 + v91[11]);
  *v94 = 0;
  v94[1] = 0xE000000000000000;
  *(_BYTE *)(v90 + v91[13]) = 0;
  v95 = v133;
  sub_1A9062F08(v90, v133, &qword_1EEAB9F68);
  v93(v84, v89);
  sub_1A9066D74(&qword_1EEAB9FD8, &qword_1EEAB9F68, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  v96 = v135;
  sub_1A93F7B84();
  sub_1A905FD54(v95, &qword_1EEAB9F68);
  sub_1A9066D74(&qword_1EEAB9FE0, &qword_1EEAB9F70, MEMORY[0x1E0C95950]);
  v97 = v139;
  v98 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v96, v97);
  sub_1A905FD54(v80, &qword_1EEAB9F80);
  sub_1A905FD54(v82, &qword_1EEAB9FA0);
  v142((uint64_t)v147, v148);
  return v98;
}

void sub_1A91DF960(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t *v21;
  os_unfair_lock_s *v22;
  uint64_t v23[2];
  _QWORD v24[9];

  v7 = *a1;
  if (qword_1ED2A58D0 != -1)
    swift_once();
  v8 = sub_1A93F7698();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A58B8);
  sub_1A91314A4(a2, (uint64_t)v24);
  v9 = v7;
  v10 = v7;
  v11 = sub_1A93F7674();
  v12 = sub_1A93F8784();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    *(_DWORD *)v13 = 136315394;
    v23[0] = v14;
    sub_1A915997C();
    v15 = sub_1A93F8B38();
    sub_1A906436C(v15, v16, v23);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A91314E0((uint64_t)v24);
    *(_WORD *)(v13 + 12) = 2080;
    v17 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8FE8);
    v18 = sub_1A93F8094();
    sub_1A906436C(v18, v19, v23);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A904E000, v11, v12, "Finished prefetching for %s: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v14, -1, -1);
    MEMORY[0x1AF41411C](v13, -1, -1);
  }
  else
  {
    sub_1A91314E0((uint64_t)v24);

  }
  v20 = *(os_unfair_lock_s **)(a3 + 24);
  v21 = (uint64_t *)&v20[4];
  v22 = v20 + 6;
  os_unfair_lock_lock(v20 + 6);
  sub_1A91DFBD0(v21, a4);
  os_unfair_lock_unlock(v22);
}

uint64_t sub_1A91DFBD0(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  char v6;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRetain();
  v4 = sub_1A912E6AC(a2);
  v6 = v5;
  result = swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *a1;
    v12 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1A93092BC();
      v9 = v12;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1A93F73E0();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v4, v11);
    sub_1A91AA6F0(v4, v9);
    *a1 = v9;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A91DFCAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[5];

  v39 = a2;
  v40 = a3;
  v32 = a1;
  v3 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9F88);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F876C();
  v7 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  v36 = v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA088);
  v34 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v33 = (char *)&v32 - v14;
  v15 = sub_1A93F726C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A93F6D80();
  v37 = *(_QWORD *)(v19 - 8);
  v38 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))(v18, v32, v15, v20);
  sub_1A93F6D50();
  v41[0] = 0x20726572616542;
  v41[1] = 0xE700000000000000;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F6D68();
  swift_bridgeObjectRelease();
  sub_1A93F8778();
  sub_1A91E1864();
  v23 = v33;
  v24 = v35;
  sub_1A93F7C20();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v24);
  v25 = v39 + 32;
  v26 = v34;
  v27 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  v27(v12, v23, v10);
  sub_1A907C394(v25, (uint64_t)v41);
  v27(v5, v12, v10);
  sub_1A907C394((uint64_t)v41, (uint64_t)&v5[v3[9]]);
  v28 = &v5[v3[10]];
  *(_QWORD *)v28 = "KCUFileDownload";
  *((_QWORD *)v28 + 1) = 15;
  v28[16] = 2;
  v5[v3[12]] = 1;
  sub_1A905FD54((uint64_t)v41, &qword_1ED2AD0C0);
  v29 = *(void (**)(char *, uint64_t))(v26 + 8);
  v29(v12, v10);
  v30 = &v5[v3[11]];
  *(_QWORD *)v30 = 0;
  *((_QWORD *)v30 + 1) = 0xE000000000000000;
  v5[v3[13]] = 0;
  sub_1A9062F08((uint64_t)v5, v40, &qword_1EEAB9F88);
  v29(v23, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v22, v38);
}

uint64_t sub_1A91E0014@<X0>(void (*a1)(char *, uint64_t)@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v3)(char *, char *, uint64_t);
  void (*v4)(char *, char *, uint64_t);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_signpost_type_t v23;
  char v24;
  void (*v25)(char *, char *, uint64_t);
  uint8_t *v26;
  os_signpost_id_t v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(char *, uint64_t);
  char *v30;
  NSObject *v31;
  char v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  NSObject *v38;
  char *v39;
  char v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t);
  uint64_t v45;
  const char *v46;
  uint64_t result;
  uint64_t v48;
  char *v49;
  uint8_t *v50;
  os_signpost_id_t v51;
  char *v52;
  uint8_t *v53;
  os_signpost_id_t v54;
  os_log_t v55;
  unint64_t v56;
  uint64_t v57;
  os_log_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  unint64_t v69;
  __int128 v70;
  _QWORD v71[2];
  unsigned __int8 v72;
  char *v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;

  v4 = v3;
  v68 = a1;
  v69 = a2;
  v63 = a3;
  v66 = sub_1A93F7638();
  v76 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v61 = (char *)&v58 - v8;
  v9 = sub_1A93F75FC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  *(_QWORD *)&v70 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v64 = (char *)&v58 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v58 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v58 - v18;
  if (qword_1EEAB6DE8 != -1)
    swift_once();
  v20 = sub_1A93F762C();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EEABA7B0);
  sub_1A93F75F0();
  v67 = v21;
  v22 = sub_1A93F7620();
  v23 = sub_1A93F8940();
  v24 = sub_1A93F8A6C();
  v62 = v6;
  if ((v24 & 1) != 0)
  {
    v65 = v3;
    v25 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v25(v16, v19, v9);
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    v27 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v22, v23, v27, "ParseKCUTTML", "", v26, 2u);
    MEMORY[0x1AF41411C](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    v28 = v25;
    v4 = v65;
  }
  else
  {

    v28 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  }
  v65 = v28;
  v28(v16, v19, v9);
  sub_1A93F765C();
  swift_allocObject();
  sub_1A93F7650();
  v29 = *(void (**)(char *, uint64_t))(v10 + 8);
  v29(v19, v9);
  TranscriptParser.parse(ttmlData:)((uint64_t)v68, v69, (uint64_t)v71);
  v30 = (char *)v70;
  if (v4)
  {
    v31 = sub_1A93F7620();
    sub_1A93F7644();
    LODWORD(v69) = sub_1A93F8934();
    v32 = sub_1A93F8A6C();
    v33 = v76;
    if ((v32 & 1) != 0)
    {
      v68 = v29;
      swift_retain();
      v34 = v62;
      sub_1A93F7668();
      swift_release();
      v35 = v66;
      if ((*(unsigned int (**)(char *, uint64_t))(v33 + 88))(v34, v66) == *MEMORY[0x1E0DF2190])
      {
        v36 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
        v36 = "FAILURE";
      }
      v65(v16, v30, v9);
      v49 = v30;
      v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v50 = 0;
      v51 = sub_1A93F75E4();
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v31, (os_signpost_type_t)v69, v51, "ParseKCUTTML", v36, v50, 2u);
      MEMORY[0x1AF41411C](v50, -1, -1);

      v29 = v68;
      v68(v49, v9);
    }
    else
    {

      v16 = v30;
    }
    v29(v16, v9);
    swift_willThrow();
    return swift_release();
  }
  else
  {
    v37 = v71[0];
    v69 = v71[1];
    LODWORD(v68) = v72;
    v62 = v73;
    v60 = v74;
    v70 = v75;
    v38 = sub_1A93F7620();
    v39 = v64;
    sub_1A93F7644();
    LODWORD(v67) = sub_1A93F8934();
    v40 = sub_1A93F8A6C();
    v41 = v76;
    if ((v40 & 1) != 0)
    {
      v58 = v38;
      v59 = v37;
      swift_retain();
      v42 = v61;
      sub_1A93F7668();
      swift_release();
      v43 = v41;
      v44 = *(unsigned int (**)(char *, uint64_t))(v41 + 88);
      v45 = v66;
      if (v44(v42, v66) == *MEMORY[0x1E0DF2190])
      {
        v46 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v45);
        v46 = "SUCCESS";
      }
      v65(v16, v39, v9);
      v52 = v39;
      v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v53 = 0;
      v54 = sub_1A93F75E4();
      v55 = v58;
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v58, (os_signpost_type_t)v67, v54, "ParseKCUTTML", v46, v53, 2u);
      MEMORY[0x1AF41411C](v53, -1, -1);

      v29(v52, v9);
      swift_release();
      result = ((uint64_t (*)(char *, uint64_t))v29)(v16, v9);
      v48 = v63;
      v37 = v59;
    }
    else
    {

      v29(v39, v9);
      result = swift_release();
      v48 = v63;
    }
    v56 = v69;
    *(_QWORD *)v48 = v37;
    *(_QWORD *)(v48 + 8) = v56;
    *(_BYTE *)(v48 + 16) = (_BYTE)v68;
    v57 = v60;
    *(_QWORD *)(v48 + 24) = v62;
    *(_QWORD *)(v48 + 32) = v57;
    *(_OWORD *)(v48 + 40) = v70;
  }
  return result;
}

NSObject *sub_1A91E05CC(NSObject *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_signpost_type_t v22;
  char v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  os_signpost_id_t v29;
  uint8_t *v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  id v34;
  os_log_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t inited;
  unint64_t v40;
  id v41;
  NSObject *v42;
  char *v43;
  os_signpost_type_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  const char *v51;
  char *v52;
  uint64_t v53;
  uint8_t *v54;
  os_signpost_id_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  NSObject *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int v67;
  const char *v68;
  char *v69;
  uint64_t v70;
  uint8_t *v71;
  os_signpost_id_t v72;
  os_log_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  os_log_t v86;
  char *v87;
  unint64_t v88;

  v86 = a1;
  v3 = sub_1A93F7638();
  v80 = *(_QWORD *)(v3 - 8);
  v81 = v3;
  MEMORY[0x1E0C80A78](v3);
  v82 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v75 - v6;
  v8 = sub_1A93F75FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v87 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v78 = (char *)&v75 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v75 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v75 - v17;
  if (qword_1EEAB6DE8 != -1)
    swift_once();
  v19 = sub_1A93F762C();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EEABA7B0);
  sub_1A93F75F0();
  v84 = v20;
  v21 = sub_1A93F7620();
  v22 = sub_1A93F8940();
  v23 = sub_1A93F8A6C();
  v77 = v7;
  if ((v23 & 1) != 0)
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v24(v15, v18, v8);
    v25 = v15;
    v26 = a2;
    v27 = v8;
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    v29 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v21, v22, v29, "ParseKCUSignature", "", v28, 2u);
    v30 = v28;
    v8 = v27;
    a2 = v26;
    v15 = v25;
    MEMORY[0x1AF41411C](v30, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v25, v8);
    v31 = v24;
  }
  else
  {

    v31 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  }
  v79 = v31;
  v31(v15, v18, v8);
  sub_1A93F765C();
  swift_allocObject();
  v32 = sub_1A93F7650();
  v33 = *(void (**)(char *, uint64_t))(v9 + 8);
  v33(v18, v8);
  v34 = objc_allocWithZone(MEMORY[0x1E0CD7500]);
  v35 = v86;
  sub_1A90D8068((uint64_t)v86, a2);
  v36 = v85;
  v37 = sub_1A927ACCC();
  v83 = v33;
  if (v36)
  {
    sub_1A905F180((uint64_t)v35, a2);
    v42 = sub_1A93F7620();
    v43 = v87;
    sub_1A93F7644();
    v44 = sub_1A93F8934();
    v45 = sub_1A93F8A6C();
    v46 = v82;
    if ((v45 & 1) != 0)
    {
      swift_retain();
      sub_1A93F7668();
      swift_release();
      v48 = v80;
      v47 = v81;
      v49 = (*(uint64_t (**)(char *, uint64_t))(v80 + 88))(v46, v81);
      v50 = *MEMORY[0x1E0DF2190];
      v76 = v32;
      if (v49 == v50)
      {
        v51 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v47);
        v51 = "FAILURE";
      }
      v52 = v87;
      v79(v15, v87, v8);
      v53 = v8;
      v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v54 = 0;
      v55 = sub_1A93F75E4();
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v42, v44, v55, "ParseKCUSignature", v51, v54, 2u);
      v56 = v54;
      v57 = v53;
      MEMORY[0x1AF41411C](v56, -1, -1);

      v58 = v53;
      v59 = v83;
      v83(v52, v58);
      v59(v15, v57);
    }
    else
    {

      v83(v43, v8);
    }
    swift_willThrow();
    swift_release();
  }
  else
  {
    v38 = v37;
    sub_1A905F180((uint64_t)v35, a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405960;
    *(_QWORD *)(inited + 32) = v38;
    v88 = inited;
    sub_1A93F8328();
    v40 = v88;
    v41 = v38;
    v42 = sub_1A913EAD0(v40);
    swift_bridgeObjectRelease();
    v61 = sub_1A93F7620();
    v62 = v78;
    sub_1A93F7644();
    LODWORD(v87) = sub_1A93F8934();
    if ((sub_1A93F8A6C() & 1) != 0)
    {
      v86 = v61;
      swift_retain();
      v63 = v77;
      sub_1A93F7668();
      swift_release();
      v65 = v80;
      v64 = v81;
      v66 = (*(uint64_t (**)(char *, uint64_t))(v80 + 88))(v63, v81);
      v67 = *MEMORY[0x1E0DF2190];
      v76 = v32;
      if (v66 == v67)
      {
        v68 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v64);
        v68 = "SUCCESS";
      }
      v69 = v78;
      v79(v15, v78, v8);
      v70 = v8;
      v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v71 = 0;
      v72 = sub_1A93F75E4();
      v73 = v86;
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v86, (os_signpost_type_t)v87, v72, "ParseKCUSignature", v68, v71, 2u);
      MEMORY[0x1AF41411C](v71, -1, -1);

      v74 = v83;
      v83(v69, v70);
      swift_release();
      v74(v15, v70);
    }
    else
    {

      v83(v62, v8);
      swift_release();
    }
  }
  return v42;
}

id sub_1A91E0BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  unint64_t v10;
  uint8_t *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  os_log_type_t type;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 16);
  v24 = *(_QWORD *)(a1 + 24);
  v25 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  v22 = *(_QWORD *)(a1 + 56);
  v23 = *(_QWORD *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 64);
  if (qword_1ED2A58D0 != -1)
    swift_once();
  v7 = sub_1A93F7698();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED2A58B8);
  sub_1A91D3170(v2, v25, v3, v24, v4, v23, v5, v22, v6);
  sub_1A91D3170(v2, v25, v3, v24, v4, v23, v5, v22, v6);
  v8 = sub_1A93F7674();
  v9 = sub_1A93F8784();
  v10 = v4;
  if (os_log_type_enabled(v8, v9))
  {
    type = v9;
    v11 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    *(_DWORD *)v11 = 136315138;
    v26 = v19;
    v12 = v23;
    sub_1A91D3170(v2, v25, v3, v24, v10, v23, v5, v22, v6);
    v13 = sub_1A93F8094();
    sub_1A906436C(v13, v14, &v26);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A91D3248(v2, v25, v3, v24, v10, v23, v5, v22, v6);
    sub_1A91D3248(v2, v25, v3, v24, v10, v23, v5, v22, v6);
    _os_log_impl(&dword_1A904E000, v8, type, "KCU Result: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v19, -1, -1);
    MEMORY[0x1AF41411C](v11, -1, -1);

    v16 = v24;
    v15 = v25;
  }
  else
  {
    v17 = v4;
    v12 = v23;
    sub_1A91D3248(v2, v25, v3, v24, v17, v23, v5, v22, v6);
    sub_1A91D3248(v2, v25, v3, v24, v10, v23, v5, v22, v6);

    v15 = v25;
    v16 = v24;
  }
  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = v15;
  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v16;
  *(_QWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 40) = v12;
  *(_QWORD *)(a2 + 48) = v5;
  *(_QWORD *)(a2 + 56) = v22;
  *(_BYTE *)(a2 + 64) = v6;
  return sub_1A91D3170(v2, v15, v3, v16, v10, v12, v5, v22, v6);
}

uint64_t KCUTranscriptProvider.invalidate(for:)()
{
  return 1;
}

id sub_1A91E0F70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;
  unint64_t v5;

  result = sub_1A91E18AC(*(id *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16));
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    return (id)sub_1A90D8068((uint64_t)result, v5);
  }
  return result;
}

uint64_t sub_1A91E0FB0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  uint64_t v5;

  v1 = *(os_unfair_lock_s **)(v0 + 24);
  v2 = v1 + 4;
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1A91E184C(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1A91E1014(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for KCUTranscriptProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A91E105C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for KCUTranscriptProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A91E10A0@<X0>(void (*a1)(char *, uint64_t)@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for KCUTranscriptProvider();
  return sub_1A91E0014(a1, a2, a3);
}

uint64_t sub_1A91E1108(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

NSObject *sub_1A91E1134(NSObject *a1, unint64_t a2)
{
  type metadata accessor for KCUTranscriptProvider();
  return sub_1A91E05CC(a1, a2);
}

uint64_t sub_1A91E118C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1A91E11C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t *initializeBufferWithCopyOfBuffer for KCUTranscriptProvider(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v9 = (void *)a2[2];
    v8 = a2[3];
    a1[2] = (uint64_t)v9;
    a1[3] = v8;
    v10 = a3[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1A93F726C();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v15 = v9;
    swift_retain();
    v14(v11, v12, v13);
    v16 = a3[8];
    v17 = a3[9];
    v18 = (uint64_t *)((char *)v4 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)v4 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for KCUTranscriptProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();

  swift_release();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for KCUTranscriptProvider(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v8 = (void *)a2[2];
  v7 = a2[3];
  a1[2] = v8;
  a1[3] = v7;
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1A93F726C();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v14 = v8;
  swift_retain();
  v13(v10, v11, v12);
  v15 = a3[8];
  v16 = a3[9];
  v17 = (_QWORD *)((char *)a1 + v15);
  v18 = (_QWORD *)((char *)a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)((char *)a1 + v16);
  v21 = (_QWORD *)((char *)a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for KCUTranscriptProvider(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  a1[3] = a2[3];
  swift_retain();
  swift_release();
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[9];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for KCUTranscriptProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

_QWORD *assignWithTake for KCUTranscriptProvider(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (void *)a1[2];
  a1[2] = a2[2];

  a1[3] = a2[3];
  swift_release();
  v8 = a3[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[8];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[9];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KCUTranscriptProvider()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A91E1690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for KCUTranscriptProvider()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A91E1718(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A91E178C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F726C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A91E1820(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

ValueMetadata *type metadata accessor for KCUTranscriptProvider.GenericNetworkError()
{
  return &type metadata for KCUTranscriptProvider.GenericNetworkError;
}

uint64_t sub_1A91E184C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A91DE724(a1, *(_QWORD *)(v2 + 16), *(id **)(v2 + 24), a2);
}

unint64_t sub_1A91E1864()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2AC008;
  if (!qword_1ED2AC008)
  {
    v1 = sub_1A93F876C();
    result = MEMORY[0x1AF414014](MEMORY[0x1E0CB1D50], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2AC008);
  }
  return result;
}

id sub_1A91E18AC(id a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *buf;
  uint64_t v21;
  os_log_type_t type;
  uint64_t v23;

  objc_opt_self();
  v5 = swift_dynamicCastObjCClass();
  if (v5)
  {
    v6 = (void *)v5;
    v7 = a3;
    if (objc_msgSend(v6, sel_statusCode) == (id)200)
    {
      if (qword_1ED2A58D0 != -1)
        swift_once();
      v8 = sub_1A93F7698();
      __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A58B8);
      v9 = v7;
      v10 = sub_1A93F7674();
      v11 = sub_1A93F87B4();
      if (os_log_type_enabled(v10, v11))
      {
        type = v11;
        v12 = (uint8_t *)swift_slowAlloc();
        v21 = swift_slowAlloc();
        v23 = v21;
        *(_DWORD *)v12 = 136315138;
        buf = v12;
        v9 = v9;
        v13 = objc_msgSend(v9, sel_description);
        v14 = sub_1A93F8040();
        v16 = v15;

        sub_1A906436C(v14, v16, &v23);
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v10, type, "Received reply from KCU %s", buf, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v21, -1, -1);
        MEMORY[0x1AF41411C](buf, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      a1 = objc_msgSend(v6, sel_statusCode);
      sub_1A91E1B68();
      swift_allocError();
      *(_QWORD *)v18 = a1;
      *(_BYTE *)(v18 + 8) = 0;
      swift_willThrow();

    }
  }
  else
  {
    sub_1A91E1B68();
    swift_allocError();
    *(_QWORD *)v17 = 0;
    *(_BYTE *)(v17 + 8) = 1;
    swift_willThrow();
  }
  return a1;
}

unint64_t sub_1A91E1B68()
{
  unint64_t result;

  result = qword_1EEABA090;
  if (!qword_1EEABA090)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for KCUTranscriptProvider.GenericNetworkError, &type metadata for KCUTranscriptProvider.GenericNetworkError);
    atomic_store(result, (unint64_t *)&qword_1EEABA090);
  }
  return result;
}

uint64_t sub_1A91E1BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for KCUTranscriptProvider();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1A93F73E0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 72))
    __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  v8 = (v3 + 88) & ~v3;
  v9 = (v8 + v4 + v7) & ~v7;
  v10 = v0 + v8;
  swift_bridgeObjectRelease();

  swift_release();
  v11 = v10 + *(int *)(v1 + 28);
  v12 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v9, v5);
  return swift_deallocObject();
}

void sub_1A91E1CC8(void **a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for KCUTranscriptProvider() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F73E0() - 8) + 80);
  sub_1A91DF960(a1, v1 + 16, v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

id static DayOfWeekSchedule.firstDayOfWeek.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  objc_class *v9;
  char *v10;
  id v11;
  void (*v12)(char *, uint64_t);
  objc_super v14;

  v0 = sub_1A93F7494();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - v5;
  sub_1A93F7470();
  v7 = sub_1A93F741C();
  v8 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v8(v3, v6, v0);
  v9 = (objc_class *)type metadata accessor for DayOfWeekSchedule();
  v10 = (char *)objc_allocWithZone(v9);
  *(_QWORD *)&v10[OBJC_IVAR___PFDayOfWeekSchedule_dayOfWeek] = v7;
  v8(&v10[OBJC_IVAR___PFDayOfWeekSchedule_calendar], v3, v0);
  v14.receiver = v10;
  v14.super_class = v9;
  v11 = objc_msgSendSuper2(&v14, sel_init);
  v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v3, v0);
  v12(v6, v0);
  return v11;
}

id DayOfWeekSchedule.__allocating_init(dayOfWeek:calendar:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR___PFDayOfWeekSchedule_dayOfWeek] = a1;
  v6 = &v5[OBJC_IVAR___PFDayOfWeekSchedule_calendar];
  v7 = sub_1A93F7494();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  v11.receiver = v5;
  v11.super_class = v2;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  return v9;
}

uint64_t DayOfWeekSchedule.dayOfWeek.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___PFDayOfWeekSchedule_dayOfWeek);
}

uint64_t DayOfWeekSchedule.calendar.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___PFDayOfWeekSchedule_calendar;
  v4 = sub_1A93F7494();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id DayOfWeekSchedule.init(dayOfWeek:calendar:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  *(_QWORD *)&v2[OBJC_IVAR___PFDayOfWeekSchedule_dayOfWeek] = a1;
  v4 = &v2[OBJC_IVAR___PFDayOfWeekSchedule_calendar];
  v5 = sub_1A93F7494();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a2, v5);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for DayOfWeekSchedule();
  v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  return v7;
}

BOOL sub_1A91E21FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0;
  v2 = sub_1A93F747C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x1E0CB1198], v2, v4);
  v7 = sub_1A93F7488();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7 == *(_QWORD *)(v1 + OBJC_IVAR___PFDayOfWeekSchedule_dayOfWeek);
}

id DayOfWeekSchedule.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DayOfWeekSchedule.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DayOfWeekSchedule.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayOfWeekSchedule();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A91E23AC()
{
  return type metadata accessor for DayOfWeekSchedule();
}

uint64_t method lookup function for DayOfWeekSchedule()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DayOfWeekSchedule.__allocating_init(dayOfWeek:calendar:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of DayOfWeekSchedule.shouldExecute(on:previousExecution:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

void sub_1A91E23E4(void *a1, char a2, uint64_t a3, void (*a4)(void *, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(void *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t aBlock[6];

  v37 = a4;
  v8 = sub_1A93F7D58();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F7DB8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v17 = (_QWORD *)Strong;
    if ((a2 & 1) != 0)
    {
      v21 = a1;
      if (qword_1ED2A8778 != -1)
        swift_once();
      v22 = sub_1A93F7698();
      __swift_project_value_buffer(v22, (uint64_t)qword_1ED2A8758);
      swift_retain_n();
      v23 = sub_1A93F7674();
      v24 = sub_1A93F879C();
      if (os_log_type_enabled(v23, v24))
      {
        v36 = a5;
        v25 = swift_slowAlloc();
        v26 = swift_slowAlloc();
        *(_DWORD *)v25 = 141558275;
        v38 = 1752392040;
        aBlock[0] = v26;
        sub_1A93F8AA8();
        *(_WORD *)(v25 + 12) = 2081;
        v27 = (void *)v17[3];
        if (v27)
        {
          v28 = objc_msgSend(v27, sel_description);
          v29 = sub_1A93F8040();
          v31 = v30;

        }
        else
        {
          v31 = 0xEF72657375206576;
          v29 = 0x6974636120726F66;
        }
        v38 = sub_1A906436C(v29, v31, aBlock);
        sub_1A93F8AA8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v23, v24, "Account %{private,mask.hash}s: Not proceeding with donation because we encountered an error fetching podcasts.", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v26, -1, -1);
        MEMORY[0x1AF41411C](v25, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v34 = a1;
      v37(a1, 0, 1);
      swift_release();
      sub_1A909CFC0(a1, 1);
      sub_1A909CFC0(a1, 1);
    }
    else
    {
      swift_bridgeObjectRetain();
      if ((os_feature_enabled_disable_homepod_station_donation() & 1) != 0)
      {
        swift_retain();
        v18 = sub_1A91E4690((unint64_t)a1, (uint64_t)v17, (uint64_t (*)(void))sub_1A91E3BB8);
        swift_release();
        sub_1A909CFC0(a1, 0);
        v19 = v17[11];
        v20 = MEMORY[0x1E0DEE9D8];
        v17[11] = v18;
        v17[12] = v20;
        swift_bridgeObjectRetain();
        sub_1A908A160(v19);
        v37((void *)v18, v20, 0);
        swift_bridgeObjectRelease();
      }
      else
      {
        v36 = v17[10];
        v32 = (_QWORD *)swift_allocObject();
        v32[2] = v17;
        v32[3] = a1;
        v32[4] = v37;
        v32[5] = a5;
        aBlock[4] = (uint64_t)sub_1A91E4570;
        aBlock[5] = (uint64_t)v32;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1A908A91C;
        aBlock[3] = (uint64_t)&block_descriptor_25_3;
        v33 = _Block_copy(aBlock);
        swift_retain();
        swift_retain();
        sub_1A93F7D88();
        v38 = MEMORY[0x1E0DEE9D8];
        sub_1A90A1130();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
        sub_1A9066D28();
        sub_1A93F8B5C();
        MEMORY[0x1AF412598](0, v15, v11, v33);
        _Block_release(v33);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        swift_release();
      }
      swift_release();
    }
  }
}

uint64_t sub_1A91E28A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t result;
  _QWORD *v16;
  uint64_t v17;

  v8 = sub_1A93F7E18();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(a1 + 80);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v9 + 104))(v12, *MEMORY[0x1E0DEF740], v8, v10);
  v14 = v13;
  LOBYTE(v13) = sub_1A93F7E3C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  if ((v13 & 1) != 0)
  {
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = a1;
    v16[3] = a3;
    v16[4] = a4;
    v16[5] = a2;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1A91E3004((uint64_t)sub_1A91E45B0, (uint64_t)v16, 2, (uint64_t)&unk_1E54E3830, (uint64_t)sub_1A91E45C4);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A91E29D0(uint64_t a1, uint64_t a2)
{
  return sub_1A91E3004(a1, a2, 1, (uint64_t)&unk_1E54E3740, (uint64_t)sub_1A91E4494);
}

void sub_1A91E29E8(unint64_t a1, char a2, _QWORD *a3, void (*a4)(unint64_t, _QWORD, uint64_t), uint64_t a5, unint64_t a6)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void (*v35)(unint64_t, _QWORD, uint64_t);
  uint64_t v36[2];

  if ((a2 & 1) != 0)
  {
    v19 = (id)a1;
    if (qword_1ED2A8778 != -1)
      swift_once();
    v20 = sub_1A93F7698();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED2A8758);
    swift_retain_n();
    v21 = sub_1A93F7674();
    v22 = sub_1A93F879C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      *(_DWORD *)v23 = 141558275;
      v36[0] = v24;
      sub_1A93F8AA8();
      *(_WORD *)(v23 + 12) = 2081;
      v25 = (void *)a3[3];
      if (v25)
      {
        v26 = objc_msgSend(v25, sel_description);
        v27 = sub_1A93F8040();
        v29 = v28;

      }
      else
      {
        v27 = 0x6974636120726F66;
        v29 = 0xEF72657375206576;
      }
      sub_1A906436C(v27, v29, v36);
      sub_1A93F8AA8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v21, v22, "Account %{private,mask.hash}s: Not proceeding with donation because we encountered an error fetching stations.", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v24, -1, -1);
      MEMORY[0x1AF41411C](v23, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v33 = (id)a1;
    a4(a1, 0, 1);
    sub_1A909CFC0((id)a1, 1);
    sub_1A909CFC0((id)a1, 1);
  }
  else
  {
    if (qword_1ED2A8778 != -1)
      swift_once();
    v10 = sub_1A93F7698();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A8758);
    sub_1A90BF154((id)a1, 0);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1A90BF154((id)a1, 0);
    swift_retain();
    swift_bridgeObjectRetain();
    v11 = sub_1A93F7674();
    v12 = sub_1A93F87B4();
    if (os_log_type_enabled(v11, v12))
    {
      v35 = a4;
      v13 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      *(_DWORD *)v13 = 141558787;
      v36[0] = v34;
      sub_1A93F8AA8();
      *(_WORD *)(v13 + 12) = 2081;
      v14 = (void *)a3[3];
      if (v14)
      {
        v15 = objc_msgSend(v14, sel_description);
        v16 = sub_1A93F8040();
        v18 = v17;

      }
      else
      {
        v16 = 0x6974636120726F66;
        v18 = 0xEF72657375206576;
      }
      sub_1A906436C(v16, v18, v36);
      sub_1A93F8AA8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 22) = 2048;
      if (a6 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_1A93F8E5C();
        swift_bridgeObjectRelease();
      }
      a4 = v35;
      swift_bridgeObjectRelease();
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 32) = 2048;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_1A93F8E5C();
        sub_1A909CFC0((id)a1, 0);
      }
      sub_1A909CFC0((id)a1, 0);
      sub_1A93F8AA8();
      sub_1A909CFC0((id)a1, 0);
      _os_log_impl(&dword_1A904E000, v11, v12, "Account %{private,mask.hash}s: Fetched %ld podcasts and %ld stations from MAPI.", (uint8_t *)v13, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v34, -1, -1);
      MEMORY[0x1AF41411C](v13, -1, -1);
    }
    else
    {
      sub_1A909CFC0((id)a1, 0);
      swift_release_n();
      swift_bridgeObjectRelease_n();
      sub_1A909CFC0((id)a1, 0);
    }

    swift_retain();
    v30 = sub_1A91E4690(a6, (uint64_t)a3, (uint64_t (*)(void))sub_1A91E3BB8);
    swift_release();
    swift_retain();
    v31 = sub_1A91E4690(a1, (uint64_t)a3, (uint64_t (*)(void))sub_1A91E403C);
    swift_release();
    v32 = a3[11];
    a3[11] = v30;
    a3[12] = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A908A160(v32);
    a4(v30, v31, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A91E3004(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t);
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  char v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  char v58;

  v50 = a4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v13);
  v49 = (uint64_t)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F7E18();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (uint64_t *)((char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = (void *)v5[10];
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v16 + 104))(v19, *MEMORY[0x1E0DEF740], v15, v17);
  v21 = v20;
  LOBYTE(v20) = sub_1A93F7E3C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v16 + 8))(v19, v15);
  if ((v20 & 1) != 0)
  {
    v48 = a2;
    v55 = 1;
    v56 = 0u;
    v57 = 0u;
    v58 = 4;
    v54 = a3;
    v53 = 1;
    v52 = 4;
    v51 = 0;
    v23 = sub_1A93F726C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v12, 1, 1, v23);
    v24 = MEMORY[0x1E0DEE9D8];
    v45 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
    v25 = sub_1A9112728(v24);
    sub_1A911273C(v24);
    v27 = v26;
    v28 = sub_1A9112844(v24);
    v29 = sub_1A9112844(v24);
    v47 = a5;
    v30 = v29;
    v31 = sub_1A9112858(v24);
    v46 = a1;
    v32 = v31;
    *((_QWORD *)&v43 + 1) = sub_1A911286C(v24);
    *(_QWORD *)&v43 = v32;
    *(_QWORD *)&v42 = v30;
    *((_QWORD *)&v42 + 1) = v24;
    *(_QWORD *)&v41 = v24;
    *((_QWORD *)&v41 + 1) = v28;
    v33 = v49;
    MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((__int128 *)&v55, &v54, &v53, &v52, v45, v25, v27, v24, v49, v41, v42, v24, v24, &v51, 0, 1, v43, 0, 1,
      0,
      (uint64_t)v12,
      0,
      0,
      0,
      0,
      0,
      v24,
      0,
      0,
      2);
    v34 = v5[7];
    v35 = v5[8];
    __swift_project_boxed_opaque_existential_1(v5 + 4, v34);
    v36 = v5[3];
    v37 = swift_allocObject();
    swift_weakInit();
    v38 = (_QWORD *)swift_allocObject();
    v39 = v46;
    v38[2] = v37;
    v38[3] = v39;
    v38[4] = v48;
    v40 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(v35 + 32);
    swift_retain();
    swift_retain();
    v40(v33, v36, v47, v38, v34, v35);
    swift_release();
    sub_1A9114C30(v33);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A91E3328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v30 = a7;
  v14 = sub_1A93F7D58();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1A93F7DB8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v23 = result;
    v28 = v15;
    v29 = v18;
    v27 = *(_QWORD *)(result + 80);
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = a5;
    v24[3] = v23;
    v24[4] = v30;
    v24[5] = a8;
    v24[6] = a1;
    aBlock[4] = a10;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = a11;
    v25 = _Block_copy(aBlock);
    v26 = a5;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1A93F7D88();
    v31 = MEMORY[0x1E0DEE9D8];
    sub_1A90A1130();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D28();
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v21, v17, v25);
    _Block_release(v25);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v14);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v29);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1A91E353C(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), const char *a7, const char *a8)
{
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void);
  void (*v42)(void);
  uint64_t v43;
  uint64_t v44;

  if (a1)
  {
    v12 = a1;
    if (qword_1ED2A8778 != -1)
      swift_once();
    v13 = sub_1A93F7698();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A8758);
    v14 = a1;
    swift_retain();
    v15 = a1;
    swift_retain();
    v16 = sub_1A93F7674();
    v17 = sub_1A93F879C();
    if (os_log_type_enabled(v16, v17))
    {
      v41 = a3;
      v18 = swift_slowAlloc();
      v19 = (_QWORD *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      *(_DWORD *)v18 = 141558531;
      v44 = v40;
      sub_1A93F8AA8();
      *(_WORD *)(v18 + 12) = 2081;
      v20 = *(void **)(a2 + 24);
      if (v20)
      {
        v21 = objc_msgSend(v20, sel_description);
        v22 = sub_1A93F8040();
        v24 = v23;

      }
      else
      {
        v22 = 0x6974636120726F66;
        v24 = 0xEF72657375206576;
      }
      sub_1A906436C(v22, v24, &v44);
      sub_1A93F8AA8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2112;
      v43 = sub_1A93F711C();
      sub_1A93F8AA8();
      *v19 = v43;

      _os_log_impl(&dword_1A904E000, v16, v17, a7, (uint8_t *)v18, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v19, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v40, -1, -1);
      MEMORY[0x1AF41411C](v18, -1, -1);

      a3 = v41;
    }
    else
    {
      swift_release_n();

    }
    v36 = a1;
    ((void (*)(void *, uint64_t))a3)(a1, 1);

    v37 = a1;
  }
  else
  {
    if (a5 && a6(a5))
    {
      a3();
      swift_bridgeObjectRelease();
      return;
    }
    if (qword_1ED2A8778 != -1)
      swift_once();
    v26 = sub_1A93F7698();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED2A8758);
    swift_retain_n();
    v27 = sub_1A93F7674();
    v28 = sub_1A93F879C();
    if (os_log_type_enabled(v27, v28))
    {
      v42 = a3;
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      *(_DWORD *)v29 = 141558275;
      v44 = v30;
      sub_1A93F8AA8();
      *(_WORD *)(v29 + 12) = 2081;
      v31 = *(void **)(a2 + 24);
      if (v31)
      {
        v32 = objc_msgSend(v31, sel_description);
        v33 = sub_1A93F8040();
        v35 = v34;

      }
      else
      {
        v33 = 0x6974636120726F66;
        v35 = 0xEF72657375206576;
      }
      sub_1A906436C(v33, v35, &v44);
      sub_1A93F8AA8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v27, v28, a8, (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v30, -1, -1);
      MEMORY[0x1AF41411C](v29, -1, -1);

      a3 = v42;
    }
    else
    {

      swift_release_n();
    }
    sub_1A91E44F8();
    v38 = swift_allocError();
    *(_QWORD *)v39 = 3;
    *(_BYTE *)(v39 + 8) = 1;
    ((void (*)(uint64_t, uint64_t))a3)(v38, 1);
    v37 = (void *)v38;
  }

}

uint64_t sub_1A91E3AA0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A91E3AC4()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91E3AF8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_1A90828B0();
  result = sub_1A93F8ACC();
  v1 = *(_QWORD *)(result + 16);
  v2 = v1 != 0;
  if (v1 == v2)
  {
    v3 = 0;
  }
  else
  {
    if (v1 <= v2)
    {
      __break(1u);
      return result;
    }
    v3 = *(_QWORD *)(result + 16 * v2 + 32);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v3;
}

id sub_1A91E3BB8(char *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v28;
  uint64_t v29;
  id v30[2];

  v30[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *(_QWORD *)&a1[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id];
  v4 = *(_QWORD *)&a1[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id + 8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1A9405950;
  v7 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  v8 = sub_1A90A92DC();
  *(_QWORD *)(v6 + 32) = 0xD000000000000018;
  *(_QWORD *)(v6 + 40) = 0x80000001A9447FE0;
  *(_QWORD *)(v6 + 96) = v7;
  *(_QWORD *)(v6 + 104) = v8;
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 72) = v5;
  *(_QWORD *)(v6 + 80) = v4;
  v9 = a1;
  swift_bridgeObjectRetain();
  v10 = sub_1A93F8064();
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD **)&v9[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes];
  if (v13)
  {
    if (v13[12])
    {
      swift_bridgeObjectRetain();
      v14 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = 0;
    }
    v15 = (void *)sub_1A93F8010();
    if (v13[3])
    {
      swift_bridgeObjectRetain();
      v13 = (_QWORD *)sub_1A93F8010();
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = 0;
    }
  }
  else
  {
    v15 = (void *)sub_1A93F8010();
    v14 = 0;
  }
  v30[0] = 0;
  v16 = objc_msgSend(a2, sel_podcastItemWithTitle_itemId_artistName_error_, v14, v15, v13, v30);

  v17 = v30[0];
  if (v16)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = v17;
    v19 = (void *)sub_1A93F7128();

    swift_willThrow();
    if (qword_1ED2A8778 != -1)
      swift_once();
    v20 = sub_1A93F7698();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED2A8758);
    v21 = v19;
    v22 = v19;
    swift_bridgeObjectRetain();
    v23 = sub_1A93F7674();
    v24 = sub_1A93F879C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      v28 = (void *)swift_slowAlloc();
      v30[0] = v28;
      *(_DWORD *)v25 = 141558531;
      sub_1A93F8AA8();
      *(_WORD *)(v25 + 12) = 2081;
      swift_bridgeObjectRetain();
      sub_1A906436C(v10, v12, (uint64_t *)v30);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 22) = 2112;
      v29 = sub_1A93F711C();
      sub_1A93F8AA8();
      *v26 = v29;

      _os_log_impl(&dword_1A904E000, v23, v24, "Unable to create KVItem from podcast: %{private,mask.hash}s with error: %@", (uint8_t *)v25, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v26, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v28, -1, -1);
      MEMORY[0x1AF41411C](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  return v16;
}

id sub_1A91E403C(void *a1, void *a2)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v28;
  uint64_t v29;
  id v30[2];

  v30[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = sub_1A91E3AF8();
  if (!v5)
    goto LABEL_11;
  v6 = v4;
  v7 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A9405950;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v10 = sub_1A90A92DC();
  *(_QWORD *)(v8 + 32) = 0xD00000000000001FLL;
  *(_QWORD *)(v8 + 40) = 0x80000001A9447FC0;
  *(_QWORD *)(v8 + 96) = v9;
  *(_QWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 72) = v6;
  *(_QWORD *)(v8 + 80) = v7;
  v11 = sub_1A93F8064();
  v13 = v12;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_attributes] + 24))
  {
    swift_bridgeObjectRetain();
    v14 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v15 = (void *)sub_1A93F8010();
  v30[0] = 0;
  v16 = objc_msgSend(a2, sel_playlistItemWithName_itemId_error_, v14, v15, v30);

  v17 = v30[0];
  if (!v16)
  {
    v18 = v17;
    v19 = (void *)sub_1A93F7128();

    swift_willThrow();
    if (qword_1ED2A8778 != -1)
      swift_once();
    v20 = sub_1A93F7698();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED2A8758);
    v21 = v19;
    v22 = v19;
    swift_bridgeObjectRetain();
    v23 = sub_1A93F7674();
    v24 = sub_1A93F879C();
    if (!os_log_type_enabled(v23, v24))
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    v25 = swift_slowAlloc();
    v26 = (_QWORD *)swift_slowAlloc();
    v28 = (void *)swift_slowAlloc();
    v30[0] = v28;
    *(_DWORD *)v25 = 141558531;
    sub_1A93F8AA8();
    *(_WORD *)(v25 + 12) = 2081;
    swift_bridgeObjectRetain();
    sub_1A906436C(v11, v13, (uint64_t *)v30);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 22) = 2112;
    v29 = sub_1A93F711C();
    sub_1A93F8AA8();
    *v26 = v29;

    _os_log_impl(&dword_1A904E000, v23, v24, "Unable to create KVItem from station: %{private,mask.hash}s with error: %@", (uint8_t *)v25, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v26, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v28, -1, -1);
    MEMORY[0x1AF41411C](v25, -1, -1);

LABEL_11:
    return 0;
  }

  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1A91E445C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A91E4494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t *v5;

  return sub_1A91E3328(a1, a2, a3, a4, a5, v5[2], v5[3], v5[4], (uint64_t)&unk_1E54E3768, (uint64_t)sub_1A91E44DC, (uint64_t)&block_descriptor_19_1);
}

void sub_1A91E44DC()
{
  sub_1A91E4664((uint64_t (*)(uint64_t))sub_1A9261448, "Account %{private,mask.hash}s: Failed to fetch podcasts from MAPI with error: %@", "Account %{private,mask.hash}s: Failed to fetch podcasts from MAPI with unknown error.");
}

unint64_t sub_1A91E44F8()
{
  unint64_t result;

  result = qword_1ED2ABE68;
  if (!qword_1ED2ABE68)
  {
    result = MEMORY[0x1AF414014](&unk_1A9423340, &type metadata for SiriDonator.DonationError);
    atomic_store(result, (unint64_t *)&qword_1ED2ABE68);
  }
  return result;
}

uint64_t sub_1A91E453C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91E4570()
{
  uint64_t *v0;

  return sub_1A91E28A4(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1A91E457C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A91E45B0(unint64_t a1, char a2)
{
  uint64_t v2;

  sub_1A91E29E8(a1, a2 & 1, *(_QWORD **)(v2 + 16), *(void (**)(unint64_t, _QWORD, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1A91E45C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t *v5;

  return sub_1A91E3328(a1, a2, a3, a4, a5, v5[2], v5[3], v5[4], (uint64_t)&unk_1E54E3858, (uint64_t)sub_1A91E4648, (uint64_t)&block_descriptor_38);
}

uint64_t objectdestroy_15Tm_0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A91E4648()
{
  sub_1A91E4664((uint64_t (*)(uint64_t))sub_1A9261454, "Account %{private,mask.hash}s: Failed to fetch stations from MAPI with error: %@", "Account %{private,mask.hash}s: Failed to fetch stations from MAPI with unknown error.");
}

void sub_1A91E4664(uint64_t (*a1)(uint64_t), const char *a2, const char *a3)
{
  uint64_t v3;

  sub_1A91E353C(*(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(void (**)(void))(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), a1, a2, a3);
}

uint64_t sub_1A91E4690(unint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v13;

  v13 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    v4 = sub_1A93F8E5C();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      for (i = 4; ; ++i)
      {
        v6 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v7 = (id)MEMORY[0x1AF4129DC](i - 4, a1);
          v8 = i - 3;
          if (__OFADD__(v6, 1))
            goto LABEL_15;
        }
        else
        {
          v7 = *(id *)(a1 + 8 * i);
          v8 = i - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_15:
            __break(1u);
            goto LABEL_16;
          }
        }
        v9 = v7;
        v10 = a3();

        if (v10)
        {
          MEMORY[0x1AF412004]();
          if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A93F834C();
          sub_1A93F8394();
          sub_1A93F8328();
        }
        if (v8 == v4)
        {
          swift_bridgeObjectRelease();
          return v13;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

id MTCategory.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id MTCategory.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for MTCategory();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for MTCategory()
{
  return objc_opt_self();
}

id MTCategory.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MTCategory();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t String.key.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

id NSString.key.getter()
{
  void *v0;

  return v0;
}

id sub_1A91E49B8@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t sub_1A91E49C4(char a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v10[24];
  uint64_t v11;

  v2 = *(_QWORD **)(v1 + 48);
  v3 = v2[6];
  v4 = v2[7];
  v11 = MEMORY[0x1E0DEAFA0];
  v10[0] = a1;
  v5 = v2[5];
  v6 = v2[2];
  v7 = v2[3];
  v8 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16);
  swift_retain();
  v8(v10, v5, v6, v7, v3, v4);
  sub_1A90A593C((uint64_t)v10);
  return swift_release();
}

uint64_t sub_1A91E4A54(char a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v10[24];
  uint64_t v11;

  v2 = *(_QWORD **)(v1 + 56);
  v3 = v2[6];
  v4 = v2[7];
  v11 = MEMORY[0x1E0DEAFA0];
  v10[0] = a1;
  v5 = v2[5];
  v6 = v2[2];
  v7 = v2[3];
  v8 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16);
  swift_retain();
  v8(v10, v5, v6, v7, v3, v4);
  sub_1A90A593C((uint64_t)v10);
  return swift_release();
}

uint64_t sub_1A91E4AE4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v11[24];
  uint64_t v12;

  if (a2 == 1)
  {
    v3 = v2 + 24;
  }
  else
  {
    if (a2)
      return result;
    v3 = v2 + 16;
  }
  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 48);
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 56);
  v12 = MEMORY[0x1E0DEAFA0];
  v11[0] = result & 1;
  v7 = v4[5];
  v8 = v4[2];
  v9 = v4[3];
  v10 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v10(v11, v7, v8, v9, v5, v6);
  sub_1A90A593C((uint64_t)v11);
  return swift_release();
}

uint64_t sub_1A91E4B90(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD v14[4];

  if (result == 1)
  {
    v6 = v3 + 40;
  }
  else
  {
    if (result)
      return result;
    v6 = v3 + 32;
  }
  v7 = *(_QWORD **)v6;
  v8 = *(_QWORD *)(*(_QWORD *)v6 + 56);
  v9 = *(_QWORD *)(*(_QWORD *)v6 + 64);
  v14[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
  v14[0] = a2;
  v14[1] = a3;
  v10 = v7[6];
  v11 = v7[2];
  v12 = v7[3];
  v13 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  v13(v14, v10, v11, v12, v8, v9);
  sub_1A90A593C((uint64_t)v14);
  return swift_release();
}

uint64_t sub_1A91E4C4C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD v10[4];

  if (result == 1)
  {
    v2 = v1 + 40;
  }
  else
  {
    if (result)
      return result;
    v2 = v1 + 32;
  }
  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 56);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 64);
  v10[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
  v10[0] = 0;
  v10[1] = 0;
  v6 = v3[6];
  v7 = v3[2];
  v8 = v3[3];
  v9 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v9(v10, v6, v7, v8, v4, v5);
  sub_1A90A593C((uint64_t)v10);
  return swift_release();
}

uint64_t sub_1A91E4CF8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v11[24];
  uint64_t v12;

  if (a2 == 1)
  {
    v3 = v2 + 72;
  }
  else
  {
    if (a2)
      return result;
    v3 = v2 + 64;
  }
  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 48);
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 56);
  v12 = MEMORY[0x1E0DEAFA0];
  v11[0] = result & 1;
  v7 = v4[5];
  v8 = v4[2];
  v9 = v4[3];
  v10 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v10(v11, v7, v8, v9, v5, v6);
  sub_1A90A593C((uint64_t)v11);
  return swift_release();
}

uint64_t sub_1A91E4DA8(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  char v14;
  uint64_t v15;

  v5 = *(_QWORD **)(v2 + 80);
  v6 = v5[7];
  v7 = v5[8];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9350);
  v13 = a1;
  v14 = a2 & 1;
  v8 = v5[6];
  v9 = v5[2];
  v10 = v5[3];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  v11(&v13, v8, v9, v10, v6, v7);
  sub_1A90A593C((uint64_t)&v13);
  return swift_release();
}

uint64_t sub_1A91E4E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD v13[4];

  v5 = *(_QWORD **)(v2 + 88);
  v6 = v5[7];
  v7 = v5[8];
  v13[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
  v13[0] = a1;
  v13[1] = a2;
  v8 = v5[6];
  v9 = v5[2];
  v10 = v5[3];
  v11 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  v11(v13, v8, v9, v10, v6, v7);
  swift_bridgeObjectRelease();
  sub_1A90A593C((uint64_t)v13);
  return swift_release();
}

uint64_t sub_1A91E4EF8(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  char v14;
  uint64_t v15;

  v5 = *(_QWORD **)(v2 + 96);
  v6 = v5[7];
  v7 = v5[8];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9350);
  v13 = a1;
  v14 = a2 & 1;
  v8 = v5[6];
  v9 = v5[2];
  v10 = v5[3];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  v11(&v13, v8, v9, v10, v6, v7);
  sub_1A90A593C((uint64_t)&v13);
  return swift_release();
}

uint64_t sub_1A91E4F9C(char a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v10[24];
  uint64_t v11;

  v2 = *(_QWORD **)(v1 + 104);
  v3 = v2[6];
  v4 = v2[7];
  v11 = MEMORY[0x1E0DEAFA0];
  v10[0] = a1;
  v5 = v2[5];
  v6 = v2[2];
  v7 = v2[3];
  v8 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16);
  swift_retain();
  v8(v10, v5, v6, v7, v3, v4);
  sub_1A90A593C((uint64_t)v10);
  return swift_release();
}

uint64_t sub_1A91E502C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD v13[4];

  v5 = *(_QWORD **)(v2 + 112);
  v6 = v5[7];
  v7 = v5[8];
  v13[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
  v13[0] = a1;
  v13[1] = a2;
  v8 = v5[6];
  v9 = v5[2];
  v10 = v5[3];
  v11 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  v11(v13, v8, v9, v10, v6, v7);
  swift_bridgeObjectRelease();
  sub_1A90A593C((uint64_t)v13);
  return swift_release();
}

void sub_1A91E50D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v3 = sub_1A93F738C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1)
  {
    v7 = (_QWORD *)(v1 + 128);
  }
  else
  {
    if (a1)
      return;
    v7 = (_QWORD *)(v1 + 120);
  }
  v8 = (_QWORD *)*v7;
  swift_retain();
  sub_1A93F7380();
  sub_1A93F72D8();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v12 = v8[7];
  v11 = v8[8];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9350);
  v13 = v10;
  v14 = 0;
  (*(void (**)(uint64_t *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v11 + 16))(&v13, v8[6], v8[2], v8[3], v12, v11);
  sub_1A90A593C((uint64_t)&v13);
  swift_release();
}

uint64_t sub_1A91E51DC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  char v11;
  uint64_t v12;

  if (result == 1)
  {
    v2 = v1 + 128;
  }
  else
  {
    if (result)
      return result;
    v2 = v1 + 120;
  }
  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 56);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 64);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9350);
  v10 = 0;
  v11 = 1;
  v6 = v3[6];
  v7 = v3[2];
  v8 = v3[3];
  v9 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v9(&v10, v6, v7, v8, v4, v5);
  sub_1A90A593C((uint64_t)&v10);
  return swift_release();
}

uint64_t sub_1A91E5290()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1A91E531C()
{
  sub_1A91E5290();
  return swift_deallocClassInstance();
}

uint64_t sub_1A91E533C()
{
  char v0;

  swift_retain();
  v0 = sub_1A93A3DA0();
  swift_release();
  return v0 & 1;
}

uint64_t sub_1A91E5378(char a1)
{
  return sub_1A91E49C4(a1);
}

uint64_t sub_1A91E5398()
{
  char v0;

  swift_retain();
  v0 = sub_1A93A3DA0();
  swift_release();
  return v0 & 1;
}

uint64_t sub_1A91E53D4(char a1)
{
  return sub_1A91E4F9C(a1);
}

uint64_t sub_1A91E53F4()
{
  char v0;

  swift_retain();
  v0 = sub_1A93A3DA0();
  swift_release();
  return v0 & 1;
}

uint64_t sub_1A91E5430(char a1)
{
  return sub_1A91E4A54(a1);
}

uint64_t sub_1A91E5450(unint64_t a1)
{
  char v1;

  if (a1 > 1)
    return 0;
  swift_retain();
  v1 = sub_1A93A3DA0();
  swift_release();
  return v1 & 1;
}

uint64_t sub_1A91E54AC(uint64_t a1, uint64_t a2)
{
  return sub_1A91E4AE4(a1, a2);
}

uint64_t sub_1A91E54CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A91E4B90(a1, a2, a3);
}

uint64_t sub_1A91E54EC(uint64_t a1)
{
  return sub_1A91E4C4C(a1);
}

uint64_t sub_1A91E550C(unint64_t a1)
{
  char v1;

  if (a1 > 1)
    return 0;
  swift_retain();
  v1 = sub_1A93A3DA0();
  swift_release();
  return v1 & 1;
}

uint64_t sub_1A91E5568(uint64_t a1, uint64_t a2)
{
  return sub_1A91E4CF8(a1, a2);
}

id sub_1A91E5588()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSettingsUserDefaults);
  if (qword_1ED2A47A0 != -1)
    swift_once();
  v1 = (void *)sub_1A93F8010();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void sub_1A91E562C(char a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSettingsUserDefaults);
  if (qword_1ED2A47A0 != -1)
    swift_once();
  v3 = (id)sub_1A93F8010();
  objc_msgSend(v2, sel_setBool_forKey_, a1 & 1, v3);

}

uint64_t sub_1A91E56D0()
{
  uint64_t v0;

  swift_retain();
  v0 = sub_1A93A3E24();
  swift_release();
  return v0;
}

uint64_t sub_1A91E571C(uint64_t a1, char a2)
{
  return sub_1A91E4DA8(a1, a2 & 1);
}

uint64_t sub_1A91E5740()
{
  uint64_t v0;

  swift_retain();
  v0 = sub_1A906B6C4();
  swift_release();
  return v0;
}

uint64_t sub_1A91E578C(uint64_t a1, uint64_t a2)
{
  return sub_1A91E4E4C(a1, a2);
}

uint64_t sub_1A91E57B4()
{
  uint64_t v0;

  swift_retain();
  v0 = sub_1A906B6C4();
  swift_release();
  return v0;
}

uint64_t sub_1A91E5800(uint64_t a1, uint64_t a2)
{
  return sub_1A91E502C(a1, a2);
}

uint64_t sub_1A91E5820()
{
  uint64_t v0;

  swift_retain();
  v0 = sub_1A93A3E24();
  swift_release();
  return v0;
}

uint64_t sub_1A91E586C(uint64_t a1, char a2)
{
  return sub_1A91E4EF8(a1, a2 & 1);
}

uint64_t sub_1A91E5890(unint64_t a1)
{
  uint64_t v1;

  if (a1 > 1)
    return 0;
  swift_retain();
  v1 = sub_1A93A3E24();
  swift_release();
  return v1;
}

void sub_1A91E5900(uint64_t a1)
{
  sub_1A91E50D8(a1);
}

uint64_t sub_1A91E5920(uint64_t a1)
{
  return sub_1A91E51DC(a1);
}

uint64_t sub_1A91E5940()
{
  unsigned int v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_isPodcastsApp);
  v1 = (void *)objc_opt_self();
  if (v0)
    v2 = objc_msgSend(v1, sel_standardUserDefaults);
  else
    v2 = objc_msgSend(v1, sel__applePodcastsFoundationSharedUserDefaults);
  v3 = (void *)sub_1A93F8010();
  v4 = objc_msgSend(v2, sel_stringForKey_, v3);

  if (!v4)
    return 0;
  v5 = sub_1A93F8040();

  return v5;
}

void sub_1A91E5A6C(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  id v5;

  if (objc_msgSend((id)objc_opt_self(), sel_isPodcastsApp))
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    if (a2)
    {
      v4 = sub_1A93F8010();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = 0;
    }
    v5 = (id)sub_1A93F8010();
    objc_msgSend(v3, sel_setObject_forKey_, v4, v5);

    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

id MTInterest.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id MTInterest.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for MTInterest();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for MTInterest()
{
  return objc_opt_self();
}

id MTInterest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MTInterest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t MediaAPIRequest<>.parse(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
}

void destroy for MediaAPIClientError(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if ((v2 + 1) <= 1)

}

_QWORD *_s18PodcastsFoundation19MediaAPIClientErrorOwCP_0(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if (((_DWORD)v4 + 1) <= 1)
    v5 = v3;
  *a1 = v3;
  return a1;
}

void **assignWithCopy for MediaAPIClientError(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;
  id v9;
  void *v10;
  id v11;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1)
      v11 = v7;
    *a1 = v7;
  }
  else if (v8 > 1)
  {

    *a1 = *a2;
  }
  else
  {
    v9 = v7;
    v10 = *a1;
    *a1 = v7;

  }
  return a1;
}

void **assignWithTake for MediaAPIClientError(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
    goto LABEL_11;
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for MediaAPIClientError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 2)
    return (v3 - 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MediaAPIClientError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_1A91E5F40(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_1A91E5F60(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaAPIClientError()
{
  return &type metadata for MediaAPIClientError;
}

uint64_t dispatch thunk of MediaAPIRequest.params.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MediaAPIRequest.parse(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

id MaximumFrequencySchedule.__allocating_init(frequency:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  ScheduleFrequency.interval.getter(a1);
  return objc_msgSend(v3, sel_initWithInterval_);
}

double MaximumFrequencySchedule.interval.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___PFMaximumFrequencySchedule_interval);
}

id MaximumFrequencySchedule.init(frequency:)(uint64_t a1)
{
  void *v1;

  ScheduleFrequency.interval.getter(a1);
  return objc_msgSend(v1, sel_initWithInterval_);
}

id MaximumFrequencySchedule.__allocating_init(interval:)(double a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(double *)&v3[OBJC_IVAR___PFMaximumFrequencySchedule_interval] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id MaximumFrequencySchedule.init(interval:)(double a1)
{
  char *v1;
  objc_super v3;

  *(double *)&v1[OBJC_IVAR___PFMaximumFrequencySchedule_interval] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for MaximumFrequencySchedule();
  return objc_msgSendSuper2(&v3, sel_init);
}

BOOL sub_1A91E60D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F738C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90A1CA8(a2, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1A90AC3A4((uint64_t)v7);
    return 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_1A93F7350();
    v14 = v13;
    sub_1A93F7350();
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return *(double *)(v3 + OBJC_IVAR___PFMaximumFrequencySchedule_interval) < v14 - v16;
  }
}

id MaximumFrequencySchedule.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MaximumFrequencySchedule.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MaximumFrequencySchedule.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MaximumFrequencySchedule();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for MaximumFrequencySchedule()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MaximumFrequencySchedule.__allocating_init(interval:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MaximumFrequencySchedule.shouldExecute(on:previousExecution:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t Cache.dictionary.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t Cache.dictionary.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Cache.dictionary.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t Cache.__allocating_init(invalidateOnAppBackground:)(char a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  Cache.init(invalidateOnAppBackground:)(a1);
  return v2;
}

uint64_t sub_1A91E6504()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

Swift::Void __swiftcall Cache.invalidate()()
{
  swift_beginAccess();
  sub_1A93F7F5C();
  sub_1A93F7F50();
  swift_endAccess();
}

uint64_t sub_1A91E6584()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    Cache.invalidate()();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A91E65D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A91E65FC()
{
  return sub_1A91E6584();
}

void (*Cache.subscript.modify(_QWORD *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = malloc(0x40uLL);
  *a1 = v5;
  *v5 = v2;
  v6 = *v2;
  v7 = sub_1A93F8A90();
  v5[1] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[2] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v5[3] = malloc(v9);
  v5[4] = malloc(v9);
  v10 = *(_QWORD *)(v6 + 80);
  v5[5] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[6] = v11;
  v5[7] = malloc(*(_QWORD *)(v11 + 64));
  (*(void (**)(void))(v11 + 16))();
  Cache.subscript.getter(a2);
  return sub_1A91E66DC;
}

void sub_1A91E66DC(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v2 = *(void **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v3 = *(void **)(*(_QWORD *)a1 + 56);
  v5 = *(void **)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v7 = *(void **)(*(_QWORD *)a1 + 24);
  v9 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v8 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v5, v9);
    sub_1A9058374((uint64_t)v7, (uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v7, v9);
  }
  else
  {
    sub_1A9058374(*(_QWORD *)(*(_QWORD *)a1 + 32), (uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v5, v9);
  free(v3);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t Cache.get(key:or:)@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  uint64_t (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  void (*v35)(char *, _QWORD, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t);
  uint64_t v42;
  char *v43;

  v40 = a3;
  v41 = a2;
  v43 = a4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 88);
  v42 = sub_1A93F8A90();
  v39 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - v13;
  v15 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v36 - v20;
  v22 = a1;
  Cache.subscript.getter(a1);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v23(v14, 1, v6) == 1)
  {
    v36 = v18;
    v37 = v22;
    v38 = v4;
    v24 = *(uint64_t (**)(char *, uint64_t))(v39 + 8);
    v25 = v14;
    v26 = v42;
    v27 = v24(v25, v42);
    v41(v27);
    v28 = v23(v11, 1, v6);
    v29 = v43;
    if (v28 == 1)
    {
      v24(v11, v26);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v29, 1, 1, v6);
    }
    else
    {
      v33 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v34 = v36;
      v33(v36, v11, v6);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v8, v34, v6);
      v35 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56);
      v35(v8, 0, 1, v6);
      sub_1A9058374((uint64_t)v8, v37);
      v24(v8, v26);
      v33(v29, v34, v6);
      return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v35)(v29, 0, 1, v6);
    }
  }
  else
  {
    v31 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v31(v21, v14, v6);
    v32 = v43;
    v31(v43, v21, v6);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v32, 0, 1, v6);
  }
}

uint64_t Cache.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Cache.__deallocating_deinit()
{
  Cache.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A91E6A6C(uint64_t a1, uint64_t a2)
{
  return Cache.subscript.getter(a2);
}

uint64_t sub_1A91E6A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A9058374(a1, a3);
}

uint64_t sub_1A91E6AB4()
{
  return 24;
}

__n128 sub_1A91E6AC0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t method lookup function for Cache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Cache.__allocating_init(invalidateOnAppBackground:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1A91E6AF4()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A940EB90;
  v1 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v2 = (void *)sub_1A93F8010();
  v3 = objc_msgSend(v1, sel_initWithKey_ascending_, v2, 0);

  *(_QWORD *)(v0 + 32) = v3;
  v4 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v5 = (void *)sub_1A93F8010();
  v6 = objc_msgSend(v4, sel_initWithKey_ascending_, v5, 1);

  *(_QWORD *)(v0 + 40) = v6;
  sub_1A93F8328();
  return v0;
}

void *static MTPodcastSkipDuration.allCases.getter()
{
  return &unk_1E54D70F0;
}

void sub_1A91E6BFC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E54D7128;
}

uint64_t MTPodcastSkipDuration.id.getter(uint64_t result)
{
  return (int)result;
}

uint64_t MTPodcastSkipDuration.intValue.getter(uint64_t result)
{
  return (int)result;
}

unint64_t sub_1A91E6C20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEABA0F8;
  if (!qword_1EEABA0F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABA100);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEABA0F8);
  }
  return result;
}

uint64_t sub_1A91E6C6C()
{
  return MEMORY[0x1E0DEB428];
}

void sub_1A91E6C78(_QWORD *a1@<X8>)
{
  int *v1;

  *a1 = *v1;
}

uint64_t NSUserDefaults.Name.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t NSUserDefaults.Name.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x646572616873;
  if (*v0 != 1)
    v1 = 0x647261646E617473;
  if (*v0)
    return v1;
  else
    return 0x73676E6974746573;
}

uint64_t sub_1A91E6D34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92F7ECC(*a1, *a2);
}

uint64_t sub_1A91E6D40@<X0>(char *a1@<X8>)
{
  return NSUserDefaults.Name.init(rawValue:)(a1);
}

void sub_1A91E6D4C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x646572616873;
  if (v2 != 1)
  {
    v5 = 0x647261646E617473;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x73676E6974746573;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_1A91E6DAC()
{
  unint64_t result;

  result = qword_1ED2ABCD0;
  if (!qword_1ED2ABCD0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NSUserDefaults.Name, &type metadata for NSUserDefaults.Name);
    atomic_store(result, (unint64_t *)&qword_1ED2ABCD0);
  }
  return result;
}

uint64_t sub_1A91E6DF0()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A91E6E8C()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A91E6F04()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

unint64_t sub_1A91E6FA0()
{
  unint64_t result;

  result = qword_1ED2ABCC8;
  if (!qword_1ED2ABCC8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NSUserDefaults.Name, &type metadata for NSUserDefaults.Name);
    atomic_store(result, (unint64_t *)&qword_1ED2ABCC8);
  }
  return result;
}

uint64_t _s4NameOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A91E7030 + 4 * byte_1A940FF95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A91E7064 + 4 * byte_1A940FF90[v4]))();
}

uint64_t sub_1A91E7064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91E706C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91E7074);
  return result;
}

uint64_t sub_1A91E7080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A91E7088);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A91E708C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91E7094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NSUserDefaults.Name()
{
  return &type metadata for NSUserDefaults.Name;
}

id PFCoreDataUtils.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id PFCoreDataUtils.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PFCoreDataUtils();
  return objc_msgSendSuper2(&v2, sel_init);
}

id PFCoreDataUtils.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PFCoreDataUtils();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A91E72B0(uint64_t result, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *i;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  char v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v6 = result;
    v7 = (_QWORD *)swift_bridgeObjectRetain();
    v9 = v7[4];
    v8 = v7[5];
    v10 = v7[6];
    v11 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1A9094640(v9, v8);
    v14 = v11[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v17 = v12;
    if (v11[3] < v16)
    {
      sub_1A9301E60(v16, a2 & 1);
      v18 = sub_1A9094640(v9, v8);
      if ((v17 & 1) != (v19 & 1))
      {
LABEL_27:
        result = sub_1A93F9258();
        __break(1u);
        return result;
      }
      v13 = v18;
      v20 = (_QWORD *)*a3;
      if ((v17 & 1) == 0)
        goto LABEL_12;
LABEL_9:
      v21 = *(_QWORD *)(v20[7] + 8 * v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = v20[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 8 * v13) = v21;
      v23 = v3 - 1;
      if (v3 == 1)
        return swift_bridgeObjectRelease();
LABEL_16:
      for (i = (uint64_t *)(v6 + 72); ; i += 3)
      {
        v33 = *(i - 2);
        v32 = *(i - 1);
        v34 = *i;
        v35 = (_QWORD *)*a3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v36 = sub_1A9094640(v33, v32);
        v38 = v35[2];
        v39 = (v37 & 1) == 0;
        v26 = __OFADD__(v38, v39);
        v40 = v38 + v39;
        if (v26)
          break;
        v41 = v37;
        if (v35[3] < v40)
        {
          sub_1A9301E60(v40, 1);
          v36 = sub_1A9094640(v33, v32);
          if ((v41 & 1) != (v42 & 1))
            goto LABEL_27;
        }
        v43 = (_QWORD *)*a3;
        if ((v41 & 1) != 0)
        {
          v29 = 8 * v36;
          v30 = *(_QWORD *)(v43[7] + 8 * v36);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v31 = v43[7];
          swift_bridgeObjectRelease();
          *(_QWORD *)(v31 + v29) = v30;
        }
        else
        {
          v43[(v36 >> 6) + 8] |= 1 << v36;
          v44 = (uint64_t *)(v43[6] + 16 * v36);
          *v44 = v33;
          v44[1] = v32;
          *(_QWORD *)(v43[7] + 8 * v36) = v34;
          v45 = v43[2];
          v26 = __OFADD__(v45, 1);
          v46 = v45 + 1;
          if (v26)
            goto LABEL_26;
          v43[2] = v46;
        }
        if (!--v23)
          return swift_bridgeObjectRelease();
      }
      goto LABEL_25;
    }
    if ((a2 & 1) != 0)
    {
      v20 = (_QWORD *)*a3;
      if ((v12 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_1A93094EC();
      v20 = (_QWORD *)*a3;
      if ((v17 & 1) != 0)
        goto LABEL_9;
    }
LABEL_12:
    v20[(v13 >> 6) + 8] |= 1 << v13;
    v24 = (uint64_t *)(v20[6] + 16 * v13);
    *v24 = v9;
    v24[1] = v8;
    *(_QWORD *)(v20[7] + 8 * v13) = v10;
    v25 = v20[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v27;
    v23 = v3 - 1;
    if (v3 == 1)
      return swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  return result;
}

uint64_t _s18PodcastsFoundation15PFCoreDataUtilsC18findDuplicateItems6entity19itemsToLookAtFilter017keysThatMustMatchK22BeConsideredADuplicate0op9ShouldNotS10Duplicated011keyValuesOfxhK6Return15sortDescriptorsSDySSSayyXlGGSS_So11NSPredicateCSaySSGA2OSaySo16NSSortDescriptorCGtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  void *v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  void *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  void *v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  unsigned __int8 v66;
  int64_t v67;
  uint64_t *v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  _BOOL8 v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t result;
  _QWORD *v85;
  uint64_t *v86;
  int64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t *v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  void *v97;
  uint64_t v98;
  _QWORD *v99;
  id v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;

  v103 = *MEMORY[0x1E0C80C00];
  v10 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v10, sel_initWithEntityName_, v11);

  objc_msgSend(v12, sel_setPredicate_, a3);
  objc_msgSend(v12, sel_setResultType_, 2);
  v99 = a4;
  swift_bridgeObjectRetain();
  v13 = swift_bridgeObjectRetain();
  sub_1A913669C(v13);
  v14 = a4[2];
  v92 = a5;
  v90 = v12;
  if (v14)
  {
    v15 = a6;
    v101 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1A93F8D84();
    v16 = a4 + 5;
    do
    {
      v17 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
      swift_bridgeObjectRetain();
      v18 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_initWithKey_ascending_, v18, 1);

      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
      v16 += 2;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    a6 = v15;
    v12 = v90;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v19 = swift_bridgeObjectRetain();
  sub_1A91367EC(v19);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v20 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setSortDescriptors_, v20);

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A913669C(a5);
  v21 = swift_bridgeObjectRetain();
  sub_1A913669C(v21);
  sub_1A911E988((uint64_t)v99);
  swift_bridgeObjectRelease();
  v22 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setPropertiesToFetch_, v22);

  v101 = 0;
  v23 = objc_msgSend(v12, sel_execute_, &v101);
  v24 = v101;
  if (v23)
  {
    v25 = v23;
    sub_1A9072534(0, &qword_1ED2A9390);
    v26 = sub_1A93F8310();
    v27 = v24;

    v28 = sub_1A911EAAC(v26);
    swift_bridgeObjectRelease();
    v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!*(_QWORD *)(v28 + 16))
    {
      swift_bridgeObjectRelease();
      v38 = (_QWORD *)sub_1A91132BC(MEMORY[0x1E0DEE9D8]);

      return (uint64_t)v38;
    }
    v30 = *(_QWORD *)(a6 + 16);
    v87 = v30;
    v88 = v28;
    if (v30)
    {
      v101 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      sub_1A929E684(0, v30, 0);
      v31 = v101;
      v32 = (uint64_t *)(a6 + 40);
      do
      {
        v34 = *(v32 - 1);
        v33 = *v32;
        v101 = v31;
        v36 = v31[2];
        v35 = v31[3];
        swift_bridgeObjectRetain();
        if (v36 >= v35 >> 1)
        {
          sub_1A929E684(v35 > 1, v36 + 1, 1);
          v31 = v101;
        }
        v32 += 2;
        v31[2] = v36 + 1;
        v37 = &v31[3 * v36];
        v37[4] = v34;
        v37[5] = v33;
        v37[6] = MEMORY[0x1E0DEE9D8];
        --v30;
      }
      while (v30);
      a5 = v92;
      v12 = v90;
      v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v28 = v88;
    }
    else
    {
      if (!*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
      {
        v39 = (_QWORD *)MEMORY[0x1E0DEE9E0];
        v31 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        goto LABEL_18;
      }
      v31 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7880);
    v39 = (_QWORD *)sub_1A93F8E8C();
LABEL_18:
    v101 = v39;
    sub_1A91E72B0((uint64_t)v31, 1, &v101);
    swift_bridgeObjectRelease();
    v40 = *(_QWORD *)(v28 + 16);
    if (!v40)
      goto LABEL_84;
    v38 = v101;
    if (v40 == 1)
    {

      swift_bridgeObjectRelease();
      return (uint64_t)v38;
    }
    v93 = v101;
    v94 = *(_QWORD *)(v28 + 16);
    v95 = v28 + 32;
    v41 = *(_QWORD *)(v28 + 32);
    v42 = v99[2];
    swift_bridgeObjectRetain();
    v96 = v99 + 5;
    v91 = (uint64_t *)(a5 + 40);
    v86 = (uint64_t *)(a6 + 40);
    v43 = 1;
    v98 = v42;
    while (1)
    {
      v44 = *(_QWORD *)(v95 + 8 * v43);
      if (v42)
      {
        v101 = v29;
        swift_bridgeObjectRetain();
        sub_1A93F8D84();
        v45 = v96;
        v46 = v42;
        do
        {
          if (*(_QWORD *)(v41 + 16))
          {
            v47 = *(v45 - 1);
            v48 = *v45;
            swift_bridgeObjectRetain_n();
            sub_1A9094640(v47, v48);
            if ((v49 & 1) != 0)
              swift_unknownObjectRetain();
            swift_bridgeObjectRelease_n();
          }
          sub_1A93F8D60();
          sub_1A93F8D90();
          sub_1A93F8D9C();
          sub_1A93F8D6C();
          v45 += 2;
          --v46;
        }
        while (v46);
        v42 = v98;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA150);
      v100 = (id)sub_1A93F82F8();
      swift_bridgeObjectRelease();
      if (v42)
      {
        v101 = v29;
        sub_1A93F8D84();
        v50 = v96;
        v51 = v42;
        do
        {
          if (*(_QWORD *)(v44 + 16))
          {
            v52 = *(v50 - 1);
            v53 = *v50;
            swift_bridgeObjectRetain_n();
            sub_1A9094640(v52, v53);
            if ((v54 & 1) != 0)
              swift_unknownObjectRetain();
            swift_bridgeObjectRelease_n();
          }
          sub_1A93F8D60();
          sub_1A93F8D90();
          sub_1A93F8D9C();
          sub_1A93F8D6C();
          v50 += 2;
          --v51;
        }
        while (v51);
        v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v42 = v98;
      }
      v55 = (void *)sub_1A93F82F8();
      swift_bridgeObjectRelease();
      if ((objc_msgSend(v100, sel_isEqual_, v55) & 1) != 0)
      {
        v97 = v55;
        v56 = *(_QWORD *)(a5 + 16);
        if (v56)
        {
          swift_bridgeObjectRetain();
          v57 = v91;
          while (1)
          {
            if (!*(_QWORD *)(v41 + 16))
              goto LABEL_46;
            v59 = *(v57 - 1);
            v58 = *v57;
            swift_bridgeObjectRetain();
            v60 = sub_1A9094640(v59, v58);
            if ((v61 & 1) == 0 || !*(_QWORD *)(v44 + 16))
              goto LABEL_45;
            v62 = *(void **)(*(_QWORD *)(v41 + 56) + 8 * v60);
            swift_unknownObjectRetain();
            v63 = sub_1A9094640(v59, v58);
            if ((v64 & 1) == 0)
              break;
            v65 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v63);
            swift_unknownObjectRetain_n();
            swift_bridgeObjectRelease();
            v66 = objc_msgSend(v62, sel_isEqual_, v65);
            swift_unknownObjectRelease_n();
            swift_unknownObjectRelease();
            if ((v66 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              v67 = v87;
              if (v87)
              {
                swift_bridgeObjectRetain();
                v68 = v86;
                v69 = v100;
                v70 = v97;
                v89 = v43;
                do
                {
                  if (*(_QWORD *)(v44 + 16))
                  {
                    v71 = *(v68 - 1);
                    v72 = *v68;
                    swift_bridgeObjectRetain_n();
                    sub_1A9094640(v71, v72);
                    if ((v73 & 1) != 0)
                    {
                      swift_unknownObjectRetain_n();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRetain();
                      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      v101 = v93;
                      swift_bridgeObjectRetain();
                      v75 = v71;
                      v77 = sub_1A9094640(v71, v72);
                      v78 = v93[2];
                      v79 = (v76 & 1) == 0;
                      v80 = v78 + v79;
                      if (__OFADD__(v78, v79))
                      {
                        __break(1u);
LABEL_83:
                        __break(1u);
LABEL_84:
                        __break(1u);
                      }
                      v81 = v76;
                      if (v93[3] >= v80)
                      {
                        v43 = v89;
                        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                          sub_1A93094EC();
                        a5 = v92;
                      }
                      else
                      {
                        sub_1A9301E60(v80, isUniquelyReferenced_nonNull_native);
                        v82 = sub_1A9094640(v75, v72);
                        if ((v81 & 1) != (v83 & 1))
                          goto LABEL_86;
                        v77 = v82;
                        a5 = v92;
                        v43 = v89;
                      }
                      if ((v81 & 1) == 0)
                        goto LABEL_83;
                      v93 = v101;
                      v102 = *(_QWORD *)(v101[7] + 8 * v77);
                      MEMORY[0x1AF412004]();
                      if (*(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
                        sub_1A93F834C();
                      sub_1A93F8394();
                      sub_1A93F8328();
                      if (v102)
                      {
                        *(_QWORD *)(v93[7] + 8 * v77) = v102;
                      }
                      else
                      {
                        swift_arrayDestroy();
                        sub_1A9091124(v77, v93);
                      }
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_unknownObjectRelease();
                    }
                    else
                    {
                      swift_bridgeObjectRelease_n();
                    }
                    v69 = v100;
                    v70 = v97;
                  }
                  v68 += 2;
                  --v67;
                }
                while (v67);
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
              }
              else
              {
                swift_bridgeObjectRelease();

                v69 = v100;
              }

              goto LABEL_56;
            }
LABEL_46:
            v57 += 2;
            if (!--v56)
              goto LABEL_55;
          }
          swift_unknownObjectRelease();
LABEL_45:
          swift_bridgeObjectRelease();
          goto LABEL_46;
        }
        swift_bridgeObjectRetain();
LABEL_55:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = v44;
LABEL_56:
        v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v42 = v98;
      }
      else
      {
        swift_bridgeObjectRelease();

        v41 = v44;
      }
      if (++v43 == v94)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return (uint64_t)v93;
      }
    }
  }
  v85 = v101;
  sub_1A93F7128();

  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
  swift_bridgeObjectRelease();
  swift_release();
  __break(1u);
LABEL_86:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PFCoreDataUtils()
{
  return objc_opt_self();
}

uint64_t MetricsPageType.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t MetricsPageType.debugDescription.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD00000000000001BLL;
}

unint64_t sub_1A91E8154()
{
  return MetricsPageType.debugDescription.getter();
}

uint64_t MetricsPageType.description.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t MetricsPageType.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_1A93F90CC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsPageType.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F912C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsPageType.artist.getter()
{
  return 0x747369747241;
}

uint64_t static MetricsPageType.category.getter()
{
  return 0x79726F6765746143;
}

uint64_t static MetricsPageType.channel.getter()
{
  return 0x6C656E6E616843;
}

uint64_t static MetricsPageType.episode.getter()
{
  return 0x4574736163646F50;
}

uint64_t static MetricsPageType.genre.getter()
{
  return 0x65726E6547;
}

uint64_t static MetricsPageType.info.getter()
{
  return 1868983881;
}

uint64_t static MetricsPageType.landing.getter()
{
  return 0x676E69646E614CLL;
}

uint64_t static MetricsPageType.multiRoom.getter()
{
  return 0x6F6F5269746C754DLL;
}

uint64_t static MetricsPageType.nowPlaying.getter()
{
  return 0x6979616C50776F4ELL;
}

uint64_t static MetricsPageType.overflow.getter()
{
  return 0x776F6C667265764FLL;
}

uint64_t static MetricsPageType.prompt.getter()
{
  return 0x74706D6F7250;
}

uint64_t static MetricsPageType.queue.getter()
{
  return 0x6575657551;
}

uint64_t static MetricsPageType.room.getter()
{
  return 1836019538;
}

uint64_t static MetricsPageType.search.getter()
{
  return 0x686372616553;
}

uint64_t static MetricsPageType.searchResults.getter()
{
  return 0x6552686372616553;
}

uint64_t static MetricsPageType.searchSeeAll.getter()
{
  return 0x6553686372616553;
}

uint64_t static MetricsPageType.settings.getter()
{
  return 0x73676E6974746553;
}

uint64_t static MetricsPageType.show.getter()
{
  return 0x74736163646F50;
}

uint64_t static MetricsPageType.topCharts.getter()
{
  return 0x7472616843706F54;
}

uint64_t static MetricsPageType.transcript.getter()
{
  return 0x697263736E617254;
}

uint64_t static MetricsPageType.upsell.getter()
{
  return 0x6C6C65737055;
}

uint64_t static MetricsPageType.welcome.getter()
{
  return 0x656D6F636C6557;
}

uint64_t static MetricsPageType.podcast.getter()
{
  return 0x74736163646F50;
}

unint64_t sub_1A91E8518()
{
  unint64_t result;

  result = qword_1EEABA158;
  if (!qword_1EEABA158)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsPageType, &type metadata for MetricsPageType);
    atomic_store(result, (unint64_t *)&qword_1EEABA158);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsPageType()
{
  return &type metadata for MetricsPageType;
}

ValueMetadata *type metadata accessor for TimelineAlignmentError()
{
  return &type metadata for TimelineAlignmentError;
}

uint64_t dispatch thunk of TimelineAlignment.isInProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TimelineAlignment.referenceTimestamp(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TimelineAlignment.playerTimestamp(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TimelineAlignment.nonMatchingRangesInReference(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of TimelineAlignment.nonMatchingRangesInPlayer(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1A91E85DC()
{
  sub_1A93F9060();
  sub_1A93F810C();
  return swift_bridgeObjectRelease();
}

uint64_t DownloadTaskIdentifier.init(session:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  sub_1A93F70C8();
  swift_allocObject();
  v8 = sub_1A93F70BC();
  sub_1A93F7098();
  swift_allocObject();
  swift_retain();
  v9 = sub_1A93F708C();
  sub_1A93F70A4();
  result = swift_release();
  *a4 = a3;
  a4[1] = a1;
  a4[2] = a2;
  a4[3] = v8;
  a4[4] = v9;
  return result;
}

uint64_t DownloadTaskIdentifier.identifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t DownloadTaskIdentifier.session.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t DownloadTaskIdentifier.key.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F9060();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

unint64_t sub_1A91E8804@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = DownloadTaskIdentifier.key.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t DownloadTaskIdentifier.fileName.getter()
{
  return DownloadTaskIdentifier.key.getter();
}

void DownloadTaskIdentifier.fileFormat.getter(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t DownloadTaskIdentifier.encode(_:)()
{
  return sub_1A93F70B0();
}

uint64_t DownloadTaskIdentifier.decode(_:)()
{
  return sub_1A93F7080();
}

void sub_1A91E88D8(_BYTE *a1@<X8>)
{
  DownloadTaskIdentifier.fileFormat.getter(a1);
}

uint64_t sub_1A91E88EC()
{
  return DownloadTaskIdentifier.encode(_:)();
}

uint64_t sub_1A91E8900()
{
  return DownloadTaskIdentifier.decode(_:)();
}

uint64_t static DownloadTaskIdentifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  BOOL v7;

  if (*a1 != *a2)
    return 0;
  v4 = a1[2];
  v5 = a2[2];
  result = (v4 | v5) == 0;
  if (v4)
    v7 = v5 == 0;
  else
    v7 = 1;
  if (!v7)
  {
    if (a1[1] == a2[1] && v4 == v5)
      return 1;
    else
      return sub_1A93F90C0();
  }
  return result;
}

uint64_t DownloadTaskIdentifier.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1A93F92E8();
  if (!v1)
    return sub_1A93F92F4();
  sub_1A93F92F4();
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t DownloadTaskIdentifier.hashValue.getter()
{
  sub_1A93F92DC();
  DownloadTaskIdentifier.hash(into:)();
  return sub_1A93F9324();
}

uint64_t sub_1A91E8A4C()
{
  sub_1A93F92DC();
  DownloadTaskIdentifier.hash(into:)();
  return sub_1A93F9324();
}

void sub_1A91E8A84()
{
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A91E8A98()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1A91E8AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1A91E8B1C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A91E8BA0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t sub_1A91E8BF4(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1A91E8C3C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t DeletionDownloadConsistencyIssueResolutionStrategy.resolution(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v2 = type metadata accessor for DownloadConsistency.Issue(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  sub_1A91E8E98(a1, (uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  sub_1A91E8EE0((uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91E0);
  swift_allocObject();
  v9[1] = sub_1A93F7A94();
  sub_1A91E8F28();
  v7 = sub_1A93F7B24();
  swift_release();
  return v7;
}

uint64_t sub_1A91E8D7C(void (*a1)(_BYTE *), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE v15[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9790);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v15[-v9];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v15[-v12];
  sub_1A91E8F74(a3, (uint64_t)v7);
  swift_storeEnumTagMultiPayload();
  sub_1A91E9330((uint64_t)v7, (uint64_t)v10);
  sub_1A91E9330((uint64_t)v10, (uint64_t)v13);
  a1(v13);
  return sub_1A91E9378((uint64_t)v13);
}

uint64_t sub_1A91E8E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DownloadConsistency.Issue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A91E8EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DownloadConsistency.Issue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A91E8F28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2A91D8;
  if (!qword_1ED2A91D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A91E0);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0C96108], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2A91D8);
  }
  return result;
}

uint64_t sub_1A91E8F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DownloadConsistency.Issue(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A91E8E98(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, &v10[*(int *)(v19 + 48)], v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9708);
    v20 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DownloadedAssetEffect() - 8) + 80);
    v25 = a1;
    v21 = (v20 + 32) & ~v20;
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1A9405520;
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v17 + v21, v7, v4);
    a1 = v25;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v22 = sub_1A93F73E0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v10, v22);
  }
  else
  {
    v11 = &v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190) + 48)];
    v12 = *(_QWORD *)v11;
    v13 = *((_QWORD *)v11 + 1);
    v14 = sub_1A93F73E0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v10, v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9708);
    v15 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DownloadedAssetEffect() - 8) + 80);
    v16 = (v15 + 32) & ~v15;
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1A9405520;
    v18 = (_QWORD *)(v17 + v16);
    *v18 = v12;
    v18[1] = v13;
    swift_storeEnumTagMultiPayload();
  }
  sub_1A91E8E98(a1, a2);
  result = type metadata accessor for DownloadConsistency.IssueResolution(0);
  *(_QWORD *)(a2 + *(int *)(result + 20)) = v17;
  return result;
}

uint64_t sub_1A91E91E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v2 = type metadata accessor for DownloadConsistency.Issue(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  sub_1A91E8E98(a1, (uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  sub_1A91E8EE0((uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91E0);
  swift_allocObject();
  v9[1] = sub_1A93F7A94();
  sub_1A91E8F28();
  v7 = sub_1A93F7B24();
  swift_release();
  return v7;
}

uint64_t sub_1A91E92E4(void (*a1)(_BYTE *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DownloadConsistency.Issue(0) - 8) + 80);
  return sub_1A91E8D7C(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1A91E9330(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A91E9378(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9790);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of CategoriesSyncThresholdProviding.getCategoriesSyncThreshold()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A91E9424;
  return v7(a1, a2);
}

uint64_t sub_1A91E9424(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

void static EpisodeDownloadState.defaultState.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = -64;
}

uint64_t EpisodeDownloadState.dictionaryKey.getter()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A91E94C0
                                                            + 4 * byte_1A94104D0[*(unsigned __int8 *)(v0 + 16) >> 6]))(0x64616F6C6E776F64, 0xEC000000656C6261);
}

uint64_t sub_1A91E94DC()
{
  return 0x6E776F6E6B6E75;
}

BOOL EpisodeDownloadState.isDownloadedEpisode.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 16) & 0xC0) == 128;
}

BOOL EpisodeDownloadState.isDownloadingOrDownloaded.getter()
{
  uint64_t v0;

  return (*(unsigned __int8 *)(v0 + 16) >> 6) - 1 < 2u;
}

BOOL EpisodeDownloadState.isEpisodeFromiTunesSync.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 16) & 0xC1) == 129;
}

uint64_t sub_1A91E9538()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A91E9574
                                                            + 4 * byte_1A94104D4[*(unsigned __int8 *)(v0 + 16) >> 6]))(0x64616F6C6E776F64, 0xEC000000656C6261);
}

uint64_t sub_1A91E9590()
{
  return 0x6E776F6E6B6E75;
}

void sub_1A91E95A8(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = -2;
}

void static EpisodeDownloadState.state(for:)(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = -2;
}

void static EpisodeDownloadState.episodeStateDomain.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t assignWithCopy for EpisodeDownloadState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  sub_1A908850C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A9086E7C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for EpisodeDownloadState(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A9086E7C(v4, v5, v6);
  return a1;
}

uint64_t sub_1A91E9668(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 16) >> 6;
  if (v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_1A91E9684(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_1A91E9694(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = -64;
  }
  return result;
}

uint64_t sub_1A91E96C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A91E96CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1A91E96D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1A91E96DC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1A91E96E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1A91E96EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1A91E96F4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_1A91E96FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_1A91E9704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1A91E970C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t sub_1A91E9714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t sub_1A91E971C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t sub_1A91E9724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 104))();
}

uint64_t sub_1A91E972C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t sub_1A91E9734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t sub_1A91E973C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t sub_1A91E9744(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t sub_1A91E974C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t sub_1A91E9754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t sub_1A91E975C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t sub_1A91E9780(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 168))(a1, a2 & 1);
}

uint64_t sub_1A91E978C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t sub_1A91E9794(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t sub_1A91E979C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 192))();
}

uint64_t sub_1A91E97A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 200))();
}

uint64_t sub_1A91E97AC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t sub_1A91E97B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 216))();
}

uint64_t sub_1A91E97BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 224))();
}

uint64_t sub_1A91E97C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t sub_1A91E97CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 240))();
}

uint64_t sub_1A91E97D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 248))();
}

uint64_t sub_1A91E97DC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t sub_1A91E9800(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 264))(a1, a2 & 1);
}

uint64_t sub_1A91E980C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 272))();
}

uint64_t sub_1A91E9814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 280))();
}

uint64_t sub_1A91E981C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 288))();
}

uint64_t sub_1A91E9840(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 296))(a1, a2 & 1);
}

uint64_t sub_1A91E984C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 304))();
}

uint64_t sub_1A91E9854(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 312))();
}

uint64_t sub_1A91E9878(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 320))(a1, a2 & 1);
}

uint64_t sub_1A91E9884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 328))();
}

uint64_t sub_1A91E988C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 336))();
}

uint64_t sub_1A91E98B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 344))();
}

uint64_t sub_1A91E98B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 352))();
}

uint64_t MediaAPIResponse.init(objects:response:contentHash:parameters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v8;

  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  v8 = (uint64_t)a7 + *(int *)(type metadata accessor for MediaAPIResponse(0, a6, a3, a4) + 36);
  return sub_1A917695C(a5, v8);
}

uint64_t type metadata accessor for MediaAPIResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MediaAPIResponse);
}

uint64_t MediaAPIResponse.objects.getter()
{
  return swift_bridgeObjectRetain();
}

id MediaAPIResponse.response.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

uint64_t MediaAPIResponse.contentHash.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaAPIResponse.parameters.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A9114B88(v2 + *(int *)(a1 + 36), a2);
}

uint64_t sub_1A91E9958()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MediaRequest.Params();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1A91E99E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  char *__dst;
  _QWORD *v46;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    v28 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v7 = (void *)a2[1];
    v6 = a2[2];
    a1[1] = v7;
    a1[2] = v6;
    a1[3] = a2[3];
    v8 = *(int *)(a3 + 36);
    v46 = a1;
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)((char *)a2 + v8);
    v12 = *(_QWORD *)((char *)a2 + v8 + 8);
    v13 = *(_QWORD *)((char *)a2 + v8 + 16);
    v14 = *(_QWORD *)((char *)a2 + v8 + 24);
    v15 = *(_QWORD *)((char *)a2 + v8 + 32);
    v16 = *((_BYTE *)a2 + v8 + 40);
    swift_bridgeObjectRetain();
    v17 = v7;
    swift_bridgeObjectRetain();
    sub_1A919EE64(v11, v12, v13, v14, v15, v16);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    *((_QWORD *)v9 + 2) = v13;
    *((_QWORD *)v9 + 3) = v14;
    *((_QWORD *)v9 + 4) = v15;
    v9[40] = v16;
    v9[41] = v10[41];
    *((_WORD *)v9 + 21) = *((_WORD *)v10 + 21);
    v18 = *((_QWORD *)v10 + 7);
    *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
    *((_QWORD *)v9 + 7) = v18;
    v19 = *((_QWORD *)v10 + 9);
    *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
    *((_QWORD *)v9 + 9) = v19;
    v20 = *((_QWORD *)v10 + 11);
    *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
    *((_QWORD *)v9 + 11) = v20;
    v21 = *((_QWORD *)v10 + 13);
    *((_QWORD *)v9 + 12) = *((_QWORD *)v10 + 12);
    *((_QWORD *)v9 + 13) = v21;
    v22 = *((_QWORD *)v10 + 15);
    *((_QWORD *)v9 + 14) = *((_QWORD *)v10 + 14);
    *((_QWORD *)v9 + 15) = v22;
    v9[128] = v10[128];
    *((_QWORD *)v9 + 17) = *((_QWORD *)v10 + 17);
    v9[144] = v10[144];
    v44 = *((_QWORD *)v10 + 20);
    *((_QWORD *)v9 + 19) = *((_QWORD *)v10 + 19);
    *((_QWORD *)v9 + 20) = v44;
    *((_QWORD *)v9 + 21) = *((_QWORD *)v10 + 21);
    *((_WORD *)v9 + 88) = *((_WORD *)v10 + 88);
    v23 = (int *)type metadata accessor for MediaRequest.Params();
    v24 = v23[24];
    __dst = &v9[v24];
    v25 = &v10[v24];
    v26 = sub_1A93F726C();
    v42 = *(_QWORD *)(v26 - 8);
    v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v43(v25, 1, v26))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(__dst, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v26);
    }
    v29 = v23[25];
    v30 = &v9[v29];
    v31 = &v10[v29];
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    v9[v23[26]] = v10[v23[26]];
    v33 = v23[27];
    v34 = &v9[v33];
    v35 = &v10[v33];
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    *(_QWORD *)&v9[v23[28]] = *(_QWORD *)&v10[v23[28]];
    v37 = v23[29];
    v38 = &v9[v37];
    v39 = &v10[v37];
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    v9[v23[30]] = v10[v23[30]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v46;
  }
  return (_QWORD *)v28;
}

uint64_t sub_1A91E9CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  sub_1A9114BD0(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_BYTE *)(v4 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for MediaRequest.Params() + 96);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1A91E9E1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  char *__dst;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = *(int *)(a3 + 36);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = *(_QWORD *)((char *)a2 + v5);
  v9 = *(_QWORD *)((char *)a2 + v5 + 8);
  v10 = *(_QWORD *)((char *)a2 + v5 + 16);
  v11 = *(_QWORD *)((char *)a2 + v5 + 24);
  v12 = *(_QWORD *)((char *)a2 + v5 + 32);
  v13 = *((_BYTE *)a2 + v5 + 40);
  swift_bridgeObjectRetain();
  v14 = v3;
  swift_bridgeObjectRetain();
  sub_1A919EE64(v8, v9, v10, v11, v12, v13);
  *(_QWORD *)v6 = v8;
  *((_QWORD *)v6 + 1) = v9;
  *((_QWORD *)v6 + 2) = v10;
  *((_QWORD *)v6 + 3) = v11;
  *((_QWORD *)v6 + 4) = v12;
  v6[40] = v13;
  v6[41] = v7[41];
  *((_WORD *)v6 + 21) = *((_WORD *)v7 + 21);
  v15 = *((_QWORD *)v7 + 7);
  *((_QWORD *)v6 + 6) = *((_QWORD *)v7 + 6);
  *((_QWORD *)v6 + 7) = v15;
  v16 = *((_QWORD *)v7 + 9);
  *((_QWORD *)v6 + 8) = *((_QWORD *)v7 + 8);
  *((_QWORD *)v6 + 9) = v16;
  v17 = *((_QWORD *)v7 + 11);
  *((_QWORD *)v6 + 10) = *((_QWORD *)v7 + 10);
  *((_QWORD *)v6 + 11) = v17;
  v18 = *((_QWORD *)v7 + 13);
  *((_QWORD *)v6 + 12) = *((_QWORD *)v7 + 12);
  *((_QWORD *)v6 + 13) = v18;
  v19 = *((_QWORD *)v7 + 15);
  *((_QWORD *)v6 + 14) = *((_QWORD *)v7 + 14);
  *((_QWORD *)v6 + 15) = v19;
  v6[128] = v7[128];
  *((_QWORD *)v6 + 17) = *((_QWORD *)v7 + 17);
  v6[144] = v7[144];
  v40 = *((_QWORD *)v7 + 20);
  *((_QWORD *)v6 + 19) = *((_QWORD *)v7 + 19);
  *((_QWORD *)v6 + 20) = v40;
  *((_QWORD *)v6 + 21) = *((_QWORD *)v7 + 21);
  *((_WORD *)v6 + 88) = *((_WORD *)v7 + 88);
  v20 = (int *)type metadata accessor for MediaRequest.Params();
  v21 = v20[24];
  __dst = &v6[v21];
  v22 = &v7[v21];
  v23 = sub_1A93F726C();
  v38 = *(_QWORD *)(v23 - 8);
  v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v39(v22, 1, v23))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(__dst, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v23);
  }
  v25 = v20[25];
  v26 = &v6[v25];
  v27 = &v7[v25];
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v28;
  v6[v20[26]] = v7[v20[26]];
  v29 = v20[27];
  v30 = &v6[v29];
  v31 = &v7[v29];
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = v32;
  *(_QWORD *)&v6[v20[28]] = *(_QWORD *)&v7[v20[28]];
  v33 = v20[29];
  v34 = &v6[v33];
  v35 = &v7[v33];
  v36 = *((_QWORD *)v35 + 1);
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = v36;
  v6[v20[30]] = v7[v20[30]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1A91EA0D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = v6;
  v8 = v6;

  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 36);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = *(_QWORD *)((char *)a2 + v9);
  v13 = *(_QWORD *)((char *)a2 + v9 + 8);
  v14 = *((_QWORD *)v11 + 2);
  v15 = *((_QWORD *)v11 + 3);
  v16 = *((_QWORD *)v11 + 4);
  v17 = v11[40];
  sub_1A919EE64(v12, v13, v14, v15, v16, v17);
  v18 = *(_QWORD *)v10;
  v19 = *((_QWORD *)v10 + 1);
  v20 = *((_QWORD *)v10 + 2);
  v21 = *((_QWORD *)v10 + 3);
  v22 = *((_QWORD *)v10 + 4);
  *(_QWORD *)v10 = v12;
  *((_QWORD *)v10 + 1) = v13;
  *((_QWORD *)v10 + 2) = v14;
  *((_QWORD *)v10 + 3) = v15;
  *((_QWORD *)v10 + 4) = v16;
  v23 = v10[40];
  v10[40] = v17;
  sub_1A9114BD0(v18, v19, v20, v21, v22, v23);
  v10[41] = v11[41];
  v10[42] = v11[42];
  v10[43] = v11[43];
  *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 8) = *((_QWORD *)v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 9) = *((_QWORD *)v11 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 10) = *((_QWORD *)v11 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 11) = *((_QWORD *)v11 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 12) = *((_QWORD *)v11 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 13) = *((_QWORD *)v11 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 14) = *((_QWORD *)v11 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[128] = v11[128];
  v24 = *((_QWORD *)v11 + 17);
  v10[144] = v11[144];
  *((_QWORD *)v10 + 17) = v24;
  *((_QWORD *)v10 + 19) = *((_QWORD *)v11 + 19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 20) = *((_QWORD *)v11 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = *((_QWORD *)v11 + 21);
  v10[176] = v11[176];
  *((_QWORD *)v10 + 21) = v25;
  v10[177] = v11[177];
  v26 = (int *)type metadata accessor for MediaRequest.Params();
  v27 = v26[24];
  v28 = &v10[v27];
  v29 = &v11[v27];
  v30 = sub_1A93F726C();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  LODWORD(v16) = v32(v28, 1, v30);
  v33 = v32(v29, 1, v30);
  if (!(_DWORD)v16)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v28, v29, v30);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_6;
  }
  if (v33)
  {
LABEL_6:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
LABEL_7:
  v35 = v26[25];
  v36 = &v10[v35];
  v37 = &v11[v35];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[v26[26]] = v11[v26[26]];
  v38 = v26[27];
  v39 = &v10[v38];
  v40 = &v11[v38];
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v10[v26[28]] = *(_QWORD *)&v11[v26[28]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = v26[29];
  v42 = &v10[v41];
  v43 = &v11[v41];
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[v26[30]] = v11[v26[30]];
  return a1;
}

uint64_t sub_1A91EA4BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(int *)(a3 + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = *(_OWORD *)(a2 + v5 + 16);
  *(_OWORD *)v6 = *(_OWORD *)(a2 + v5);
  *(_OWORD *)(v6 + 16) = v8;
  *(_OWORD *)(v6 + 25) = *(_OWORD *)(a2 + v5 + 25);
  *(_WORD *)(v6 + 41) = *(_WORD *)(a2 + v5 + 41);
  *(_BYTE *)(v6 + 43) = *(_BYTE *)(a2 + v5 + 43);
  v9 = *(_OWORD *)(a2 + v5 + 64);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a2 + v5 + 48);
  *(_OWORD *)(v6 + 64) = v9;
  v10 = *(_OWORD *)(a2 + v5 + 96);
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(a2 + v5 + 80);
  *(_OWORD *)(v6 + 96) = v10;
  *(_OWORD *)(v6 + 112) = *(_OWORD *)(a2 + v5 + 112);
  *(_BYTE *)(v6 + 128) = *(_BYTE *)(a2 + v5 + 128);
  v11 = *(_QWORD *)(a2 + v5 + 136);
  *(_BYTE *)(v6 + 144) = *(_BYTE *)(v7 + 144);
  *(_QWORD *)(v6 + 136) = v11;
  *(_OWORD *)(v6 + 152) = *(_OWORD *)(v7 + 152);
  v12 = *(_QWORD *)(v7 + 168);
  *(_BYTE *)(v6 + 176) = *(_BYTE *)(v7 + 176);
  *(_QWORD *)(v6 + 168) = v12;
  *(_BYTE *)(v6 + 177) = *(_BYTE *)(v7 + 177);
  v13 = (int *)type metadata accessor for MediaRequest.Params();
  v14 = v13[24];
  v15 = (void *)(v6 + v14);
  v16 = (const void *)(v7 + v14);
  v17 = sub_1A93F726C();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  *(_OWORD *)(v6 + v13[25]) = *(_OWORD *)(v7 + v13[25]);
  *(_BYTE *)(v6 + v13[26]) = *(_BYTE *)(v7 + v13[26]);
  *(_OWORD *)(v6 + v13[27]) = *(_OWORD *)(v7 + v13[27]);
  *(_QWORD *)(v6 + v13[28]) = *(_QWORD *)(v7 + v13[28]);
  *(_OWORD *)(v6 + v13[29]) = *(_OWORD *)(v7 + v13[29]);
  *(_BYTE *)(v6 + v13[30]) = *(_BYTE *)(v7 + v13[30]);
  return a1;
}

_QWORD *sub_1A91EA658(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  unsigned __int8 v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = (void *)a1[1];
  a1[1] = a2[1];

  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 36);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = *(_QWORD *)((char *)a2 + v8 + 32);
  v12 = v10[40];
  v13 = *(_QWORD *)v9;
  v14 = *((_QWORD *)v9 + 1);
  v15 = *((_QWORD *)v9 + 2);
  v16 = *((_QWORD *)v9 + 3);
  v17 = *((_QWORD *)v9 + 4);
  v18 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v18;
  *((_QWORD *)v9 + 4) = v11;
  v19 = v9[40];
  v9[40] = v12;
  sub_1A9114BD0(v13, v14, v15, v16, v17, v19);
  v9[41] = v10[41];
  *((_WORD *)v9 + 21) = *((_WORD *)v10 + 21);
  *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
  swift_bridgeObjectRelease();
  *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
  swift_bridgeObjectRelease();
  *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
  swift_bridgeObjectRelease();
  *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
  swift_bridgeObjectRelease();
  *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
  swift_bridgeObjectRelease();
  *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
  swift_bridgeObjectRelease();
  *((_QWORD *)v9 + 12) = *((_QWORD *)v10 + 12);
  swift_bridgeObjectRelease();
  *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
  swift_bridgeObjectRelease();
  *((_QWORD *)v9 + 14) = *((_QWORD *)v10 + 14);
  swift_bridgeObjectRelease();
  *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
  swift_bridgeObjectRelease();
  v9[128] = v10[128];
  *((_QWORD *)v9 + 17) = *((_QWORD *)v10 + 17);
  v9[144] = v10[144];
  *((_QWORD *)v9 + 19) = *((_QWORD *)v10 + 19);
  swift_bridgeObjectRelease();
  *((_QWORD *)v9 + 20) = *((_QWORD *)v10 + 20);
  swift_bridgeObjectRelease();
  *((_QWORD *)v9 + 21) = *((_QWORD *)v10 + 21);
  v9[176] = v10[176];
  v9[177] = v10[177];
  v20 = (int *)type metadata accessor for MediaRequest.Params();
  v21 = v20[24];
  v22 = &v9[v21];
  v23 = &v10[v21];
  v24 = sub_1A93F726C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_7:
  v30 = v20[25];
  v31 = &v9[v30];
  v32 = &v10[v30];
  v34 = *(_QWORD *)v32;
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = v34;
  *((_QWORD *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  v9[v20[26]] = v10[v20[26]];
  v35 = v20[27];
  v36 = &v9[v35];
  v37 = &v10[v35];
  v39 = *(_QWORD *)v37;
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = v39;
  *((_QWORD *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v9[v20[28]] = *(_QWORD *)&v10[v20[28]];
  swift_bridgeObjectRelease();
  v40 = v20[29];
  v41 = &v9[v40];
  v42 = &v10[v40];
  v44 = *(_QWORD *)v42;
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v41 = v44;
  *((_QWORD *)v41 + 1) = v43;
  swift_bridgeObjectRelease();
  v9[v20[30]] = v10[v20[30]];
  return a1;
}

uint64_t sub_1A91EA95C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A91EA968(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for MediaRequest.Params();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v8);
  }
}

uint64_t sub_1A91EA9E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1A91EA9F0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for MediaRequest.Params();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A91EAA64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t i;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v5)
    goto LABEL_7;
LABEL_4:
  v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v10 | (v8 << 6); ; i = __clz(__rbit64(v14)) + (v8 << 6))
  {
    v12 = *(_QWORD *)(a1 + 48) + 16 * i;
    if ((*(_BYTE *)(v12 + 8) & 1) != 0)
    {
      if (v5)
        goto LABEL_4;
    }
    else
    {
      v16 = *(_QWORD *)v12;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A90A118C(0, v9[2] + 1, 1, v9);
        v9 = (_QWORD *)result;
      }
      v18 = v9[2];
      v17 = v9[3];
      if (v18 >= v17 >> 1)
      {
        result = (uint64_t)sub_1A90A118C((_QWORD *)(v17 > 1), v18 + 1, 1, v9);
        v9 = (_QWORD *)result;
      }
      v9[2] = v18 + 1;
      v9[v18 + 4] = v16;
      if (v5)
        goto LABEL_4;
    }
LABEL_7:
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v13 >= v6)
      goto LABEL_29;
    v14 = *(_QWORD *)(v2 + 8 * v13);
    ++v8;
    if (!v14)
    {
      v8 = v13 + 1;
      if (v13 + 1 >= v6)
        goto LABEL_29;
      v14 = *(_QWORD *)(v2 + 8 * v8);
      if (!v14)
      {
        v8 = v13 + 2;
        if (v13 + 2 >= v6)
          goto LABEL_29;
        v14 = *(_QWORD *)(v2 + 8 * v8);
        if (!v14)
        {
          v8 = v13 + 3;
          if (v13 + 3 >= v6)
            goto LABEL_29;
          v14 = *(_QWORD *)(v2 + 8 * v8);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v14 - 1) & v14;
  }
  v15 = v13 + 4;
  if (v15 >= v6)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v9;
  }
  v14 = *(_QWORD *)(v2 + 8 * v15);
  if (v14)
  {
    v8 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v8 >= v6)
      goto LABEL_29;
    v14 = *(_QWORD *)(v2 + 8 * v8);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A91EAC4C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A91EAC90 + 4 * byte_1A9410630[a1]))(0x616C507472617473, 0xED00006B63616279);
}

unint64_t sub_1A91EAC90()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1A91EAD2C()
{
  unsigned __int8 *v0;

  return sub_1A91EAC4C(*v0);
}

uint64_t sub_1A91EAD34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9200CC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A91EAD58()
{
  sub_1A91EB3B8();
  return sub_1A93F945C();
}

uint64_t sub_1A91EAD80()
{
  sub_1A91EB3B8();
  return sub_1A93F9468();
}

uint64_t sub_1A91EADA8()
{
  sub_1A91EB484();
  return sub_1A93F945C();
}

uint64_t sub_1A91EADD0()
{
  sub_1A91EB484();
  return sub_1A93F9468();
}

uint64_t sub_1A91EADF8()
{
  sub_1A91EB3FC();
  return sub_1A93F945C();
}

uint64_t sub_1A91EAE20()
{
  sub_1A91EB3FC();
  return sub_1A93F9468();
}

uint64_t sub_1A91EAE48()
{
  sub_1A91EB50C();
  return sub_1A93F945C();
}

uint64_t sub_1A91EAE70()
{
  sub_1A91EB50C();
  return sub_1A93F9468();
}

uint64_t sub_1A91EAE98()
{
  sub_1A91EB4C8();
  return sub_1A93F945C();
}

uint64_t sub_1A91EAEC0()
{
  sub_1A91EB4C8();
  return sub_1A93F9468();
}

uint64_t sub_1A91EAEE8()
{
  sub_1A91EB440();
  return sub_1A93F945C();
}

uint64_t sub_1A91EAF10()
{
  sub_1A91EB440();
  return sub_1A93F9468();
}

uint64_t sub_1A91EAF38()
{
  sub_1A91EB550();
  return sub_1A93F945C();
}

uint64_t sub_1A91EAF60()
{
  sub_1A91EB550();
  return sub_1A93F9468();
}

uint64_t PlaybackIntent.Option.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  _QWORD v25[16];
  uint64_t v26;
  uint64_t v27;
  char v28;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA228);
  v25[14] = *(_QWORD *)(v4 - 8);
  v25[15] = v4;
  MEMORY[0x1E0C80A78](v4);
  v25[13] = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA230);
  v25[11] = *(_QWORD *)(v6 - 8);
  v25[12] = v6;
  MEMORY[0x1E0C80A78](v6);
  v25[10] = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA238);
  v25[8] = *(_QWORD *)(v8 - 8);
  v25[9] = v8;
  MEMORY[0x1E0C80A78](v8);
  v25[7] = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA240);
  v25[5] = *(_QWORD *)(v10 - 8);
  v25[6] = v10;
  MEMORY[0x1E0C80A78](v10);
  v25[4] = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA248);
  v26 = *(_QWORD *)(v12 - 8);
  v27 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA250);
  v25[2] = *(_QWORD *)(v15 - 8);
  v25[3] = v15;
  MEMORY[0x1E0C80A78](v15);
  v25[1] = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA258);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *v2;
  v22 = *((unsigned __int8 *)v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91EB3B8();
  sub_1A93F93D8();
  if (v22 == 1)
    __asm { BR              X9 }
  v28 = 1;
  sub_1A91EB50C();
  sub_1A93F8FAC();
  v23 = v27;
  sub_1A93F9018();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

unint64_t sub_1A91EB3B8()
{
  unint64_t result;

  result = qword_1EEABA260;
  if (!qword_1EEABA260)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410FD4, &type metadata for PlaybackIntent.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA260);
  }
  return result;
}

unint64_t sub_1A91EB3FC()
{
  unint64_t result;

  result = qword_1EEABA268;
  if (!qword_1EEABA268)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410F84, &type metadata for PlaybackIntent.Option.IgnoreContinuousPlaybackSettingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA268);
  }
  return result;
}

unint64_t sub_1A91EB440()
{
  unint64_t result;

  result = qword_1EEABA270;
  if (!qword_1EEABA270)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410F34, &type metadata for PlaybackIntent.Option.SmartPlayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA270);
  }
  return result;
}

unint64_t sub_1A91EB484()
{
  unint64_t result;

  result = qword_1EEABA278;
  if (!qword_1EEABA278)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410EE4, &type metadata for PlaybackIntent.Option.ForceLocalPlaybackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA278);
  }
  return result;
}

unint64_t sub_1A91EB4C8()
{
  unint64_t result;

  result = qword_1EEABA280;
  if (!qword_1EEABA280)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410E94, &type metadata for PlaybackIntent.Option.PreventQueueingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA280);
  }
  return result;
}

unint64_t sub_1A91EB50C()
{
  unint64_t result;

  result = qword_1EEABA288;
  if (!qword_1EEABA288)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410E44, &type metadata for PlaybackIntent.Option.InitialItemPlayheadOverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA288);
  }
  return result;
}

unint64_t sub_1A91EB550()
{
  unint64_t result;

  result = qword_1EEABA290;
  if (!qword_1EEABA290)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410DF4, &type metadata for PlaybackIntent.Option.StartPlaybackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA290);
  }
  return result;
}

uint64_t PlaybackIntent.Option.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD v25[6];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;

  v35 = a2;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA298);
  v29 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v39 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA2A0);
  v25[5] = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v38 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA2A8);
  v30 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  MEMORY[0x1E0C80A78](v5);
  v37 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA2B0);
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  MEMORY[0x1E0C80A78](v7);
  v36 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA2B8);
  v25[4] = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v34 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA2C0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA2C8);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_1A91EB3B8();
  v19 = v41;
  sub_1A93F93C0();
  if (!v19)
  {
    v25[3] = v13;
    v25[1] = v11;
    v25[2] = v10;
    v41 = v15;
    v20 = sub_1A93F8F94();
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X10 }
    v21 = sub_1A93F8D00();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7C28);
    *v23 = &type metadata for PlaybackIntent.Option;
    sub_1A93F8EF8();
    sub_1A93F8CE8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0DEC450], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v14);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
}

uint64_t sub_1A91EBC24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PlaybackIntent.Option.init(from:)(a1, a2);
}

uint64_t sub_1A91EBC38(_QWORD *a1)
{
  return PlaybackIntent.Option.encode(to:)(a1);
}

uint64_t PlaybackIntent.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 32) = v6;
  return sub_1A912C880(v2, v3, v4, v5, v6);
}

uint64_t PlaybackIntent.listSettings.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int16 v13;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v6 = *(_QWORD *)(v1 + 72);
  v7 = *(_QWORD *)(v1 + 80);
  v8 = *(_QWORD *)(v1 + 88);
  v9 = *(_QWORD *)(v1 + 96);
  v10 = *(_QWORD *)(v1 + 104);
  v11 = *(_QWORD *)(v1 + 112);
  v12 = *(_BYTE *)(v1 + 122);
  v13 = *(_WORD *)(v1 + 120);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 82) = v12;
  *(_WORD *)(a1 + 80) = v13;
  return sub_1A912C8E4(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v13);
}

uint64_t PlaybackIntent.initialItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PlaybackIntent(0);
  return sub_1A9062170(v1 + *(int *)(v3 + 24), a1, &qword_1ED2AAF68);
}

uint64_t PlaybackIntent.options.getter()
{
  type metadata accessor for PlaybackIntent(0);
  return swift_bridgeObjectRetain();
}

uint64_t PlaybackIntent.mrDesiredSessionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlaybackIntent(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static Set<>.default.getter()
{
  if (qword_1EEAB6D28 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t PlaybackIntent.init(id:listSettings:initialItem:options:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int16 v17;
  char v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t *v24;
  uint64_t v25;

  v10 = sub_1A93F73E0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v14;
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a5 + 40) = *(_OWORD *)a2;
  *(_OWORD *)(a5 + 56) = v15;
  v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a5 + 72) = *(_OWORD *)(a2 + 32);
  v17 = *(_WORD *)(a2 + 80);
  v18 = *(_BYTE *)(a2 + 82);
  *(_BYTE *)(a5 + 32) = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a5 + 88) = v16;
  *(_OWORD *)(a5 + 104) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a5 + 122) = v18;
  *(_WORD *)(a5 + 120) = v17;
  v19 = (int *)type metadata accessor for PlaybackIntent(0);
  sub_1A9062170(a3, a5 + v19[6], &qword_1ED2AAF68);
  sub_1A93F73D4();
  v20 = sub_1A93F73A4();
  v22 = v21;
  sub_1A905FD54(a3, &qword_1ED2AAF68);
  result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v24 = (uint64_t *)(a5 + v19[8]);
  *v24 = v20;
  v24[1] = v22;
  *(_QWORD *)(a5 + v19[7]) = a4;
  return result;
}

uint64_t PlaybackIntent.validatedIntent()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[12] = a1;
  v2[13] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  v2[14] = swift_task_alloc();
  v3 = sub_1A93F726C();
  v2[15] = v3;
  v2[16] = *(_QWORD *)(v3 - 8);
  v2[17] = swift_task_alloc();
  v4 = sub_1A93F73E0();
  v2[18] = v4;
  v2[19] = *(_QWORD *)(v4 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = type metadata accessor for PlaybackIntent(0);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v5 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v2[27] = v5;
  v2[28] = *(_QWORD *)(v5 - 8);
  v2[29] = swift_task_alloc();
  v2[30] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A91EC054()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = 1 << *(_BYTE *)(v1 + 32);
  if ((v2 & 0x10B) != 0)
  {
    v4 = *(_QWORD *)(v0 + 272);
    v5 = *(_QWORD *)(v0 + 216);
    v6 = *(_QWORD *)(v0 + 224);
    sub_1A9062170(v1 + *(int *)(*(_QWORD *)(v0 + 168) + 24), v4, &qword_1ED2AAF68);
    LODWORD(v5) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    sub_1A905FD54(v4, &qword_1ED2AAF68);
    v1 = *(_QWORD *)(v0 + 104);
    if ((_DWORD)v5 == 1)
      goto LABEL_3;
  }
  else if ((v2 & 0xE0) != 0)
  {
LABEL_3:
    sub_1A9064630(v1, *(_QWORD *)(v0 + 96), type metadata accessor for PlaybackIntent);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v7;
  *(_QWORD *)(v7 + 16) = v1;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 288) = v8;
  *v8 = v0;
  v8[1] = sub_1A91EC250;
  return sub_1A93F9078();
}

uint64_t sub_1A91EC250()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A91EC2AC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  v3 = v0[32];
  v2 = v0[33];
  v4 = v0[28];
  v5 = v1[27];
  sub_1A9062170(v2, v3, &qword_1ED2AAF68);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v3, 1, v5);
  v7 = v1[32];
  if (v6 != 1)
  {
    v8 = v1[29];
    v9 = v1[27];
    sub_1A9116174(v7, v8, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    __asm { BR              X10 }
  }
  sub_1A905FD54(v7, &qword_1ED2AAF68);
  type metadata accessor for PlaybackIntent.ValidationError(0);
  sub_1A9066CA8(&qword_1EEABA2D8, type metadata accessor for PlaybackIntent.ValidationError, (uint64_t)&protocol conformance descriptor for PlaybackIntent.ValidationError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  sub_1A905FD54(v1[33], &qword_1ED2AAF68);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v1[1])();
}

BOOL PodcastsMediaLibrary.MediaItem.requiresAuthentication.getter()
{
  uint64_t v0;
  int v1;
  BOOL v3;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 108));
  if (v1 == 4)
    return 0;
  if (v1)
    v3 = v1 == 3;
  else
    v3 = 1;
  return !v3;
}

uint64_t sub_1A91ED2E0()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v5;
  void *v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedAccountStore);
  v7[0] = 0;
  v1 = objc_msgSend(v0, sel_activeStoreAccountWithError_, v7);

  if (v1)
  {
    v2 = v7[0];
    v3 = objc_msgSend(v1, sel_ams_DSID);

    if (v3)
    {

      return 1;
    }
  }
  else
  {
    v5 = v7[0];
    v6 = (void *)sub_1A93F7128();

    swift_willThrow();
  }
  return 0;
}

void sub_1A91ED3E4(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  unint64_t v23;
  _QWORD *v24;
  unint64_t v25;

  v3 = *(_QWORD **)v1;
  v4 = *(unsigned __int8 *)(v1 + 32);
  if (v4 == 1)
  {
    if (v3[2])
    {
      v16 = v3[4];
      v17 = sub_1A91181BC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v19 = v17[2];
      v18 = v17[3];
      if (v19 >= v18 >> 1)
        v17 = sub_1A91181BC((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
      v17[2] = v19 + 1;
      v17[v19 + 4] = v16;
    }
    else
    {
      v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)a1 = v17;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    v21 = 1;
LABEL_19:
    *(_BYTE *)(a1 + 32) = v21;
    return;
  }
  v5 = *(_QWORD *)(v1 + 8);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  if (v4 != 4)
  {
    if (v4 != 2)
    {
      *(_QWORD *)a1 = v3;
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 24) = v7;
      *(_BYTE *)(a1 + 32) = v4;
      sub_1A912C880((uint64_t)v3, v5, v6, v7, v4);
      return;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9728);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405520;
    if (v3[2])
    {
      v10 = v3[4];
      v9 = v3[5];
      *(_QWORD *)(inited + 32) = v10;
      *(_QWORD *)(inited + 40) = v9;
      swift_bridgeObjectRetain_n();
      v11 = sub_1A907ECFC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v12 = v11[2];
      v13 = v11[3];
      v14 = v12 + 1;
      if (v12 >= v13 >> 1)
      {
        v25 = v12 + 1;
        v22 = v11;
        v23 = v11[2];
        v24 = sub_1A907ECFC((_QWORD *)(v13 > 1), v12 + 1, 1, v22);
        v12 = v23;
        v14 = v25;
        v11 = v24;
      }
      v11[2] = v14;
      v15 = &v11[2 * v12];
      v15[4] = v10;
      v15[5] = v9;
    }
    else
    {
      *(_QWORD *)(inited + 32) = 0;
      *(_QWORD *)(inited + 40) = 0;
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_release();
    *(_QWORD *)a1 = v11;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    v21 = 2;
    goto LABEL_19;
  }
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1A9405520;
    *(_QWORD *)(v20 + 32) = v6;
    *(_QWORD *)(v20 + 40) = v7;
    *(_QWORD *)a1 = v20;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_BYTE *)(a1 + 32) = 2;
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = 0;
    *(_BYTE *)(a1 + 32) = 4;
  }
  swift_bridgeObjectRetain();
}

uint64_t PlaybackIntent.initialItemRequiresLocalPlayback.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - v9;
  v11 = type metadata accessor for PlaybackIntent(0);
  sub_1A9062170(v0 + *(int *)(v11 + 24), (uint64_t)v3, &qword_1ED2AAF68);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1A905FD54((uint64_t)v3, &qword_1ED2AAF68);
  }
  else
  {
    sub_1A9116174((uint64_t)v3, (uint64_t)v10, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    if ((v10[56] & 1) != 0 || ((v12 = *((_QWORD *)v10 + 6)) != 0 ? (v13 = v12 == 1000000000000) : (v13 = 1), v13))
    {
      v14 = *((_QWORD *)v10 + 5);
      sub_1A9116174((uint64_t)v10, (uint64_t)v7, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      if (v14)
      {
        v15 = *((_QWORD *)v7 + 13);
        sub_1A9064714((uint64_t)v7, type metadata accessor for PodcastsMediaLibrary.MediaItem);
        if (v15)
          return 0;
      }
      else
      {
        sub_1A9064714((uint64_t)v7, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      }
      return 1;
    }
    sub_1A9064714((uint64_t)v10, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  }
  return 0;
}

uint64_t PlaybackIntent.encodeData()()
{
  uint64_t v0;

  sub_1A93F70C8();
  swift_allocObject();
  sub_1A93F70BC();
  type metadata accessor for PlaybackIntent(0);
  sub_1A9066CA8(&qword_1EEABA2E0, type metadata accessor for PlaybackIntent, (uint64_t)&protocol conformance descriptor for PlaybackIntent);
  v0 = sub_1A93F70B0();
  swift_release();
  return v0;
}

void sub_1A91ED880(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  char *v33;
  void *v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t aBlock[6];

  v44 = a1;
  v3 = type metadata accessor for PlaybackIntent(0);
  v41 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v41 + 64);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  v7 = *(_QWORD *)(v42 + 64);
  MEMORY[0x1E0C80A78](v6);
  v40 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v12 = objc_msgSend(v11, sel_privateQueueContext);

  v13 = *(unsigned __int8 *)(a2 + 32);
  if (v13 == 4)
  {
    v16 = *(_QWORD *)(a2 + 24);
    if (v16)
    {
      v15 = *(_QWORD *)(a2 + 16);
      goto LABEL_7;
    }
LABEL_11:
    sub_1A9062170(a2 + *(int *)(v3 + 24), (uint64_t)v10, &qword_1ED2AAF68);
    sub_1A93F8424();
    goto LABEL_14;
  }
  if (v13 != 2)
    goto LABEL_11;
  v14 = *(_QWORD *)a2;
  if (!*(_QWORD *)(*(_QWORD *)a2 + 16))
    goto LABEL_11;
  v15 = *(_QWORD *)(v14 + 32);
  v16 = *(_QWORD *)(v14 + 40);
LABEL_7:
  swift_bridgeObjectRetain();
  if (qword_1ED2A87A0 != -1)
    swift_once();
  v39 = v12;
  v17 = sub_1A93F7698();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED2A8780);
  swift_bridgeObjectRetain_n();
  v18 = sub_1A93F7674();
  v19 = sub_1A93F87B4();
  v20 = os_log_type_enabled(v18, v19);
  v37 = v15;
  v38 = v4;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v36 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    aBlock[0] = v23;
    *(_DWORD *)v22 = 136315138;
    swift_bridgeObjectRetain();
    v45 = sub_1A906436C(v15, v16, aBlock);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v18, v19, "Fetching initial item %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v23, -1, -1);
    v24 = v22;
    v5 = v36;
    MEMORY[0x1AF41411C](v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v25 = v42;
  v26 = v43;
  v27 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v40, v44, v43);
  sub_1A9064630(a2, (uint64_t)v5, type metadata accessor for PlaybackIntent);
  v28 = (*(unsigned __int8 *)(v25 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v29 = (v7 + *(unsigned __int8 *)(v41 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v30 = (_QWORD *)swift_allocObject();
  v31 = v39;
  v32 = v37;
  v30[2] = v39;
  v30[3] = v32;
  v30[4] = v16;
  v33 = (char *)v30 + v28;
  v12 = v31;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v33, v27, v26);
  sub_1A9116174((uint64_t)v5, (uint64_t)v30 + v29, type metadata accessor for PlaybackIntent);
  aBlock[4] = (uint64_t)sub_1A920157C;
  aBlock[5] = (uint64_t)v30;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A908A91C;
  aBlock[3] = (uint64_t)&block_descriptor_25;
  v34 = _Block_copy(aBlock);
  v35 = v12;
  swift_release();
  objc_msgSend(v35, sel_performBlock_, v34);
  _Block_release(v34);
LABEL_14:

}

uint64_t sub_1A91EDCB0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  _QWORD v24[2];

  v24[0] = a5;
  v24[1] = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8870);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v24 - v10;
  v12 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (void *)sub_1A93F8010();
  v20 = objc_msgSend(a1, sel_episodeForUuid_, v19);

  if (v20)
  {
    v21 = v20;
    sub_1A927EC28(v21, (uint64_t)v15);
    sub_1A9064630((uint64_t)v15, (uint64_t)v11, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    swift_storeEnumTagMultiPayload();
    sub_1A9062170((uint64_t)v11, (uint64_t)v8, &qword_1EEAB8870);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
      sub_1A93F8418();
    }
    else
    {
      sub_1A91F5D6C((uint64_t)v8, (uint64_t)v18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
      sub_1A93F8424();
    }

    sub_1A905FD54((uint64_t)v11, &qword_1EEAB8870);
    return sub_1A9064714((uint64_t)v15, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  }
  else
  {
    v22 = type metadata accessor for PlaybackIntent(0);
    sub_1A9062170(v24[0] + *(int *)(v22 + 24), (uint64_t)v18, &qword_1ED2AAF68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
    return sub_1A93F8424();
  }
}

uint64_t PlaybackIntent.withOptions(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t *v38;
  _BYTE v39[12];
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v58 = a1;
  v4 = sub_1A93F73E0();
  v59 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  MEMORY[0x1E0C80A78](v4);
  v57 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v39[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(_QWORD *)v2;
  v9 = *(_QWORD *)(v2 + 8);
  v11 = *(_QWORD *)(v2 + 24);
  v41 = *(_QWORD *)(v2 + 16);
  v12 = v41;
  v42 = v10;
  v45 = v11;
  v46 = v9;
  v14 = *(_QWORD *)(v2 + 40);
  v13 = *(_QWORD *)(v2 + 48);
  v15 = *(_QWORD *)(v2 + 56);
  v16 = *(_QWORD *)(v2 + 72);
  v50 = *(_QWORD *)(v2 + 64);
  v51 = v13;
  v53 = v16;
  v54 = v14;
  v17 = *(_QWORD *)(v2 + 80);
  v18 = *(_QWORD *)(v2 + 88);
  v19 = *(_QWORD *)(v2 + 96);
  v61 = v15;
  v62 = v18;
  v52 = v19;
  v48 = *(_QWORD *)(v2 + 104);
  v49 = v17;
  v47 = *(_QWORD *)(v2 + 112);
  LODWORD(v18) = *(unsigned __int16 *)(v2 + 120);
  v43 = *(unsigned __int8 *)(v2 + 122);
  v44 = v18;
  v55 = v18 | (v43 << 16);
  v20 = *(_BYTE *)(v2 + 32);
  v40 = v20;
  v21 = type metadata accessor for PlaybackIntent(0);
  v22 = *(int *)(v21 + 24);
  v56 = v21;
  sub_1A9062170(v2 + v22, (uint64_t)v8, &qword_1ED2AAF68);
  *(_QWORD *)a2 = v10;
  v23 = v46;
  *(_QWORD *)(a2 + 8) = v46;
  *(_QWORD *)(a2 + 16) = v12;
  v24 = v45;
  *(_QWORD *)(a2 + 24) = v45;
  *(_BYTE *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 40) = v14;
  v25 = v50;
  v26 = v51;
  v27 = v61;
  *(_QWORD *)(a2 + 48) = v51;
  *(_QWORD *)(a2 + 56) = v27;
  *(_QWORD *)(a2 + 64) = v25;
  *(_QWORD *)(a2 + 72) = v16;
  v28 = v49;
  v29 = v62;
  *(_QWORD *)(a2 + 80) = v49;
  *(_QWORD *)(a2 + 88) = v29;
  *(_QWORD *)(a2 + 96) = v19;
  v30 = v47;
  LOBYTE(v19) = v48;
  *(_QWORD *)(a2 + 104) = v48;
  *(_QWORD *)(a2 + 112) = v30;
  *(_BYTE *)(a2 + 122) = v43;
  *(_WORD *)(a2 + 120) = v44;
  sub_1A9062170((uint64_t)v8, a2 + *(int *)(v21 + 24), &qword_1ED2AAF68);
  sub_1A912C880(v42, v23, v41, v24, v40);
  sub_1A912C8E4(v54, v26, v61, v25, v53, v28, v62, v52, v19, v30, v55);
  v31 = v58;
  swift_bridgeObjectRetain();
  v32 = v57;
  sub_1A93F73D4();
  v33 = sub_1A93F73A4();
  v35 = v34;
  sub_1A905FD54((uint64_t)v8, &qword_1ED2AAF68);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v59 + 8))(v32, v60);
  v37 = v56;
  v38 = (uint64_t *)(a2 + *(int *)(v56 + 32));
  *v38 = v33;
  v38[1] = v35;
  *(_QWORD *)(a2 + *(int *)(v37 + 28)) = v31;
  return result;
}

uint64_t PlaybackIntent.addingOptions(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t *v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v3 = sub_1A93F73E0();
  v53 = *(_QWORD *)(v3 - 8);
  v54 = v3;
  MEMORY[0x1E0C80A78](v3);
  v52 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v5);
  v55 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for PlaybackIntent(0);
  v7 = *(_QWORD *)(v1 + *(int *)(v59 + 28));
  swift_bridgeObjectRetain();
  v8 = swift_bridgeObjectRetain();
  v51 = sub_1A91EE578(v8, v7);
  v9 = *(_QWORD *)(v1 + 8);
  v41 = *(_QWORD *)v1;
  v10 = v41;
  v42 = v9;
  v40 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  v12 = *(_QWORD *)(v1 + 40);
  v57 = *(_QWORD *)(v1 + 48);
  v58 = v11;
  v13 = *(_QWORD *)(v1 + 56);
  v56 = *(_QWORD *)(v1 + 64);
  v14 = *(_QWORD *)(v1 + 80);
  v48 = *(_QWORD *)(v1 + 72);
  v15 = v48;
  v49 = v13;
  v16 = *(_QWORD *)(v1 + 88);
  v46 = v14;
  v47 = v16;
  v17 = *(_QWORD *)(v1 + 96);
  v44 = *(_QWORD *)(v1 + 104);
  v45 = v17;
  v43 = *(_QWORD *)(v1 + 112);
  v18 = *(unsigned __int8 *)(v1 + 122);
  v38 = *(unsigned __int16 *)(v1 + 120);
  v50 = v38 | (v18 << 16);
  v19 = v1 + *(int *)(v59 + 24);
  v20 = *(_BYTE *)(v1 + 32);
  v39 = v20;
  v21 = v55;
  sub_1A9062170(v19, v55, &qword_1ED2AAF68);
  *(_QWORD *)a1 = v10;
  v22 = v42;
  v23 = v40;
  *(_QWORD *)(a1 + 8) = v42;
  *(_QWORD *)(a1 + 16) = v23;
  *(_QWORD *)(a1 + 24) = v58;
  *(_BYTE *)(a1 + 32) = v20;
  v24 = v12;
  v25 = v57;
  *(_QWORD *)(a1 + 40) = v12;
  *(_QWORD *)(a1 + 48) = v25;
  v26 = v56;
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v26;
  *(_QWORD *)(a1 + 72) = v15;
  v27 = v46;
  *(_QWORD *)(a1 + 80) = v46;
  *(_QWORD *)(a1 + 88) = v16;
  v28 = v44;
  v29 = v45;
  *(_QWORD *)(a1 + 96) = v45;
  *(_QWORD *)(a1 + 104) = v28;
  v30 = v43;
  *(_QWORD *)(a1 + 112) = v43;
  *(_BYTE *)(a1 + 122) = v18;
  *(_WORD *)(a1 + 120) = v38;
  v31 = v59;
  sub_1A9062170(v21, a1 + *(int *)(v59 + 24), &qword_1ED2AAF68);
  sub_1A912C880(v41, v22, v23, v58, v39);
  sub_1A912C8E4(v24, v57, v49, v56, v48, v27, v47, v29, v28, v30, v50);
  v32 = v52;
  sub_1A93F73D4();
  v33 = sub_1A93F73A4();
  v35 = v34;
  sub_1A905FD54(v55, &qword_1ED2AAF68);
  result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v32, v54);
  v37 = (uint64_t *)(a1 + *(int *)(v31 + 32));
  *v37 = v33;
  v37[1] = v35;
  *(_QWORD *)(a1 + *(int *)(v31 + 28)) = v51;
  return result;
}

uint64_t sub_1A91EE3FC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1A9091D1C(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A91EE578(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  _BYTE v14[16];
  uint64_t v15;

  v2 = result;
  v3 = 0;
  v15 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_1A9328520((uint64_t)v14, *(_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v10), *(_BYTE *)(*(_QWORD *)(v2 + 48) + 16 * v10 + 8));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t PlaybackIntent.withoutOption(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t inited;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA2E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_QWORD *)(inited + 32) = v3;
  *(_BYTE *)(inited + 40) = v4;
  PlaybackIntent.withoutOptions(_:)(inited, a2);
  return swift_setDeallocating();
}

uint64_t PlaybackIntent.withoutOptions(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t *v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v5 = sub_1A93F73E0();
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v7);
  v55 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for PlaybackIntent(0);
  v9 = *(_QWORD *)(v2 + *(int *)(v59 + 28));
  swift_bridgeObjectRetain();
  v51 = sub_1A91F3930(a1, v9);
  v10 = *(_QWORD *)(v2 + 8);
  v41 = *(_QWORD *)v2;
  v11 = v41;
  v42 = v10;
  v40 = *(_QWORD *)(v2 + 16);
  v12 = *(_QWORD *)(v2 + 24);
  v13 = *(_QWORD *)(v2 + 40);
  v57 = *(_QWORD *)(v2 + 48);
  v58 = v12;
  v14 = *(_QWORD *)(v2 + 56);
  v56 = *(_QWORD *)(v2 + 64);
  v15 = *(_QWORD *)(v2 + 80);
  v48 = *(_QWORD *)(v2 + 72);
  v16 = v48;
  v49 = v14;
  v17 = *(_QWORD *)(v2 + 88);
  v46 = v15;
  v47 = v17;
  v18 = *(_QWORD *)(v2 + 96);
  v44 = *(_QWORD *)(v2 + 104);
  v45 = v18;
  v43 = *(_QWORD *)(v2 + 112);
  v19 = *(unsigned __int8 *)(v2 + 122);
  v38 = *(unsigned __int16 *)(v2 + 120);
  v50 = v38 | (v19 << 16);
  v20 = v2 + *(int *)(v59 + 24);
  LOBYTE(a1) = *(_BYTE *)(v2 + 32);
  v39 = a1;
  v21 = v55;
  sub_1A9062170(v20, v55, &qword_1ED2AAF68);
  *(_QWORD *)a2 = v11;
  v22 = v42;
  v23 = v40;
  *(_QWORD *)(a2 + 8) = v42;
  *(_QWORD *)(a2 + 16) = v23;
  *(_QWORD *)(a2 + 24) = v58;
  *(_BYTE *)(a2 + 32) = a1;
  v24 = v13;
  v25 = v57;
  *(_QWORD *)(a2 + 40) = v13;
  *(_QWORD *)(a2 + 48) = v25;
  v26 = v56;
  *(_QWORD *)(a2 + 56) = v14;
  *(_QWORD *)(a2 + 64) = v26;
  *(_QWORD *)(a2 + 72) = v16;
  v27 = v46;
  *(_QWORD *)(a2 + 80) = v46;
  *(_QWORD *)(a2 + 88) = v17;
  v28 = v44;
  v29 = v45;
  *(_QWORD *)(a2 + 96) = v45;
  *(_QWORD *)(a2 + 104) = v28;
  v30 = v43;
  *(_QWORD *)(a2 + 112) = v43;
  *(_BYTE *)(a2 + 122) = v19;
  *(_WORD *)(a2 + 120) = v38;
  v31 = v59;
  sub_1A9062170(v21, a2 + *(int *)(v59 + 24), &qword_1ED2AAF68);
  sub_1A912C880(v41, v22, v23, v58, v39);
  sub_1A912C8E4(v24, v57, v49, v56, v48, v27, v47, v29, v28, v30, v50);
  v32 = v52;
  sub_1A93F73D4();
  v33 = sub_1A93F73A4();
  v35 = v34;
  sub_1A905FD54(v55, &qword_1ED2AAF68);
  result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v32, v54);
  v37 = (uint64_t *)(a2 + *(int *)(v31 + 32));
  *v37 = v33;
  v37[1] = v35;
  *(_QWORD *)(a2 + *(int *)(v31 + 28)) = v51;
  return result;
}

uint64_t PlaybackIntent.initialItemPlayheadOverride.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for PlaybackIntent(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1A91EAA64(v0);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + 16))
    v2 = *(_QWORD *)(v1 + 32);
  else
    v2 = 0;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1A91EEA54()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A91EEA78 + 4 * byte_1A9410650[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1A91EEA78()
{
  return 0x747465537473696CLL;
}

uint64_t sub_1A91EEA98()
{
  return 0x496C616974696E69;
}

uint64_t sub_1A91EEAB8()
{
  return 0x736E6F6974706FLL;
}

unint64_t sub_1A91EEAD0()
{
  return 0xD000000000000012;
}

uint64_t sub_1A91EEAEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9200F64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A91EEB10()
{
  sub_1A91F5BD4();
  return sub_1A93F945C();
}

uint64_t sub_1A91EEB38()
{
  sub_1A91F5BD4();
  return sub_1A93F9468();
}

uint64_t PlaybackIntent.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  __int128 v10;
  __int16 v11;
  char v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int16 v22;
  char v23;
  char v24;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA2F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91F5BD4();
  sub_1A93F93D8();
  v9 = *((_BYTE *)v3 + 32);
  v10 = v3[1];
  v17 = *v3;
  v18 = v10;
  LOBYTE(v19) = v9;
  v24 = 0;
  sub_1A91F5C18();
  sub_1A93F9030();
  if (!v2)
  {
    v11 = *((_WORD *)v3 + 60);
    v12 = *((_BYTE *)v3 + 122);
    v13 = *(__int128 *)((char *)v3 + 56);
    v17 = *(__int128 *)((char *)v3 + 40);
    v18 = v13;
    v14 = *(__int128 *)((char *)v3 + 88);
    v19 = *(__int128 *)((char *)v3 + 72);
    v20 = v14;
    v21 = *(__int128 *)((char *)v3 + 104);
    v23 = v12;
    v22 = v11;
    v24 = 1;
    sub_1A91F5C5C();
    sub_1A93F8FE8();
    v15 = type metadata accessor for PlaybackIntent(0);
    LOBYTE(v17) = 2;
    type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    sub_1A9066CA8(&qword_1EEABA310, type metadata accessor for PodcastsMediaLibrary.MediaItem, (uint64_t)&protocol conformance descriptor for PodcastsMediaLibrary.MediaItem);
    sub_1A93F8FE8();
    *(_QWORD *)&v17 = *(_QWORD *)((char *)v3 + *(int *)(v15 + 28));
    v24 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA318);
    sub_1A91F5DB4(&qword_1EEABA320, (uint64_t (*)(void))sub_1A91F5CA0, MEMORY[0x1E0DEB3B8]);
    sub_1A93F9030();
    LOBYTE(v17) = 4;
    sub_1A93F9000();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PlaybackIntent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int16 v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int16 v39;
  char v40;
  char v41;

  v30 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA330);
  MEMORY[0x1E0C80A78](v32);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PlaybackIntent(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A91F5BD4();
  v31 = v7;
  v11 = (uint64_t)v33;
  sub_1A93F93C0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v29 = v5;
  v33 = a1;
  v41 = 0;
  sub_1A91F5CE4();
  v12 = v31;
  v13 = v32;
  sub_1A93F8F7C();
  v14 = v36;
  v15 = v35;
  *(_OWORD *)v10 = v34;
  *((_OWORD *)v10 + 1) = v15;
  v10[32] = v14;
  v41 = 1;
  sub_1A91F5D28();
  sub_1A93F8F34();
  v16 = v39;
  v17 = v40;
  v18 = v35;
  *(_OWORD *)(v10 + 40) = v34;
  *(_OWORD *)(v10 + 56) = v18;
  v19 = v37;
  *(_OWORD *)(v10 + 72) = v36;
  *(_OWORD *)(v10 + 88) = v19;
  *(_OWORD *)(v10 + 104) = v38;
  v10[122] = v17;
  *((_WORD *)v10 + 60) = v16;
  type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  LOBYTE(v34) = 2;
  sub_1A9066CA8(&qword_1EEABA348, type metadata accessor for PodcastsMediaLibrary.MediaItem, (uint64_t)&protocol conformance descriptor for PodcastsMediaLibrary.MediaItem);
  v20 = (uint64_t)v29;
  sub_1A93F8F34();
  v21 = v20;
  v22 = v8;
  sub_1A91F5D6C(v21, (uint64_t)&v10[*(int *)(v8 + 24)]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA318);
  v41 = 3;
  sub_1A91F5DB4(&qword_1EEABA350, (uint64_t (*)(void))sub_1A91F5E1C, MEMORY[0x1E0DEB3D8]);
  sub_1A93F8F7C();
  *(_QWORD *)&v10[*(int *)(v8 + 28)] = v34;
  LOBYTE(v34) = 4;
  v23 = sub_1A93F8F4C();
  v25 = v24;
  MEMORY[8](v12, v13);
  v26 = (uint64_t *)&v10[*(int *)(v22 + 32)];
  *v26 = v23;
  v26[1] = v25;
  sub_1A9064630((uint64_t)v10, v30, type metadata accessor for PlaybackIntent);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  return sub_1A9064714((uint64_t)v10, type metadata accessor for PlaybackIntent);
}

uint64_t sub_1A91EF240@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PlaybackIntent.init(from:)(a1, a2);
}

uint64_t sub_1A91EF254(_QWORD *a1)
{
  return PlaybackIntent.encode(to:)(a1);
}

uint64_t sub_1A91EF26C()
{
  uint64_t result;

  result = sub_1A9134218((uint64_t)&unk_1E54D7160);
  qword_1EEABA220 = result;
  return result;
}

uint64_t static PlaybackIntent.Option.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_1A91EF2C0 + 4 * byte_1A9410655[*(_QWORD *)a1]))();
  else
    return (*(_BYTE *)(a2 + 8) & 1) == 0;
}

void sub_1A91EF2F0(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 3)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1A91EF2D4);
  JUMPOUT(0x1A91EF2E8);
}

void sub_1A91EF300(char a1@<W8>)
{
  unint64_t v1;

  if (v1 <= 3)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1A91EF2D4);
  JUMPOUT(0x1A91EF2E8);
}

void sub_1A91EF310(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 1)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1A91EF2D4);
  JUMPOUT(0x1A91EF2E8);
}

uint64_t PlaybackIntent.Option.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t PlaybackIntent.Option.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A91EF3CC()
{
  return sub_1A93F92E8();
}

uint64_t sub_1A91EF414()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A91EF470(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_1A91EF4A0 + 4 * byte_1A941065A[*(_QWORD *)a1]))();
  else
    return (*(_BYTE *)(a2 + 8) & 1) == 0;
}

void sub_1A91EF4D8(int a1@<W8>)
{
  unint64_t v1;

  if (v1 <= 3)
    a1 = 0;
  if (a1 != 1)
    JUMPOUT(0x1A91EF4ACLL);
  JUMPOUT(0x1A91EF4D0);
}

uint64_t PlaybackIntent.genericTrackIdentifierQueue(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  int64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unsigned __int8 v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t *v166;
  _QWORD *v167;
  char *v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  __int128 v174;
  uint64_t v175;
  char v176;
  __int128 v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unsigned __int8 v185;
  __int128 v186;
  uint64_t v187;
  char v188;

  v2 = v1;
  v4 = type metadata accessor for PlaybackIntent(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA360);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v151 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t)&v151 - v15;
  v173 = sub_1A93F6EAC();
  v172 = *(_QWORD *)(v173 - 8);
  MEMORY[0x1E0C80A78](v173);
  v169 = (char *)&v151 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v165 = (uint64_t)&v151 - v19;
  MEMORY[0x1E0C80A78](v20);
  v170 = (char *)&v151 - v21;
  MEMORY[0x1E0C80A78](v22);
  v160 = (char *)&v151 - v23;
  MEMORY[0x1E0C80A78](v24);
  v166 = (uint64_t *)((char *)&v151 - v25);
  MEMORY[0x1E0C80A78](v26);
  v163 = (uint64_t)&v151 - v27;
  MEMORY[0x1E0C80A78](v28);
  v162 = (uint64_t)&v151 - v29;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v151 - v31;
  v159 = sub_1A93F6F60();
  v158 = *(_QWORD *)(v159 - 8);
  MEMORY[0x1E0C80A78](v159);
  v167 = (uint64_t *)((char *)&v151 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v34);
  v168 = (char *)&v151 - v35;
  MEMORY[0x1E0C80A78](v36);
  v164 = (uint64_t)&v151 - v37;
  MEMORY[0x1E0C80A78](v38);
  v157 = (char *)&v151 - v39;
  v40 = sub_1A91132C8(MEMORY[0x1E0DEE9D8]);
  v155 = v40;
  v161 = a1;
  v41 = *(void **)(a1 + 40);
  v171 = (uint64_t)v6;
  if (v41)
  {
    v42 = v41;
    v43 = objc_msgSend(v42, sel_ams_DSID);
    if (v43)
    {
      v44 = v43;
      v45 = objc_msgSend(v43, sel_stringValue);

      v156 = sub_1A93F8040();
      v46 = v2;
      v48 = v47;

      v49 = v32;
      v50 = v155;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v181 = v50;
      v32 = v49;
      v52 = v48;
      v2 = v46;
      sub_1A930E7C8(v156, v52, 16, isUniquelyReferenced_nonNull_native);
      v155 = v181;

      v40 = swift_bridgeObjectRelease();
    }
    else
    {

    }
  }
  v54 = *(_QWORD *)v2;
  v53 = *(_QWORD *)(v2 + 8);
  v56 = *(_QWORD *)(v2 + 16);
  v55 = *(_QWORD *)(v2 + 24);
  switch(*(_BYTE *)(v2 + 32))
  {
    case 0:
      v181 = *(_QWORD *)v2;
      sub_1A915997C();
      v57 = sub_1A93F8B38();
      v59 = v58;
      v60 = v155;
      v61 = swift_isUniquelyReferenced_nonNull_native();
      v181 = v60;
      sub_1A930E7C8(v57, v59, 2, v61);
      v62 = v181;
      swift_bridgeObjectRelease();
      v177 = xmmword_1A9405520;
      v167 = &v178;
      v63 = swift_bridgeObjectRetain();
      v64 = sub_1A9174C98(v63);
      v168 = (char *)v62;
      swift_bridgeObjectRelease();
      v178 = v64;
      v179 = 1;
      swift_bridgeObjectRetain_n();
      sub_1A93F6F54();
      sub_1A93F6F24();
      sub_1A93F6EF4();
      v65 = 1 << *(_BYTE *)(v64 + 32);
      v66 = -1;
      if (v65 < 64)
        v66 = ~(-1 << v65);
      v67 = v66 & *(_QWORD *)(v64 + 64);
      v171 = (unint64_t)(v65 + 63) >> 6;
      swift_bridgeObjectRetain_n();
      v170 = (char *)MEMORY[0x1E0DEE9D8];
      v169 = "okmarkState";
      if (v67)
      {
        v68 = __clz(__rbit64(v67));
        goto LABEL_27;
      }
      if (v171 <= 1)
        goto LABEL_66;
      v69 = *(_QWORD *)(v64 + 72);
      v16 = 1;
      if (v69)
        goto LABEL_26;
      v16 = 2;
      if (v171 <= 2)
        goto LABEL_66;
      v69 = *(_QWORD *)(v64 + 80);
      if (v69)
        goto LABEL_26;
      v16 = 3;
      if (v171 <= 3)
        goto LABEL_66;
      v69 = *(_QWORD *)(v64 + 88);
      if (v69)
        goto LABEL_26;
      v16 = 4;
      if (v171 <= 4)
        goto LABEL_66;
      v69 = *(_QWORD *)(v64 + 96);
      if (v69)
        goto LABEL_26;
      v16 = 5;
      if (v171 <= 5)
        goto LABEL_66;
      v69 = *(_QWORD *)(v64 + 104);
      if (v69)
        goto LABEL_26;
      v70 = 6;
      if (v171 > 6)
      {
        v69 = *(_QWORD *)(v64 + 112);
        if (v69)
        {
          v16 = 6;
LABEL_26:
          v68 = __clz(__rbit64(v69)) + (v16 << 6);
LABEL_27:
          __asm { BR              X8 }
        }
        while (1)
        {
          v16 = v70 + 1;
          if (__OFADD__(v70, 1))
            break;
          if (v16 >= v171)
            goto LABEL_66;
          v69 = *(_QWORD *)(v64 + 64 + 8 * v16);
          ++v70;
          if (v69)
            goto LABEL_26;
        }
        __break(1u);
        goto LABEL_139;
      }
LABEL_66:
      swift_release();
      swift_bridgeObjectRelease();
      v115 = v164;
      sub_1A93F6ED0();
      v13 = (char *)sub_1A93F6F3C();
      v54 = v116;
      (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v115, v159);
      swift_bridgeObjectRelease_n();
      v16 = MEMORY[0x1E0DEE9D8];
      if (v54)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
LABEL_68:
          v118 = *(_QWORD *)(v16 + 16);
          v117 = *(_QWORD *)(v16 + 24);
          if (v118 >= v117 >> 1)
            v16 = (uint64_t)sub_1A907ECFC((_QWORD *)(v117 > 1), v118 + 1, 1, (_QWORD *)v16);
          *(_QWORD *)(v16 + 16) = v118 + 1;
          v119 = v16 + 16 * v118;
          *(_QWORD *)(v119 + 32) = v13;
          *(_QWORD *)(v119 + 40) = v54;
          goto LABEL_100;
        }
LABEL_139:
        v16 = (uint64_t)sub_1A907ECFC(0, *(_QWORD *)(v16 + 16) + 1, 1, (_QWORD *)v16);
        goto LABEL_68;
      }
      goto LABEL_100;
    case 1:
      MEMORY[0x1E0C80A78](v40);
      *(&v151 - 2) = v161;
      v72 = v71;
      v74 = v73;
      swift_bridgeObjectRetain();
      v16 = (uint64_t)sub_1A9151928((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1A91F5E60, (uint64_t)(&v151 - 4), v54);
      swift_bridgeObjectRelease();
      v75 = v54;
      v76 = v74;
      v77 = v56;
      v78 = v72;
      v79 = 1;
      goto LABEL_104;
    case 7:
      v157 = *(char **)(v54 + 16);
      if (!v157)
      {
        v134 = v56;
        v135 = v55;
        v133 = v53;
        swift_bridgeObjectRetain();
        v16 = MEMORY[0x1E0DEE9D8];
        goto LABEL_103;
      }
      v151 = v53;
      v153 = v56;
      v152 = v55;
      sub_1A912C880(v54, v53, v56, v55, 7u);
      v156 = v54 + 32;
      v154 = v54;
      swift_bridgeObjectRetain();
      v80 = 0;
      v16 = MEMORY[0x1E0DEE9D8];
      v169 = "okmarkState";
      do
      {
        v167 = (_QWORD *)v16;
        v81 = v156 + 40 * (_QWORD)v80;
        v82 = *(_QWORD *)v81;
        v83 = *(_QWORD *)(v81 + 8);
        v84 = *(_QWORD *)(v81 + 16);
        v85 = *(_QWORD *)(v81 + 24);
        v86 = *(unsigned __int8 *)(v81 + 32);
        v166 = (uint64_t *)(v80 + 1);
        v181 = v82;
        v182 = v83;
        v183 = v84;
        v184 = v85;
        v185 = v86;
        v165 = v82;
        v164 = v83;
        v163 = v84;
        v162 = v85;
        LODWORD(v161) = v86;
        sub_1A912AC00(v82, v83, v84, v85, v86);
        UniversalEpisodeIdentifier.urlTrackIdentifier()();
        v87 = v180;
        sub_1A93F6F54();
        sub_1A93F6F24();
        sub_1A93F6EF4();
        v88 = 1 << *(_BYTE *)(v87 + 32);
        if (v88 < 64)
          v89 = ~(-1 << v88);
        else
          v89 = -1;
        v90 = v89 & *(_QWORD *)(v87 + 64);
        v91 = (unint64_t)(v88 + 63) >> 6;
        swift_bridgeObjectRetain_n();
        v171 = MEMORY[0x1E0DEE9D8];
        if (v90)
        {
          v92 = __clz(__rbit64(v90));
          goto LABEL_55;
        }
        if (v91 > 1)
        {
          v93 = *(_QWORD *)(v87 + 72);
          v94 = 1;
          if (v93)
            goto LABEL_54;
          v94 = 2;
          if (v91 > 2)
          {
            v93 = *(_QWORD *)(v87 + 80);
            if (v93)
              goto LABEL_54;
            v94 = 3;
            if (v91 > 3)
            {
              v93 = *(_QWORD *)(v87 + 88);
              if (v93)
                goto LABEL_54;
              v94 = 4;
              if (v91 > 4)
              {
                v93 = *(_QWORD *)(v87 + 96);
                if (v93)
                  goto LABEL_54;
                v94 = 5;
                if (v91 > 5)
                {
                  v93 = *(_QWORD *)(v87 + 104);
                  if (v93)
                    goto LABEL_54;
                  v95 = 6;
                  if (v91 > 6)
                  {
                    v93 = *(_QWORD *)(v87 + 112);
                    if (v93)
                    {
                      v94 = 6;
LABEL_54:
                      v92 = __clz(__rbit64(v93)) + (v94 << 6);
LABEL_55:
                      __asm { BR              X8 }
                    }
                    while (1)
                    {
                      v94 = v95 + 1;
                      if (__OFADD__(v95, 1))
                        break;
                      if (v94 >= v91)
                        goto LABEL_56;
                      v93 = *(_QWORD *)(v87 + 64 + 8 * v94);
                      ++v95;
                      if (v93)
                        goto LABEL_54;
                    }
                    __break(1u);
                    __break(1u);
LABEL_135:
                    swift_once();
LABEL_64:
                    v103 = sub_1A93F7698();
                    __swift_project_value_buffer(v103, (uint64_t)qword_1ED2A8780);
                    v104 = v171;
                    sub_1A9064630(v2, v171, type metadata accessor for PlaybackIntent);
                    v105 = sub_1A93F7674();
                    v106 = sub_1A93F879C();
                    if (os_log_type_enabled(v105, v106))
                    {
                      v107 = (uint8_t *)swift_slowAlloc();
                      v108 = swift_slowAlloc();
                      *(_DWORD *)v107 = 136315138;
                      v180 = v108;
                      v109 = *(_QWORD *)(v104 + 8);
                      v110 = *(_QWORD *)(v104 + 16);
                      v111 = *(_QWORD *)(v104 + 24);
                      v112 = *(_BYTE *)(v104 + 32);
                      v181 = *(_QWORD *)v104;
                      v182 = v109;
                      v183 = v110;
                      v184 = v111;
                      v185 = v112;
                      sub_1A912C880(v181, v109, v110, v111, v112);
                      v113 = sub_1A93F8094();
                      v181 = sub_1A906436C(v113, v114, &v180);
                      sub_1A93F8AA8();
                      swift_bridgeObjectRelease();
                      sub_1A9064714(v104, type metadata accessor for PlaybackIntent);
                      _os_log_impl(&dword_1A904E000, v105, v106, "Unable to create remote identifier from: %s", v107, 0xCu);
                      swift_arrayDestroy();
                      MEMORY[0x1AF41411C](v108, -1, -1);
                      MEMORY[0x1AF41411C](v107, -1, -1);
                    }
                    else
                    {
                      sub_1A9064714(v104, type metadata accessor for PlaybackIntent);
                    }

                    v186 = xmmword_1A9405520;
                    v166 = &v187;
                    v120 = swift_bridgeObjectRetain();
                    v121 = sub_1A9174C98(v120);
                    swift_bridgeObjectRelease();
                    v187 = v121;
                    v188 = 0;
                    swift_bridgeObjectRetain_n();
                    sub_1A93F6F54();
                    sub_1A93F6F24();
                    sub_1A93F6EF4();
                    v122 = 1 << *(_BYTE *)(v121 + 32);
                    v123 = -1;
                    if (v122 < 64)
                      v123 = ~(-1 << v122);
                    v124 = v123 & *(_QWORD *)(v121 + 64);
                    v171 = (unint64_t)(v122 + 63) >> 6;
                    swift_bridgeObjectRetain_n();
                    v170 = (char *)MEMORY[0x1E0DEE9D8];
                    v168 = "okmarkState";
                    if (v124)
                    {
                      v125 = __clz(__rbit64(v124));
                      goto LABEL_94;
                    }
                    if (v171 > 1)
                    {
                      v126 = *(_QWORD *)(v121 + 72);
                      v16 = 1;
                      if (v126)
                        goto LABEL_93;
                      v16 = 2;
                      if (v171 > 2)
                      {
                        v126 = *(_QWORD *)(v121 + 80);
                        if (v126)
                          goto LABEL_93;
                        v16 = 3;
                        if (v171 > 3)
                        {
                          v126 = *(_QWORD *)(v121 + 88);
                          if (v126)
                            goto LABEL_93;
                          v16 = 4;
                          if (v171 > 4)
                          {
                            v126 = *(_QWORD *)(v121 + 96);
                            if (v126)
                              goto LABEL_93;
                            v16 = 5;
                            if (v171 > 5)
                            {
                              v126 = *(_QWORD *)(v121 + 104);
                              if (!v126)
                              {
                                v127 = 6;
                                if (v171 > 6)
                                {
                                  v126 = *(_QWORD *)(v121 + 112);
                                  if (v126)
                                  {
                                    v16 = 6;
                                    goto LABEL_93;
                                  }
                                  while (1)
                                  {
                                    v16 = v127 + 1;
                                    if (__OFADD__(v127, 1))
                                      break;
                                    if (v16 >= v171)
                                      goto LABEL_95;
                                    v126 = *(_QWORD *)(v121 + 64 + 8 * v16);
                                    ++v127;
                                    if (v126)
                                      goto LABEL_93;
                                  }
                                  __break(1u);
                                  goto LABEL_137;
                                }
                                goto LABEL_95;
                              }
LABEL_93:
                              v125 = __clz(__rbit64(v126)) + (v16 << 6);
LABEL_94:
                              __asm { BR              X8 }
                            }
                          }
                        }
                      }
                    }
LABEL_95:
                    swift_release();
                    swift_bridgeObjectRelease();
                    v128 = v167;
                    sub_1A93F6ED0();
                    v9 = (char *)sub_1A93F6F3C();
                    v104 = v129;
                    (*(void (**)(_QWORD *, uint64_t))(v158 + 8))(v128, v159);
                    swift_bridgeObjectRelease_n();
                    v16 = MEMORY[0x1E0DEE9D8];
                    if (v104)
                    {
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                      {
LABEL_97:
                        v131 = *(_QWORD *)(v16 + 16);
                        v130 = *(_QWORD *)(v16 + 24);
                        if (v131 >= v130 >> 1)
                          v16 = (uint64_t)sub_1A907ECFC((_QWORD *)(v130 > 1), v131 + 1, 1, (_QWORD *)v16);
                        *(_QWORD *)(v16 + 16) = v131 + 1;
                        v132 = v16 + 16 * v131;
                        *(_QWORD *)(v132 + 32) = v9;
                        *(_QWORD *)(v132 + 40) = v104;
                        goto LABEL_100;
                      }
LABEL_137:
                      v16 = (uint64_t)sub_1A907ECFC(0, *(_QWORD *)(v16 + 16) + 1, 1, (_QWORD *)v16);
                      goto LABEL_97;
                    }
LABEL_100:
                    swift_arrayDestroy();
                    swift_bridgeObjectRelease();
                    return v16;
                  }
                }
              }
            }
          }
        }
LABEL_56:
        swift_release();
        swift_bridgeObjectRelease();
        v96 = v168;
        sub_1A93F6ED0();
        v97 = sub_1A93F6F3C();
        v99 = v98;
        (*(void (**)(char *, uint64_t))(v158 + 8))(v96, v159);
        swift_bridgeObjectRelease();
        sub_1A912C470(v165, v164, v163, v162, v161);
        if (v99)
        {
          v16 = (uint64_t)v167;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v16 = (uint64_t)sub_1A907ECFC(0, *(_QWORD *)(v16 + 16) + 1, 1, (_QWORD *)v16);
          v101 = *(_QWORD *)(v16 + 16);
          v100 = *(_QWORD *)(v16 + 24);
          if (v101 >= v100 >> 1)
            v16 = (uint64_t)sub_1A907ECFC((_QWORD *)(v100 > 1), v101 + 1, 1, (_QWORD *)v16);
          *(_QWORD *)(v16 + 16) = v101 + 1;
          v102 = v16 + 16 * v101;
          *(_QWORD *)(v102 + 32) = v97;
          *(_QWORD *)(v102 + 40) = v99;
        }
        else
        {
          v16 = (uint64_t)v167;
        }
        v80 = (char *)v166;
      }
      while (v166 != (uint64_t *)v157);
      v54 = v154;
      v133 = v151;
      v134 = v153;
      v135 = v152;
      sub_1A912C6B4(v154, v151, v153, v152, 7u);
LABEL_103:
      swift_bridgeObjectRelease();
      v75 = v54;
      v76 = v133;
      v77 = v134;
      v78 = v135;
      v79 = 7;
LABEL_104:
      sub_1A912C6B4(v75, v76, v77, v78, v79);
      return v16;
    case 8:
      if (v53 | v54 | v56 | v55)
        goto LABEL_63;
      v168 = v32;
      v174 = xmmword_1A9405520;
      v167 = &v175;
      v137 = swift_bridgeObjectRetain();
      v138 = sub_1A9174C98(v137);
      swift_bridgeObjectRelease();
      v175 = v138;
      v176 = 0;
      swift_bridgeObjectRetain_n();
      sub_1A93F6F54();
      sub_1A93F6F24();
      sub_1A93F6EF4();
      v139 = 1 << *(_BYTE *)(v138 + 32);
      v140 = -1;
      if (v139 < 64)
        v140 = ~(-1 << v139);
      v141 = v140 & *(_QWORD *)(v138 + 64);
      v171 = (unint64_t)(v139 + 63) >> 6;
      swift_bridgeObjectRetain_n();
      v170 = (char *)MEMORY[0x1E0DEE9D8];
      v169 = "okmarkState";
      if (v141)
      {
        v142 = __clz(__rbit64(v141));
        goto LABEL_127;
      }
      if (v171 <= 1)
        goto LABEL_128;
      v143 = *(_QWORD *)(v138 + 72);
      v144 = 1;
      if (v143)
        goto LABEL_126;
      v144 = 2;
      if (v171 <= 2)
        goto LABEL_128;
      v143 = *(_QWORD *)(v138 + 80);
      if (v143)
        goto LABEL_126;
      v144 = 3;
      if (v171 <= 3)
        goto LABEL_128;
      v143 = *(_QWORD *)(v138 + 88);
      if (v143)
        goto LABEL_126;
      v144 = 4;
      if (v171 <= 4)
        goto LABEL_128;
      v143 = *(_QWORD *)(v138 + 96);
      if (v143)
        goto LABEL_126;
      v144 = 5;
      if (v171 <= 5)
        goto LABEL_128;
      v143 = *(_QWORD *)(v138 + 104);
      if (v143)
        goto LABEL_126;
      v145 = 6;
      if (v171 <= 6)
      {
LABEL_128:
        swift_release();
        swift_bridgeObjectRelease();
        v146 = v157;
        sub_1A93F6ED0();
        v144 = sub_1A93F6F3C();
        v54 = v147;
        (*(void (**)(char *, uint64_t))(v158 + 8))(v146, v159);
        swift_bridgeObjectRelease_n();
        v16 = MEMORY[0x1E0DEE9D8];
        if (!v54)
          goto LABEL_100;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
LABEL_130:
          v149 = *(_QWORD *)(v16 + 16);
          v148 = *(_QWORD *)(v16 + 24);
          if (v149 >= v148 >> 1)
            v16 = (uint64_t)sub_1A907ECFC((_QWORD *)(v148 > 1), v149 + 1, 1, (_QWORD *)v16);
          *(_QWORD *)(v16 + 16) = v149 + 1;
          v150 = v16 + 16 * v149;
          *(_QWORD *)(v150 + 32) = v144;
          *(_QWORD *)(v150 + 40) = v54;
          goto LABEL_100;
        }
      }
      else
      {
        v143 = *(_QWORD *)(v138 + 112);
        if (v143)
        {
          v144 = 6;
LABEL_126:
          v142 = __clz(__rbit64(v143)) + (v144 << 6);
LABEL_127:
          __asm { BR              X8 }
        }
        while (1)
        {
          v144 = v145 + 1;
          if (__OFADD__(v145, 1))
            break;
          if (v144 >= v171)
            goto LABEL_128;
          v143 = *(_QWORD *)(v138 + 64 + 8 * v144);
          ++v145;
          if (v143)
            goto LABEL_126;
        }
        __break(1u);
      }
      v16 = (uint64_t)sub_1A907ECFC(0, *(_QWORD *)(v16 + 16) + 1, 1, (_QWORD *)v16);
      goto LABEL_130;
    default:
LABEL_63:
      if (qword_1ED2A87A0 == -1)
        goto LABEL_64;
      goto LABEL_135;
  }
}

uint64_t sub_1A91F17C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;

  v6 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  sub_1A915997C();
  v9 = sub_1A93F8B38();
  v11 = v10;
  sub_1A9064630(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  URLTrackIdentifier.init(id:playbackContext:)(v9, v11, (uint64_t)v8, (uint64_t)&v18);
  v16 = v18;
  v17 = v19;
  v12 = URLTrackIdentifier.stringValue.getter();
  v14 = v13;
  result = swift_bridgeObjectRelease();
  *a3 = v12;
  a3[1] = v14;
  return result;
}

void sub_1A91F18C8(uint64_t a1)
{
  uint64_t v1;

  sub_1A91ED880(a1, *(_QWORD *)(v1 + 16));
}

uint64_t type metadata accessor for PlaybackIntent.ValidationError(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1EEABA3E8);
}

uint64_t sub_1A91F18E4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A91F1DF8(a1, a2, a3, a4, &qword_1ED2ABD48);
}

void sub_1A91F18F0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v21[4];
  uint64_t v22;

  if (a3)
  {
    v5 = a3;
    if (*(_QWORD *)(a4 + 16) != a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9910);
      v8 = sub_1A93F8C4C();
      if (a2 < 1)
        v9 = 0;
      else
        v9 = *a1;
      v10 = 0;
      while (1)
      {
        if (v9)
        {
          v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v12 = v11 | (v10 << 6);
        }
        else
        {
          v13 = v10 + 1;
          if (__OFADD__(v10, 1))
            goto LABEL_29;
          if (v13 >= a2)
          {
LABEL_27:
            swift_release();
            return;
          }
          v14 = a1[v13];
          ++v10;
          if (!v14)
          {
            v10 = v13 + 1;
            if (v13 + 1 >= a2)
              goto LABEL_27;
            v14 = a1[v10];
            if (!v14)
            {
              v10 = v13 + 2;
              if (v13 + 2 >= a2)
                goto LABEL_27;
              v14 = a1[v10];
              if (!v14)
              {
                v15 = v13 + 3;
                if (v15 >= a2)
                  goto LABEL_27;
                v14 = a1[v15];
                if (!v14)
                {
                  while (1)
                  {
                    v10 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      goto LABEL_30;
                    if (v10 >= a2)
                      goto LABEL_27;
                    v14 = a1[v10];
                    ++v15;
                    if (v14)
                      goto LABEL_24;
                  }
                }
                v10 = v15;
              }
            }
          }
LABEL_24:
          v9 = (v14 - 1) & v14;
          v12 = __clz(__rbit64(v14)) + (v10 << 6);
        }
        v16 = *(_QWORD *)(a4 + 48) + 72 * v12;
        v21[0] = *(_OWORD *)v16;
        v18 = *(_OWORD *)(v16 + 32);
        v17 = *(_OWORD *)(v16 + 48);
        v19 = *(_OWORD *)(v16 + 16);
        v22 = *(_QWORD *)(v16 + 64);
        v21[2] = v18;
        v21[3] = v17;
        v21[1] = v19;
        sub_1A908E2B0(v21);
        sub_1A9329214((uint64_t)v21, v8);
        if (__OFSUB__(v5--, 1))
          break;
        if (!v5)
          goto LABEL_27;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
    }
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_1A91F1AA8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A91F1DF8(a1, a2, a3, a4, &qword_1EEAB98F8);
}

uint64_t sub_1A91F1AB4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t *v17;

  v4 = a4;
  if (!a3)
  {
    v7 = MEMORY[0x1E0DEE9E8];
    goto LABEL_25;
  }
  if (*(_QWORD *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9900);
    v7 = sub_1A93F8C4C();
    v17 = a1;
    if (a2 < 1)
      v8 = 0;
    else
      v8 = *a1;
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      goto LABEL_22;
    }
    if (a2 > 1)
    {
      v10 = v17[1];
      v11 = 1;
      if (v10)
        goto LABEL_21;
      v11 = 2;
      if (a2 > 2)
      {
        v10 = v17[2];
        if (v10)
          goto LABEL_21;
        v11 = 3;
        if (a2 > 3)
        {
          v10 = v17[3];
          if (!v10)
          {
            v12 = 4;
            if (a2 > 4)
            {
              v10 = v17[4];
              if (v10)
              {
                v11 = 4;
                goto LABEL_21;
              }
              while (1)
              {
                v11 = v12 + 1;
                if (__OFADD__(v12, 1))
                {
                  __break(1u);
                  JUMPOUT(0x1A91F1DE8);
                }
                if (v11 >= a2)
                  break;
                v10 = v17[v11];
                ++v12;
                if (v10)
                  goto LABEL_21;
              }
            }
            goto LABEL_25;
          }
LABEL_21:
          v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_22:
          v13 = *(_QWORD *)(v4 + 48) + 16 * v9;
          v14 = *(unsigned __int8 *)(v13 + 8);
          v15 = *(unsigned __int8 *)(v13 + 9);
          sub_1A93F92DC();
          sub_1A93F92F4();
          if (v14 != 1)
            sub_1A93F930C();
          __asm { BR              X8 }
        }
      }
    }
LABEL_25:
    swift_release();
    return v7;
  }
  return v4;
}

uint64_t sub_1A91F1DF8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;

  v5 = a4;
  if (!a3)
  {
    v10 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v10;
  }
  v6 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v5;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  result = sub_1A93F8C4C();
  v10 = result;
  v29 = a1;
  if (a2 < 1)
    v11 = 0;
  else
    v11 = *a1;
  v12 = 0;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_39;
    if (v16 >= a2)
      goto LABEL_36;
    v17 = v29[v16];
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= a2)
        goto LABEL_36;
      v17 = v29[v12];
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= a2)
          goto LABEL_36;
        v17 = v29[v12];
        if (!v17)
          break;
      }
    }
LABEL_23:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v15);
    result = sub_1A93F8A30();
    v20 = -1 << *(_BYTE *)(v10 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v13 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v13 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v13 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v13 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v23) = v19;
    ++*(_QWORD *)(v10 + 16);
    if (__OFSUB__(v6--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v6)
      goto LABEL_36;
  }
  v18 = v16 + 3;
  if (v18 >= a2)
    goto LABEL_36;
  v17 = v29[v18];
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= a2)
      goto LABEL_36;
    v17 = v29[v12];
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A91F2050(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4328);
  result = sub_1A93F8C4C();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_1A93F92DC();
    swift_bridgeObjectRetain();
    sub_1A93F7FBC();
    result = sub_1A93F9324();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A91F22E4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98C8);
  result = sub_1A93F8C4C();
  v9 = result;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = a1[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = a1[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = a1[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = sub_1A93F92D0();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = a1[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = a1[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A91F2528(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v31;
  uint64_t v32;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7E40);
  result = sub_1A93F8C4C();
  v9 = result;
  v31 = a1;
  v32 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= v32)
      goto LABEL_36;
    v16 = v31[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v32)
        goto LABEL_36;
      v16 = v31[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v32)
          goto LABEL_36;
        v16 = v31[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v4 + 48) + 16 * v14;
    v19 = *(_QWORD *)v18;
    v20 = *(_BYTE *)(v18 + 8);
    sub_1A93F92DC();
    sub_1A93F92E8();
    result = sub_1A93F9324();
    v21 = -1 << *(_BYTE *)(v9 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = *(_QWORD *)(v9 + 48) + 16 * v24;
    *(_QWORD *)v29 = v19;
    *(_BYTE *)(v29 + 8) = v20;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= v32)
    goto LABEL_36;
  v16 = v31[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v32)
      goto LABEL_36;
    v16 = v31[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A91F27BC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A5B50);
  result = sub_1A93F8C4C();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    sub_1A93F92DC();
    sub_1A93F930C();
    result = sub_1A93F9324();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A91F2A24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  int64_t v15;
  unint64_t v16;

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = (_QWORD *)(a1 + 56);
    v5 = -1 << *(_BYTE *)(a1 + 32);
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v16 = v6 & *(_QWORD *)(a1 + 56);
    v15 = (unint64_t)(63 - v5) >> 6;
    swift_bridgeObjectRetain();
    if (v16)
    {
      v7 = __clz(__rbit64(v16));
      goto LABEL_22;
    }
    if (v15 > 1)
    {
      v8 = v4[1];
      v9 = 1;
      if (v8)
        goto LABEL_21;
      v9 = 2;
      if (v15 > 2)
      {
        v8 = v4[2];
        if (v8)
          goto LABEL_21;
        v9 = 3;
        if (v15 > 3)
        {
          v8 = v4[3];
          if (v8)
            goto LABEL_21;
          v9 = 4;
          if (v15 > 4)
          {
            v8 = v4[4];
            if (!v8)
            {
              v10 = 5;
              if (v15 > 5)
              {
                v8 = v4[5];
                if (v8)
                {
                  v9 = 5;
                  goto LABEL_21;
                }
                while (1)
                {
                  v9 = v10 + 1;
                  if (__OFADD__(v10, 1))
                    __break(1u);
                  if (v9 >= v15)
                    break;
                  v8 = v4[v9];
                  ++v10;
                  if (v8)
                    goto LABEL_21;
                }
              }
              goto LABEL_27;
            }
LABEL_21:
            v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_22:
            v11 = *(_QWORD *)(a1 + 48) + 16 * v7;
            v12 = *(_BYTE *)(v11 + 8);
            v13 = *(unsigned __int8 *)(v11 + 9);
            sub_1A93F92DC();
            sub_1A93F92F4();
            if ((v12 & 1) == 0)
              sub_1A93F930C();
            __asm { BR              X8 }
          }
        }
      }
    }
LABEL_27:
    sub_1A9120240();
    return v2;
  }
  swift_release();
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1A91F3074(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  char v24;
  int64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  int64_t v29;
  uint64_t isStackAllocationSafe;
  char v31;
  unint64_t v32;
  size_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  uint64_t v51;

  v2 = a2;
  v51 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A93F8B8C();
    sub_1A90A344C();
    sub_1A9066CA8((unint64_t *)&unk_1ED2A41C0, (uint64_t (*)(uint64_t))sub_1A90A344C, MEMORY[0x1E0DEFCF8]);
    sub_1A93F8670();
    v3 = v46;
    v4 = v47;
    v6 = v48;
    v5 = v49;
    v7 = v50;
  }
  else
  {
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v4 = a1 + 56;
    v6 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v41 = v3;
  v42 = v4;
  v43 = v6;
  v44 = v5;
  v45 = v7;
  v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        v12 = (v7 - 1) & v7;
        v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        v14 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v13);
        v15 = v14;
        goto LABEL_15;
      }
      v25 = v5 + 1;
      if (__OFADD__(v5, 1))
        __break(1u);
      v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        v14 = 0;
        v12 = 0;
        goto LABEL_15;
      }
      v27 = *(_QWORD *)(v42 + 8 * v25);
      if (v27)
      {
LABEL_28:
        v12 = (v27 - 1) & v27;
        v13 = __clz(__rbit64(v27)) + (v25 << 6);
        v5 = v25;
        goto LABEL_14;
      }
      v28 = v5 + 2;
      if (v5 + 2 >= v26)
        goto LABEL_44;
      v27 = *(_QWORD *)(v42 + 8 * v28);
      if (v27)
      {
LABEL_32:
        v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        v27 = *(_QWORD *)(v42 + 8 * (v5 + 3));
        if (v27)
        {
          v25 = v5 + 3;
          goto LABEL_28;
        }
        v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          v14 = 0;
          v12 = 0;
          v5 += 3;
LABEL_15:
          v44 = v5;
          v45 = v12;
          if (!v14)
            goto LABEL_53;
          goto LABEL_19;
        }
        v27 = *(_QWORD *)(v42 + 8 * v28);
        if (v27)
          goto LABEL_32;
        v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          v27 = *(_QWORD *)(v42 + 8 * v25);
          if (v27)
            goto LABEL_28;
          v25 = v26 - 1;
          v29 = v5 + 6;
          while (v26 != v29)
          {
            v27 = *(_QWORD *)(v42 + 8 * v29++);
            if (v27)
            {
              v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          v14 = 0;
          v12 = 0;
          v5 = v25;
          goto LABEL_15;
        }
      }
      v14 = 0;
      v12 = 0;
      v5 = v28;
      goto LABEL_15;
    }
    v16 = sub_1A93F8BE0();
    if (!v16
      || (v39 = v16,
          sub_1A90A344C(),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          v14 = v40,
          swift_unknownObjectRelease(),
          !v40))
    {
LABEL_53:
      sub_1A9120240();
      return v2;
    }
LABEL_19:
    v17 = sub_1A93F8A30();
    v18 = -1 << *(_BYTE *)(v2 + 32);
    v19 = v17 & ~v18;
    if (((*(_QWORD *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      goto LABEL_10;
    sub_1A90A344C();
    v20 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v19);
    v21 = sub_1A93F8A3C();

    if ((v21 & 1) != 0)
      break;
    v22 = ~v18;
    while (1)
    {
      v19 = (v19 + 1) & v22;
      if (((*(_QWORD *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        break;
      v23 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v19);
      v24 = sub_1A93F8A3C();

      if ((v24 & 1) != 0)
        goto LABEL_47;
    }
LABEL_10:

    v3 = v41;
    v6 = v43;
    v5 = v44;
    v7 = v45;
  }
LABEL_47:

  v31 = *(_BYTE *)(v2 + 32);
  v32 = (unint64_t)((1 << v31) + 63) >> 6;
  v33 = 8 * v32;
  if ((v31 & 0x3Fu) < 0xE
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v33);
    sub_1A91F4A70((unint64_t *)((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0)), v32, v2, v19, &v41);
    v35 = v34;
    swift_release();
    sub_1A9120240();
  }
  else
  {
    v36 = (void *)swift_slowAlloc();
    memcpy(v36, (const void *)(v2 + 56), v33);
    sub_1A91F4A70((unint64_t *)v36, v32, v2, v19, &v41);
    v35 = v37;
    swift_release();
    sub_1A9120240();
    MEMORY[0x1AF41411C](v36, -1, -1);
  }
  return v35;
}

uint64_t sub_1A91F3594(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t isStackAllocationSafe;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _QWORD v32[2];
  _QWORD v33[6];

  v2 = a2;
  v33[5] = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = 0;
    v6 = a1 + 56;
    v5 = *(_QWORD *)(a1 + 56);
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v32[0] = ~v7;
    if (-v7 < 64)
      v8 = ~(-1 << -(char)v7);
    else
      v8 = -1;
    v9 = v8 & v5;
    v10 = (unint64_t)(63 - v7) >> 6;
    v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v13 = v12 | (v4 << 6);
        }
        else
        {
          v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_36;
          }
          if (v14 >= v10)
            goto LABEL_33;
          v15 = *(_QWORD *)(v6 + 8 * v14);
          v16 = v4 + 1;
          if (!v15)
          {
            v16 = v4 + 2;
            if (v4 + 2 >= v10)
              goto LABEL_33;
            v15 = *(_QWORD *)(v6 + 8 * v16);
            if (!v15)
            {
              v16 = v4 + 3;
              if (v4 + 3 >= v10)
                goto LABEL_33;
              v15 = *(_QWORD *)(v6 + 8 * v16);
              if (!v15)
              {
                v16 = v4 + 4;
                if (v4 + 4 >= v10)
                  goto LABEL_33;
                v15 = *(_QWORD *)(v6 + 8 * v16);
                if (!v15)
                {
                  v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_33:
                    swift_bridgeObjectRetain();
                    sub_1A9120240();
                    return v2;
                  }
                  v15 = *(_QWORD *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      v16 = v17 + 1;
                      if (__OFADD__(v17, 1))
                        break;
                      if (v16 >= v10)
                        goto LABEL_33;
                      v15 = *(_QWORD *)(v6 + 8 * v16);
                      ++v17;
                      if (v15)
                        goto LABEL_23;
                    }
LABEL_36:
                    __break(1u);
                  }
                  v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          v9 = (v15 - 1) & v15;
          v13 = __clz(__rbit64(v15)) + (v16 << 6);
          v4 = v16;
        }
        v18 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v13);
        v19 = sub_1A93F92D0();
        v20 = -1 << *(_BYTE *)(v2 + 32);
        v21 = v19 & ~v20;
      }
      while (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      v22 = *(_QWORD *)(v2 + 48);
      if (*(_QWORD *)(v22 + 8 * v21) == v18)
        break;
      while (1)
      {
        v21 = (v21 + 1) & ~v20;
        if (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        if (*(_QWORD *)(v22 + 8 * v21) == v18)
          goto LABEL_28;
      }
    }
LABEL_28:
    v33[0] = a1;
    v33[1] = v6;
    v33[2] = v32[0];
    v33[3] = v4;
    v33[4] = v9;
    v23 = (unint64_t)(63 - v20) >> 6;
    v24 = 8 * v23;
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v23 < 0x81 || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      v27 = (char *)v32 - v26;
      memcpy((char *)v32 - v26, (const void *)(v2 + 56), v24);
      v28 = sub_1A91F4DD0((uint64_t)v27, v23, v2, v21, v33);
      swift_release();
      sub_1A9120240();
      return v28;
    }
    else
    {
      v29 = (void *)swift_slowAlloc();
      memcpy(v29, (const void *)(v2 + 56), v24);
      v30 = sub_1A91F4DD0((uint64_t)v29, v23, v2, v21, v33);
      swift_release();
      sub_1A9120240();
      MEMORY[0x1AF41411C](v29, -1, -1);
      return v30;
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1A91F3930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  size_t v13;
  uint64_t isStackAllocationSafe;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  void *v19;
  uint64_t v20;
  _BYTE v21[16];
  _QWORD v22[3];

  v2 = a2;
  v22[2] = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v22[0] = a1;
    v4 = *(_QWORD *)(a1 + 16);
    if (v4)
    {
      v5 = 0;
      v6 = a2 + 56;
      while (1)
      {
        v7 = *(_BYTE *)(a1 + 32 + 16 * v5 + 8);
        sub_1A93F92DC();
        ++v5;
        sub_1A93F92E8();
        v8 = sub_1A93F9324();
        v9 = -1 << *(_BYTE *)(v2 + 32);
        v10 = v8 & ~v9;
        if (((*(_QWORD *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
          break;
LABEL_4:
        if (v5 == v4)
          return v2;
      }
      while (1)
      {
        v11 = *(_QWORD *)(v2 + 48) + 16 * v10;
        if (*(_BYTE *)(v11 + 8) == 1)
          __asm { BR              X17 }
        if ((v7 & 1) == 0)
          break;
        v10 = (v10 + 1) & ~v9;
        if (((*(_QWORD *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
          goto LABEL_4;
      }
      v22[1] = v5;
      v12 = (unint64_t)(63 - v9) >> 6;
      v13 = 8 * v12;
      isStackAllocationSafe = swift_bridgeObjectRetain();
      if (v12 <= 0x80 || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
      {
        MEMORY[0x1E0C80A78](isStackAllocationSafe);
        v16 = (unint64_t *)&v21[-v15];
        memcpy(&v21[-v15], (const void *)(v2 + 56), v13);
        v17 = sub_1A91F5028(v16, v12, v2, v10, v22);
        swift_release();
        swift_bridgeObjectRelease();
        return v17;
      }
      else
      {
        v19 = (void *)swift_slowAlloc();
        memcpy(v19, (const void *)(v2 + 56), v13);
        v20 = sub_1A91F5028((unint64_t *)v19, v12, v2, v10, v22);
        swift_release();
        swift_bridgeObjectRelease();
        MEMORY[0x1AF41411C](v19, -1, -1);
        return v20;
      }
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1A91F3C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v37 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36)
          goto LABEL_47;
        v13 = *(_QWORD *)(v37 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v36)
            goto LABEL_47;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v36)
              goto LABEL_47;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v36)
                goto LABEL_47;
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_1A9120240();
                  return v2;
                }
                v13 = *(_QWORD *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v36)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v37 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_1A93F92DC();
      swift_bridgeObjectRetain();
      sub_1A93F7FBC();
      v19 = sub_1A93F9324();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1A93F90C0() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1A93F90C0() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_1A91F5264((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_1A9120240();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_1A91F5264((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_1A9120240();
      MEMORY[0x1AF41411C](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

void sub_1A91F40A4(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  BOOL v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  uint64_t v55;
  _QWORD *v57;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v5 = a3;
  v6 = *(_QWORD *)(a3 + 16);
  v57 = a5;
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v7 = v6 - 1;
  v68 = a3 + 56;
  do
  {
    v55 = v7;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v8 = a5[4];
        if (v8)
        {
          v10 = (v8 - 1) & v8;
          v11 = __clz(__rbit64(v8)) | (v9 << 6);
        }
        else
        {
          v12 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
LABEL_69:
            __break(1u);
            return;
          }
          v13 = (unint64_t)(a5[2] + 64) >> 6;
          if (v12 >= v13)
          {
            v12 = a5[3];
LABEL_65:
            a5[3] = v12;
            a5[4] = 0;
            swift_retain();
            sub_1A91F18F0(a1, a2, v55, v5);
            return;
          }
          v14 = a5[1];
          v15 = *(_QWORD *)(v14 + 8 * v12);
          if (!v15)
          {
            if (v9 + 2 >= v13)
              goto LABEL_65;
            v15 = *(_QWORD *)(v14 + 8 * (v9 + 2));
            if (v15)
            {
              v12 = v9 + 2;
            }
            else
            {
              if (v9 + 3 >= v13)
              {
                v12 = v9 + 2;
                goto LABEL_65;
              }
              v15 = *(_QWORD *)(v14 + 8 * (v9 + 3));
              if (v15)
              {
                v12 = v9 + 3;
              }
              else
              {
                v12 = v9 + 4;
                if (v9 + 4 >= v13)
                {
                  v12 = v9 + 3;
                  goto LABEL_65;
                }
                v15 = *(_QWORD *)(v14 + 8 * v12);
                if (!v15)
                {
                  v12 = v13 - 1;
                  v16 = v9 + 5;
                  do
                  {
                    if (v13 == v16)
                      goto LABEL_65;
                    v15 = *(_QWORD *)(v14 + 8 * v16++);
                  }
                  while (!v15);
                  v12 = v16 - 1;
                }
              }
            }
          }
          v10 = (v15 - 1) & v15;
          v11 = __clz(__rbit64(v15)) + (v12 << 6);
          v9 = v12;
        }
        v17 = *(_QWORD *)(*a5 + 48) + 72 * v11;
        v19 = *(_QWORD *)v17;
        v18 = *(_QWORD *)(v17 + 8);
        v20 = *(_QWORD *)(v17 + 16);
        v21 = *(unsigned __int8 *)(v17 + 24);
        v23 = *(_QWORD *)(v17 + 32);
        v22 = *(_QWORD *)(v17 + 40);
        v25 = *(_QWORD *)(v17 + 48);
        v24 = *(_QWORD *)(v17 + 56);
        v26 = *(_QWORD *)(v17 + 64);
        a5[3] = v9;
        a5[4] = v10;
        sub_1A93F92DC();
        swift_bridgeObjectRetain();
        v61 = v24;
        v62 = v23;
        sub_1A9094654(v23, v22, v25);
        v65 = v19;
        v69 = v18;
        sub_1A93F7FBC();
        v66 = v21;
        sub_1A93F92F4();
        if (v21 != 1)
          sub_1A93F930C();
        v59 = v26;
        sub_1A93F92E8();
        if (v25 > 2)
        {
          sub_1A93F92F4();
          sub_1A93F7FBC();
          sub_1A93F92F4();
          sub_1A93F930C();
        }
        v64 = v25;
        v60 = v22;
        v27 = sub_1A93F9324();
        v28 = -1 << *(_BYTE *)(a3 + 32);
        v29 = v27 & ~v28;
        if (((*(_QWORD *)(v68 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) != 0)
          break;
LABEL_3:
        swift_bridgeObjectRelease();
        sub_1A9094668(v62, v60, v64);
        a5 = v57;
        v5 = a3;
      }
      v63 = v20;
      v30 = ~v28;
      v31 = *(_QWORD *)(a3 + 48);
      v32 = v18;
      v33 = v65;
      while (1)
      {
        v34 = v31 + 72 * v29;
        v35 = *(_QWORD *)(v34 + 16);
        v36 = *(_BYTE *)(v34 + 24);
        v37 = *(_QWORD *)(v34 + 32);
        v38 = *(_QWORD *)(v34 + 40);
        v39 = *(_QWORD *)(v34 + 48);
        v40 = *(_QWORD *)(v34 + 56);
        v41 = *(_QWORD *)(v34 + 64);
        if (*(_QWORD *)v34 != v33 || *(_QWORD *)(v34 + 8) != v32)
        {
          v67 = *(_QWORD *)(v34 + 56);
          v40 = *(_QWORD *)(v34 + 64);
          v43 = v31;
          v44 = v30;
          v45 = sub_1A93F90C0();
          v30 = v44;
          v31 = v43;
          v41 = v40;
          LODWORD(v40) = v67;
          v33 = v65;
          v32 = v69;
          if ((v45 & 1) == 0)
            goto LABEL_29;
        }
        if ((v36 & 1) != 0)
        {
          if (!v66)
            goto LABEL_29;
        }
        else
        {
          v46 = v66;
          if (v35 != v63)
            v46 = 1;
          if ((v46 & 1) != 0)
            goto LABEL_29;
        }
        if (!v39)
        {
          if (!v64)
          {
            v53 = 0;
            goto LABEL_59;
          }
          goto LABEL_29;
        }
        if (v39 != 1)
          break;
        if (v64 == 1)
        {
          v53 = 1;
          goto LABEL_59;
        }
LABEL_29:
        v29 = (v29 + 1) & v30;
        if (((*(_QWORD *)(v68 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
          goto LABEL_3;
      }
      if (v39 != 2)
      {
        if (v64 >= 3 && ((v62 ^ ((v37 & 1) == 0)) & 1) != 0)
        {
          v47 = v38 == v60 && v39 == v64;
          if (v47 || (v48 = v30, v49 = sub_1A93F90C0(), v30 = v48, v33 = v65, v32 = v69, (v49 & 1) != 0))
          {
            if (((v61 ^ v40) & 1) == 0 && v41 == v59)
            {
              v52 = v57;
              v53 = v64;
              goto LABEL_60;
            }
          }
        }
        goto LABEL_29;
      }
      if (v64 != 2)
        goto LABEL_29;
      v53 = 2;
LABEL_59:
      v52 = v57;
LABEL_60:
      swift_bridgeObjectRelease();
      sub_1A9094668(v62, v60, v53);
      v50 = (v29 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v51 = *(unint64_t *)((char *)a1 + v50);
      *(unint64_t *)((char *)a1 + v50) = v51 & ~(1 << v29);
      v5 = a3;
      a5 = v52;
    }
    while ((v51 & (1 << v29)) == 0);
    v7 = v55 - 1;
    if (__OFSUB__(v55, 1))
      goto LABEL_69;
  }
  while (v55 != 1);
}

uint64_t sub_1A91F45AC(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v20;
  uint64_t v22;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v20 = v6 - 1;
  v8 = a5[3];
  v7 = a5[4];
  if (v7)
  {
    v9 = (v7 - 1) & v7;
    v10 = __clz(__rbit64(v7)) | (v8 << 6);
    goto LABEL_19;
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    JUMPOUT(0x1A91F4A3CLL);
  }
  v12 = (unint64_t)(a5[2] + 64) >> 6;
  if (v11 >= v12)
  {
    v11 = a5[3];
  }
  else
  {
    v13 = a5[1];
    v14 = *(_QWORD *)(v13 + 8 * v11);
    if (v14)
    {
LABEL_18:
      v9 = (v14 - 1) & v14;
      v10 = __clz(__rbit64(v14)) + (v11 << 6);
      v8 = v11;
LABEL_19:
      v16 = *(_QWORD *)(*a5 + 48) + 16 * v10;
      v17 = *(_BYTE *)(v16 + 8);
      v22 = *(unsigned __int8 *)(v16 + 9);
      a5[3] = v8;
      a5[4] = v9;
      sub_1A93F92DC();
      sub_1A93F92F4();
      if ((v17 & 1) == 0)
        sub_1A93F930C();
      __asm { BR              X8 }
    }
    if (v8 + 2 < v12)
    {
      v14 = *(_QWORD *)(v13 + 8 * (v8 + 2));
      if (v14)
      {
        v11 = v8 + 2;
        goto LABEL_18;
      }
      if (v8 + 3 >= v12)
      {
        v11 = v8 + 2;
      }
      else
      {
        v14 = *(_QWORD *)(v13 + 8 * (v8 + 3));
        if (v14)
        {
          v11 = v8 + 3;
          goto LABEL_18;
        }
        v11 = v8 + 4;
        if (v8 + 4 < v12)
        {
          v14 = *(_QWORD *)(v13 + 8 * v11);
          if (!v14)
          {
            v11 = v12 - 1;
            v15 = v8 + 5;
            do
            {
              if (v12 == v15)
                goto LABEL_23;
              v14 = *(_QWORD *)(v13 + 8 * v15++);
            }
            while (!v14);
            v11 = v15 - 1;
          }
          goto LABEL_18;
        }
        v11 = v8 + 3;
      }
    }
  }
LABEL_23:
  a5[3] = v11;
  a5[4] = 0;
  swift_retain();
  return sub_1A91F1AB4(a1, a2, v20, a3);
}

void sub_1A91F4A70(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  unint64_t i;
  unint64_t v24;
  id v25;
  char v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  BOOL v32;
  int64_t v33;
  uint64_t v35;
  uint64_t v38;
  void *v39;

  v5 = a5;
  v7 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v38 = a3 + 56;
  while (2)
  {
    v35 = v8;
    do
    {
      while (1)
      {
        if ((*v5 & 0x8000000000000000) == 0)
        {
          v10 = v5[3];
          v9 = v5[4];
          if (v9)
          {
            v11 = (v9 - 1) & v9;
            v12 = __clz(__rbit64(v9)) | (v10 << 6);
LABEL_7:
            v13 = *(void **)(*(_QWORD *)(*v5 + 48) + 8 * v12);
            v14 = v13;
            goto LABEL_8;
          }
          v27 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
            goto LABEL_47;
          }
          v28 = (unint64_t)(v5[2] + 64) >> 6;
          if (v27 >= v28)
          {
            v13 = 0;
            v11 = 0;
            goto LABEL_8;
          }
          v29 = v5[1];
          v30 = *(_QWORD *)(v29 + 8 * v27);
          if (v30)
          {
LABEL_22:
            v11 = (v30 - 1) & v30;
            v12 = __clz(__rbit64(v30)) + (v27 << 6);
            v10 = v27;
            goto LABEL_7;
          }
          if (v10 + 2 < v28)
          {
            v30 = *(_QWORD *)(v29 + 8 * (v10 + 2));
            if (v30)
            {
              v27 = v10 + 2;
              goto LABEL_22;
            }
            if (v10 + 3 >= v28)
            {
              v13 = 0;
              v11 = 0;
              v10 += 2;
              goto LABEL_8;
            }
            v30 = *(_QWORD *)(v29 + 8 * (v10 + 3));
            if (v30)
            {
              v27 = v10 + 3;
              goto LABEL_22;
            }
            v27 = v10 + 4;
            if (v10 + 4 >= v28)
            {
              v13 = 0;
              v11 = 0;
              v10 += 3;
LABEL_8:
              v5[3] = v10;
              v5[4] = v11;
              if (!v13)
                goto LABEL_45;
              goto LABEL_12;
            }
            v30 = *(_QWORD *)(v29 + 8 * v27);
            if (v30)
              goto LABEL_22;
            v27 = v28 - 1;
            v33 = v10 + 5;
            while (v28 != v33)
            {
              v30 = *(_QWORD *)(v29 + 8 * v33++);
              if (v30)
              {
                v27 = v33 - 1;
                goto LABEL_22;
              }
            }
          }
          v13 = 0;
          v11 = 0;
          v10 = v27;
          goto LABEL_8;
        }
        if (!sub_1A93F8BE0()
          || (sub_1A90A344C(),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              v13 = v39,
              swift_unknownObjectRelease(),
              !v39))
        {
LABEL_45:
          swift_retain();
          sub_1A91F1DF8(a1, a2, v35, a3, &qword_1ED2A4340);
          return;
        }
LABEL_12:
        v15 = sub_1A93F8A30();
        v16 = -1 << *(_BYTE *)(a3 + 32);
        v17 = v15 & ~v16;
        v18 = v17 >> 6;
        v19 = 1 << v17;
        if (((1 << v17) & *(_QWORD *)(v38 + 8 * (v17 >> 6))) == 0)
          goto LABEL_3;
        sub_1A90A344C();
        v20 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v17);
        v21 = sub_1A93F8A3C();

        if ((v21 & 1) != 0)
          break;
        v22 = ~v16;
        for (i = v17 + 1; ; i = v24 + 1)
        {
          v24 = i & v22;
          if (((*(_QWORD *)(v38 + (((i & v22) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v22)) & 1) == 0)
            break;
          v25 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v24);
          v26 = sub_1A93F8A3C();

          if ((v26 & 1) != 0)
          {

            v18 = v24 >> 6;
            v19 = 1 << v24;
            goto LABEL_25;
          }
        }
LABEL_3:

        v5 = a5;
      }

LABEL_25:
      v31 = a1[v18];
      a1[v18] = v31 & ~v19;
      v32 = (v19 & v31) == 0;
      v5 = a5;
    }
    while (v32);
    v8 = v35 - 1;
    if (__OFSUB__(v35, 1))
    {
LABEL_47:
      __break(1u);
      return;
    }
    if (v35 != 1)
      continue;
    break;
  }
}

uint64_t sub_1A91F4DD0(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t i;
  unint64_t v31;
  int64_t v32;

  v8 = (unint64_t *)result;
  v9 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v10 = v9 - 1;
  v11 = a3 + 56;
  while (1)
  {
    v16 = a5[3];
    v17 = a5[4];
    if (!v17)
      break;
    v18 = (v17 - 1) & v17;
    v19 = __clz(__rbit64(v17)) | (v16 << 6);
LABEL_16:
    v26 = *(_QWORD *)(*(_QWORD *)(*a5 + 48) + 8 * v19);
    a5[3] = v16;
    a5[4] = v18;
    result = sub_1A93F92D0();
    v27 = -1 << *(_BYTE *)(a3 + 32);
    v28 = result & ~v27;
    v12 = v28 >> 6;
    v13 = 1 << v28;
    if (((1 << v28) & *(_QWORD *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      v29 = *(_QWORD *)(a3 + 48);
      if (*(_QWORD *)(v29 + 8 * v28) == v26)
      {
LABEL_3:
        v14 = v12;
        v15 = v8[v12];
        v8[v14] = v15 & ~v13;
        if ((v13 & v15) != 0)
        {
          if (__OFSUB__(v10--, 1))
            goto LABEL_35;
          if (!v10)
            return MEMORY[0x1E0DEE9E8];
        }
      }
      else
      {
        for (i = v28 + 1; ; i = v31 + 1)
        {
          v31 = i & ~v27;
          if (((*(_QWORD *)(v11 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
            break;
          if (*(_QWORD *)(v29 + 8 * v31) == v26)
          {
            v12 = v31 >> 6;
            v13 = 1 << v31;
            goto LABEL_3;
          }
        }
      }
    }
  }
  v20 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    v21 = (unint64_t)(a5[2] + 64) >> 6;
    v22 = a5[3];
    if (v20 >= v21)
      goto LABEL_33;
    v23 = a5[1];
    v24 = *(_QWORD *)(v23 + 8 * v20);
    if (v24)
      goto LABEL_15;
    v25 = v16 + 2;
    v22 = v16 + 1;
    if (v16 + 2 >= v21)
      goto LABEL_33;
    v24 = *(_QWORD *)(v23 + 8 * v25);
    if (!v24)
    {
      v22 = v16 + 2;
      if (v16 + 3 >= v21)
        goto LABEL_33;
      v24 = *(_QWORD *)(v23 + 8 * (v16 + 3));
      if (v24)
      {
        v20 = v16 + 3;
        goto LABEL_15;
      }
      v25 = v16 + 4;
      v22 = v16 + 3;
      if (v16 + 4 >= v21)
        goto LABEL_33;
      v24 = *(_QWORD *)(v23 + 8 * v25);
      if (!v24)
      {
        v20 = v16 + 5;
        v22 = v16 + 4;
        if (v16 + 5 >= v21)
          goto LABEL_33;
        v24 = *(_QWORD *)(v23 + 8 * v20);
        if (!v24)
        {
          v22 = v21 - 1;
          v32 = v16 + 6;
          while (v21 != v32)
          {
            v24 = *(_QWORD *)(v23 + 8 * v32++);
            if (v24)
            {
              v20 = v32 - 1;
              goto LABEL_15;
            }
          }
LABEL_33:
          a5[3] = v22;
          a5[4] = 0;
          swift_retain();
          return sub_1A91F22E4(v8, a2, v10, a3);
        }
        goto LABEL_15;
      }
    }
    v20 = v25;
LABEL_15:
    v18 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v20 << 6);
    v16 = v20;
    goto LABEL_16;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1A91F5028(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v7 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v10 = *a5;
  v9 = a5[1];
  v11 = *(_QWORD *)(*a5 + 16);
  if (v9 == v11)
  {
LABEL_2:
    swift_retain();
    return sub_1A91F2528(a1, a2, v8, a3);
  }
  else
  {
    v14 = a3 + 56;
    while (1)
    {
      if ((v9 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        JUMPOUT(0x1A91F5250);
      }
      if (v9 >= v11)
        goto LABEL_18;
      v15 = *(_BYTE *)(v10 + 16 * v9 + 40);
      a5[1] = v9 + 1;
      sub_1A93F92DC();
      sub_1A93F92E8();
      v16 = sub_1A93F9324();
      v17 = -1 << *(_BYTE *)(a3 + 32);
      v18 = v16 & ~v17;
      if (((*(_QWORD *)(v14 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
      {
        v19 = ~v17;
        do
        {
          v20 = *(_QWORD *)(a3 + 48) + 16 * v18;
          if (*(_BYTE *)(v20 + 8) == 1)
            __asm { BR              X17 }
          if ((v15 & 1) == 0)
            break;
          v18 = (v18 + 1) & v19;
        }
        while (((*(_QWORD *)(v14 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0);
        v21 = (v18 >> 3) & 0x1FFFFFFFFFFFFFF8;
        v22 = 1 << v18;
        v23 = *(unint64_t *)((char *)a1 + v21);
        *(unint64_t *)((char *)a1 + v21) = v23 & ~v22;
        if ((v23 & v22) != 0)
        {
          if (__OFSUB__(v8--, 1))
            goto LABEL_19;
          if (!v8)
            return MEMORY[0x1E0DEE9E8];
        }
      }
      v10 = *a5;
      v9 = a5[1];
      v11 = *(_QWORD *)(*a5 + 16);
      if (v9 == v11)
        goto LABEL_2;
    }
  }
}

uint64_t sub_1A91F5264(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  int64_t v36;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;

  v7 = *(_QWORD *)(a3 + 16);
  v39 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v40 = a3 + 56;
  while (2)
  {
    v38 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        v14 = (unint64_t)(a5[2] + 64) >> 6;
        v15 = a5[3];
        if (v13 >= v14)
          goto LABEL_45;
        v16 = a5[1];
        v17 = *(_QWORD *)(v16 + 8 * v13);
        if (!v17)
        {
          v18 = v9 + 2;
          v15 = v9 + 1;
          if (v9 + 2 >= v14)
            goto LABEL_45;
          v17 = *(_QWORD *)(v16 + 8 * v18);
          if (!v17)
          {
            v15 = v9 + 2;
            if (v9 + 3 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              v13 = v9 + 3;
              goto LABEL_15;
            }
            v18 = v9 + 4;
            v15 = v9 + 3;
            if (v9 + 4 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (!v17)
            {
              v13 = v9 + 5;
              v15 = v9 + 4;
              if (v9 + 5 >= v14)
                goto LABEL_45;
              v17 = *(_QWORD *)(v16 + 8 * v13);
              if (!v17)
              {
                v15 = v14 - 1;
                v36 = v9 + 6;
                while (v14 != v36)
                {
                  v17 = *(_QWORD *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_1A91F2050(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          v13 = v18;
        }
LABEL_15:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
        v9 = v13;
LABEL_16:
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1A93F92DC();
        swift_bridgeObjectRetain();
        sub_1A93F7FBC();
        v22 = sub_1A93F9324();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v40 + 8 * (v24 >> 6))) == 0)
          goto LABEL_3;
        v27 = *(_QWORD *)(a3 + 48);
        v28 = (_QWORD *)(v27 + 16 * v24);
        v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_1A93F90C0() & 1) != 0)
          break;
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1A93F90C0() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
LABEL_23:
      v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t _s18PodcastsFoundation14PlaybackIntentV2eeoiySbAC_ACtFZ_0(__int128 *a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  __int128 v20;
  char v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int16 v101;
  uint64_t v102;
  __int16 v103;
  char v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int16 v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __int16 v125;
  char v126;

  v94 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v4 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA538);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v77 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v77 - v17;
  v19 = *((_BYTE *)a1 + 32);
  v20 = a1[1];
  v105 = *a1;
  v106 = v20;
  LOBYTE(v107) = v19;
  v21 = *((_BYTE *)a2 + 32);
  v22 = a2[1];
  v95 = *a2;
  v96 = v22;
  LOBYTE(v97) = v21;
  _s18PodcastsFoundation15MediaIdentifierO2eeoiySbAC_ACtFZ_0((uint64_t)&v105);
  if ((v23 & 1) == 0)
    goto LABEL_20;
  v88 = v7;
  v89 = v4;
  v91 = v15;
  v92 = v18;
  v86 = v6;
  v87 = v12;
  v90 = v9;
  v24 = *((_QWORD *)a1 + 5);
  v25 = *((_QWORD *)a1 + 6);
  v27 = *((_QWORD *)a1 + 7);
  v26 = *((_QWORD *)a1 + 8);
  v28 = *((_QWORD *)a1 + 9);
  v29 = *((_QWORD *)a1 + 10);
  v31 = *((_QWORD *)a1 + 11);
  v30 = *((_QWORD *)a1 + 12);
  v32 = *((_QWORD *)a1 + 13);
  v33 = *((_QWORD *)a1 + 14);
  v34 = *((unsigned __int16 *)a1 + 60) | (*((unsigned __int8 *)a1 + 122) << 16);
  v35 = *((_QWORD *)a2 + 5);
  v36 = *((_QWORD *)a2 + 6);
  v37 = *((_QWORD *)a2 + 7);
  v38 = *((_QWORD *)a2 + 8);
  v39 = *((_QWORD *)a2 + 9);
  v40 = *((_QWORD *)a2 + 10);
  v41 = *((_QWORD *)a2 + 11);
  v42 = *((_QWORD *)a2 + 12);
  v43 = *((unsigned __int16 *)a2 + 60) | (*((unsigned __int8 *)a2 + 122) << 16);
  v45 = *((_QWORD *)a2 + 13);
  v44 = *((_QWORD *)a2 + 14);
  if (*((_WORD *)a1 + 60) == 2)
  {
    if (*((_WORD *)a2 + 60) == 2)
      goto LABEL_9;
LABEL_7:
    *(_QWORD *)&v105 = v24;
    *((_QWORD *)&v105 + 1) = v25;
    *(_QWORD *)&v106 = v27;
    *((_QWORD *)&v106 + 1) = v26;
    v107 = v28;
    v108 = v29;
    v109 = v31;
    v110 = v30;
    v111 = v32;
    v112 = v33;
    v113 = v34;
    v114 = BYTE2(v34);
    v115 = v35;
    v116 = v36;
    v117 = v37;
    v118 = v38;
    v119 = v39;
    v120 = v40;
    v121 = v41;
    v122 = v42;
    v123 = v45;
    v124 = v44;
    v125 = v43;
    v126 = BYTE2(v43);
    sub_1A912C8E4(v35, v36, v37, v38, v39, v40, v41, v42, v45, v44, v43);
    sub_1A9201194((uint64_t)&v105);
    v48 = 0;
    return v48 & 1;
  }
  *(_QWORD *)&v105 = *((_QWORD *)a1 + 5);
  *((_QWORD *)&v105 + 1) = v25;
  *(_QWORD *)&v106 = v27;
  *((_QWORD *)&v106 + 1) = v26;
  v107 = v28;
  v108 = v29;
  v109 = v31;
  v110 = v30;
  v111 = v32;
  v112 = v33;
  v114 = BYTE2(v34);
  v113 = v34;
  v85 = v33;
  v93 = v24;
  if (v43 == 2)
  {
    v83 = v44;
    v84 = v35;
    v86 = (char *)v36;
    v87 = (char *)v37;
    v88 = v38;
    v89 = v39;
    v90 = (char *)v40;
    v91 = (char *)v41;
    v46 = v31;
    v47 = v30;
    v92 = (char *)v42;
    v94 = v32;
    v82 = v45;
    sub_1A90519B4(v93, v25, v27, v26, v28, v29, v31, v30, v32);
    sub_1A90519B4(v93, v25, v27, v26, v28, v29, v46, v47, v94);
    sub_1A90531EC(v93, v25, v27, v26, v28, v29, v46, v47, v94);
    v45 = v82;
    v44 = v83;
    v35 = v84;
    v33 = v85;
    v36 = (uint64_t)v86;
    v37 = (uint64_t)v87;
    v38 = v88;
    v39 = v89;
    v40 = (uint64_t)v90;
    v41 = (uint64_t)v91;
    v42 = (uint64_t)v92;
    v24 = v93;
    v32 = v94;
    v31 = v46;
    v30 = v47;
    goto LABEL_7;
  }
  *(_QWORD *)&v95 = v35;
  *((_QWORD *)&v95 + 1) = v36;
  *(_QWORD *)&v96 = v37;
  *((_QWORD *)&v96 + 1) = v38;
  v97 = v39;
  v98 = v40;
  v99 = v41;
  v100 = v42;
  v101 = v45;
  v102 = v44;
  v103 = v43 & 0x101;
  v104 = BYTE2(v43) & 1;
  v49 = v25;
  v50 = v25;
  v80 = v25;
  v81 = v26;
  v78 = v29;
  v79 = v28;
  v51 = v28;
  v52 = v29;
  v53 = v31;
  v54 = v30;
  v55 = v32;
  sub_1A912C8E4(v24, v50, v27, v26, v51, v52, v31, v30, v32, v33, v34);
  v56 = v49;
  v57 = v26;
  v59 = v78;
  v58 = v79;
  sub_1A90519B4(v93, v56, v27, v57, v79, v78, v53, v54, v55);
  LODWORD(v84) = _s18PodcastsFoundation19EpisodeListSettingsV2eeoiySbAC_ACtFZ_0((uint64_t)&v105, (uint64_t)&v95);
  sub_1A90531EC(v105, *((uint64_t *)&v105 + 1), v106, SBYTE8(v106), v107, v108, v109, v110, v111);
  sub_1A912C71C(v93, v80, v27, v81, v58, v59, v53, v54, v55, v85, v34);
  if ((v84 & 1) == 0)
    goto LABEL_20;
LABEL_9:
  v60 = type metadata accessor for PlaybackIntent(0);
  v61 = (uint64_t)v92;
  sub_1A9062170((uint64_t)a1 + *(int *)(v60 + 24), (uint64_t)v92, &qword_1ED2AAF68);
  v93 = v60;
  v62 = (uint64_t)a2 + *(int *)(v60 + 24);
  v63 = (uint64_t)v91;
  sub_1A9062170(v62, (uint64_t)v91, &qword_1ED2AAF68);
  v64 = (uint64_t)v90;
  v65 = (uint64_t)&v90[*(int *)(v88 + 48)];
  sub_1A9062170(v61, (uint64_t)v90, &qword_1ED2AAF68);
  sub_1A9062170(v63, v65, &qword_1ED2AAF68);
  v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
  v67 = v94;
  if (v66(v64, 1, v94) == 1)
  {
    sub_1A905FD54(v63, &qword_1ED2AAF68);
    sub_1A905FD54(v61, &qword_1ED2AAF68);
    if (v66(v65, 1, v67) == 1)
    {
      sub_1A905FD54(v64, &qword_1ED2AAF68);
      goto LABEL_16;
    }
LABEL_14:
    sub_1A905FD54(v64, &qword_1EEABA538);
    v48 = 0;
    return v48 & 1;
  }
  v68 = (uint64_t)v87;
  sub_1A9062170(v64, (uint64_t)v87, &qword_1ED2AAF68);
  if (v66(v65, 1, v67) == 1)
  {
    sub_1A905FD54((uint64_t)v91, &qword_1ED2AAF68);
    sub_1A905FD54((uint64_t)v92, &qword_1ED2AAF68);
    sub_1A9064714(v68, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    goto LABEL_14;
  }
  v69 = (uint64_t)v86;
  sub_1A9116174(v65, (uint64_t)v86, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  v70 = static PodcastsMediaLibrary.MediaItem.== infix(_:_:)(v68, v69);
  sub_1A9064714(v69, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  sub_1A905FD54((uint64_t)v91, &qword_1ED2AAF68);
  sub_1A905FD54((uint64_t)v92, &qword_1ED2AAF68);
  sub_1A9064714(v68, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  sub_1A905FD54(v64, &qword_1ED2AAF68);
  if ((v70 & 1) == 0)
  {
LABEL_20:
    v48 = 0;
    return v48 & 1;
  }
LABEL_16:
  v71 = v93;
  if ((sub_1A934F4B4(*(_QWORD *)((char *)a1 + *(int *)(v93 + 28)), *(_QWORD *)((char *)a2 + *(int *)(v93 + 28))) & 1) == 0)
    goto LABEL_20;
  v72 = *(int *)(v71 + 32);
  v73 = *(_QWORD *)((char *)a1 + v72);
  v74 = *(_QWORD *)((char *)a1 + v72 + 8);
  v75 = (_QWORD *)((char *)a2 + v72);
  if (v73 == *v75 && v74 == v75[1])
    v48 = 1;
  else
    v48 = sub_1A93F90C0();
  return v48 & 1;
}

unint64_t sub_1A91F5BD4()
{
  unint64_t result;

  result = qword_1EEABA2F8;
  if (!qword_1EEABA2F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410DA4, &type metadata for PlaybackIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA2F8);
  }
  return result;
}

unint64_t sub_1A91F5C18()
{
  unint64_t result;

  result = qword_1EEABA300;
  if (!qword_1EEABA300)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaIdentifier, &type metadata for MediaIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EEABA300);
  }
  return result;
}

unint64_t sub_1A91F5C5C()
{
  unint64_t result;

  result = qword_1EEABA308;
  if (!qword_1EEABA308)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeListSettings, &type metadata for EpisodeListSettings);
    atomic_store(result, (unint64_t *)&qword_1EEABA308);
  }
  return result;
}

unint64_t sub_1A91F5CA0()
{
  unint64_t result;

  result = qword_1EEABA328;
  if (!qword_1EEABA328)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PlaybackIntent.Option, &type metadata for PlaybackIntent.Option);
    atomic_store(result, (unint64_t *)&qword_1EEABA328);
  }
  return result;
}

unint64_t sub_1A91F5CE4()
{
  unint64_t result;

  result = qword_1EEABA338;
  if (!qword_1EEABA338)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaIdentifier, &type metadata for MediaIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EEABA338);
  }
  return result;
}

unint64_t sub_1A91F5D28()
{
  unint64_t result;

  result = qword_1EEABA340;
  if (!qword_1EEABA340)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeListSettings, &type metadata for EpisodeListSettings);
    atomic_store(result, (unint64_t *)&qword_1EEABA340);
  }
  return result;
}

uint64_t sub_1A91F5D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A91F5DB4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABA318);
    v8 = a2();
    result = MEMORY[0x1AF414014](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A91F5E1C()
{
  unint64_t result;

  result = qword_1EEABA358;
  if (!qword_1EEABA358)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PlaybackIntent.Option, &type metadata for PlaybackIntent.Option);
    atomic_store(result, (unint64_t *)&qword_1EEABA358);
  }
  return result;
}

uint64_t sub_1A91F5E60@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A91F17C8(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1A91F5E7C()
{
  unint64_t result;

  result = qword_1EEABA368;
  if (!qword_1EEABA368)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PlaybackIntent.Option, &type metadata for PlaybackIntent.Option);
    atomic_store(result, (unint64_t *)&qword_1EEABA368);
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for PlaybackIntent(unint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  void (*v89)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  char *__dst;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(char *, uint64_t, uint64_t);
  int *v103;
  int *v104;
  uint64_t v105;
  uint64_t v106;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_BYTE *)(a2 + 32);
    sub_1A912C880(*(_QWORD *)a2, v8, v9, v10, v11);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = v11;
    if (*(_BYTE *)(v3 + 120) == 2)
    {
      v12 = *(_OWORD *)(v3 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(v3 + 72);
      *(_OWORD *)(a1 + 88) = v12;
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(v3 + 104);
      *(_DWORD *)(a1 + 119) = *(_DWORD *)(v3 + 119);
      v13 = *(_OWORD *)(v3 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(v3 + 40);
      *(_OWORD *)(a1 + 56) = v13;
    }
    else
    {
      v15 = *(_QWORD *)(v3 + 40);
      v16 = *(_QWORD *)(v3 + 48);
      v17 = *(_QWORD *)(v3 + 56);
      v18 = *(_QWORD *)(v3 + 64);
      v19 = *(_QWORD *)(v3 + 72);
      v20 = *(_QWORD *)(v3 + 80);
      v103 = v6;
      v105 = v3;
      v22 = *(_QWORD *)(v3 + 88);
      v21 = *(_QWORD *)(v3 + 96);
      v23 = *(_BYTE *)(v3 + 104);
      sub_1A90519B4(v15, v16, v17, v18, v19, v20, v22, v21, v23);
      *(_QWORD *)(a1 + 40) = v15;
      *(_QWORD *)(a1 + 48) = v16;
      *(_QWORD *)(a1 + 56) = v17;
      *(_QWORD *)(a1 + 64) = v18;
      *(_QWORD *)(a1 + 72) = v19;
      *(_QWORD *)(a1 + 80) = v20;
      *(_QWORD *)(a1 + 88) = v22;
      *(_QWORD *)(a1 + 96) = v21;
      *(_BYTE *)(a1 + 104) = v23;
      v6 = v103;
      v3 = v105;
      *(_BYTE *)(a1 + 105) = *(_BYTE *)(v105 + 105);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(v105 + 112);
      *(_BYTE *)(a1 + 120) = *(_BYTE *)(v105 + 120);
      *(_WORD *)(a1 + 121) = *(_WORD *)(v105 + 121);
    }
    v24 = v6[6];
    v25 = (_QWORD *)(a1 + v24);
    v26 = (_QWORD *)(v3 + v24);
    v27 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v28 = *((_QWORD *)v27 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v96 = v28;
      v30 = v26[1];
      v104 = v6;
      *v25 = *v26;
      v25[1] = v30;
      v31 = v26[3];
      v25[2] = v26[2];
      v25[3] = v31;
      v32 = v26[5];
      v25[4] = v26[4];
      v25[5] = v32;
      v25[6] = v26[6];
      *((_BYTE *)v25 + 56) = *((_BYTE *)v26 + 56);
      v33 = v26[8];
      *((_BYTE *)v25 + 72) = *((_BYTE *)v26 + 72);
      v25[8] = v33;
      v34 = v26[11];
      v25[10] = v26[10];
      v25[11] = v34;
      v35 = v26[13];
      v25[12] = v26[12];
      v25[13] = v35;
      v36 = v26[15];
      v25[14] = v26[14];
      v25[15] = v36;
      v37 = v27[12];
      __dst = (char *)v25 + v37;
      v97 = (char *)v26 + v37;
      v38 = sub_1A93F726C();
      v101 = *(_QWORD *)(v38 - 8);
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v102 = v39;
      if (v39(v97, 1, v38))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(__dst, v97, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(__dst, v97, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(__dst, 0, 1, v38);
      }
      v41 = v27[13];
      v42 = (_QWORD *)((char *)v25 + v41);
      v43 = (_QWORD *)((char *)v26 + v41);
      v44 = v43[1];
      *v42 = *v43;
      v42[1] = v44;
      *(_QWORD *)((char *)v25 + v27[14]) = *(_QWORD *)((char *)v26 + v27[14]);
      v45 = v27[15];
      v46 = (char *)v25 + v45;
      v47 = (char *)v26 + v45;
      *(_QWORD *)v46 = *(_QWORD *)v47;
      v46[8] = v47[8];
      v48 = v27[16];
      v49 = (char *)v25 + v48;
      v50 = (char *)v26 + v48;
      swift_bridgeObjectRetain();
      v106 = v3;
      v100 = v38;
      if (v39(v50, 1, v38))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v49, v50, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v49, 0, 1, v38);
      }
      v52 = v27[17];
      v53 = (_QWORD *)((char *)v25 + v52);
      v54 = (_QWORD *)((char *)v26 + v52);
      v55 = v54[1];
      *v53 = *v54;
      v53[1] = v55;
      *(_QWORD *)((char *)v25 + v27[18]) = *(_QWORD *)((char *)v26 + v27[18]);
      *((_BYTE *)v25 + v27[19]) = *((_BYTE *)v26 + v27[19]);
      v56 = v27[20];
      v98 = (char *)v25 + v56;
      v57 = (char *)v26 + v56;
      v58 = sub_1A93F738C();
      v59 = *(_QWORD *)(v58 - 8);
      v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v60(v57, 1, v58))
      {
        v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
        memcpy(v98, v57, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v98, v57, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v98, 0, 1, v58);
      }
      v62 = v27[21];
      v63 = (_QWORD *)((char *)v25 + v62);
      v64 = (_QWORD *)((char *)v26 + v62);
      v65 = v64[1];
      *v63 = *v64;
      v63[1] = v65;
      *((_BYTE *)v25 + v27[22]) = *((_BYTE *)v26 + v27[22]);
      *((_BYTE *)v25 + v27[23]) = *((_BYTE *)v26 + v27[23]);
      *((_BYTE *)v25 + v27[24]) = *((_BYTE *)v26 + v27[24]);
      *((_BYTE *)v25 + v27[25]) = *((_BYTE *)v26 + v27[25]);
      *((_BYTE *)v25 + v27[26]) = *((_BYTE *)v26 + v27[26]);
      *((_BYTE *)v25 + v27[27]) = *((_BYTE *)v26 + v27[27]);
      *((_BYTE *)v25 + v27[28]) = *((_BYTE *)v26 + v27[28]);
      *(_QWORD *)((char *)v25 + v27[29]) = *(_QWORD *)((char *)v26 + v27[29]);
      *(_QWORD *)((char *)v25 + v27[30]) = *(_QWORD *)((char *)v26 + v27[30]);
      *((_BYTE *)v25 + v27[31]) = *((_BYTE *)v26 + v27[31]);
      v66 = v27[32];
      v67 = (_QWORD *)((char *)v25 + v66);
      v68 = (_QWORD *)((char *)v26 + v66);
      v69 = v68[1];
      *v67 = *v68;
      v67[1] = v69;
      *(_QWORD *)((char *)v25 + v27[33]) = *(_QWORD *)((char *)v26 + v27[33]);
      v70 = v27[34];
      v71 = (_QWORD *)((char *)v25 + v70);
      v72 = (_QWORD *)((char *)v26 + v70);
      v73 = v72[1];
      *v71 = *v72;
      v71[1] = v73;
      v74 = v27[35];
      v75 = (_QWORD *)((char *)v25 + v74);
      v76 = (_QWORD *)((char *)v26 + v74);
      v77 = v76[1];
      *v75 = *v76;
      v75[1] = v77;
      v78 = v27[36];
      v99 = (char *)v25 + v78;
      v79 = (char *)v26 + v78;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v102(v79, 1, v100))
      {
        v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v99, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v99, v79, v100);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v99, 0, 1, v100);
      }
      v81 = v27[37];
      v82 = (_QWORD *)((char *)v25 + v81);
      v83 = (_QWORD *)((char *)v26 + v81);
      v84 = v83[1];
      *v82 = *v83;
      v82[1] = v84;
      v85 = v27[38];
      v86 = (_QWORD *)((char *)v25 + v85);
      v87 = (_QWORD *)((char *)v26 + v85);
      v88 = v87[1];
      *v86 = *v87;
      v86[1] = v88;
      *((_BYTE *)v25 + v27[39]) = *((_BYTE *)v26 + v27[39]);
      *((_BYTE *)v25 + v27[40]) = *((_BYTE *)v26 + v27[40]);
      *((_BYTE *)v25 + v27[41]) = *((_BYTE *)v26 + v27[41]);
      *((_BYTE *)v25 + v27[42]) = *((_BYTE *)v26 + v27[42]);
      *((_BYTE *)v25 + v27[43]) = *((_BYTE *)v26 + v27[43]);
      *((_BYTE *)v25 + v27[44]) = *((_BYTE *)v26 + v27[44]);
      *((_BYTE *)v25 + v27[45]) = *((_BYTE *)v26 + v27[45]);
      v89 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v96 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v89(v25, 0, 1, v27);
      v6 = v104;
      v3 = v106;
    }
    v90 = v6[8];
    *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(v3 + v6[7]);
    v91 = (_QWORD *)(a1 + v90);
    v92 = (_QWORD *)(v3 + v90);
    v93 = v92[1];
    *v91 = *v92;
    v91[1] = v93;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PlaybackIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1A912C6B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  if (*(_BYTE *)(a1 + 120) != 2)
    sub_1A90531EC(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + v5[12];
    v7 = sub_1A93F726C();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_bridgeObjectRelease();
    v10 = v4 + v5[16];
    if (!v9(v10, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
    swift_bridgeObjectRelease();
    swift_release();
    v11 = v4 + v5[20];
    v12 = sub_1A93F738C();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v4 + v5[36];
    if (!v9(v14, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v14, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PlaybackIntent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  void (*v87)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  char *v93;
  char *__dst;
  char *__dsta;
  char *__dstb;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(char *, uint64_t, uint64_t);
  int *v103;
  int *v104;

  v4 = a2;
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 32);
  sub_1A912C880(*(_QWORD *)a2, v7, v8, v9, v10);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  if (*(_BYTE *)(v4 + 120) == 2)
  {
    v11 = *(_OWORD *)(v4 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(v4 + 72);
    *(_OWORD *)(a1 + 88) = v11;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(v4 + 104);
    *(_DWORD *)(a1 + 119) = *(_DWORD *)(v4 + 119);
    v12 = *(_OWORD *)(v4 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(v4 + 40);
    *(_OWORD *)(a1 + 56) = v12;
  }
  else
  {
    v13 = *(_QWORD *)(v4 + 40);
    v14 = *(_QWORD *)(v4 + 48);
    v15 = *(_QWORD *)(v4 + 56);
    v16 = *(_QWORD *)(v4 + 64);
    v17 = *(_QWORD *)(v4 + 72);
    v18 = *(_QWORD *)(v4 + 80);
    v101 = v4;
    v103 = a3;
    v20 = *(_QWORD *)(v4 + 88);
    v19 = *(_QWORD *)(v4 + 96);
    v21 = *(_BYTE *)(v4 + 104);
    sub_1A90519B4(v13, v14, v15, v16, v17, v18, v20, v19, v21);
    *(_QWORD *)(a1 + 40) = v13;
    *(_QWORD *)(a1 + 48) = v14;
    *(_QWORD *)(a1 + 56) = v15;
    *(_QWORD *)(a1 + 64) = v16;
    *(_QWORD *)(a1 + 72) = v17;
    *(_QWORD *)(a1 + 80) = v18;
    *(_QWORD *)(a1 + 88) = v20;
    *(_QWORD *)(a1 + 96) = v19;
    *(_BYTE *)(a1 + 104) = v21;
    v4 = v101;
    a3 = v103;
    *(_BYTE *)(a1 + 105) = *(_BYTE *)(v101 + 105);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(v101 + 112);
    *(_BYTE *)(a1 + 120) = *(_BYTE *)(v101 + 120);
    *(_WORD *)(a1 + 121) = *(_WORD *)(v101 + 121);
  }
  v22 = a3[6];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(v4 + v22);
  v25 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v26 = *((_QWORD *)v25 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v98 = v26;
    v28 = v24[1];
    v104 = a3;
    *v23 = *v24;
    v23[1] = v28;
    v29 = v24[3];
    v23[2] = v24[2];
    v23[3] = v29;
    v30 = v24[5];
    v23[4] = v24[4];
    v23[5] = v30;
    v23[6] = v24[6];
    *((_BYTE *)v23 + 56) = *((_BYTE *)v24 + 56);
    v31 = v24[8];
    *((_BYTE *)v23 + 72) = *((_BYTE *)v24 + 72);
    v23[8] = v31;
    v32 = v24[11];
    v23[10] = v24[10];
    v23[11] = v32;
    v33 = v24[13];
    v23[12] = v24[12];
    v23[13] = v33;
    v34 = v24[15];
    v23[14] = v24[14];
    v23[15] = v34;
    v35 = v25[12];
    __dst = (char *)v23 + v35;
    v93 = (char *)v24 + v35;
    v36 = sub_1A93F726C();
    v100 = *(_QWORD *)(v36 - 8);
    v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v102 = v37;
    if (v37(v93, 1, v36))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(__dst, v93, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(__dst, v93, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(__dst, 0, 1, v36);
    }
    v39 = v25[13];
    v40 = (_QWORD *)((char *)v23 + v39);
    v41 = (_QWORD *)((char *)v24 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    *(_QWORD *)((char *)v23 + v25[14]) = *(_QWORD *)((char *)v24 + v25[14]);
    v43 = v25[15];
    v44 = (char *)v23 + v43;
    v45 = (char *)v24 + v43;
    *(_QWORD *)v44 = *(_QWORD *)v45;
    v44[8] = v45[8];
    v46 = v25[16];
    v47 = (char *)v23 + v46;
    v48 = (char *)v24 + v46;
    swift_bridgeObjectRetain();
    v99 = a1;
    v97 = v36;
    if (v37(v48, 1, v36))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v47, v48, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v47, 0, 1, v36);
    }
    v50 = v25[17];
    v51 = (_QWORD *)((char *)v23 + v50);
    v52 = (_QWORD *)((char *)v24 + v50);
    v53 = v52[1];
    *v51 = *v52;
    v51[1] = v53;
    *(_QWORD *)((char *)v23 + v25[18]) = *(_QWORD *)((char *)v24 + v25[18]);
    *((_BYTE *)v23 + v25[19]) = *((_BYTE *)v24 + v25[19]);
    v54 = v25[20];
    __dsta = (char *)v23 + v54;
    v55 = (char *)v24 + v54;
    v56 = sub_1A93F738C();
    v57 = *(_QWORD *)(v56 - 8);
    v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v58(v55, 1, v56))
    {
      v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(__dsta, v55, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(__dsta, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(__dsta, 0, 1, v56);
    }
    v60 = v25[21];
    v61 = (_QWORD *)((char *)v23 + v60);
    v62 = (_QWORD *)((char *)v24 + v60);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    *((_BYTE *)v23 + v25[22]) = *((_BYTE *)v24 + v25[22]);
    *((_BYTE *)v23 + v25[23]) = *((_BYTE *)v24 + v25[23]);
    *((_BYTE *)v23 + v25[24]) = *((_BYTE *)v24 + v25[24]);
    *((_BYTE *)v23 + v25[25]) = *((_BYTE *)v24 + v25[25]);
    *((_BYTE *)v23 + v25[26]) = *((_BYTE *)v24 + v25[26]);
    *((_BYTE *)v23 + v25[27]) = *((_BYTE *)v24 + v25[27]);
    *((_BYTE *)v23 + v25[28]) = *((_BYTE *)v24 + v25[28]);
    *(_QWORD *)((char *)v23 + v25[29]) = *(_QWORD *)((char *)v24 + v25[29]);
    *(_QWORD *)((char *)v23 + v25[30]) = *(_QWORD *)((char *)v24 + v25[30]);
    *((_BYTE *)v23 + v25[31]) = *((_BYTE *)v24 + v25[31]);
    v64 = v25[32];
    v65 = (_QWORD *)((char *)v23 + v64);
    v66 = (_QWORD *)((char *)v24 + v64);
    v67 = v66[1];
    *v65 = *v66;
    v65[1] = v67;
    *(_QWORD *)((char *)v23 + v25[33]) = *(_QWORD *)((char *)v24 + v25[33]);
    v68 = v25[34];
    v69 = (_QWORD *)((char *)v23 + v68);
    v70 = (_QWORD *)((char *)v24 + v68);
    v71 = v70[1];
    *v69 = *v70;
    v69[1] = v71;
    v72 = v25[35];
    v73 = (_QWORD *)((char *)v23 + v72);
    v74 = (_QWORD *)((char *)v24 + v72);
    v75 = v74[1];
    *v73 = *v74;
    v73[1] = v75;
    v76 = v25[36];
    __dstb = (char *)v23 + v76;
    v77 = (char *)v24 + v76;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v102(v77, 1, v97))
    {
      v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(__dstb, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(__dstb, v77, v97);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(__dstb, 0, 1, v97);
    }
    v79 = v25[37];
    v80 = (_QWORD *)((char *)v23 + v79);
    v81 = (_QWORD *)((char *)v24 + v79);
    v82 = v81[1];
    *v80 = *v81;
    v80[1] = v82;
    v83 = v25[38];
    v84 = (_QWORD *)((char *)v23 + v83);
    v85 = (_QWORD *)((char *)v24 + v83);
    v86 = v85[1];
    *v84 = *v85;
    v84[1] = v86;
    *((_BYTE *)v23 + v25[39]) = *((_BYTE *)v24 + v25[39]);
    *((_BYTE *)v23 + v25[40]) = *((_BYTE *)v24 + v25[40]);
    *((_BYTE *)v23 + v25[41]) = *((_BYTE *)v24 + v25[41]);
    *((_BYTE *)v23 + v25[42]) = *((_BYTE *)v24 + v25[42]);
    *((_BYTE *)v23 + v25[43]) = *((_BYTE *)v24 + v25[43]);
    *((_BYTE *)v23 + v25[44]) = *((_BYTE *)v24 + v25[44]);
    *((_BYTE *)v23 + v25[45]) = *((_BYTE *)v24 + v25[45]);
    v87 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v98 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v87(v23, 0, 1, v25);
    a1 = v99;
    a3 = v104;
  }
  v88 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(v4 + a3[7]);
  v89 = (_QWORD *)(a1 + v88);
  v90 = (_QWORD *)(v4 + v88);
  v91 = v90[1];
  *v89 = *v90;
  v89[1] = v91;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlaybackIntent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  _OWORD *v16;
  _OWORD *v17;
  int v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  int *v55;
  uint64_t v56;
  uint64_t (*v57)(_QWORD *, uint64_t, int *);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t (*v73)(char *, uint64_t, uint64_t);
  int v74;
  int v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  void (*v118)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  char v126;
  uint64_t v127;
  char *v128;
  char *v129;
  int v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t (*v141)(char *, uint64_t, uint64_t);
  int v142;
  int v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  char *v158;
  char *v159;
  int v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  _QWORD *v165;
  uint64_t v166;
  _QWORD *v167;
  _QWORD *v168;
  uint64_t v169;
  _QWORD *v170;
  _QWORD *v171;
  char *v173;
  char *__dst;
  char *__dsta;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t (*v180)(char *, uint64_t, uint64_t);
  uint64_t v181;
  char v182;
  char v183;
  uint64_t v184;
  int *v185;
  int *v186;
  int *v187;
  int *v188;

  v4 = a2;
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 32);
  sub_1A912C880(*(_QWORD *)a2, v7, v8, v9, v10);
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  v15 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v10;
  sub_1A912C6B4(v11, v12, v13, v14, v15);
  v16 = (_OWORD *)(a1 + 40);
  v17 = (_OWORD *)(v4 + 40);
  v18 = *(unsigned __int8 *)(v4 + 120);
  if (*(_BYTE *)(a1 + 120) == 2)
  {
    if (v18 == 2)
    {
      v19 = *(_OWORD *)(v4 + 56);
      *v16 = *v17;
      *(_OWORD *)(a1 + 56) = v19;
      v20 = *(_OWORD *)(v4 + 72);
      v21 = *(_OWORD *)(v4 + 88);
      v22 = *(_OWORD *)(v4 + 104);
      *(_DWORD *)(a1 + 119) = *(_DWORD *)(v4 + 119);
      *(_OWORD *)(a1 + 88) = v21;
      *(_OWORD *)(a1 + 104) = v22;
      *(_OWORD *)(a1 + 72) = v20;
      goto LABEL_9;
    }
    v27 = *(_QWORD *)(v4 + 40);
    v28 = *(_QWORD *)(v4 + 48);
    v29 = *(_QWORD *)(v4 + 56);
    v30 = *(_QWORD *)(v4 + 64);
    v31 = *(_QWORD *)(v4 + 72);
    v32 = *(_QWORD *)(v4 + 80);
    v185 = a3;
    v33 = *(_QWORD *)(v4 + 88);
    v34 = *(_QWORD *)(v4 + 96);
    v182 = *(_BYTE *)(v4 + 104);
    sub_1A90519B4(v27, v28, v29, v30, v31, v32, v33, v34, v182);
    *(_QWORD *)(a1 + 40) = v27;
    *(_QWORD *)(a1 + 48) = v28;
    *(_QWORD *)(a1 + 56) = v29;
    *(_QWORD *)(a1 + 64) = v30;
    *(_QWORD *)(a1 + 72) = v31;
    *(_QWORD *)(a1 + 80) = v32;
    *(_QWORD *)(a1 + 88) = v33;
    *(_QWORD *)(a1 + 96) = v34;
    a3 = v185;
    *(_BYTE *)(a1 + 104) = v182;
  }
  else
  {
    if (v18 == 2)
    {
      sub_1A916DE60(a1 + 40);
      v23 = *(_OWORD *)(v4 + 56);
      *v16 = *v17;
      *(_OWORD *)(a1 + 56) = v23;
      v25 = *(_OWORD *)(v4 + 88);
      v24 = *(_OWORD *)(v4 + 104);
      v26 = *(_OWORD *)(v4 + 72);
      *(_DWORD *)(a1 + 119) = *(_DWORD *)(v4 + 119);
      *(_OWORD *)(a1 + 88) = v25;
      *(_OWORD *)(a1 + 104) = v24;
      *(_OWORD *)(a1 + 72) = v26;
      goto LABEL_9;
    }
    v35 = *(_QWORD *)(v4 + 40);
    v36 = *(_QWORD *)(v4 + 48);
    v37 = *(_QWORD *)(v4 + 56);
    v38 = *(_QWORD *)(v4 + 64);
    v40 = *(_QWORD *)(v4 + 72);
    v39 = *(_QWORD *)(v4 + 80);
    v186 = a3;
    v42 = *(_QWORD *)(v4 + 88);
    v41 = *(_QWORD *)(v4 + 96);
    v183 = *(_BYTE *)(v4 + 104);
    sub_1A90519B4(v35, v36, v37, v38, v40, v39, v42, v41, v183);
    v43 = *(_QWORD *)(a1 + 40);
    v44 = *(_QWORD *)(a1 + 48);
    v45 = *(_QWORD *)(a1 + 56);
    v46 = *(_QWORD *)(a1 + 64);
    v47 = *(_QWORD *)(a1 + 72);
    v48 = *(_QWORD *)(a1 + 80);
    v49 = *(_QWORD *)(a1 + 88);
    v50 = *(_QWORD *)(a1 + 96);
    v51 = *(_BYTE *)(a1 + 104);
    *(_QWORD *)(a1 + 40) = v35;
    *(_QWORD *)(a1 + 48) = v36;
    *(_QWORD *)(a1 + 56) = v37;
    *(_QWORD *)(a1 + 64) = v38;
    *(_QWORD *)(a1 + 72) = v40;
    *(_QWORD *)(a1 + 80) = v39;
    *(_QWORD *)(a1 + 88) = v42;
    *(_QWORD *)(a1 + 96) = v41;
    a3 = v186;
    *(_BYTE *)(a1 + 104) = v183;
    sub_1A90531EC(v43, v44, v45, v46, v47, v48, v49, v50, v51);
  }
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(v4 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v4 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(v4 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(v4 + 121);
  *(_BYTE *)(a1 + 122) = *(_BYTE *)(v4 + 122);
LABEL_9:
  v52 = a3[6];
  v53 = (_QWORD *)(a1 + v52);
  v54 = (_QWORD *)(v4 + v52);
  v55 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v56 = *((_QWORD *)v55 - 1);
  v57 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v56 + 48);
  v58 = v57(v53, 1, v55);
  v59 = v57(v54, 1, v55);
  if (!v58)
  {
    if (v59)
    {
      sub_1A9064714((uint64_t)v53, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      goto LABEL_15;
    }
    v184 = v4;
    *v53 = *v54;
    v53[1] = v54[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v53[2] = v54[2];
    v53[3] = v54[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v53[4] = v54[4];
    v53[5] = v54[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v67 = v54[6];
    *((_BYTE *)v53 + 56) = *((_BYTE *)v54 + 56);
    v53[6] = v67;
    v68 = v54[8];
    *((_BYTE *)v53 + 72) = *((_BYTE *)v54 + 72);
    v53[8] = v68;
    v53[10] = v54[10];
    v53[11] = v54[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v53[12] = v54[12];
    v53[13] = v54[13];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v53[14] = v54[14];
    v53[15] = v54[15];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v69 = v55[12];
    v70 = (char *)v53 + v69;
    v71 = (char *)v54 + v69;
    v72 = sub_1A93F726C();
    v181 = *(_QWORD *)(v72 - 8);
    v73 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v181 + 48);
    v74 = v73(v70, 1, v72);
    v180 = v73;
    v75 = v73(v71, 1, v72);
    if (v74)
    {
      if (!v75)
      {
        (*(void (**)(char *, char *, uint64_t))(v181 + 16))(v70, v71, v72);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v181 + 56))(v70, 0, 1, v72);
        goto LABEL_33;
      }
    }
    else
    {
      if (!v75)
      {
        (*(void (**)(char *, char *, uint64_t))(v181 + 24))(v70, v71, v72);
LABEL_33:
        v120 = v55[13];
        v121 = (_QWORD *)((char *)v53 + v120);
        v122 = (_QWORD *)((char *)v54 + v120);
        *v121 = *v122;
        v121[1] = v122[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v53 + v55[14]) = *(_QWORD *)((char *)v54 + v55[14]);
        v123 = v55[15];
        v124 = (char *)v53 + v123;
        v125 = (char *)v54 + v123;
        v126 = v125[8];
        *(_QWORD *)v124 = *(_QWORD *)v125;
        v124[8] = v126;
        v127 = v55[16];
        v128 = (char *)v53 + v127;
        v129 = (char *)v54 + v127;
        v130 = v73((char *)v53 + v127, 1, v72);
        v131 = v73(v129, 1, v72);
        v188 = a3;
        v178 = v72;
        if (v130)
        {
          if (!v131)
          {
            (*(void (**)(char *, char *, uint64_t))(v181 + 16))(v128, v129, v72);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v181 + 56))(v128, 0, 1, v72);
            goto LABEL_39;
          }
        }
        else
        {
          if (!v131)
          {
            (*(void (**)(char *, char *, uint64_t))(v181 + 24))(v128, v129, v72);
LABEL_39:
            v133 = v55[17];
            v134 = (_QWORD *)((char *)v53 + v133);
            v135 = (_QWORD *)((char *)v54 + v133);
            *v134 = *v135;
            v134[1] = v135[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)((char *)v53 + v55[18]) = *(_QWORD *)((char *)v54 + v55[18]);
            swift_retain();
            swift_release();
            *((_BYTE *)v53 + v55[19]) = *((_BYTE *)v54 + v55[19]);
            v136 = v55[20];
            v137 = (char *)v53 + v136;
            v138 = (char *)v54 + v136;
            v139 = sub_1A93F738C();
            v140 = *(_QWORD *)(v139 - 8);
            v141 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v140 + 48);
            v142 = v141(v137, 1, v139);
            v143 = v141(v138, 1, v139);
            if (v142)
            {
              if (!v143)
              {
                (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v137, v138, v139);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v137, 0, 1, v139);
                goto LABEL_45;
              }
            }
            else
            {
              if (!v143)
              {
                (*(void (**)(char *, char *, uint64_t))(v140 + 24))(v137, v138, v139);
LABEL_45:
                v145 = v55[21];
                v146 = (_QWORD *)((char *)v53 + v145);
                v147 = (_QWORD *)((char *)v54 + v145);
                *v146 = *v147;
                v146[1] = v147[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *((_BYTE *)v53 + v55[22]) = *((_BYTE *)v54 + v55[22]);
                *((_BYTE *)v53 + v55[23]) = *((_BYTE *)v54 + v55[23]);
                *((_BYTE *)v53 + v55[24]) = *((_BYTE *)v54 + v55[24]);
                *((_BYTE *)v53 + v55[25]) = *((_BYTE *)v54 + v55[25]);
                *((_BYTE *)v53 + v55[26]) = *((_BYTE *)v54 + v55[26]);
                *((_BYTE *)v53 + v55[27]) = *((_BYTE *)v54 + v55[27]);
                *((_BYTE *)v53 + v55[28]) = *((_BYTE *)v54 + v55[28]);
                *(_QWORD *)((char *)v53 + v55[29]) = *(_QWORD *)((char *)v54 + v55[29]);
                *(_QWORD *)((char *)v53 + v55[30]) = *(_QWORD *)((char *)v54 + v55[30]);
                *((_BYTE *)v53 + v55[31]) = *((_BYTE *)v54 + v55[31]);
                v148 = v55[32];
                v149 = (_QWORD *)((char *)v53 + v148);
                v150 = (_QWORD *)((char *)v54 + v148);
                *v149 = *v150;
                v149[1] = v150[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_QWORD *)((char *)v53 + v55[33]) = *(_QWORD *)((char *)v54 + v55[33]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v151 = v55[34];
                v152 = (_QWORD *)((char *)v53 + v151);
                v153 = (_QWORD *)((char *)v54 + v151);
                *v152 = *v153;
                v152[1] = v153[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v154 = v55[35];
                v155 = (_QWORD *)((char *)v53 + v154);
                v156 = (_QWORD *)((char *)v54 + v154);
                *v155 = *v156;
                v155[1] = v156[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v157 = v55[36];
                v158 = (char *)v53 + v157;
                v159 = (char *)v54 + v157;
                v160 = v180((char *)v53 + v157, 1, v178);
                v161 = v180(v159, 1, v178);
                a3 = v188;
                if (v160)
                {
                  if (!v161)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v181 + 16))(v158, v159, v178);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v181 + 56))(v158, 0, 1, v178);
LABEL_51:
                    v163 = v55[37];
                    v164 = (_QWORD *)((char *)v53 + v163);
                    v165 = (_QWORD *)((char *)v54 + v163);
                    *v164 = *v165;
                    v164[1] = v165[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v166 = v55[38];
                    v167 = (_QWORD *)((char *)v53 + v166);
                    v168 = (_QWORD *)((char *)v54 + v166);
                    *v167 = *v168;
                    v167[1] = v168[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *((_BYTE *)v53 + v55[39]) = *((_BYTE *)v54 + v55[39]);
                    *((_BYTE *)v53 + v55[40]) = *((_BYTE *)v54 + v55[40]);
                    *((_BYTE *)v53 + v55[41]) = *((_BYTE *)v54 + v55[41]);
                    *((_BYTE *)v53 + v55[42]) = *((_BYTE *)v54 + v55[42]);
                    *((_BYTE *)v53 + v55[43]) = *((_BYTE *)v54 + v55[43]);
                    *((_BYTE *)v53 + v55[44]) = *((_BYTE *)v54 + v55[44]);
                    *((_BYTE *)v53 + v55[45]) = *((_BYTE *)v54 + v55[45]);
LABEL_52:
                    v4 = v184;
                    goto LABEL_53;
                  }
                }
                else
                {
                  if (!v161)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v181 + 24))(v158, v159, v178);
                    goto LABEL_51;
                  }
                  (*(void (**)(char *, uint64_t))(v181 + 8))(v158, v178);
                }
                v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
                memcpy(v158, v159, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
                goto LABEL_51;
              }
              (*(void (**)(char *, uint64_t))(v140 + 8))(v137, v139);
            }
            v144 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
            memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
            goto LABEL_45;
          }
          (*(void (**)(char *, uint64_t))(v181 + 8))(v128, v72);
        }
        v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
        goto LABEL_39;
      }
      (*(void (**)(char *, uint64_t))(v181 + 8))(v70, v72);
    }
    v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    goto LABEL_33;
  }
  if (!v59)
  {
    v177 = v56;
    v184 = v4;
    v187 = a3;
    *v53 = *v54;
    v53[1] = v54[1];
    v53[2] = v54[2];
    v53[3] = v54[3];
    v53[4] = v54[4];
    v53[5] = v54[5];
    v60 = v54[6];
    *((_BYTE *)v53 + 56) = *((_BYTE *)v54 + 56);
    v53[6] = v60;
    v61 = v54[8];
    *((_BYTE *)v53 + 72) = *((_BYTE *)v54 + 72);
    v53[8] = v61;
    v53[10] = v54[10];
    v53[11] = v54[11];
    v53[12] = v54[12];
    v53[13] = v54[13];
    v53[14] = v54[14];
    v53[15] = v54[15];
    v62 = v55[12];
    __dst = (char *)v53 + v62;
    v173 = (char *)v54 + v62;
    v63 = sub_1A93F726C();
    v179 = *(_QWORD *)(v63 - 8);
    v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v179 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v64(v173, 1, v63))
    {
      v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(__dst, v173, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v179 + 16))(__dst, v173, v63);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v179 + 56))(__dst, 0, 1, v63);
    }
    v76 = v55[13];
    v77 = (_QWORD *)((char *)v53 + v76);
    v78 = (_QWORD *)((char *)v54 + v76);
    *v77 = *v78;
    v77[1] = v78[1];
    *(_QWORD *)((char *)v53 + v55[14]) = *(_QWORD *)((char *)v54 + v55[14]);
    v79 = v55[15];
    v80 = (char *)v53 + v79;
    v81 = (char *)v54 + v79;
    v82 = *(_QWORD *)v81;
    v80[8] = v81[8];
    *(_QWORD *)v80 = v82;
    v83 = v55[16];
    v84 = (char *)v53 + v83;
    v85 = (char *)v54 + v83;
    swift_bridgeObjectRetain();
    v176 = v63;
    if (v64(v85, 1, v63))
    {
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v179 + 16))(v84, v85, v63);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v179 + 56))(v84, 0, 1, v63);
    }
    v87 = v55[17];
    v88 = (_QWORD *)((char *)v53 + v87);
    v89 = (_QWORD *)((char *)v54 + v87);
    *v88 = *v89;
    v88[1] = v89[1];
    *(_QWORD *)((char *)v53 + v55[18]) = *(_QWORD *)((char *)v54 + v55[18]);
    *((_BYTE *)v53 + v55[19]) = *((_BYTE *)v54 + v55[19]);
    v90 = v55[20];
    __dsta = (char *)v53 + v90;
    v91 = (char *)v54 + v90;
    v92 = sub_1A93F738C();
    v93 = *(_QWORD *)(v92 - 8);
    v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v94(v91, 1, v92))
    {
      v95 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(__dsta, v91, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))(__dsta, v91, v92);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(__dsta, 0, 1, v92);
    }
    v96 = v55[21];
    v97 = (_QWORD *)((char *)v53 + v96);
    v98 = (_QWORD *)((char *)v54 + v96);
    *v97 = *v98;
    v97[1] = v98[1];
    *((_BYTE *)v53 + v55[22]) = *((_BYTE *)v54 + v55[22]);
    *((_BYTE *)v53 + v55[23]) = *((_BYTE *)v54 + v55[23]);
    *((_BYTE *)v53 + v55[24]) = *((_BYTE *)v54 + v55[24]);
    *((_BYTE *)v53 + v55[25]) = *((_BYTE *)v54 + v55[25]);
    *((_BYTE *)v53 + v55[26]) = *((_BYTE *)v54 + v55[26]);
    *((_BYTE *)v53 + v55[27]) = *((_BYTE *)v54 + v55[27]);
    *((_BYTE *)v53 + v55[28]) = *((_BYTE *)v54 + v55[28]);
    *(_QWORD *)((char *)v53 + v55[29]) = *(_QWORD *)((char *)v54 + v55[29]);
    *(_QWORD *)((char *)v53 + v55[30]) = *(_QWORD *)((char *)v54 + v55[30]);
    *((_BYTE *)v53 + v55[31]) = *((_BYTE *)v54 + v55[31]);
    v99 = v55[32];
    v100 = (_QWORD *)((char *)v53 + v99);
    v101 = (_QWORD *)((char *)v54 + v99);
    *v100 = *v101;
    v100[1] = v101[1];
    *(_QWORD *)((char *)v53 + v55[33]) = *(_QWORD *)((char *)v54 + v55[33]);
    v102 = v55[34];
    v103 = (_QWORD *)((char *)v53 + v102);
    v104 = (_QWORD *)((char *)v54 + v102);
    *v103 = *v104;
    v103[1] = v104[1];
    v105 = v55[35];
    v106 = (_QWORD *)((char *)v53 + v105);
    v107 = (_QWORD *)((char *)v54 + v105);
    *v106 = *v107;
    v106[1] = v107[1];
    v108 = v55[36];
    v109 = (char *)v53 + v108;
    v110 = (char *)v54 + v108;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v64(v110, 1, v176))
    {
      v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v179 + 16))(v109, v110, v176);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v179 + 56))(v109, 0, 1, v176);
    }
    a3 = v187;
    v112 = v55[37];
    v113 = (_QWORD *)((char *)v53 + v112);
    v114 = (_QWORD *)((char *)v54 + v112);
    *v113 = *v114;
    v113[1] = v114[1];
    v115 = v55[38];
    v116 = (_QWORD *)((char *)v53 + v115);
    v117 = (_QWORD *)((char *)v54 + v115);
    *v116 = *v117;
    v116[1] = v117[1];
    *((_BYTE *)v53 + v55[39]) = *((_BYTE *)v54 + v55[39]);
    *((_BYTE *)v53 + v55[40]) = *((_BYTE *)v54 + v55[40]);
    *((_BYTE *)v53 + v55[41]) = *((_BYTE *)v54 + v55[41]);
    *((_BYTE *)v53 + v55[42]) = *((_BYTE *)v54 + v55[42]);
    *((_BYTE *)v53 + v55[43]) = *((_BYTE *)v54 + v55[43]);
    *((_BYTE *)v53 + v55[44]) = *((_BYTE *)v54 + v55[44]);
    *((_BYTE *)v53 + v55[45]) = *((_BYTE *)v54 + v55[45]);
    v118 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v177 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v118(v53, 0, 1, v55);
    goto LABEL_52;
  }
LABEL_15:
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
LABEL_53:
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(v4 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v169 = a3[8];
  v170 = (_QWORD *)(a1 + v169);
  v171 = (_QWORD *)(v4 + v169);
  *v170 = *v171;
  v170[1] = v171[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PlaybackIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);

  v3 = a3;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 119) = *(_DWORD *)(a2 + 119);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(int *)(a3 + 24);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v10 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v41 = v11;
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    v8[2] = v9[2];
    *((_QWORD *)v8 + 6) = *((_QWORD *)v9 + 6);
    *((_BYTE *)v8 + 56) = *((_BYTE *)v9 + 56);
    *((_QWORD *)v8 + 8) = *((_QWORD *)v9 + 8);
    *((_BYTE *)v8 + 72) = *((_BYTE *)v9 + 72);
    v14 = v9[6];
    v8[5] = v9[5];
    v8[6] = v14;
    v8[7] = v9[7];
    v15 = v10[12];
    v16 = (char *)v8 + v15;
    v17 = (char *)v9 + v15;
    v18 = sub_1A93F726C();
    v19 = *(_QWORD *)(v18 - 8);
    v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    if (v43(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *(_OWORD *)((char *)v8 + v10[13]) = *(_OWORD *)((char *)v9 + v10[13]);
    *(_QWORD *)((char *)v8 + v10[14]) = *(_QWORD *)((char *)v9 + v10[14]);
    v21 = v10[15];
    v22 = (char *)v8 + v21;
    v23 = (char *)v9 + v21;
    v22[8] = v23[8];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v24 = v10[16];
    v25 = (char *)v8 + v24;
    v26 = (char *)v9 + v24;
    v42 = v3;
    v40 = v19;
    if (v43((char *)v9 + v24, 1, v18))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v26, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
    }
    *(_OWORD *)((char *)v8 + v10[17]) = *(_OWORD *)((char *)v9 + v10[17]);
    *(_QWORD *)((char *)v8 + v10[18]) = *(_QWORD *)((char *)v9 + v10[18]);
    *((_BYTE *)v8 + v10[19]) = *((_BYTE *)v9 + v10[19]);
    v28 = v10[20];
    v29 = (char *)v8 + v28;
    v30 = (char *)v9 + v28;
    v31 = sub_1A93F738C();
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v3 = v42;
    *(_OWORD *)((char *)v8 + v10[21]) = *(_OWORD *)((char *)v9 + v10[21]);
    *((_BYTE *)v8 + v10[22]) = *((_BYTE *)v9 + v10[22]);
    *((_BYTE *)v8 + v10[23]) = *((_BYTE *)v9 + v10[23]);
    *((_BYTE *)v8 + v10[24]) = *((_BYTE *)v9 + v10[24]);
    *((_BYTE *)v8 + v10[25]) = *((_BYTE *)v9 + v10[25]);
    *((_BYTE *)v8 + v10[26]) = *((_BYTE *)v9 + v10[26]);
    *((_BYTE *)v8 + v10[27]) = *((_BYTE *)v9 + v10[27]);
    *((_BYTE *)v8 + v10[28]) = *((_BYTE *)v9 + v10[28]);
    *(_QWORD *)((char *)v8 + v10[29]) = *(_QWORD *)((char *)v9 + v10[29]);
    *(_QWORD *)((char *)v8 + v10[30]) = *(_QWORD *)((char *)v9 + v10[30]);
    *((_BYTE *)v8 + v10[31]) = *((_BYTE *)v9 + v10[31]);
    *(_OWORD *)((char *)v8 + v10[32]) = *(_OWORD *)((char *)v9 + v10[32]);
    *(_QWORD *)((char *)v8 + v10[33]) = *(_QWORD *)((char *)v9 + v10[33]);
    *(_OWORD *)((char *)v8 + v10[34]) = *(_OWORD *)((char *)v9 + v10[34]);
    *(_OWORD *)((char *)v8 + v10[35]) = *(_OWORD *)((char *)v9 + v10[35]);
    v34 = v10[36];
    v35 = (char *)v8 + v34;
    v36 = (char *)v9 + v34;
    if (v43((char *)v9 + v34, 1, v18))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v35, v36, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v35, 0, 1, v18);
    }
    *(_OWORD *)((char *)v8 + v10[37]) = *(_OWORD *)((char *)v9 + v10[37]);
    *(_OWORD *)((char *)v8 + v10[38]) = *(_OWORD *)((char *)v9 + v10[38]);
    *((_BYTE *)v8 + v10[39]) = *((_BYTE *)v9 + v10[39]);
    *((_BYTE *)v8 + v10[40]) = *((_BYTE *)v9 + v10[40]);
    *((_BYTE *)v8 + v10[41]) = *((_BYTE *)v9 + v10[41]);
    *((_BYTE *)v8 + v10[42]) = *((_BYTE *)v9 + v10[42]);
    *((_BYTE *)v8 + v10[43]) = *((_BYTE *)v9 + v10[43]);
    *((_BYTE *)v8 + v10[44]) = *((_BYTE *)v9 + v10[44]);
    *((_BYTE *)v8 + v10[45]) = *((_BYTE *)v9 + v10[45]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v41 + 56))(v8, 0, 1, v10);
  }
  v38 = *(int *)(v3 + 32);
  *(_QWORD *)(a1 + *(int *)(v3 + 28)) = *(_QWORD *)(a2 + *(int *)(v3 + 28));
  *(_OWORD *)(a1 + v38) = *(_OWORD *)(a2 + v38);
  return a1;
}

uint64_t assignWithTake for PlaybackIntent(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  unsigned __int8 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int *v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD *, uint64_t, int *);
  int v31;
  int v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(char *, uint64_t, uint64_t);
  int v99;
  size_t v100;
  void *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  int v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  void *v144;
  unsigned int (*v145)(char *, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t (*v150)(char *, uint64_t, uint64_t);
  int *v151;

  v6 = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v6;
  sub_1A912C6B4(v7, v8, v9, v10, v12);
  if (*(_BYTE *)(a1 + 120) == 2)
    goto LABEL_4;
  if (*(_BYTE *)(a2 + 120) == 2)
  {
    sub_1A916DE60(a1 + 40);
LABEL_4:
    v13 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v13;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 119) = *(_DWORD *)(a2 + 119);
    v14 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v14;
    goto LABEL_6;
  }
  v15 = *(_BYTE *)(a2 + 104);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 72);
  v21 = *(_QWORD *)(a1 + 80);
  v22 = *(_QWORD *)(a1 + 88);
  v23 = *(_QWORD *)(a1 + 96);
  v24 = *(_BYTE *)(a1 + 104);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = v15;
  sub_1A90531EC(v16, v17, v18, v19, v20, v21, v22, v23, v24);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  *(_BYTE *)(a1 + 122) = *(_BYTE *)(a2 + 122);
LABEL_6:
  v25 = a3[6];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v29 = *((_QWORD *)v28 - 1);
  v30 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (v32)
    {
      sub_1A9064714((uint64_t)v26, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      goto LABEL_12;
    }
    v151 = a3;
    v43 = v27[1];
    *v26 = *v27;
    v26[1] = v43;
    swift_bridgeObjectRelease();
    v44 = v27[3];
    v26[2] = v27[2];
    v26[3] = v44;
    swift_bridgeObjectRelease();
    v45 = v27[5];
    v26[4] = v27[4];
    v26[5] = v45;
    swift_bridgeObjectRelease();
    v26[6] = v27[6];
    *((_BYTE *)v26 + 56) = *((_BYTE *)v27 + 56);
    v26[8] = v27[8];
    *((_BYTE *)v26 + 72) = *((_BYTE *)v27 + 72);
    v46 = v27[11];
    v26[10] = v27[10];
    v26[11] = v46;
    swift_bridgeObjectRelease();
    v47 = v27[13];
    v26[12] = v27[12];
    v26[13] = v47;
    swift_bridgeObjectRelease();
    v48 = v27[15];
    v26[14] = v27[14];
    v26[15] = v48;
    swift_bridgeObjectRelease();
    v49 = v28[12];
    v50 = (char *)v26 + v49;
    v51 = (char *)v27 + v49;
    v52 = sub_1A93F726C();
    v147 = *(_QWORD *)(v52 - 8);
    v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v147 + 48);
    v54 = v53(v50, 1, v52);
    v150 = v53;
    v55 = v53(v51, 1, v52);
    if (v54)
    {
      if (!v55)
      {
        (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v50, 0, 1, v52);
        goto LABEL_30;
      }
    }
    else
    {
      if (!v55)
      {
        (*(void (**)(char *, char *, uint64_t))(v147 + 40))(v50, v51, v52);
LABEL_30:
        v74 = v28[13];
        v75 = (_QWORD *)((char *)v26 + v74);
        v76 = (_QWORD *)((char *)v27 + v74);
        v78 = *v76;
        v77 = v76[1];
        *v75 = v78;
        v75[1] = v77;
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v26 + v28[14]) = *(_QWORD *)((char *)v27 + v28[14]);
        v79 = v28[15];
        v80 = (char *)v26 + v79;
        v81 = (char *)v27 + v79;
        *(_QWORD *)v80 = *(_QWORD *)v81;
        v80[8] = v81[8];
        v82 = v28[16];
        v83 = (char *)v26 + v82;
        v84 = (char *)v27 + v82;
        v85 = v53((char *)v26 + v82, 1, v52);
        v86 = v53(v84, 1, v52);
        v146 = v52;
        if (v85)
        {
          if (!v86)
          {
            (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v83, v84, v52);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v83, 0, 1, v52);
            goto LABEL_36;
          }
        }
        else
        {
          if (!v86)
          {
            (*(void (**)(char *, char *, uint64_t))(v147 + 40))(v83, v84, v52);
LABEL_36:
            v88 = v28[17];
            v89 = (_QWORD *)((char *)v26 + v88);
            v90 = (_QWORD *)((char *)v27 + v88);
            v92 = *v90;
            v91 = v90[1];
            *v89 = v92;
            v89[1] = v91;
            swift_bridgeObjectRelease();
            *(_QWORD *)((char *)v26 + v28[18]) = *(_QWORD *)((char *)v27 + v28[18]);
            swift_release();
            *((_BYTE *)v26 + v28[19]) = *((_BYTE *)v27 + v28[19]);
            v93 = v28[20];
            v94 = (char *)v26 + v93;
            v95 = (char *)v27 + v93;
            v96 = sub_1A93F738C();
            v97 = *(_QWORD *)(v96 - 8);
            v98 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 48);
            v144 = v94;
            LODWORD(v94) = v98(v94, 1, v96);
            v99 = v98(v95, 1, v96);
            if ((_DWORD)v94)
            {
              if (v99)
              {
                v100 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360)
                                             - 8)
                                 + 64);
                v101 = v144;
LABEL_41:
                memcpy(v101, v95, v100);
                goto LABEL_46;
              }
              (*(void (**)(void *, char *, uint64_t))(v97 + 32))(v144, v95, v96);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v144, 0, 1, v96);
            }
            else
            {
              if (v99)
              {
                (*(void (**)(void *, uint64_t))(v97 + 8))(v144, v96);
                v100 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360)
                                             - 8)
                                 + 64);
                v101 = v144;
                goto LABEL_41;
              }
              (*(void (**)(void *, char *, uint64_t))(v97 + 40))(v144, v95, v96);
            }
LABEL_46:
            v102 = v28[21];
            v103 = (_QWORD *)((char *)v26 + v102);
            v104 = (_QWORD *)((char *)v27 + v102);
            v106 = *v104;
            v105 = v104[1];
            *v103 = v106;
            v103[1] = v105;
            swift_bridgeObjectRelease();
            *((_BYTE *)v26 + v28[22]) = *((_BYTE *)v27 + v28[22]);
            *((_BYTE *)v26 + v28[23]) = *((_BYTE *)v27 + v28[23]);
            *((_BYTE *)v26 + v28[24]) = *((_BYTE *)v27 + v28[24]);
            *((_BYTE *)v26 + v28[25]) = *((_BYTE *)v27 + v28[25]);
            *((_BYTE *)v26 + v28[26]) = *((_BYTE *)v27 + v28[26]);
            *((_BYTE *)v26 + v28[27]) = *((_BYTE *)v27 + v28[27]);
            *((_BYTE *)v26 + v28[28]) = *((_BYTE *)v27 + v28[28]);
            *(_QWORD *)((char *)v26 + v28[29]) = *(_QWORD *)((char *)v27 + v28[29]);
            *(_QWORD *)((char *)v26 + v28[30]) = *(_QWORD *)((char *)v27 + v28[30]);
            *((_BYTE *)v26 + v28[31]) = *((_BYTE *)v27 + v28[31]);
            v107 = v28[32];
            v108 = (_QWORD *)((char *)v26 + v107);
            v109 = (_QWORD *)((char *)v27 + v107);
            v111 = *v109;
            v110 = v109[1];
            *v108 = v111;
            v108[1] = v110;
            swift_bridgeObjectRelease();
            *(_QWORD *)((char *)v26 + v28[33]) = *(_QWORD *)((char *)v27 + v28[33]);
            swift_bridgeObjectRelease();
            v112 = v28[34];
            v113 = (_QWORD *)((char *)v26 + v112);
            v114 = (_QWORD *)((char *)v27 + v112);
            v116 = *v114;
            v115 = v114[1];
            *v113 = v116;
            v113[1] = v115;
            swift_bridgeObjectRelease();
            v117 = v28[35];
            v118 = (_QWORD *)((char *)v26 + v117);
            v119 = (_QWORD *)((char *)v27 + v117);
            v121 = *v119;
            v120 = v119[1];
            *v118 = v121;
            v118[1] = v120;
            swift_bridgeObjectRelease();
            v122 = v28[36];
            v123 = (char *)v26 + v122;
            v124 = (char *)v27 + v122;
            v125 = v150((char *)v26 + v122, 1, v146);
            v126 = v150(v124, 1, v146);
            if (v125)
            {
              if (!v126)
              {
                (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v123, v124, v146);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v123, 0, 1, v146);
LABEL_52:
                v128 = v28[37];
                v129 = (_QWORD *)((char *)v26 + v128);
                v130 = (_QWORD *)((char *)v27 + v128);
                v132 = *v130;
                v131 = v130[1];
                *v129 = v132;
                v129[1] = v131;
                swift_bridgeObjectRelease();
                v133 = v28[38];
                v134 = (_QWORD *)((char *)v26 + v133);
                v135 = (_QWORD *)((char *)v27 + v133);
                v137 = *v135;
                v136 = v135[1];
                *v134 = v137;
                v134[1] = v136;
                swift_bridgeObjectRelease();
                *((_BYTE *)v26 + v28[39]) = *((_BYTE *)v27 + v28[39]);
                *((_BYTE *)v26 + v28[40]) = *((_BYTE *)v27 + v28[40]);
                *((_BYTE *)v26 + v28[41]) = *((_BYTE *)v27 + v28[41]);
                *((_BYTE *)v26 + v28[42]) = *((_BYTE *)v27 + v28[42]);
                *((_BYTE *)v26 + v28[43]) = *((_BYTE *)v27 + v28[43]);
                *((_BYTE *)v26 + v28[44]) = *((_BYTE *)v27 + v28[44]);
                *((_BYTE *)v26 + v28[45]) = *((_BYTE *)v27 + v28[45]);
LABEL_53:
                a3 = v151;
                goto LABEL_54;
              }
            }
            else
            {
              if (!v126)
              {
                (*(void (**)(char *, char *, uint64_t))(v147 + 40))(v123, v124, v146);
                goto LABEL_52;
              }
              (*(void (**)(char *, uint64_t))(v147 + 8))(v123, v146);
            }
            v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
            memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
            goto LABEL_52;
          }
          (*(void (**)(char *, uint64_t))(v147 + 8))(v83, v52);
        }
        v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        goto LABEL_36;
      }
      (*(void (**)(char *, uint64_t))(v147 + 8))(v50, v52);
    }
    v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    goto LABEL_30;
  }
  if (!v32)
  {
    v149 = v29;
    v151 = a3;
    v33 = *((_OWORD *)v27 + 1);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v33;
    *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
    v26[6] = v27[6];
    *((_BYTE *)v26 + 56) = *((_BYTE *)v27 + 56);
    v26[8] = v27[8];
    *((_BYTE *)v26 + 72) = *((_BYTE *)v27 + 72);
    v34 = *((_OWORD *)v27 + 6);
    *((_OWORD *)v26 + 5) = *((_OWORD *)v27 + 5);
    *((_OWORD *)v26 + 6) = v34;
    *((_OWORD *)v26 + 7) = *((_OWORD *)v27 + 7);
    v35 = v28[12];
    v36 = (char *)v26 + v35;
    v37 = (char *)v27 + v35;
    v38 = sub_1A93F726C();
    v39 = *(_QWORD *)(v38 - 8);
    v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    if (v40(v37, 1, v38))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    *(_OWORD *)((char *)v26 + v28[13]) = *(_OWORD *)((char *)v27 + v28[13]);
    *(_QWORD *)((char *)v26 + v28[14]) = *(_QWORD *)((char *)v27 + v28[14]);
    v56 = v28[15];
    v57 = (char *)v26 + v56;
    v58 = (char *)v27 + v56;
    v57[8] = v58[8];
    *(_QWORD *)v57 = *(_QWORD *)v58;
    v59 = v28[16];
    v60 = (char *)v26 + v59;
    v61 = (char *)v27 + v59;
    v145 = v40;
    v148 = v39;
    if (v40((char *)v27 + v59, 1, v38))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v60, v61, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v60, 0, 1, v38);
    }
    *(_OWORD *)((char *)v26 + v28[17]) = *(_OWORD *)((char *)v27 + v28[17]);
    *(_QWORD *)((char *)v26 + v28[18]) = *(_QWORD *)((char *)v27 + v28[18]);
    *((_BYTE *)v26 + v28[19]) = *((_BYTE *)v27 + v28[19]);
    v63 = v28[20];
    v64 = (char *)v26 + v63;
    v65 = (char *)v27 + v63;
    v66 = sub_1A93F738C();
    v67 = *(_QWORD *)(v66 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
    {
      v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v64, v65, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
    }
    *(_OWORD *)((char *)v26 + v28[21]) = *(_OWORD *)((char *)v27 + v28[21]);
    *((_BYTE *)v26 + v28[22]) = *((_BYTE *)v27 + v28[22]);
    *((_BYTE *)v26 + v28[23]) = *((_BYTE *)v27 + v28[23]);
    *((_BYTE *)v26 + v28[24]) = *((_BYTE *)v27 + v28[24]);
    *((_BYTE *)v26 + v28[25]) = *((_BYTE *)v27 + v28[25]);
    *((_BYTE *)v26 + v28[26]) = *((_BYTE *)v27 + v28[26]);
    *((_BYTE *)v26 + v28[27]) = *((_BYTE *)v27 + v28[27]);
    *((_BYTE *)v26 + v28[28]) = *((_BYTE *)v27 + v28[28]);
    *(_QWORD *)((char *)v26 + v28[29]) = *(_QWORD *)((char *)v27 + v28[29]);
    *(_QWORD *)((char *)v26 + v28[30]) = *(_QWORD *)((char *)v27 + v28[30]);
    *((_BYTE *)v26 + v28[31]) = *((_BYTE *)v27 + v28[31]);
    *(_OWORD *)((char *)v26 + v28[32]) = *(_OWORD *)((char *)v27 + v28[32]);
    *(_QWORD *)((char *)v26 + v28[33]) = *(_QWORD *)((char *)v27 + v28[33]);
    *(_OWORD *)((char *)v26 + v28[34]) = *(_OWORD *)((char *)v27 + v28[34]);
    *(_OWORD *)((char *)v26 + v28[35]) = *(_OWORD *)((char *)v27 + v28[35]);
    v69 = v28[36];
    v70 = (char *)v26 + v69;
    v71 = (char *)v27 + v69;
    if (v145((char *)v27 + v69, 1, v38))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v148 + 32))(v70, v71, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v70, 0, 1, v38);
    }
    *(_OWORD *)((char *)v26 + v28[37]) = *(_OWORD *)((char *)v27 + v28[37]);
    *(_OWORD *)((char *)v26 + v28[38]) = *(_OWORD *)((char *)v27 + v28[38]);
    *((_BYTE *)v26 + v28[39]) = *((_BYTE *)v27 + v28[39]);
    *((_BYTE *)v26 + v28[40]) = *((_BYTE *)v27 + v28[40]);
    *((_BYTE *)v26 + v28[41]) = *((_BYTE *)v27 + v28[41]);
    *((_BYTE *)v26 + v28[42]) = *((_BYTE *)v27 + v28[42]);
    *((_BYTE *)v26 + v28[43]) = *((_BYTE *)v27 + v28[43]);
    *((_BYTE *)v26 + v28[44]) = *((_BYTE *)v27 + v28[44]);
    *((_BYTE *)v26 + v28[45]) = *((_BYTE *)v27 + v28[45]);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v149 + 56))(v26, 0, 1, v28);
    goto LABEL_53;
  }
LABEL_12:
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
LABEL_54:
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v138 = a3[8];
  v139 = (_QWORD *)(a1 + v138);
  v140 = (uint64_t *)(a2 + v138);
  v142 = *v140;
  v141 = v140[1];
  *v139 = v142;
  v139[1] = v141;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackIntent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A91F8DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackIntent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A91F8E68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

char *initializeBufferWithCopyOfBuffer for PlaybackIntent.ValidationError(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  int *v29;
  uint64_t v30;
  unsigned int (*v31)(_QWORD, _QWORD, _QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  void (*v92)(char *, _QWORD, uint64_t, int *);
  uint64_t v93;
  char *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int (*v112)(char *, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  char *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  unsigned int (*v133)(char *, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  char *v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  _QWORD *v160;
  uint64_t v161;
  void (*v162)(char *, _QWORD, uint64_t, int *);
  char *v164;
  char *v165;
  char *__dst;
  char *__dsta;
  char *__dstb;
  uint64_t v169;
  uint64_t v170;
  int *v171;
  char *v172;
  char *v173;
  char *v174;
  unsigned int (*v175)(_QWORD, _QWORD, _QWORD);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  char v183;
  unsigned int (*v184)(char *, uint64_t, uint64_t);
  unsigned int (*v185)(char *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = *(_QWORD *)a2;
      v11 = *(_QWORD *)(a2 + 8);
      v12 = *(_QWORD *)(a2 + 16);
      v13 = *(_QWORD *)(a2 + 24);
      v14 = *(_BYTE *)(a2 + 32);
      sub_1A912C880(*(_QWORD *)a2, v11, v12, v13, v14);
      *(_QWORD *)a1 = v10;
      *((_QWORD *)a1 + 1) = v11;
      *((_QWORD *)a1 + 2) = v12;
      *((_QWORD *)a1 + 3) = v13;
      a1[32] = v14;
      if (*(_BYTE *)(a2 + 120) == 2)
      {
        v15 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v15;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_DWORD *)(a1 + 119) = *(_DWORD *)(a2 + 119);
        v16 = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 56) = v16;
      }
      else
      {
        v17 = *(_QWORD *)(a2 + 40);
        v18 = *(_QWORD *)(a2 + 48);
        v19 = *(_QWORD *)(a2 + 56);
        v20 = *(_QWORD *)(a2 + 64);
        v21 = *(_QWORD *)(a2 + 72);
        v22 = *(_QWORD *)(a2 + 80);
        v24 = *(_QWORD *)(a2 + 88);
        v23 = *(_QWORD *)(a2 + 96);
        v183 = *(_BYTE *)(a2 + 104);
        sub_1A90519B4(v17, v18, v19, v20, v21, v22, v24, v23, v183);
        *((_QWORD *)a1 + 5) = v17;
        *((_QWORD *)a1 + 6) = v18;
        *((_QWORD *)a1 + 7) = v19;
        *((_QWORD *)a1 + 8) = v20;
        *((_QWORD *)a1 + 9) = v21;
        *((_QWORD *)a1 + 10) = v22;
        *((_QWORD *)a1 + 11) = v24;
        *((_QWORD *)a1 + 12) = v23;
        a1[104] = v183;
        a1[105] = *(_BYTE *)(a2 + 105);
        *((_QWORD *)a1 + 14) = *(_QWORD *)(a2 + 112);
        a1[120] = *(_BYTE *)(a2 + 120);
        *(_WORD *)(a1 + 121) = *(_WORD *)(a2 + 121);
      }
      v25 = (int *)type metadata accessor for PlaybackIntent(0);
      v26 = v25[6];
      v27 = &a1[v26];
      v28 = (_QWORD *)(a2 + v26);
      v29 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      v30 = *((_QWORD *)v29 - 1);
      v31 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v30 + 48);
      if (v31(v28, 1, v29))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        v171 = v25;
        v175 = v31;
        v179 = v30;
        v33 = v28[1];
        *(_QWORD *)v27 = *v28;
        *((_QWORD *)v27 + 1) = v33;
        v34 = v28[3];
        *((_QWORD *)v27 + 2) = v28[2];
        *((_QWORD *)v27 + 3) = v34;
        v35 = v28[5];
        *((_QWORD *)v27 + 4) = v28[4];
        *((_QWORD *)v27 + 5) = v35;
        *((_QWORD *)v27 + 6) = v28[6];
        v27[56] = *((_BYTE *)v28 + 56);
        v36 = v28[8];
        v27[72] = *((_BYTE *)v28 + 72);
        *((_QWORD *)v27 + 8) = v36;
        v37 = v28[11];
        *((_QWORD *)v27 + 10) = v28[10];
        *((_QWORD *)v27 + 11) = v37;
        v38 = v28[13];
        *((_QWORD *)v27 + 12) = v28[12];
        *((_QWORD *)v27 + 13) = v38;
        v39 = v28[15];
        *((_QWORD *)v27 + 14) = v28[14];
        *((_QWORD *)v27 + 15) = v39;
        v40 = v29[12];
        __dst = &v27[v40];
        v164 = (char *)v28 + v40;
        v41 = sub_1A93F726C();
        v177 = *(_QWORD *)(v41 - 8);
        v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v184 = v42;
        if (v42(v164, 1, v41))
        {
          v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(__dst, v164, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v177 + 16))(__dst, v164, v41);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v177 + 56))(__dst, 0, 1, v41);
        }
        v44 = v29[13];
        v45 = &v27[v44];
        v46 = (_QWORD *)((char *)v28 + v44);
        v47 = v46[1];
        *(_QWORD *)v45 = *v46;
        *((_QWORD *)v45 + 1) = v47;
        *(_QWORD *)&v27[v29[14]] = *(_QWORD *)((char *)v28 + v29[14]);
        v48 = v29[15];
        v49 = &v27[v48];
        v50 = (char *)v28 + v48;
        *(_QWORD *)v49 = *(_QWORD *)v50;
        v49[8] = v50[8];
        v51 = v29[16];
        v52 = &v27[v51];
        v53 = (char *)v28 + v51;
        swift_bridgeObjectRetain();
        v181 = a1;
        v169 = v41;
        if (v184(v53, 1, v41))
        {
          v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v177 + 16))(v52, v53, v41);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v177 + 56))(v52, 0, 1, v41);
        }
        v55 = v29[17];
        v56 = &v27[v55];
        v57 = (_QWORD *)((char *)v28 + v55);
        v58 = v57[1];
        *(_QWORD *)v56 = *v57;
        *((_QWORD *)v56 + 1) = v58;
        *(_QWORD *)&v27[v29[18]] = *(_QWORD *)((char *)v28 + v29[18]);
        v27[v29[19]] = *((_BYTE *)v28 + v29[19]);
        v59 = v29[20];
        __dsta = &v27[v59];
        v60 = (char *)v28 + v59;
        v61 = sub_1A93F738C();
        v62 = *(_QWORD *)(v61 - 8);
        v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v63(v60, 1, v61))
        {
          v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(__dsta, v60, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 16))(__dsta, v60, v61);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(__dsta, 0, 1, v61);
        }
        v65 = v29[21];
        v66 = &v27[v65];
        v67 = (_QWORD *)((char *)v28 + v65);
        v68 = v67[1];
        *(_QWORD *)v66 = *v67;
        *((_QWORD *)v66 + 1) = v68;
        v27[v29[22]] = *((_BYTE *)v28 + v29[22]);
        v27[v29[23]] = *((_BYTE *)v28 + v29[23]);
        v27[v29[24]] = *((_BYTE *)v28 + v29[24]);
        v27[v29[25]] = *((_BYTE *)v28 + v29[25]);
        v27[v29[26]] = *((_BYTE *)v28 + v29[26]);
        v27[v29[27]] = *((_BYTE *)v28 + v29[27]);
        v27[v29[28]] = *((_BYTE *)v28 + v29[28]);
        *(_QWORD *)&v27[v29[29]] = *(_QWORD *)((char *)v28 + v29[29]);
        *(_QWORD *)&v27[v29[30]] = *(_QWORD *)((char *)v28 + v29[30]);
        v27[v29[31]] = *((_BYTE *)v28 + v29[31]);
        v69 = v29[32];
        v70 = &v27[v69];
        v71 = (_QWORD *)((char *)v28 + v69);
        v72 = v71[1];
        *(_QWORD *)v70 = *v71;
        *((_QWORD *)v70 + 1) = v72;
        *(_QWORD *)&v27[v29[33]] = *(_QWORD *)((char *)v28 + v29[33]);
        v73 = v29[34];
        v74 = &v27[v73];
        v75 = (_QWORD *)((char *)v28 + v73);
        v76 = v75[1];
        *(_QWORD *)v74 = *v75;
        *((_QWORD *)v74 + 1) = v76;
        v77 = v29[35];
        v78 = &v27[v77];
        v79 = (_QWORD *)((char *)v28 + v77);
        v80 = v79[1];
        *(_QWORD *)v78 = *v79;
        *((_QWORD *)v78 + 1) = v80;
        v81 = v29[36];
        __dstb = &v27[v81];
        v82 = (char *)v28 + v81;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v184(v82, 1, v169))
        {
          v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(__dstb, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v177 + 16))(__dstb, v82, v169);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v177 + 56))(__dstb, 0, 1, v169);
        }
        v30 = v179;
        v31 = v175;
        v84 = v29[37];
        v85 = &v27[v84];
        v86 = (_QWORD *)((char *)v28 + v84);
        v87 = v86[1];
        *(_QWORD *)v85 = *v86;
        *((_QWORD *)v85 + 1) = v87;
        v88 = v29[38];
        v89 = &v27[v88];
        v90 = (_QWORD *)((char *)v28 + v88);
        v91 = v90[1];
        *(_QWORD *)v89 = *v90;
        *((_QWORD *)v89 + 1) = v91;
        v27[v29[39]] = *((_BYTE *)v28 + v29[39]);
        v27[v29[40]] = *((_BYTE *)v28 + v29[40]);
        v27[v29[41]] = *((_BYTE *)v28 + v29[41]);
        v27[v29[42]] = *((_BYTE *)v28 + v29[42]);
        v27[v29[43]] = *((_BYTE *)v28 + v29[43]);
        v27[v29[44]] = *((_BYTE *)v28 + v29[44]);
        v27[v29[45]] = *((_BYTE *)v28 + v29[45]);
        v92 = *(void (**)(char *, _QWORD, uint64_t, int *))(v179 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v92(v27, 0, 1, v29);
        a1 = v181;
        v25 = v171;
      }
      *(_QWORD *)&a1[v25[7]] = *(_QWORD *)(a2 + v25[7]);
      v93 = v25[8];
      v94 = &a1[v93];
      v95 = (_QWORD *)(a2 + v93);
      v96 = v95[1];
      *(_QWORD *)v94 = *v95;
      *((_QWORD *)v94 + 1) = v96;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v97 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA370) + 48);
      v98 = &a1[v97];
      v99 = (_QWORD *)(a2 + v97);
      v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
      v101 = *(_QWORD *)(v100 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v101 + 48))(v99, 3, v100))
      {
        v102 = type metadata accessor for PlaybackIntent.PlayerConstraint(0);
        memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
      }
      else
      {
        if (v31(v99, 1, v29))
        {
          memcpy(v98, v99, *(_QWORD *)(v101 + 64));
        }
        else
        {
          v176 = v101;
          v180 = v30;
          v103 = v99[1];
          *(_QWORD *)v98 = *v99;
          *((_QWORD *)v98 + 1) = v103;
          v104 = v99[3];
          *((_QWORD *)v98 + 2) = v99[2];
          *((_QWORD *)v98 + 3) = v104;
          v105 = v99[5];
          *((_QWORD *)v98 + 4) = v99[4];
          *((_QWORD *)v98 + 5) = v105;
          *((_QWORD *)v98 + 6) = v99[6];
          v98[56] = *((_BYTE *)v99 + 56);
          v106 = v99[8];
          v98[72] = *((_BYTE *)v99 + 72);
          *((_QWORD *)v98 + 8) = v106;
          v107 = v99[11];
          *((_QWORD *)v98 + 10) = v99[10];
          *((_QWORD *)v98 + 11) = v107;
          v108 = v99[13];
          *((_QWORD *)v98 + 12) = v99[12];
          *((_QWORD *)v98 + 13) = v108;
          v109 = v99[15];
          *((_QWORD *)v98 + 14) = v99[14];
          *((_QWORD *)v98 + 15) = v109;
          v110 = v29[12];
          v172 = &v98[v110];
          v165 = (char *)v99 + v110;
          v111 = sub_1A93F726C();
          v178 = *(_QWORD *)(v111 - 8);
          v112 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v185 = v112;
          if (v112(v165, 1, v111))
          {
            v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
            memcpy(v172, v165, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v178 + 16))(v172, v165, v111);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v178 + 56))(v172, 0, 1, v111);
          }
          v114 = v29[13];
          v115 = &v98[v114];
          v116 = (_QWORD *)((char *)v99 + v114);
          v117 = v116[1];
          *(_QWORD *)v115 = *v116;
          *((_QWORD *)v115 + 1) = v117;
          *(_QWORD *)&v98[v29[14]] = *(_QWORD *)((char *)v99 + v29[14]);
          v118 = v29[15];
          v119 = &v98[v118];
          v120 = (char *)v99 + v118;
          *(_QWORD *)v119 = *(_QWORD *)v120;
          v119[8] = v120[8];
          v121 = v29[16];
          v122 = &v98[v121];
          v123 = (char *)v99 + v121;
          swift_bridgeObjectRetain();
          v182 = a1;
          v170 = v111;
          if (v112(v123, 1, v111))
          {
            v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
            memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v178 + 16))(v122, v123, v111);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v178 + 56))(v122, 0, 1, v111);
          }
          v125 = v29[17];
          v126 = &v98[v125];
          v127 = (_QWORD *)((char *)v99 + v125);
          v128 = v127[1];
          *(_QWORD *)v126 = *v127;
          *((_QWORD *)v126 + 1) = v128;
          *(_QWORD *)&v98[v29[18]] = *(_QWORD *)((char *)v99 + v29[18]);
          v98[v29[19]] = *((_BYTE *)v99 + v29[19]);
          v129 = v29[20];
          v173 = &v98[v129];
          v130 = (char *)v99 + v129;
          v131 = sub_1A93F738C();
          v132 = *(_QWORD *)(v131 - 8);
          v133 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48);
          swift_bridgeObjectRetain();
          swift_retain();
          if (v133(v130, 1, v131))
          {
            v134 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
            memcpy(v173, v130, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v173, v130, v131);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v132 + 56))(v173, 0, 1, v131);
          }
          v135 = v29[21];
          v136 = &v98[v135];
          v137 = (_QWORD *)((char *)v99 + v135);
          v138 = v137[1];
          *(_QWORD *)v136 = *v137;
          *((_QWORD *)v136 + 1) = v138;
          v98[v29[22]] = *((_BYTE *)v99 + v29[22]);
          v98[v29[23]] = *((_BYTE *)v99 + v29[23]);
          v98[v29[24]] = *((_BYTE *)v99 + v29[24]);
          v98[v29[25]] = *((_BYTE *)v99 + v29[25]);
          v98[v29[26]] = *((_BYTE *)v99 + v29[26]);
          v98[v29[27]] = *((_BYTE *)v99 + v29[27]);
          v98[v29[28]] = *((_BYTE *)v99 + v29[28]);
          *(_QWORD *)&v98[v29[29]] = *(_QWORD *)((char *)v99 + v29[29]);
          *(_QWORD *)&v98[v29[30]] = *(_QWORD *)((char *)v99 + v29[30]);
          v98[v29[31]] = *((_BYTE *)v99 + v29[31]);
          v139 = v29[32];
          v140 = &v98[v139];
          v141 = (_QWORD *)((char *)v99 + v139);
          v142 = v141[1];
          *(_QWORD *)v140 = *v141;
          *((_QWORD *)v140 + 1) = v142;
          *(_QWORD *)&v98[v29[33]] = *(_QWORD *)((char *)v99 + v29[33]);
          v143 = v29[34];
          v144 = &v98[v143];
          v145 = (_QWORD *)((char *)v99 + v143);
          v146 = v145[1];
          *(_QWORD *)v144 = *v145;
          *((_QWORD *)v144 + 1) = v146;
          v147 = v29[35];
          v148 = &v98[v147];
          v149 = (_QWORD *)((char *)v99 + v147);
          v150 = v149[1];
          *(_QWORD *)v148 = *v149;
          *((_QWORD *)v148 + 1) = v150;
          v151 = v29[36];
          v174 = &v98[v151];
          v152 = (char *)v99 + v151;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v185(v152, 1, v170))
          {
            v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
            memcpy(v174, v152, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v178 + 16))(v174, v152, v170);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v178 + 56))(v174, 0, 1, v170);
          }
          v101 = v176;
          v154 = v29[37];
          v155 = &v98[v154];
          v156 = (_QWORD *)((char *)v99 + v154);
          v157 = v156[1];
          *(_QWORD *)v155 = *v156;
          *((_QWORD *)v155 + 1) = v157;
          v158 = v29[38];
          v159 = &v98[v158];
          v160 = (_QWORD *)((char *)v99 + v158);
          v161 = v160[1];
          *(_QWORD *)v159 = *v160;
          *((_QWORD *)v159 + 1) = v161;
          v98[v29[39]] = *((_BYTE *)v99 + v29[39]);
          v98[v29[40]] = *((_BYTE *)v99 + v29[40]);
          v98[v29[41]] = *((_BYTE *)v99 + v29[41]);
          v98[v29[42]] = *((_BYTE *)v99 + v29[42]);
          v98[v29[43]] = *((_BYTE *)v99 + v29[43]);
          v98[v29[44]] = *((_BYTE *)v99 + v29[44]);
          v98[v29[45]] = *((_BYTE *)v99 + v29[45]);
          v162 = *(void (**)(char *, _QWORD, uint64_t, int *))(v180 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v162(v98, 0, 1, v29);
          a1 = v182;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 3, v100);
      }
      goto LABEL_43;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = sub_1A93F726C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_43:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, (const void *)a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t type metadata accessor for PlaybackIntent.PlayerConstraint(uint64_t a1)
{
  return sub_1A9062BFC(a1, (uint64_t *)&unk_1EEABA490);
}

uint64_t destroy for PlaybackIntent.ValidationError(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  unsigned int (*v6)(uint64_t, uint64_t, int *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    sub_1A912C6B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
    if (*(_BYTE *)(a1 + 120) != 2)
      sub_1A90531EC(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
    v4 = a1 + *(int *)(type metadata accessor for PlaybackIntent(0) + 24);
    v5 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v6 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48);
    if (!v6(v4, 1, v5))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = v4 + v5[12];
      v8 = sub_1A93F726C();
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (!v10(v7, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      swift_bridgeObjectRelease();
      v11 = v4 + v5[16];
      if (!v10(v11, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
      v27 = v9;
      swift_bridgeObjectRelease();
      swift_release();
      v12 = v4 + v5[20];
      v13 = sub_1A93F738C();
      v14 = *(_QWORD *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v4 + v5[36];
      if (!v10(v15, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v15, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA370) + 48);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 3, v17);
    if (!(_DWORD)result)
    {
      result = ((uint64_t (*)(uint64_t, uint64_t, int *))v6)(v16, 1, v5);
      if (!(_DWORD)result)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v18 = v16 + v5[12];
        v19 = sub_1A93F726C();
        v20 = *(_QWORD *)(v19 - 8);
        v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
        if (!v21(v18, 1, v19))
          (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
        swift_bridgeObjectRelease();
        v22 = v16 + v5[16];
        if (!v21(v22, 1, v19))
          (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v19);
        swift_bridgeObjectRelease();
        swift_release();
        v23 = v16 + v5[20];
        v24 = sub_1A93F738C();
        v25 = *(_QWORD *)(v24 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
          (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = v16 + v5[36];
        if (!v21(v26, 1, v19))
          (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v26, v19);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  else if (!(_DWORD)result)
  {
    v3 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

char *initializeWithCopy for PlaybackIntent.ValidationError(char *a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  int *v27;
  uint64_t v28;
  unsigned int (*v29)(_QWORD, _QWORD, _QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  _QWORD *v88;
  uint64_t v89;
  void (*v90)(char *, _QWORD, uint64_t, int *);
  uint64_t v91;
  char *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned int (*v110)(char *, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  char *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int (*v131)(char *, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  char *v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  _QWORD *v158;
  uint64_t v159;
  void (*v160)(char *, _QWORD, uint64_t, int *);
  char *v162;
  char *v163;
  char *__dst;
  char *__dsta;
  char *__dstb;
  uint64_t v167;
  uint64_t v168;
  int *v169;
  uint64_t v170;
  void *v171;
  char *v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  char v181;
  unsigned int (*v182)(char *, uint64_t, uint64_t);
  unsigned int (*v183)(char *, uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = *(_QWORD *)a2;
    v9 = *(_QWORD *)(a2 + 8);
    v10 = *(_QWORD *)(a2 + 16);
    v11 = *(_QWORD *)(a2 + 24);
    v12 = *(_BYTE *)(a2 + 32);
    sub_1A912C880(*(_QWORD *)a2, v9, v10, v11, v12);
    *(_QWORD *)a1 = v8;
    *((_QWORD *)a1 + 1) = v9;
    *((_QWORD *)a1 + 2) = v10;
    *((_QWORD *)a1 + 3) = v11;
    a1[32] = v12;
    if (*(_BYTE *)(a2 + 120) == 2)
    {
      v13 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v13;
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_DWORD *)(a1 + 119) = *(_DWORD *)(a2 + 119);
      v14 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v14;
    }
    else
    {
      v15 = *(_QWORD *)(a2 + 40);
      v16 = *(_QWORD *)(a2 + 48);
      v17 = *(_QWORD *)(a2 + 56);
      v18 = *(_QWORD *)(a2 + 64);
      v19 = *(_QWORD *)(a2 + 72);
      v20 = *(_QWORD *)(a2 + 80);
      v22 = *(_QWORD *)(a2 + 88);
      v21 = *(_QWORD *)(a2 + 96);
      v181 = *(_BYTE *)(a2 + 104);
      sub_1A90519B4(v15, v16, v17, v18, v19, v20, v22, v21, v181);
      *((_QWORD *)a1 + 5) = v15;
      *((_QWORD *)a1 + 6) = v16;
      *((_QWORD *)a1 + 7) = v17;
      *((_QWORD *)a1 + 8) = v18;
      *((_QWORD *)a1 + 9) = v19;
      *((_QWORD *)a1 + 10) = v20;
      *((_QWORD *)a1 + 11) = v22;
      *((_QWORD *)a1 + 12) = v21;
      a1[104] = v181;
      a1[105] = *(_BYTE *)(a2 + 105);
      *((_QWORD *)a1 + 14) = *(_QWORD *)(a2 + 112);
      a1[120] = *(_BYTE *)(a2 + 120);
      *(_WORD *)(a1 + 121) = *(_WORD *)(a2 + 121);
    }
    v23 = (int *)type metadata accessor for PlaybackIntent(0);
    v24 = v23[6];
    v25 = &a1[v24];
    v26 = (_QWORD *)(a2 + v24);
    v27 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v28 = *((_QWORD *)v27 - 1);
    v29 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v28 + 48);
    if (v29(v26, 1, v27))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v169 = v23;
      v171 = v29;
      v177 = v28;
      v31 = v26[1];
      *(_QWORD *)v25 = *v26;
      *((_QWORD *)v25 + 1) = v31;
      v32 = v26[3];
      *((_QWORD *)v25 + 2) = v26[2];
      *((_QWORD *)v25 + 3) = v32;
      v33 = v26[5];
      *((_QWORD *)v25 + 4) = v26[4];
      *((_QWORD *)v25 + 5) = v33;
      *((_QWORD *)v25 + 6) = v26[6];
      v25[56] = *((_BYTE *)v26 + 56);
      v34 = v26[8];
      v25[72] = *((_BYTE *)v26 + 72);
      *((_QWORD *)v25 + 8) = v34;
      v35 = v26[11];
      *((_QWORD *)v25 + 10) = v26[10];
      *((_QWORD *)v25 + 11) = v35;
      v36 = v26[13];
      *((_QWORD *)v25 + 12) = v26[12];
      *((_QWORD *)v25 + 13) = v36;
      v37 = v26[15];
      *((_QWORD *)v25 + 14) = v26[14];
      *((_QWORD *)v25 + 15) = v37;
      v38 = v27[12];
      __dst = &v25[v38];
      v162 = (char *)v26 + v38;
      v39 = sub_1A93F726C();
      v175 = *(_QWORD *)(v39 - 8);
      v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v175 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v182 = v40;
      if (v40(v162, 1, v39))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(__dst, v162, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v175 + 16))(__dst, v162, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v175 + 56))(__dst, 0, 1, v39);
      }
      v42 = v27[13];
      v43 = &v25[v42];
      v44 = (_QWORD *)((char *)v26 + v42);
      v45 = v44[1];
      *(_QWORD *)v43 = *v44;
      *((_QWORD *)v43 + 1) = v45;
      *(_QWORD *)&v25[v27[14]] = *(_QWORD *)((char *)v26 + v27[14]);
      v46 = v27[15];
      v47 = &v25[v46];
      v48 = (char *)v26 + v46;
      *(_QWORD *)v47 = *(_QWORD *)v48;
      v47[8] = v48[8];
      v49 = v27[16];
      v50 = &v25[v49];
      v51 = (char *)v26 + v49;
      swift_bridgeObjectRetain();
      v179 = a1;
      v167 = v39;
      if (v182(v51, 1, v39))
      {
        v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v50, v51, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v175 + 56))(v50, 0, 1, v39);
      }
      v53 = v27[17];
      v54 = &v25[v53];
      v55 = (_QWORD *)((char *)v26 + v53);
      v56 = v55[1];
      *(_QWORD *)v54 = *v55;
      *((_QWORD *)v54 + 1) = v56;
      *(_QWORD *)&v25[v27[18]] = *(_QWORD *)((char *)v26 + v27[18]);
      v25[v27[19]] = *((_BYTE *)v26 + v27[19]);
      v57 = v27[20];
      __dsta = &v25[v57];
      v58 = (char *)v26 + v57;
      v59 = sub_1A93F738C();
      v60 = *(_QWORD *)(v59 - 8);
      v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v61(v58, 1, v59))
      {
        v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
        memcpy(__dsta, v58, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(__dsta, v58, v59);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(__dsta, 0, 1, v59);
      }
      v63 = v27[21];
      v64 = &v25[v63];
      v65 = (_QWORD *)((char *)v26 + v63);
      v66 = v65[1];
      *(_QWORD *)v64 = *v65;
      *((_QWORD *)v64 + 1) = v66;
      v25[v27[22]] = *((_BYTE *)v26 + v27[22]);
      v25[v27[23]] = *((_BYTE *)v26 + v27[23]);
      v25[v27[24]] = *((_BYTE *)v26 + v27[24]);
      v25[v27[25]] = *((_BYTE *)v26 + v27[25]);
      v25[v27[26]] = *((_BYTE *)v26 + v27[26]);
      v25[v27[27]] = *((_BYTE *)v26 + v27[27]);
      v25[v27[28]] = *((_BYTE *)v26 + v27[28]);
      *(_QWORD *)&v25[v27[29]] = *(_QWORD *)((char *)v26 + v27[29]);
      *(_QWORD *)&v25[v27[30]] = *(_QWORD *)((char *)v26 + v27[30]);
      v25[v27[31]] = *((_BYTE *)v26 + v27[31]);
      v67 = v27[32];
      v68 = &v25[v67];
      v69 = (_QWORD *)((char *)v26 + v67);
      v70 = v69[1];
      *(_QWORD *)v68 = *v69;
      *((_QWORD *)v68 + 1) = v70;
      *(_QWORD *)&v25[v27[33]] = *(_QWORD *)((char *)v26 + v27[33]);
      v71 = v27[34];
      v72 = &v25[v71];
      v73 = (_QWORD *)((char *)v26 + v71);
      v74 = v73[1];
      *(_QWORD *)v72 = *v73;
      *((_QWORD *)v72 + 1) = v74;
      v75 = v27[35];
      v76 = &v25[v75];
      v77 = (_QWORD *)((char *)v26 + v75);
      v78 = v77[1];
      *(_QWORD *)v76 = *v77;
      *((_QWORD *)v76 + 1) = v78;
      v79 = v27[36];
      __dstb = &v25[v79];
      v80 = (char *)v26 + v79;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v182(v80, 1, v167))
      {
        v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(__dstb, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v175 + 16))(__dstb, v80, v167);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v175 + 56))(__dstb, 0, 1, v167);
      }
      v28 = v177;
      v29 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v171;
      v82 = v27[37];
      v83 = &v25[v82];
      v84 = (_QWORD *)((char *)v26 + v82);
      v85 = v84[1];
      *(_QWORD *)v83 = *v84;
      *((_QWORD *)v83 + 1) = v85;
      v86 = v27[38];
      v87 = &v25[v86];
      v88 = (_QWORD *)((char *)v26 + v86);
      v89 = v88[1];
      *(_QWORD *)v87 = *v88;
      *((_QWORD *)v87 + 1) = v89;
      v25[v27[39]] = *((_BYTE *)v26 + v27[39]);
      v25[v27[40]] = *((_BYTE *)v26 + v27[40]);
      v25[v27[41]] = *((_BYTE *)v26 + v27[41]);
      v25[v27[42]] = *((_BYTE *)v26 + v27[42]);
      v25[v27[43]] = *((_BYTE *)v26 + v27[43]);
      v25[v27[44]] = *((_BYTE *)v26 + v27[44]);
      v25[v27[45]] = *((_BYTE *)v26 + v27[45]);
      v90 = *(void (**)(char *, _QWORD, uint64_t, int *))(v177 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v90(v25, 0, 1, v27);
      a1 = v179;
      v23 = v169;
    }
    *(_QWORD *)&a1[v23[7]] = *(_QWORD *)(a2 + v23[7]);
    v91 = v23[8];
    v92 = &a1[v91];
    v93 = (_QWORD *)(a2 + v91);
    v94 = v93[1];
    *(_QWORD *)v92 = *v93;
    *((_QWORD *)v92 + 1) = v94;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v95 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA370) + 48);
    v96 = &a1[v95];
    v97 = (_QWORD *)(a2 + v95);
    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    v99 = *(_QWORD *)(v98 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v99 + 48))(v97, 3, v98))
    {
      v100 = type metadata accessor for PlaybackIntent.PlayerConstraint(0);
      memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    }
    else
    {
      if (v29(v97, 1, v27))
      {
        memcpy(v96, v97, *(_QWORD *)(v99 + 64));
      }
      else
      {
        v170 = v99;
        v178 = v28;
        v101 = v97[1];
        *(_QWORD *)v96 = *v97;
        *((_QWORD *)v96 + 1) = v101;
        v102 = v97[3];
        *((_QWORD *)v96 + 2) = v97[2];
        *((_QWORD *)v96 + 3) = v102;
        v103 = v97[5];
        *((_QWORD *)v96 + 4) = v97[4];
        *((_QWORD *)v96 + 5) = v103;
        *((_QWORD *)v96 + 6) = v97[6];
        v96[56] = *((_BYTE *)v97 + 56);
        v104 = v97[8];
        v96[72] = *((_BYTE *)v97 + 72);
        *((_QWORD *)v96 + 8) = v104;
        v105 = v97[11];
        *((_QWORD *)v96 + 10) = v97[10];
        *((_QWORD *)v96 + 11) = v105;
        v106 = v97[13];
        *((_QWORD *)v96 + 12) = v97[12];
        *((_QWORD *)v96 + 13) = v106;
        v107 = v97[15];
        *((_QWORD *)v96 + 14) = v97[14];
        *((_QWORD *)v96 + 15) = v107;
        v108 = v27[12];
        v172 = &v96[v108];
        v163 = (char *)v97 + v108;
        v109 = sub_1A93F726C();
        v176 = *(_QWORD *)(v109 - 8);
        v110 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v183 = v110;
        if (v110(v163, 1, v109))
        {
          v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v172, v163, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v172, v163, v109);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v176 + 56))(v172, 0, 1, v109);
        }
        v112 = v27[13];
        v113 = &v96[v112];
        v114 = (_QWORD *)((char *)v97 + v112);
        v115 = v114[1];
        *(_QWORD *)v113 = *v114;
        *((_QWORD *)v113 + 1) = v115;
        *(_QWORD *)&v96[v27[14]] = *(_QWORD *)((char *)v97 + v27[14]);
        v116 = v27[15];
        v117 = &v96[v116];
        v118 = (char *)v97 + v116;
        *(_QWORD *)v117 = *(_QWORD *)v118;
        v117[8] = v118[8];
        v119 = v27[16];
        v120 = &v96[v119];
        v121 = (char *)v97 + v119;
        swift_bridgeObjectRetain();
        v180 = a1;
        v168 = v109;
        if (v110(v121, 1, v109))
        {
          v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v120, v121, v109);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v176 + 56))(v120, 0, 1, v109);
        }
        v123 = v27[17];
        v124 = &v96[v123];
        v125 = (_QWORD *)((char *)v97 + v123);
        v126 = v125[1];
        *(_QWORD *)v124 = *v125;
        *((_QWORD *)v124 + 1) = v126;
        *(_QWORD *)&v96[v27[18]] = *(_QWORD *)((char *)v97 + v27[18]);
        v96[v27[19]] = *((_BYTE *)v97 + v27[19]);
        v127 = v27[20];
        v173 = &v96[v127];
        v128 = (char *)v97 + v127;
        v129 = sub_1A93F738C();
        v130 = *(_QWORD *)(v129 - 8);
        v131 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v131(v128, 1, v129))
        {
          v132 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(v173, v128, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v173, v128, v129);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v173, 0, 1, v129);
        }
        v133 = v27[21];
        v134 = &v96[v133];
        v135 = (_QWORD *)((char *)v97 + v133);
        v136 = v135[1];
        *(_QWORD *)v134 = *v135;
        *((_QWORD *)v134 + 1) = v136;
        v96[v27[22]] = *((_BYTE *)v97 + v27[22]);
        v96[v27[23]] = *((_BYTE *)v97 + v27[23]);
        v96[v27[24]] = *((_BYTE *)v97 + v27[24]);
        v96[v27[25]] = *((_BYTE *)v97 + v27[25]);
        v96[v27[26]] = *((_BYTE *)v97 + v27[26]);
        v96[v27[27]] = *((_BYTE *)v97 + v27[27]);
        v96[v27[28]] = *((_BYTE *)v97 + v27[28]);
        *(_QWORD *)&v96[v27[29]] = *(_QWORD *)((char *)v97 + v27[29]);
        *(_QWORD *)&v96[v27[30]] = *(_QWORD *)((char *)v97 + v27[30]);
        v96[v27[31]] = *((_BYTE *)v97 + v27[31]);
        v137 = v27[32];
        v138 = &v96[v137];
        v139 = (_QWORD *)((char *)v97 + v137);
        v140 = v139[1];
        *(_QWORD *)v138 = *v139;
        *((_QWORD *)v138 + 1) = v140;
        *(_QWORD *)&v96[v27[33]] = *(_QWORD *)((char *)v97 + v27[33]);
        v141 = v27[34];
        v142 = &v96[v141];
        v143 = (_QWORD *)((char *)v97 + v141);
        v144 = v143[1];
        *(_QWORD *)v142 = *v143;
        *((_QWORD *)v142 + 1) = v144;
        v145 = v27[35];
        v146 = &v96[v145];
        v147 = (_QWORD *)((char *)v97 + v145);
        v148 = v147[1];
        *(_QWORD *)v146 = *v147;
        *((_QWORD *)v146 + 1) = v148;
        v149 = v27[36];
        v174 = &v96[v149];
        v150 = (char *)v97 + v149;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v183(v150, 1, v168))
        {
          v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v174, v150, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v174, v150, v168);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v176 + 56))(v174, 0, 1, v168);
        }
        v152 = v27[37];
        v153 = &v96[v152];
        v154 = (_QWORD *)((char *)v97 + v152);
        v155 = v154[1];
        *(_QWORD *)v153 = *v154;
        *((_QWORD *)v153 + 1) = v155;
        v156 = v27[38];
        v157 = &v96[v156];
        v158 = (_QWORD *)((char *)v97 + v156);
        v159 = v158[1];
        *(_QWORD *)v157 = *v158;
        *((_QWORD *)v157 + 1) = v159;
        v96[v27[39]] = *((_BYTE *)v97 + v27[39]);
        v96[v27[40]] = *((_BYTE *)v97 + v27[40]);
        v96[v27[41]] = *((_BYTE *)v97 + v27[41]);
        v96[v27[42]] = *((_BYTE *)v97 + v27[42]);
        v96[v27[43]] = *((_BYTE *)v97 + v27[43]);
        v96[v27[44]] = *((_BYTE *)v97 + v27[44]);
        v96[v27[45]] = *((_BYTE *)v97 + v27[45]);
        v160 = *(void (**)(char *, _QWORD, uint64_t, int *))(v178 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v160(v96, 0, 1, v27);
        a1 = v180;
        v99 = v170;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 3, v98);
    }
    goto LABEL_41;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_1A93F726C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_41:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *assignWithCopy for PlaybackIntent.ValidationError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  int *v29;
  uint64_t v30;
  unsigned int (*v31)(_QWORD, _QWORD, _QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  char *v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  _QWORD *v67;
  uint64_t v68;
  char *v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  uint64_t v77;
  char *v78;
  _QWORD *v79;
  void (*v80)(char *, _QWORD, uint64_t, int *);
  uint64_t v81;
  char *v82;
  _QWORD *v83;
  uint64_t v84;
  char *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  char *v97;
  _QWORD *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  _QWORD *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unsigned int (*v114)(char *, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  char *v117;
  _QWORD *v118;
  uint64_t v119;
  char *v120;
  _QWORD *v121;
  uint64_t v122;
  char *v123;
  _QWORD *v124;
  uint64_t v125;
  char *v126;
  _QWORD *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  _QWORD *v133;
  uint64_t v134;
  char *v135;
  _QWORD *v136;
  void (*v137)(char *, _QWORD, uint64_t, int *);
  char *v139;
  char *v140;
  char *v141;
  char *__dst;
  char *__dsta;
  char *__dstb;
  int *v145;
  char *v146;
  char *v147;
  unsigned int (*v148)(_QWORD, _QWORD, _QWORD);
  unsigned int (*v149)(char *, uint64_t, uint64_t);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char v155;
  unsigned int (*v156)(char *, uint64_t, uint64_t);
  uint64_t v157;

  v3 = (char *)a1;
  if (a1 != a2)
  {
    sub_1A9064714(a1, type metadata accessor for PlaybackIntent.ValidationError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v8 = *(_QWORD *)a2;
      v9 = *(_QWORD *)(a2 + 8);
      v10 = *(_QWORD *)(a2 + 16);
      v11 = *(_QWORD *)(a2 + 24);
      v12 = *(_BYTE *)(a2 + 32);
      sub_1A912C880(*(_QWORD *)a2, v9, v10, v11, v12);
      *(_QWORD *)v3 = v8;
      *((_QWORD *)v3 + 1) = v9;
      *((_QWORD *)v3 + 2) = v10;
      *((_QWORD *)v3 + 3) = v11;
      v3[32] = v12;
      if (*(_BYTE *)(a2 + 120) == 2)
      {
        v13 = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(v3 + 40) = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(v3 + 56) = v13;
        v14 = *(_OWORD *)(a2 + 72);
        v15 = *(_OWORD *)(a2 + 88);
        v16 = *(_OWORD *)(a2 + 104);
        *(_DWORD *)(v3 + 119) = *(_DWORD *)(a2 + 119);
        *(_OWORD *)(v3 + 88) = v15;
        *(_OWORD *)(v3 + 104) = v16;
        *(_OWORD *)(v3 + 72) = v14;
      }
      else
      {
        v17 = *(_QWORD *)(a2 + 40);
        v18 = *(_QWORD *)(a2 + 48);
        v19 = *(_QWORD *)(a2 + 56);
        v20 = *(_QWORD *)(a2 + 64);
        v21 = *(_QWORD *)(a2 + 72);
        v22 = *(_QWORD *)(a2 + 80);
        v24 = *(_QWORD *)(a2 + 88);
        v23 = *(_QWORD *)(a2 + 96);
        v155 = *(_BYTE *)(a2 + 104);
        sub_1A90519B4(v17, v18, v19, v20, v21, v22, v24, v23, v155);
        *((_QWORD *)v3 + 5) = v17;
        *((_QWORD *)v3 + 6) = v18;
        *((_QWORD *)v3 + 7) = v19;
        *((_QWORD *)v3 + 8) = v20;
        *((_QWORD *)v3 + 9) = v21;
        *((_QWORD *)v3 + 10) = v22;
        *((_QWORD *)v3 + 11) = v24;
        *((_QWORD *)v3 + 12) = v23;
        v3[104] = v155;
        v3[105] = *(_BYTE *)(a2 + 105);
        *((_QWORD *)v3 + 14) = *(_QWORD *)(a2 + 112);
        v3[120] = *(_BYTE *)(a2 + 120);
        v3[121] = *(_BYTE *)(a2 + 121);
        v3[122] = *(_BYTE *)(a2 + 122);
      }
      v25 = (int *)type metadata accessor for PlaybackIntent(0);
      v26 = v25[6];
      v27 = &v3[v26];
      v28 = (_QWORD *)(a2 + v26);
      v29 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      v30 = *((_QWORD *)v29 - 1);
      v31 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v30 + 48);
      if (v31(v28, 1, v29))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        v145 = v25;
        v148 = v31;
        v151 = v30;
        *(_QWORD *)v27 = *v28;
        *((_QWORD *)v27 + 1) = v28[1];
        *((_QWORD *)v27 + 2) = v28[2];
        *((_QWORD *)v27 + 3) = v28[3];
        *((_QWORD *)v27 + 4) = v28[4];
        *((_QWORD *)v27 + 5) = v28[5];
        v33 = v28[6];
        v27[56] = *((_BYTE *)v28 + 56);
        *((_QWORD *)v27 + 6) = v33;
        v34 = v28[8];
        v27[72] = *((_BYTE *)v28 + 72);
        *((_QWORD *)v27 + 8) = v34;
        *((_QWORD *)v27 + 10) = v28[10];
        *((_QWORD *)v27 + 11) = v28[11];
        *((_QWORD *)v27 + 12) = v28[12];
        *((_QWORD *)v27 + 13) = v28[13];
        *((_QWORD *)v27 + 14) = v28[14];
        *((_QWORD *)v27 + 15) = v28[15];
        v35 = v29[12];
        __dst = &v27[v35];
        v139 = (char *)v28 + v35;
        v36 = sub_1A93F726C();
        v150 = *(_QWORD *)(v36 - 8);
        v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v156 = v37;
        if (v37(v139, 1, v36))
        {
          v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(__dst, v139, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v150 + 16))(__dst, v139, v36);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(__dst, 0, 1, v36);
        }
        v39 = v29[13];
        v40 = &v27[v39];
        v41 = (_QWORD *)((char *)v28 + v39);
        *(_QWORD *)v40 = *v41;
        *((_QWORD *)v40 + 1) = v41[1];
        *(_QWORD *)&v27[v29[14]] = *(_QWORD *)((char *)v28 + v29[14]);
        v42 = v29[15];
        v43 = &v27[v42];
        v44 = (char *)v28 + v42;
        v45 = *(_QWORD *)v44;
        v43[8] = v44[8];
        *(_QWORD *)v43 = v45;
        v46 = v29[16];
        v47 = &v27[v46];
        v48 = (char *)v28 + v46;
        swift_bridgeObjectRetain();
        v153 = v3;
        if (v156(v48, 1, v36))
        {
          v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v47, v48, v36);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v47, 0, 1, v36);
        }
        v50 = v29[17];
        v51 = &v27[v50];
        v52 = (_QWORD *)((char *)v28 + v50);
        *(_QWORD *)v51 = *v52;
        *((_QWORD *)v51 + 1) = v52[1];
        *(_QWORD *)&v27[v29[18]] = *(_QWORD *)((char *)v28 + v29[18]);
        v27[v29[19]] = *((_BYTE *)v28 + v29[19]);
        v53 = v29[20];
        __dsta = &v27[v53];
        v54 = (char *)v28 + v53;
        v55 = sub_1A93F738C();
        v56 = *(_QWORD *)(v55 - 8);
        v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v57(v54, 1, v55))
        {
          v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(__dsta, v54, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v56 + 16))(__dsta, v54, v55);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(__dsta, 0, 1, v55);
        }
        v59 = v29[21];
        v60 = &v27[v59];
        v61 = (_QWORD *)((char *)v28 + v59);
        *(_QWORD *)v60 = *v61;
        *((_QWORD *)v60 + 1) = v61[1];
        v27[v29[22]] = *((_BYTE *)v28 + v29[22]);
        v27[v29[23]] = *((_BYTE *)v28 + v29[23]);
        v27[v29[24]] = *((_BYTE *)v28 + v29[24]);
        v27[v29[25]] = *((_BYTE *)v28 + v29[25]);
        v27[v29[26]] = *((_BYTE *)v28 + v29[26]);
        v27[v29[27]] = *((_BYTE *)v28 + v29[27]);
        v27[v29[28]] = *((_BYTE *)v28 + v29[28]);
        *(_QWORD *)&v27[v29[29]] = *(_QWORD *)((char *)v28 + v29[29]);
        *(_QWORD *)&v27[v29[30]] = *(_QWORD *)((char *)v28 + v29[30]);
        v27[v29[31]] = *((_BYTE *)v28 + v29[31]);
        v62 = v29[32];
        v63 = &v27[v62];
        v64 = (_QWORD *)((char *)v28 + v62);
        *(_QWORD *)v63 = *v64;
        *((_QWORD *)v63 + 1) = v64[1];
        *(_QWORD *)&v27[v29[33]] = *(_QWORD *)((char *)v28 + v29[33]);
        v65 = v29[34];
        v66 = &v27[v65];
        v67 = (_QWORD *)((char *)v28 + v65);
        *(_QWORD *)v66 = *v67;
        *((_QWORD *)v66 + 1) = v67[1];
        v68 = v29[35];
        v69 = &v27[v68];
        v70 = (_QWORD *)((char *)v28 + v68);
        *(_QWORD *)v69 = *v70;
        *((_QWORD *)v69 + 1) = v70[1];
        v71 = v29[36];
        __dstb = &v27[v71];
        v72 = (char *)v28 + v71;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v156(v72, 1, v36))
        {
          v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(__dstb, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v150 + 16))(__dstb, v72, v36);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(__dstb, 0, 1, v36);
        }
        v30 = v151;
        v31 = v148;
        v74 = v29[37];
        v75 = &v27[v74];
        v76 = (_QWORD *)((char *)v28 + v74);
        *(_QWORD *)v75 = *v76;
        *((_QWORD *)v75 + 1) = v76[1];
        v77 = v29[38];
        v78 = &v27[v77];
        v79 = (_QWORD *)((char *)v28 + v77);
        *(_QWORD *)v78 = *v79;
        *((_QWORD *)v78 + 1) = v79[1];
        v27[v29[39]] = *((_BYTE *)v28 + v29[39]);
        v27[v29[40]] = *((_BYTE *)v28 + v29[40]);
        v27[v29[41]] = *((_BYTE *)v28 + v29[41]);
        v27[v29[42]] = *((_BYTE *)v28 + v29[42]);
        v27[v29[43]] = *((_BYTE *)v28 + v29[43]);
        v27[v29[44]] = *((_BYTE *)v28 + v29[44]);
        v27[v29[45]] = *((_BYTE *)v28 + v29[45]);
        v80 = *(void (**)(char *, _QWORD, uint64_t, int *))(v151 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v80(v27, 0, 1, v29);
        v3 = v153;
        v25 = v145;
      }
      *(_QWORD *)&v3[v25[7]] = *(_QWORD *)(a2 + v25[7]);
      v81 = v25[8];
      v82 = &v3[v81];
      v83 = (_QWORD *)(a2 + v81);
      *(_QWORD *)v82 = *v83;
      *((_QWORD *)v82 + 1) = v83[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v84 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA370) + 48);
      v85 = &v3[v84];
      v86 = (_QWORD *)(a2 + v84);
      v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
      v88 = *(_QWORD *)(v87 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v88 + 48))(v86, 3, v87))
      {
        v89 = type metadata accessor for PlaybackIntent.PlayerConstraint(0);
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
      }
      else
      {
        if (v31(v86, 1, v29))
        {
          memcpy(v85, v86, *(_QWORD *)(v88 + 64));
        }
        else
        {
          v152 = v30;
          *(_QWORD *)v85 = *v86;
          *((_QWORD *)v85 + 1) = v86[1];
          *((_QWORD *)v85 + 2) = v86[2];
          *((_QWORD *)v85 + 3) = v86[3];
          *((_QWORD *)v85 + 4) = v86[4];
          *((_QWORD *)v85 + 5) = v86[5];
          v90 = v86[6];
          v85[56] = *((_BYTE *)v86 + 56);
          *((_QWORD *)v85 + 6) = v90;
          v91 = v86[8];
          v85[72] = *((_BYTE *)v86 + 72);
          *((_QWORD *)v85 + 8) = v91;
          *((_QWORD *)v85 + 10) = v86[10];
          *((_QWORD *)v85 + 11) = v86[11];
          *((_QWORD *)v85 + 12) = v86[12];
          *((_QWORD *)v85 + 13) = v86[13];
          *((_QWORD *)v85 + 14) = v86[14];
          *((_QWORD *)v85 + 15) = v86[15];
          v92 = v29[12];
          v140 = &v85[v92];
          v141 = (char *)v86 + v92;
          v93 = sub_1A93F726C();
          v157 = *(_QWORD *)(v93 - 8);
          v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v94(v141, 1, v93))
          {
            v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
            memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v140, v141, v93);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v140, 0, 1, v93);
          }
          v96 = v29[13];
          v97 = &v85[v96];
          v98 = (_QWORD *)((char *)v86 + v96);
          *(_QWORD *)v97 = *v98;
          *((_QWORD *)v97 + 1) = v98[1];
          *(_QWORD *)&v85[v29[14]] = *(_QWORD *)((char *)v86 + v29[14]);
          v99 = v29[15];
          v100 = &v85[v99];
          v101 = (char *)v86 + v99;
          v102 = *(_QWORD *)v101;
          v100[8] = v101[8];
          *(_QWORD *)v100 = v102;
          v103 = v29[16];
          v104 = &v85[v103];
          v105 = (char *)v86 + v103;
          swift_bridgeObjectRetain();
          v154 = v3;
          v149 = v94;
          if (v94(v105, 1, v93))
          {
            v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
            memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v104, v105, v93);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v104, 0, 1, v93);
          }
          v107 = v29[17];
          v108 = &v85[v107];
          v109 = (_QWORD *)((char *)v86 + v107);
          *(_QWORD *)v108 = *v109;
          *((_QWORD *)v108 + 1) = v109[1];
          *(_QWORD *)&v85[v29[18]] = *(_QWORD *)((char *)v86 + v29[18]);
          v85[v29[19]] = *((_BYTE *)v86 + v29[19]);
          v110 = v29[20];
          v146 = &v85[v110];
          v111 = (char *)v86 + v110;
          v112 = sub_1A93F738C();
          v113 = *(_QWORD *)(v112 - 8);
          v114 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48);
          swift_bridgeObjectRetain();
          swift_retain();
          if (v114(v111, 1, v112))
          {
            v115 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
            memcpy(v146, v111, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v146, v111, v112);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v146, 0, 1, v112);
          }
          v116 = v29[21];
          v117 = &v85[v116];
          v118 = (_QWORD *)((char *)v86 + v116);
          *(_QWORD *)v117 = *v118;
          *((_QWORD *)v117 + 1) = v118[1];
          v85[v29[22]] = *((_BYTE *)v86 + v29[22]);
          v85[v29[23]] = *((_BYTE *)v86 + v29[23]);
          v85[v29[24]] = *((_BYTE *)v86 + v29[24]);
          v85[v29[25]] = *((_BYTE *)v86 + v29[25]);
          v85[v29[26]] = *((_BYTE *)v86 + v29[26]);
          v85[v29[27]] = *((_BYTE *)v86 + v29[27]);
          v85[v29[28]] = *((_BYTE *)v86 + v29[28]);
          *(_QWORD *)&v85[v29[29]] = *(_QWORD *)((char *)v86 + v29[29]);
          *(_QWORD *)&v85[v29[30]] = *(_QWORD *)((char *)v86 + v29[30]);
          v85[v29[31]] = *((_BYTE *)v86 + v29[31]);
          v119 = v29[32];
          v120 = &v85[v119];
          v121 = (_QWORD *)((char *)v86 + v119);
          *(_QWORD *)v120 = *v121;
          *((_QWORD *)v120 + 1) = v121[1];
          *(_QWORD *)&v85[v29[33]] = *(_QWORD *)((char *)v86 + v29[33]);
          v122 = v29[34];
          v123 = &v85[v122];
          v124 = (_QWORD *)((char *)v86 + v122);
          *(_QWORD *)v123 = *v124;
          *((_QWORD *)v123 + 1) = v124[1];
          v125 = v29[35];
          v126 = &v85[v125];
          v127 = (_QWORD *)((char *)v86 + v125);
          *(_QWORD *)v126 = *v127;
          *((_QWORD *)v126 + 1) = v127[1];
          v128 = v29[36];
          v147 = &v85[v128];
          v129 = (char *)v86 + v128;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v149(v129, 1, v93))
          {
            v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
            memcpy(v147, v129, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v147, v129, v93);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v147, 0, 1, v93);
          }
          v131 = v29[37];
          v132 = &v85[v131];
          v133 = (_QWORD *)((char *)v86 + v131);
          *(_QWORD *)v132 = *v133;
          *((_QWORD *)v132 + 1) = v133[1];
          v134 = v29[38];
          v135 = &v85[v134];
          v136 = (_QWORD *)((char *)v86 + v134);
          *(_QWORD *)v135 = *v136;
          *((_QWORD *)v135 + 1) = v136[1];
          v85[v29[39]] = *((_BYTE *)v86 + v29[39]);
          v85[v29[40]] = *((_BYTE *)v86 + v29[40]);
          v85[v29[41]] = *((_BYTE *)v86 + v29[41]);
          v85[v29[42]] = *((_BYTE *)v86 + v29[42]);
          v85[v29[43]] = *((_BYTE *)v86 + v29[43]);
          v85[v29[44]] = *((_BYTE *)v86 + v29[44]);
          v85[v29[45]] = *((_BYTE *)v86 + v29[45]);
          v137 = *(void (**)(char *, _QWORD, uint64_t, int *))(v152 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v137(v85, 0, 1, v29);
          v3 = v154;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 3, v87);
      }
      goto LABEL_42;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_1A93F726C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v3, a2, v7);
LABEL_42:
      swift_storeEnumTagMultiPayload();
      return v3;
    }
    memcpy(v3, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return v3;
}

char *initializeWithTake for PlaybackIntent.ValidationError(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  unsigned int (*v15)(_QWORD, _QWORD, _QWORD);
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *__dst;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  char *v76;
  char *v77;
  unsigned int (*v78)(_QWORD, _QWORD, _QWORD);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);
  unsigned int (*v83)(char *, uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v8;
    a1[32] = a2[32];
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 119) = *(_DWORD *)(a2 + 119);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    v9 = (int *)type metadata accessor for PlaybackIntent(0);
    v10 = v9[6];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v14 = *((_QWORD *)v13 - 1);
    v15 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v14 + 48);
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v78 = v15;
      v17 = *((_OWORD *)v12 + 1);
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v17;
      *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
      *((_QWORD *)v11 + 6) = *((_QWORD *)v12 + 6);
      v11[56] = v12[56];
      *((_QWORD *)v11 + 8) = *((_QWORD *)v12 + 8);
      v11[72] = v12[72];
      v18 = *((_OWORD *)v12 + 6);
      *((_OWORD *)v11 + 5) = *((_OWORD *)v12 + 5);
      *((_OWORD *)v11 + 6) = v18;
      *((_OWORD *)v11 + 7) = *((_OWORD *)v12 + 7);
      v19 = v13[12];
      __dst = &v11[v19];
      v20 = &v12[v19];
      v21 = sub_1A93F726C();
      v22 = *(_QWORD *)(v21 - 8);
      v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      v80 = v14;
      if (v82(v20, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(__dst, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      }
      v24 = v22;
      *(_OWORD *)&v11[v13[13]] = *(_OWORD *)&v12[v13[13]];
      *(_QWORD *)&v11[v13[14]] = *(_QWORD *)&v12[v13[14]];
      v25 = v13[15];
      v26 = &v11[v25];
      v27 = &v12[v25];
      v26[8] = v27[8];
      *(_QWORD *)v26 = *(_QWORD *)v27;
      v28 = v13[16];
      v29 = &v11[v28];
      v30 = &v12[v28];
      v75 = v9;
      v73 = v24;
      if (v82(&v12[v28], 1, v21))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v29, v30, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v29, 0, 1, v21);
      }
      *(_OWORD *)&v11[v13[17]] = *(_OWORD *)&v12[v13[17]];
      *(_QWORD *)&v11[v13[18]] = *(_QWORD *)&v12[v13[18]];
      v11[v13[19]] = v12[v13[19]];
      v32 = v13[20];
      v33 = &v11[v32];
      v34 = &v12[v32];
      v35 = sub_1A93F738C();
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v9 = v75;
      *(_OWORD *)&v11[v13[21]] = *(_OWORD *)&v12[v13[21]];
      v11[v13[22]] = v12[v13[22]];
      v11[v13[23]] = v12[v13[23]];
      v11[v13[24]] = v12[v13[24]];
      v11[v13[25]] = v12[v13[25]];
      v11[v13[26]] = v12[v13[26]];
      v11[v13[27]] = v12[v13[27]];
      v11[v13[28]] = v12[v13[28]];
      *(_QWORD *)&v11[v13[29]] = *(_QWORD *)&v12[v13[29]];
      *(_QWORD *)&v11[v13[30]] = *(_QWORD *)&v12[v13[30]];
      v11[v13[31]] = v12[v13[31]];
      *(_OWORD *)&v11[v13[32]] = *(_OWORD *)&v12[v13[32]];
      *(_QWORD *)&v11[v13[33]] = *(_QWORD *)&v12[v13[33]];
      *(_OWORD *)&v11[v13[34]] = *(_OWORD *)&v12[v13[34]];
      *(_OWORD *)&v11[v13[35]] = *(_OWORD *)&v12[v13[35]];
      v38 = v13[36];
      v39 = &v11[v38];
      v40 = &v12[v38];
      if (v82(&v12[v38], 1, v21))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v39, v40, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v39, 0, 1, v21);
      }
      *(_OWORD *)&v11[v13[37]] = *(_OWORD *)&v12[v13[37]];
      *(_OWORD *)&v11[v13[38]] = *(_OWORD *)&v12[v13[38]];
      v11[v13[39]] = v12[v13[39]];
      v11[v13[40]] = v12[v13[40]];
      v11[v13[41]] = v12[v13[41]];
      v11[v13[42]] = v12[v13[42]];
      v11[v13[43]] = v12[v13[43]];
      v11[v13[44]] = v12[v13[44]];
      v11[v13[45]] = v12[v13[45]];
      v14 = v80;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v80 + 56))(v11, 0, 1, v13);
      v15 = v78;
    }
    *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
    *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
    v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA370) + 48);
    v43 = &a1[v42];
    v44 = &a2[v42];
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    v46 = *(_QWORD *)(v45 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 3, v45))
    {
      v47 = type metadata accessor for PlaybackIntent.PlayerConstraint(0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      if (v15(v44, 1, v13))
      {
        memcpy(v43, v44, *(_QWORD *)(v46 + 64));
      }
      else
      {
        v81 = v14;
        v48 = *((_OWORD *)v44 + 1);
        *(_OWORD *)v43 = *(_OWORD *)v44;
        *((_OWORD *)v43 + 1) = v48;
        *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
        *((_QWORD *)v43 + 6) = *((_QWORD *)v44 + 6);
        v43[56] = v44[56];
        *((_QWORD *)v43 + 8) = *((_QWORD *)v44 + 8);
        v43[72] = v44[72];
        v49 = *((_OWORD *)v44 + 6);
        *((_OWORD *)v43 + 5) = *((_OWORD *)v44 + 5);
        *((_OWORD *)v43 + 6) = v49;
        *((_OWORD *)v43 + 7) = *((_OWORD *)v44 + 7);
        v50 = v13[12];
        v76 = &v43[v50];
        v51 = &v44[v50];
        v52 = sub_1A93F726C();
        v53 = *(_QWORD *)(v52 - 8);
        v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
        v79 = v53;
        if (v83(v51, 1, v52))
        {
          v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v76, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v76, v51, v52);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v76, 0, 1, v52);
        }
        *(_OWORD *)&v43[v13[13]] = *(_OWORD *)&v44[v13[13]];
        *(_QWORD *)&v43[v13[14]] = *(_QWORD *)&v44[v13[14]];
        v55 = v13[15];
        v56 = &v43[v55];
        v57 = &v44[v55];
        v56[8] = v57[8];
        *(_QWORD *)v56 = *(_QWORD *)v57;
        v58 = v13[16];
        v59 = &v43[v58];
        v60 = &v44[v58];
        v74 = v52;
        if (v83(&v44[v58], 1, v52))
        {
          v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v59, v60, v52);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v59, 0, 1, v52);
        }
        *(_OWORD *)&v43[v13[17]] = *(_OWORD *)&v44[v13[17]];
        *(_QWORD *)&v43[v13[18]] = *(_QWORD *)&v44[v13[18]];
        v43[v13[19]] = v44[v13[19]];
        v62 = v13[20];
        v77 = &v43[v62];
        v63 = &v44[v62];
        v64 = sub_1A93F738C();
        v65 = *(_QWORD *)(v64 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
        {
          v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(v77, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v77, v63, v64);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v77, 0, 1, v64);
        }
        *(_OWORD *)&v43[v13[21]] = *(_OWORD *)&v44[v13[21]];
        v43[v13[22]] = v44[v13[22]];
        v43[v13[23]] = v44[v13[23]];
        v43[v13[24]] = v44[v13[24]];
        v43[v13[25]] = v44[v13[25]];
        v43[v13[26]] = v44[v13[26]];
        v43[v13[27]] = v44[v13[27]];
        v43[v13[28]] = v44[v13[28]];
        *(_QWORD *)&v43[v13[29]] = *(_QWORD *)&v44[v13[29]];
        *(_QWORD *)&v43[v13[30]] = *(_QWORD *)&v44[v13[30]];
        v43[v13[31]] = v44[v13[31]];
        *(_OWORD *)&v43[v13[32]] = *(_OWORD *)&v44[v13[32]];
        *(_QWORD *)&v43[v13[33]] = *(_QWORD *)&v44[v13[33]];
        *(_OWORD *)&v43[v13[34]] = *(_OWORD *)&v44[v13[34]];
        *(_OWORD *)&v43[v13[35]] = *(_OWORD *)&v44[v13[35]];
        v67 = v13[36];
        v68 = &v43[v67];
        v69 = &v44[v67];
        if (v83(&v44[v67], 1, v74))
        {
          v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v68, v69, v74);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v68, 0, 1, v74);
        }
        *(_OWORD *)&v43[v13[37]] = *(_OWORD *)&v44[v13[37]];
        *(_OWORD *)&v43[v13[38]] = *(_OWORD *)&v44[v13[38]];
        v43[v13[39]] = v44[v13[39]];
        v43[v13[40]] = v44[v13[40]];
        v43[v13[41]] = v44[v13[41]];
        v43[v13[42]] = v44[v13[42]];
        v43[v13[43]] = v44[v13[43]];
        v43[v13[44]] = v44[v13[44]];
        v43[v13[45]] = v44[v13[45]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v81 + 56))(v43, 0, 1, v13);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 3, v45);
    }
    goto LABEL_38;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_1A93F726C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_38:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for PlaybackIntent.ValidationError(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  unsigned int (*v15)(_QWORD, _QWORD, _QWORD);
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v72;
  char *__dst;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  void *v78;
  char *v79;
  char *v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  unsigned int (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;

  if (a1 != a2)
  {
    sub_1A9064714((uint64_t)a1, type metadata accessor for PlaybackIntent.ValidationError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v8;
      a1[32] = a2[32];
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_DWORD *)(a1 + 119) = *(_DWORD *)(a2 + 119);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      v9 = (int *)type metadata accessor for PlaybackIntent(0);
      v10 = v9[6];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      v14 = *((_QWORD *)v13 - 1);
      v15 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v14 + 48);
      if (v15(v12, 1, v13))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v83 = v14;
        v17 = *((_OWORD *)v12 + 1);
        *(_OWORD *)v11 = *(_OWORD *)v12;
        *((_OWORD *)v11 + 1) = v17;
        *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
        *((_QWORD *)v11 + 6) = *((_QWORD *)v12 + 6);
        v11[56] = v12[56];
        *((_QWORD *)v11 + 8) = *((_QWORD *)v12 + 8);
        v11[72] = v12[72];
        v18 = *((_OWORD *)v12 + 6);
        *((_OWORD *)v11 + 5) = *((_OWORD *)v12 + 5);
        *((_OWORD *)v11 + 6) = v18;
        *((_OWORD *)v11 + 7) = *((_OWORD *)v12 + 7);
        v19 = v13[12];
        __dst = &v11[v19];
        v20 = &v12[v19];
        v21 = sub_1A93F726C();
        v22 = *(_QWORD *)(v21 - 8);
        v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
        v78 = v15;
        if (v81(v20, 1, v21))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 32))(__dst, v20, v21);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
        }
        v24 = v22;
        *(_OWORD *)&v11[v13[13]] = *(_OWORD *)&v12[v13[13]];
        *(_QWORD *)&v11[v13[14]] = *(_QWORD *)&v12[v13[14]];
        v25 = v13[15];
        v26 = &v11[v25];
        v27 = &v12[v25];
        v26[8] = v27[8];
        *(_QWORD *)v26 = *(_QWORD *)v27;
        v28 = v13[16];
        v29 = &v11[v28];
        v30 = &v12[v28];
        v76 = v9;
        v72 = v24;
        if (v81(&v12[v28], 1, v21))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v29, v30, v21);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v29, 0, 1, v21);
        }
        *(_OWORD *)&v11[v13[17]] = *(_OWORD *)&v12[v13[17]];
        *(_QWORD *)&v11[v13[18]] = *(_QWORD *)&v12[v13[18]];
        v11[v13[19]] = v12[v13[19]];
        v32 = v13[20];
        v33 = &v11[v32];
        v34 = &v12[v32];
        v35 = sub_1A93F738C();
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
        {
          v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
        }
        v9 = v76;
        *(_OWORD *)&v11[v13[21]] = *(_OWORD *)&v12[v13[21]];
        v11[v13[22]] = v12[v13[22]];
        v11[v13[23]] = v12[v13[23]];
        v11[v13[24]] = v12[v13[24]];
        v11[v13[25]] = v12[v13[25]];
        v11[v13[26]] = v12[v13[26]];
        v11[v13[27]] = v12[v13[27]];
        v11[v13[28]] = v12[v13[28]];
        *(_QWORD *)&v11[v13[29]] = *(_QWORD *)&v12[v13[29]];
        *(_QWORD *)&v11[v13[30]] = *(_QWORD *)&v12[v13[30]];
        v11[v13[31]] = v12[v13[31]];
        *(_OWORD *)&v11[v13[32]] = *(_OWORD *)&v12[v13[32]];
        *(_QWORD *)&v11[v13[33]] = *(_QWORD *)&v12[v13[33]];
        *(_OWORD *)&v11[v13[34]] = *(_OWORD *)&v12[v13[34]];
        *(_OWORD *)&v11[v13[35]] = *(_OWORD *)&v12[v13[35]];
        v38 = v13[36];
        v39 = &v11[v38];
        v40 = &v12[v38];
        v14 = v83;
        if (v81(&v12[v38], 1, v21))
        {
          v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v39, v40, v21);
          v14 = v83;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v39, 0, 1, v21);
        }
        *(_OWORD *)&v11[v13[37]] = *(_OWORD *)&v12[v13[37]];
        *(_OWORD *)&v11[v13[38]] = *(_OWORD *)&v12[v13[38]];
        v11[v13[39]] = v12[v13[39]];
        v11[v13[40]] = v12[v13[40]];
        v11[v13[41]] = v12[v13[41]];
        v11[v13[42]] = v12[v13[42]];
        v11[v13[43]] = v12[v13[43]];
        v11[v13[44]] = v12[v13[44]];
        v11[v13[45]] = v12[v13[45]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
        v15 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v78;
      }
      *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
      *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
      v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA370) + 48);
      v43 = &a1[v42];
      v44 = &a2[v42];
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 3, v45))
      {
        v47 = type metadata accessor for PlaybackIntent.PlayerConstraint(0);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        if (v15(v44, 1, v13))
        {
          memcpy(v43, v44, *(_QWORD *)(v46 + 64));
        }
        else
        {
          v75 = v46;
          v48 = *((_OWORD *)v44 + 1);
          *(_OWORD *)v43 = *(_OWORD *)v44;
          *((_OWORD *)v43 + 1) = v48;
          *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
          *((_QWORD *)v43 + 6) = *((_QWORD *)v44 + 6);
          v43[56] = v44[56];
          *((_QWORD *)v43 + 8) = *((_QWORD *)v44 + 8);
          v43[72] = v44[72];
          v49 = *((_OWORD *)v44 + 6);
          *((_OWORD *)v43 + 5) = *((_OWORD *)v44 + 5);
          *((_OWORD *)v43 + 6) = v49;
          *((_OWORD *)v43 + 7) = *((_OWORD *)v44 + 7);
          v50 = v13[12];
          v79 = &v43[v50];
          v51 = &v44[v50];
          v52 = sub_1A93F726C();
          v53 = *(_QWORD *)(v52 - 8);
          v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
          v74 = v53;
          if (v82(v51, 1, v52))
          {
            v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
            memcpy(v79, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v79, v51, v52);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v79, 0, 1, v52);
          }
          *(_OWORD *)&v43[v13[13]] = *(_OWORD *)&v44[v13[13]];
          *(_QWORD *)&v43[v13[14]] = *(_QWORD *)&v44[v13[14]];
          v55 = v13[15];
          v56 = &v43[v55];
          v57 = &v44[v55];
          v56[8] = v57[8];
          *(_QWORD *)v56 = *(_QWORD *)v57;
          v58 = v13[16];
          v80 = &v43[v58];
          v59 = &v44[v58];
          v84 = v14;
          v77 = v52;
          if (v82(&v44[v58], 1, v52))
          {
            v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
            memcpy(v80, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v80, v59, v52);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v80, 0, 1, v52);
          }
          *(_OWORD *)&v43[v13[17]] = *(_OWORD *)&v44[v13[17]];
          *(_QWORD *)&v43[v13[18]] = *(_QWORD *)&v44[v13[18]];
          v43[v13[19]] = v44[v13[19]];
          v61 = v13[20];
          v62 = &v43[v61];
          v63 = &v44[v61];
          v64 = sub_1A93F738C();
          v65 = *(_QWORD *)(v64 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
          {
            v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
            memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
          }
          *(_OWORD *)&v43[v13[21]] = *(_OWORD *)&v44[v13[21]];
          v43[v13[22]] = v44[v13[22]];
          v43[v13[23]] = v44[v13[23]];
          v43[v13[24]] = v44[v13[24]];
          v43[v13[25]] = v44[v13[25]];
          v43[v13[26]] = v44[v13[26]];
          v43[v13[27]] = v44[v13[27]];
          v43[v13[28]] = v44[v13[28]];
          *(_QWORD *)&v43[v13[29]] = *(_QWORD *)&v44[v13[29]];
          *(_QWORD *)&v43[v13[30]] = *(_QWORD *)&v44[v13[30]];
          v43[v13[31]] = v44[v13[31]];
          *(_OWORD *)&v43[v13[32]] = *(_OWORD *)&v44[v13[32]];
          *(_QWORD *)&v43[v13[33]] = *(_QWORD *)&v44[v13[33]];
          *(_OWORD *)&v43[v13[34]] = *(_OWORD *)&v44[v13[34]];
          *(_OWORD *)&v43[v13[35]] = *(_OWORD *)&v44[v13[35]];
          v67 = v13[36];
          v68 = &v43[v67];
          v69 = &v44[v67];
          if (v82(&v44[v67], 1, v77))
          {
            v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
            memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v68, v69, v77);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v68, 0, 1, v77);
          }
          v46 = v75;
          *(_OWORD *)&v43[v13[37]] = *(_OWORD *)&v44[v13[37]];
          *(_OWORD *)&v43[v13[38]] = *(_OWORD *)&v44[v13[38]];
          v43[v13[39]] = v44[v13[39]];
          v43[v13[40]] = v44[v13[40]];
          v43[v13[41]] = v44[v13[41]];
          v43[v13[42]] = v44[v13[42]];
          v43[v13[43]] = v44[v13[43]];
          v43[v13[44]] = v44[v13[44]];
          v43[v13[45]] = v44[v13[45]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v84 + 56))(v43, 0, 1, v13);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 3, v45);
      }
      goto LABEL_39;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_1A93F726C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_39:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1A91FCF2C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;

  v0 = sub_1A93F726C();
  v1 = v0;
  if (v2 <= 0x3F)
  {
    v8 = *(_QWORD *)(v0 - 8) + 64;
    v9 = MEMORY[0x1E0DE9D38] + 64;
    v1 = type metadata accessor for PlaybackIntent(319);
    if (v3 <= 0x3F)
    {
      v4 = type metadata accessor for PlaybackIntent.PlayerConstraint(319);
      if (v5 > 0x3F)
      {
        return v4;
      }
      else
      {
        swift_getTupleTypeLayout2();
        v10 = &v7;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return v1;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option()
{
  return &type metadata for PlaybackIntent.Option;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaybackIntent.PlayerConstraint(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  void (*v73)(uint64_t *, _QWORD, uint64_t, int *);
  char *__dst;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      v11 = *((_QWORD *)v10 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v11 + 48))(a2, 1, v10))
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      else
      {
        v76 = v11;
        v77 = v8;
        v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        v13 = a2[3];
        a1[2] = a2[2];
        a1[3] = v13;
        v14 = a2[5];
        a1[4] = a2[4];
        a1[5] = v14;
        a1[6] = a2[6];
        *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
        v15 = a2[8];
        *((_BYTE *)a1 + 72) = *((_BYTE *)a2 + 72);
        a1[8] = v15;
        v16 = a2[11];
        a1[10] = a2[10];
        a1[11] = v16;
        v17 = a2[13];
        a1[12] = a2[12];
        a1[13] = v17;
        v18 = a2[15];
        a1[14] = a2[14];
        a1[15] = v18;
        v19 = v10[12];
        __dst = (char *)a1 + v19;
        v78 = (char *)a2 + v19;
        v20 = sub_1A93F726C();
        v82 = *(_QWORD *)(v20 - 8);
        v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v21(v78, 1, v20))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(__dst, v78, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
          v23 = v82;
        }
        else
        {
          v23 = v82;
          (*(void (**)(char *, char *, uint64_t))(v82 + 16))(__dst, v78, v20);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(__dst, 0, 1, v20);
        }
        v24 = v10[13];
        v25 = (uint64_t *)((char *)a1 + v24);
        v26 = (uint64_t *)((char *)a2 + v24);
        v27 = v26[1];
        *v25 = *v26;
        v25[1] = v27;
        *(uint64_t *)((char *)a1 + v10[14]) = *(uint64_t *)((char *)a2 + v10[14]);
        v28 = v10[15];
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        *(_QWORD *)v29 = *(_QWORD *)v30;
        v29[8] = v30[8];
        v31 = v10[16];
        v32 = (char *)a1 + v31;
        v33 = (char *)a2 + v31;
        swift_bridgeObjectRetain();
        v80 = v21;
        v81 = v20;
        if (v21(v33, 1, v20))
        {
          v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v32, v33, v20);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v32, 0, 1, v20);
        }
        v35 = v10[17];
        v36 = (uint64_t *)((char *)a1 + v35);
        v37 = (uint64_t *)((char *)a2 + v35);
        v38 = v37[1];
        *v36 = *v37;
        v36[1] = v38;
        *(uint64_t *)((char *)a1 + v10[18]) = *(uint64_t *)((char *)a2 + v10[18]);
        *((_BYTE *)a1 + v10[19]) = *((_BYTE *)a2 + v10[19]);
        v39 = v10[20];
        v79 = (char *)a1 + v39;
        v40 = (char *)a2 + v39;
        v41 = sub_1A93F738C();
        v42 = *(_QWORD *)(v41 - 8);
        v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v43(v40, 1, v41))
        {
          v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(v79, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v79, v40, v41);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v79, 0, 1, v41);
        }
        v45 = v10[21];
        v46 = (uint64_t *)((char *)a1 + v45);
        v47 = (uint64_t *)((char *)a2 + v45);
        v48 = v47[1];
        *v46 = *v47;
        v46[1] = v48;
        *((_BYTE *)a1 + v10[22]) = *((_BYTE *)a2 + v10[22]);
        *((_BYTE *)a1 + v10[23]) = *((_BYTE *)a2 + v10[23]);
        *((_BYTE *)a1 + v10[24]) = *((_BYTE *)a2 + v10[24]);
        *((_BYTE *)a1 + v10[25]) = *((_BYTE *)a2 + v10[25]);
        *((_BYTE *)a1 + v10[26]) = *((_BYTE *)a2 + v10[26]);
        *((_BYTE *)a1 + v10[27]) = *((_BYTE *)a2 + v10[27]);
        *((_BYTE *)a1 + v10[28]) = *((_BYTE *)a2 + v10[28]);
        *(uint64_t *)((char *)a1 + v10[29]) = *(uint64_t *)((char *)a2 + v10[29]);
        *(uint64_t *)((char *)a1 + v10[30]) = *(uint64_t *)((char *)a2 + v10[30]);
        *((_BYTE *)a1 + v10[31]) = *((_BYTE *)a2 + v10[31]);
        v49 = v10[32];
        v50 = (uint64_t *)((char *)a1 + v49);
        v51 = (uint64_t *)((char *)a2 + v49);
        v52 = v51[1];
        *v50 = *v51;
        v50[1] = v52;
        *(uint64_t *)((char *)a1 + v10[33]) = *(uint64_t *)((char *)a2 + v10[33]);
        v53 = v10[34];
        v54 = (uint64_t *)((char *)a1 + v53);
        v55 = (uint64_t *)((char *)a2 + v53);
        v56 = v55[1];
        *v54 = *v55;
        v54[1] = v56;
        v57 = v10[35];
        v58 = (uint64_t *)((char *)a1 + v57);
        v59 = (uint64_t *)((char *)a2 + v57);
        v60 = v59[1];
        *v58 = *v59;
        v58[1] = v60;
        v61 = v10[36];
        v62 = (char *)a1 + v61;
        v63 = (char *)a2 + v61;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v80(v63, 1, v81))
        {
          v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v62, v63, v81);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v62, 0, 1, v81);
        }
        v8 = v77;
        v65 = v10[37];
        v66 = (uint64_t *)((char *)a1 + v65);
        v67 = (uint64_t *)((char *)a2 + v65);
        v68 = v67[1];
        *v66 = *v67;
        v66[1] = v68;
        v69 = v10[38];
        v70 = (uint64_t *)((char *)a1 + v69);
        v71 = (uint64_t *)((char *)a2 + v69);
        v72 = v71[1];
        *v70 = *v71;
        v70[1] = v72;
        *((_BYTE *)a1 + v10[39]) = *((_BYTE *)a2 + v10[39]);
        *((_BYTE *)a1 + v10[40]) = *((_BYTE *)a2 + v10[40]);
        *((_BYTE *)a1 + v10[41]) = *((_BYTE *)a2 + v10[41]);
        *((_BYTE *)a1 + v10[42]) = *((_BYTE *)a2 + v10[42]);
        *((_BYTE *)a1 + v10[43]) = *((_BYTE *)a2 + v10[43]);
        *((_BYTE *)a1 + v10[44]) = *((_BYTE *)a2 + v10[44]);
        *((_BYTE *)a1 + v10[45]) = *((_BYTE *)a2 + v10[45]);
        v73 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v76 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v73(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for PlaybackIntent.PlayerConstraint(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
  if (!(_DWORD)result)
  {
    v4 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(a1, 1, v4);
    if (!(_DWORD)result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = a1 + v4[12];
      v6 = sub_1A93F726C();
      v7 = *(_QWORD *)(v6 - 8);
      v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
      if (!v8(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      swift_bridgeObjectRelease();
      v9 = a1 + v4[16];
      if (!v8(v9, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
      swift_bridgeObjectRelease();
      swift_release();
      v10 = a1 + v4[20];
      v11 = sub_1A93F738C();
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = a1 + v4[36];
      if (!v8(v13, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13, v6);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

_QWORD *initializeWithCopy for PlaybackIntent.PlayerConstraint(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  void (*v71)(_QWORD *, _QWORD, uint64_t, int *);
  char *v73;
  char *__dst;
  char *__dsta;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v9 = *((_QWORD *)v8 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v77 = v9;
      v78 = v7;
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      a1[6] = a2[6];
      *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
      v13 = a2[8];
      *((_BYTE *)a1 + 72) = *((_BYTE *)a2 + 72);
      a1[8] = v13;
      v14 = a2[11];
      a1[10] = a2[10];
      a1[11] = v14;
      v15 = a2[13];
      a1[12] = a2[12];
      a1[13] = v15;
      v16 = a2[15];
      a1[14] = a2[14];
      a1[15] = v16;
      v17 = v8[12];
      __dst = (char *)a1 + v17;
      v73 = (char *)a2 + v17;
      v18 = sub_1A93F726C();
      v79 = *(_QWORD *)(v18 - 8);
      v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v80 = v19;
      if (v19(v73, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(__dst, v73, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        v21 = v79;
      }
      else
      {
        v21 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(__dst, v73, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(__dst, 0, 1, v18);
      }
      v22 = v8[13];
      v23 = (_QWORD *)((char *)a1 + v22);
      v24 = (_QWORD *)((char *)a2 + v22);
      v25 = v24[1];
      *v23 = *v24;
      v23[1] = v25;
      *(_QWORD *)((char *)a1 + v8[14]) = *(_QWORD *)((char *)a2 + v8[14]);
      v26 = v8[15];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      *(_QWORD *)v27 = *(_QWORD *)v28;
      v27[8] = v28[8];
      v29 = v8[16];
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      swift_bridgeObjectRetain();
      v76 = v18;
      if (v19(v31, 1, v18))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v30, v31, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v30, 0, 1, v18);
      }
      v33 = v8[17];
      v34 = (_QWORD *)((char *)a1 + v33);
      v35 = (_QWORD *)((char *)a2 + v33);
      v36 = v35[1];
      *v34 = *v35;
      v34[1] = v36;
      *(_QWORD *)((char *)a1 + v8[18]) = *(_QWORD *)((char *)a2 + v8[18]);
      *((_BYTE *)a1 + v8[19]) = *((_BYTE *)a2 + v8[19]);
      v37 = v8[20];
      __dsta = (char *)a1 + v37;
      v38 = (char *)a2 + v37;
      v39 = sub_1A93F738C();
      v40 = *(_QWORD *)(v39 - 8);
      v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v41(v38, 1, v39))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
        memcpy(__dsta, v38, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(__dsta, v38, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(__dsta, 0, 1, v39);
      }
      v43 = v8[21];
      v44 = (_QWORD *)((char *)a1 + v43);
      v45 = (_QWORD *)((char *)a2 + v43);
      v46 = v45[1];
      *v44 = *v45;
      v44[1] = v46;
      *((_BYTE *)a1 + v8[22]) = *((_BYTE *)a2 + v8[22]);
      *((_BYTE *)a1 + v8[23]) = *((_BYTE *)a2 + v8[23]);
      *((_BYTE *)a1 + v8[24]) = *((_BYTE *)a2 + v8[24]);
      *((_BYTE *)a1 + v8[25]) = *((_BYTE *)a2 + v8[25]);
      *((_BYTE *)a1 + v8[26]) = *((_BYTE *)a2 + v8[26]);
      *((_BYTE *)a1 + v8[27]) = *((_BYTE *)a2 + v8[27]);
      *((_BYTE *)a1 + v8[28]) = *((_BYTE *)a2 + v8[28]);
      *(_QWORD *)((char *)a1 + v8[29]) = *(_QWORD *)((char *)a2 + v8[29]);
      *(_QWORD *)((char *)a1 + v8[30]) = *(_QWORD *)((char *)a2 + v8[30]);
      *((_BYTE *)a1 + v8[31]) = *((_BYTE *)a2 + v8[31]);
      v47 = v8[32];
      v48 = (_QWORD *)((char *)a1 + v47);
      v49 = (_QWORD *)((char *)a2 + v47);
      v50 = v49[1];
      *v48 = *v49;
      v48[1] = v50;
      *(_QWORD *)((char *)a1 + v8[33]) = *(_QWORD *)((char *)a2 + v8[33]);
      v51 = v8[34];
      v52 = (_QWORD *)((char *)a1 + v51);
      v53 = (_QWORD *)((char *)a2 + v51);
      v54 = v53[1];
      *v52 = *v53;
      v52[1] = v54;
      v55 = v8[35];
      v56 = (_QWORD *)((char *)a1 + v55);
      v57 = (_QWORD *)((char *)a2 + v55);
      v58 = v57[1];
      *v56 = *v57;
      v56[1] = v58;
      v59 = v8[36];
      v60 = (char *)a1 + v59;
      v61 = (char *)a2 + v59;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v80(v61, 1, v76))
      {
        v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v60, v61, v76);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v60, 0, 1, v76);
      }
      v63 = v8[37];
      v64 = (_QWORD *)((char *)a1 + v63);
      v65 = (_QWORD *)((char *)a2 + v63);
      v66 = v65[1];
      *v64 = *v65;
      v64[1] = v66;
      v67 = v8[38];
      v68 = (_QWORD *)((char *)a1 + v67);
      v69 = (_QWORD *)((char *)a2 + v67);
      v70 = v69[1];
      *v68 = *v69;
      v68[1] = v70;
      *((_BYTE *)a1 + v8[39]) = *((_BYTE *)a2 + v8[39]);
      *((_BYTE *)a1 + v8[40]) = *((_BYTE *)a2 + v8[40]);
      *((_BYTE *)a1 + v8[41]) = *((_BYTE *)a2 + v8[41]);
      *((_BYTE *)a1 + v8[42]) = *((_BYTE *)a2 + v8[42]);
      *((_BYTE *)a1 + v8[43]) = *((_BYTE *)a2 + v8[43]);
      *((_BYTE *)a1 + v8[44]) = *((_BYTE *)a2 + v8[44]);
      *((_BYTE *)a1 + v8[45]) = *((_BYTE *)a2 + v8[45]);
      v71 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v77 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71(a1, 0, 1, v8);
      v7 = v78;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

uint64_t assignWithCopy for PlaybackIntent.PlayerConstraint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  int *v11;
  unsigned int (**v12)(_QWORD, uint64_t, int *);
  size_t v13;
  int *v14;
  _QWORD *v15;
  uint64_t (*v16)(uint64_t, uint64_t, int *);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(const void *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(const void *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(const void *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  const void *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  void (*v74)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(void *, uint64_t, uint64_t);
  int v84;
  int v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  const void *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  void *v101;
  const void *v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int (*v105)(const void *, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  void *v120;
  const void *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  void (*v129)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  void *v139;
  void *v140;
  int v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  uint64_t v147;
  void *v148;
  void *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t (*v152)(void *, uint64_t, uint64_t);
  int v153;
  int v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  _QWORD *v158;
  uint64_t v159;
  _QWORD *v160;
  _QWORD *v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  _QWORD *v166;
  _QWORD *v167;
  uint64_t v168;
  void *v169;
  const void *v170;
  int v171;
  int v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  uint64_t v177;
  _QWORD *v178;
  _QWORD *v179;
  const void *v180;
  const void *v181;
  uint64_t v182;
  void *__dst;
  _QWORD *__dsta;
  uint64_t v185;
  _QWORD *v186;
  void *v187;
  void *v188;
  void *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t (*v192)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v193)(const void *, uint64_t, uint64_t);
  unsigned int (*v194)(const void *, uint64_t, uint64_t);
  uint64_t v195;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1A905FD54(a1, &qword_1ED2AAF68);
      goto LABEL_7;
    }
    v14 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v15 = (_QWORD *)*((_QWORD *)v14 - 1);
    v16 = (uint64_t (*)(uint64_t, uint64_t, int *))v15[6];
    v17 = v16(a1, 1, v14);
    v18 = v16(a2, 1, v14);
    if (v17)
    {
      if (!v18)
      {
        v186 = v15;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        v19 = *(_QWORD *)(a2 + 48);
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        *(_QWORD *)(a1 + 48) = v19;
        v20 = *(_QWORD *)(a2 + 64);
        *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
        *(_QWORD *)(a1 + 64) = v20;
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
        *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
        *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        v21 = v14[12];
        v181 = (const void *)(a2 + v21);
        __dst = (void *)(a1 + v21);
        v22 = sub_1A93F726C();
        v190 = *(_QWORD *)(v22 - 8);
        v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v190 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v193 = v23;
        if (v23(v181, 1, v22))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(__dst, v181, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
          v25 = v190;
        }
        else
        {
          v25 = v190;
          (*(void (**)(void *, const void *, uint64_t))(v190 + 16))(__dst, v181, v22);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v190 + 56))(__dst, 0, 1, v22);
        }
        v86 = v14[13];
        v87 = (_QWORD *)(a1 + v86);
        v88 = (_QWORD *)(a2 + v86);
        *v87 = *v88;
        v87[1] = v88[1];
        *(_QWORD *)(a1 + v14[14]) = *(_QWORD *)(a2 + v14[14]);
        v89 = v14[15];
        v90 = a1 + v89;
        v91 = (uint64_t *)(a2 + v89);
        v92 = *v91;
        *(_BYTE *)(v90 + 8) = *((_BYTE *)v91 + 8);
        *(_QWORD *)v90 = v92;
        v93 = v14[16];
        v94 = (void *)(a1 + v93);
        v95 = (const void *)(a2 + v93);
        swift_bridgeObjectRetain();
        if (v193(v95, 1, v22))
        {
          v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v94, v95, v22);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v94, 0, 1, v22);
        }
        v97 = v14[17];
        v98 = (_QWORD *)(a1 + v97);
        v99 = (_QWORD *)(a2 + v97);
        *v98 = *v99;
        v98[1] = v99[1];
        *(_QWORD *)(a1 + v14[18]) = *(_QWORD *)(a2 + v14[18]);
        *(_BYTE *)(a1 + v14[19]) = *(_BYTE *)(a2 + v14[19]);
        v100 = v14[20];
        v101 = (void *)(a1 + v100);
        v102 = (const void *)(a2 + v100);
        v103 = sub_1A93F738C();
        v104 = *(_QWORD *)(v103 - 8);
        v105 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v104 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v105(v102, 1, v103))
        {
          v106 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v104 + 16))(v101, v102, v103);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
        }
        v107 = v14[21];
        v108 = (_QWORD *)(a1 + v107);
        v109 = (_QWORD *)(a2 + v107);
        *v108 = *v109;
        v108[1] = v109[1];
        *(_BYTE *)(a1 + v14[22]) = *(_BYTE *)(a2 + v14[22]);
        *(_BYTE *)(a1 + v14[23]) = *(_BYTE *)(a2 + v14[23]);
        *(_BYTE *)(a1 + v14[24]) = *(_BYTE *)(a2 + v14[24]);
        *(_BYTE *)(a1 + v14[25]) = *(_BYTE *)(a2 + v14[25]);
        *(_BYTE *)(a1 + v14[26]) = *(_BYTE *)(a2 + v14[26]);
        *(_BYTE *)(a1 + v14[27]) = *(_BYTE *)(a2 + v14[27]);
        *(_BYTE *)(a1 + v14[28]) = *(_BYTE *)(a2 + v14[28]);
        *(_QWORD *)(a1 + v14[29]) = *(_QWORD *)(a2 + v14[29]);
        *(_QWORD *)(a1 + v14[30]) = *(_QWORD *)(a2 + v14[30]);
        *(_BYTE *)(a1 + v14[31]) = *(_BYTE *)(a2 + v14[31]);
        v110 = v14[32];
        v111 = (_QWORD *)(a1 + v110);
        v112 = (_QWORD *)(a2 + v110);
        *v111 = *v112;
        v111[1] = v112[1];
        *(_QWORD *)(a1 + v14[33]) = *(_QWORD *)(a2 + v14[33]);
        v113 = v14[34];
        v114 = (_QWORD *)(a1 + v113);
        v115 = (_QWORD *)(a2 + v113);
        *v114 = *v115;
        v114[1] = v115[1];
        v116 = v14[35];
        v117 = (_QWORD *)(a1 + v116);
        v118 = (_QWORD *)(a2 + v116);
        *v117 = *v118;
        v117[1] = v118[1];
        v119 = v14[36];
        v120 = (void *)(a1 + v119);
        v121 = (const void *)(a2 + v119);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v193(v121, 1, v22))
        {
          v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v190 + 16))(v120, v121, v22);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v190 + 56))(v120, 0, 1, v22);
        }
        v123 = v14[37];
        v124 = (_QWORD *)(a1 + v123);
        v125 = (_QWORD *)(a2 + v123);
        *v124 = *v125;
        v124[1] = v125[1];
        v126 = v14[38];
        v127 = (_QWORD *)(a1 + v126);
        v128 = (_QWORD *)(a2 + v126);
        *v127 = *v128;
        v127[1] = v128[1];
        *(_BYTE *)(a1 + v14[39]) = *(_BYTE *)(a2 + v14[39]);
        *(_BYTE *)(a1 + v14[40]) = *(_BYTE *)(a2 + v14[40]);
        *(_BYTE *)(a1 + v14[41]) = *(_BYTE *)(a2 + v14[41]);
        *(_BYTE *)(a1 + v14[42]) = *(_BYTE *)(a2 + v14[42]);
        *(_BYTE *)(a1 + v14[43]) = *(_BYTE *)(a2 + v14[43]);
        *(_BYTE *)(a1 + v14[44]) = *(_BYTE *)(a2 + v14[44]);
        *(_BYTE *)(a1 + v14[45]) = *(_BYTE *)(a2 + v14[45]);
        v129 = (void (*)(uint64_t, _QWORD, uint64_t, int *))v186[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v129(a1, 0, 1, v14);
        return a1;
      }
      goto LABEL_17;
    }
    if (v18)
    {
      sub_1A9064714(a1, type metadata accessor for PodcastsMediaLibrary.MediaItem);
LABEL_17:
      v13 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v76 = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v76;
    v77 = *(_QWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v77;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v78 = v14[12];
    v79 = (void *)(a1 + v78);
    v80 = (void *)(a2 + v78);
    v81 = sub_1A93F726C();
    v82 = *(_QWORD *)(v81 - 8);
    v83 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v82 + 48);
    v84 = v83(v79, 1, v81);
    v85 = v83(v80, 1, v81);
    if (v84)
    {
      if (!v85)
      {
        (*(void (**)(void *, void *, uint64_t))(v82 + 16))(v79, v80, v81);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
        goto LABEL_48;
      }
    }
    else
    {
      if (!v85)
      {
        (*(void (**)(void *, void *, uint64_t))(v82 + 24))(v79, v80, v81);
LABEL_48:
        v131 = v14[13];
        v132 = (_QWORD *)(a1 + v131);
        v133 = (_QWORD *)(a2 + v131);
        *v132 = *v133;
        v132[1] = v133[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + v14[14]) = *(_QWORD *)(a2 + v14[14]);
        v134 = v14[15];
        v135 = a1 + v134;
        v136 = a2 + v134;
        v137 = *(_BYTE *)(v136 + 8);
        *(_QWORD *)v135 = *(_QWORD *)v136;
        *(_BYTE *)(v135 + 8) = v137;
        v138 = v14[16];
        v139 = (void *)(a1 + v138);
        v140 = (void *)(a2 + v138);
        v141 = v83((void *)(a1 + v138), 1, v81);
        v142 = v83(v140, 1, v81);
        v192 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v83;
        v195 = v82;
        if (v141)
        {
          if (!v142)
          {
            (*(void (**)(void *, void *, uint64_t))(v82 + 16))(v139, v140, v81);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v139, 0, 1, v81);
            goto LABEL_54;
          }
        }
        else
        {
          if (!v142)
          {
            (*(void (**)(void *, void *, uint64_t))(v82 + 24))(v139, v140, v81);
LABEL_54:
            v144 = v14[17];
            v145 = (_QWORD *)(a1 + v144);
            v146 = (_QWORD *)(a2 + v144);
            *v145 = *v146;
            v145[1] = v146[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(a1 + v14[18]) = *(_QWORD *)(a2 + v14[18]);
            swift_retain();
            swift_release();
            *(_BYTE *)(a1 + v14[19]) = *(_BYTE *)(a2 + v14[19]);
            v147 = v14[20];
            v148 = (void *)(a1 + v147);
            v149 = (void *)(a2 + v147);
            v150 = sub_1A93F738C();
            v151 = *(_QWORD *)(v150 - 8);
            v152 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v151 + 48);
            v153 = v152(v148, 1, v150);
            v154 = v152(v149, 1, v150);
            if (v153)
            {
              if (!v154)
              {
                (*(void (**)(void *, void *, uint64_t))(v151 + 16))(v148, v149, v150);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v151 + 56))(v148, 0, 1, v150);
                goto LABEL_60;
              }
            }
            else
            {
              if (!v154)
              {
                (*(void (**)(void *, void *, uint64_t))(v151 + 24))(v148, v149, v150);
LABEL_60:
                v156 = v14[21];
                v157 = (_QWORD *)(a1 + v156);
                v158 = (_QWORD *)(a2 + v156);
                *v157 = *v158;
                v157[1] = v158[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_BYTE *)(a1 + v14[22]) = *(_BYTE *)(a2 + v14[22]);
                *(_BYTE *)(a1 + v14[23]) = *(_BYTE *)(a2 + v14[23]);
                *(_BYTE *)(a1 + v14[24]) = *(_BYTE *)(a2 + v14[24]);
                *(_BYTE *)(a1 + v14[25]) = *(_BYTE *)(a2 + v14[25]);
                *(_BYTE *)(a1 + v14[26]) = *(_BYTE *)(a2 + v14[26]);
                *(_BYTE *)(a1 + v14[27]) = *(_BYTE *)(a2 + v14[27]);
                *(_BYTE *)(a1 + v14[28]) = *(_BYTE *)(a2 + v14[28]);
                *(_QWORD *)(a1 + v14[29]) = *(_QWORD *)(a2 + v14[29]);
                *(_QWORD *)(a1 + v14[30]) = *(_QWORD *)(a2 + v14[30]);
                *(_BYTE *)(a1 + v14[31]) = *(_BYTE *)(a2 + v14[31]);
                v159 = v14[32];
                v160 = (_QWORD *)(a1 + v159);
                v161 = (_QWORD *)(a2 + v159);
                *v160 = *v161;
                v160[1] = v161[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_QWORD *)(a1 + v14[33]) = *(_QWORD *)(a2 + v14[33]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v162 = v14[34];
                v163 = (_QWORD *)(a1 + v162);
                v164 = (_QWORD *)(a2 + v162);
                *v163 = *v164;
                v163[1] = v164[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v165 = v14[35];
                v166 = (_QWORD *)(a1 + v165);
                v167 = (_QWORD *)(a2 + v165);
                *v166 = *v167;
                v166[1] = v167[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v168 = v14[36];
                v169 = (void *)(a1 + v168);
                v170 = (const void *)(a2 + v168);
                v171 = v192(a1 + v168, 1, v81);
                v172 = v192((uint64_t)v170, 1, v81);
                if (v171)
                {
                  if (!v172)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v195 + 16))(v169, v170, v81);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v195 + 56))(v169, 0, 1, v81);
LABEL_66:
                    v174 = v14[37];
                    v175 = (_QWORD *)(a1 + v174);
                    v176 = (_QWORD *)(a2 + v174);
                    *v175 = *v176;
                    v175[1] = v176[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v177 = v14[38];
                    v178 = (_QWORD *)(a1 + v177);
                    v179 = (_QWORD *)(a2 + v177);
                    *v178 = *v179;
                    v178[1] = v179[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(_BYTE *)(a1 + v14[39]) = *(_BYTE *)(a2 + v14[39]);
                    *(_BYTE *)(a1 + v14[40]) = *(_BYTE *)(a2 + v14[40]);
                    *(_BYTE *)(a1 + v14[41]) = *(_BYTE *)(a2 + v14[41]);
                    *(_BYTE *)(a1 + v14[42]) = *(_BYTE *)(a2 + v14[42]);
                    *(_BYTE *)(a1 + v14[43]) = *(_BYTE *)(a2 + v14[43]);
                    *(_BYTE *)(a1 + v14[44]) = *(_BYTE *)(a2 + v14[44]);
                    *(_BYTE *)(a1 + v14[45]) = *(_BYTE *)(a2 + v14[45]);
                    return a1;
                  }
                }
                else
                {
                  if (!v172)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v195 + 24))(v169, v170, v81);
                    goto LABEL_66;
                  }
                  (*(void (**)(void *, uint64_t))(v195 + 8))(v169, v81);
                }
                v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
                memcpy(v169, v170, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
                goto LABEL_66;
              }
              (*(void (**)(void *, uint64_t))(v151 + 8))(v148, v150);
            }
            v155 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
            memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
            goto LABEL_60;
          }
          (*(void (**)(void *, uint64_t))(v82 + 8))(v139, v81);
        }
        v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
        goto LABEL_54;
      }
      (*(void (**)(void *, uint64_t))(v82 + 8))(v79, v81);
    }
    v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
    goto LABEL_48;
  }
  if (v10)
  {
LABEL_7:
    v13 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy((void *)a1, (const void *)a2, v13);
    return a1;
  }
  v11 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v12 = (unsigned int (**)(_QWORD, uint64_t, int *))*((_QWORD *)v11 - 1);
  if (v12[6](a2, 1, v11))
  {
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    __dsta = v12;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    v26 = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v26;
    v27 = *(_QWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v27;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    v28 = v11[12];
    v187 = (void *)(a1 + v28);
    v180 = (const void *)(a2 + v28);
    v29 = sub_1A93F726C();
    v191 = *(_QWORD *)(v29 - 8);
    v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v191 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v194 = v30;
    if (v30(v180, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v187, v180, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      v32 = v191;
    }
    else
    {
      v32 = v191;
      (*(void (**)(void *, const void *, uint64_t))(v191 + 16))(v187, v180, v29);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v187, 0, 1, v29);
    }
    v33 = v11[13];
    v34 = (_QWORD *)(a1 + v33);
    v35 = (_QWORD *)(a2 + v33);
    *v34 = *v35;
    v34[1] = v35[1];
    *(_QWORD *)(a1 + v11[14]) = *(_QWORD *)(a2 + v11[14]);
    v36 = v11[15];
    v37 = a1 + v36;
    v38 = (uint64_t *)(a2 + v36);
    v39 = *v38;
    *(_BYTE *)(v37 + 8) = *((_BYTE *)v38 + 8);
    *(_QWORD *)v37 = v39;
    v40 = v11[16];
    v41 = (void *)(a1 + v40);
    v42 = (const void *)(a2 + v40);
    swift_bridgeObjectRetain();
    v182 = v29;
    v185 = v7;
    if (v30(v42, 1, v29))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v32 + 16))(v41, v42, v29);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v41, 0, 1, v29);
    }
    v44 = v11[17];
    v45 = (_QWORD *)(a1 + v44);
    v46 = (_QWORD *)(a2 + v44);
    *v45 = *v46;
    v45[1] = v46[1];
    *(_QWORD *)(a1 + v11[18]) = *(_QWORD *)(a2 + v11[18]);
    *(_BYTE *)(a1 + v11[19]) = *(_BYTE *)(a2 + v11[19]);
    v47 = v11[20];
    v188 = (void *)(a1 + v47);
    v48 = (const void *)(a2 + v47);
    v49 = sub_1A93F738C();
    v50 = *(_QWORD *)(v49 - 8);
    v51 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v51(v48, 1, v49))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(v188, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v50 + 16))(v188, v48, v49);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v188, 0, 1, v49);
    }
    v7 = v185;
    v53 = v11[21];
    v54 = (_QWORD *)(a1 + v53);
    v55 = (_QWORD *)(a2 + v53);
    *v54 = *v55;
    v54[1] = v55[1];
    *(_BYTE *)(a1 + v11[22]) = *(_BYTE *)(a2 + v11[22]);
    *(_BYTE *)(a1 + v11[23]) = *(_BYTE *)(a2 + v11[23]);
    *(_BYTE *)(a1 + v11[24]) = *(_BYTE *)(a2 + v11[24]);
    *(_BYTE *)(a1 + v11[25]) = *(_BYTE *)(a2 + v11[25]);
    *(_BYTE *)(a1 + v11[26]) = *(_BYTE *)(a2 + v11[26]);
    *(_BYTE *)(a1 + v11[27]) = *(_BYTE *)(a2 + v11[27]);
    *(_BYTE *)(a1 + v11[28]) = *(_BYTE *)(a2 + v11[28]);
    *(_QWORD *)(a1 + v11[29]) = *(_QWORD *)(a2 + v11[29]);
    *(_QWORD *)(a1 + v11[30]) = *(_QWORD *)(a2 + v11[30]);
    *(_BYTE *)(a1 + v11[31]) = *(_BYTE *)(a2 + v11[31]);
    v56 = v11[32];
    v57 = (_QWORD *)(a1 + v56);
    v58 = (_QWORD *)(a2 + v56);
    *v57 = *v58;
    v57[1] = v58[1];
    *(_QWORD *)(a1 + v11[33]) = *(_QWORD *)(a2 + v11[33]);
    v59 = v11[34];
    v60 = (_QWORD *)(a1 + v59);
    v61 = (_QWORD *)(a2 + v59);
    *v60 = *v61;
    v60[1] = v61[1];
    v62 = v11[35];
    v63 = (_QWORD *)(a1 + v62);
    v64 = (_QWORD *)(a2 + v62);
    *v63 = *v64;
    v63[1] = v64[1];
    v65 = v11[36];
    v189 = (void *)(a1 + v65);
    v66 = (const void *)(a2 + v65);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v194(v66, 1, v182))
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v189, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v191 + 16))(v189, v66, v182);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v189, 0, 1, v182);
    }
    v68 = v11[37];
    v69 = (_QWORD *)(a1 + v68);
    v70 = (_QWORD *)(a2 + v68);
    *v69 = *v70;
    v69[1] = v70[1];
    v71 = v11[38];
    v72 = (_QWORD *)(a1 + v71);
    v73 = (_QWORD *)(a2 + v71);
    *v72 = *v73;
    v72[1] = v73[1];
    *(_BYTE *)(a1 + v11[39]) = *(_BYTE *)(a2 + v11[39]);
    *(_BYTE *)(a1 + v11[40]) = *(_BYTE *)(a2 + v11[40]);
    *(_BYTE *)(a1 + v11[41]) = *(_BYTE *)(a2 + v11[41]);
    *(_BYTE *)(a1 + v11[42]) = *(_BYTE *)(a2 + v11[42]);
    *(_BYTE *)(a1 + v11[43]) = *(_BYTE *)(a2 + v11[43]);
    *(_BYTE *)(a1 + v11[44]) = *(_BYTE *)(a2 + v11[44]);
    *(_BYTE *)(a1 + v11[45]) = *(_BYTE *)(a2 + v11[45]);
    v74 = (void (*)(uint64_t, _QWORD, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v74(a1, 0, 1, v11);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

_OWORD *initializeWithTake for PlaybackIntent.PlayerConstraint(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v9 = *((_QWORD *)v8 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v39 = v9;
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      *((_BYTE *)a1 + 72) = *((_BYTE *)a2 + 72);
      v11 = a2[6];
      a1[5] = a2[5];
      a1[6] = v11;
      a1[7] = a2[7];
      v12 = v8[12];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_1A93F726C();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      if (v17(v14, 1, v15))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      *(_OWORD *)((char *)a1 + v8[13]) = *(_OWORD *)((char *)a2 + v8[13]);
      *(_QWORD *)((char *)a1 + v8[14]) = *(_QWORD *)((char *)a2 + v8[14]);
      v19 = v8[15];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v20[8] = v21[8];
      *(_QWORD *)v20 = *(_QWORD *)v21;
      v22 = v8[16];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v37 = v17;
      v38 = v16;
      if (v17((char *)a2 + v22, 1, v15))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v23, v24, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v23, 0, 1, v15);
      }
      *(_OWORD *)((char *)a1 + v8[17]) = *(_OWORD *)((char *)a2 + v8[17]);
      *(_QWORD *)((char *)a1 + v8[18]) = *(_QWORD *)((char *)a2 + v8[18]);
      *((_BYTE *)a1 + v8[19]) = *((_BYTE *)a2 + v8[19]);
      v26 = v8[20];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      v29 = sub_1A93F738C();
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      *(_OWORD *)((char *)a1 + v8[21]) = *(_OWORD *)((char *)a2 + v8[21]);
      *((_BYTE *)a1 + v8[22]) = *((_BYTE *)a2 + v8[22]);
      *((_BYTE *)a1 + v8[23]) = *((_BYTE *)a2 + v8[23]);
      *((_BYTE *)a1 + v8[24]) = *((_BYTE *)a2 + v8[24]);
      *((_BYTE *)a1 + v8[25]) = *((_BYTE *)a2 + v8[25]);
      *((_BYTE *)a1 + v8[26]) = *((_BYTE *)a2 + v8[26]);
      *((_BYTE *)a1 + v8[27]) = *((_BYTE *)a2 + v8[27]);
      *((_BYTE *)a1 + v8[28]) = *((_BYTE *)a2 + v8[28]);
      *(_QWORD *)((char *)a1 + v8[29]) = *(_QWORD *)((char *)a2 + v8[29]);
      *(_QWORD *)((char *)a1 + v8[30]) = *(_QWORD *)((char *)a2 + v8[30]);
      *((_BYTE *)a1 + v8[31]) = *((_BYTE *)a2 + v8[31]);
      *(_OWORD *)((char *)a1 + v8[32]) = *(_OWORD *)((char *)a2 + v8[32]);
      *(_QWORD *)((char *)a1 + v8[33]) = *(_QWORD *)((char *)a2 + v8[33]);
      *(_OWORD *)((char *)a1 + v8[34]) = *(_OWORD *)((char *)a2 + v8[34]);
      *(_OWORD *)((char *)a1 + v8[35]) = *(_OWORD *)((char *)a2 + v8[35]);
      v32 = v8[36];
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      if (v37((char *)a2 + v32, 1, v15))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v33, v34, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v33, 0, 1, v15);
      }
      *(_OWORD *)((char *)a1 + v8[37]) = *(_OWORD *)((char *)a2 + v8[37]);
      *(_OWORD *)((char *)a1 + v8[38]) = *(_OWORD *)((char *)a2 + v8[38]);
      *((_BYTE *)a1 + v8[39]) = *((_BYTE *)a2 + v8[39]);
      *((_BYTE *)a1 + v8[40]) = *((_BYTE *)a2 + v8[40]);
      *((_BYTE *)a1 + v8[41]) = *((_BYTE *)a2 + v8[41]);
      *((_BYTE *)a1 + v8[42]) = *((_BYTE *)a2 + v8[42]);
      *((_BYTE *)a1 + v8[43]) = *((_BYTE *)a2 + v8[43]);
      *((_BYTE *)a1 + v8[44]) = *((_BYTE *)a2 + v8[44]);
      *((_BYTE *)a1 + v8[45]) = *((_BYTE *)a2 + v8[45]);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v39 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

uint64_t assignWithTake for PlaybackIntent.PlayerConstraint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  int *v11;
  uint64_t v12;
  size_t v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, int *);
  int v17;
  int v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(const void *, uint64_t, uint64_t);
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(const void *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(void *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  const void *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  const void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  const void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  void *v97;
  int v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(void *, uint64_t, uint64_t);
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  const void *v137;
  int v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  unsigned int (*v151)(const void *, uint64_t, uint64_t);
  uint64_t v152;
  uint64_t (*v153)(uint64_t, uint64_t, uint64_t);
  uint64_t v154;
  unsigned int (*v155)(const void *, uint64_t, uint64_t);
  uint64_t v156;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1A905FD54(a1, &qword_1ED2AAF68);
      goto LABEL_7;
    }
    v14 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v15 = *((_QWORD *)v14 - 1);
    v16 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v15 + 48);
    v17 = v16(a1, 1, v14);
    v18 = v16(a2, 1, v14);
    if (v17)
    {
      if (!v18)
      {
        v19 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v19;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
        v20 = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 96) = v20;
        *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
        v21 = v14[12];
        v22 = (void *)(a1 + v21);
        v23 = (const void *)(a2 + v21);
        v24 = sub_1A93F726C();
        v25 = *(_QWORD *)(v24 - 8);
        v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
        if (v26(v23, 1, v24))
        {
          v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v22, v23, v24);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        }
        *(_OWORD *)(a1 + v14[13]) = *(_OWORD *)(a2 + v14[13]);
        *(_QWORD *)(a1 + v14[14]) = *(_QWORD *)(a2 + v14[14]);
        v69 = v14[15];
        v70 = a1 + v69;
        v71 = a2 + v69;
        *(_BYTE *)(v70 + 8) = *(_BYTE *)(v71 + 8);
        *(_QWORD *)v70 = *(_QWORD *)v71;
        v72 = v14[16];
        v73 = (void *)(a1 + v72);
        v74 = (const void *)(a2 + v72);
        v155 = v26;
        if (v26((const void *)(a2 + v72), 1, v24))
        {
          v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v73, v74, v24);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v73, 0, 1, v24);
        }
        *(_OWORD *)(a1 + v14[17]) = *(_OWORD *)(a2 + v14[17]);
        *(_QWORD *)(a1 + v14[18]) = *(_QWORD *)(a2 + v14[18]);
        *(_BYTE *)(a1 + v14[19]) = *(_BYTE *)(a2 + v14[19]);
        v76 = v14[20];
        v77 = (void *)(a1 + v76);
        v78 = (const void *)(a2 + v76);
        v79 = sub_1A93F738C();
        v80 = *(_QWORD *)(v79 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
        {
          v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v80 + 32))(v77, v78, v79);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
        }
        *(_OWORD *)(a1 + v14[21]) = *(_OWORD *)(a2 + v14[21]);
        *(_BYTE *)(a1 + v14[22]) = *(_BYTE *)(a2 + v14[22]);
        *(_BYTE *)(a1 + v14[23]) = *(_BYTE *)(a2 + v14[23]);
        *(_BYTE *)(a1 + v14[24]) = *(_BYTE *)(a2 + v14[24]);
        *(_BYTE *)(a1 + v14[25]) = *(_BYTE *)(a2 + v14[25]);
        *(_BYTE *)(a1 + v14[26]) = *(_BYTE *)(a2 + v14[26]);
        *(_BYTE *)(a1 + v14[27]) = *(_BYTE *)(a2 + v14[27]);
        *(_BYTE *)(a1 + v14[28]) = *(_BYTE *)(a2 + v14[28]);
        *(_QWORD *)(a1 + v14[29]) = *(_QWORD *)(a2 + v14[29]);
        *(_QWORD *)(a1 + v14[30]) = *(_QWORD *)(a2 + v14[30]);
        *(_BYTE *)(a1 + v14[31]) = *(_BYTE *)(a2 + v14[31]);
        *(_OWORD *)(a1 + v14[32]) = *(_OWORD *)(a2 + v14[32]);
        *(_QWORD *)(a1 + v14[33]) = *(_QWORD *)(a2 + v14[33]);
        *(_OWORD *)(a1 + v14[34]) = *(_OWORD *)(a2 + v14[34]);
        *(_OWORD *)(a1 + v14[35]) = *(_OWORD *)(a2 + v14[35]);
        v82 = v14[36];
        v83 = (void *)(a1 + v82);
        v84 = (const void *)(a2 + v82);
        if (v155((const void *)(a2 + v82), 1, v24))
        {
          v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v83, v84, v24);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v83, 0, 1, v24);
        }
        *(_OWORD *)(a1 + v14[37]) = *(_OWORD *)(a2 + v14[37]);
        *(_OWORD *)(a1 + v14[38]) = *(_OWORD *)(a2 + v14[38]);
        *(_BYTE *)(a1 + v14[39]) = *(_BYTE *)(a2 + v14[39]);
        *(_BYTE *)(a1 + v14[40]) = *(_BYTE *)(a2 + v14[40]);
        *(_BYTE *)(a1 + v14[41]) = *(_BYTE *)(a2 + v14[41]);
        *(_BYTE *)(a1 + v14[42]) = *(_BYTE *)(a2 + v14[42]);
        *(_BYTE *)(a1 + v14[43]) = *(_BYTE *)(a2 + v14[43]);
        *(_BYTE *)(a1 + v14[44]) = *(_BYTE *)(a2 + v14[44]);
        *(_BYTE *)(a1 + v14[45]) = *(_BYTE *)(a2 + v14[45]);
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v15 + 56))(a1, 0, 1, v14);
        return a1;
      }
      goto LABEL_17;
    }
    if (v18)
    {
      sub_1A9064714(a1, type metadata accessor for PodcastsMediaLibrary.MediaItem);
LABEL_17:
      v13 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    v55 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v55;
    swift_bridgeObjectRelease();
    v56 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v56;
    swift_bridgeObjectRelease();
    v57 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v57;
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    v58 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v58;
    swift_bridgeObjectRelease();
    v59 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v59;
    swift_bridgeObjectRelease();
    v60 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v60;
    swift_bridgeObjectRelease();
    v61 = v14[12];
    v62 = (void *)(a1 + v61);
    v63 = (void *)(a2 + v61);
    v64 = sub_1A93F726C();
    v65 = *(_QWORD *)(v64 - 8);
    v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v65 + 48);
    v67 = v66(v62, 1, v64);
    v68 = v66(v63, 1, v64);
    if (v67)
    {
      if (!v68)
      {
        (*(void (**)(void *, void *, uint64_t))(v65 + 32))(v62, v63, v64);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
        goto LABEL_48;
      }
    }
    else
    {
      if (!v68)
      {
        (*(void (**)(void *, void *, uint64_t))(v65 + 40))(v62, v63, v64);
LABEL_48:
        v87 = v14[13];
        v88 = (_QWORD *)(a1 + v87);
        v89 = (uint64_t *)(a2 + v87);
        v91 = *v89;
        v90 = v89[1];
        *v88 = v91;
        v88[1] = v90;
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + v14[14]) = *(_QWORD *)(a2 + v14[14]);
        v92 = v14[15];
        v93 = a1 + v92;
        v94 = a2 + v92;
        *(_QWORD *)v93 = *(_QWORD *)v94;
        *(_BYTE *)(v93 + 8) = *(_BYTE *)(v94 + 8);
        v95 = v14[16];
        v96 = (void *)(a1 + v95);
        v97 = (void *)(a2 + v95);
        v98 = v66((void *)(a1 + v95), 1, v64);
        v99 = v66(v97, 1, v64);
        v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v66;
        v156 = v65;
        if (v98)
        {
          if (!v99)
          {
            (*(void (**)(void *, void *, uint64_t))(v65 + 32))(v96, v97, v64);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v96, 0, 1, v64);
            goto LABEL_54;
          }
        }
        else
        {
          if (!v99)
          {
            (*(void (**)(void *, void *, uint64_t))(v65 + 40))(v96, v97, v64);
LABEL_54:
            v101 = v14[17];
            v102 = (_QWORD *)(a1 + v101);
            v103 = (uint64_t *)(a2 + v101);
            v105 = *v103;
            v104 = v103[1];
            *v102 = v105;
            v102[1] = v104;
            swift_bridgeObjectRelease();
            *(_QWORD *)(a1 + v14[18]) = *(_QWORD *)(a2 + v14[18]);
            swift_release();
            *(_BYTE *)(a1 + v14[19]) = *(_BYTE *)(a2 + v14[19]);
            v106 = v14[20];
            v107 = (void *)(a1 + v106);
            v108 = (void *)(a2 + v106);
            v109 = sub_1A93F738C();
            v110 = *(_QWORD *)(v109 - 8);
            v111 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v110 + 48);
            v112 = v111(v107, 1, v109);
            v113 = v111(v108, 1, v109);
            if (v112)
            {
              if (!v113)
              {
                (*(void (**)(void *, void *, uint64_t))(v110 + 32))(v107, v108, v109);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
                goto LABEL_60;
              }
            }
            else
            {
              if (!v113)
              {
                (*(void (**)(void *, void *, uint64_t))(v110 + 40))(v107, v108, v109);
LABEL_60:
                v115 = v14[21];
                v116 = (_QWORD *)(a1 + v115);
                v117 = (uint64_t *)(a2 + v115);
                v119 = *v117;
                v118 = v117[1];
                *v116 = v119;
                v116[1] = v118;
                swift_bridgeObjectRelease();
                *(_BYTE *)(a1 + v14[22]) = *(_BYTE *)(a2 + v14[22]);
                *(_BYTE *)(a1 + v14[23]) = *(_BYTE *)(a2 + v14[23]);
                *(_BYTE *)(a1 + v14[24]) = *(_BYTE *)(a2 + v14[24]);
                *(_BYTE *)(a1 + v14[25]) = *(_BYTE *)(a2 + v14[25]);
                *(_BYTE *)(a1 + v14[26]) = *(_BYTE *)(a2 + v14[26]);
                *(_BYTE *)(a1 + v14[27]) = *(_BYTE *)(a2 + v14[27]);
                *(_BYTE *)(a1 + v14[28]) = *(_BYTE *)(a2 + v14[28]);
                *(_QWORD *)(a1 + v14[29]) = *(_QWORD *)(a2 + v14[29]);
                *(_QWORD *)(a1 + v14[30]) = *(_QWORD *)(a2 + v14[30]);
                *(_BYTE *)(a1 + v14[31]) = *(_BYTE *)(a2 + v14[31]);
                v120 = v14[32];
                v121 = (_QWORD *)(a1 + v120);
                v122 = (uint64_t *)(a2 + v120);
                v124 = *v122;
                v123 = v122[1];
                *v121 = v124;
                v121[1] = v123;
                swift_bridgeObjectRelease();
                *(_QWORD *)(a1 + v14[33]) = *(_QWORD *)(a2 + v14[33]);
                swift_bridgeObjectRelease();
                v125 = v14[34];
                v126 = (_QWORD *)(a1 + v125);
                v127 = (uint64_t *)(a2 + v125);
                v129 = *v127;
                v128 = v127[1];
                *v126 = v129;
                v126[1] = v128;
                swift_bridgeObjectRelease();
                v130 = v14[35];
                v131 = (_QWORD *)(a1 + v130);
                v132 = (uint64_t *)(a2 + v130);
                v134 = *v132;
                v133 = v132[1];
                *v131 = v134;
                v131[1] = v133;
                swift_bridgeObjectRelease();
                v135 = v14[36];
                v136 = (void *)(a1 + v135);
                v137 = (const void *)(a2 + v135);
                v138 = v153(a1 + v135, 1, v64);
                v139 = v153((uint64_t)v137, 1, v64);
                if (v138)
                {
                  if (!v139)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v156 + 32))(v136, v137, v64);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v136, 0, 1, v64);
LABEL_66:
                    v141 = v14[37];
                    v142 = (_QWORD *)(a1 + v141);
                    v143 = (uint64_t *)(a2 + v141);
                    v145 = *v143;
                    v144 = v143[1];
                    *v142 = v145;
                    v142[1] = v144;
                    swift_bridgeObjectRelease();
                    v146 = v14[38];
                    v147 = (_QWORD *)(a1 + v146);
                    v148 = (uint64_t *)(a2 + v146);
                    v150 = *v148;
                    v149 = v148[1];
                    *v147 = v150;
                    v147[1] = v149;
                    swift_bridgeObjectRelease();
                    *(_BYTE *)(a1 + v14[39]) = *(_BYTE *)(a2 + v14[39]);
                    *(_BYTE *)(a1 + v14[40]) = *(_BYTE *)(a2 + v14[40]);
                    *(_BYTE *)(a1 + v14[41]) = *(_BYTE *)(a2 + v14[41]);
                    *(_BYTE *)(a1 + v14[42]) = *(_BYTE *)(a2 + v14[42]);
                    *(_BYTE *)(a1 + v14[43]) = *(_BYTE *)(a2 + v14[43]);
                    *(_BYTE *)(a1 + v14[44]) = *(_BYTE *)(a2 + v14[44]);
                    *(_BYTE *)(a1 + v14[45]) = *(_BYTE *)(a2 + v14[45]);
                    return a1;
                  }
                }
                else
                {
                  if (!v139)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v156 + 40))(v136, v137, v64);
                    goto LABEL_66;
                  }
                  (*(void (**)(void *, uint64_t))(v156 + 8))(v136, v64);
                }
                v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
                memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
                goto LABEL_66;
              }
              (*(void (**)(void *, uint64_t))(v110 + 8))(v107, v109);
            }
            v114 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
            memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
            goto LABEL_60;
          }
          (*(void (**)(void *, uint64_t))(v65 + 8))(v96, v64);
        }
        v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        goto LABEL_54;
      }
      (*(void (**)(void *, uint64_t))(v65 + 8))(v62, v64);
    }
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    goto LABEL_48;
  }
  if (v10)
  {
LABEL_7:
    v13 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy((void *)a1, (const void *)a2, v13);
    return a1;
  }
  v11 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v12 + 48))(a2, 1, v11))
  {
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v154 = v12;
    v28 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v28;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    v29 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v29;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    v30 = v11[12];
    v31 = (void *)(a1 + v30);
    v32 = (const void *)(a2 + v30);
    v33 = sub_1A93F726C();
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48);
    if (v35(v32, 1, v33))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v34 + 32))(v31, v32, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    *(_OWORD *)(a1 + v11[13]) = *(_OWORD *)(a2 + v11[13]);
    *(_QWORD *)(a1 + v11[14]) = *(_QWORD *)(a2 + v11[14]);
    v37 = v11[15];
    v38 = a1 + v37;
    v39 = a2 + v37;
    *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    v40 = v11[16];
    v41 = (void *)(a1 + v40);
    v42 = (const void *)(a2 + v40);
    v151 = v35;
    v152 = v34;
    if (v35((const void *)(a2 + v40), 1, v33))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v34 + 32))(v41, v42, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v41, 0, 1, v33);
    }
    *(_OWORD *)(a1 + v11[17]) = *(_OWORD *)(a2 + v11[17]);
    *(_QWORD *)(a1 + v11[18]) = *(_QWORD *)(a2 + v11[18]);
    *(_BYTE *)(a1 + v11[19]) = *(_BYTE *)(a2 + v11[19]);
    v44 = v11[20];
    v45 = (void *)(a1 + v44);
    v46 = (const void *)(a2 + v44);
    v47 = sub_1A93F738C();
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v48 + 32))(v45, v46, v47);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    *(_OWORD *)(a1 + v11[21]) = *(_OWORD *)(a2 + v11[21]);
    *(_BYTE *)(a1 + v11[22]) = *(_BYTE *)(a2 + v11[22]);
    *(_BYTE *)(a1 + v11[23]) = *(_BYTE *)(a2 + v11[23]);
    *(_BYTE *)(a1 + v11[24]) = *(_BYTE *)(a2 + v11[24]);
    *(_BYTE *)(a1 + v11[25]) = *(_BYTE *)(a2 + v11[25]);
    *(_BYTE *)(a1 + v11[26]) = *(_BYTE *)(a2 + v11[26]);
    *(_BYTE *)(a1 + v11[27]) = *(_BYTE *)(a2 + v11[27]);
    *(_BYTE *)(a1 + v11[28]) = *(_BYTE *)(a2 + v11[28]);
    *(_QWORD *)(a1 + v11[29]) = *(_QWORD *)(a2 + v11[29]);
    *(_QWORD *)(a1 + v11[30]) = *(_QWORD *)(a2 + v11[30]);
    *(_BYTE *)(a1 + v11[31]) = *(_BYTE *)(a2 + v11[31]);
    *(_OWORD *)(a1 + v11[32]) = *(_OWORD *)(a2 + v11[32]);
    *(_QWORD *)(a1 + v11[33]) = *(_QWORD *)(a2 + v11[33]);
    *(_OWORD *)(a1 + v11[34]) = *(_OWORD *)(a2 + v11[34]);
    *(_OWORD *)(a1 + v11[35]) = *(_OWORD *)(a2 + v11[35]);
    v50 = v11[36];
    v51 = (void *)(a1 + v50);
    v52 = (const void *)(a2 + v50);
    if (v151((const void *)(a2 + v50), 1, v33))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v152 + 32))(v51, v52, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v51, 0, 1, v33);
    }
    *(_OWORD *)(a1 + v11[37]) = *(_OWORD *)(a2 + v11[37]);
    *(_OWORD *)(a1 + v11[38]) = *(_OWORD *)(a2 + v11[38]);
    *(_BYTE *)(a1 + v11[39]) = *(_BYTE *)(a2 + v11[39]);
    *(_BYTE *)(a1 + v11[40]) = *(_BYTE *)(a2 + v11[40]);
    *(_BYTE *)(a1 + v11[41]) = *(_BYTE *)(a2 + v11[41]);
    *(_BYTE *)(a1 + v11[42]) = *(_BYTE *)(a2 + v11[42]);
    *(_BYTE *)(a1 + v11[43]) = *(_BYTE *)(a2 + v11[43]);
    *(_BYTE *)(a1 + v11[44]) = *(_BYTE *)(a2 + v11[44]);
    *(_BYTE *)(a1 + v11[45]) = *(_BYTE *)(a2 + v11[45]);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v154 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackIntent.PlayerConstraint()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9200360(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4)
    return v5 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PlaybackIntent.PlayerConstraint()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A92003BC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 3);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1A9200414(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
}

uint64_t sub_1A9200450(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 3, v4);
}

void sub_1A9200494()
{
  unint64_t v0;

  sub_1A90D74AC();
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

uint64_t storeEnumTagSinglePayload for PlaybackIntent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A9200534 + 4 * byte_1A9410672[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A9200568 + 4 * byte_1A941066D[v4]))();
}

uint64_t sub_1A9200568(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9200570(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9200578);
  return result;
}

uint64_t sub_1A9200584(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A920058CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A9200590(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9200598(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackIntent.CodingKeys()
{
  return &type metadata for PlaybackIntent.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PlaybackIntent.Option.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A9200600 + 4 * byte_1A941067C[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A9200634 + 4 * byte_1A9410677[v4]))();
}

uint64_t sub_1A9200634(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A920063C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9200644);
  return result;
}

uint64_t sub_1A9200650(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9200658);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A920065C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9200664(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option.CodingKeys()
{
  return &type metadata for PlaybackIntent.Option.CodingKeys;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option.StartPlaybackCodingKeys()
{
  return &type metadata for PlaybackIntent.Option.StartPlaybackCodingKeys;
}

uint64_t storeEnumTagSinglePayload for PlaybackIntent.Option.InitialItemPlayheadOverrideCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A92006D0 + 4 * byte_1A9410681[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A92006F0 + 4 * byte_1A9410686[v4]))();
}

_BYTE *sub_1A92006D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A92006F0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A92006F8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9200700(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9200708(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9200710(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option.InitialItemPlayheadOverrideCodingKeys()
{
  return &type metadata for PlaybackIntent.Option.InitialItemPlayheadOverrideCodingKeys;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option.PreventQueueingCodingKeys()
{
  return &type metadata for PlaybackIntent.Option.PreventQueueingCodingKeys;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option.ForceLocalPlaybackCodingKeys()
{
  return &type metadata for PlaybackIntent.Option.ForceLocalPlaybackCodingKeys;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option.SmartPlayCodingKeys()
{
  return &type metadata for PlaybackIntent.Option.SmartPlayCodingKeys;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option.IgnoreContinuousPlaybackSettingCodingKeys()
{
  return &type metadata for PlaybackIntent.Option.IgnoreContinuousPlaybackSettingCodingKeys;
}

unint64_t sub_1A9200770()
{
  unint64_t result;

  result = qword_1EEABA4A0;
  if (!qword_1EEABA4A0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410BBC, &type metadata for PlaybackIntent.Option.InitialItemPlayheadOverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA4A0);
  }
  return result;
}

unint64_t sub_1A92007B8()
{
  unint64_t result;

  result = qword_1EEABA4A8;
  if (!qword_1EEABA4A8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410CC4, &type metadata for PlaybackIntent.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA4A8);
  }
  return result;
}

unint64_t sub_1A9200800()
{
  unint64_t result;

  result = qword_1EEABA4B0;
  if (!qword_1EEABA4B0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410D7C, &type metadata for PlaybackIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA4B0);
  }
  return result;
}

unint64_t sub_1A9200848()
{
  unint64_t result;

  result = qword_1EEABA4B8;
  if (!qword_1EEABA4B8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410CEC, &type metadata for PlaybackIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA4B8);
  }
  return result;
}

unint64_t sub_1A9200890()
{
  unint64_t result;

  result = qword_1EEABA4C0;
  if (!qword_1EEABA4C0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410D14, &type metadata for PlaybackIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA4C0);
  }
  return result;
}

unint64_t sub_1A92008D8()
{
  unint64_t result;

  result = qword_1EEABA4C8;
  if (!qword_1EEABA4C8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410BE4, &type metadata for PlaybackIntent.Option.StartPlaybackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA4C8);
  }
  return result;
}

unint64_t sub_1A9200920()
{
  unint64_t result;

  result = qword_1EEABA4D0;
  if (!qword_1EEABA4D0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410C0C, &type metadata for PlaybackIntent.Option.StartPlaybackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA4D0);
  }
  return result;
}

unint64_t sub_1A9200968()
{
  unint64_t result;

  result = qword_1EEABA4D8;
  if (!qword_1EEABA4D8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410B2C, &type metadata for PlaybackIntent.Option.InitialItemPlayheadOverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA4D8);
  }
  return result;
}

unint64_t sub_1A92009B0()
{
  unint64_t result;

  result = qword_1EEABA4E0;
  if (!qword_1EEABA4E0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410B54, &type metadata for PlaybackIntent.Option.InitialItemPlayheadOverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA4E0);
  }
  return result;
}

unint64_t sub_1A92009F8()
{
  unint64_t result;

  result = qword_1EEABA4E8;
  if (!qword_1EEABA4E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410ADC, &type metadata for PlaybackIntent.Option.PreventQueueingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA4E8);
  }
  return result;
}

unint64_t sub_1A9200A40()
{
  unint64_t result;

  result = qword_1EEABA4F0;
  if (!qword_1EEABA4F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410B04, &type metadata for PlaybackIntent.Option.PreventQueueingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA4F0);
  }
  return result;
}

unint64_t sub_1A9200A88()
{
  unint64_t result;

  result = qword_1EEABA4F8;
  if (!qword_1EEABA4F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410A8C, &type metadata for PlaybackIntent.Option.ForceLocalPlaybackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA4F8);
  }
  return result;
}

unint64_t sub_1A9200AD0()
{
  unint64_t result;

  result = qword_1EEABA500;
  if (!qword_1EEABA500)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410AB4, &type metadata for PlaybackIntent.Option.ForceLocalPlaybackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA500);
  }
  return result;
}

unint64_t sub_1A9200B18()
{
  unint64_t result;

  result = qword_1EEABA508;
  if (!qword_1EEABA508)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410A3C, &type metadata for PlaybackIntent.Option.SmartPlayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA508);
  }
  return result;
}

unint64_t sub_1A9200B60()
{
  unint64_t result;

  result = qword_1EEABA510;
  if (!qword_1EEABA510)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410A64, &type metadata for PlaybackIntent.Option.SmartPlayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA510);
  }
  return result;
}

unint64_t sub_1A9200BA8()
{
  unint64_t result;

  result = qword_1EEABA518;
  if (!qword_1EEABA518)
  {
    result = MEMORY[0x1AF414014](&unk_1A94109EC, &type metadata for PlaybackIntent.Option.IgnoreContinuousPlaybackSettingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA518);
  }
  return result;
}

unint64_t sub_1A9200BF0()
{
  unint64_t result;

  result = qword_1EEABA520;
  if (!qword_1EEABA520)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410A14, &type metadata for PlaybackIntent.Option.IgnoreContinuousPlaybackSettingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA520);
  }
  return result;
}

unint64_t sub_1A9200C38()
{
  unint64_t result;

  result = qword_1EEABA528;
  if (!qword_1EEABA528)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410C34, &type metadata for PlaybackIntent.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA528);
  }
  return result;
}

unint64_t sub_1A9200C80()
{
  unint64_t result;

  result = qword_1EEABA530;
  if (!qword_1EEABA530)
  {
    result = MEMORY[0x1AF414014](&unk_1A9410C5C, &type metadata for PlaybackIntent.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABA530);
  }
  return result;
}

uint64_t sub_1A9200CC4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x616C507472617473 && a2 == 0xED00006B63616279;
  if (v3 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001A9448630 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x51746E6576657270 && a2 == 0xEF676E6965756575 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A9448650 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x616C507472616D73 && a2 == 0xE900000000000079 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001A9448670)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1A9200F64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x747465537473696CLL && a2 == 0xEC00000073676E69 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496C616974696E69 && a2 == 0xEB000000006D6574 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A9448690)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A9201194(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v13 = *(_QWORD *)(a1 + 88);
  v2 = *(_QWORD *)(a1 + 104);
  v12 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  v8 = *(_QWORD *)(a1 + 144);
  v7 = *(_QWORD *)(a1 + 152);
  v9 = *(_WORD *)(a1 + 168);
  v10 = *(_QWORD *)(a1 + 160);
  sub_1A912C71C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_WORD *)(a1 + 80));
  sub_1A912C71C(v13, v12, v2, v3, v4, v5, v6, v8, v7, v10, v9);
  return a1;
}

uint64_t sub_1A9201260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for PlaybackIntent(0);
  v6 = (v3 + v4 + *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = v0 + v6;
  sub_1A912C6B4(*(_QWORD *)(v0 + v6), *(_QWORD *)(v0 + v6 + 8), *(_QWORD *)(v0 + v6 + 16), *(_QWORD *)(v0 + v6 + 24), *(_BYTE *)(v0 + v6 + 32));
  if (*(_BYTE *)(v0 + v6 + 120) != 2)
    sub_1A90531EC(*(_QWORD *)(v7 + 40), *(_QWORD *)(v7 + 48), *(_QWORD *)(v7 + 56), *(_QWORD *)(v7 + 64), *(_QWORD *)(v7 + 72), *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), *(_QWORD *)(v7 + 96), *(_BYTE *)(v7 + 104));
  v8 = v7 + *(int *)(v5 + 24);
  v9 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v8 + v9[12];
    v11 = sub_1A93F726C();
    v19 = *(_QWORD *)(v11 - 8);
    v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    if (!v12(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v10, v11);
    swift_bridgeObjectRelease();
    v13 = v8 + v9[16];
    if (!v12(v13, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v13, v11);
    swift_bridgeObjectRelease();
    swift_release();
    v14 = v8 + v9[20];
    v15 = sub_1A93F738C();
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = v8 + v9[36];
    if (!v12(v17, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A920157C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaybackIntent(0) - 8) + 80);
  return sub_1A91EDCB0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t PodcastStateController.stateTransitionRules.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastStateController.__allocating_init(dataSources:transitionRules:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  PodcastStateController.init(dataSources:transitionRules:)(a1, a2);
  return v4;
}

uint64_t sub_1A920163C()
{
  uint64_t v1;

  type metadata accessor for PodcastStateMachine();
  sub_1A93F8874();
  return v1;
}

uint64_t sub_1A920169C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE v5[40];

  sub_1A9094604(a3, (uint64_t)v5);
  type metadata accessor for PodcastStateMachine();
  sub_1A93F8874();
  return v4;
}

uint64_t PodcastStateController.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t PodcastStateController.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t method lookup function for PodcastStateController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PodcastStateController.__allocating_init(dataSources:transitionRules:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of PodcastStateController.stateMachine(for:initialState:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _OWORD *);
  __int128 v5;
  _OWORD v7[2];
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(uint64_t (**)(uint64_t, _OWORD *))(*(_QWORD *)v2 + 184);
  v5 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v5;
  v8 = v3;
  return v4(a1, v7);
}

uint64_t dispatch thunk of PodcastStateController.stateMachine(for:initialState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, _OWORD *);
  __int128 v6;
  _OWORD v8[2];
  uint64_t v9;

  v4 = *(_QWORD *)(a3 + 32);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, _OWORD *))(*(_QWORD *)v3 + 192);
  v6 = *(_OWORD *)(a3 + 16);
  v8[0] = *(_OWORD *)a3;
  v8[1] = v6;
  v9 = v4;
  return v5(a1, a2, v8);
}

uint64_t dispatch thunk of PodcastStateController.refreshStates(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

id TranscriptModelBuilder.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t (*sub_1A9201858())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*sub_1A920189C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*sub_1A92018E0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1A9201924(_QWORD *a1@<X8>)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_lockedPhase);
  v4 = (uint64_t)&v3[4];
  v5 = v3 + 14;
  os_unfair_lock_lock(v3 + 14);
  sub_1A91D1820(v4, a1);
  os_unfair_lock_unlock(v5);
}

id sub_1A9201984(id result, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v3 = result;
  switch(a2)
  {
    case 0:
      objc_msgSend(result, sel_timeForElementAttribute_, 0);
      result = (id)sub_1A93F9450();
      v4 = v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_duration;
      *(_QWORD *)v4 = result;
      *(_QWORD *)(v4 + 8) = v5;
      *(_BYTE *)(v4 + 16) = 0;
      return result;
    case 1:
      objc_msgSend(result, sel_timeForElementAttribute_, 1);
      v7 = v6;
      objc_msgSend(v3, sel_timeForElementAttribute_, 2);
      v9 = v8;
      v10 = objc_msgSend(v3, sel_stringForElementAttribute_, 0);
      if (v10)
      {
        v11 = v10;
        v12 = sub_1A93F8040();
        v14 = v13;

      }
      else
      {
        v12 = 0;
        v14 = 0;
      }
      v30 = (uint64_t *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentParagraph);
      swift_beginAccess();
      v31 = *v30;
      v32 = v30[1];
      v33 = v30[2];
      v34 = v30[3];
      v35 = v30[4];
      *v30 = v7;
      v30[1] = v9;
      v30[2] = v12;
      v30[3] = v14;
      v30[4] = MEMORY[0x1E0DEE9D8];
      return (id)sub_1A92022B4(v31, v32, v33, v34, v35);
    case 2:
      result = objc_msgSend(result, sel_unitForCurrentSpan);
      if (result == (id)1)
      {
        objc_msgSend(v3, sel_timeForElementAttribute_, 1);
        v37 = v36;
        objc_msgSend(v3, sel_timeForElementAttribute_, 2);
        v39 = v38;
        v40 = v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentWord;
        swift_beginAccess();
        *(_QWORD *)v40 = v37;
        *(_QWORD *)(v40 + 8) = v39;
        *(_OWORD *)(v40 + 16) = xmmword_1A9411130;
        result = (id)swift_bridgeObjectRelease();
        *(_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord) = 1;
        v23 = OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence;
        v41 = *(_QWORD *)(v2
                        + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence);
        v21 = __OFADD__(v41, 1);
        v24 = v41 + 1;
        if (!v21)
          goto LABEL_20;
        __break(1u);
LABEL_18:
        v42 = *(_QWORD *)(v2
                        + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord);
        v21 = __OFADD__(v42, 1);
        v43 = v42 + 1;
        if (!v21)
        {
          *(_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord) = v43;
          v23 = OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence;
          v44 = *(_QWORD *)(v2
                          + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence);
          v21 = __OFADD__(v44, 1);
          v24 = v44 + 1;
          if (!v21)
            goto LABEL_20;
LABEL_24:
          __break(1u);
          JUMPOUT(0x1A9201CB8);
        }
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      if (result)
        goto LABEL_18;
      objc_msgSend(v3, sel_timeForElementAttribute_, 1);
      v16 = v15;
      objc_msgSend(v3, sel_timeForElementAttribute_, 2);
      v18 = v17;
      v19 = v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSentence;
      swift_beginAccess();
      *(_QWORD *)v19 = v16;
      *(_QWORD *)(v19 + 8) = v18;
      *(_QWORD *)(v19 + 16) = MEMORY[0x1E0DEE9D8];
      *(_BYTE *)(v19 + 24) = 0;
      result = (id)swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord);
      v21 = __OFADD__(v20, 1);
      v22 = v20 + 1;
      if (v21)
      {
        __break(1u);
        goto LABEL_23;
      }
      *(_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord) = v22;
      v23 = OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence;
      v24 = 1;
LABEL_20:
      *(_QWORD *)(v2 + v23) = v24;
      return result;
    case 3:
      result = objc_msgSend(result, sel_stringForElementAttribute_, 1);
      if (result)
      {
        v25 = result;
        v26 = sub_1A93F8040();
        v28 = v27;

        v29 = (uint64_t *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSpeakerID);
        *v29 = v26;
        v29[1] = v28;
        return (id)swift_bridgeObjectRelease();
      }
      return result;
    case 4:
      if (*(_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSpeakerID + 8))
        *(_BYTE *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_isParsingSpeakerName) = 1;
      return result;
    default:
      return result;
  }
}

void sub_1A9201D28(uint64_t a1, uint64_t *a2)
{
  sub_1A92022E4(a2);
}

uint64_t sub_1A9201D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A920275C(a2, a3);
}

uint64_t sub_1A9201E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  sub_1A91D1860(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  v4 = *(_QWORD *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_duration);
  v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_duration + 8);
  v6 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_duration + 16);
  v7 = (uint64_t *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_parsedParagraphs);
  swift_beginAccess();
  v8 = *v7;
  v9 = (uint64_t *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_speakers);
  swift_beginAccess();
  v10 = *v9;
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6 | 0x4000000000000000;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_1A9201F68(uint64_t a1, void *a2)
{
  sub_1A9202F9C(a2, "Error parsing TTML: %@");
}

void sub_1A9201FEC(uint64_t a1, void *a2)
{
  sub_1A9202F9C(a2, "Error validating TTML: %@");
}

id TranscriptModelBuilder.init()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v12;

  v1 = &v0[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentParagraph];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_parsedParagraphs] = MEMORY[0x1E0DEE9D8];
  v3 = &v0[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSentence];
  *((_QWORD *)v3 + 1) = 0;
  *((_QWORD *)v3 + 2) = 0;
  *(_QWORD *)v3 = 0;
  v3[24] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence] = 0;
  v4 = &v0[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentWord];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *(_QWORD *)&v0[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord] = 0;
  v5 = OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_speakers;
  v6 = v0;
  *(_QWORD *)&v0[v5] = sub_1A91133D4(v2);
  v7 = &v6[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSpeakerID];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v6[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_isParsingSpeakerName] = 0;
  v8 = &v6[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_duration];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v9 = OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_lockedPhase;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA598);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 56) = 0;
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v10 + 40) = 0;
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(v10 + 32) = 0x8000000000000000;
  *(_QWORD *)&v6[v9] = v10;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_interval] = 0;

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for TranscriptModelBuilder();
  return objc_msgSendSuper2(&v12, sel_init);
}

id TranscriptModelBuilder.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TranscriptModelBuilder();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A92022B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1A92022E4(uint64_t *a1)
{
  _QWORD **v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  double v5;
  uint64_t v6;
  _QWORD **v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  double *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  double v26;
  double v27;
  char v28;
  uint64_t v29;
  uint64_t (*v30)();
  _QWORD *v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v34;
  unint64_t v35;
  double *v36;
  char *v37;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)();
  _QWORD *v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  unint64_t v50;
  double *v51;
  _QWORD v53[4];

  v7 = v1;
  v9 = sub_1A93F6E34();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v53[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == (uint64_t *)2)
  {
    v19 = *(uint64_t *)((char *)v7
                     + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord);
    v20 = __OFSUB__(v19, 1);
    v21 = (_QWORD *)(v19 - 1);
    if (v20)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD **)((char *)v7
                 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord) = v21;
      v22 = *(uint64_t *)((char *)v7
                       + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence);
      v20 = __OFSUB__(v22, 1);
      v23 = (_QWORD *)(v22 - 1);
      if (!v20)
      {
        *(_QWORD **)((char *)v7
                   + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence) = v23;
        if (v21)
        {
          if (v23)
            return;
          v24 = (char *)v7 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSentence;
          swift_beginAccess();
          v25 = *((_QWORD *)v24 + 2);
          if (!v25)
            return;
          v27 = *(double *)v24;
          v26 = *((double *)v24 + 1);
          if (*(double *)v24 <= v26)
          {
            v28 = v24[24];
            swift_bridgeObjectRetain();
            v30 = sub_1A9201858();
            v31 = *(_QWORD **)(v29 + 32);
            if (v31)
            {
              v32 = v29;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(_QWORD *)(v32 + 32) = v31;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                v31 = sub_1A9118FD8(0, v31[2] + 1, 1, v31);
                *(_QWORD *)(v32 + 32) = v31;
              }
              v35 = v31[2];
              v34 = v31[3];
              if (v35 >= v34 >> 1)
              {
                v31 = sub_1A9118FD8((_QWORD *)(v34 > 1), v35 + 1, 1, v31);
                *(_QWORD *)(v32 + 32) = v31;
              }
              v31[2] = v35 + 1;
              v36 = (double *)&v31[4 * v35];
              v36[4] = v27;
              v36[5] = v26;
              *((_QWORD *)v36 + 6) = v25;
              *((_BYTE *)v36 + 56) = v28;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            ((void (*)(_QWORD *, _QWORD))v30)(v53, 0);
          }
          *(_QWORD *)v24 = 0;
          *((_QWORD *)v24 + 1) = 0;
          v24[24] = 0;
          *((_QWORD *)v24 + 2) = 0;
        }
        else
        {
          v37 = (char *)v7 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentWord;
          swift_beginAccess();
          v38 = *((_QWORD *)v37 + 3);
          if (!v38)
            return;
          v40 = *(double *)v37;
          v39 = *((double *)v37 + 1);
          if (*(double *)v37 <= v39)
          {
            v53[0] = *((_QWORD *)v37 + 2);
            v53[1] = v38;
            swift_bridgeObjectRetain_n();
            sub_1A93F6DF8();
            sub_1A90828B0();
            v41 = sub_1A93F8AE4();
            v43 = v42;
            (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v45 = sub_1A920189C();
            v46 = *(_QWORD **)(v44 + 16);
            if (v46)
            {
              v47 = v44;
              v48 = swift_isUniquelyReferenced_nonNull_native();
              *(_QWORD *)(v47 + 16) = v46;
              if ((v48 & 1) == 0)
              {
                v46 = sub_1A91190E4(0, v46[2] + 1, 1, v46);
                *(_QWORD *)(v47 + 16) = v46;
              }
              v50 = v46[2];
              v49 = v46[3];
              if (v50 >= v49 >> 1)
              {
                v46 = sub_1A91190E4((_QWORD *)(v49 > 1), v50 + 1, 1, v46);
                *(_QWORD *)(v47 + 16) = v46;
              }
              v46[2] = v50 + 1;
              v51 = (double *)&v46[4 * v50];
              v51[4] = v40;
              v51[5] = v39;
              *((_QWORD *)v51 + 6) = v41;
              *((_QWORD *)v51 + 7) = v43;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            ((void (*)(_QWORD *, _QWORD))v45)(v53, 0);
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          *(_OWORD *)v37 = 0u;
          *((_OWORD *)v37 + 1) = 0u;
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
    goto LABEL_42;
  }
  if (a1 == (uint64_t *)1)
  {
    a1 = (uint64_t *)((char *)v7 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentParagraph);
    swift_beginAccess();
    v2 = a1[2];
    v3 = a1[3];
    v9 = a1[4];
    if (!v9 || (v6 = *a1, v5 = *((double *)a1 + 1), *(double *)a1 > v5) || !*(_QWORD *)(v9 + 16))
    {
LABEL_10:
      v17 = *a1;
      v18 = a1[1];
      a1[4] = 0;
      *(_OWORD *)a1 = 0u;
      *((_OWORD *)a1 + 1) = 0u;
      sub_1A92022B4(v17, v18, v2, v3, v9);
      return;
    }
    v7 = (_QWORD **)((char *)v7 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_parsedParagraphs);
    swift_beginAccess();
    v4 = *v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = swift_isUniquelyReferenced_nonNull_native();
    *v7 = v4;
    if ((v13 & 1) != 0)
    {
LABEL_7:
      v15 = v4[2];
      v14 = v4[3];
      if (v15 >= v14 >> 1)
      {
        v4 = sub_1A91191F0((_QWORD *)(v14 > 1), v15 + 1, 1, v4);
        *v7 = v4;
      }
      v4[2] = v15 + 1;
      v16 = (double *)&v4[5 * v15];
      *((_QWORD *)v16 + 4) = v6;
      v16[5] = v5;
      *((_QWORD *)v16 + 6) = v2;
      *((_QWORD *)v16 + 7) = v3;
      *((_QWORD *)v16 + 8) = v9;
      swift_endAccess();
      v2 = a1[2];
      v3 = a1[3];
      v9 = a1[4];
      goto LABEL_10;
    }
LABEL_42:
    v4 = sub_1A91191F0(0, v4[2] + 1, 1, v4);
    *v7 = v4;
    goto LABEL_7;
  }
}

uint64_t sub_1A920275C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[4];

  v5 = sub_1A93F6E34();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSpeakerID);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSpeakerID + 8);
  if (v10
    && (v11 = OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_isParsingSpeakerName,
        *(_BYTE *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_isParsingSpeakerName) == 1))
  {
    v21 = *v9;
    v24[0] = a1;
    v24[1] = a2;
    swift_bridgeObjectRetain();
    sub_1A93F6E10();
    sub_1A90828B0();
    v12 = sub_1A93F8AE4();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_speakers);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v15;
    *v15 = 0x8000000000000000;
    sub_1A930E90C(v12, v14, v21, v10, v21, v10, isUniquelyReferenced_nonNull_native);
    *v15 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    *v9 = 0;
    v9[1] = 0;
    result = swift_bridgeObjectRelease();
    *(_BYTE *)(v2 + v11) = 0;
  }
  else
  {
    v18 = sub_1A92018E0();
    if (*(_QWORD *)(v19 + 24))
    {
      v22 = a1;
      v23 = a2;
      sub_1A93F6E28();
      sub_1A90828B0();
      sub_1A93F8AE4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_1A93F810C();
      swift_bridgeObjectRelease();
    }
    return ((uint64_t (*)(_QWORD *, _QWORD))v18)(v24, 0);
  }
  return result;
}

void sub_1A9202974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_signpost_type_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint8_t *v14;
  os_signpost_id_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;

  v1 = v0;
  v2 = sub_1A93F75FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_lockedPhase);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 56));
  sub_1A91D1860(*(void **)(v9 + 16), *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32));
  *(_OWORD *)(v9 + 16) = xmmword_1A9411140;
  *(_QWORD *)(v9 + 40) = 0;
  *(_QWORD *)(v9 + 48) = 0;
  *(_QWORD *)(v9 + 32) = 0x8000000000000000;
  os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 56));
  if (qword_1EEAB6DE8 != -1)
    swift_once();
  v10 = sub_1A93F762C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEABA7B0);
  sub_1A93F75F0();
  v11 = sub_1A93F7620();
  v12 = sub_1A93F8940();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    v13 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v13(v5, v8, v2);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v11, v12, v15, "XMLTTMLParse", "", v14, 2u);
    MEMORY[0x1AF41411C](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {

    v13 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  }
  v13(v5, v8, v2);
  sub_1A93F765C();
  swift_allocObject();
  v16 = sub_1A93F7650();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_interval) = v16;
  swift_release();
  if (qword_1ED2A58D0 != -1)
    swift_once();
  v17 = sub_1A93F7698();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED2A58B8);
  v18 = sub_1A93F7674();
  v19 = sub_1A93F87B4();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1A904E000, v18, v19, "Began parsing TTML file", v20, 2u);
    MEMORY[0x1AF41411C](v20, -1, -1);
  }

}

void sub_1A9202C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_signpost_type_t v22;
  const char *v23;
  uint64_t v24;
  uint8_t *v25;
  os_signpost_id_t v26;
  void (*v27)(char *, uint64_t);
  _QWORD v28[2];

  v1 = v0;
  v2 = sub_1A93F7638();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F75FC();
  v28[0] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v28 - v10;
  v12 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_lockedPhase);
  v13 = (uint64_t)&v12[4];
  v14 = v12 + 14;
  os_unfair_lock_lock(v12 + 14);
  sub_1A9201E48(v13, v1);
  os_unfair_lock_unlock(v14);
  if (qword_1ED2A58D0 != -1)
    swift_once();
  v15 = sub_1A93F7698();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED2A58B8);
  v16 = sub_1A93F7674();
  v17 = sub_1A93F87B4();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1A904E000, v16, v17, "Successfully finished parsing TTML", v18, 2u);
    MEMORY[0x1AF41411C](v18, -1, -1);
  }

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_interval))
  {
    v19 = qword_1EEAB6DE8;
    swift_retain();
    if (v19 != -1)
      swift_once();
    v20 = sub_1A93F762C();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EEABA7B0);
    v21 = sub_1A93F7620();
    sub_1A93F7644();
    v22 = sub_1A93F8934();
    if ((sub_1A93F8A6C() & 1) != 0)
    {
      swift_retain();
      sub_1A93F7668();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x1E0DF2190])
      {
        v23 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        v23 = "SUCCESS";
      }
      v24 = v28[0];
      (*(void (**)(char *, char *, uint64_t))(v28[0] + 16))(v8, v11, v6);
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      v26 = sub_1A93F75E4();
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v21, v22, v26, "XMLTTMLParse", v23, v25, 2u);
      MEMORY[0x1AF41411C](v25, -1, -1);

      v27 = *(void (**)(char *, uint64_t))(v24 + 8);
      v27(v11, v6);
      swift_release();
      v27(v8, v6);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v28[0] + 8))(v11, v6);
      swift_release();
    }
  }
}

void sub_1A9202F9C(void *a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_signpost_type_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  uint8_t *v40;
  os_signpost_id_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;

  v49 = a2;
  v3 = v2;
  v5 = sub_1A93F7638();
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F75FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v43 - v13;
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_lockedPhase);
  os_unfair_lock_lock((os_unfair_lock_t)(v15 + 56));
  sub_1A91D1860(*(void **)(v15 + 16), *(_QWORD *)(v15 + 24), *(_QWORD *)(v15 + 32));
  *(_QWORD *)(v15 + 16) = a1;
  *(_OWORD *)(v15 + 24) = 0u;
  *(_OWORD *)(v15 + 40) = 0u;
  v16 = a1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v15 + 56));
  if (qword_1ED2A58D0 != -1)
    swift_once();
  v17 = sub_1A93F7698();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED2A58B8);
  v18 = a1;
  v19 = a1;
  v20 = sub_1A93F7674();
  v21 = sub_1A93F879C();
  v22 = os_log_type_enabled(v20, v21);
  v46 = v7;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v44 = v8;
    v45 = v9;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc();
    v43 = v3;
    v26 = (_QWORD *)v25;
    *(_DWORD *)v24 = 138412290;
    v27 = a1;
    v28 = v11;
    v29 = _swift_stdlib_bridgeErrorToNSError();
    v50 = v29;
    sub_1A93F8AA8();
    *v26 = v29;
    v11 = v28;

    _os_log_impl(&dword_1A904E000, v20, v21, v49, v24, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
    swift_arrayDestroy();
    v30 = v26;
    v3 = v43;
    MEMORY[0x1AF41411C](v30, -1, -1);
    v31 = v24;
    v8 = v44;
    v9 = v45;
    MEMORY[0x1AF41411C](v31, -1, -1);
  }
  else
  {

  }
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_interval))
  {
    v32 = qword_1EEAB6DE8;
    swift_retain();
    if (v32 != -1)
      swift_once();
    v33 = sub_1A93F762C();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EEABA7B0);
    v34 = sub_1A93F7620();
    sub_1A93F7644();
    v35 = sub_1A93F8934();
    if ((sub_1A93F8A6C() & 1) != 0)
    {
      swift_retain();
      v36 = v46;
      sub_1A93F7668();
      swift_release();
      v38 = v47;
      v37 = v48;
      if ((*(unsigned int (**)(char *, uint64_t))(v47 + 88))(v36, v48) == *MEMORY[0x1E0DF2190])
      {
        v39 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v37);
        v39 = "FAILURE";
      }
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      v41 = sub_1A93F75E4();
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v34, v35, v41, "XMLTTMLParse", v39, v40, 2u);
      MEMORY[0x1AF41411C](v40, -1, -1);

      v42 = *(void (**)(char *, uint64_t))(v9 + 8);
      v42(v14, v8);
      swift_release();
      v42(v11, v8);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      swift_release();
    }
  }
}

uint64_t type metadata accessor for TranscriptModelBuilder()
{
  return objc_opt_self();
}

uint64_t method lookup function for TranscriptModelBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TranscriptModelBuilder.phase.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of TranscriptModelBuilder.didStartElement(parser:type:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of TranscriptModelBuilder.didEndElement(parser:type:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of TranscriptModelBuilder.foundCharacters(parser:string:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of TranscriptModelBuilder.startDocument(parser:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of TranscriptModelBuilder.endDocument(parser:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of TranscriptModelBuilder.parserError(parser:error:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of TranscriptModelBuilder.validationError(parser:error:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F0))();
}

void destroy for TranscriptModelBuilder.Phase(uint64_t a1)
{
  sub_1A91D1860(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

_QWORD *initializeWithCopy for TranscriptModelBuilder.Phase(_QWORD *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  sub_1A91D1A48(*(id *)a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return a1;
}

uint64_t assignWithCopy for TranscriptModelBuilder.Phase(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  sub_1A91D1A48(*(id *)a2, v4, v5);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  sub_1A91D1860(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for TranscriptModelBuilder.Phase(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v7;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 32) = v3;
  sub_1A91D1860(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptModelBuilder.Phase(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptModelBuilder.Phase(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 16) = 2 * -a2;
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A92036B4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16) >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A92036D0(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1A92036E0(uint64_t result, uint64_t a2)
{
  if (a2 < 2)
  {
    *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 1 | (a2 << 62);
  }
  else
  {
    *(_QWORD *)result = (a2 - 2);
    *(_OWORD *)(result + 8) = xmmword_1A9411150;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 32) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptModelBuilder.Phase()
{
  return &type metadata for TranscriptModelBuilder.Phase;
}

uint64_t sub_1A9203724(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A920372C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t static OS_os_log.home.getter()
{
  return sub_1A93F7680();
}

PodcastsFoundation::PodcastsSystem_optional __swiftcall PodcastsSystem.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  PodcastsFoundation::PodcastsSystem_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1A93F91F8();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 29;
  switch(v3)
  {
    case 0:
      goto LABEL_31;
    case 1:
      v5 = 1;
      goto LABEL_31;
    case 2:
      v5 = 2;
      goto LABEL_31;
    case 3:
      v5 = 3;
      goto LABEL_31;
    case 4:
      v5 = 4;
      goto LABEL_31;
    case 5:
      v5 = 5;
      goto LABEL_31;
    case 6:
      v5 = 6;
      goto LABEL_31;
    case 7:
      v5 = 7;
      goto LABEL_31;
    case 8:
      v5 = 8;
      goto LABEL_31;
    case 9:
      v5 = 9;
      goto LABEL_31;
    case 10:
      v5 = 10;
      goto LABEL_31;
    case 11:
      v5 = 11;
      goto LABEL_31;
    case 12:
      v5 = 12;
      goto LABEL_31;
    case 13:
      v5 = 13;
      goto LABEL_31;
    case 14:
      v5 = 14;
      goto LABEL_31;
    case 15:
      v5 = 15;
      goto LABEL_31;
    case 16:
      v5 = 16;
      goto LABEL_31;
    case 17:
      v5 = 17;
      goto LABEL_31;
    case 18:
      v5 = 18;
      goto LABEL_31;
    case 19:
      v5 = 19;
      goto LABEL_31;
    case 20:
      v5 = 20;
      goto LABEL_31;
    case 21:
      v5 = 21;
      goto LABEL_31;
    case 22:
      v5 = 22;
      goto LABEL_31;
    case 23:
      v5 = 23;
      goto LABEL_31;
    case 24:
      v5 = 24;
      goto LABEL_31;
    case 25:
      v5 = 25;
      goto LABEL_31;
    case 26:
      v5 = 26;
      goto LABEL_31;
    case 27:
      v5 = 27;
      goto LABEL_31;
    case 28:
      v5 = 28;
LABEL_31:
      v6 = v5;
      break;
    case 29:
      break;
    case 30:
      v6 = 30;
      break;
    case 31:
      v6 = 31;
      break;
    case 32:
      v6 = 32;
      break;
    case 33:
      v6 = 33;
      break;
    case 34:
      v6 = 34;
      break;
    case 35:
      v6 = 35;
      break;
    case 36:
      v6 = 36;
      break;
    case 37:
      v6 = 37;
      break;
    case 38:
      v6 = 38;
      break;
    case 39:
      v6 = 39;
      break;
    case 40:
      v6 = 40;
      break;
    case 41:
      v6 = 41;
      break;
    case 42:
      v6 = 42;
      break;
    case 43:
      v6 = 43;
      break;
    case 44:
      v6 = 44;
      break;
    case 45:
      v6 = 45;
      break;
    case 46:
      v6 = 46;
      break;
    default:
      v6 = 47;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t PodcastsSystem.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A920397C + 4 * word_1A9411240[*v0]))(0x6B72616D6B6F6F42, 0xE900000000000073);
}

uint64_t sub_1A920397C()
{
  return 0x6573616261746144;
}

uint64_t sub_1A9203994()
{
  return 0x64616F6C6E776F44;
}

uint64_t sub_1A92039A8()
{
  return 21322;
}

uint64_t sub_1A92039B4()
{
  return 0x697461676976614ELL;
}

uint64_t sub_1A92039D4()
{
  return 0x746567646957;
}

uint64_t sub_1A92039E8()
{
  return 0x537972617262694CLL;
}

uint64_t sub_1A9203A08()
{
  return 0x677542656C6946;
}

uint64_t sub_1A9203A20()
{
  return 0x73676E6974746553;
}

unint64_t sub_1A9203A38()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1A9203D98()
{
  return 0x6974634172657355;
}

uint64_t sub_1A9203DB8()
{
  return 0x6B726F7774654ELL;
}

uint64_t sub_1A9203DD0()
{
  return 0x686372616553;
}

uint64_t sub_1A9203DE4()
{
  return 0x6163696669746F4ELL;
}

uint64_t sub_1A9203E08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92FA6E8(*a1, *a2);
}

uint64_t sub_1A9203E14()
{
  sub_1A93F92DC();
  PodcastsSystem.rawValue.getter();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A9203E78()
{
  PodcastsSystem.rawValue.getter();
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9203EC8()
{
  sub_1A93F92DC();
  PodcastsSystem.rawValue.getter();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::PodcastsSystem_optional sub_1A9203F28(Swift::String *a1)
{
  return PodcastsSystem.init(rawValue:)(*a1);
}

uint64_t sub_1A9203F34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PodcastsSystem.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t static Logger.podcastsSubsystem.getter()
{
  return 0xD000000000000012;
}

uint64_t Logger.init(domain:)()
{
  PodcastsSystem.rawValue.getter();
  return sub_1A93F7680();
}

uint64_t sub_1A9203FCC(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A9F88);
}

uint64_t static Logger.js.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A9FA0, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A9F88, a1);
}

uint64_t sub_1A9204004(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A3EB8);
}

uint64_t static Logger.libraryShow.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A3ED8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A3EB8, a1);
}

uint64_t sub_1A9204050(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA630);
}

uint64_t static Logger.fileBug.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1EEAB6D30, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1EEABA630, a1);
}

uint64_t sub_1A9204094(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA648);
}

uint64_t static Logger.settings.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(qword_1EEAB6D38, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1EEABA648, a1);
}

uint64_t sub_1A92040D8(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A8850);
}

uint64_t static Logger.podcastsStatesCoordination.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A8870, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A8850, a1);
}

uint64_t sub_1A9204120(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A8898);
}

uint64_t static Logger.cloudSync.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A88B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A8898, a1);
}

uint64_t sub_1A9204168(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A87C0);
}

uint64_t static Logger.storeFeedUpdater.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A87E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A87C0, a1);
}

uint64_t static Logger.siriDonation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A8778, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A8758, a1);
}

uint64_t static Logger.rssFeedUpdater.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A4890, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A87A8, a1);
}

uint64_t sub_1A92041F8(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A88C0);
}

uint64_t static Logger.following.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A88E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A88C0, a1);
}

uint64_t static Logger.feedUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A8718, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A8700, a1);
}

uint64_t sub_1A9204264(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2AB820);
}

uint64_t static Logger.playback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2AA410, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2AB820, a1);
}

uint64_t sub_1A92042A8(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA660);
}

uint64_t static Logger.shazam.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1EEAB6D48, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1EEABA660, a1);
}

uint64_t sub_1A92042E8(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA678);
}

uint64_t static Logger.searchSuggestionsUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(qword_1EEAB6D58, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1EEABA678, a1);
}

uint64_t static Logger.fairPlay.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A8890, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A8878, a1);
}

uint64_t sub_1A9204354(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA690);
}

uint64_t static Logger.podcastsMediaLibrary.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1EEAB6D68, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1EEABA690, a1);
}

uint64_t sub_1A920439C(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A58B8);
}

uint64_t static Logger.transcripts.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A58D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A58B8, a1);
}

uint64_t sub_1A92043E8(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A88E8);
}

uint64_t static Logger.purchases.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A8908, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A88E8, a1);
}

uint64_t sub_1A9204430(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA6A8);
}

uint64_t static Logger.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1EEAB6D70, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1EEABA6A8, a1);
}

uint64_t static Logger.assets.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2AD108, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2AD0F0, a1);
}

uint64_t sub_1A9204498(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA6C0);
}

uint64_t static Logger.appIntents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1EEAB6D78, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1EEABA6C0, a1);
}

uint64_t sub_1A92044E0(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA6D8);
}

uint64_t static Logger.intentRouting.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1EEAB6D80, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1EEABA6D8, a1);
}

uint64_t sub_1A9204530(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA6F0);
}

uint64_t static Logger.bouncyBarAsset.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(qword_1EEAB6D88, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1EEABA6F0, a1);
}

uint64_t sub_1A9204580(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2ABF88);
}

uint64_t static Logger.nowPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(qword_1ED2ABFA0, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2ABF88, a1);
}

uint64_t sub_1A92045C8(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2AA3C0);
}

uint64_t static Logger.notifications.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2AA3D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2AA3C0, a1);
}

uint64_t sub_1A9204618(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2AA3E0);
}

uint64_t static Logger.nowPlayingArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2AB810, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2AA3E0, a1);
}

uint64_t static Logger.musicSubscriptionInfoSync.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A8848, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A8830, a1);
}

uint64_t static Logger.eyebrows.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(qword_1ED2AD158, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2AD138, a1);
}

uint64_t static Logger.synchronizedTimer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A8800, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A87E8, a1);
}

uint64_t sub_1A92046CC(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA708);
}

uint64_t static Logger.privacy.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1EEAB6D98, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1EEABA708, a1);
}

uint64_t static Logger.listenNow.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A5920, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A46F0, a1);
}

uint64_t sub_1A9204734(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A5900);
}

uint64_t static Logger.lifecycle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A5918, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A5900, a1);
}

uint64_t sub_1A920477C(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA720);
}

uint64_t static Logger.ui.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1EEAB6DA0, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1EEABA720, a1);
}

uint64_t sub_1A92047B4(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A58D8);
}

uint64_t static Logger.interests.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A58F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A58D8, a1);
}

uint64_t sub_1A92047FC(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA738);
}

uint64_t static Logger.playbackPositionTracker.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(qword_1EEAB6DB0, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1EEABA738, a1);
}

uint64_t sub_1A9204844(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2AA398);
}

uint64_t static Logger.userActivity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2AA3B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2AA398, a1);
}

uint64_t sub_1A9204890(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA750);
}

uint64_t static Logger.network.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1EEAB6DC0, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1EEABA750, a1);
}

uint64_t sub_1A92048D4(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2AA3F8);
}

uint64_t static Logger.search.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2AB818, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2AA3F8, a1);
}

uint64_t sub_1A9204914(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1ED2A5870, &qword_1ED2A3F00, (uint64_t)qword_1ED2A3EE0);
}

uint64_t static OSSignposter.database.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A5890, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1ED2A5870, a1);
}

uint64_t sub_1A920495C(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1ED2A86E0, &qword_1ED2A88E0, (uint64_t)qword_1ED2A88C0);
}

uint64_t static OSSignposter.following.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A86F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1ED2A86E0, a1);
}

uint64_t sub_1A92049A4(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1EEABA768, &qword_1EEAB6DC0, (uint64_t)qword_1EEABA750);
}

uint64_t static OSSignposter.network.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(qword_1EEAB6DC8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1EEABA768, a1);
}

uint64_t sub_1A92049EC(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1EEABA780, &qword_1EEAB6D78, (uint64_t)qword_1EEABA6C0);
}

uint64_t static OSSignposter.appIntents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1EEAB6DD8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1EEABA780, a1);
}

uint64_t sub_1A9204A34(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1EEABA798, &qword_1EEAB6D80, (uint64_t)qword_1EEABA6D8);
}

uint64_t static OSSignposter.intentRouting.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1EEAB6DE0, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1EEABA798, a1);
}

uint64_t sub_1A9204A7C(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1ED2ABF70, &qword_1ED2AD108, (uint64_t)qword_1ED2AD0F0);
}

uint64_t static OSSignposter.assets.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2ABE88, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1ED2ABF70, a1);
}

uint64_t sub_1A9204AC4(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1ED2AA378, &qword_1ED2A3F28, (uint64_t)qword_1ED2A3F08);
}

uint64_t static OSSignposter.downloads.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2AA390, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1ED2AA378, a1);
}

uint64_t static OSSignposter.eyebrows.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2AD0E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1ED2AD0C8, a1);
}

uint64_t static OSSignposter.synchronizedTimer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A8690, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1ED2A8678, a1);
}

uint64_t sub_1A9204B54(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1ED2A86B8, &qword_1ED2A88B8, (uint64_t)qword_1ED2A8898);
}

uint64_t static OSSignposter.cloudSync.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A86D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1ED2A86B8, a1);
}

uint64_t sub_1A9204B9C(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1EEABA7B0, &qword_1ED2A58D0, (uint64_t)qword_1ED2A58B8);
}

uint64_t static OSSignposter.transcripts.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1EEAB6DE8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1EEABA7B0, a1);
}

uint64_t sub_1A9204BE4(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1EEABA7C8, &qword_1EEAB6D48, (uint64_t)qword_1EEABA660);
}

uint64_t static OSSignposter.shazam.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1EEAB6DF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1EEABA7C8, a1);
}

uint64_t sub_1A9204C2C(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1EEABA7E0, &qword_1ED2A58F8, (uint64_t)qword_1ED2A58D8);
}

uint64_t static OSSignposter.interests.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(qword_1EEAB6DF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1EEABA7E0, a1);
}

uint64_t sub_1A9204C74(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1ED2AB7E8, &qword_1ED2AB818, (uint64_t)qword_1ED2AA3F8);
}

uint64_t static OSSignposter.search.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(qword_1ED2AB800, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1ED2AB7E8, a1);
}

uint64_t sub_1A9204CBC()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1EEABA7F8 = result;
  return result;
}

id static OS_os_log.bookmarks.getter()
{
  return sub_1A9069274(&qword_1EEAB6E08, (id *)&qword_1EEABA7F8);
}

void static OS_os_log.bookmarks.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1EEAB6E08, (void **)&qword_1EEABA7F8);
}

uint64_t (*static OS_os_log.bookmarks.modify())()
{
  if (qword_1EEAB6E08 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9204DC0(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA800);
}

uint64_t static OS_os_log.carPlay.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AC56C(&qword_1EEAB6E10, (uint64_t)qword_1EEABA800, a1);
}

uint64_t static OS_os_log.carPlay.setter(uint64_t a1)
{
  return sub_1A9204EE8(a1, &qword_1EEAB6E10, (uint64_t)qword_1EEABA800);
}

uint64_t (*static OS_os_log.carPlay.modify())()
{
  uint64_t v0;

  if (qword_1EEAB6E10 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEABA800);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9204E90(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A9E68);
}

uint64_t static OS_os_log.classKit.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AC56C(&qword_1ED2A9E88, (uint64_t)qword_1ED2A9E68, a1);
}

uint64_t static OS_os_log.classKit.setter(uint64_t a1)
{
  return sub_1A9204EE8(a1, &qword_1ED2A9E88, (uint64_t)qword_1ED2A9E68);
}

uint64_t sub_1A9204EE8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*a2 != -1)
    swift_once();
  v5 = sub_1A93F7698();
  v6 = __swift_project_value_buffer(v5, a3);
  swift_beginAccess();
  v7 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v6, a1, v5);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v5);
}

uint64_t (*static OS_os_log.classKit.modify())()
{
  uint64_t v0;

  if (qword_1ED2A9E88 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2A9E68);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static OS_os_log.cloudSync.setter(uint64_t a1)
{
  return sub_1A9204EE8(a1, &qword_1ED2A48C0, (uint64_t)qword_1ED2A9620);
}

uint64_t (*static OS_os_log.cloudSync.modify())()
{
  uint64_t v0;

  if (qword_1ED2A48C0 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2A9620);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9205098()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1ED2A9610 = result;
  return result;
}

id static OS_os_log.cloudSyncSignpost.getter()
{
  return sub_1A9069274(&qword_1ED2A9618, (id *)&qword_1ED2A9610);
}

void static OS_os_log.cloudSyncSignpost.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1ED2A9618, (void **)&qword_1ED2A9610);
}

uint64_t (*static OS_os_log.cloudSyncSignpost.modify())()
{
  if (qword_1ED2A9618 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A920519C()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1EEABA818 = result;
  return result;
}

id static OS_os_log.contentServiceDefault.getter()
{
  return sub_1A9069274(&qword_1EEAB6E20, (id *)&qword_1EEABA818);
}

void static OS_os_log.contentServiceDefault.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1EEAB6E20, (void **)&qword_1EEABA818);
}

uint64_t (*static OS_os_log.contentServiceDefault.modify())()
{
  if (qword_1EEAB6E20 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id static OS_os_log.database.getter()
{
  return sub_1A9069274(&qword_1ED2A4318, (id *)&qword_1ED2A4308);
}

void static OS_os_log.database.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1ED2A4318, (void **)&qword_1ED2A4308);
}

uint64_t (*static OS_os_log.database.modify())()
{
  if (qword_1ED2A4318 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void static OS_os_log.downloads.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1ED2AC4B0, (void **)&qword_1ED2AC308);
}

uint64_t (*static OS_os_log.downloads.modify())()
{
  if (qword_1ED2AC4B0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A92053D0(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A42C8);
}

uint64_t static OS_os_log.drm.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AC56C(&qword_1ED2A42E8, (uint64_t)qword_1ED2A42C8, a1);
}

uint64_t static OS_os_log.drm.setter(uint64_t a1)
{
  return sub_1A9204EE8(a1, &qword_1ED2A42E8, (uint64_t)qword_1ED2A42C8);
}

uint64_t (*static OS_os_log.drm.modify())()
{
  uint64_t v0;

  if (qword_1ED2A42E8 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2A42C8);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void static OS_os_log.episodeStatesSignpost.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1ED2A42C0, (void **)&qword_1ED2A42B0);
}

uint64_t (*static OS_os_log.episodeStatesSignpost.modify())()
{
  if (qword_1ED2A42C0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static OS_os_log.episodeStatesLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AC56C(&qword_1ED2A42A8, (uint64_t)qword_1ED2A4290, a1);
}

uint64_t static OS_os_log.episodeStatesLogger.setter(uint64_t a1)
{
  return sub_1A9204EE8(a1, &qword_1ED2A42A8, (uint64_t)qword_1ED2A4290);
}

uint64_t (*static OS_os_log.episodeStatesLogger.modify())()
{
  uint64_t v0;

  if (qword_1ED2A42A8 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2A4290);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A92055D0(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA820);
}

uint64_t static OS_os_log.podcastStatesLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AC56C(&qword_1EEAB6E30, (uint64_t)qword_1EEABA820, a1);
}

uint64_t static OS_os_log.podcastStatesLogger.setter(uint64_t a1)
{
  return sub_1A9204EE8(a1, &qword_1EEAB6E30, (uint64_t)qword_1EEABA820);
}

uint64_t (*static OS_os_log.podcastStatesLogger.modify())()
{
  uint64_t v0;

  if (qword_1EEAB6E30 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEABA820);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static OS_os_log.feedUpdate.setter(uint64_t a1)
{
  return sub_1A9204EE8(a1, &qword_1ED2A4288, (uint64_t)qword_1ED2A4268);
}

uint64_t (*static OS_os_log.feedUpdate.modify())()
{
  uint64_t v0;

  if (qword_1ED2A4288 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2A4268);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9205740(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA838);
}

uint64_t static OS_os_log.feedFetch.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AC56C(&qword_1EEAB6E40, (uint64_t)qword_1EEABA838, a1);
}

uint64_t static OS_os_log.feedFetch.setter(uint64_t a1)
{
  return sub_1A9204EE8(a1, &qword_1EEAB6E40, (uint64_t)qword_1EEABA838);
}

uint64_t (*static OS_os_log.feedFetch.modify())()
{
  uint64_t v0;

  if (qword_1EEAB6E40 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEABA838);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9205814()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1EEABA850 = result;
  return result;
}

id static OS_os_log.iTunesContentConsolidation.getter()
{
  return sub_1A9069274(&qword_1EEAB6E48, (id *)&qword_1EEABA850);
}

void static OS_os_log.iTunesContentConsolidation.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1EEAB6E48, (void **)&qword_1EEABA850);
}

uint64_t (*static OS_os_log.iTunesContentConsolidation.modify())()
{
  if (qword_1EEAB6E48 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9205920()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1EEABA858 = result;
  return result;
}

id static OS_os_log.iTunesMigration.getter()
{
  return sub_1A9069274(&qword_1EEAB6E50, (id *)&qword_1EEABA858);
}

void static OS_os_log.iTunesMigration.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1EEAB6E50, (void **)&qword_1EEABA858);
}

uint64_t (*static OS_os_log.iTunesMigration.modify())()
{
  if (qword_1EEAB6E50 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9205A28()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1EEABA860 = result;
  return result;
}

id static OS_os_log.iTunesSync.getter()
{
  return sub_1A9069274(&qword_1EEAB6E58, (id *)&qword_1EEABA860);
}

void static OS_os_log.iTunesSync.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1EEAB6E58, (void **)&qword_1EEABA860);
}

uint64_t (*static OS_os_log.iTunesSync.modify())()
{
  if (qword_1EEAB6E58 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void static OS_os_log.jsSignpost.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1ED2A1E10, (void **)&qword_1ED2A1E08);
}

uint64_t (*static OS_os_log.jsSignpost.modify())()
{
  if (qword_1ED2A1E10 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9205BB8()
{
  uint64_t v0;
  id v1;

  v0 = sub_1A93F7698();
  __swift_allocate_value_buffer(v0, qword_1EEABA868);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEABA868);
  if (qword_1ED2A1E10 != -1)
    swift_once();
  swift_beginAccess();
  v1 = (id)qword_1ED2A1E08;
  return sub_1A93F76A4();
}

uint64_t static OS_os_log.js.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AC56C(&qword_1EEAB6E68, (uint64_t)qword_1EEABA868, a1);
}

uint64_t static OS_os_log.js.setter(uint64_t a1)
{
  return sub_1A9204EE8(a1, &qword_1EEAB6E68, (uint64_t)qword_1EEABA868);
}

uint64_t (*static OS_os_log.js.modify())()
{
  uint64_t v0;

  if (qword_1EEAB6E68 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEABA868);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void static OS_os_log.launch.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1ED2A1CF0, (void **)&qword_1ED2A1CE8);
}

uint64_t (*static OS_os_log.launch.modify())()
{
  if (qword_1ED2A1CF0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static OS_os_log.homePageSignpost.getter()
{
  sub_1A906BB20();
  return sub_1A93F8A78();
}

uint64_t sub_1A9205DEC(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A1E18);
}

uint64_t static OS_os_log.librarySplitView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AC56C(&qword_1ED2A1E38, (uint64_t)qword_1ED2A1E18, a1);
}

uint64_t static OS_os_log.librarySplitView.setter(uint64_t a1)
{
  return sub_1A9204EE8(a1, &qword_1ED2A1E38, (uint64_t)qword_1ED2A1E18);
}

uint64_t (*static OS_os_log.librarySplitView.modify())()
{
  uint64_t v0;

  if (qword_1ED2A1E38 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2A1E18);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9205EC0()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1EEABA880 = result;
  return result;
}

id static OS_os_log.mediaLibrary.getter()
{
  return sub_1A9069274(&qword_1EEAB6E70, (id *)&qword_1EEABA880);
}

void static OS_os_log.mediaLibrary.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1EEAB6E70, (void **)&qword_1EEABA880);
}

uint64_t (*static OS_os_log.mediaLibrary.modify())()
{
  if (qword_1EEAB6E70 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9205FC8(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA888);
}

uint64_t static OS_os_log.mediaRemote.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AC56C(&qword_1EEAB6E78, (uint64_t)qword_1EEABA888, a1);
}

uint64_t static OS_os_log.mediaRemote.setter(uint64_t a1)
{
  return sub_1A9204EE8(a1, &qword_1EEAB6E78, (uint64_t)qword_1EEABA888);
}

uint64_t (*static OS_os_log.mediaRemote.modify())()
{
  uint64_t v0;

  if (qword_1EEAB6E78 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEABA888);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id static OS_os_log.metrics.getter()
{
  return sub_1A9069274(&qword_1ED2A4300, (id *)&qword_1ED2A42F0);
}

void static OS_os_log.metrics.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1ED2A4300, (void **)&qword_1ED2A42F0);
}

uint64_t (*static OS_os_log.metrics.modify())()
{
  if (qword_1ED2A4300 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9206144()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1EEABA8A0 = result;
  return result;
}

id static OS_os_log.notifications.getter()
{
  return sub_1A9069274(&qword_1EEAB6E88, (id *)&qword_1EEABA8A0);
}

void static OS_os_log.notifications.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1EEAB6E88, (void **)&qword_1EEABA8A0);
}

uint64_t (*static OS_os_log.notifications.modify())()
{
  if (qword_1EEAB6E88 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9206250(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA8A8);
}

uint64_t static OS_os_log.playback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AC56C(&qword_1EEAB6E90, (uint64_t)qword_1EEABA8A8, a1);
}

uint64_t static OS_os_log.playback.setter(uint64_t a1)
{
  return sub_1A9204EE8(a1, &qword_1EEAB6E90, (uint64_t)qword_1EEABA8A8);
}

uint64_t (*static OS_os_log.playback.modify())()
{
  uint64_t v0;

  if (qword_1EEAB6E90 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEABA8A8);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static OS_os_log.purchases.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AC56C(&qword_1ED2AC4B8, (uint64_t)qword_1ED2A1E40, a1);
}

uint64_t static OS_os_log.purchases.setter(uint64_t a1)
{
  return sub_1A9204EE8(a1, &qword_1ED2AC4B8, (uint64_t)qword_1ED2A1E40);
}

uint64_t (*static OS_os_log.purchases.modify())()
{
  uint64_t v0;

  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A92063D0(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1EEABA8C0);
}

uint64_t static OS_os_log.search.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AC56C(&qword_1EEAB6EA0, (uint64_t)qword_1EEABA8C0, a1);
}

uint64_t static OS_os_log.search.setter(uint64_t a1)
{
  return sub_1A9204EE8(a1, &qword_1EEAB6EA0, (uint64_t)qword_1EEABA8C0);
}

uint64_t (*static OS_os_log.search.modify())()
{
  uint64_t v0;

  if (qword_1EEAB6EA0 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEABA8C0);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void static OS_os_log.restore.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1ED2AC7D8, (void **)&qword_1ED2AC300);
}

uint64_t (*static OS_os_log.restore.modify())()
{
  if (qword_1ED2AC7D8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9206524()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1EEABA8D8 = result;
  return result;
}

id static OS_os_log.reviews.getter()
{
  return sub_1A9069274(&qword_1EEAB6EB0, (id *)&qword_1EEABA8D8);
}

void static OS_os_log.reviews.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1EEAB6EB0, (void **)&qword_1EEABA8D8);
}

uint64_t (*static OS_os_log.reviews.modify())()
{
  if (qword_1EEAB6EB0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9206624(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2AC7C0);
}

uint64_t static OS_os_log.shelfSystem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AC56C(&qword_1ED2AC4A8, (uint64_t)qword_1ED2AC7C0, a1);
}

uint64_t static OS_os_log.shelfSystem.setter(uint64_t a1)
{
  return sub_1A9204EE8(a1, &qword_1ED2AC4A8, (uint64_t)qword_1ED2AC7C0);
}

uint64_t (*static OS_os_log.shelfSystem.modify())()
{
  uint64_t v0;

  if (qword_1ED2AC4A8 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2AC7C0);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A92066FC()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1ED2AD6C8 = result;
  return result;
}

id static OS_os_log.widget.getter()
{
  return sub_1A9069274(&qword_1ED2AD6E0, (id *)&qword_1ED2AD6C8);
}

void static OS_os_log.widget.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1ED2AD6E0, (void **)&qword_1ED2AD6C8);
}

uint64_t (*static OS_os_log.widget.modify())()
{
  if (qword_1ED2AD6E0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A92067F8()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1EEABA8E0 = result;
  return result;
}

id static OS_os_log.podcastsMediaLibrarySignpost.getter()
{
  return sub_1A9069274(&qword_1EEAB6EB8, (id *)&qword_1EEABA8E0);
}

void static OS_os_log.podcastsMediaLibrarySignpost.setter(void *a1)
{
  sub_1A9206894(a1, &qword_1EEAB6EB8, (void **)&qword_1EEABA8E0);
}

void sub_1A9206894(void *a1, _QWORD *a2, void **a3)
{
  void *v5;

  if (*a2 != -1)
    swift_once();
  swift_beginAccess();
  v5 = *a3;
  *a3 = a1;

}

uint64_t (*static OS_os_log.podcastsMediaLibrarySignpost.modify())()
{
  if (qword_1EEAB6EB8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A9206964(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1ED2A9F68, &qword_1ED2A9FA0, (uint64_t)qword_1ED2A9F88);
}

uint64_t static OSSignposter.js.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED2A9F80 != -1)
    swift_once();
  v2 = sub_1A93F762C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A9F68);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static OSSignposter.js.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED2A9F80 != -1)
    swift_once();
  v2 = sub_1A93F762C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A9F68);
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static OSSignposter.js.modify())()
{
  uint64_t v0;

  if (qword_1ED2A9F80 != -1)
    swift_once();
  v0 = sub_1A93F762C();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2A9F68);
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_1A9206B4C()
{
  unint64_t result;

  result = qword_1EEABA8E8;
  if (!qword_1EEABA8E8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastsSystem, &type metadata for PodcastsSystem);
    atomic_store(result, (unint64_t *)&qword_1EEABA8E8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PodcastsSystem(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xD2)
    goto LABEL_17;
  if (a2 + 46 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 46) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 46;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 46;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 46;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x2F;
  v8 = v6 - 47;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastsSystem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 46 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 46) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD1)
    return ((uint64_t (*)(void))((char *)&loc_1A9206C6C + 4 * byte_1A94112A3[v4]))();
  *a1 = a2 + 46;
  return ((uint64_t (*)(void))((char *)sub_1A9206CA0 + 4 * byte_1A941129E[v4]))();
}

uint64_t sub_1A9206CA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9206CA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9206CB0);
  return result;
}

uint64_t sub_1A9206CBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9206CC4);
  *(_BYTE *)result = a2 + 46;
  return result;
}

uint64_t sub_1A9206CC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9206CD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PodcastsSystem()
{
  return &type metadata for PodcastsSystem;
}

uint64_t Publisher.validator(unlimited:timeout:)(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA8F0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    v7 = sub_1A93F78E4();
  else
    v7 = 0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = type metadata accessor for XCTestCombineValidator(0, AssociatedTypeWitness, v9, AssociatedConformanceWitness);
  sub_1A9062170(a2, (uint64_t)v6, &qword_1EEABA8F0);
  v12 = swift_allocObject();
  XCTestCombineValidator.init(initialDemand:timeout:)(v7, (uint64_t)v6);
  v14[1] = v12;
  MEMORY[0x1AF414014](&protocol conformance descriptor for XCTestCombineValidator<A, B>, v11);
  sub_1A93F7CD4();
  return v12;
}

uint64_t type metadata accessor for XCTestCombineValidator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XCTestCombineValidator);
}

uint64_t XCTestCombineValidator.__allocating_init(initialDemand:timeout:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  XCTestCombineValidator.init(initialDemand:timeout:)(a1, a2);
  return v4;
}

uint64_t Publisher.validator(secondsUntilTimeout:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v2 = sub_1A93F7D40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1A93F7DE8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA8F0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F7DDC();
  *v5 = a1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF4A0], v2);
  MEMORY[0x1AF411B3C](v9, v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  v13 = Publisher.validator(unlimited:timeout:)(1, (uint64_t)v12);
  sub_1A905FD54((uint64_t)v12, &qword_1EEABA8F0);
  return v13;
}

uint64_t XCTestCombineValidator.currentValues.getter()
{
  _QWORD *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)((char *)v0 + *(_QWORD *)(*v0 + 184)) + 16));
  swift_beginAccess();
  v1 = v0[2];
  v2 = (os_unfair_lock_s *)(*(_QWORD *)((char *)v0 + *(_QWORD *)(*v0 + 184)) + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  return v1;
}

void sub_1A92070D4(uint64_t a1)
{
  _QWORD *v1;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 184)) + 16));
  swift_beginAccess();
  v1[2] = a1;
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 184)) + 16));
}

uint64_t XCTestCombineValidator.timeout.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9062170(v1 + qword_1EEAED308, a1, &qword_1EEABA8F0);
}

uint64_t XCTestCombineValidator.description.getter()
{
  return 0x6F746164696C6156;
}

_QWORD *XCTestCombineValidator.init(initialDemand:timeout:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  v3 = v2;
  v3[2] = sub_1A93F7EC0();
  *(_QWORD *)((char *)v3 + qword_1EEABA8F8) = MEMORY[0x1E0DEE9D8];
  v6 = (char *)v3 + *(_QWORD *)(*v3 + 128);
  v7 = sub_1A93F78C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 136));
  *v8 = 0;
  v8[1] = 0;
  v9 = (char *)v3 + *(_QWORD *)(*v3 + 144);
  *((_QWORD *)v9 + 4) = 0;
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  v10 = (_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 152));
  *v10 = 0;
  swift_beginAccess();
  *v10 = a1;
  sub_1A9062170(a2, (uint64_t)v3 + qword_1EEAED308, &qword_1EEABA8F0);
  type metadata accessor for RunLoopSemaphore();
  swift_allocObject();
  *(_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 160)) = sub_1A9354A2C(0);
  swift_allocObject();
  v11 = sub_1A9354A2C(0);
  sub_1A905FD54(a2, &qword_1EEABA8F0);
  *(_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 168)) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *(_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 184)) = v12;
  *(_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 176)) = 0;
  return v3;
}

uint64_t XCTestCombineValidator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  XCTestCombineValidator.cancel()();
  swift_bridgeObjectRelease();
  sub_1A905FD54(v0 + qword_1EEAED308, &qword_1EEABA8F0);
  swift_bridgeObjectRelease();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 128);
  sub_1A93F78C0();
  v2 = sub_1A93F8A90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_1A905FD54(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144), &qword_1ED2A90E8);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

Swift::Void __swiftcall XCTestCombineValidator.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 144);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 24))
  {
    sub_1A905DC3C(v1, (uint64_t)&v2);
    __swift_project_boxed_opaque_existential_1(&v2, *((uint64_t *)&v3 + 1));
    sub_1A93F78B4();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v2);
  }
  v4 = 0;
  v2 = 0u;
  v3 = 0u;
  swift_beginAccess();
  sub_1A91730C4((uint64_t)&v2, v1);
  swift_endAccess();
}

uint64_t XCTestCombineValidator.__deallocating_deinit()
{
  XCTestCombineValidator.deinit();
  return swift_deallocClassInstance();
}

BOOL XCTestCombineValidator.isEmpty.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  char *v10;
  _BOOL8 v11;
  uint64_t v13;

  v1 = v0;
  v2 = *v0;
  v3 = sub_1A93F78C0();
  v4 = sub_1A93F8A90();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - v6;
  v8 = (os_unfair_lock_s *)(*(_QWORD *)((char *)v1 + *(_QWORD *)(v2 + 184)) + 16);
  os_unfair_lock_lock(v8);
  swift_beginAccess();
  v13 = v1[2];
  v9 = sub_1A93F83D0();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v9);
  if ((sub_1A93F86E8() & 1) != 0)
  {
    v10 = (char *)v1 + *(_QWORD *)(*v1 + 128);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    v11 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v7, 1, v3) == 1;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v11 = 0;
  }
  os_unfair_lock_unlock(v8);
  return v11;
}

uint64_t XCTestCombineValidator.isFailed.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v19;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 88);
  v3 = sub_1A93F78C0();
  v4 = sub_1A93F8A90();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - v6;
  v8 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v19 - v13;
  v15 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v0 + *(_QWORD *)(v1 + 184)) + 16);
  os_unfair_lock_lock(v15);
  v16 = (uint64_t)v0 + *(_QWORD *)(*v0 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v16, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    os_unfair_lock_unlock(v15);
    return 0;
  }
  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v14, v7, v3);
  os_unfair_lock_unlock(v15);
  v17(v11, v14, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v11, 1, v2) == 1)
    return 0;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v3);
  return 1;
}

uint64_t XCTestCombineValidator.isFinished.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v20;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 88);
  v3 = sub_1A93F78C0();
  v4 = sub_1A93F8A90();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - v6;
  v8 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - v13;
  v15 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v0 + *(_QWORD *)(v1 + 184)) + 16);
  os_unfair_lock_lock(v15);
  v16 = (uint64_t)v0 + *(_QWORD *)(*v0 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v16, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    os_unfair_lock_unlock(v15);
    return 0;
  }
  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v14, v7, v3);
  os_unfair_lock_unlock(v15);
  v17(v11, v14, v3);
  v18 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v11, 1, v2) != 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v3);
    return 0;
  }
  return v18;
}

BOOL XCTestCombineValidator.isSubscribed.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  _BOOL8 v3;
  _QWORD v5[5];

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 184)) + 16);
  os_unfair_lock_lock(v1);
  v2 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 144);
  swift_beginAccess();
  sub_1A9062170(v2, (uint64_t)v5, &qword_1ED2A90E8);
  v3 = v5[3] != 0;
  sub_1A905FD54((uint64_t)v5, &qword_1ED2A90E8);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t XCTestCombineValidator.awaitFinish()(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v2 = v1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 88);
  v46 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v41 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = *(_QWORD *)(v3 + 96);
  v6 = sub_1A93F78C0();
  v7 = sub_1A93F8A90();
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v39 - v8;
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x1E0C80A78](v10);
  v42 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v45 = (char *)&v39 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA8F0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A93F7DE8();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9062170((uint64_t)v2 + qword_1EEAED308, (uint64_t)v16, &qword_1EEABA8F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1A905FD54((uint64_t)v16, &qword_1EEABA8F0);
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    swift_retain();
    sub_1A9354820();
    v22 = v21;
    swift_release();
    if ((v22 & 1) == 0)
    {
      v23 = type metadata accessor for XCTestCombineValidator.Errors(0, *(_QWORD *)(v3 + 80), v4, v49);
      MEMORY[0x1AF414014](&protocol conformance descriptor for XCTestCombineValidator<A, B>.Errors, v23);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
LABEL_6:
      swift_willThrow();
      goto LABEL_7;
    }
    v24 = *v2;
    v25 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 136));
    v26 = v25[1];
    if (v26)
    {
      v27 = *v25;
      v23 = type metadata accessor for XCTestCombineValidator.Errors(0, *(_QWORD *)(v3 + 80), v4, v49);
      MEMORY[0x1AF414014](&protocol conformance descriptor for XCTestCombineValidator<A, B>.Errors, v23);
      swift_allocError();
      *v28 = v27;
      v28[1] = v26;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    v40 = v4;
    v30 = (uint64_t)v2 + *(_QWORD *)(v24 + 128);
    swift_beginAccess();
    v4 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v9, v30, v44);
    v32 = v47;
    v31 = v48;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v9, 1, v48) != 1)
    {
      v33 = v45;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v45, v9, v31);
      v34 = v42;
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v42, v33, v31);
      v35 = v40;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v34, 1, v40) == 1)
      {
        v23 = XCTestCombineValidator.currentValues.getter();
        (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v48);
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
        return v23;
      }
      v36 = v41;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v41, v34, v35);
      v23 = type metadata accessor for XCTestCombineValidator.Errors(0, *(_QWORD *)(v3 + 80), v35, v49);
      MEMORY[0x1AF414014](&protocol conformance descriptor for XCTestCombineValidator<A, B>.Errors, v23);
      swift_allocError();
      v37 = v46;
      (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v38, v36, v35);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v35);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v48);
LABEL_7:
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      return v23;
    }
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v44);
  __break(1u);
  return result;
}

uint64_t XCTestCombineValidator.awaitFailure()(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v2 = v1;
  v39 = a1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 88);
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = *(_QWORD *)(v3 + 96);
  v6 = sub_1A93F78C0();
  v7 = sub_1A93F8A90();
  v43 = *(_QWORD *)(v7 - 8);
  v44 = (char *)v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - v8;
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  MEMORY[0x1E0C80A78](v10);
  v41 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v45 = (char *)&v38 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA8F0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A93F7DE8();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9062170((uint64_t)v2 + qword_1EEAED308, (uint64_t)v16, &qword_1EEABA8F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1A905FD54((uint64_t)v16, &qword_1EEABA8F0);
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    swift_retain();
    sub_1A9354820();
    v22 = v21;
    swift_release();
    if ((v22 & 1) == 0)
    {
      v23 = type metadata accessor for XCTestCombineValidator.Errors(0, *(_QWORD *)(v3 + 80), v4, v48);
      MEMORY[0x1AF414014](&protocol conformance descriptor for XCTestCombineValidator<A, B>.Errors, v23);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
LABEL_6:
      swift_willThrow();
      goto LABEL_7;
    }
    v24 = *v2;
    v25 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 136));
    v26 = v25[1];
    if (v26)
    {
      v27 = *v25;
      v23 = type metadata accessor for XCTestCombineValidator.Errors(0, *(_QWORD *)(v3 + 80), v4, v48);
      MEMORY[0x1AF414014](&protocol conformance descriptor for XCTestCombineValidator<A, B>.Errors, v23);
      swift_allocError();
      *v28 = v27;
      v28[1] = v26;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    v38 = v17;
    v30 = (uint64_t)v2 + *(_QWORD *)(v24 + 128);
    swift_beginAccess();
    v17 = v43;
    v16 = v44;
    (*(void (**)(char *, uint64_t, char *))(v43 + 16))(v9, v30, v44);
    v31 = v46;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v9, 1, v47) != 1)
    {
      v32 = v45;
      v33 = v9;
      v34 = v47;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v45, v33, v47);
      v35 = v41;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v41, v32, v34);
      v36 = v42;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v35, 1, v4) != 1)
      {
        v37 = v40;
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v40, v35, v4);
        (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v39, v37, v4);
        v23 = XCTestCombineValidator.currentValues.getter();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v4);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v47);
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v38);
        return v23;
      }
      v23 = type metadata accessor for XCTestCombineValidator.Errors(0, *(_QWORD *)(v3 + 80), v4, v48);
      MEMORY[0x1AF414014](&protocol conformance descriptor for XCTestCombineValidator<A, B>.Errors, v23);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v47);
      v17 = v38;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      return v23;
    }
  }
  result = (*(uint64_t (**)(char *, char *))(v17 + 8))(v9, v16);
  __break(1u);
  return result;
}

uint64_t XCTestCombineValidator.awaitInput()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  char *v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = v3;
  v5 = v2;
  v53 = a2;
  v6 = *v2;
  v7 = *(_QWORD *)(*v2 + 88);
  v57 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = *(_QWORD *)(v6 + 96);
  v9 = sub_1A93F78C0();
  v54 = sub_1A93F8A90();
  v51 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v52 = (char *)&v46 - v10;
  v58 = v9;
  v55 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v11);
  v49 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v56 = (char *)&v46 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA8F0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1A93F7DE8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9062170((uint64_t)v5 + qword_1EEAED308, (uint64_t)v17, &qword_1EEABA8F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    swift_retain();
    sub_1A9354820();
    v23 = v22;
    swift_release();
    if ((v23 & 1) == 0)
    {
      v24 = type metadata accessor for XCTestCombineValidator.Errors(0, *(_QWORD *)(v6 + 80), v7, v59);
      MEMORY[0x1AF414014](&protocol conformance descriptor for XCTestCombineValidator<A, B>.Errors, v24);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
LABEL_6:
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    }
    v25 = (uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 136));
    v26 = v25[1];
    if (v26)
    {
      v27 = *v25;
      v28 = type metadata accessor for XCTestCombineValidator.Errors(0, *(_QWORD *)(v6 + 80), v7, v59);
      MEMORY[0x1AF414014](&protocol conformance descriptor for XCTestCombineValidator<A, B>.Errors, v28);
      swift_allocError();
      *v29 = v27;
      v29[1] = v26;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    v47 = *(_QWORD *)(*v5 + 176);
    v48 = *(uint64_t *)((char *)v5 + v47);
    XCTestCombineValidator.currentValues.getter();
    v6 = *(_QWORD *)(v6 + 80);
    v31 = MEMORY[0x1AF4120D0]();
    swift_bridgeObjectRelease();
    if (v48 == v31)
    {
      v53 = v6;
      v32 = (uint64_t)v5 + *(_QWORD *)(*v5 + 128);
      swift_beginAccess();
      v6 = v51;
      v4 = v52;
      v33 = v32;
      v17 = (char *)v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v52, v33, v54);
      v34 = v55;
      v35 = v58;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v4, 1, v58) != 1)
      {
        v36 = v56;
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v56, v4, v35);
        v37 = v49;
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v49, v36, v35);
        v38 = v57;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v37, 1, v7) == 1)
        {
          v39 = type metadata accessor for XCTestCombineValidator.Errors(0, v53, v7, v59);
          MEMORY[0x1AF414014](&protocol conformance descriptor for XCTestCombineValidator<A, B>.Errors, v39);
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v50, v37, v7);
          v43 = type metadata accessor for XCTestCombineValidator.Errors(0, v53, v7, v59);
          MEMORY[0x1AF414014](&protocol conformance descriptor for XCTestCombineValidator<A, B>.Errors, v43);
          swift_allocError();
          v44 = v50;
          (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v45, v50, v7);
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v57 + 8))(v44, v7);
          (*(void (**)(char *, uint64_t))(v34 + 8))(v56, v58);
        }
        return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      }
      goto LABEL_17;
    }
    v40 = v47;
    XCTestCombineValidator.currentValues.getter();
    sub_1A93F83F4();
    swift_bridgeObjectRelease();
    XCTestCombineValidator.currentValues.getter();
    v41 = *(uint64_t *)((char *)v5 + v40);
    swift_bridgeObjectRelease();
    v42 = __OFADD__(v41, 1);
    v17 = (char *)(v41 + 1);
    if (!v42)
    {
      result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      *(uint64_t *)((char *)v5 + v40) = (uint64_t)v17;
      return result;
    }
    __break(1u);
  }
  sub_1A905FD54((uint64_t)v17, &qword_1EEABA8F0);
  __break(1u);
LABEL_17:
  result = (*(uint64_t (**)(char *, char *))(v6 + 8))(v4, v17);
  __break(1u);
  return result;
}

uint64_t XCTestCombineValidator.awaitInput(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1A93F8370();
  v8 = result;
  if (a1 >= 1)
  {
    v6 = a1 + 1;
    while (1)
    {
      XCTestCombineValidator.awaitInput()(result, (uint64_t)v4);
      if (v1)
        break;
      sub_1A93F83D0();
      result = sub_1A93F83AC();
      if (--v6 <= 1)
        return v8;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void XCTestCombineValidator.receive(subscription:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v2 = v1;
  v4 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184)) + 16);
  os_unfair_lock_lock(v4);
  v5 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 144);
  swift_beginAccess();
  sub_1A9062170(v5, (uint64_t)&v11, &qword_1ED2A90E8);
  v6 = v13;
  sub_1A905FD54((uint64_t)&v11, &qword_1ED2A90E8);
  if (v6)
  {
    os_unfair_lock_unlock(v4);
    v11 = 0;
    v12 = 0xE000000000000000;
    sub_1A93F8C70();
    sub_1A93F810C();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AC480);
    sub_1A93F8DE4();
    sub_1A93F810C();
    v7 = v12;
    v8 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 136));
    *v8 = v11;
    v8[1] = v7;
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1A93F78B4();
    return;
  }
  sub_1A905DC3C((uint64_t)a1, (uint64_t)&v11);
  swift_beginAccess();
  sub_1A91730C4((uint64_t)&v11, v5);
  swift_endAccess();
  v9 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 152));
  swift_beginAccess();
  sub_1A93F78E4();
  if ((sub_1A93F78CC() & 1) != 0)
  {
    os_unfair_lock_unlock(v4);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1A93F78E4();
  }
  else
  {
    v10 = *v9;
    sub_1A93F78E4();
    if ((sub_1A93F78CC() & 1) == 0)
    {
      if (v10 < 0)
      {
        __break(1u);
        return;
      }
      if (!v10)
      {
        os_unfair_lock_unlock(v4);
        return;
      }
    }
    os_unfair_lock_unlock(v4);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  }
  sub_1A93F7908();
}

void XCTestCombineValidator.receive(_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  os_unfair_lock_s *v18;
  char *v19;
  char *v20;
  unint64_t *v21;
  unint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  os_unfair_lock_s *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;

  v2 = v1;
  v42 = a1;
  v3 = *v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA8F0);
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F738C();
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v3 + 80);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A93F78C0();
  v14 = sub_1A93F8A90();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v37 - v16;
  v18 = (os_unfair_lock_s *)(*(_QWORD *)((char *)v2 + *(_QWORD *)(v3 + 184)) + 16);
  os_unfair_lock_lock(v18);
  v19 = (char *)v2 + *(_QWORD *)(*v2 + 128);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v19, v14);
  LODWORD(v19) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v17, 1, v13);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if ((_DWORD)v19 != 1)
  {
    os_unfair_lock_unlock(v18);
    v43 = 0;
    v44 = 0xE000000000000000;
    sub_1A93F8C70();
    sub_1A93F810C();
    sub_1A93F9090();
    sub_1A93F810C();
    v35 = v44;
    v36 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 136));
    *v36 = v43;
    v36[1] = v35;
    swift_bridgeObjectRelease();
LABEL_12:
    sub_1A93F78D8();
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v42, v8);
  swift_beginAccess();
  sub_1A93F83D0();
  sub_1A93F83AC();
  swift_endAccess();
  v20 = v41;
  sub_1A93F7380();
  v21 = (_QWORD *)((char *)v2 + qword_1EEABA8F8);
  swift_beginAccess();
  v22 = *v21;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v21 = v22;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v22 = sub_1A9117A18(0, *(_QWORD *)(v22 + 16) + 1, 1, v22);
    *v21 = v22;
  }
  v25 = v39;
  v24 = (uint64_t)v40;
  v26 = v38;
  v28 = *(_QWORD *)(v22 + 16);
  v27 = *(_QWORD *)(v22 + 24);
  if (v28 >= v27 >> 1)
  {
    v22 = sub_1A9117A18(v27 > 1, v28 + 1, 1, v22);
    *v21 = v22;
  }
  *(_QWORD *)(v22 + 16) = v28 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v22+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v28, v20, v25);
  swift_endAccess();
  os_unfair_lock_unlock(v18);
  sub_1A9062170((uint64_t)v2 + qword_1EEAED308, v24, &qword_1EEABA8F0);
  v29 = sub_1A93F7DE8();
  v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v24, 1, v29);
  sub_1A905FD54(v24, &qword_1EEABA8F0);
  if (v30 == 1)
    goto LABEL_12;
  v31 = *(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 168));
  v32 = (os_unfair_lock_s *)(*(_QWORD *)(v31 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v32);
  v33 = *(_QWORD *)(v31 + 24);
  v34 = v33 - 1;
  if (!__OFSUB__(v33, 1))
  {
    *(_QWORD *)(v31 + 24) = v34;
    os_unfair_lock_unlock(v32);
    if (!v34)
    {
      CFRunLoopSourceSignal(*(CFRunLoopSourceRef *)(v31 + 40));
      CFRunLoopWakeUp(*(CFRunLoopRef *)(v31 + 32));
    }
    swift_release();
    goto LABEL_12;
  }
  __break(1u);
}

void XCTestCombineValidator.receive(completion:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD v31[2];
  uint64_t v32;

  v2 = v1;
  v30 = a1;
  v3 = *v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA8F0);
  MEMORY[0x1E0C80A78](v4);
  v29 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F78C0();
  v7 = sub_1A93F8A90();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - v12;
  v14 = (os_unfair_lock_s *)(*(_QWORD *)((char *)v2 + *(_QWORD *)(v3 + 184)) + 16);
  os_unfair_lock_lock(v14);
  v15 = (char *)v2 + *(_QWORD *)(*v2 + 128);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v15, v7);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  if (v17 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v10, v30, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v6);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v15, v10, v7);
    swift_endAccess();
    v32 = 0;
    memset(v31, 0, sizeof(v31));
    v18 = (uint64_t)v2 + *(_QWORD *)(*v2 + 144);
    swift_beginAccess();
    sub_1A91730C4((uint64_t)v31, v18);
    swift_endAccess();
    os_unfair_lock_unlock(v14);
    v19 = v29;
    sub_1A9062170((uint64_t)v2 + qword_1EEAED308, v29, &qword_1EEABA8F0);
    v20 = sub_1A93F7DE8();
    v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20);
    sub_1A905FD54(v19, &qword_1EEABA8F0);
    if (v21 != 1)
    {
      v22 = *(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 160));
      v23 = (os_unfair_lock_s *)(*(_QWORD *)(v22 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v23);
      v24 = *(_QWORD *)(v22 + 24);
      v25 = v24 - 1;
      if (__OFSUB__(v24, 1))
      {
        __break(1u);
      }
      else
      {
        *(_QWORD *)(v22 + 24) = v25;
        os_unfair_lock_unlock(v23);
        if (!v25)
        {
          CFRunLoopSourceSignal(*(CFRunLoopSourceRef *)(v22 + 40));
          CFRunLoopWakeUp(*(CFRunLoopRef *)(v22 + 32));
        }
        swift_release();
      }
    }
  }
  else
  {
    os_unfair_lock_unlock(v14);
    *(_QWORD *)&v31[0] = 0;
    *((_QWORD *)&v31[0] + 1) = 0xE000000000000000;
    sub_1A93F8C70();
    sub_1A93F810C();
    sub_1A93F9090();
    sub_1A93F810C();
    v26 = *((_QWORD *)&v31[0] + 1);
    v27 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 136));
    *v27 = *(_QWORD *)&v31[0];
    v27[1] = v26;
    swift_bridgeObjectRelease();
  }
}

void XCTestCombineValidator.request(_:)(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[4];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184)) + 16);
  os_unfair_lock_lock(v3);
  v4 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 144);
  swift_beginAccess();
  sub_1A9062170(v4, (uint64_t)&v9, &qword_1ED2A90E8);
  if (v10)
  {
    sub_1A905D4AC(&v9, (uint64_t)v11);
    os_unfair_lock_unlock(v3);
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    sub_1A93F7908();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
    return;
  }
  sub_1A905FD54((uint64_t)&v9, &qword_1ED2A90E8);
  v5 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 152));
  swift_beginAccess();
  v6 = *v5;
  sub_1A93F78E4();
  if ((sub_1A93F78CC() & 1) != 0)
    goto LABEL_12;
  sub_1A93F78E4();
  v7 = sub_1A93F78CC();
  v8 = sub_1A93F78E4();
  if ((v7 & 1) == 0)
  {
    if ((sub_1A93F78CC() & 1) == 0)
    {
      if ((v6 | a1) < 0)
      {
        __break(1u);
        goto LABEL_15;
      }
      v8 = v6 + a1;
      if (!__OFADD__(v6, a1))
      {
        if ((v8 & 0x8000000000000000) == 0)
          goto LABEL_11;
LABEL_15:
        __break(1u);
        return;
      }
    }
    v8 = sub_1A93F78E4();
  }
LABEL_11:
  *v5 = v8;
LABEL_12:
  swift_endAccess();
  os_unfair_lock_unlock(v3);
}

void sub_1A92095A0(_QWORD *a1)
{
  XCTestCombineValidator.receive(subscription:)(a1);
}

void sub_1A92095C0(uint64_t a1)
{
  XCTestCombineValidator.receive(_:)(a1);
}

void sub_1A92095E0(uint64_t a1)
{
  XCTestCombineValidator.receive(completion:)(a1);
}

void sub_1A9209600(uint64_t a1)
{
  XCTestCombineValidator.request(_:)(a1);
}

uint64_t sub_1A9209620()
{
  return 0x6F746164696C6156;
}

void sub_1A920963C()
{
  XCTestCombineValidator.cancel()();
}

uint64_t type metadata accessor for XCTestCombineValidator.Errors(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XCTestCombineValidator.Errors);
}

void sub_1A9209668()
{
  JUMPOUT(0x1AF414014);
}

void sub_1A9209678()
{
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A9209688@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = XCTestCombineValidator.currentValues.getter();
  *a1 = result;
  return result;
}

void sub_1A92096B0()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_1A92070D4(v0);
}

uint64_t sub_1A92096D8()
{
  return 24;
}

__n128 sub_1A92096E4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

void sub_1A92096F8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A92097E4();
  if (v0 <= 0x3F)
  {
    sub_1A93F78C0();
    sub_1A93F8A90();
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

uint64_t method lookup function for XCTestCombineValidator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XCTestCombineValidator.__allocating_init(initialDemand:timeout:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

void sub_1A92097E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEABA980[0])
  {
    sub_1A93F7DE8();
    v0 = sub_1A93F8A90();
    if (!v1)
      atomic_store(v0, qword_1EEABA980);
  }
}

uint64_t sub_1A9209838()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1A92098A8(uint64_t *__dst, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  int v8;
  unsigned int v10;
  unsigned int v11;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = __dst;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  if (v5 > 3)
  {
    v6 = v5 + 1;
    v7 = *(_DWORD *)(v4 + 80);
    v8 = v7 & 0x1000F8;
    goto LABEL_6;
  }
  v11 = ((1 << (8 * v5)) + 1) >> (8 * v5);
  v7 = *(_DWORD *)(v4 + 80);
  if (v11 > 0xFFFD)
  {
    if ((unint64_t)(v5 + 4) > 0x18 || (v7 & 0x1000F8) != 0)
      goto LABEL_27;
    v10 = *(_DWORD *)((char *)a2 + v5);
    if (v10 < 2)
      goto LABEL_33;
    goto LABEL_29;
  }
  v8 = v7 & 0x1000F8;
  if (v11 > 0xFD)
  {
    if ((unint64_t)(v5 + 2) > 0x18 || v8 != 0)
      goto LABEL_27;
    v10 = *(unsigned __int16 *)((char *)a2 + v5);
    if (v10 < 2)
      goto LABEL_33;
LABEL_29:
    if (v5 <= 3)
      v15 = v5;
    else
      v15 = 4;
    __asm { BR              X13 }
  }
  v6 = v5 + 1;
LABEL_6:
  if (v6 > 0x18 || v8 != 0)
  {
LABEL_27:
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + (((v7 & 0xF8 | 7u) + 16) & ~(unint64_t)(v7 & 0xF8 | 7u)));
    swift_retain();
    return v3;
  }
  v10 = *((unsigned __int8 *)a2 + v5);
  if (v10 >= 2)
    goto LABEL_29;
LABEL_33:
  if (v10 == 1)
  {
    v17 = a2[1];
    *v3 = *a2;
    v3[1] = v17;
    swift_bridgeObjectRetain();
    if (v5 > 3)
      goto LABEL_39;
    v18 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    if (v18 > 0xFFFD)
    {
      *(_DWORD *)((char *)v3 + v5) = 1;
      return v3;
    }
    if (v18 <= 0xFD)
LABEL_39:
      *((_BYTE *)v3 + v5) = 1;
    else
      *(_WORD *)((char *)v3 + v5) = 1;
  }
  else
  {
    (*(void (**)(uint64_t *))(v4 + 16))(__dst);
    if (v5 <= 3)
    {
      v16 = ((1 << (8 * v5)) + 1) >> (8 * v5);
      if (v16 > 0xFFFD)
      {
        *(_DWORD *)((char *)v3 + v5) = 0;
        return v3;
      }
      if (v16 > 0xFD)
      {
        *(_WORD *)((char *)v3 + v5) = 0;
        return v3;
      }
    }
    *((_BYTE *)v3 + v5) = 0;
  }
  return v3;
}

uint64_t sub_1A9209B18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 0x10)
    v3 = 16;
  if (v3 > 3)
    goto LABEL_4;
  v5 = ((1 << (8 * v3)) + 1) >> (8 * v3);
  if (v5 > 0xFFFD)
  {
    v4 = *(_DWORD *)(a1 + v3);
  }
  else
  {
    if (v5 <= 0xFD)
    {
LABEL_4:
      v4 = *(unsigned __int8 *)(a1 + v3);
      goto LABEL_9;
    }
    v4 = *(unsigned __int16 *)(a1 + v3);
  }
LABEL_9:
  if (v4 < 2)
  {
    if (v4 == 1)
      return swift_bridgeObjectRelease();
    else
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v6 = v3;
    else
      v6 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1A9209BA0 + 4 * byte_1A9411435[v6]))();
  }
}

_QWORD *sub_1A9209C00(_QWORD *__dst, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  if (v5 > 3)
    goto LABEL_5;
  v7 = ((1 << (8 * v5)) + 1) >> (8 * v5);
  if (v7 > 0xFFFD)
  {
    v6 = *(_DWORD *)((char *)a2 + v5);
  }
  else
  {
    if (v7 <= 0xFD)
    {
LABEL_5:
      v6 = *((unsigned __int8 *)a2 + v5);
      goto LABEL_10;
    }
    v6 = *(unsigned __int16 *)((char *)a2 + v5);
  }
LABEL_10:
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v8 = v5;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v10 = a2[1];
    *__dst = *a2;
    __dst[1] = v10;
    swift_bridgeObjectRetain();
    if (v5 > 3)
      goto LABEL_21;
    v11 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    if (v11 > 0xFFFD)
    {
      *(_DWORD *)((char *)__dst + v5) = 1;
      return __dst;
    }
    if (v11 <= 0xFD)
LABEL_21:
      *((_BYTE *)__dst + v5) = 1;
    else
      *(_WORD *)((char *)__dst + v5) = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(__dst);
    if (v5 <= 3)
    {
      v9 = ((1 << (8 * v5)) + 1) >> (8 * v5);
      if (v9 > 0xFFFD)
      {
        *(_DWORD *)((char *)__dst + v5) = 0;
        return __dst;
      }
      if (v9 > 0xFD)
      {
        *(_WORD *)((char *)__dst + v5) = 0;
        return __dst;
      }
    }
    *((_BYTE *)__dst + v5) = 0;
  }
  return __dst;
}

_QWORD *sub_1A9209DE8(_QWORD *__dst, _QWORD *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;

  if (__dst == __src)
    return __dst;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
    v7 = 16;
  else
    v7 = *(_QWORD *)(v6 + 64);
  if (v7 > 3)
    goto LABEL_6;
  v9 = ((1 << (8 * v7)) + 1) >> (8 * v7);
  if (v9 > 0xFFFD)
  {
    v8 = *(_DWORD *)((char *)__dst + v7);
  }
  else
  {
    if (v9 <= 0xFD)
    {
LABEL_6:
      v8 = *((unsigned __int8 *)__dst + v7);
      goto LABEL_11;
    }
    v8 = *(unsigned __int16 *)((char *)__dst + v7);
  }
LABEL_11:
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v10 = v7;
    else
      v10 = 4;
    __asm { BR              X12 }
  }
  if (v8 == 1)
  {
    swift_bridgeObjectRelease();
    if (v7 > 3)
      goto LABEL_22;
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 24));
    if (v7 > 3)
      goto LABEL_22;
  }
  v11 = ((1 << (8 * v7)) + 1) >> (8 * v7);
  if (v11 <= 0xFFFD)
  {
    if (v11 > 0xFD)
    {
      v12 = *(unsigned __int16 *)((char *)__src + v7);
      if (v12 < 2)
        goto LABEL_31;
      goto LABEL_27;
    }
LABEL_22:
    v12 = *((unsigned __int8 *)__src + v7);
    if (v12 < 2)
      goto LABEL_31;
LABEL_27:
    if (v7 <= 3)
      v13 = v7;
    else
      v13 = 4;
    __asm { BR              X12 }
  }
  v12 = *(_DWORD *)((char *)__src + v7);
  if (v12 >= 2)
    goto LABEL_27;
LABEL_31:
  if (v12 == 1)
  {
    *__dst = *__src;
    __dst[1] = __src[1];
    swift_bridgeObjectRetain();
    if (v7 > 3)
      goto LABEL_37;
    v15 = ((1 << (8 * v7)) + 1) >> (8 * v7);
    if (v15 > 0xFFFD)
    {
      *(_DWORD *)((char *)__dst + v7) = 1;
      return __dst;
    }
    if (v15 <= 0xFD)
LABEL_37:
      *((_BYTE *)__dst + v7) = 1;
    else
      *(_WORD *)((char *)__dst + v7) = 1;
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(__dst, __src, v5);
    if (v7 <= 3)
    {
      v14 = ((1 << (8 * v7)) + 1) >> (8 * v7);
      if (v14 > 0xFFFD)
      {
        *(_DWORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
      if (v14 > 0xFD)
      {
        *(_WORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
    }
    *((_BYTE *)__dst + v7) = 0;
  }
  return __dst;
}

char *sub_1A920A120(char *__dst, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  if (v5 > 3)
    goto LABEL_5;
  v7 = ((1 << (8 * v5)) + 1) >> (8 * v5);
  if (v7 > 0xFFFD)
  {
    v6 = *(_DWORD *)((char *)a2 + v5);
  }
  else
  {
    if (v7 <= 0xFD)
    {
LABEL_5:
      v6 = *((unsigned __int8 *)a2 + v5);
      goto LABEL_10;
    }
    v6 = *(unsigned __int16 *)((char *)a2 + v5);
  }
LABEL_10:
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v8 = v5;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *(_OWORD *)__dst = *a2;
    if (v5 > 3)
      goto LABEL_21;
    v10 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    if (v10 > 0xFFFD)
    {
      *(_DWORD *)&__dst[v5] = 1;
      return __dst;
    }
    if (v10 <= 0xFD)
LABEL_21:
      __dst[v5] = 1;
    else
      *(_WORD *)&__dst[v5] = 1;
  }
  else
  {
    (*(void (**)(char *))(v4 + 32))(__dst);
    if (v5 <= 3)
    {
      v9 = ((1 << (8 * v5)) + 1) >> (8 * v5);
      if (v9 > 0xFFFD)
      {
        *(_DWORD *)&__dst[v5] = 0;
        return __dst;
      }
      if (v9 > 0xFD)
      {
        *(_WORD *)&__dst[v5] = 0;
        return __dst;
      }
    }
    __dst[v5] = 0;
  }
  return __dst;
}

char *sub_1A920A304(char *__dst, char *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;

  if (__dst == __src)
    return __dst;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
    v7 = 16;
  else
    v7 = *(_QWORD *)(v6 + 64);
  if (v7 > 3)
    goto LABEL_6;
  v9 = ((1 << (8 * v7)) + 1) >> (8 * v7);
  if (v9 > 0xFFFD)
  {
    v8 = *(_DWORD *)&__dst[v7];
  }
  else
  {
    if (v9 <= 0xFD)
    {
LABEL_6:
      v8 = __dst[v7];
      goto LABEL_11;
    }
    v8 = *(unsigned __int16 *)&__dst[v7];
  }
LABEL_11:
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v10 = v7;
    else
      v10 = 4;
    __asm { BR              X12 }
  }
  if (v8 == 1)
  {
    swift_bridgeObjectRelease();
    if (v7 > 3)
      goto LABEL_22;
  }
  else
  {
    (*(void (**)(char *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 24));
    if (v7 > 3)
      goto LABEL_22;
  }
  v11 = ((1 << (8 * v7)) + 1) >> (8 * v7);
  if (v11 <= 0xFFFD)
  {
    if (v11 > 0xFD)
    {
      v12 = *(unsigned __int16 *)&__src[v7];
      if (v12 < 2)
        goto LABEL_31;
      goto LABEL_27;
    }
LABEL_22:
    v12 = __src[v7];
    if (v12 < 2)
      goto LABEL_31;
LABEL_27:
    if (v7 <= 3)
      v13 = v7;
    else
      v13 = 4;
    __asm { BR              X12 }
  }
  v12 = *(_DWORD *)&__src[v7];
  if (v12 >= 2)
    goto LABEL_27;
LABEL_31:
  if (v12 == 1)
  {
    *(_OWORD *)__dst = *(_OWORD *)__src;
    if (v7 > 3)
      goto LABEL_37;
    v15 = ((1 << (8 * v7)) + 1) >> (8 * v7);
    if (v15 > 0xFFFD)
    {
      *(_DWORD *)&__dst[v7] = 1;
      return __dst;
    }
    if (v15 <= 0xFD)
LABEL_37:
      __dst[v7] = 1;
    else
      *(_WORD *)&__dst[v7] = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(__dst, __src, v5);
    if (v7 <= 3)
    {
      v14 = ((1 << (8 * v7)) + 1) >> (8 * v7);
      if (v14 > 0xFFFD)
      {
        *(_DWORD *)&__dst[v7] = 0;
        return __dst;
      }
      if (v14 > 0xFD)
      {
        *(_WORD *)&__dst[v7] = 0;
        return __dst;
      }
    }
    __dst[v7] = 0;
  }
  return __dst;
}

uint64_t sub_1A920A600(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  int v4;
  unsigned int v5;
  char v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v12;
  unsigned int v13;
  int v14;
  int v16;
  unsigned int v17;
  unsigned int v18;
  char v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (v3 <= 0x10)
    v3 = 16;
  if (v3 > 3)
  {
    v4 = 3;
LABEL_7:
    v6 = 8;
    goto LABEL_8;
  }
  v5 = ((1 << (8 * v3)) + 1) >> (8 * v3);
  if (v5 > 0xFFFD)
    goto LABEL_11;
  v4 = v5 + 2;
  if (v5 <= 0xFD)
    goto LABEL_7;
  v6 = 16;
LABEL_8:
  v7 = (1 << v6) - v4;
  if ((v7 & 0x80000000) == 0)
  {
    if (v3 > 3)
      goto LABEL_15;
LABEL_12:
    v8 = ((1 << (8 * v3)) + 1) >> (8 * v3);
    v9 = 2;
    if (v8 > 0xFFFD)
      v9 = 4;
    if (v8 > 0xFD)
      goto LABEL_16;
    goto LABEL_15;
  }
LABEL_11:
  v7 = 0x7FFFFFFF;
  if (v3 <= 3)
    goto LABEL_12;
LABEL_15:
  v9 = 1;
LABEL_16:
  if (!a2)
    return 0;
  if (a2 <= v7)
    goto LABEL_34;
  v10 = v9 + v3;
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v13 = ((a2 - v7 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v13))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_34;
      goto LABEL_27;
    }
    if (v13 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_34;
      goto LABEL_27;
    }
    if (v13 < 2)
    {
LABEL_34:
      if (v7)
      {
        if (v3 <= 3)
        {
          v21 = ((1 << (8 * v3)) + 1) >> (8 * v3);
          if (v21 > 0xFFFD)
          {
            v17 = *(_DWORD *)(a1 + v3);
            v18 = ~v17;
LABEL_44:
            v24 = 0x7FFFFFFF;
LABEL_45:
            if (v24 > v18)
              return -v17;
            else
              return 0;
          }
          v20 = v21 + 2;
          if (v21 > 0xFD)
          {
            v23 = *(unsigned __int16 *)(a1 + v3);
            v17 = v23 | 0xFFFF0000;
            v18 = v23 ^ 0xFFFF;
            v19 = 16;
          }
          else
          {
            v22 = *(unsigned __int8 *)(a1 + v3);
            v17 = v22 | 0xFFFFFF00;
            v18 = v22 ^ 0xFF;
            v19 = 8;
          }
        }
        else
        {
          v16 = *(unsigned __int8 *)(a1 + v3);
          v17 = v16 | 0xFFFFFF00;
          v18 = v16 ^ 0xFF;
          v19 = 8;
          v20 = 3;
        }
        v24 = (1 << v19) - v20;
        if ((v24 & 0x80000000) == 0)
          goto LABEL_45;
        goto LABEL_44;
      }
      return 0;
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_34;
LABEL_27:
  v14 = (v12 - 1) << v11;
  if (v10 > 3)
    v14 = 0;
  if (!(_DWORD)v10)
    return v7 + v14 + 1;
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A920A75C + 4 * byte_1A9411458[(v10 - 1)]))();
}

void sub_1A920A840(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  char v6;
  int v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  size_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  if (v5 <= 0x10)
    v5 = 16;
  v6 = 8 * v5;
  if (v5 <= 3)
  {
    v10 = ((1 << v6) + 1) >> v6;
    if (v10 > 0xFFFD)
      goto LABEL_12;
    v7 = v10 + 2;
    if (v10 > 0xFD)
    {
      v8 = 16;
LABEL_6:
      v9 = (1 << v8) - v7;
      if ((v9 & 0x80000000) == 0)
      {
        if (v5 > 3)
          goto LABEL_16;
LABEL_13:
        v11 = ((1 << v6) + 1) >> v6;
        v12 = 2;
        if (v11 > 0xFFFD)
          v12 = 4;
        if (v11 > 0xFD)
        {
LABEL_17:
          v13 = v12 + v5;
          if (a3 <= v9)
          {
            v14 = 0u;
          }
          else if (v13 <= 3)
          {
            v16 = ((a3 - v9 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
            if (HIWORD(v16))
            {
              v14 = 4u;
            }
            else if (v16 >= 0x100)
            {
              v14 = 2;
            }
            else
            {
              v14 = v16 > 1;
            }
          }
          else
          {
            v14 = 1u;
          }
          if (v9 < a2)
          {
            v15 = ~v9 + a2;
            if (v13 < 4)
            {
              if ((_DWORD)v13)
              {
                v17 = v15 & ~(-1 << (8 * v13));
                bzero(a1, v13);
                if ((_DWORD)v13 == 3)
                {
                  *a1 = v17;
                  *((_BYTE *)a1 + 2) = BYTE2(v17);
                }
                else if ((_DWORD)v13 == 2)
                {
                  *a1 = v17;
                }
                else
                {
                  *(_BYTE *)a1 = v17;
                }
              }
            }
            else
            {
              bzero(a1, v13);
              *(_DWORD *)a1 = v15;
            }
            __asm { BR              X10 }
          }
          __asm { BR              X12 }
        }
LABEL_16:
        v12 = 1;
        goto LABEL_17;
      }
LABEL_12:
      v9 = 0x7FFFFFFF;
      if (v5 > 3)
        goto LABEL_16;
      goto LABEL_13;
    }
  }
  else
  {
    v7 = 3;
  }
  v8 = 8;
  goto LABEL_6;
}

uint64_t sub_1A920AAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64) > 0x10uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  if (v2 > 3)
    goto LABEL_4;
  v4 = ((1 << (8 * v2)) + 1) >> (8 * v2);
  if (v4 > 0xFFFD)
  {
    v3 = *(unsigned int *)(a1 + v2);
  }
  else
  {
    if (v4 <= 0xFD)
    {
LABEL_4:
      v3 = *(unsigned __int8 *)(a1 + v2);
      goto LABEL_9;
    }
    v3 = *(unsigned __int16 *)(a1 + v2);
  }
LABEL_9:
  if (v3 < 2)
    return v3;
  if (v2 <= 3)
    v5 = v2;
  else
    v5 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A920AB48 + 4 * byte_1A9411466[v5]))();
}

_BYTE *sub_1A920AB90(_BYTE *result, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  int v9;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) <= 0x10uLL)
    v4 = 16;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (a2 > 1)
  {
    if (v4 < 4)
    {
      v6 = ((a2 - 2) >> (8 * v4)) + 2;
      v7 = (unsigned int *)&result[v4];
      v8 = ((1 << (8 * v4)) + 1) >> (8 * v4);
      if (v8 > 0xFFFD)
      {
        *v7 = v6;
      }
      else if (v8 > 0xFD)
      {
        *(_WORD *)v7 = v6;
      }
      else
      {
        *(_BYTE *)v7 = v6;
      }
    }
    else
    {
      result[v4] = 2;
    }
    if (v4 <= 3)
      v9 = v4;
    else
      v9 = 4;
    bzero(result, v4);
    __asm { BR              X10 }
  }
  if (v4 > 3)
    goto LABEL_6;
  v5 = ((1 << (8 * v4)) + 1) >> (8 * v4);
  if (v5 > 0xFFFD)
  {
    *(_DWORD *)&result[v4] = a2;
  }
  else
  {
    if (v5 <= 0xFD)
    {
LABEL_6:
      result[v4] = a2;
      return result;
    }
    *(_WORD *)&result[v4] = a2;
  }
  return result;
}

uint64_t dispatch thunk of PlayStateEstimationProvider.estimatedPlayState(for:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a5 + 8))(a1, a2, a3 & 1);
}

uint64_t ReceiveOnAssetProcessingStep.init(upstream:receiveQueue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  v9 = type metadata accessor for ReceiveOnAssetProcessingStep(0, a3, a4, a4);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(&a5[*(int *)(v9 + 36)], a1, a3);
  *(_QWORD *)a5 = a2;
  return result;
}

id ReceiveOnAssetProcessingStep.receiveQueue.getter()
{
  id *v0;

  return *v0;
}

uint64_t ReceiveOnAssetProcessingStep.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t sub_1A920AD74(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A920AE48 + 4 * byte_1A94116D0[(v9 - 1)]))();
}

void sub_1A920AEB8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t static Array.+= infix(_:_:)(uint64_t a1)
{
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, double))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  sub_1A93F83D0();
  return sub_1A93F83AC();
}

void AnyCancellable.store<A>(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[4];

  v3[2] = a2;
  v3[3] = a3;
  sub_1A905F5EC((void (*)(uint64_t))sub_1A920B17C, (uint64_t)v3, a1);
}

uint64_t sub_1A920B17C()
{
  return sub_1A93F792C();
}

void AnyCancellable.store(in:)(os_unfair_lock_s *a1)
{
  os_unfair_lock_s *v1;

  v1 = a1 + 6;
  os_unfair_lock_lock(a1 + 6);
  sub_1A93F7920();
  os_unfair_lock_unlock(v1);
}

const char *Podcasts.domain.getter()
{
  return "Podcasts";
}

uint64_t static Podcasts.isBlueMoonEnabled()()
{
  return sub_1A90A41E4(28);
}

uint64_t static Podcasts.isUIPSidebarEnabled.getter()
{
  return sub_1A90A41E4(50);
}

uint64_t static Podcasts.isTopHitsEnabled.getter()
{
  return sub_1A90A41E4(48);
}

BOOL static Podcasts.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Podcasts.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t Podcasts.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

unint64_t sub_1A920B294()
{
  unint64_t result;

  result = qword_1EEABAA40;
  if (!qword_1EEABAA40)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for Podcasts, &type metadata for Podcasts);
    atomic_store(result, (unint64_t *)&qword_1EEABAA40);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Podcasts(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xC2)
    goto LABEL_17;
  if (a2 + 62 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 62) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 62;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 62;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 62;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x3F;
  v8 = v6 - 63;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Podcasts(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 62 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 62) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xC2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xC1)
    return ((uint64_t (*)(void))((char *)&loc_1A920B3B4 + 4 * byte_1A94117A4[v4]))();
  *a1 = a2 + 62;
  return ((uint64_t (*)(void))((char *)sub_1A920B3E8 + 4 * byte_1A941179F[v4]))();
}

uint64_t sub_1A920B3E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A920B3F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A920B3F8);
  return result;
}

uint64_t sub_1A920B404(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A920B40CLL);
  *(_BYTE *)result = a2 + 62;
  return result;
}

uint64_t sub_1A920B410(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A920B418(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A920B424(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1A929E6CC(0, v1, 0);
  v2 = v23;
  result = sub_1A925D258(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v20 = v1;
  v21 = v5;
  v22 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v13 = *(_QWORD *)(v23 + 16);
    v14 = *(_QWORD *)(v23 + 24);
    result = swift_bridgeObjectRetain();
    if (v13 >= v14 >> 1)
      result = sub_1A929E6CC(v14 > 1, v13 + 1, 1);
    *(_QWORD *)(v23 + 16) = v13 + 1;
    *(_QWORD *)(v23 + 8 * v13 + 32) = v12;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v15 = *(_QWORD *)(v22 + 8 * v11);
    if ((v15 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v21;
    if (*(_DWORD *)(a1 + 36) != v21)
      goto LABEL_27;
    v16 = v15 & (-2 << (v6 & 0x3F));
    if (v16)
    {
      v9 = __clz(__rbit64(v16)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v20;
    }
    else
    {
      v17 = v11 + 1;
      v18 = (unint64_t)(v9 + 63) >> 6;
      v10 = v20;
      if (v11 + 1 < v18)
      {
        v19 = *(_QWORD *)(v22 + 8 * v17);
        if (v19)
        {
LABEL_20:
          v9 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v11)
          {
            v19 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v19)
            {
              v17 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1A920B620(unint64_t a1)
{
  unint64_t v2;
  void *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v24;
  _OWORD v25[2];
  __int128 v26;
  uint64_t v27;
  id v28[6];

  v28[5] = *(id *)MEMORY[0x1E0C80C00];
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = (void *)sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (!v3)
      return v3;
  }
  else
  {
    v3 = *(void **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
      return v3;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = (char *)MEMORY[0x1AF4129DC](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_30;
    }
    v4 = (char *)*(id *)(a1 + 32);
  }
  v5 = v4;
  v6 = MEMORY[0x1E0DEA968];
  sub_1A93F8C1C();
  v27 = v6;
  *(_QWORD *)&v26 = 49;
  *((_QWORD *)&v26 + 1) = 0xE100000000000000;
  sub_1A908A5DC(&v26, v25);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1A930D94C(v25, (uint64_t)v28, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_1A90A5908((uint64_t)v28);
  v24 = v5;
  v8 = 0xD000000000000010;
  if (*(_QWORD *)&v5[OBJC_IVAR___MTContentKeyRequest_requestType] == 3)
  {
    v8 = 0x65722D65636E6F6ELL;
    v9 = 0xEE00737473657571;
  }
  else
  {
    v9 = 0x80000001A9449260;
  }
  *(_QWORD *)&v26 = v8;
  *((_QWORD *)&v26 + 1) = v9;
  swift_bridgeObjectRetain();
  sub_1A93F8C1C();
  if (v2)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v10)
    {
LABEL_11:
      *(_QWORD *)&v26 = MEMORY[0x1E0DEE9D8];
      sub_1A909D1F8(0, v10 & ~(v10 >> 63), 0);
      if ((v10 & 0x8000000000000000) == 0)
      {
        v11 = 0;
        v12 = v26;
        do
        {
          if ((a1 & 0xC000000000000001) != 0)
            v13 = (id)MEMORY[0x1AF4129DC](v11, a1);
          else
            v13 = *(id *)(a1 + 8 * v11 + 32);
          v14 = v13;
          v15 = sub_1A916616C();

          *(_QWORD *)&v26 = v12;
          v17 = *(_QWORD *)(v12 + 16);
          v16 = *(_QWORD *)(v12 + 24);
          if (v17 >= v16 >> 1)
          {
            sub_1A909D1F8(v16 > 1, v17 + 1, 1);
            v12 = v26;
          }
          ++v11;
          *(_QWORD *)(v12 + 16) = v17 + 1;
          *(_QWORD *)(v12 + 8 * v17 + 32) = v15;
        }
        while (v10 != v11);
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
LABEL_30:
      __break(1u);
    }
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  v12 = MEMORY[0x1E0DEE9D8];
LABEL_22:
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC490);
  *(_QWORD *)&v26 = v12;
  sub_1A908A5DC(&v26, v25);
  v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_1A930D94C(v25, (uint64_t)v28, v18);
  swift_bridgeObjectRelease();
  sub_1A90A5908((uint64_t)v28);
  v19 = (void *)objc_opt_self();
  v20 = (void *)sub_1A93F7ED8();
  swift_bridgeObjectRelease();
  v28[0] = 0;
  v21 = objc_msgSend(v19, sel_dataWithJSONObject_options_error_, v20, 0, v28);

  v22 = v28[0];
  if (v21)
  {
    v3 = (void *)sub_1A93F72B4();

  }
  else
  {
    v3 = v22;
    sub_1A93F7128();

    swift_willThrow();
  }

  return v3;
}

uint64_t sub_1A920BA50(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  void *v8;
  void (*v9)(void *, unint64_t, uint64_t, void *, void *);
  id v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  id v14;

  v8 = a2;
  v9 = *(void (**)(void *, unint64_t, uint64_t, void *, void *))(a1 + 32);
  if (!a2)
  {
    swift_retain();
    v12 = 0xF000000000000000;
    if (!a3)
      goto LABEL_4;
    goto LABEL_3;
  }
  swift_retain();
  v10 = v8;
  v8 = (void *)sub_1A93F72B4();
  v12 = v11;

  if (a3)
LABEL_3:
    a3 = sub_1A93F7EFC();
LABEL_4:
  v13 = a4;
  v14 = a5;
  v9(v8, v12, a3, a4, a5);

  swift_bridgeObjectRelease();
  sub_1A9069F9C((uint64_t)v8, v12);
  return swift_release();
}

uint64_t KeyRequestLicenseError.init(rawValue:)(uint64_t a1)
{
  return sub_1A920E458(a1);
}

uint64_t sub_1A920BB64@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1A920E458(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t static StandardKeyRequestHandler.keyRequestLicenseErrorDomain.getter()
{
  return 0xD000000000000036;
}

uint64_t sub_1A920BBDC(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  char *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v5 = sub_1A93F7D58();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F7DB8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)&v2[OBJC_IVAR___MTStandardKeyRequestHandler_requestQueue];
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = v2;
  aBlock[4] = sub_1A920E49C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_26;
  v15 = _Block_copy(aBlock);
  swift_retain();
  v16 = v2;
  sub_1A93F7D88();
  v18[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v6, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_1A920BDD4(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  _QWORD *v8;
  void *v9;
  id v10;
  _QWORD v11[6];

  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v7 = objc_msgSend(v6, sel_podcastsLicenseCert);

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v11[4] = sub_1A920F0F8;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A913520C;
  v11[3] = &block_descriptor_43_0;
  v9 = _Block_copy(v11);
  swift_retain();
  v10 = a3;
  swift_release();
  objc_msgSend(v7, sel_valueWithCompletion_, v9);
  _Block_release(v9);

}

uint64_t sub_1A920BEE8(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t aBlock;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  _QWORD *v42;

  v34 = a6;
  v35 = a4;
  v36 = a5;
  v32 = a3;
  v7 = sub_1A93F726C();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1A93F6D80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F7D58();
  v33 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F7DB8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_1A93F7200();
    v19 = a1;
    sub_1A93F6D50();
    v20 = (void *)sub_1A93F6D2C();
    v21 = swift_allocObject();
    v22 = v36;
    *(_QWORD *)(v21 + 16) = v35;
    *(_QWORD *)(v21 + 24) = v22;
    v41 = sub_1A920F178;
    v42 = (_QWORD *)v21;
    aBlock = MEMORY[0x1E0C809B0];
    v38 = 1107296256;
    v39 = sub_1A920BA50;
    v40 = &block_descriptor_55_1;
    v23 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v34, sel_performDataRequest_callback_, v20, v23);
    _Block_release(v23);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
    v25 = (void *)sub_1A93F8868();
    v26 = (_QWORD *)swift_allocObject();
    v27 = v36;
    v26[2] = v35;
    v26[3] = v27;
    v28 = v32;
    v26[4] = v32;
    v41 = sub_1A920F148;
    v42 = v26;
    aBlock = MEMORY[0x1E0C809B0];
    v38 = 1107296256;
    v39 = sub_1A908A91C;
    v40 = &block_descriptor_49_0;
    v29 = _Block_copy(&aBlock);
    swift_retain();
    v30 = v28;
    swift_release();
    sub_1A93F7D88();
    aBlock = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v18, v14, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

void sub_1A920C264(void (*a1)(id), uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  void **v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  char *v16;
  void *v17;
  id v18;
  id v19;
  __int128 v20;
  objc_super v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F738C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (objc_class *)type metadata accessor for ContentKeyResponse(0);
  v10 = (char *)objc_allocWithZone(v9);
  v11 = (void **)&v10[OBJC_IVAR___MTContentKeyResponse_error];
  *(_QWORD *)&v10[OBJC_IVAR___MTContentKeyResponse_error] = 0;
  v12 = (uint64_t *)&v10[OBJC_IVAR___MTContentKeyResponse_keyData];
  v20 = xmmword_1A9411960;
  *(_OWORD *)&v10[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1A9411960;
  *(_QWORD *)&v10[OBJC_IVAR___MTContentKeyResponse_request] = 0;
  swift_beginAccess();
  v13 = *v12;
  v14 = v12[1];
  *(_OWORD *)v12 = v20;
  v15 = a3;
  v16 = v10;
  sub_1A9069F9C(v13, v14);
  sub_1A90A1CA8((uint64_t)v7, (uint64_t)&v16[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
  swift_beginAccess();
  v17 = *v11;
  *v11 = a3;
  v18 = a3;

  v21.receiver = v16;
  v21.super_class = v9;
  v19 = objc_msgSendSuper2(&v21, sel_init);
  sub_1A90AC3A4((uint64_t)v7);

  a1(v19);
}

uint64_t sub_1A920C41C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v12 = sub_1A93F7D58();
  v26 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F7DB8();
  v24 = *(_QWORD *)(v15 - 8);
  v25 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v18 = (void *)sub_1A93F8868();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a6;
  v19[3] = a7;
  v19[4] = a1;
  v19[5] = a2;
  v19[6] = a5;
  aBlock[4] = sub_1A920F1C4;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_61_0;
  v20 = _Block_copy(aBlock);
  swift_retain();
  sub_1A906A3DC(a1, a2);
  v21 = a5;
  swift_release();
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v17, v14, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v17, v25);
}

void sub_1A920C654(void (*a1)(id), uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  void **v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  char *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  void (*v24)(id);
  objc_super v25;

  v23 = a2;
  v24 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F738C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (objc_class *)type metadata accessor for ContentKeyResponse(0);
  v13 = (char *)objc_allocWithZone(v12);
  v14 = (void **)&v13[OBJC_IVAR___MTContentKeyResponse_error];
  *(_QWORD *)&v13[OBJC_IVAR___MTContentKeyResponse_error] = 0;
  v15 = (uint64_t *)&v13[OBJC_IVAR___MTContentKeyResponse_keyData];
  *(_OWORD *)&v13[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1A9411960;
  *(_QWORD *)&v13[OBJC_IVAR___MTContentKeyResponse_request] = 0;
  swift_beginAccess();
  v16 = *v15;
  v17 = v15[1];
  *v15 = a3;
  v15[1] = a4;
  sub_1A906A3DC(a3, a4);
  sub_1A906A3DC(a3, a4);
  v18 = a5;
  v19 = v13;
  sub_1A9069F9C(v16, v17);
  sub_1A90A1CA8((uint64_t)v10, (uint64_t)&v19[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
  swift_beginAccess();
  v20 = *v14;
  *v14 = a5;
  v21 = a5;

  v25.receiver = v19;
  v25.super_class = v12;
  v22 = objc_msgSendSuper2(&v25, sel_init, v23);
  sub_1A90AC3A4((uint64_t)v10);

  sub_1A9069F9C(a3, a4);
  v24(v22);

}

uint64_t sub_1A920C89C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  char *v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v9 = sub_1A93F7D58();
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F7DB8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)&v4[OBJC_IVAR___MTStandardKeyRequestHandler_requestQueue];
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a1;
  v16[3] = v4;
  v16[4] = a2;
  v16[5] = a3;
  v16[6] = a4;
  aBlock[4] = sub_1A920E4E4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_6;
  v17 = _Block_copy(aBlock);
  v18 = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  v19 = v4;
  sub_1A93F7D88();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1A920CAB0(unint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  char *v17;
  char *v18;
  void *v19;
  id v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  unint64_t *v42;
  unint64_t v43;
  NSObject *v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  void *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t result;
  void *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  unint64_t v64;
  _QWORD aBlock[6];
  uint64_t v66;

  v55 = a4;
  v56 = a5;
  v8 = sub_1A93F7D58();
  v61 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  MEMORY[0x1E0C80A78](v8);
  v60 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F7DB8();
  v58 = *(_QWORD *)(v10 - 8);
  v59 = v10;
  MEMORY[0x1E0C80A78](v10);
  v57 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = MEMORY[0x1E0DEE9E0];
  if (a1 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    v12 = sub_1A93F8E5C();
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v53 = (void *)a2;
  v54 = a3;
  if (v12)
  {
    v64 = a1 & 0xC000000000000001;
    v13 = (uint64_t *)MEMORY[0x1E0DEE9E0];
    v14 = 4;
    v63 = xmmword_1A9405960;
    v15 = a1;
    while (1)
    {
      a3 = (uint64_t *)(v14 - 4);
      if (v64)
        v17 = (char *)MEMORY[0x1AF4129DC](v14 - 4, a1);
      else
        v17 = (char *)*(id *)(a1 + 8 * v14);
      v18 = v17;
      a2 = v14 - 3;
      if (__OFADD__(a3, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      v19 = *(void **)&v17[OBJC_IVAR___MTContentKeyRequest_secureInvalidationDsid];
      if (v19)
      {
        a1 = *(_QWORD *)&v17[OBJC_IVAR___MTContentKeyRequest_secureInvalidationDsid];
      }
      else
      {
        a1 = (unint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 0);
        v19 = 0;
      }
      v20 = v19;
      a3 = v13;
      v22 = sub_1A912E744(a1);
      v23 = v13[2];
      v24 = (v21 & 1) == 0;
      v25 = v23 + v24;
      if (__OFADD__(v23, v24))
        goto LABEL_29;
      v26 = v21;
      if (v13[3] < v25)
      {
        sub_1A93026D8(v25, 1);
        v13 = (uint64_t *)aBlock[0];
        v27 = sub_1A912E744(a1);
        if ((v26 & 1) != (v28 & 1))
        {
          sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
          result = sub_1A93F9258();
          __break(1u);
          return result;
        }
        v22 = v27;
      }
      if ((v26 & 1) != 0)
      {

        v16 = (_QWORD *)(v13[7] + 8 * v22);
        MEMORY[0x1AF412004]();
        if (*(_QWORD *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A93F834C();
        sub_1A93F8394();
        sub_1A93F8328();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
        v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = v63;
        *(_QWORD *)(v29 + 32) = v18;
        v66 = v29;
        a3 = &v66;
        sub_1A93F8328();
        v30 = v66;
        v13[(v22 >> 6) + 8] |= 1 << v22;
        v31 = 8 * v22;
        *(_QWORD *)(v13[6] + v31) = a1;
        *(_QWORD *)(v13[7] + v31) = v30;
        v32 = v13[2];
        v33 = __OFADD__(v32, 1);
        v34 = v32 + 1;
        if (v33)
          goto LABEL_30;
        v13[2] = v34;
      }
      a1 = v15;
      ++v14;
      if (a2 == v12)
        goto LABEL_24;
    }
  }
  v13 = (uint64_t *)MEMORY[0x1E0DEE9E0];
LABEL_24:
  swift_bridgeObjectRelease();
  v35 = sub_1A920B424((uint64_t)v13);
  swift_release();
  v36 = dispatch_group_create();
  v37 = (_QWORD *)swift_allocObject();
  v38 = MEMORY[0x1E0DEE9D8];
  v37[2] = MEMORY[0x1E0DEE9D8];
  v39 = *(_QWORD *)(v35 + 16);
  v40 = (uint64_t)v54;
  v41 = v53;
  if (v39)
  {
    v42 = (unint64_t *)(v35 + 32);
    do
    {
      v43 = *v42++;
      swift_bridgeObjectRetain();
      dispatch_group_enter(v36);
      swift_retain();
      v44 = v36;
      sub_1A920E5FC(v43, v40, v41, v37, v44);
      swift_bridgeObjectRelease();

      swift_release();
      --v39;
    }
    while (v39);
  }
  swift_bridgeObjectRelease();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v45 = (void *)sub_1A93F8868();
  v46 = (_QWORD *)swift_allocObject();
  v47 = v56;
  v46[2] = v55;
  v46[3] = v47;
  v46[4] = v37;
  aBlock[4] = sub_1A920EFA4;
  aBlock[5] = v46;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_22_1;
  v48 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v49 = v57;
  sub_1A93F7D88();
  v66 = v38;
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  v50 = v60;
  v51 = v62;
  sub_1A93F8B5C();
  sub_1A93F87FC();
  _Block_release(v48);

  (*(void (**)(char *, uint64_t))(v61 + 8))(v50, v51);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v49, v59);
  swift_release();
  return swift_release();
}

void sub_1A920D020(uint64_t a1, uint64_t a2, NSObject *a3)
{
  unint64_t v4;

  swift_beginAccess();
  v4 = swift_bridgeObjectRetain();
  sub_1A91369B4(v4);
  swift_endAccess();
  dispatch_group_leave(a3);
}

uint64_t sub_1A920D088(void (*a1)(uint64_t))
{
  uint64_t v2;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  a1(v2);
  return swift_bridgeObjectRelease();
}

void sub_1A920D198(uint64_t a1, uint64_t a2)
{
  id v3;

  type metadata accessor for ContentKeyResponse(0);
  v3 = (id)sub_1A93F82F8();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v3);

}

void sub_1A920D1EC(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, void (*a5)(_QWORD), uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, void *a10, void *a11, uint64_t a12)
{
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  NSObject *v34;
  NSObject *v35;
  uint64_t v36;
  void (*v37)(_QWORD);
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  char *v51;
  unint64_t v52;
  id v53;
  id v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v60;
  void *v61;
  _QWORD *v62;
  void *v63;
  uint64_t v64;
  _BYTE *v65;
  id v66;
  id v67;
  uint64_t v68;
  _QWORD *v69;
  int v70;
  void *v71;
  NSObject *v72;
  void (*v73)(_QWORD);
  void *v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD aBlock[6];

  v84 = a6;
  v16 = a10;
  v80 = a9;
  v81 = a7;
  v17 = sub_1A93F726C();
  MEMORY[0x1E0C80A78](v17);
  v79 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_1A93F6D80();
  v83 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v82 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A93F7698();
  v85 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v21)
  {
    v75 = a8;
    v76 = a11;
    v77 = a12;
    v24 = qword_1ED2A42E8;
    v74 = v21;
    v25 = v21;
    if (v24 == -1)
    {
LABEL_3:
      v26 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED2A42C8);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v23, v26, v20);
      v27 = (id)v25;
      v28 = sub_1A93F7674();
      v29 = sub_1A93F87B4();
      v30 = v29;
      if (os_log_type_enabled(v28, v29))
      {
        v31 = swift_slowAlloc();
        v71 = a10;
        v32 = v31;
        v33 = (_QWORD *)swift_slowAlloc();
        v69 = v33;
        *(_DWORD *)v32 = 138412546;
        v70 = v30;
        aBlock[0] = v27;
        v73 = a5;
        v34 = v27;
        v72 = v27;
        v35 = v34;
        sub_1A93F8AA8();
        *v33 = v74;

        v27 = v72;
        *(_WORD *)(v32 + 12) = 2048;
        v36 = v81;
        aBlock[0] = v81;
        v37 = v73;
        sub_1A93F8AA8();
        _os_log_impl(&dword_1A904E000, v28, (os_log_type_t)v70, "[Key Loading] From %@ request Type %ld", (uint8_t *)v32, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        v38 = v69;
        swift_arrayDestroy();
        v39 = v38;
        a5 = v37;
        MEMORY[0x1AF41411C](v39, -1, -1);
        v40 = v32;
        v16 = v71;
        MEMORY[0x1AF41411C](v40, -1, -1);
      }
      else
      {

        v28 = v27;
        v36 = v81;
      }

      (*(void (**)(char *, uint64_t))(v85 + 8))(v23, v20);
      sub_1A93F7200();
      v51 = v82;
      sub_1A93F6D50();
      sub_1A906A3DC(v75, v80);
      sub_1A93F6D74();
      sub_1A93F6D08();
      v52 = sub_1A9113510((uint64_t)&unk_1E54D7190);
      if (v36 == 2 || v36 == 3)
      {
        if (v16)
        {
          v53 = v16;
          v54 = objc_msgSend(v53, sel_stringValue);
          v55 = v27;
          v56 = sub_1A93F8040();
          v58 = v57;

          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          aBlock[0] = v52;
          v60 = v56;
          v27 = v55;
          sub_1A930DBA4(v60, v58, 0xD00000000000001ALL, 0x80000001A9449240, isUniquelyReferenced_nonNull_native);

          swift_bridgeObjectRelease();
        }
      }
      sub_1A93F6D38();
      v61 = (void *)sub_1A93F6D2C();
      v62 = (_QWORD *)swift_allocObject();
      v62[2] = a4;
      v62[3] = a5;
      v62[4] = v84;
      aBlock[4] = sub_1A920F0E8;
      aBlock[5] = v62;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1A920BA50;
      aBlock[3] = &block_descriptor_37_0;
      v63 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      objc_msgSend(v76, sel_performDataRequest_account_callback_, v61, v77, v63);
      _Block_release(v63);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v51, v78);
      return;
    }
LABEL_27:
    swift_once();
    goto LABEL_3;
  }
  if (a3)
  {
    v41 = a3;
    if (!(a4 >> 62))
      goto LABEL_7;
LABEL_23:
    swift_bridgeObjectRetain();
    v66 = v41;
    v67 = a3;
    v25 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v25)
      goto LABEL_8;
    goto LABEL_24;
  }
  sub_1A920EFE4();
  v41 = (void *)swift_allocError();
  *v65 = 2;
  if (a4 >> 62)
    goto LABEL_23;
LABEL_7:
  v25 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v42 = v41;
  v43 = a3;
  if (v25)
  {
LABEL_8:
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v23 = (char *)aBlock;
    sub_1A93F8D84();
    if (v25 < 0)
    {
      __break(1u);
      return;
    }
    v73 = a5;
    v44 = 0;
    a5 = (void (*)(_QWORD))(a4 & 0xC000000000000001);
    while (v25 != v44)
    {
      if (a5)
        v45 = (id)MEMORY[0x1AF4129DC](v44, a4);
      else
        v45 = *(id *)(a4 + 8 * v44 + 32);
      v46 = v45;
      ++v44;
      v47 = objc_allocWithZone((Class)type metadata accessor for ContentKeyResponse(0));
      v48 = v41;
      v49 = v46;
      v50 = (void *)sub_1A93F711C();
      objc_msgSend(v47, sel_initWithRequest_keyData_renewalDate_error_, v49, 0, 0, v50);

      v23 = (char *)aBlock;
      sub_1A93F8D60();
      v20 = *(_QWORD *)(aBlock[0] + 16);
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
      if (v25 == v44)
      {
        v64 = aBlock[0];

        v73(v64);
        goto LABEL_25;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
LABEL_24:

  a5(MEMORY[0x1E0DEE9D8]);
LABEL_25:
  swift_bridgeObjectRelease();

}

uint64_t sub_1A920D8E8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, unint64_t a6, void (*a7)(void), uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  void *v30;
  char *v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void (*v45)(void);
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;

  v49 = a2;
  v50 = a6;
  v47 = a1;
  v11 = sub_1A93F7698();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v52 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v45 - v15;
  if (qword_1ED2A42E8 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v11, (uint64_t)qword_1ED2A42C8);
  swift_beginAccess();
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v46(v16, v17, v11);
  v18 = a5;
  v19 = a5;
  v20 = sub_1A93F7674();
  v21 = sub_1A93F87B4();
  v22 = os_log_type_enabled(v20, v21);
  v51 = a8;
  if (v22)
  {
    v48 = v11;
    v45 = a7;
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v54 = v24;
    *(_DWORD *)v23 = 136315138;
    if (a5)
    {
      swift_getErrorValue();
      v25 = sub_1A93F927C();
      v27 = v26;
    }
    else
    {
      v27 = 0xE90000000000002ELL;
      v25 = 0x726F727265206F6ELL;
    }
    v53 = sub_1A906436C(v25, v27, &v54);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A904E000, v20, v21, "[Key Loading] Loaded with %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v24, -1, -1);
    MEMORY[0x1AF41411C](v23, -1, -1);

    v28 = *(void (**)(char *, uint64_t))(v12 + 8);
    v29 = v48;
    v28(v16, v48);
    a7 = v45;
  }
  else
  {

    v28 = *(void (**)(char *, uint64_t))(v12 + 8);
    v28(v16, v11);
    v29 = v11;
  }
  v30 = (void *)v49;
  v31 = v52;
  if (v49 >> 60 == 15)
  {
    v32 = a5;
    v33 = sub_1A920E2B0(v50, a5);

    v46(v31, v17, v29);
    v34 = a5;
    v35 = a5;
    v36 = sub_1A93F7674();
    v37 = sub_1A93F879C();
    if (os_log_type_enabled(v36, v37))
    {
      v48 = v29;
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v54 = v39;
      *(_DWORD *)v38 = 136315138;
      if (a5)
      {
        swift_getErrorValue();
        v40 = sub_1A93F927C();
        v42 = v41;
      }
      else
      {
        v40 = 0;
        v42 = 0xE000000000000000;
      }
      v53 = sub_1A906436C(v40, v42, &v54);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v36, v37, "[Key Loading] Loaded with missing data with error %s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v39, -1, -1);
      MEMORY[0x1AF41411C](v38, -1, -1);

      v28(v52, v48);
    }
    else
    {

      v28(v31, v29);
    }
    ((void (*)(uint64_t))a7)(v33);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v43 = v47;
    sub_1A906A3DC(v47, v49);
    sub_1A929357C(v50, v43, v30);
    a7();
    swift_bridgeObjectRelease();
    return sub_1A9069F9C(v43, (unint64_t)v30);
  }
}

id StandardKeyRequestHandler.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id StandardKeyRequestHandler.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  id v7;
  objc_class *v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  objc_super v13;
  uint64_t v14;

  v12 = sub_1A93F885C();
  v1 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F8808();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v6);
  v11 = OBJC_IVAR___MTStandardKeyRequestHandler_requestQueue;
  v10[1] = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v7 = v0;
  sub_1A93F7D88();
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v12);
  *(_QWORD *)(v10[2] + v11) = sub_1A93F888C();

  v8 = (objc_class *)type metadata accessor for StandardKeyRequestHandler();
  v13.receiver = v7;
  v13.super_class = v8;
  return objc_msgSendSuper2(&v13, sel_init);
}

id StandardKeyRequestHandler.__allocating_init(concurrentOperationCount:requestEncodingType:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;

  return objc_msgSend(objc_allocWithZone(v2), sel_initWithConcurrentOperationCount_requestEncodingType_, a1, a2);
}

id StandardKeyRequestHandler.init(concurrentOperationCount:requestEncodingType:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  id v9;
  objc_class *v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v14 = sub_1A93F885C();
  v3 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F8808();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v8);
  v13 = OBJC_IVAR___MTStandardKeyRequestHandler_requestQueue;
  v12[1] = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v9 = v2;
  sub_1A93F7D88();
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v7, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D0], v14);
  *(_QWORD *)(v12[2] + v13) = sub_1A93F888C();

  v10 = (objc_class *)type metadata accessor for StandardKeyRequestHandler();
  v17.receiver = v9;
  v17.super_class = v10;
  return objc_msgSendSuper2(&v17, sel_initWithConcurrentOperationCount_requestEncodingType_, v15, v16);
}

id StandardKeyRequestHandler.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StandardKeyRequestHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A920E2B0(unint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;

  if (a1 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v4)
      break;
    v13 = MEMORY[0x1E0DEE9D8];
    result = sub_1A93F8D84();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    v6 = 0;
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1AF4129DC](v6, a1);
      else
        v9 = *(id *)(a1 + 8 * v6 + 32);
      v10 = v9;
      v11 = objc_allocWithZone((Class)type metadata accessor for ContentKeyResponse(0));
      v12 = v10;
      if (a2)
      {
        v7 = a2;
        v8 = (void *)sub_1A93F711C();
      }
      else
      {
        v8 = 0;
      }
      ++v6;
      objc_msgSend(v11, sel_initWithRequest_keyData_renewalDate_error_, v12, 0, 0, v8);

      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
      if (v4 == v6)
        return v13;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    v4 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A920E458(uint64_t result)
{
  if (((unint64_t)(result + 1021) > 0x14 || ((1 << (result - 3)) & 0x1F0F8F) == 0)
    && result != -1)
  {
    return 0;
  }
  return result;
}

void sub_1A920E49C()
{
  uint64_t v0;

  sub_1A920BDD4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1A920E4A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A920E4E4()
{
  return sub_1A912D1B4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A920CAB0);
}

uint64_t type metadata accessor for StandardKeyRequestHandler()
{
  return objc_opt_self();
}

unint64_t sub_1A920E514()
{
  unint64_t result;

  result = qword_1EEABAA50;
  if (!qword_1EEABAA50)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for KeyRequestLicenseError, &type metadata for KeyRequestLicenseError);
    atomic_store(result, (unint64_t *)&qword_1EEABAA50);
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyRequestLicenseError()
{
  return &type metadata for KeyRequestLicenseError;
}

uint64_t method lookup function for StandardKeyRequestHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StandardKeyRequestHandler.loadCertificateData(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of StandardKeyRequestHandler.loadKeyData(for:account:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

void sub_1A920E5AC(uint64_t a1)
{
  uint64_t v1;

  sub_1A920D198(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A920E5B4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A920E5D8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A920E5FC(unint64_t a1, uint64_t a2, void *a3, void *a4, NSObject *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  char *v17;
  char *v18;
  void *v19;
  uint64_t i;
  char *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  _BYTE *v31;
  id v32;
  id v33;
  void *v34;
  unint64_t v35;
  id v36;
  void *v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  _BYTE *v51;
  objc_class *v52;
  char *v53;
  void **v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  void *v59;
  id v60;
  id v61;
  unint64_t v62;
  void *v63;
  id v64;
  void *v65;
  unint64_t v66;
  id v67;
  id v68;
  dispatch_group_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  __int128 v73;
  uint64_t v74;
  objc_super v75;
  _QWORD aBlock[8];

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a4;
  *(_QWORD *)(v13 + 24) = a5;
  v70 = v13;
  v14 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_31;
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  v16 = a5;
  swift_bridgeObjectRetain();
  v69 = a5;
  if (!v15)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
    v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1A9405960;
    v49 = sub_1A93F738C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v12, 1, 1, v49);
    sub_1A920EFE4();
    v50 = (void *)swift_allocError();
    *v51 = 0;
    v52 = (objc_class *)type metadata accessor for ContentKeyResponse(0);
    v53 = (char *)objc_allocWithZone(v52);
    v54 = (void **)&v53[OBJC_IVAR___MTContentKeyResponse_error];
    *(_QWORD *)&v53[OBJC_IVAR___MTContentKeyResponse_error] = 0;
    v55 = (uint64_t *)&v53[OBJC_IVAR___MTContentKeyResponse_keyData];
    v73 = xmmword_1A9411960;
    *(_OWORD *)&v53[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1A9411960;
    *(_QWORD *)&v53[OBJC_IVAR___MTContentKeyResponse_request] = 0;
    swift_beginAccess();
    v57 = *v55;
    v56 = v55[1];
    *(_OWORD *)v55 = v73;
    v58 = v53;
    sub_1A9069F9C(v57, v56);
    sub_1A90A1CA8((uint64_t)v12, (uint64_t)&v58[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
    swift_beginAccess();
    v59 = *v54;
    *v54 = v50;
    v60 = v50;

    v75.receiver = v58;
    v75.super_class = v52;
    v61 = objc_msgSendSuper2(&v75, sel_init);
    sub_1A90AC3A4((uint64_t)v12);

    *(_QWORD *)(v48 + 32) = v61;
    v74 = v48;
    sub_1A93F8328();
    swift_beginAccess();
    v62 = swift_bridgeObjectRetain();
    sub_1A91369B4(v62);
    swift_endAccess();
    dispatch_group_leave(v69);
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  while (1)
  {
    *(_QWORD *)&v73 = a1 & 0xC000000000000001;
    v65 = a4;
    v64 = a3;
    v63 = (void *)a2;
    v66 = v14;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v17 = (char *)MEMORY[0x1AF4129DC](0, a1);
      goto LABEL_6;
    }
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      break;
    v17 = (char *)*(id *)(a1 + 32);
LABEL_6:
    v18 = v17;
    swift_bridgeObjectRelease();
    v67 = sub_1A932B7CC();
    a3 = *(void **)&v18[OBJC_IVAR___MTContentKeyRequest_requestType];
    v19 = *(void **)&v18[OBJC_IVAR___MTContentKeyRequest_secureInvalidationDsid];
    v68 = v18;
    v14 = v18[OBJC_IVAR___MTContentKeyRequest_offlineRequest];
    swift_bridgeObjectRetain();
    v72 = v19;
    v71 = v19;
    for (i = 4; ; ++i)
    {
      v12 = (char *)(i - 4);
      v21 = (_QWORD)v73 ? (char *)MEMORY[0x1AF4129DC](i - 4, a1) : (char *)*(id *)(a1 + 8 * i);
      a4 = v21;
      a2 = i - 3;
      if (__OFADD__(v12, 1))
        break;
      if (a3 != *(void **)&v21[OBJC_IVAR___MTContentKeyRequest_requestType]
        || (_DWORD)v14 != v21[OBJC_IVAR___MTContentKeyRequest_offlineRequest])
      {
LABEL_18:
        if (v66)
        {
          swift_bridgeObjectRetain();
          v26 = sub_1A93F8E5C();
          swift_bridgeObjectRelease();
          if (v26)
          {
LABEL_20:
            aBlock[0] = MEMORY[0x1E0DEE9D8];
            sub_1A93F8D84();
            if (v26 < 0)
              goto LABEL_35;
            v27 = 0;
            do
            {
              if ((_QWORD)v73)
                v28 = (id)MEMORY[0x1AF4129DC](v27, a1);
              else
                v28 = *(id *)(a1 + 8 * v27 + 32);
              v29 = v28;
              ++v27;
              sub_1A920EFE4();
              v30 = (void *)swift_allocError();
              *v31 = 3;
              v32 = objc_allocWithZone((Class)type metadata accessor for ContentKeyResponse(0));
              v33 = v30;
              v34 = (void *)sub_1A93F711C();

              objc_msgSend(v32, sel_initWithRequest_keyData_renewalDate_error_, v29, 0, 0, v34);
              sub_1A93F8D60();
              sub_1A93F8D90();
              sub_1A93F8D9C();
              sub_1A93F8D6C();
            }
            while (v26 != v27);
          }
        }
        else
        {
          v26 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v26)
            goto LABEL_20;
        }
        swift_bridgeObjectRelease();
        swift_beginAccess();
        v35 = swift_bridgeObjectRetain();
        sub_1A91369B4(v35);
        swift_endAccess();
        dispatch_group_leave(v69);
        swift_release();

        swift_bridgeObjectRelease();
        return;
      }
      a5 = *(NSObject **)&v21[OBJC_IVAR___MTContentKeyRequest_secureInvalidationDsid];
      if (a5)
      {
        if (!v72)
          goto LABEL_18;
        sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
        v22 = v15;
        v23 = a3;
        v24 = v71;
        a5 = a5;
        v25 = sub_1A93F8A3C();

        a3 = v23;
        v15 = v22;
        if ((v25 & 1) == 0)
          goto LABEL_18;
      }
      else if (v72)
      {
        goto LABEL_18;
      }

      if (a2 == v15)
      {
        swift_bridgeObjectRelease();
        v36 = v64;
        objc_msgSend(v64, sel_setPersonalizeRequests_, 1);
        v37 = sub_1A920B620(a1);
        v39 = v38;
        v40 = (_QWORD *)swift_allocObject();
        v40[2] = a1;
        v40[3] = sub_1A920EFDC;
        v40[4] = v70;
        v40[5] = a3;
        v40[6] = v37;
        v40[7] = v39;
        v40[8] = v72;
        v40[9] = v36;
        v41 = v63;
        v40[10] = v63;
        aBlock[4] = sub_1A920F084;
        aBlock[5] = v40;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1A913520C;
        aBlock[3] = &block_descriptor_31_0;
        v42 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        v43 = v71;
        swift_retain();
        sub_1A906A3DC((uint64_t)v37, v39);
        v44 = v41;
        v45 = v36;
        swift_release();
        v46 = v67;
        objc_msgSend(v67, sel_valueWithCompletion_, v42);
        _Block_release(v42);
        sub_1A9069F9C((uint64_t)v37, v39);
        swift_release();

        return;
      }
    }
    __break(1u);
    __break(1u);
LABEL_31:
    swift_retain();
    v47 = a5;
    swift_bridgeObjectRetain();
    v15 = sub_1A93F8E5C();
    v69 = a5;
    if (!v15)
      goto LABEL_32;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  __break(1u);
}

uint64_t sub_1A920EF98()
{
  return objectdestroy_18Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A920EFA4()
{
  uint64_t v0;

  return sub_1A920D088(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_1A920EFB0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1A920EFDC(uint64_t a1)
{
  uint64_t v1;

  sub_1A920D020(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

unint64_t sub_1A920EFE4()
{
  unint64_t result;

  result = qword_1EEABAA58;
  if (!qword_1EEABAA58)
  {
    result = MEMORY[0x1AF414014](&unk_1A9411B10, &type metadata for KeyRequestLoadingError);
    atomic_store(result, (unint64_t *)&qword_1EEABAA58);
  }
  return result;
}

uint64_t sub_1A920F028()
{
  uint64_t v0;
  unint64_t v1;

  swift_bridgeObjectRelease();
  swift_release();
  v1 = *(_QWORD *)(v0 + 56);
  if (v1 >> 60 != 15)
    sub_1A905F180(*(_QWORD *)(v0 + 48), v1);

  return swift_deallocObject();
}

void sub_1A920F084(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1A920D1EC(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void (**)(_QWORD))(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(void **)(v3 + 64), *(void **)(v3 + 72), *(_QWORD *)(v3 + 80));
}

uint64_t sub_1A920F0BC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A920F0E8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;

  return sub_1A920D8E8(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(void (**)(void))(v5 + 24), *(_QWORD *)(v5 + 32));
}

uint64_t sub_1A920F0F8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_1A920BEE8(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32));
}

uint64_t sub_1A920F104()
{
  return objectdestroy_18Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t objectdestroy_18Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

void sub_1A920F148()
{
  uint64_t v0;

  sub_1A920C264(*(void (**)(id))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1A920F154()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A920F178(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;

  return sub_1A920C41C(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
}

uint64_t sub_1A920F180()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  v1 = *(_QWORD *)(v0 + 40);
  if (v1 >> 60 != 15)
    sub_1A905F180(*(_QWORD *)(v0 + 32), v1);

  return swift_deallocObject();
}

uint64_t sub_1A920F1C4()
{
  return sub_1A912D1B4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A920C654);
}

uint64_t storeEnumTagSinglePayload for KeyRequestLoadingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A920F21C + 4 * byte_1A9411975[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A920F250 + 4 * byte_1A9411970[v4]))();
}

uint64_t sub_1A920F250(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A920F258(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A920F260);
  return result;
}

uint64_t sub_1A920F26C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A920F274);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A920F278(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A920F280(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KeyRequestLoadingError()
{
  return &type metadata for KeyRequestLoadingError;
}

unint64_t sub_1A920F2A0()
{
  unint64_t result;

  result = qword_1EEABAA60;
  if (!qword_1EEABAA60)
  {
    result = MEMORY[0x1AF414014](&unk_1A9411AE8, &type metadata for KeyRequestLoadingError);
    atomic_store(result, (unint64_t *)&qword_1EEABAA60);
  }
  return result;
}

double CGSize.init(width:proportionalTo:)(double result, double a2)
{
  if (result <= 0.0)
    return a2;
  return result;
}

double CGSize.scaled(_:)(double a1, double a2)
{
  return a1 * a2;
}

uint64_t DefaultEpisodeStateDataSource.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t DefaultEpisodeStateDataSource.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  return result;
}

uint64_t sub_1A920F37C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *);

  v2 = sub_1A9182C9C();
  v3 = v2;
  v5 = v4;
  if (v2)
  {
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v3;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = sub_1A9182E74;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = v2;
  return sub_1A90858C0(v3);
}

uint64_t sub_1A920F3E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_1A9182E48;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_1A90858C0(v1);
  return sub_1A920F498((uint64_t)v4, v3);
}

uint64_t sub_1A920F468()
{
  uint64_t v0;

  v0 = sub_1A9182C9C();
  sub_1A90858C0(v0);
  return v0;
}

uint64_t sub_1A920F498(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_1A9085818(v5);
}

uint64_t (*sub_1A920F4E8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1A920F524@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 88) + 24))(v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 0, 1, v4);
}

uint64_t DefaultEpisodeStateDataSource.deinit()
{
  uint64_t v0;

  sub_1A9085818(*(_QWORD *)(v0 + 16));
  return v0;
}

uint64_t DefaultEpisodeStateDataSource.__deallocating_deinit()
{
  uint64_t v0;

  sub_1A9085818(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t sub_1A920F5B0(uint64_t a1, uint64_t a2)
{
  return sub_1A920F498(a1, a2);
}

void (*sub_1A920F5D0(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1A920F4E8();
  return sub_1A914C880;
}

uint64_t sub_1A920F618@<X0>(uint64_t a1@<X8>)
{
  return sub_1A920F524(a1);
}

uint64_t sub_1A920F640()
{
  return 16;
}

__n128 sub_1A920F64C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1A920F658()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DefaultEpisodeStateDataSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DefaultEpisodeStateDataSource);
}

uint64_t method lookup function for DefaultEpisodeStateDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DefaultEpisodeStateDataSource.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of DefaultEpisodeStateDataSource.refreshControllerStates.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DefaultEpisodeStateDataSource.refreshControllerStates.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DefaultEpisodeStateDataSource.refreshControllerStates.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DefaultEpisodeStateDataSource.startObservingChanges()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DefaultEpisodeStateDataSource.state(for:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v3 + 144))(a1, a2, a3 & 1);
}

uint64_t sub_1A920F6F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t OSSignposter.makeSignpostID(hash:)(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    return sub_1A93F7608();
  sub_1A93F7620();
  return sub_1A93F75D8();
}

uint64_t TranscriptRequest.episodeAdamID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t TranscriptRequest.ttmlIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void TranscriptRequest.priority.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

void TranscriptRequest.lifetime.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 25);
}

uint64_t TranscriptRequest.trace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9062170(v1 + 32, a1, &qword_1ED2AD0C0);
}

uint64_t TranscriptRequest.trace.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9210154(a1, v1 + 32);
}

uint64_t (*TranscriptRequest.trace.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptRequest.init(episodeAdamID:ttmlIdentifier:priority:lifetime:trace:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7;
  char v8;

  v7 = *a4;
  v8 = *a5;
  *(_OWORD *)(a7 + 48) = 0u;
  *(_QWORD *)(a7 + 64) = 0;
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_BYTE *)(a7 + 24) = v7;
  *(_BYTE *)(a7 + 25) = v8;
  *(_OWORD *)(a7 + 32) = 0u;
  return sub_1A9210154(a6, a7 + 32);
}

uint64_t sub_1A920F818()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A920F854 + 4 * byte_1A9411BF0[*v0]))(0x4165646F73697065, 0xED000044496D6164);
}

uint64_t sub_1A920F854()
{
  return 0x6E6564496C6D7474;
}

uint64_t sub_1A920F878()
{
  return 0x797469726F697270;
}

uint64_t sub_1A920F890()
{
  return 0x656D69746566696CLL;
}

uint64_t sub_1A920F8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9210808(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A920F8CC()
{
  sub_1A92101E4();
  return sub_1A93F945C();
}

uint64_t sub_1A920F8F4()
{
  sub_1A92101E4();
  return sub_1A93F9468();
}

uint64_t TranscriptRequest.ttmlRequest(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A920F93C(a1, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, 7, a2);
}

uint64_t TranscriptRequest.shazamSignatureRequest(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A920F93C(a1, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, 6, a2);
}

uint64_t sub_1A920F93C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  char v8;
  char v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;

  sub_1A9062170(a1, a4, &qword_1ED2AD3D0);
  v8 = *(_BYTE *)(v4 + 24);
  v14 = *(_QWORD *)(v4 + 8);
  v15 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  sub_1A915997C();
  sub_1A93F8B38();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v9 = *(_BYTE *)(v4 + 25);
  v10 = (int *)a2(0);
  v11 = a4 + v10[9];
  *(_QWORD *)(v11 + 32) = 0;
  *(_OWORD *)v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(_BYTE *)(a4 + v10[5]) = v8;
  v12 = (_QWORD *)(a4 + v10[6]);
  *v12 = v14;
  v12[1] = v15;
  *(_BYTE *)(a4 + v10[8]) = v9;
  *(_BYTE *)(a4 + v10[7]) = a3;
  return sub_1A921019C(v4 + 32, v11);
}

uint64_t TranscriptRequest.hash(into:)()
{
  sub_1A93F930C();
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9300();
}

uint64_t TranscriptRequest.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[8];
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAAA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A92101E4();
  sub_1A93F93D8();
  v11 = *v3;
  v10[7] = 0;
  sub_1A9210228();
  sub_1A93F9030();
  if (!v2)
  {
    v10[6] = 1;
    sub_1A93F9000();
    v10[5] = *((_BYTE *)v3 + 24);
    v10[4] = 2;
    sub_1A921026C();
    sub_1A93F9030();
    v10[3] = *((_BYTE *)v3 + 25);
    v10[2] = 3;
    sub_1A92102B0();
    sub_1A93F9030();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t TranscriptRequest.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F930C();
  sub_1A93F7FBC();
  sub_1A93F9300();
  return sub_1A93F9324();
}

uint64_t TranscriptRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD v12[3];
  char v13;
  char v14;
  _OWORD v15[2];
  uint64_t v16;
  uint64_t v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAAD0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A92101E4();
  sub_1A93F93C0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return sub_1A9060D8C((uint64_t)v15);
  }
  else
  {
    HIBYTE(v11) = 0;
    sub_1A92102F4();
    sub_1A93F8F7C();
    v12[0] = v17;
    LOBYTE(v17) = 1;
    v12[1] = sub_1A93F8F4C();
    v12[2] = v9;
    HIBYTE(v11) = 2;
    sub_1A9210338();
    sub_1A93F8F7C();
    v13 = v17;
    HIBYTE(v11) = 3;
    sub_1A921037C();
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v14 = v17;
    sub_1A91314A4((uint64_t)v12, a2);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return sub_1A91314E0((uint64_t)v12);
  }
}

uint64_t sub_1A920FF00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TranscriptRequest.init(from:)(a1, a2);
}

uint64_t sub_1A920FF14(_QWORD *a1)
{
  return TranscriptRequest.encode(to:)(a1);
}

uint64_t sub_1A920FF2C()
{
  sub_1A93F930C();
  sub_1A93F7FBC();
  return sub_1A93F9300();
}

uint64_t sub_1A920FF74()
{
  sub_1A93F92DC();
  sub_1A93F930C();
  sub_1A93F7FBC();
  sub_1A93F9300();
  return sub_1A93F9324();
}

uint64_t sub_1A920FFD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9062170(v1 + 32, a1, &qword_1ED2AD0C0);
}

uint64_t sub_1A920FFFC(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9210154(a1, v1 + 32);
}

uint64_t (*sub_1A9210004())()
{
  return nullsub_1;
}

BOOL _s18PodcastsFoundation17TranscriptRequestV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  _BOOL8 v8;
  _BYTE v10[72];
  _BYTE v11[72];
  _BYTE v12[8];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[8];
  uint64_t v16;
  uint64_t v17;

  v4 = *a1;
  v5 = *a2;
  sub_1A91314A4((uint64_t)a1, (uint64_t)v15);
  sub_1A91314A4((uint64_t)a2, (uint64_t)v12);
  if (v4 == v5)
  {
    if (v16 == v13 && v17 == v14)
    {
      sub_1A91314E0((uint64_t)v15);
      sub_1A91314E0((uint64_t)v12);
      sub_1A91314A4((uint64_t)a1, (uint64_t)v11);
      sub_1A91314A4((uint64_t)a2, (uint64_t)v10);
    }
    else
    {
      v7 = sub_1A93F90C0();
      sub_1A91314E0((uint64_t)v15);
      sub_1A91314E0((uint64_t)v12);
      sub_1A91314A4((uint64_t)a1, (uint64_t)v11);
      sub_1A91314A4((uint64_t)a2, (uint64_t)v10);
      v8 = 0;
      if ((v7 & 1) == 0)
        goto LABEL_11;
    }
    v8 = flt_1A9406340[v11[24]] == flt_1A9406340[v10[24]];
  }
  else
  {
    sub_1A91314E0((uint64_t)v15);
    sub_1A91314E0((uint64_t)v12);
    sub_1A91314A4((uint64_t)a1, (uint64_t)v11);
    sub_1A91314A4((uint64_t)a2, (uint64_t)v10);
    v8 = 0;
  }
LABEL_11:
  sub_1A91314E0((uint64_t)v10);
  sub_1A91314E0((uint64_t)v11);
  return v8;
}

uint64_t sub_1A9210154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A921019C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A92101E4()
{
  unint64_t result;

  result = qword_1EEABAAB0;
  if (!qword_1EEABAAB0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9411DD8, &type metadata for TranscriptRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABAAB0);
  }
  return result;
}

unint64_t sub_1A9210228()
{
  unint64_t result;

  result = qword_1EEABAAB8;
  if (!qword_1EEABAAB8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AdamID, &type metadata for AdamID);
    atomic_store(result, (unint64_t *)&qword_1EEABAAB8);
  }
  return result;
}

unint64_t sub_1A921026C()
{
  unint64_t result;

  result = qword_1EEABAAC0;
  if (!qword_1EEABAAC0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NetworkTaskPriority, &type metadata for NetworkTaskPriority);
    atomic_store(result, (unint64_t *)&qword_1EEABAAC0);
  }
  return result;
}

unint64_t sub_1A92102B0()
{
  unint64_t result;

  result = qword_1EEABAAC8;
  if (!qword_1EEABAAC8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AssetLifetime, &type metadata for AssetLifetime);
    atomic_store(result, (unint64_t *)&qword_1EEABAAC8);
  }
  return result;
}

unint64_t sub_1A92102F4()
{
  unint64_t result;

  result = qword_1EEABAAD8;
  if (!qword_1EEABAAD8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AdamID, &type metadata for AdamID);
    atomic_store(result, (unint64_t *)&qword_1EEABAAD8);
  }
  return result;
}

unint64_t sub_1A9210338()
{
  unint64_t result;

  result = qword_1EEABAAE0;
  if (!qword_1EEABAAE0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NetworkTaskPriority, &type metadata for NetworkTaskPriority);
    atomic_store(result, (unint64_t *)&qword_1EEABAAE0);
  }
  return result;
}

unint64_t sub_1A921037C()
{
  unint64_t result;

  result = qword_1EEABAAE8;
  if (!qword_1EEABAAE8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AssetLifetime, &type metadata for AssetLifetime);
    atomic_store(result, (unint64_t *)&qword_1EEABAAE8);
  }
  return result;
}

uint64_t destroy for TranscriptRequest(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    return __swift_destroy_boxed_opaque_existential_0(a1 + 32);
  return result;
}

uint64_t initializeWithCopy for TranscriptRequest(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v4 = (_OWORD *)(a1 + 32);
  v5 = a2 + 32;
  v6 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v6;
    *(_QWORD *)(a1 + 64) = v7;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 32, v5, v6);
  }
  else
  {
    v8 = *(_OWORD *)(v5 + 16);
    *v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 48) = v8;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(v5 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for TranscriptRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v4 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 56) = v4;
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 32);
    v6 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v5;
    *(_OWORD *)(a1 + 48) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_0(a1 + 32);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  return a1;
}

uint64_t assignWithTake for TranscriptRequest(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_0(a1 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TranscriptRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A92106B0 + 4 * byte_1A9411BF9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A92106E4 + 4 * byte_1A9411BF4[v4]))();
}

uint64_t sub_1A92106E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92106EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92106F4);
  return result;
}

uint64_t sub_1A9210700(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9210708);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A921070C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9210714(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptRequest.CodingKeys()
{
  return &type metadata for TranscriptRequest.CodingKeys;
}

unint64_t sub_1A9210734()
{
  unint64_t result;

  result = qword_1EEABAAF0;
  if (!qword_1EEABAAF0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9411DB0, &type metadata for TranscriptRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABAAF0);
  }
  return result;
}

unint64_t sub_1A921077C()
{
  unint64_t result;

  result = qword_1EEABAAF8;
  if (!qword_1EEABAAF8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9411D20, &type metadata for TranscriptRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABAAF8);
  }
  return result;
}

unint64_t sub_1A92107C4()
{
  unint64_t result;

  result = qword_1EEABAB00;
  if (!qword_1EEABAB00)
  {
    result = MEMORY[0x1AF414014](&unk_1A9411D48, &type metadata for TranscriptRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABAB00);
  }
  return result;
}

uint64_t sub_1A9210808(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4165646F73697065 && a2 == 0xED000044496D6164;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6564496C6D7474 && a2 == 0xEE00726569666974 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D69746566696CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t FairPlayKeySessionProvider.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t FairPlayKeySessionProvider.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  return result;
}

void FairPlayKeySessionProvider.session(for:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v2 = v1;
  if (qword_1ED2A8890 != -1)
    swift_once();
  v4 = sub_1A93F7698();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED2A8878);
  swift_retain_n();
  v5 = a1;
  v6 = sub_1A93F7674();
  v7 = sub_1A93F8790();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v8 = 136315651;
    v10 = sub_1A9210CC8();
    sub_1A906436C(v10, v11, &v17);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2160;
    sub_1A93F8AA8();
    *(_WORD *)(v8 + 22) = 2081;
    v12 = FairPlayAsset.description.getter();
    sub_1A906436C(v12, v13, &v17);
    v2 = v1;
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v6, v7, "%s Creating a session for asset: %{private,mask.hash}s.", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v9, -1, -1);
    MEMORY[0x1AF41411C](v8, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v14 = v5;
  sub_1A93DB9DC();
  if (v2)
  {

  }
  else
  {
    v16 = v15;
    type metadata accessor for ICContentFairPlayKeySession();
    swift_allocObject();
    sub_1A93D965C((char *)v14, v16);
  }
}

unint64_t sub_1A9210CC8()
{
  uint64_t v0;
  unint64_t v1;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v1 = 0xD000000000000030;
    *(_QWORD *)(v0 + 16) = 0xD000000000000030;
    *(_QWORD *)(v0 + 24) = 0x80000001A9449350;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FairPlayKeySessionProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

void sub_1A9210D4C(void *a1)
{
  FairPlayKeySessionProvider.session(for:)(a1);
}

uint64_t method lookup function for FairPlayKeySessionProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FairPlayKeySessionProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t Result.success.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v4 + 16))(v7, v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v10 + 56))(a2, 1, 1, *(_QWORD *)(a1 + 16));
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, a1);
  }
  else
  {
    (*(void (**)(uint64_t, char *, _QWORD))(v10 + 32))(a2, v7, *(_QWORD *)(a1 + 16));
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v9);
  }
}

uint64_t Result.failure.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v4 + 16))(v7, v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, char *, _QWORD))(v10 + 32))(a2, v7, *(_QWORD *)(a1 + 24));
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v9);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v10 + 56))(a2, 1, 1, *(_QWORD *)(a1 + 24));
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, a1);
  }
}

uint64_t Result<>.init(success:error:)(char a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v12;

  v4 = sub_1A93F7698();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {

    return 0;
  }
  else if (!a2)
  {
    sub_1A93F768C();
    v8 = sub_1A93F7674();
    v9 = sub_1A93F87A8();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1A904E000, v8, v9, "A failed result was created without an error", v10, 2u);
      MEMORY[0x1AF41411C](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1A9211098();
    return swift_allocError();
  }
  return (uint64_t)a2;
}

unint64_t sub_1A9211098()
{
  unint64_t result;

  result = qword_1EEABAB08;
  if (!qword_1EEABAB08)
  {
    result = MEMORY[0x1AF414014](&unk_1A9411F4C, &type metadata for ResultSuccessError);
    atomic_store(result, (unint64_t *)&qword_1EEABAB08);
  }
  return result;
}

BOOL Result<>.successAndError.getter(void *a1, char a2)
{
  id v3;

  if ((a2 & 1) != 0)
    v3 = a1;
  return (a2 & 1) == 0;
}

uint64_t storeEnumTagSinglePayload for ResultSuccessError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A9211158 + 4 * byte_1A9411EA0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A9211178 + 4 * byte_1A9411EA5[v4]))();
}

_BYTE *sub_1A9211158(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A9211178(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9211180(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9211188(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9211190(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9211198(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ResultSuccessError()
{
  return &type metadata for ResultSuccessError;
}

unint64_t sub_1A92111B8()
{
  unint64_t result;

  result = qword_1EEABAB10;
  if (!qword_1EEABAB10)
  {
    result = MEMORY[0x1AF414014](&unk_1A9411F24, &type metadata for ResultSuccessError);
    atomic_store(result, (unint64_t *)&qword_1EEABAB10);
  }
  return result;
}

uint64_t MediaLibraryPid.value.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t MediaLibraryPid.uint64Value.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

BOOL MediaLibraryPid.isValid.getter()
{
  uint64_t *v0;

  return isValidMediaLibraryPid(*v0);
}

BOOL isValidMediaLibraryPid(uint64_t a1)
{
  return a1 != 0;
}

uint64_t MediaLibraryPid.init(uint64Value:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

ValueMetadata *type metadata accessor for MediaLibraryPid()
{
  return &type metadata for MediaLibraryPid;
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.addEpisode(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.deleteEpisodes(identifiers:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.addArtwork(withFileUrl:toEpisodeWithPersistentId:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.reconcileMostRecentlyDownloadedEpisodes(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.postRestoreCandidates()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.mostRecentRestoreToken.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

id static DispatchingFairPlayValidationManaging.receive(on:manager:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  id v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR___PFDispatchingFairPlayValidationManaging_wrappedInstance] = a2;
  *(_QWORD *)&v5[OBJC_IVAR___PFDispatchingFairPlayValidationManaging_responseQueue] = a1;
  v8.receiver = v5;
  v8.super_class = v2;
  swift_unknownObjectRetain();
  v6 = a1;
  return objc_msgSendSuper2(&v8, sel_init);
}

void DispatchingFairPlayValidationManaging.validateDownloadedEpisodes(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  _QWORD v9[6];

  v5 = *(void **)(v2 + OBJC_IVAR___PFDispatchingFairPlayValidationManaging_wrappedInstance);
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v6;
  v7[3] = a1;
  v7[4] = a2;
  v9[4] = sub_1A92116E8;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1A92116F4;
  v9[3] = &block_descriptor_27;
  v8 = _Block_copy(v9);
  sub_1A90858C0(a1);
  swift_release();
  objc_msgSend(v5, sel_validateDownloadedEpisodesWithCompletion_, v8);
  _Block_release(v8);
}

uint64_t sub_1A9211470()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9211494(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  void *v17;
  id v18;
  _QWORD *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v10 = sub_1A93F7D58();
  v24 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1A93F7DB8();
  v13 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1AF41420C](a3 + 16);
  if (result)
  {
    v17 = (void *)result;
    v18 = *(id *)(result + OBJC_IVAR___PFDispatchingFairPlayValidationManaging_responseQueue);

    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a4;
    v19[3] = a5;
    v19[4] = a1;
    v19[5] = a2;
    aBlock[4] = sub_1A92119C4;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_13_0;
    v20 = _Block_copy(aBlock);
    sub_1A90858C0(a4);
    v21 = a1;
    v22 = a2;
    sub_1A93F7D88();
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1A90A1130();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D28();
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v15, v12, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v23);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A92116B4()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92116E8(void *a1, void *a2)
{
  uint64_t *v2;

  return sub_1A9211494(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_1A92116F4(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

id DispatchingFairPlayValidationManaging.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DispatchingFairPlayValidationManaging.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DispatchingFairPlayValidationManaging.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id FairPlayValidationManaging.receive(on:)(void *a1)
{
  uint64_t v1;
  objc_class *v3;
  char *v4;
  id v5;
  objc_super v7;

  v3 = (objc_class *)type metadata accessor for DispatchingFairPlayValidationManaging();
  v4 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v4[OBJC_IVAR___PFDispatchingFairPlayValidationManaging_wrappedInstance] = v1;
  *(_QWORD *)&v4[OBJC_IVAR___PFDispatchingFairPlayValidationManaging_responseQueue] = a1;
  v7.receiver = v4;
  v7.super_class = v3;
  v5 = a1;
  swift_unknownObjectRetain();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t method lookup function for DispatchingFairPlayValidationManaging()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A9211964()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A9211988()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A92119C4()
{
  _QWORD *v0;
  uint64_t (*v1)(_QWORD, _QWORD);
  uint64_t result;

  v1 = (uint64_t (*)(_QWORD, _QWORD))v0[2];
  if (v1)
    return v1(v0[4], v0[5]);
  return result;
}

uint64_t sub_1A92119F0(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t i;
  uint64_t v9;
  id v10[2];
  uint64_t v11;

  result = MEMORY[0x1E0DEE9D8];
  v11 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v6; ++i)
    {
      v10[1] = *(id *)(a1 + 8 * i + 32);
      swift_bridgeObjectRetain();
      sub_1A92137C8(a3, v10);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v9 = swift_bridgeObjectRelease();
      if (v10[0])
      {
        MEMORY[0x1AF412004](v9);
        if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A93F834C();
        sub_1A93F8394();
        sub_1A93F8328();
      }
    }
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1A9211B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v18;

  result = MEMORY[0x1E0DEE9D8];
  v18 = MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v8; ++i)
    {
      v12 = swift_bridgeObjectRetain();
      v13 = a5(v12, a2, a3, a4);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v14 = v13;
      v15 = swift_bridgeObjectRelease();
      if (v14)
      {
        MEMORY[0x1AF412004](v15);
        if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A93F834C();
        sub_1A93F8394();
        sub_1A93F8328();
      }
    }
    swift_bridgeObjectRelease();
    return v18;
  }
  return result;
}

BOOL static MediaRequestResponseParser.parseResponse(_:params:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _BYTE *v5;
  char v7;
  _BYTE v8[2];

  _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0(a1);
  v3 = v2;
  if (v2)
    swift_bridgeObjectRelease();
  sub_1A9211DC4(a1, (uint64_t)v8);
  v4 = v8[0];
  if ((v8[1] & 1) != 0)
  {
    sub_1A91989C8();
    swift_allocError();
    *v5 = v4;
  }
  else
  {
    v7 = v8[0];
    sub_1A9211F00(a1, (uint64_t)&v7);
  }
  return v3 != 0;
}

PodcastsFoundation::MediaRequestResponseParser::MediaRequestResponseParseError_optional __swiftcall MediaRequestResponseParser.MediaRequestResponseParseError.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (PodcastsFoundation::MediaRequestResponseParser::MediaRequestResponseParseError_optional)rawValue;
}

uint64_t MediaRequestResponseParser.MediaRequestResponseParseError.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

PodcastsFoundation::MediaRequestResponseParser::MediaRequestResponseParseError_optional sub_1A9211D3C(Swift::Int *a1)
{
  return MediaRequestResponseParser.MediaRequestResponseParseError.init(rawValue:)(*a1);
}

uint64_t sub_1A9211D44()
{
  sub_1A92141F8();
  sub_1A9051AC0();
  return sub_1A93F92B8();
}

uint64_t sub_1A9211D88()
{
  uint64_t result;

  sub_1A93F6DA4();
  swift_allocObject();
  result = sub_1A93F6D98();
  qword_1ED2A1D80 = result;
  return result;
}

char sub_1A9211DC4@<W0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  Swift::String v7;
  __int16 v8;
  _BYTE v10[40];
  __int128 v11;
  __int128 v12;

  v3 = _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0(a1);
  if (!v3)
    goto LABEL_13;
  if (!*(_QWORD *)(v3 + 16))
  {
    LOBYTE(v3) = swift_bridgeObjectRelease();
    v8 = 257;
    goto LABEL_14;
  }
  v4 = *(_QWORD *)(v3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1A93F8C1C();
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1A90A597C((uint64_t)v10), (v6 & 1) != 0))
  {
    sub_1A906443C(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v11);
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A90A5908((uint64_t)v10);
  if (!*((_QWORD *)&v12 + 1))
  {
    LOBYTE(v3) = sub_1A90A593C((uint64_t)&v11);
    goto LABEL_13;
  }
  LOBYTE(v3) = swift_dynamicCast();
  if ((v3 & 1) == 0)
  {
LABEL_13:
    v8 = 256;
    goto LABEL_14;
  }
  v7._countAndFlagsBits = 1701869940;
  v7._object = (void *)0xE400000000000000;
  LOBYTE(v3) = MediaRequest.ContentType.init(rawValue:)(v7);
  if (v10[0] == 6)
  {
    v8 = 258;
LABEL_14:
    *(_WORD *)a2 = v8;
    return v3;
  }
  *(_BYTE *)a2 = v10[0];
  *(_BYTE *)(a2 + 1) = 0;
  return v3;
}

void sub_1A9211F00(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A9211F34()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = static MediaRequestResponseParser.parsePodcastEpisodeResponse(_:)(v0);
  if (v1 >> 62)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC4F8);
    v2 = sub_1A93F8E20();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1A93F91E0();
    v2 = v1;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t static MediaRequestResponseParser.parseContainerResponse<A>(containerType:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0(a2);
  if (!v2)
    return 0;
  MEMORY[0x1E0C80A78](v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC490);
  sub_1A921406C();
  v3 = sub_1A93F81D8();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t static MediaRequestResponseParser.parseChannelResponse(_:)(uint64_t a1)
{
  return sub_1A9212238(a1, (uint64_t (*)(uint64_t))type metadata accessor for ServerChannel, &qword_1EEABAB48, (uint64_t)&protocol conformance descriptor for ServerChannel, "Failed to parse channel with error: %@");
}

uint64_t static MediaRequestResponseParser.parsePodcastEpisodeResponse(_:)(uint64_t a1)
{
  return sub_1A9212238(a1, (uint64_t (*)(uint64_t))type metadata accessor for ServerPodcastEpisode, qword_1ED2A2D58, (uint64_t)&protocol conformance descriptor for ServerPodcastEpisode, "Failed to parse episode with error: %@");
}

uint64_t static MediaRequestResponseParser.parseTranscriptResponse(_:)(uint64_t a1)
{
  return sub_1A9212238(a1, type metadata accessor for ServerTranscript, &qword_1EEABAB40, (uint64_t)&protocol conformance descriptor for ServerTranscript, "Failed to parse transcript with error: %@");
}

uint64_t static MediaRequestResponseParser.parseCategoriesResponse(_:)(uint64_t a1)
{
  return sub_1A9212238(a1, (uint64_t (*)(uint64_t))type metadata accessor for ServerCategory, &qword_1EEABAB38, (uint64_t)&protocol conformance descriptor for ServerCategory, "Failed to parse category with error: %@");
}

uint64_t sub_1A9212238(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, char *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  id v16[2];
  uint64_t v17;

  v7 = _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0(a1);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v9 = v7;
    v17 = MEMORY[0x1E0DEE9D8];
    v10 = *(_QWORD *)(v7 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain();
      for (i = 0; i != v10; ++i)
      {
        v16[1] = *(id *)(v9 + 8 * i + 32);
        swift_bridgeObjectRetain();
        sub_1A9213B24(a2, a3, a4, a5, v16);
        v12 = swift_bridgeObjectRelease();
        if (v16[0])
        {
          MEMORY[0x1AF412004](v12);
          if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A93F834C();
          sub_1A93F8394();
          sub_1A93F8328();
        }
      }
      swift_bridgeObjectRelease();
      v8 = v17;
    }
    swift_bridgeObjectRelease();
  }
  return v8;
}

char *sub_1A9212390(unint64_t a1, void *a2, void **a3)
{
  char **v3;
  void *v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  void **v12;
  unint64_t v13;
  char **v14;
  void *v15;
  id v16;
  uint64_t v17;
  char **v18;
  uint64_t v19;
  char **v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  unint64_t *v30;
  uint64_t v32;
  uint64_t v33;
  void **v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _OWORD v38[2];
  id v39[5];

  v39[4] = *(id *)MEMORY[0x1E0C80C00];
  v7 = (void *)objc_opt_self();
  v8 = (void *)sub_1A93F7ED8();
  v39[0] = 0;
  v9 = objc_msgSend(v7, sel_dataWithJSONObject_options_error_, v8, 0, v39);

  v10 = v39[0];
  if (!v9)
  {
    v26 = v10;
    v27 = sub_1A93F7128();

    swift_willThrow();
    v28 = (void *)v27;
LABEL_26:

    return 0;
  }
  v33 = (uint64_t)a2;
  v34 = a3;
  v35 = sub_1A93F72B4();
  v36 = v11;

  v12 = 0;
  v13 = (unint64_t)&unk_1E54D4238;
  v14 = &selRef_setHour_;
  do
  {
    if ((unint64_t)v12 >= 3)
    {
      __break(1u);
      goto LABEL_29;
    }
    swift_bridgeObjectRetain();
    a2 = (void *)sub_1A93F7ED8();
    v15 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(a2, sel_valueForKeyPath_, v15);

    if (v16)
    {
      sub_1A93F8B44();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v38, 0, sizeof(v38));
    }
    sub_1A90A4E08((uint64_t)v38, (uint64_t)v39);
    if (v39[3])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC490);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v17 = v37;
        goto LABEL_13;
      }
    }
    else
    {
      sub_1A90A593C((uint64_t)v39);
    }
    v12 = (void **)((char *)v12 + 1);
    v13 += 16;
  }
  while (v12 != (void **)3);
  v17 = MEMORY[0x1E0DEE9D8];
LABEL_13:
  v12 = v34;
  v13 = sub_1A92119F0(v17, v33, v34);
  v14 = v3;
  swift_bridgeObjectRelease();
  a2 = (void *)v35;
  a1 = v36;
  if (qword_1ED2A3398 == -1)
    goto LABEL_14;
LABEL_29:
  swift_once();
LABEL_14:
  type metadata accessor for ServerPodcastStation();
  sub_1A9066CA8(&qword_1EEABAB50, (uint64_t (*)(uint64_t))type metadata accessor for ServerPodcastStation, (uint64_t)&protocol conformance descriptor for ServerPodcastStation);
  v18 = v14;
  sub_1A93F6D8C();
  if (v14)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v19 = sub_1A93F7698();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED2A3F08);
    v20 = v14;
    v21 = sub_1A93F7674();
    v22 = sub_1A93F879C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v23 = 138412290;
      v25 = (void *)sub_1A93F711C();
      v39[0] = v25;
      a1 = v36;
      sub_1A93F8AA8();
      *v24 = v25;
      a2 = (void *)v35;

      _os_log_impl(&dword_1A904E000, v21, v22, "Failed to parse container with error: %@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v24, -1, -1);
      MEMORY[0x1AF41411C](v23, -1, -1);
    }
    else
    {

    }
    sub_1A905F180((uint64_t)a2, a1);

    v28 = *v12;
    *v12 = v18;
    goto LABEL_26;
  }
  v29 = (char *)v39[0];
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v32 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v32 > 0)
      goto LABEL_23;
    goto LABEL_22;
  }
  if (*(uint64_t *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10) <= 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    v13 = 0;
  }
LABEL_23:
  v30 = (unint64_t *)&v29[OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_episodes];
  swift_beginAccess();
  *v30 = v13;
  swift_bridgeObjectRelease();
  sub_1A905F180((uint64_t)a2, a1);
  return v29;
}

char *sub_1A92128A4(unint64_t a1, void *a2, void **a3)
{
  char **v3;
  void *v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  void **v12;
  unint64_t v13;
  char **v14;
  void *v15;
  id v16;
  uint64_t v17;
  char **v18;
  uint64_t v19;
  char **v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  unint64_t *v30;
  uint64_t v32;
  uint64_t v33;
  void **v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _OWORD v38[2];
  id v39[5];

  v39[4] = *(id *)MEMORY[0x1E0C80C00];
  v7 = (void *)objc_opt_self();
  v8 = (void *)sub_1A93F7ED8();
  v39[0] = 0;
  v9 = objc_msgSend(v7, sel_dataWithJSONObject_options_error_, v8, 0, v39);

  v10 = v39[0];
  if (!v9)
  {
    v26 = v10;
    v27 = sub_1A93F7128();

    swift_willThrow();
    v28 = (void *)v27;
LABEL_26:

    return 0;
  }
  v33 = (uint64_t)a2;
  v34 = a3;
  v35 = sub_1A93F72B4();
  v36 = v11;

  v12 = 0;
  v13 = (unint64_t)&unk_1E54D4288;
  v14 = &selRef_setHour_;
  do
  {
    if ((unint64_t)v12 >= 3)
    {
      __break(1u);
      goto LABEL_29;
    }
    swift_bridgeObjectRetain();
    a2 = (void *)sub_1A93F7ED8();
    v15 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(a2, sel_valueForKeyPath_, v15);

    if (v16)
    {
      sub_1A93F8B44();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v38, 0, sizeof(v38));
    }
    sub_1A90A4E08((uint64_t)v38, (uint64_t)v39);
    if (v39[3])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC490);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v17 = v37;
        goto LABEL_13;
      }
    }
    else
    {
      sub_1A90A593C((uint64_t)v39);
    }
    v12 = (void **)((char *)v12 + 1);
    v13 += 16;
  }
  while (v12 != (void **)3);
  v17 = MEMORY[0x1E0DEE9D8];
LABEL_13:
  v12 = v34;
  v13 = sub_1A92119F0(v17, v33, v34);
  v14 = v3;
  swift_bridgeObjectRelease();
  a2 = (void *)v35;
  a1 = v36;
  if (qword_1ED2A3398 == -1)
    goto LABEL_14;
LABEL_29:
  swift_once();
LABEL_14:
  type metadata accessor for ServerPodcast();
  sub_1A9066CA8(qword_1ED2A2110, (uint64_t (*)(uint64_t))type metadata accessor for ServerPodcast, (uint64_t)&protocol conformance descriptor for ServerPodcastBase);
  v18 = v14;
  sub_1A93F6D8C();
  if (v14)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v19 = sub_1A93F7698();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED2A3F08);
    v20 = v14;
    v21 = sub_1A93F7674();
    v22 = sub_1A93F879C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v23 = 138412290;
      v25 = (void *)sub_1A93F711C();
      v39[0] = v25;
      a1 = v36;
      sub_1A93F8AA8();
      *v24 = v25;
      a2 = (void *)v35;

      _os_log_impl(&dword_1A904E000, v21, v22, "Failed to parse container with error: %@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v24, -1, -1);
      MEMORY[0x1AF41411C](v23, -1, -1);
    }
    else
    {

    }
    sub_1A905F180((uint64_t)a2, a1);

    v28 = *v12;
    *v12 = v18;
    goto LABEL_26;
  }
  v29 = (char *)v39[0];
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v32 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v32 > 0)
      goto LABEL_23;
    goto LABEL_22;
  }
  if (*(uint64_t *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10) <= 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    v13 = 0;
  }
LABEL_23:
  v30 = (unint64_t *)&v29[OBJC_IVAR___MTServerPodcast_episodes];
  swift_beginAccess();
  *v30 = v13;
  swift_bridgeObjectRelease();
  sub_1A905F180((uint64_t)a2, a1);
  return v29;
}

char *sub_1A9212DB8(uint64_t a1, void **a2)
{
  char **v2;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  unint64_t v10;
  void **v11;
  unint64_t v12;
  unint64_t v13;
  char **v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  char **v19;
  uint64_t v20;
  char **v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  unint64_t *v32;
  uint64_t v34;
  uint64_t v35;
  void **v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _OWORD v40[2];
  id v41[5];

  v41[4] = *(id *)MEMORY[0x1E0C80C00];
  v5 = type metadata accessor for MediaRequestResponseParser();
  type metadata accessor for ServerPodcast();
  v6 = (void *)objc_opt_self();
  v7 = (void *)sub_1A93F7ED8();
  v41[0] = 0;
  v8 = objc_msgSend(v6, sel_dataWithJSONObject_options_error_, v7, 0, v41);

  v9 = v41[0];
  if (!v8)
  {
    v28 = v9;
    v29 = sub_1A93F7128();

    swift_willThrow();
    v30 = (void *)v29;
LABEL_26:

    return 0;
  }
  v35 = v5;
  v36 = a2;
  v37 = sub_1A93F72B4();
  v38 = v10;

  v11 = 0;
  v12 = (unint64_t)&unk_1E54D42D8;
  v13 = MEMORY[0x1E0DEC1A0];
  v14 = &selRef_setHour_;
  do
  {
    if ((unint64_t)v11 >= 3)
    {
      __break(1u);
      goto LABEL_29;
    }
    swift_bridgeObjectRetain();
    v15 = (void *)sub_1A93F7ED8();
    v16 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v15, sel_valueForKeyPath_, v16);

    if (v17)
    {
      sub_1A93F8B44();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v40, 0, sizeof(v40));
    }
    sub_1A90A4E08((uint64_t)v40, (uint64_t)v41);
    if (v41[3])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC490);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v18 = v39;
        goto LABEL_13;
      }
    }
    else
    {
      sub_1A90A593C((uint64_t)v41);
    }
    v11 = (void **)((char *)v11 + 1);
    v12 += 16;
  }
  while (v11 != (void **)3);
  v18 = MEMORY[0x1E0DEE9D8];
LABEL_13:
  v11 = v36;
  v12 = sub_1A92119F0(v18, v35, v36);
  v14 = v2;
  swift_bridgeObjectRelease();
  a1 = v37;
  v13 = v38;
  if (qword_1ED2A3398 == -1)
    goto LABEL_14;
LABEL_29:
  swift_once();
LABEL_14:
  sub_1A9066CA8(qword_1ED2A2110, (uint64_t (*)(uint64_t))type metadata accessor for ServerPodcast, (uint64_t)&protocol conformance descriptor for ServerPodcastBase);
  v19 = v14;
  sub_1A93F6D8C();
  if (v14)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v20 = sub_1A93F7698();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED2A3F08);
    v21 = v14;
    v22 = sub_1A93F7674();
    v23 = sub_1A93F879C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138412290;
      v26 = (void *)sub_1A93F711C();
      v41[0] = v26;
      a1 = v37;
      sub_1A93F8AA8();
      *v25 = v26;

      _os_log_impl(&dword_1A904E000, v22, v23, "Failed to parse container with error: %@", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      v27 = v25;
      v13 = v38;
      MEMORY[0x1AF41411C](v27, -1, -1);
      MEMORY[0x1AF41411C](v24, -1, -1);
    }
    else
    {

    }
    sub_1A905F180(a1, v13);

    v30 = *v11;
    *v11 = v19;
    goto LABEL_26;
  }
  v31 = (char *)v41[0];
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v34 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v34 > 0)
      goto LABEL_23;
    goto LABEL_22;
  }
  if (*(uint64_t *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10) <= 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    v12 = 0;
  }
LABEL_23:
  v32 = (unint64_t *)&v31[OBJC_IVAR___MTServerPodcast_episodes];
  swift_beginAccess();
  *v32 = v12;
  swift_bridgeObjectRelease();
  sub_1A905F180(a1, v13);
  return v31;
}

void sub_1A92132CC(void ***a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  void *v6;
  void **v10;
  void *v11;
  unint64_t v12;
  void *v13;
  id v14;
  id v15;
  unint64_t v16;
  char *v17;
  char **v18;
  id v19;
  uint64_t v20;
  char **v21;
  uint64_t v22;
  char **v23;
  char **v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _QWORD *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  void **v36;
  _QWORD *v37;
  char **v39;
  uint64_t v41;
  _OWORD v42[2];
  id v43[6];

  v43[4] = *(id *)MEMORY[0x1E0C80C00];
  v10 = *a1;
  v11 = (void *)objc_opt_self();
  v12 = MEMORY[0x1E0DEE9B8] + 8;
  v13 = (void *)sub_1A93F7ED8();
  v43[0] = 0;
  v14 = objc_msgSend(v11, sel_dataWithJSONObject_options_error_, v13, 0, v43);

  v15 = v43[0];
  if (v14)
  {
    v36 = (void **)a3;
    v37 = a6;
    v34 = sub_1A93F72B4();
    v35 = v16;

    a6 = 0;
    v17 = (char *)&unk_1E54D71F8;
    v18 = &selRef_setHour_;
    do
    {
      if ((unint64_t)a6 >= 3)
      {
        __break(1u);
        goto LABEL_29;
      }
      swift_bridgeObjectRetain();
      a3 = sub_1A93F7ED8();
      v6 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      v19 = objc_msgSend((id)a3, sel_valueForKeyPath_, v6);

      if (v19)
      {
        sub_1A93F8B44();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v42, 0, sizeof(v42));
      }
      sub_1A90A4E08((uint64_t)v42, (uint64_t)v43);
      if (v43[3])
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC490);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v20 = v41;
          goto LABEL_13;
        }
      }
      else
      {
        sub_1A90A593C((uint64_t)v43);
      }
      a6 = (_QWORD *)((char *)a6 + 1);
      v17 += 16;
    }
    while (a6 != (_QWORD *)3);
    v20 = MEMORY[0x1E0DEE9D8];
LABEL_13:
    v10 = v36;
    a3 = sub_1A92119F0(v20, a2, v36);
    v18 = v39;
    swift_bridgeObjectRelease();
    a6 = v37;
    v6 = (void *)v34;
    v12 = v35;
    if (qword_1ED2A3398 == -1)
      goto LABEL_14;
LABEL_29:
    swift_once();
LABEL_14:
    v21 = v18;
    sub_1A93F6D8C();
    if (v18)
    {
      swift_bridgeObjectRelease();
      if (qword_1ED2A3F28 != -1)
        swift_once();
      v22 = sub_1A93F7698();
      __swift_project_value_buffer(v22, (uint64_t)qword_1ED2A3F08);
      v23 = v18;
      v24 = v18;
      v25 = sub_1A93F7674();
      v26 = sub_1A93F879C();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc();
        v28 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v27 = 138412290;
        v29 = (void *)sub_1A93F711C();
        v43[0] = v29;
        a6 = v37;
        sub_1A93F8AA8();
        *v28 = v29;
        v10 = v36;

        _os_log_impl(&dword_1A904E000, v25, v26, "Failed to parse container with error: %@", v27, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v28, -1, -1);
        MEMORY[0x1AF41411C](v27, -1, -1);
        sub_1A905F180((uint64_t)v6, v35);
      }
      else
      {
        sub_1A905F180((uint64_t)v6, v12);

      }
      v33 = *v10;
      *v10 = v21;

      v14 = 0;
    }
    else
    {
      v14 = v43[0];
      if (a3 >> 62)
      {
        swift_bridgeObjectRetain();
        v32 = sub_1A93F8E5C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v32 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v32 <= 0)
      {
        swift_bridgeObjectRelease();
        a3 = 0;
      }
      (*(void (**)(unint64_t, uint64_t))(a5 + 16))(a3, a4);
      sub_1A905F180((uint64_t)v6, v12);
    }
  }
  else
  {
    v30 = v15;
    v31 = (void *)sub_1A93F7128();

    swift_willThrow();
  }
  *a6 = v14;
}

void sub_1A92137C8(void **a1@<X2>, id *a2@<X8>)
{
  void *v2;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  void *v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  void **v25;
  id v26[2];

  v26[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1A93F7ED8();
  v26[0] = 0;
  v7 = objc_msgSend(v5, sel_dataWithJSONObject_options_error_, v6, 0, v26);

  v8 = v26[0];
  if (v7)
  {
    v9 = sub_1A93F72B4();
    v11 = v10;

    if (qword_1ED2A3398 != -1)
      swift_once();
    type metadata accessor for ServerPodcastEpisode();
    sub_1A9066CA8(qword_1ED2A2D58, (uint64_t (*)(uint64_t))type metadata accessor for ServerPodcastEpisode, (uint64_t)&protocol conformance descriptor for ServerPodcastEpisode);
    sub_1A93F6D8C();
    if (!v2)
    {
      sub_1A905F180(v9, v11);
      *a2 = v26[0];
      return;
    }
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v12 = sub_1A93F7698();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A3F08);
    v13 = v2;
    v14 = v2;
    v15 = sub_1A93F7674();
    v16 = sub_1A93F879C();
    if (os_log_type_enabled(v15, v16))
    {
      v25 = a1;
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v17 = 138412290;
      v24 = v11;
      v19 = (void *)sub_1A93F711C();
      v26[0] = v19;
      sub_1A93F8AA8();
      *v18 = v19;

      _os_log_impl(&dword_1A904E000, v15, v16, "Failed to parse episode with error: %@", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v18, -1, -1);
      v20 = v17;
      a1 = v25;
      MEMORY[0x1AF41411C](v20, -1, -1);
      sub_1A905F180(v9, v24);
    }
    else
    {
      sub_1A905F180(v9, v11);

    }
    v23 = *a1;
    *a1 = v2;
  }
  else
  {
    v21 = v8;
    v22 = sub_1A93F7128();

    swift_willThrow();
    v23 = (void *)v22;
  }

  *a2 = 0;
}

void sub_1A9213B24(uint64_t (*a1)(uint64_t)@<X2>, unint64_t *a2@<X3>, uint64_t a3@<X4>, char *a4@<X5>, id *a5@<X8>)
{
  void *v5;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  void *v25;
  void *v26;
  void *v27;
  unint64_t v28;
  char *format;
  id v30[2];

  v30[1] = *(id *)MEMORY[0x1E0C80C00];
  v11 = (void *)objc_opt_self();
  v12 = (void *)sub_1A93F7ED8();
  v30[0] = 0;
  v13 = objc_msgSend(v11, sel_dataWithJSONObject_options_error_, v12, 0, v30);

  v14 = v30[0];
  if (v13)
  {
    format = a4;
    v15 = sub_1A93F72B4();
    v17 = v16;

    if (qword_1ED2A3398 != -1)
      swift_once();
    a1(0);
    sub_1A9066CA8(a2, a1, a3);
    sub_1A93F6D8C();
    if (!v5)
    {
      sub_1A905F180(v15, v17);
      *a5 = v30[0];
      return;
    }
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v18 = sub_1A93F7698();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED2A3F08);
    v19 = v5;
    v20 = v5;
    v21 = sub_1A93F7674();
    v22 = sub_1A93F879C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v23 = 138412290;
      v28 = v17;
      v25 = (void *)sub_1A93F711C();
      v30[0] = v25;
      sub_1A93F8AA8();
      *v24 = v25;

      _os_log_impl(&dword_1A904E000, v21, v22, format, v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v24, -1, -1);
      MEMORY[0x1AF41411C](v23, -1, -1);
      sub_1A905F180(v15, v28);

    }
    else
    {
      sub_1A905F180(v15, v17);

    }
  }
  else
  {
    v26 = v14;
    v27 = (void *)sub_1A93F7128();

    swift_willThrow();
  }
  *a5 = 0;
}

uint64_t MediaRequestResponseParser.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MediaRequestResponseParser.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t v5;
  _BYTE v6[40];
  __int128 v7;
  __int128 v8;

  *(_QWORD *)&v7 = 1635017060;
  *((_QWORD *)&v7 + 1) = 0xE400000000000000;
  sub_1A93F8C1C();
  if (*(_QWORD *)(a1 + 16) && (v2 = sub_1A90A597C((uint64_t)v6), (v3 & 1) != 0))
  {
    sub_1A906443C(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v7);
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
  }
  sub_1A90A5908((uint64_t)v6);
  if (*((_QWORD *)&v8 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC490);
    if (swift_dynamicCast())
      return v5;
    else
      return 0;
  }
  else
  {
    sub_1A90A593C((uint64_t)&v7);
    return 0;
  }
}

uint64_t _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t v5;
  _BYTE v6[40];
  __int128 v7;
  __int128 v8;

  *(_QWORD *)&v7 = 1954047342;
  *((_QWORD *)&v7 + 1) = 0xE400000000000000;
  sub_1A93F8C1C();
  if (*(_QWORD *)(a1 + 16) && (v2 = sub_1A90A597C((uint64_t)v6), (v3 & 1) != 0))
  {
    sub_1A906443C(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v7);
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
  }
  sub_1A90A5908((uint64_t)v6);
  if (*((_QWORD *)&v8 + 1))
  {
    if (swift_dynamicCast())
      return v5;
    else
      return 0;
  }
  else
  {
    sub_1A90A593C((uint64_t)&v7);
    return 0;
  }
}

void sub_1A921404C(void ***a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1A92132CC(a1, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_1A921406C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2A9328;
  if (!qword_1ED2A9328)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2AC490);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2A9328);
  }
  return result;
}

unint64_t sub_1A92140BC()
{
  unint64_t result;

  result = qword_1EEABAB28;
  if (!qword_1EEABAB28)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequestResponseParser.MediaRequestResponseParseError, &type metadata for MediaRequestResponseParser.MediaRequestResponseParseError);
    atomic_store(result, (unint64_t *)&qword_1EEABAB28);
  }
  return result;
}

uint64_t type metadata accessor for MediaRequestResponseParser()
{
  return objc_opt_self();
}

uint64_t method lookup function for MediaRequestResponseParser()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for MediaRequestResponseParser.MediaRequestResponseParseError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A9214178 + 4 * byte_1A941205B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A92141AC + 4 * byte_1A9412056[v4]))();
}

uint64_t sub_1A92141AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92141B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92141BCLL);
  return result;
}

uint64_t sub_1A92141C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92141D0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A92141D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92141DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaRequestResponseParser.MediaRequestResponseParseError()
{
  return &type metadata for MediaRequestResponseParser.MediaRequestResponseParseError;
}

unint64_t sub_1A92141F8()
{
  unint64_t result;

  result = qword_1EEABAB30;
  if (!qword_1EEABAB30)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequestResponseParser.MediaRequestResponseParseError, &type metadata for MediaRequestResponseParser.MediaRequestResponseParseError);
    atomic_store(result, (unint64_t *)&qword_1EEABAB30);
  }
  return result;
}

uint64_t Trace.emit(event:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(a5 + 16))(a1, a2, a3, 0, 0, a4, a5);
}

uint64_t Traceable.traced(on:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25[5];

  v23[1] = a4;
  v24 = a3;
  v8 = sub_1A93F73E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F7698();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(a2 - 8) + 16))(a4, v4, a2, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
  LOBYTE(a1) = sub_1A93F8784();
  sub_1A93F73D4();
  v17 = sub_1A93F73A4();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v20 = type metadata accessor for LoggerTrace(0);
  v25[3] = v20;
  v25[4] = (uint64_t)&protocol witness table for LoggerTrace;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
  *boxed_opaque_existential_1 = v17;
  boxed_opaque_existential_1[1] = v19;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)boxed_opaque_existential_1 + *(int *)(v20 + 20), v16, v12);
  *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v20 + 24)) = a1;
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v24 + 16))(v25, a2);
}

uint64_t dispatch thunk of Traceable.trace.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Traceable.trace.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of Traceable.trace.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t ServerCategory.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerCategory.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerCategory.attributes.getter()
{
  return swift_retain();
}

_QWORD *ServerCategory.__allocating_init(id:type:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = a5;
  return result;
}

_QWORD *ServerCategory.init(id:type:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  return v5;
}

uint64_t sub_1A9214530()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1701869940;
  if (*v0 != 1)
    v1 = 0x7475626972747461;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_1A921457C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9215CD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A92145A0()
{
  sub_1A92147C0();
  return sub_1A93F945C();
}

uint64_t sub_1A92145C8()
{
  sub_1A92147C0();
  return sub_1A93F9468();
}

uint64_t ServerCategory.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t ServerCategory.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t ServerCategory.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAB58);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A92147C0();
  sub_1A93F93D8();
  v14 = 0;
  sub_1A93F9000();
  if (!v2)
  {
    v13 = 1;
    sub_1A93F9000();
    v12 = *(_QWORD *)(v3 + 48);
    v11[15] = 2;
    type metadata accessor for ServerCategoryAttributes();
    sub_1A9066CE8(&qword_1EEABAB68, v9, (uint64_t (*)(uint64_t))type metadata accessor for ServerCategoryAttributes, (uint64_t)&protocol conformance descriptor for ServerCategoryAttributes);
    sub_1A93F9030();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A92147C0()
{
  unint64_t result;

  result = qword_1EEABAB60;
  if (!qword_1EEABAB60)
  {
    result = MEMORY[0x1AF414014](&unk_1A94126E4, &type metadata for ServerCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABAB60);
  }
  return result;
}

uint64_t type metadata accessor for ServerCategoryAttributes()
{
  return objc_opt_self();
}

uint64_t ServerCategory.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ServerCategory.init(from:)(a1);
  return v2;
}

_QWORD *ServerCategory.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  char v14;
  char v15;
  char v16;

  v13[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAB70);
  v4 = *(_QWORD *)(v13[0] - 8);
  MEMORY[0x1E0C80A78](v13[0]);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A92147C0();
  sub_1A93F93C0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v7 = v4;
    v16 = 0;
    v8 = v13[0];
    v1[2] = sub_1A93F8F4C();
    v1[3] = v9;
    v15 = 1;
    v1[4] = sub_1A93F8F4C();
    v1[5] = v10;
    type metadata accessor for ServerCategoryAttributes();
    v14 = 2;
    sub_1A9066CE8(&qword_1EEABAB78, v11, (uint64_t (*)(uint64_t))type metadata accessor for ServerCategoryAttributes, (uint64_t)&protocol conformance descriptor for ServerCategoryAttributes);
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v8);
    v1[6] = v13[1];
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_1A9214A68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A921568C(a1, (uint64_t (*)(uint64_t))ServerCategory.init(from:), a2);
}

uint64_t sub_1A9214A88(_QWORD *a1)
{
  return ServerCategory.encode(to:)(a1);
}

uint64_t ServerCategoryAttributes.url.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerCategoryAttributes.editorialArtwork.getter()
{
  return swift_retain();
}

uint64_t ServerCategoryAttributes.color.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *ServerCategoryAttributes.__allocating_init(name:url:editorialArtwork:color:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = a5;
  result[7] = a6;
  result[8] = a7;
  return result;
}

_QWORD *ServerCategoryAttributes.init(name:url:editorialArtwork:color:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  v7[5] = a4;
  v7[6] = a5;
  v7[7] = a6;
  v7[8] = a7;
  return v7;
}

uint64_t sub_1A9214B8C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9214BB4 + 4 * byte_1A94121F0[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1A9214BB4()
{
  return 7107189;
}

unint64_t sub_1A9214BC4()
{
  return 0xD000000000000010;
}

uint64_t sub_1A9214BE0()
{
  return 0x726F6C6F63;
}

uint64_t sub_1A9214BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9215E08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9214C18()
{
  sub_1A9214E70();
  return sub_1A93F945C();
}

uint64_t sub_1A9214C40()
{
  sub_1A9214E70();
  return sub_1A93F9468();
}

uint64_t ServerCategoryAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ServerCategoryAttributes.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ServerCategoryAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAB80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9214E70();
  sub_1A93F93D8();
  v14 = 0;
  sub_1A93F9000();
  if (!v2)
  {
    v13 = 1;
    sub_1A93F8FB8();
    v12 = *(_QWORD *)(v3 + 48);
    v11[15] = 2;
    type metadata accessor for ServerCategoryBrandLogoArtwork();
    sub_1A9066CE8(&qword_1EEABAB90, v9, (uint64_t (*)(uint64_t))type metadata accessor for ServerCategoryBrandLogoArtwork, (uint64_t)&protocol conformance descriptor for ServerCategoryBrandLogoArtwork);
    sub_1A93F8FE8();
    v11[14] = 3;
    sub_1A93F8FB8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A9214E70()
{
  unint64_t result;

  result = qword_1EEABAB88;
  if (!qword_1EEABAB88)
  {
    result = MEMORY[0x1AF414014](&unk_1A9412694, &type metadata for ServerCategoryAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABAB88);
  }
  return result;
}

uint64_t type metadata accessor for ServerCategoryBrandLogoArtwork()
{
  return objc_opt_self();
}

uint64_t ServerCategoryAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ServerCategoryAttributes.init(from:)(a1);
  return v2;
}

_QWORD *ServerCategoryAttributes.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  char v18;
  char v19;
  char v20;
  char v21;

  v3 = v1;
  v17[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAB98);
  v5 = *(_QWORD *)(v17[0] - 8);
  MEMORY[0x1E0C80A78](v17[0]);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9214E70();
  sub_1A93F93C0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v8 = v5;
    v21 = 0;
    v9 = v17[0];
    v1[2] = sub_1A93F8F4C();
    v1[3] = v10;
    v20 = 1;
    v1[4] = sub_1A93F8F04();
    v1[5] = v11;
    type metadata accessor for ServerCategoryBrandLogoArtwork();
    v19 = 2;
    sub_1A9066CE8(&qword_1EEABABA0, v12, (uint64_t (*)(uint64_t))type metadata accessor for ServerCategoryBrandLogoArtwork, (uint64_t)&protocol conformance descriptor for ServerCategoryBrandLogoArtwork);
    sub_1A93F8F34();
    v1[6] = v17[1];
    v18 = 3;
    v14 = sub_1A93F8F04();
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    v3[7] = v14;
    v3[8] = v16;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1A9215180@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A921568C(a1, (uint64_t (*)(uint64_t))ServerCategoryAttributes.init(from:), a2);
}

uint64_t sub_1A92151A0(_QWORD *a1)
{
  return ServerCategoryAttributes.encode(to:)(a1);
}

uint64_t ServerCategoryBrandLogoArtwork.brandLogo.getter()
{
  return swift_retain();
}

uint64_t ServerCategoryBrandLogoArtwork.__allocating_init(brandLogo:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t ServerCategoryBrandLogoArtwork.init(brandLogo:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1A9215204()
{
  return 0x676F4C646E617262;
}

uint64_t sub_1A9215220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x676F4C646E617262 && a2 == 0xE90000000000006FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A93F90C0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A92152C0()
{
  sub_1A9215470();
  return sub_1A93F945C();
}

uint64_t sub_1A92152E8()
{
  sub_1A9215470();
  return sub_1A93F9468();
}

uint64_t ServerCategoryBrandLogoArtwork.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t ServerCategoryBrandLogoArtwork.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t ServerCategoryBrandLogoArtwork.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABABA8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9215470();
  sub_1A93F93D8();
  v9[1] = *(_QWORD *)(v2 + 16);
  type metadata accessor for ServerArtwork();
  sub_1A9066CE8(&qword_1ED2A1FF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
  sub_1A93F8FE8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A9215470()
{
  unint64_t result;

  result = qword_1EEABABB0;
  if (!qword_1EEABABB0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9412644, &type metadata for ServerCategoryBrandLogoArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABABB0);
  }
  return result;
}

uint64_t ServerCategoryBrandLogoArtwork.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ServerCategoryBrandLogoArtwork.init(from:)(a1);
  return v2;
}

uint64_t ServerCategoryBrandLogoArtwork.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABABB8);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9215470();
  sub_1A93F93C0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for ServerArtwork();
    sub_1A9066CE8(&qword_1ED2A2000, 255, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
    sub_1A93F8F34();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v4);
    *(_QWORD *)(v1 + 16) = v10;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_1A921566C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A921568C(a1, (uint64_t (*)(uint64_t))ServerCategoryBrandLogoArtwork.init(from:), a2);
}

uint64_t sub_1A921568C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X4>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t result;

  v7 = swift_allocObject();
  result = a2(a1);
  if (!v3)
    *a3 = v7;
  return result;
}

uint64_t sub_1A92156EC(_QWORD *a1)
{
  return ServerCategoryBrandLogoArtwork.encode(to:)(a1);
}

uint64_t ServerCategory.adamID.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  v3 = sub_1A931883C(v1, v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t type metadata accessor for ServerCategory()
{
  return objc_opt_self();
}

uint64_t method lookup function for ServerCategory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ServerCategory.__allocating_init(id:type:attributes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ServerCategory.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for ServerCategoryAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ServerCategoryAttributes.__allocating_init(name:url:editorialArtwork:color:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ServerCategoryAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t method lookup function for ServerCategoryBrandLogoArtwork()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ServerCategoryBrandLogoArtwork.__allocating_init(brandLogo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ServerCategoryBrandLogoArtwork.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t storeEnumTagSinglePayload for ServerCategoryBrandLogoArtwork.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A9215854 + 4 * byte_1A94121F4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A9215874 + 4 * byte_1A94121F9[v4]))();
}

_BYTE *sub_1A9215854(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A9215874(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A921587C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9215884(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A921588C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9215894(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ServerCategoryBrandLogoArtwork.CodingKeys()
{
  return &type metadata for ServerCategoryBrandLogoArtwork.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ServerCategoryAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A92158FC + 4 * byte_1A9412203[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A9215930 + 4 * byte_1A94121FE[v4]))();
}

uint64_t sub_1A9215930(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9215938(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9215940);
  return result;
}

uint64_t sub_1A921594C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9215954);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A9215958(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9215960(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerCategoryAttributes.CodingKeys()
{
  return &type metadata for ServerCategoryAttributes.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ServerCategory.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A92159C8 + 4 * byte_1A941220D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A92159FC + 4 * byte_1A9412208[v4]))();
}

uint64_t sub_1A92159FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9215A04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9215A0CLL);
  return result;
}

uint64_t sub_1A9215A18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9215A20);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A9215A24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9215A2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerCategory.CodingKeys()
{
  return &type metadata for ServerCategory.CodingKeys;
}

unint64_t sub_1A9215A4C()
{
  unint64_t result;

  result = qword_1EEABADE0;
  if (!qword_1EEABADE0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94124AC, &type metadata for ServerCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABADE0);
  }
  return result;
}

unint64_t sub_1A9215A94()
{
  unint64_t result;

  result = qword_1EEABADE8;
  if (!qword_1EEABADE8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9412564, &type metadata for ServerCategoryAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABADE8);
  }
  return result;
}

unint64_t sub_1A9215ADC()
{
  unint64_t result;

  result = qword_1EEABADF0;
  if (!qword_1EEABADF0)
  {
    result = MEMORY[0x1AF414014](&unk_1A941261C, &type metadata for ServerCategoryBrandLogoArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABADF0);
  }
  return result;
}

unint64_t sub_1A9215B24()
{
  unint64_t result;

  result = qword_1EEABADF8;
  if (!qword_1EEABADF8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941258C, &type metadata for ServerCategoryBrandLogoArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABADF8);
  }
  return result;
}

unint64_t sub_1A9215B6C()
{
  unint64_t result;

  result = qword_1EEABAE00;
  if (!qword_1EEABAE00)
  {
    result = MEMORY[0x1AF414014](&unk_1A94125B4, &type metadata for ServerCategoryBrandLogoArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABAE00);
  }
  return result;
}

unint64_t sub_1A9215BB4()
{
  unint64_t result;

  result = qword_1EEABAE08;
  if (!qword_1EEABAE08)
  {
    result = MEMORY[0x1AF414014](&unk_1A94124D4, &type metadata for ServerCategoryAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABAE08);
  }
  return result;
}

unint64_t sub_1A9215BFC()
{
  unint64_t result;

  result = qword_1EEABAE10;
  if (!qword_1EEABAE10)
  {
    result = MEMORY[0x1AF414014](&unk_1A94124FC, &type metadata for ServerCategoryAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABAE10);
  }
  return result;
}

unint64_t sub_1A9215C44()
{
  unint64_t result;

  result = qword_1EEABAE18;
  if (!qword_1EEABAE18)
  {
    result = MEMORY[0x1AF414014](&unk_1A941241C, &type metadata for ServerCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABAE18);
  }
  return result;
}

unint64_t sub_1A9215C8C()
{
  unint64_t result;

  result = qword_1EEABAE20;
  if (!qword_1EEABAE20)
  {
    result = MEMORY[0x1AF414014](&unk_1A9412444, &type metadata for ServerCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABAE20);
  }
  return result;
}

uint64_t sub_1A9215CD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A9215E08(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A9441C20 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t Array<A>.onReceive(perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1A9215FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_1A9216050;
  return sub_1A93F8EE0();
}

uint64_t sub_1A9216050()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A92160BC()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_1A92160CC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A9216104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;

  v7[14] = a6;
  v7[15] = a7;
  v7[12] = a4;
  v7[13] = a5;
  v7[10] = a2;
  v7[11] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC08);
  v7[16] = swift_task_alloc();
  v7[17] = swift_task_alloc();
  v9 = *(_QWORD *)(a6 - 8);
  v7[18] = v9;
  v7[19] = *(_QWORD *)(v9 + 64);
  v7[20] = swift_task_alloc();
  v7[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A92161AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(unint64_t, uint64_t, _QWORD);
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  char *v39;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1AF4120D0](v2, v1))
  {
LABEL_18:
    swift_bridgeObjectRelease();
    v39 = (char *)&dword_1EEAC0908 + dword_1EEAC0908;
    v30 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v30;
    *v30 = v0;
    v30[1] = sub_1A9216548;
    return ((uint64_t (*)(_QWORD, _QWORD))v39)(0, 0);
  }
  v3 = 0;
  v4 = *(_QWORD *)(v0 + 144);
  v31 = *(_QWORD *)(v0 + 152);
  v32 = v4;
  while (1)
  {
    v8 = sub_1A93F8388();
    sub_1A93F8340();
    if ((v8 & 1) != 0)
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(v4 + 16))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 88)+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v3, *(_QWORD *)(v0 + 112));
      v9 = v3 + 1;
      if (__OFADD__(v3, 1))
        goto LABEL_17;
      goto LABEL_6;
    }
    result = sub_1A93F8CB8();
    if (v31 != 8)
      break;
    v27 = result;
    v28 = *(_QWORD *)(v0 + 168);
    v29 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 72) = v27;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v28, v0 + 72, v29);
    swift_unknownObjectRelease();
    v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_6:
    v37 = v9;
    v10 = *(_QWORD *)(v0 + 160);
    v11 = *(_QWORD *)(v0 + 168);
    v12 = *(_QWORD *)(v0 + 136);
    v35 = *(_QWORD *)(v0 + 104);
    v36 = *(_QWORD *)(v0 + 128);
    v33 = v12;
    v34 = *(_QWORD *)(v0 + 96);
    v13 = sub_1A93F84CC();
    v14 = *(_QWORD *)(v13 - 8);
    v38 = *(_OWORD *)(v0 + 112);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    v15 = *(void (**)(unint64_t, uint64_t, _QWORD))(v4 + 32);
    v15(v10, v11, v38);
    v16 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = 0;
    *(_QWORD *)(v17 + 24) = 0;
    *(_OWORD *)(v17 + 32) = v38;
    v15(v17 + v16, v10, v38);
    v18 = (_QWORD *)(v17 + ((v31 + 7 + v16) & 0xFFFFFFFFFFFFFFF8));
    *v18 = v34;
    v18[1] = v35;
    sub_1A92174D4(v33, v36);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v36, 1, v13);
    swift_retain();
    v20 = *(_QWORD *)(v0 + 128);
    if (v19 == 1)
    {
      sub_1A921751C(*(_QWORD *)(v0 + 128));
    }
    else
    {
      sub_1A93F84C0();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v20, v13);
    }
    v4 = v32;
    if (*(_QWORD *)(v17 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v21 = sub_1A93F840C();
      v23 = v22;
      swift_unknownObjectRelease();
    }
    else
    {
      v21 = 0;
      v23 = 0;
    }
    v24 = **(_QWORD **)(v0 + 80);
    v25 = v23 | v21;
    if (v23 | v21)
    {
      v25 = v0 + 16;
      *(_QWORD *)(v0 + 16) = 0;
      *(_QWORD *)(v0 + 24) = 0;
      *(_QWORD *)(v0 + 32) = v21;
      *(_QWORD *)(v0 + 40) = v23;
    }
    v5 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 88);
    *(_QWORD *)(v0 + 48) = 1;
    *(_QWORD *)(v0 + 56) = v25;
    *(_QWORD *)(v0 + 64) = v24;
    swift_task_create();
    swift_release();
    sub_1A921751C(v5);
    ++v3;
    if (v37 == MEMORY[0x1AF4120D0](v7, v6))
      goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9216548()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A92165C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[6];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_1A9164CD4;
  return sub_1A9216104(a1, a2, v8, v9, v10, v6, v7);
}

uint64_t sub_1A9216658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[7] = AssociatedTypeWitness;
  v8[8] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[9] = swift_task_alloc();
  v11 = swift_getAssociatedTypeWitness();
  v8[10] = v11;
  v8[11] = *(_QWORD *)(v11 - 8);
  v8[12] = swift_task_alloc();
  v8[13] = swift_task_alloc();
  sub_1A93F8A90();
  v8[14] = swift_task_alloc();
  v8[15] = *(_QWORD *)(a7 - 8);
  v8[16] = swift_task_alloc();
  v12 = swift_getAssociatedTypeWitness();
  v8[17] = v12;
  v8[18] = *(_QWORD *)(v12 - 8);
  v8[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A92167C0()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[15] + 16))(v0[16], v0[2], v0[5]);
  sub_1A93F858C();
  v0[20] = swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  v0[21] = v1;
  *v1 = v0;
  v1[1] = sub_1A9216884;
  return sub_1A93F8460();
}

uint64_t sub_1A9216884()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A92168E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v6)(_QWORD);

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
    goto LABEL_4;
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 72), v1, v2);
  if ((sub_1A93F8520() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
LABEL_4:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = (uint64_t (*)(_QWORD))(**(int **)(v0 + 24) + *(_QWORD *)(v0 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v5;
  *v5 = v0;
  v5[1] = sub_1A9216A20;
  return v6(*(_QWORD *)(v0 + 72));
}

uint64_t sub_1A9216A20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A9216A84()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD))(v0[8] + 8))(v0[9], v0[7]);
  v0[20] = swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  v0[21] = v1;
  *v1 = v0;
  v1[1] = sub_1A9216884;
  return sub_1A93F8460();
}

uint64_t sub_1A9216B1C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 88) + 32);
  v1(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
  swift_getAssociatedConformanceWitness();
  v2 = sub_1A93F9084();
  v3 = *(_QWORD *)(v0 + 96);
  if (v2)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 80);
    swift_allocError();
    v1(v5, v3, v4);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A9216C4C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AsyncSequence.onNext(perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[7] = AssociatedTypeWitness;
  v5[8] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[9] = swift_task_alloc();
  v8 = swift_getAssociatedTypeWitness();
  v5[10] = v8;
  v5[11] = *(_QWORD *)(v8 - 8);
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  sub_1A93F8A90();
  v5[14] = swift_task_alloc();
  v5[15] = *(_QWORD *)(a3 - 8);
  v5[16] = swift_task_alloc();
  v9 = swift_getAssociatedTypeWitness();
  v5[17] = v9;
  v5[18] = *(_QWORD *)(v9 - 8);
  v5[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A9216E54()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[15] + 16))(v0[16], v0[6], v0[4]);
  sub_1A93F858C();
  v0[20] = swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  v0[21] = v1;
  *v1 = v0;
  v1[1] = sub_1A9216F18;
  return sub_1A93F8460();
}

uint64_t sub_1A9216F18()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A9216F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v6)(_QWORD);

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
    goto LABEL_4;
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 72), v1, v2);
  if ((sub_1A93F8520() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
LABEL_4:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  v6 = (uint64_t (*)(_QWORD))(**(int **)(v0 + 16) + *(_QWORD *)(v0 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v5;
  *v5 = v0;
  v5[1] = sub_1A92170B8;
  return v6(*(_QWORD *)(v0 + 72));
}

uint64_t sub_1A92170B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A921711C()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD))(v0[8] + 8))(v0[9], v0[7]);
  v0[20] = swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  v0[21] = v1;
  *v1 = v0;
  v1[1] = sub_1A9216F18;
  return sub_1A93F8460();
}

uint64_t sub_1A92171B4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 88) + 32);
  v1(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
  swift_getAssociatedConformanceWitness();
  v2 = sub_1A93F9084();
  v3 = *(_QWORD *)(v0 + 96);
  if (v2)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 80);
    swift_allocError();
    v1(v5, v3, v4);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A92172E8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A9217390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A921741C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = v1[4];
  v5 = v1[5];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v1[2];
  v9 = v1[3];
  v10 = (uint64_t)v1 + v7;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1A921755C;
  return sub_1A9216658(a1, v8, v9, v10, v12, v13, v4, v5);
}

uint64_t sub_1A92174D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A921751C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AllPodcastStateRule.rules.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AllPodcastStateRule.init(rules:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t AllPodcastStateRule.canMove(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v3)
  {
    v6 = *(_QWORD *)v2 + 32;
    swift_bridgeObjectRetain();
    v7 = 1;
    do
    {
      sub_1A905DC3C(v6, (uint64_t)v11);
      if ((v7 & 1) != 0)
      {
        v8 = v12;
        v9 = v13;
        __swift_project_boxed_opaque_existential_1(v11, v12);
        v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, v8, v9);
      }
      else
      {
        v7 = 0;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
      v6 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 1;
  }
  return v7 & 1;
}

uint64_t AnyPodcastStateRule.canMove(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v3)
  {
    v6 = *(_QWORD *)v2 + 32;
    swift_bridgeObjectRetain();
    v7 = 0;
    do
    {
      sub_1A905DC3C(v6, (uint64_t)v11);
      if ((v7 & 1) != 0)
      {
        v7 = 1;
      }
      else
      {
        v8 = v12;
        v9 = v13;
        __swift_project_boxed_opaque_existential_1(v11, v12);
        v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, v8, v9);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
      v6 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t NonePodcastStateRule.canMove(from:to:)()
{
  return 0;
}

uint64_t dispatch thunk of PodcastStateRule.canMove(from:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_OWORD *, _OWORD *);
  __int128 v7;
  __int128 v8;
  _OWORD v10[2];
  uint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(uint64_t (**)(_OWORD *, _OWORD *))(a4 + 8);
  v7 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v7;
  v13 = v4;
  v8 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v8;
  v11 = v5;
  return v6(v12, v10) & 1;
}

ValueMetadata *type metadata accessor for AllPodcastStateRule()
{
  return &type metadata for AllPodcastStateRule;
}

ValueMetadata *type metadata accessor for AnyPodcastStateRule()
{
  return &type metadata for AnyPodcastStateRule;
}

ValueMetadata *type metadata accessor for NonePodcastStateRule()
{
  return &type metadata for NonePodcastStateRule;
}

ValueMetadata *type metadata accessor for AddedRules()
{
  return &type metadata for AddedRules;
}

ValueMetadata *type metadata accessor for AddingRules()
{
  return &type metadata for AddingRules;
}

ValueMetadata *type metadata accessor for AddableRules()
{
  return &type metadata for AddableRules;
}

BOOL sub_1A92177D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v6[16];
  uint64_t v7;
  _BYTE v8[16];
  uint64_t v9;
  _BYTE v10[16];
  uint64_t v11;

  sub_1A9094604(a1, (uint64_t)v6);
  v4 = v7;
  sub_1A9094604(a2, (uint64_t)v10);
  if (v11)
    return 0;
  sub_1A9094604(a1, (uint64_t)v8);
  return v9 == 2 || (v4 & 0xFFFFFFFFFFFFFFFDLL) != 0;
}

BOOL sub_1A921784C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v7[16];
  uint64_t v8;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE v11[16];
  uint64_t v12;

  sub_1A9094604(a1, (uint64_t)v7);
  v4 = v8;
  sub_1A9094604(a2, (uint64_t)v11);
  if (v12 != 1)
    return 0;
  sub_1A9094604(a1, (uint64_t)v9);
  return v10 == 2 || v4 == 0;
}

uint64_t CropCode.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A92178F0 + 4 * byte_1A9412870[*v0]))(25186, 0xE200000000000000);
}

uint64_t sub_1A92178F0()
{
  return 29299;
}

uint64_t sub_1A92178F8()
{
  return 29555;
}

uint64_t sub_1A9217900()
{
  return 28006;
}

uint64_t sub_1A9217908()
{
  return 28262;
}

uint64_t sub_1A9217910()
{
  return 28518;
}

uint64_t sub_1A9217918()
{
  return 24934;
}

uint64_t sub_1A9217920()
{
  return 30309;
}

uint64_t sub_1A9217928()
{
  return 30053;
}

uint64_t sub_1A9217930()
{
  return 29797;
}

uint64_t sub_1A9217938()
{
  return 0x4D7370552E545053;
}

PodcastsFoundation::CropCode_optional __swiftcall CropCode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::CropCode_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  v5 = 13;
  if (v3 < 0xD)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1A92179D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92F9AD0(*a1, *a2);
}

unint64_t sub_1A92179E4()
{
  unint64_t result;

  result = qword_1EEABAE58;
  if (!qword_1EEABAE58)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for CropCode, &type metadata for CropCode);
    atomic_store(result, (unint64_t *)&qword_1EEABAE58);
  }
  return result;
}

uint64_t sub_1A9217A28()
{
  sub_1A93F92DC();
  CropCode.rawValue.getter();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A9217A8C()
{
  CropCode.rawValue.getter();
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9217ADC()
{
  sub_1A93F92DC();
  CropCode.rawValue.getter();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::CropCode_optional sub_1A9217B3C(Swift::String *a1)
{
  return CropCode.init(rawValue:)(*a1);
}

uint64_t sub_1A9217B48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CropCode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A9217B6C()
{
  sub_1A918F320();
  return sub_1A93F82BC();
}

uint64_t sub_1A9217BC8()
{
  sub_1A918F320();
  return sub_1A93F828C();
}

uint64_t storeEnumTagSinglePayload for CropCode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1A9217C60 + 4 * byte_1A9412882[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1A9217C94 + 4 * byte_1A941287D[v4]))();
}

uint64_t sub_1A9217C94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9217C9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9217CA4);
  return result;
}

uint64_t sub_1A9217CB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9217CB8);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1A9217CBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9217CC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CropCode()
{
  return &type metadata for CropCode;
}

void DiskAssetCache<>.store(asset:at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;

  v34 = a3;
  v4 = *v3;
  v28 = sub_1A93F7D58();
  v31 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v27 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  MEMORY[0x1E0C80A78](v6);
  v26 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v4 + 80);
  v22 = *(_QWORD *)(v8 - 8);
  v23 = *(_QWORD *)(v22 + 64);
  v24 = v4;
  MEMORY[0x1E0C80A78](v9);
  v33 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v4 + 88);
  v17 = *(_QWORD *)(v20 - 8);
  v21 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v11);
  v18 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A93F726C();
  v32 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v13);
  v16 = v3;
  v25 = (char *)v15 - v14;
  v15[1] = v8;
  FileBasedAssetLocation.fileURL(in:)(v8, v34, (uint64_t)v15 - v14);
  InMemoryAssetCache.store(asset:at:)();
}

uint64_t sub_1A9217EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)(v7 - 224) = *(_QWORD *)(v0 + qword_1ED2ACE28);
  v8 = *(_QWORD *)(v7 - 296);
  v9 = v2;
  v10 = *(_QWORD *)(v7 - 272);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v6, v10);
  v11 = *(_QWORD *)(v7 - 256);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v11 + 16))(*(_QWORD *)(v7 - 160), v5, v4);
  v12 = *(_QWORD *)(v7 - 168);
  v13 = *(_QWORD *)(v7 - 280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v1, v3, v13);
  v14 = v8;
  v15 = (*(unsigned __int8 *)(v8 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = v11;
  v17 = (*(_QWORD *)(v7 - 264) + *(unsigned __int8 *)(v11 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v18 = (*(_QWORD *)(v7 - 248) + *(unsigned __int8 *)(v12 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v19 = swift_allocObject();
  v20 = *(_QWORD *)(v7 - 312);
  *(_QWORD *)(v19 + 16) = v20;
  *(_QWORD *)(v19 + 24) = v10;
  v21 = v10;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v7 - 152);
  v22 = *(_QWORD *)(v7 - 240);
  *(_OWORD *)(v19 + 40) = *(_OWORD *)(v22 + 96);
  v23 = *(_QWORD *)(v7 - 304);
  *(_QWORD *)(v19 + 56) = *(_QWORD *)(v22 + 112);
  *(_QWORD *)(v19 + 64) = v23;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 32))(v19 + v15, *(_QWORD *)(v7 - 288), v21);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 32))(v19 + v17, *(_QWORD *)(v7 - 160), v20);
  v24 = *(_QWORD *)(v7 - 168);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v24 + 32))(v19 + v18, v1, v13);
  *(_QWORD *)(v7 - 104) = sub_1A9219074;
  *(_QWORD *)(v7 - 96) = v19;
  *(_QWORD *)(v7 - 136) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v7 - 128) = 1107296256;
  *(_QWORD *)(v7 - 120) = sub_1A908A91C;
  *(_QWORD *)(v7 - 112) = &block_descriptor_28;
  v25 = _Block_copy((const void *)(v7 - 136));
  swift_retain();
  v26 = *(_QWORD *)(v7 - 216);
  sub_1A93F7D88();
  *(_QWORD *)(v7 - 144) = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D28();
  v28 = *(_QWORD *)(v7 - 208);
  v27 = *(_QWORD *)(v7 - 200);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v26, v28, v25);
  _Block_release(v25);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 176) + 8))(v28, v27);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 192) + 8))(v26, *(_QWORD *)(v7 - 184));
  (*(void (**)(_QWORD, uint64_t))(v24 + 8))(*(_QWORD *)(v7 - 232), v13);
  return swift_release();
}

uint64_t DiskAssetCache<>.invalidate(at:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  unsigned int v15;
  id v16;
  void *v17;
  unsigned int v18;
  uint64_t (*v19)(char *, uint64_t);
  id v20;
  uint64_t v21;
  char *v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  _BYTE *v40;
  os_log_t v42;
  uint64_t v43;
  void *v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52[2];

  v52[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v49 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v47 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1A93F726C();
  v7 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v48 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v42 - v10;
  v45 = (_QWORD *)a2;
  v46 = a1;
  FileBasedAssetLocation.fileURL(in:)(v5, a2, (uint64_t)&v42 - v10);
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_defaultManager);
  sub_1A93F7224();
  v14 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_fileExistsAtPath_, v14);

  if (!v15)
  {
    v19 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    goto LABEL_5;
  }
  v16 = objc_msgSend(v12, sel_defaultManager);
  v17 = (void *)sub_1A93F71A0();
  v52[0] = 0;
  v18 = objc_msgSend(v16, sel_removeItemAtURL_error_, v17, v52);

  if (v18)
  {
    v19 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v20 = v52[0];
LABEL_5:
    v21 = v50;
    v22 = v11;
    return v19(v22, v21);
  }
  v23 = v52[0];
  v24 = (_QWORD *)sub_1A93F7128();

  swift_willThrow();
  v25 = v50;
  if (qword_1ED2AD108 != -1)
    swift_once();
  v26 = sub_1A93F7698();
  __swift_project_value_buffer(v26, (uint64_t)qword_1ED2AD0F0);
  v27 = v49;
  v28 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v47, v46, v5);
  v29 = v48;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v48, v11, v25);
  v30 = sub_1A93F7674();
  v31 = sub_1A93F879C();
  LODWORD(v46) = v31;
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc();
    v43 = v7;
    v33 = v32;
    v44 = (void *)swift_slowAlloc();
    v52[0] = v44;
    *(_DWORD *)v33 = 136315394;
    v34 = (uint64_t (*)(uint64_t))v45[2];
    v42 = v30;
    v35 = v34(v5);
    v51 = sub_1A906436C(v35, v36, (uint64_t *)v52);
    v45 = v24;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v5);
    *(_WORD *)(v33 + 12) = 2080;
    sub_1A9066CA8(qword_1ED2ABE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v37 = sub_1A93F9060();
    v51 = sub_1A906436C(v37, v38, (uint64_t *)v52);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    v19 = *(uint64_t (**)(char *, uint64_t))(v43 + 8);
    v24 = v45;
    v19(v29, v25);
    v30 = v42;
    _os_log_impl(&dword_1A904E000, v42, (os_log_type_t)v46, "Error deleting file for key %s, url: %s", (uint8_t *)v33, 0x16u);
    v39 = v44;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v39, -1, -1);
    MEMORY[0x1AF41411C](v33, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v5);
    v19 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v19(v29, v25);
  }

  sub_1A9219100();
  swift_allocError();
  *v40 = 1;
  swift_willThrow();

  v22 = v11;
  v21 = v25;
  return v19(v22, v21);
}

BOOL static DiskAssetCacheError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DiskAssetCacheError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t DiskAssetCacheError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t DiskAssetCache.cacheDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_1ED2B8A10;
  v4 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t DiskAssetCache.cacheDeleteUrgency.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + qword_1ED2B8A18) | ((unint64_t)*(unsigned __int8 *)(v0 + qword_1ED2B8A18 + 4) << 32);
}

uint64_t DiskAssetCache.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_1ED2B8A10;
  v2 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return v0;
}

uint64_t DiskAssetCache.__deallocating_deinit()
{
  DiskAssetCache.deinit();
  return swift_deallocClassInstance();
}

void sub_1A9218768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1A92187E0(a2, a3, a4, a5);
  InMemoryAssetCache.invalidate(at:)();
}

void sub_1A92187B0()
{
  void *v0;

  if (v0)

}

uint64_t sub_1A92187E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  unsigned __int8 v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a4;
  v25 = a2;
  v23 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v21 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v22 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - v10;
  sub_1A93F71D0();
  v12 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1A93F7224();
  v13 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_fileExistsAtPath_, v13);

  if ((v14 & 1) == 0)
    NSFileManager.createDirectory(url:createIntermediates:)((uint64_t)v11, 1);
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v11, v6);

  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 32))(v23, v5);
  v17 = v16;
  sub_1A93F72C0();
  if (*(_BYTE *)(v19 + qword_1ED2B8A18 + 4) != 1)
    sub_1A92B7958(*(_DWORD *)(v19 + qword_1ED2B8A18));
  return sub_1A905F180(v15, v17);
}

void sub_1A9218E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  DiskAssetCache<>.store(asset:at:)(a1, a2, *(_QWORD *)(a4 - 8));
}

unint64_t sub_1A9218E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (unint64_t)DiskAssetCache<>.containsAsset(for:)(a1, *(_QWORD *)(a3 - 8)) & 1;
}

uint64_t sub_1A9218E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return DiskAssetCache<>.invalidate(at:)(a1, *(_QWORD *)(a3 - 8));
}

uint64_t sub_1A9218EB4(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

void sub_1A9218ED4(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_1A93F8AA8();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_1A9218F84()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(v0 + 24);
  v11 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v10 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v11 - 8);
  v4 = (v2 + *(_QWORD *)(v1 + 64) + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v2, v10);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v11);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);
  return swift_deallocObject();
}

void sub_1A9219074()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[4];
  v2 = *(_QWORD *)(v0[3] - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v0[2] - 8);
  v5 = (v3 + *(_QWORD *)(v2 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F726C() - 8) + 80);
  sub_1A9218768(v0[8], (uint64_t)v0 + v3, (uint64_t)v0 + v5, (uint64_t)v0 + ((v5 + v6 + v7) & ~v7), v1);
}

unint64_t sub_1A9219100()
{
  unint64_t result;

  result = qword_1EEABAE60;
  if (!qword_1EEABAE60)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for DiskAssetCacheError, &type metadata for DiskAssetCacheError);
    atomic_store(result, (unint64_t *)&qword_1EEABAE60);
  }
  return result;
}

unint64_t sub_1A9219148()
{
  unint64_t result;

  result = qword_1EEABAE68;
  if (!qword_1EEABAE68)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for DiskAssetCacheError, &type metadata for DiskAssetCacheError);
    atomic_store(result, (unint64_t *)&qword_1EEABAE68);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DiskAssetCacheError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A92191D8 + 4 * byte_1A94129D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A921920C + 4 * byte_1A94129D0[v4]))();
}

uint64_t sub_1A921920C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9219214(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A921921CLL);
  return result;
}

uint64_t sub_1A9219228(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9219230);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A9219234(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A921923C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiskAssetCacheError()
{
  return &type metadata for DiskAssetCacheError;
}

uint64_t method lookup function for DiskAssetCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DiskAssetCache.__allocating_init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v4 + 152))(a1, a2, a3, a4 | ((HIDWORD(a4) & 1) << 32));
}

uint64_t Publishers.PFCombineLatest5.a.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Publishers.PFCombineLatest5.b.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 100));
}

uint64_t Publishers.PFCombineLatest5.c.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 104));
}

uint64_t Publishers.PFCombineLatest5.d.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 40) - 8) + 16))(a2, v2 + *(int *)(a1 + 108));
}

uint64_t Publishers.PFCombineLatest5.e.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 48) - 8) + 16))(a2, v2 + *(int *)(a1 + 112));
}

void Publishers.PFCombineLatest5.init(_:_:_:_:_:)(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for Publishers.PFCombineLatest5();
}

uint64_t sub_1A92193A0(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v2 + a1[25], v7, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v2 + a1[26], v6, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v2 + a1[27], v3, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v2 + a1[28], v11, v1);
}

void type metadata accessor for Publishers.PFCombineLatest5()
{
  JUMPOUT(0x1AF413F6CLL);
}

uint64_t Publishers.PFCombineLatest5.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD v64[2];
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t TupleTypeMetadata;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t AssociatedTypeWitness;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v82 = a3;
  v83 = a4;
  v84 = a1;
  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v92 = *(_QWORD *)(a2 + 32);
  v93 = v5;
  v8 = *(_QWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 64);
  v95 = *(_QWORD *)(a2 + 72);
  AssociatedTypeWitness = v6;
  v87 = v6;
  v97 = v5;
  v98 = v92;
  v99 = v8;
  v100 = v7;
  v90 = v7;
  v91 = v8;
  v101 = v95;
  v94 = sub_1A93F76E0();
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v81 = MEMORY[0x1AF414014](MEMORY[0x1E0C956B8], v94);
  v11 = *(_QWORD *)(a2 + 80);
  v101 = *(_QWORD *)(a2 + 88);
  v74 = v11;
  v72 = v101;
  v89 = sub_1A93F76E0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v97 = swift_getAssociatedTypeWitness();
  v12 = v92;
  v98 = swift_getAssociatedTypeWitness();
  v86 = v9;
  v99 = swift_getAssociatedTypeWitness();
  v71 = v10;
  v100 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v13 = v89;
  v77 = MEMORY[0x1AF414014](MEMORY[0x1E0C956B8], v89);
  v79 = sub_1A93F77DC();
  v80 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v73 = (char *)v64 - v14;
  v70 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v15);
  v69 = (char *)v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v17);
  v66 = (char *)v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v19);
  v88 = (char *)v64 - v20;
  v65 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v93;
  v25 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v87;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v64 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)v64 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64[1] = v35;
  v37 = MEMORY[0x1E0C80A78](v36);
  v39 = (char *)v64 - v38;
  v41 = v76;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v40 + 16))(v32, v76, v29, v37);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v28, v41 + *(int *)(a2 + 100), v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v23, v41 + *(int *)(a2 + 104), v92);
  v68 = v39;
  v42 = v90;
  sub_1A93F76EC();
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v35, v39, v94);
  v43 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v66, v41 + *(int *)(a2 + 108), v86);
  v44 = v41 + *(int *)(a2 + 112);
  v45 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v69, v44, v71);
  v46 = v72;
  v47 = v43;
  v48 = v74;
  sub_1A93F76EC();
  v49 = (_QWORD *)swift_allocObject();
  v49[2] = v29;
  v49[3] = v24;
  v50 = v91;
  v51 = v92;
  v49[4] = v92;
  v49[5] = v47;
  v53 = v82;
  v52 = v83;
  v49[6] = v45;
  v49[7] = v53;
  v49[8] = v50;
  v49[9] = v42;
  v54 = v95;
  v49[10] = v95;
  v49[11] = v48;
  v49[12] = v46;
  v49[13] = v52;
  v55 = (_QWORD *)swift_allocObject();
  v56 = v93;
  v55[2] = v87;
  v55[3] = v56;
  v57 = v86;
  v55[4] = v51;
  v55[5] = v57;
  v55[6] = v45;
  v55[7] = v53;
  v58 = v90;
  v55[8] = v50;
  v55[9] = v58;
  v55[10] = v54;
  v55[11] = v48;
  v55[12] = v46;
  v55[13] = v52;
  v55[14] = sub_1A9219EC4;
  v55[15] = v49;
  v59 = v73;
  v61 = v88;
  v60 = v89;
  sub_1A93F7B84();
  swift_release();
  v62 = v79;
  sub_1A93F77D0();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v59, v62);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v61, v60);
  return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v68, v94);
}

uint64_t sub_1A9219A84(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, char *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t TupleTypeMetadata3;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void (*v39)(void);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(uint64_t, char *, uint64_t);
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  char *v76;
  void (*v77)(void);
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  void (*v94)(void);
  _QWORD *v95;
  char *v96;
  char *v97;
  _QWORD *v98;

  v80 = a8;
  v81 = a7;
  v82 = a1;
  v83 = a2;
  v90 = a21;
  v88 = a4;
  v89 = a15;
  v91 = a10;
  v92 = a5;
  v86 = a3;
  v87 = a9;
  v84 = a14;
  v85 = a20;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v23 = swift_getAssociatedTypeWitness();
  v24 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  MEMORY[0x1E0C80A78](TupleTypeMetadata3);
  v97 = (char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v96 = (char *)&v72 - v28;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v72 - v30;
  v33 = MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v72 - v34;
  v37 = (char *)&v72 + *(int *)(v36 + 48) - v34;
  v38 = (char *)&v72 + *(int *)(v36 + 64) - v34;
  v98 = *(_QWORD **)(AssociatedTypeWitness - 8);
  v39 = (void (*)(void))v98[2];
  v93 = v37;
  v94 = v39;
  v40 = AssociatedTypeWitness;
  ((void (*)(char *, uint64_t, uint64_t, double))v39)((char *)&v72 - v34, a6, AssociatedTypeWitness, v33);
  v95 = *(_QWORD **)(v23 - 8);
  v74 = (void (*)(char *, char *, uint64_t))v95[2];
  v75 = v23;
  v74(v37, v81, v23);
  v41 = v24;
  v79 = *(_QWORD *)(v24 - 8);
  v73 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
  v42 = v38;
  v76 = v38;
  v73(v38, v80, v24);
  v43 = &v31[*(int *)(TupleTypeMetadata3 + 48)];
  v80 = &v31[*(int *)(TupleTypeMetadata3 + 64)];
  v44 = v80;
  v81 = v43;
  ((void (*)(char *, char *, uint64_t))v94)(v31, v35, v40);
  v45 = v43;
  v46 = v93;
  v47 = v23;
  v48 = v74;
  v74(v45, v93, v47);
  v49 = v42;
  v50 = v41;
  v51 = v41;
  v52 = v73;
  v73(v44, v49, v50);
  v77 = (void (*)(void))v98[4];
  ((void (*)(char *, char *, uint64_t))v77)(v82, v31, v40);
  v53 = &v96[*(int *)(TupleTypeMetadata3 + 48)];
  v82 = &v96[*(int *)(TupleTypeMetadata3 + 64)];
  v54 = v82;
  v78 = v40;
  v94();
  v55 = v46;
  v56 = v75;
  v48(v53, v55, v75);
  v57 = v54;
  v58 = v76;
  v59 = v51;
  v52(v57, v76, v51);
  v60 = (void (*)(uint64_t, char *, uint64_t))v95[4];
  v60(v83, v53, v56);
  v61 = &v97[*(int *)(TupleTypeMetadata3 + 48)];
  v62 = &v97[*(int *)(TupleTypeMetadata3 + 64)];
  v77();
  v60((uint64_t)v61, v93, v56);
  v63 = v79;
  v64 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
  v64(v62, v58, v59);
  v64(v86, v62, v59);
  v65 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v88, v87, v65);
  v66 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v92, v91, v66);
  v67 = (void (*)(char *, uint64_t))v95[1];
  v67(v61, v56);
  v68 = (void (*)(char *, uint64_t))v98[1];
  v69 = v78;
  v68(v97, v78);
  v70 = *(void (**)(char *, uint64_t))(v63 + 8);
  v70(v82, v59);
  v68(v96, v69);
  v70(v80, v59);
  return ((uint64_t (*)(char *, uint64_t))v67)(v81, v56);
}

uint64_t sub_1A9219EB4()
{
  return swift_deallocObject();
}

uint64_t sub_1A9219EC4(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, char *a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;

  return sub_1A9219A84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, v10[2], v10[3], v10[4], v10[5], v10[6], v10[7], v10[8], v10[9], v10[10],
           v10[11],
           v10[12]);
}

uint64_t sub_1A9219F08@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t TupleTypeMetadata3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *TupleTypeMetadata;
  uint64_t v12;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v12 = a1 + *(int *)(TupleTypeMetadata3 + 48);
  v6 = a1 + *(int *)(TupleTypeMetadata3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v7 = swift_getTupleTypeMetadata3();
  v8 = a1 + *(int *)(v7 + 48);
  v9 = a1 + *(int *)(v7 + 64);
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + TupleTypeMetadata[12], a3 + TupleTypeMetadata[16], a3 + TupleTypeMetadata[20], a3 + TupleTypeMetadata[24], a1, v12, v6, v8, v9);
}

uint64_t sub_1A921A0CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A921A0F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A9219F08(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 112), a2);
}

uint64_t sub_1A921A138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.PFCombineLatest5.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t Publishers.PFCombineLatest6.b.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 116));
}

uint64_t Publishers.PFCombineLatest6.c.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 120));
}

uint64_t Publishers.PFCombineLatest6.d.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 40) - 8) + 16))(a2, v2 + *(int *)(a1 + 124));
}

uint64_t Publishers.PFCombineLatest6.e.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 48) - 8) + 16))(a2, v2 + *(int *)(a1 + 128));
}

uint64_t Publishers.PFCombineLatest6.f.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 56) - 8) + 16))(a2, v2 + *(int *)(a1 + 132));
}

void Publishers.PFCombineLatest6.init(_:_:_:_:_:_:)(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for Publishers.PFCombineLatest6();
}

uint64_t sub_1A921A270(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v3 + a1[29], v7, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3 + a1[30], v10, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + a1[31], v11, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3 + a1[32], v12, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v3 + a1[33], v13, v2);
}

void type metadata accessor for Publishers.PFCombineLatest6()
{
  JUMPOUT(0x1AF413F6CLL);
}

uint64_t Publishers.PFCombineLatest6.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _QWORD v72[2];
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t TupleTypeMetadata;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t AssociatedTypeWitness;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v92 = a4;
  v91 = a3;
  v93 = a1;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  v106 = *(_QWORD *)(a2 + 80);
  v107 = v7;
  AssociatedTypeWitness = v5;
  v109 = v6;
  v103 = v5;
  v110 = v7;
  v111 = v8;
  v97 = v8;
  v112 = v9;
  v113 = v106;
  v100 = v9;
  v10 = sub_1A93F76E0();
  v11 = *(_QWORD *)(a2 + 48);
  v101 = *(_QWORD *)(a2 + 40);
  v102 = v11;
  v104 = *(_QWORD *)(a2 + 56);
  v105 = v10;
  v90 = MEMORY[0x1AF414014](MEMORY[0x1E0C956B8], v10);
  v12 = *(_QWORD *)(a2 + 96);
  v13 = *(_QWORD *)(a2 + 104);
  v98 = *(_QWORD *)(a2 + 88);
  v114 = v12;
  v115 = v13;
  v82 = v12;
  v99 = v13;
  v96 = sub_1A93F76F8();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v109 = swift_getAssociatedTypeWitness();
  v14 = v107;
  v110 = swift_getAssociatedTypeWitness();
  v15 = v101;
  v111 = swift_getAssociatedTypeWitness();
  v112 = swift_getAssociatedTypeWitness();
  v113 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v16 = v96;
  v86 = MEMORY[0x1AF414014](MEMORY[0x1E0C956D8], v96);
  v88 = sub_1A93F77DC();
  v89 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v84 = (char *)v72 - v17;
  v81 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v18);
  v80 = (char *)v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v20);
  v77 = (char *)v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v22);
  v75 = (char *)v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v24);
  v95 = (char *)v72 - v25;
  v73 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v6;
  v30 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v72 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v103;
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)v72 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)v72 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72[1] = v40;
  v42 = MEMORY[0x1E0C80A78](v41);
  v44 = (char *)v72 - v43;
  v46 = v85;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v45 + 16))(v37, v85, v34, v42);
  v47 = v46 + *(int *)(a2 + 116);
  v48 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  v74 = v29;
  v48(v33, v47, v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v28, v46 + *(int *)(a2 + 120), v107);
  v78 = v44;
  sub_1A93F76EC();
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v40, v44, v105);
  v49 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v46 + *(int *)(a2 + 124), v101);
  v50 = v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v77, v46 + *(int *)(a2 + 128), v102);
  v51 = v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v80, v46 + *(int *)(a2 + 132), v104);
  v52 = v82;
  v53 = v98;
  v54 = v49;
  v55 = v50;
  sub_1A93F7704();
  v56 = (_QWORD *)swift_allocObject();
  v57 = v74;
  v56[2] = v103;
  v56[3] = v57;
  v58 = v106;
  v56[4] = v107;
  v56[5] = v54;
  v56[6] = v55;
  v56[7] = v51;
  v59 = v91;
  v60 = v97;
  v56[8] = v91;
  v56[9] = v60;
  v61 = v99;
  v62 = v100;
  v56[10] = v100;
  v56[11] = v58;
  v56[12] = v53;
  v56[13] = v52;
  v63 = v92;
  v56[14] = v61;
  v56[15] = v63;
  v64 = (_QWORD *)swift_allocObject();
  v64[2] = v103;
  v64[3] = v57;
  v65 = v101;
  v64[4] = v107;
  v64[5] = v65;
  v66 = v104;
  v64[6] = v102;
  v64[7] = v66;
  v64[8] = v59;
  v64[9] = v60;
  v64[10] = v62;
  v64[11] = v58;
  v64[12] = v98;
  v64[13] = v52;
  v64[14] = v61;
  v64[15] = v63;
  v64[16] = sub_1A921AF04;
  v64[17] = v56;
  v67 = v84;
  v69 = v95;
  v68 = v96;
  sub_1A93F7B84();
  swift_release();
  v70 = v88;
  sub_1A93F77D0();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v67, v70);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v69, v68);
  return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v78, v105);
}

uint64_t sub_1A921AA70(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7, char *a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v26;
  uint64_t v27;
  uint64_t TupleTypeMetadata3;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(uint64_t, char *, uint64_t);
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  void (*v71)(char *, uint64_t);
  void (*v72)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  char *v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  _QWORD *v100;
  char *v101;
  _QWORD *v102;

  v82 = a1;
  v83 = a8;
  v100 = a7;
  v97 = a12;
  v98 = a6;
  v92 = a4;
  v93 = a11;
  v95 = a25;
  v96 = a5;
  v94 = a18;
  v90 = a17;
  v91 = a24;
  v88 = a3;
  v89 = a10;
  v84 = a9;
  v85 = a2;
  v86 = a16;
  v87 = a23;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v26 = swift_getAssociatedTypeWitness();
  v27 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  MEMORY[0x1E0C80A78](TupleTypeMetadata3);
  v81 = (char *)&v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v101 = (char *)&v74 - v31;
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v74 - v33;
  v36 = MEMORY[0x1E0C80A78](v35);
  v38 = (char *)&v74 - v37;
  v99 = (char *)&v74 + *(int *)(v39 + 48) - v37;
  v40 = v99;
  v41 = (char *)&v74 + *(int *)(v39 + 64) - v37;
  v42 = AssociatedTypeWitness;
  v102 = *(_QWORD **)(AssociatedTypeWitness - 8);
  v43 = (void (*)(char *, char *, uint64_t))v102[2];
  v74 = AssociatedTypeWitness;
  ((void (*)(char *, _QWORD *, uint64_t, double))v43)((char *)&v74 - v37, v100, AssociatedTypeWitness, v36);
  v44 = v26;
  v100 = *(_QWORD **)(v26 - 8);
  v76 = (void (*)(char *, char *, uint64_t))v100[2];
  v77 = v26;
  v76(v40, v83, v26);
  v45 = v27;
  v75 = v27;
  v80 = *(_QWORD *)(v27 - 8);
  v46 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
  v47 = v41;
  v78 = v41;
  v46(v41, v84, v45);
  v48 = &v34[*(int *)(TupleTypeMetadata3 + 48)];
  v83 = &v34[*(int *)(TupleTypeMetadata3 + 64)];
  v49 = v83;
  v84 = v48;
  v43(v34, v38, v42);
  v50 = v48;
  v51 = v99;
  v52 = v76;
  v76(v50, v99, v44);
  v53 = v49;
  v54 = v75;
  v46(v53, v47, v75);
  v79 = (void (*)(char *, char *, uint64_t))v102[4];
  v55 = v74;
  v79(v82, v34, v74);
  v56 = &v101[*(int *)(TupleTypeMetadata3 + 48)];
  v82 = &v101[*(int *)(TupleTypeMetadata3 + 64)];
  v57 = v82;
  ((void (*)(void))v43)();
  v58 = v77;
  v52(v56, v51, v77);
  v59 = v57;
  v60 = v78;
  v46(v59, v78, v54);
  v61 = (void (*)(uint64_t, char *, uint64_t))v100[4];
  v61(v85, v56, v58);
  v62 = v81;
  v63 = &v81[*(int *)(TupleTypeMetadata3 + 48)];
  v64 = &v81[*(int *)(TupleTypeMetadata3 + 64)];
  v79(v81, v38, v55);
  v61((uint64_t)v63, v99, v58);
  v65 = v80;
  v66 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
  v66(v64, v60, v54);
  v66(v88, v64, v54);
  v67 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v92, v89, v67);
  v68 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v96, v93, v68);
  v69 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v98, v97, v69);
  v70 = (void (*)(char *, uint64_t))v100[1];
  v70(v63, v58);
  v71 = (void (*)(char *, uint64_t))v102[1];
  v71(v62, v55);
  v72 = *(void (**)(char *, uint64_t))(v65 + 8);
  v72(v82, v54);
  v71(v101, v55);
  v72(v83, v54);
  return ((uint64_t (*)(char *, uint64_t))v70)(v84, v58);
}

uint64_t sub_1A921AEF4()
{
  return swift_deallocObject();
}

uint64_t sub_1A921AF04(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7, char *a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t *v12;

  return sub_1A921AA70(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, v12[2], v12[3], v12[4], v12[5], v12[6], v12[7], v12[8],
           v12[9],
           v12[10],
           v12[11],
           v12[12],
           v12[13],
           v12[14]);
}

uint64_t sub_1A921AF50@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t TupleTypeMetadata3;
  int *TupleTypeMetadata;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v12;
  uint64_t v13;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v13 = a1 + *(int *)(TupleTypeMetadata3 + 48);
  v12 = a1 + *(int *)(TupleTypeMetadata3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v7 = a1 + TupleTypeMetadata[12];
  v8 = a1 + TupleTypeMetadata[16];
  v9 = a1 + TupleTypeMetadata[20];
  v10 = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + v10[12], a3 + v10[16], a3 + v10[20], a3 + v10[24], a3 + v10[28], a1, v13, v12, v7, v8, v9);
}

uint64_t sub_1A921B160()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A921B184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A921AF50(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 128), a2);
}

uint64_t sub_1A921B1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.PFCombineLatest6.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t Publishers.PFCombineLatest7.b.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 132));
}

uint64_t Publishers.PFCombineLatest7.c.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 136));
}

uint64_t Publishers.PFCombineLatest7.d.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 40) - 8) + 16))(a2, v2 + *(int *)(a1 + 140));
}

uint64_t Publishers.PFCombineLatest7.e.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 48) - 8) + 16))(a2, v2 + *(int *)(a1 + 144));
}

uint64_t Publishers.PFCombineLatest7.f.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 56) - 8) + 16))(a2, v2 + *(int *)(a1 + 148));
}

uint64_t Publishers.PFCombineLatest7.g.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 64) - 8) + 16))(a2, v2 + *(int *)(a1 + 152));
}

void Publishers.PFCombineLatest7.init(_:_:_:_:_:_:_:)(uint64_t a1@<X0>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for Publishers.PFCombineLatest7();
}

uint64_t sub_1A921B338(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v4 + a1[33], v1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4 + a1[34], v11, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v4 + a1[35], v12, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v4 + a1[36], v13, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v4 + a1[37], v14, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v4 + a1[38], v15, v3);
}

void type metadata accessor for Publishers.PFCombineLatest7()
{
  JUMPOUT(0x1AF413F6CLL);
}

uint64_t Publishers.PFCombineLatest7.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t TupleTypeMetadata;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t AssociatedTypeWitness;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  v101 = a4;
  v100 = a3;
  v102 = a1;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  v118 = *(_QWORD *)(a2 + 32);
  v119 = v7;
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 88);
  v116 = *(_QWORD *)(a2 + 96);
  v117 = v10;
  AssociatedTypeWitness = v5;
  v122 = v6;
  v103 = v5;
  v120 = v6;
  v123 = v118;
  v124 = v7;
  v125 = v8;
  v126 = v9;
  v110 = v9;
  v111 = v8;
  v127 = v10;
  v128 = v116;
  v11 = sub_1A93F76F8();
  v12 = *(_QWORD *)(a2 + 56);
  v112 = *(_QWORD *)(a2 + 48);
  v113 = v12;
  v114 = *(_QWORD *)(a2 + 64);
  v115 = v11;
  v99 = MEMORY[0x1AF414014](MEMORY[0x1E0C956D8], v11);
  v13 = *(_QWORD *)(a2 + 104);
  v14 = *(_QWORD *)(a2 + 120);
  v108 = *(_QWORD *)(a2 + 112);
  v109 = v13;
  v128 = v14;
  v107 = v14;
  v106 = sub_1A93F76F8();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v122 = swift_getAssociatedTypeWitness();
  v15 = v118;
  v123 = swift_getAssociatedTypeWitness();
  v16 = v119;
  v124 = swift_getAssociatedTypeWitness();
  v17 = v112;
  v125 = swift_getAssociatedTypeWitness();
  v18 = v113;
  v126 = swift_getAssociatedTypeWitness();
  v127 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v19 = v106;
  v95 = MEMORY[0x1AF414014](MEMORY[0x1E0C956D8], v106);
  v97 = sub_1A93F77DC();
  v98 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v93 = (char *)&v82 - v20;
  v91 = *(_QWORD *)(v114 - 8);
  MEMORY[0x1E0C80A78](v21);
  v90 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v23);
  v88 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v25);
  v85 = (char *)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v27);
  v105 = (char *)&v82 - v28;
  v84 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v29);
  v83 = (char *)&v82 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v82 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v120;
  v36 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v82 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v103;
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)&v82 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = *(_QWORD *)(v115 - 8);
  MEMORY[0x1E0C80A78](v44);
  v82 = (char *)&v82 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x1E0C80A78](v46);
  v49 = (char *)&v82 - v48;
  v51 = v94;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v50 + 16))(v43, v94, v40, v47);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v39, v51 + *(int *)(a2 + 132), v35);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v34, v51 + *(int *)(a2 + 136), v118);
  (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v83, v51 + *(int *)(a2 + 140), v119);
  v86 = v49;
  sub_1A93F7704();
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v82, v49, v115);
  v52 = v112;
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v85, v51 + *(int *)(a2 + 144), v112);
  v53 = v113;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v88, v51 + *(int *)(a2 + 148), v113);
  v54 = v51 + *(int *)(a2 + 152);
  v55 = v114;
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v90, v54, v114);
  v56 = v107;
  v57 = v108;
  v58 = v52;
  v59 = v53;
  v60 = v55;
  sub_1A93F7704();
  v61 = (_QWORD *)swift_allocObject();
  v62 = v103;
  v63 = v120;
  v61[2] = v103;
  v61[3] = v63;
  v64 = v117;
  v65 = v119;
  v61[4] = v118;
  v61[5] = v65;
  v61[6] = v58;
  v61[7] = v59;
  v61[8] = v60;
  v66 = v100;
  v68 = v110;
  v67 = v111;
  v61[9] = v100;
  v61[10] = v67;
  v61[11] = v68;
  v61[12] = v64;
  v69 = v116;
  v70 = v109;
  v61[13] = v116;
  v61[14] = v70;
  v61[15] = v57;
  v61[16] = v56;
  v71 = v101;
  v61[17] = v101;
  v72 = (_QWORD *)swift_allocObject();
  v73 = v120;
  v72[2] = v62;
  v72[3] = v73;
  v74 = v119;
  v72[4] = v118;
  v72[5] = v74;
  v75 = v113;
  v72[6] = v112;
  v72[7] = v75;
  v72[8] = v114;
  v72[9] = v66;
  v72[10] = v67;
  v72[11] = v68;
  v72[12] = v64;
  v72[13] = v69;
  v76 = v108;
  v72[14] = v70;
  v72[15] = v76;
  v72[16] = v107;
  v72[17] = v71;
  v72[18] = sub_1A921C430;
  v72[19] = v61;
  v77 = v93;
  v78 = v106;
  v79 = v105;
  sub_1A93F7B84();
  swift_release();
  v80 = v97;
  sub_1A93F77D0();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v77, v80);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v79, v78);
  return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v86, v115);
}

uint64_t sub_1A921BC2C(char *a1, char *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(char *, char *, uint64_t), char *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char *a16, void (*a17)(char *, char *, uint64_t), char *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,char *a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int *TupleTypeMetadata;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  int *v41;
  char *v42;
  char *v43;
  char *v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(void);
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  void (*v74)(uint64_t, char *, uint64_t);
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  void (*v88)(char *, uint64_t);
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  void (*v97)(char *, char *, uint64_t);
  void (*v98)(void);
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  void (*v123)(char *, char *, uint64_t);
  void (*v124)(void);
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  _QWORD *v130;
  _QWORD *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t AssociatedTypeWitness;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v134 = a8;
  v120 = a7;
  v118 = a6;
  v114 = a5;
  v110 = a4;
  v107 = a3;
  v106 = a2;
  v102 = a1;
  v117 = a29;
  v116 = a21;
  v119 = a14;
  v115 = a13;
  v113 = a28;
  v109 = a27;
  v112 = a20;
  v108 = a19;
  v111 = a12;
  v105 = a11;
  v121 = a10;
  v126 = a9;
  v104 = a26;
  v125 = a25;
  v103 = a18;
  v123 = a17;
  v130 = a24;
  v101 = a16;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v137 = swift_getAssociatedTypeWitness();
  v138 = swift_getAssociatedTypeWitness();
  v139 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  MEMORY[0x1E0C80A78](TupleTypeMetadata);
  v129 = (char *)&v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v127 = (char *)&v93 - v32;
  MEMORY[0x1E0C80A78](v33);
  v128 = (char *)&v93 - v34;
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v93 - v36;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v93 - v39;
  v42 = (char *)&v93 + v41[12] - v39;
  v132 = (char *)&v93 + v41[16] - v39;
  v43 = v132;
  v133 = (char *)&v93 - v39;
  v44 = (char *)&v93 + v41[20] - v39;
  v135 = swift_getAssociatedTypeWitness();
  v131 = *(_QWORD **)(v135 - 8);
  v124 = (void (*)(void))v131[2];
  ((void (*)(char *, uint64_t, uint64_t))v124)(v40, v134, v135);
  v134 = swift_getAssociatedTypeWitness();
  v130 = *(_QWORD **)(v134 - 8);
  v45 = (void (*)(char *, uint64_t, uint64_t))v130[2];
  v46 = v42;
  v122 = v42;
  v45(v42, v126, v134);
  v47 = swift_getAssociatedTypeWitness();
  v48 = *(_QWORD *)(v47 - 8);
  v125 = v47;
  v126 = v48;
  v123 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v123(v43, (char *)v121, v47);
  v49 = swift_getAssociatedTypeWitness();
  v100 = *(_QWORD *)(v49 - 8);
  v121 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
  v95 = v49;
  v121(v44, v105, v49);
  v50 = TupleTypeMetadata[12];
  v99 = v37;
  v51 = &v37[v50];
  v105 = &v37[v50];
  v104 = &v37[TupleTypeMetadata[16]];
  v52 = v104;
  v103 = &v37[TupleTypeMetadata[20]];
  v53 = v103;
  v54 = v135;
  v55 = v124;
  v124();
  v96 = (void (*)(char *, char *, uint64_t))v45;
  v45(v51, (uint64_t)v46, v134);
  v56 = v123;
  v123(v52, v132, v125);
  v57 = v44;
  v94 = v44;
  v58 = v44;
  v59 = v121;
  v121(v53, v58, v49);
  v98 = (void (*)(void))v131[4];
  ((void (*)(char *, char *, uint64_t))v98)(v102, v99, v54);
  v99 = &v128[TupleTypeMetadata[12]];
  v60 = v99;
  v102 = &v128[TupleTypeMetadata[16]];
  v61 = v102;
  v101 = &v128[TupleTypeMetadata[20]];
  v62 = v101;
  v55();
  v63 = v60;
  v64 = v122;
  v65 = v134;
  v45(v63, (uint64_t)v122, v134);
  v66 = v125;
  v56(v61, v132, v125);
  v67 = v95;
  v59(v62, v57, v95);
  v97 = (void (*)(char *, char *, uint64_t))v130[4];
  v97(v106, v99, v65);
  v106 = &v127[TupleTypeMetadata[12]];
  v68 = v106;
  v69 = &v127[TupleTypeMetadata[16]];
  v99 = &v127[TupleTypeMetadata[20]];
  v70 = v99;
  v124();
  v96(v68, v64, v65);
  v71 = v132;
  v123(v69, v132, v66);
  v72 = v70;
  v73 = v94;
  v121(v72, v94, v67);
  v74 = *(void (**)(uint64_t, char *, uint64_t))(v126 + 32);
  v75 = v66;
  v74(v107, v69, v66);
  v76 = &v129[TupleTypeMetadata[12]];
  v77 = &v129[TupleTypeMetadata[16]];
  v78 = &v129[TupleTypeMetadata[20]];
  v98();
  v79 = v76;
  v80 = v134;
  v97(v76, v122, v134);
  v74((uint64_t)v77, v71, v75);
  v81 = v100;
  v82 = *(void (**)(char *, char *, uint64_t))(v100 + 32);
  v82(v78, v73, v67);
  v83 = v67;
  v82(v110, v78, v67);
  v84 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v114, v111, v84);
  v85 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v118, v115, v85);
  v86 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v120, v119, v86);
  v87 = *(void (**)(char *, uint64_t))(v126 + 8);
  v87(v77, v75);
  v88 = (void (*)(char *, uint64_t))v130[1];
  v88(v79, v80);
  v89 = (void (*)(char *, uint64_t))v131[1];
  v90 = v135;
  v89(v129, v135);
  v91 = *(void (**)(char *, uint64_t))(v81 + 8);
  v91(v99, v83);
  v88(v106, v80);
  v89(v127, v90);
  v91(v101, v83);
  v87(v102, v75);
  v89(v128, v90);
  v91(v103, v83);
  v87(v104, v75);
  return ((uint64_t (*)(char *, uint64_t))v88)(v105, v80);
}

uint64_t sub_1A921C420()
{
  return swift_deallocObject();
}

uint64_t sub_1A921C430(char *a1, char *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(char *, char *, uint64_t), char *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;

  return sub_1A921BC2C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, *(_QWORD *)(v14 + 16), *(char **)(v14 + 24), *(void (**)(char *, char *, uint64_t))(v14 + 32), *(char **)(v14 + 40), *(_QWORD *)(v14 + 48),
           *(_QWORD *)(v14 + 56),
           *(_QWORD *)(v14 + 64),
           *(_QWORD *)(v14 + 72),
           *(_QWORD *)(v14 + 80),
           *(_QWORD **)(v14 + 88),
           *(_QWORD *)(v14 + 96),
           *(char **)(v14 + 104),
           *(_QWORD *)(v14 + 112),
           *(_QWORD *)(v14 + 120),
           *(_QWORD *)(v14 + 128));
}

uint64_t sub_1A921C484@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  int *TupleTypeMetadata;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v14 = a1 + TupleTypeMetadata[12];
  v13 = a1 + TupleTypeMetadata[16];
  v12 = a1 + TupleTypeMetadata[20];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v6 = (int *)swift_getTupleTypeMetadata();
  v7 = a1 + v6[12];
  v8 = a1 + v6[16];
  v9 = a1 + v6[20];
  v10 = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + v10[12], a3 + v10[16], a3 + v10[20], a3 + v10[24], a3 + v10[28], a3 + v10[32], a1, v14, v13, v12, v7, v8, v9);
}

uint64_t sub_1A921C6EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A921C710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A921C484(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 144), a2);
}

uint64_t sub_1A921C764()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1A921C784()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1A921C7A4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1A921C7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.PFCombineLatest7.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_1A921C7D8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A921C7E0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            swift_initStructMetadata();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1A921C8CC(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_QWORD *)(a3[3] - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v4 + 64) + v6;
  v8 = *(_QWORD *)(a3[4] - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v5 + 64) + v9;
  v11 = *(_QWORD *)(a3[5] - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(v8 + 64) + v12;
  v14 = *(_QWORD *)(a3[6] - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = *(_DWORD *)(v4 + 80);
  v17 = (*(_BYTE *)(v5 + 80) | v16 | *(_BYTE *)(v8 + 80) | v12 | v15);
  if (v17 <= 7
    && ((*(_QWORD *)(v11 + 64)
       + v15
       + ((v13 + ((v10 + (v7 & ~v6)) & ~v9)) & ~(unint64_t)v12)) & ~(unint64_t)v15)
     + *(_QWORD *)(v14 + 64) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | v16 | *(_DWORD *)(v8 + 80) | v12 | v15) & 0x100000) == 0)
  {
    v22 = ~v6;
    v33 = ~v9;
    v34 = a3[5];
    v36 = ~(unint64_t)v12;
    v37 = ~(unint64_t)v15;
    v38 = a3[6];
    v31 = a3[3];
    v32 = a3[4];
    v35 = *(_QWORD *)(v11 + 64) + v15;
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    v39 = a1;
    v24 = ((unint64_t)a1 + v7) & v22;
    v25 = ((unint64_t)a2 + v7) & v22;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v24, v25, v31);
    v26 = v24 + v10;
    v21 = v39;
    v27 = v26 & v33;
    v28 = (v25 + v10) & v33;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v26 & v33, v28, v32);
    v29 = (v28 + v13) & v36;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((v27 + v13) & v36, v29, v34);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16))((((v27 + v13) & v36) + v35) & v37, (v29 + v35) & v37, v38);
  }
  else
  {
    v20 = *a2;
    *a1 = *a2;
    v21 = (uint64_t *)(v20 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  return v21;
}

uint64_t sub_1A921CAB0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(a2[4] - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t))(v9 + 8))(v10);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(a2[5] - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  (*(void (**)(unint64_t))(v12 + 8))(v13);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(a2[6] - 8) + 8))((v13
                                                                                       + *(_QWORD *)(v12 + 64)
                                                                                       + *(unsigned __int8 *)(*(_QWORD *)(a2[6] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[6] - 8) + 80));
}

uint64_t sub_1A921CB80(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v22, v23);
  v24 = *(_QWORD *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v24 + 16))((*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), (*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  return a1;
}

uint64_t sub_1A921CC90(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v22, v23);
  v24 = *(_QWORD *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v24 + 24))((*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), (*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  return a1;
}

uint64_t sub_1A921CDA0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v22, v23);
  v24 = *(_QWORD *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v24 + 32))((*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), (*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  return a1;
}

uint64_t sub_1A921CEB0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 40))(v22, v23);
  v24 = *(_QWORD *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v24 + 40))((*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), (*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  return a1;
}

uint64_t sub_1A921CFC0(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = a3[2];
  v5 = a3[3];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  v13 = a3[4];
  v12 = a3[5];
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 84);
  if (v15 > v11)
    v11 = *(_DWORD *)(v14 + 84);
  v16 = *(_QWORD *)(v12 - 8);
  v17 = *(unsigned int *)(v16 + 84);
  if (v17 <= v11)
    v18 = v11;
  else
    v18 = *(_DWORD *)(v16 + 84);
  v19 = a3[6];
  v20 = *(_QWORD *)(v19 - 8);
  if (*(_DWORD *)(v20 + 84) > v18)
    v18 = *(_DWORD *)(v20 + 84);
  if (!a2)
    return 0;
  v21 = *(unsigned __int8 *)(v9 + 80);
  v22 = *(_QWORD *)(v7 + 64) + v21;
  v23 = *(_QWORD *)(v9 + 64);
  v24 = *(unsigned __int8 *)(v14 + 80);
  v25 = *(_QWORD *)(v14 + 64);
  v26 = *(unsigned __int8 *)(v16 + 80);
  v27 = *(unsigned __int8 *)(v20 + 80);
  v28 = *(_QWORD *)(v16 + 64) + v27;
  v29 = a2 - v18;
  if (a2 <= v18)
    goto LABEL_30;
  v30 = ((v28 + ((v25 + v26 + ((v23 + v24 + (v22 & ~v21)) & ~v24)) & ~v26)) & ~v27) + *(_QWORD *)(v20 + 64);
  v31 = 8 * v30;
  if (v30 <= 3)
  {
    v33 = ((v29 + ~(-1 << v31)) >> v31) + 1;
    if (HIWORD(v33))
    {
      v32 = *(_DWORD *)(a1 + v30);
      if (!v32)
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v33 > 0xFF)
    {
      v32 = *(unsigned __int16 *)(a1 + v30);
      if (!*(_WORD *)(a1 + v30))
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v33 < 2)
    {
LABEL_30:
      if (v18)
      {
        if (v8 == v18)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))(a1, *(unsigned int *)(v7 + 84), v6);
        v36 = (v22 + a1) & ~v21;
        if (v10 == v18)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v9 + 48))(v36, *(unsigned int *)(v9 + 84), v5);
        v37 = (v36 + v23 + v24) & ~v24;
        if (v15 == v18)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v14 + 48))(v37, *(unsigned int *)(v14 + 84), v13);
        v38 = (v37 + v25 + v26) & ~v26;
        if ((_DWORD)v17 == v18)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v38, v17, v12);
        else
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v20 + 48))((v28 + v38) & ~v27, *(unsigned int *)(v20 + 84), v19);
      }
      return 0;
    }
  }
  v32 = *(unsigned __int8 *)(a1 + v30);
  if (!*(_BYTE *)(a1 + v30))
    goto LABEL_30;
LABEL_21:
  v34 = (v32 - 1) << v31;
  if (v30 > 3)
    v34 = 0;
  if ((_DWORD)v30)
  {
    if (v30 <= 3)
      v35 = ((v28 + ((v25 + v26 + ((v23 + v24 + (v22 & ~(_DWORD)v21)) & ~(_DWORD)v24)) & ~(_DWORD)v26)) & ~(_DWORD)v27)
          + *(_DWORD *)(v20 + 64);
    else
      v35 = 4;
    __asm { BR              X11 }
  }
  return v18 + v34 + 1;
}

uint64_t sub_1A921D244(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  result = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(result + 84))
    v7 = *(_DWORD *)(result + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(a4[4] - 8);
  if (*(_DWORD *)(v8 + 84) > v7)
    v7 = *(_DWORD *)(v8 + 84);
  v9 = *(_QWORD *)(a4[5] - 8);
  if (*(_DWORD *)(v9 + 84) <= v7)
    v10 = v7;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(a4[6] - 8);
  if (*(_DWORD *)(v11 + 84) > v10)
    v10 = *(_DWORD *)(v11 + 84);
  v12 = ((*(_QWORD *)(v9 + 64)
        + *(unsigned __int8 *)(v11 + 80)
        + ((*(_QWORD *)(v8 + 64)
          + *(unsigned __int8 *)(v9 + 80)
          + ((*(_QWORD *)(v6 + 64)
            + *(unsigned __int8 *)(v8 + 80)
            + ((*(_QWORD *)(result + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
      + *(_QWORD *)(v11 + 64);
  if (a3 <= v10)
  {
    v13 = 0u;
    if (v10 < a2)
      goto LABEL_16;
  }
  else
  {
    if (v12 > 3)
    {
      v13 = 1u;
      if (v10 >= a2)
        return result;
LABEL_16:
      v14 = ~v10 + a2;
      if (v12 < 4)
      {
        if ((_DWORD)v12)
        {
          v16 = v14 & ~(-1 << (8 * v12));
          bzero(a1, v12);
          if ((_DWORD)v12 == 3)
          {
            *a1 = v16;
            *((_BYTE *)a1 + 2) = BYTE2(v16);
          }
          else if ((_DWORD)v12 == 2)
          {
            *a1 = v16;
          }
          else
          {
            *(_BYTE *)a1 = v16;
          }
        }
      }
      else
      {
        bzero(a1, v12);
        *(_DWORD *)a1 = v14;
      }
      __asm { BR              X10 }
    }
    v15 = ((a3 - v10 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
    if (v10 < a2)
      goto LABEL_16;
  }
  return result;
}

void sub_1A921D4E8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1A921D4F0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_1A921D57C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A921D584()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            result = swift_checkMetadataState();
            if (v6 <= 0x3F)
            {
              swift_initStructMetadata();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

_QWORD *sub_1A921D690(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(a3[4] - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v6 + 64) + v10;
  v12 = *(_QWORD *)(a3[5] - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v45 = *(_QWORD *)(v9 + 64) + v13;
  v14 = *(_QWORD *)(a3[6] - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v44 = *(_QWORD *)(v12 + 64) + v15;
  v16 = *(_QWORD *)(a3[7] - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = *(_QWORD *)(v14 + 64) + v17;
  v19 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v5 + 80) | *(_BYTE *)(v9 + 80) | *(_BYTE *)(v12 + 80) | *(_BYTE *)(v14 + 80) | v17);
  if (v19 <= 7
    && ((v18 + ((v44 + ((v45 + ((v11 + (v8 & ~v7)) & ~v10)) & ~v13)) & ~v15)) & ~(unint64_t)v17)
     + *(_QWORD *)(v16 + 64) <= 0x18
    && ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v9 + 80) | *(_DWORD *)(v12 + 80) | *(_DWORD *)(v14 + 80) | v17) & 0x100000) == 0)
  {
    v35 = a3[4];
    v36 = a3[3];
    v24 = ~v7;
    v37 = ~v10;
    v38 = a3[5];
    v39 = ~v13;
    v40 = a3[6];
    v41 = ~v15;
    v42 = ~(unint64_t)v17;
    v43 = a3[7];
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    v25 = a2;
    v26 = a1;
    v27 = ((unint64_t)a1 + v8) & v24;
    v28 = ((unint64_t)v25 + v8) & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v27, v28, v36);
    v29 = v27 + v11;
    v23 = v26;
    v30 = v29 & v37;
    v31 = (v28 + v11) & v37;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v29 & v37, v31, v35);
    v32 = (v31 + v45) & v39;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))((v30 + v45) & v39, v32, v38);
    v33 = (((v30 + v45) & v39) + v44) & v41;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v33, (v32 + v44) & v41, v40);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 16))((v33 + v18) & v42, (((v32 + v44) & v41) + v18) & v42, v43);
  }
  else
  {
    v22 = *a2;
    *a1 = *a2;
    v23 = (_QWORD *)(v22 + ((v19 + 16) & ~v19));
    swift_retain();
  }
  return v23;
}

uint64_t sub_1A921D8DC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(a2[4] - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t))(v9 + 8))(v10);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(a2[5] - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  (*(void (**)(unint64_t))(v12 + 8))(v13);
  v14 = *(_QWORD *)(v12 + 64);
  v15 = *(_QWORD *)(a2[6] - 8);
  v16 = (v13 + v14 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  (*(void (**)(unint64_t))(v15 + 8))(v16);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(a2[7] - 8) + 8))((v16
                                                                                       + *(_QWORD *)(v15 + 64)
                                                                                       + *(unsigned __int8 *)(*(_QWORD *)(a2[7] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[7] - 8) + 80));
}

uint64_t sub_1A921D9D4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = *(_QWORD *)(a3[6] - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v24 + v26;
  v28 = (v27 + v22) & ~v26;
  v29 = (v27 + v23) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v25 + 16))(v28, v29);
  v30 = *(_QWORD *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v30 + 16))((*(_QWORD *)(v25 + 64) + *(unsigned __int8 *)(v30 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80), (*(_QWORD *)(v25 + 64) + *(unsigned __int8 *)(v30 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  return a1;
}

uint64_t sub_1A921DB18(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = *(_QWORD *)(a3[6] - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v24 + v26;
  v28 = (v27 + v22) & ~v26;
  v29 = (v27 + v23) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v25 + 24))(v28, v29);
  v30 = *(_QWORD *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v30 + 24))((*(_QWORD *)(v25 + 64) + *(unsigned __int8 *)(v30 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80), (*(_QWORD *)(v25 + 64) + *(unsigned __int8 *)(v30 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  return a1;
}

uint64_t sub_1A921DC5C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = *(_QWORD *)(a3[6] - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v24 + v26;
  v28 = (v27 + v22) & ~v26;
  v29 = (v27 + v23) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v25 + 32))(v28, v29);
  v30 = *(_QWORD *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v30 + 32))((*(_QWORD *)(v25 + 64) + *(unsigned __int8 *)(v30 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80), (*(_QWORD *)(v25 + 64) + *(unsigned __int8 *)(v30 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  return a1;
}

uint64_t sub_1A921DDA0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 40))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = *(_QWORD *)(a3[6] - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v24 + v26;
  v28 = (v27 + v22) & ~v26;
  v29 = (v27 + v23) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v25 + 40))(v28, v29);
  v30 = *(_QWORD *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v30 + 40))((*(_QWORD *)(v25 + 64) + *(unsigned __int8 *)(v30 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80), (*(_QWORD *)(v25 + 64) + *(unsigned __int8 *)(v30 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  return a1;
}

uint64_t sub_1A921DEE4(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v6 = a3[2];
  v5 = a3[3];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  v13 = a3[4];
  v12 = a3[5];
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 84);
  if (v15 > v11)
    v11 = *(_DWORD *)(v14 + 84);
  v16 = *(_QWORD *)(v12 - 8);
  v17 = *(unsigned int *)(v16 + 84);
  if (v17 <= v11)
    v18 = v11;
  else
    v18 = *(_DWORD *)(v16 + 84);
  v19 = a3[6];
  v20 = a3[7];
  v21 = *(_QWORD *)(v19 - 8);
  v22 = *(_DWORD *)(v21 + 84);
  if (v22 <= v18)
    v23 = v18;
  else
    v23 = *(_DWORD *)(v21 + 84);
  v24 = *(_QWORD *)(v20 - 8);
  if (*(_DWORD *)(v24 + 84) > v23)
    v23 = *(_DWORD *)(v24 + 84);
  if (!a2)
    return 0;
  v25 = *(unsigned __int8 *)(v9 + 80);
  v46 = *(_QWORD *)(v7 + 64) + v25;
  v45 = *(_QWORD *)(v9 + 64);
  v26 = *(unsigned __int8 *)(v14 + 80);
  v44 = *(_QWORD *)(v14 + 64);
  v27 = *(unsigned __int8 *)(v16 + 80);
  v28 = *(unsigned __int8 *)(v21 + 80);
  v43 = *(_QWORD *)(v16 + 64) + v28;
  v29 = *(unsigned __int8 *)(v24 + 80);
  v30 = *(_QWORD *)(v21 + 64) + v29;
  v31 = a2 - v23;
  if (a2 <= v23)
    goto LABEL_33;
  v32 = ((v30 + ((v43 + ((v44 + v27 + ((v45 + v26 + (v46 & ~v25)) & ~v26)) & ~v27)) & ~v28)) & ~v29)
      + *(_QWORD *)(v24 + 64);
  v33 = 8 * v32;
  if (v32 <= 3)
  {
    v35 = ((v31 + ~(-1 << v33)) >> v33) + 1;
    if (HIWORD(v35))
    {
      v34 = *(_DWORD *)(a1 + v32);
      v30 = *(_QWORD *)(v21 + 64) + v29;
      if (!v34)
        goto LABEL_33;
      goto LABEL_24;
    }
    if (v35 > 0xFF)
    {
      v34 = *(unsigned __int16 *)(a1 + v32);
      v30 = *(_QWORD *)(v21 + 64) + v29;
      if (!*(_WORD *)(a1 + v32))
        goto LABEL_33;
      goto LABEL_24;
    }
    v30 = *(_QWORD *)(v21 + 64) + v29;
    if (v35 < 2)
    {
LABEL_33:
      if (v23)
      {
        if (v8 == v23)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))(a1, *(unsigned int *)(v7 + 84), v6);
        v38 = (v46 + a1) & ~v25;
        if (v10 == v23)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v9 + 48))(v38, *(unsigned int *)(v9 + 84), v5);
        v39 = (v38 + v45 + v26) & ~v26;
        if (v15 == v23)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v14 + 48))(v39, *(unsigned int *)(v14 + 84), v13);
        v40 = (v39 + v44 + v27) & ~v27;
        if ((_DWORD)v17 == v23)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v40, v17, v12);
        v42 = (v43 + v40) & ~v28;
        if (v22 == v23)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v21 + 48))(v42, *(unsigned int *)(v21 + 84), v19);
        else
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v24 + 48))((v30 + v42) & ~v29, *(unsigned int *)(v24 + 84), v20);
      }
      return 0;
    }
  }
  v34 = *(unsigned __int8 *)(a1 + v32);
  if (!*(_BYTE *)(a1 + v32))
    goto LABEL_33;
LABEL_24:
  v36 = (v34 - 1) << v33;
  if (v32 > 3)
    v36 = 0;
  if ((_DWORD)v32)
  {
    if (v32 <= 3)
      v37 = v32;
    else
      v37 = 4;
    __asm { BR              X11 }
  }
  return v23 + v36 + 1;
}

void sub_1A921E1FC(_BYTE *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v15;
  int v16;

  v4 = *(_QWORD *)(a4[2] - 8);
  v5 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v5 + 84) <= *(_DWORD *)(v4 + 84))
    v6 = *(_DWORD *)(v4 + 84);
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(a4[4] - 8);
  if (*(_DWORD *)(v7 + 84) > v6)
    v6 = *(_DWORD *)(v7 + 84);
  v8 = *(_QWORD *)(a4[5] - 8);
  v9 = *(_QWORD *)(a4[6] - 8);
  v10 = *(_QWORD *)(a4[7] - 8);
  v11 = ((*(_QWORD *)(v9 + 64)
        + *(unsigned __int8 *)(v10 + 80)
        + ((*(_QWORD *)(v8 + 64)
          + *(unsigned __int8 *)(v9 + 80)
          + ((*(_QWORD *)(v7 + 64)
            + *(unsigned __int8 *)(v8 + 80)
            + ((*(_QWORD *)(v5 + 64)
              + *(unsigned __int8 *)(v7 + 80)
              + ((*(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
      + *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v8 + 84) > v6)
    v6 = *(_DWORD *)(v8 + 84);
  if (*(_DWORD *)(v9 + 84) > v6)
    v6 = *(_DWORD *)(v9 + 84);
  if (*(_DWORD *)(v10 + 84) > v6)
    v6 = *(_DWORD *)(v10 + 84);
  if (a3 <= v6)
  {
    v12 = 0u;
    if (v6 >= a2)
      goto LABEL_29;
  }
  else if (v11 <= 3)
  {
    v15 = ((a3 - v6 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
    if (HIWORD(v15))
    {
      v12 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v12 = 2;
    }
    else
    {
      v12 = v15 > 1;
    }
    if (v6 >= a2)
LABEL_29:
      __asm { BR              X11 }
  }
  else
  {
    v12 = 1u;
    if (v6 >= a2)
      goto LABEL_29;
  }
  v13 = ~v6 + a2;
  if (v11 < 4)
  {
    if ((_DWORD)v11)
    {
      v16 = v13 & ~(-1 << (8 * v11));
      bzero(a1, v11);
      if ((_DWORD)v11 == 3)
      {
        *(_WORD *)a1 = v16;
        a1[2] = BYTE2(v16);
      }
      else if ((_DWORD)v11 == 2)
      {
        *(_WORD *)a1 = v16;
      }
      else
      {
        *a1 = v16;
      }
    }
  }
  else
  {
    bzero(a1, v11);
    *(_DWORD *)a1 = v13;
  }
  __asm { BR              X10 }
}

uint64_t sub_1A921E4CC(uint64_t result)
{
  uint64_t v1;
  char v2;

  *(_BYTE *)(result + v1) = v2;
  return result;
}

uint64_t sub_1A921E4D4(uint64_t result)
{
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(result + v1) = v2;
  return result;
}

uint64_t sub_1A921E588()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A921E590()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            result = swift_checkMetadataState();
            if (v6 <= 0x3F)
            {
              result = swift_checkMetadataState();
              if (v7 <= 0x3F)
              {
                swift_initStructMetadata();
                return 0;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1A921E6BC(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = a3[3];
  v5 = a3[4];
  v6 = *(_QWORD *)(a3[2] - 8);
  v7 = *(_QWORD *)(v4 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v49 = *(_QWORD *)(v6 + 64) + v8;
  v9 = a3[6];
  v10 = *(_QWORD *)(v5 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v47 = *(_QWORD *)(v7 + 64) + v11;
  v12 = *(_QWORD *)(a3[5] - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v50 = *(_QWORD *)(v10 + 64) + v13;
  v14 = a3[8];
  v15 = *(_QWORD *)(v9 - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v48 = *(_QWORD *)(v12 + 64) + v16;
  v17 = *(_QWORD *)(a3[7] - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v51 = *(_QWORD *)(v15 + 64) + v18;
  v19 = *(_QWORD *)(v14 - 8);
  v20 = *(_DWORD *)(v19 + 80);
  v52 = *(_QWORD *)(v17 + 64) + v20;
  v21 = *(_DWORD *)(v6 + 80);
  v22 = (*(_BYTE *)(v7 + 80) | v21 | *(_BYTE *)(v10 + 80) | *(_BYTE *)(v12 + 80) | *(_BYTE *)(v15 + 80) | v18 | v20);
  if (v22 <= 7
    && ((v52
       + ((v51 + ((v48 + ((v50 + ((v47 + (v49 & ~v8)) & ~v11)) & ~v13)) & ~v16)) & ~(unint64_t)v18)) & ~(unint64_t)v20)
     + *(_QWORD *)(v19 + 64) <= 0x18
    && ((*(_DWORD *)(v7 + 80) | v21 | *(_DWORD *)(v10 + 80) | *(_DWORD *)(v12 + 80) | *(_DWORD *)(v15 + 80) | v18 | v20) & 0x100000) == 0)
  {
    v41 = a3[5];
    v27 = ~v8;
    v37 = ~v11;
    v38 = ~v13;
    v40 = ~v16;
    v43 = ~(unint64_t)v18;
    v44 = ~(unint64_t)v20;
    v45 = *(_QWORD *)(v14 - 8);
    v46 = a3[8];
    v42 = a3[7];
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v39 = v9;
    v26 = a1;
    v28 = ((unint64_t)a1 + v49) & v27;
    v29 = ((unint64_t)a2 + v49) & v27;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v28, v29, v4);
    v30 = (v29 + v47) & v37;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))((v28 + v47) & v37, v30, v5);
    v31 = (((v28 + v47) & v37) + v50) & v38;
    v32 = (v30 + v50) & v38;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16))(v31, v32, v41);
    v33 = (v31 + v48) & v40;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 16))(v33, (v32 + v48) & v40, v39);
    v34 = (v33 + v51) & v43;
    v35 = (((v32 + v48) & v40) + v51) & v43;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 16))(v34, v35, v42);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v45 + 16))((v34 + v52) & v44, (v35 + v52) & v44, v46);
  }
  else
  {
    v25 = *a2;
    *a1 = *a2;
    v26 = (uint64_t *)(v25 + ((v22 + 16) & ~v22));
    swift_retain();
  }
  return v26;
}

uint64_t sub_1A921E980(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(a2[4] - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t))(v9 + 8))(v10);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(a2[5] - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  (*(void (**)(unint64_t))(v12 + 8))(v13);
  v14 = *(_QWORD *)(v12 + 64);
  v15 = *(_QWORD *)(a2[6] - 8);
  v16 = (v13 + v14 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  (*(void (**)(unint64_t))(v15 + 8))(v16);
  v17 = *(_QWORD *)(v15 + 64);
  v18 = *(_QWORD *)(a2[7] - 8);
  v19 = (v16 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  (*(void (**)(unint64_t))(v18 + 8))(v19);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(a2[8] - 8) + 8))((v19
                                                                                       + *(_QWORD *)(v18 + 64)
                                                                                       + *(unsigned __int8 *)(*(_QWORD *)(a2[8] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[8] - 8) + 80));
}

uint64_t sub_1A921EAA0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = *(_QWORD *)(a3[6] - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v24 + v26;
  v28 = (v27 + v22) & ~v26;
  v29 = (v27 + v23) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v25 + 16))(v28, v29);
  v30 = *(_QWORD *)(v25 + 64);
  v31 = *(_QWORD *)(a3[7] - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = v30 + v32;
  v34 = (v33 + v28) & ~v32;
  v35 = (v33 + v29) & ~v32;
  (*(void (**)(uint64_t, uint64_t))(v31 + 16))(v34, v35);
  v36 = *(_QWORD *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v36 + 16))((*(_QWORD *)(v31 + 64) + *(unsigned __int8 *)(v36 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80), (*(_QWORD *)(v31 + 64) + *(unsigned __int8 *)(v36 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
  return a1;
}

uint64_t sub_1A921EC18(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = *(_QWORD *)(a3[6] - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v24 + v26;
  v28 = (v27 + v22) & ~v26;
  v29 = (v27 + v23) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v25 + 24))(v28, v29);
  v30 = *(_QWORD *)(v25 + 64);
  v31 = *(_QWORD *)(a3[7] - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = v30 + v32;
  v34 = (v33 + v28) & ~v32;
  v35 = (v33 + v29) & ~v32;
  (*(void (**)(uint64_t, uint64_t))(v31 + 24))(v34, v35);
  v36 = *(_QWORD *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v36 + 24))((*(_QWORD *)(v31 + 64) + *(unsigned __int8 *)(v36 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80), (*(_QWORD *)(v31 + 64) + *(unsigned __int8 *)(v36 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
  return a1;
}

uint64_t sub_1A921ED90(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = *(_QWORD *)(a3[6] - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v24 + v26;
  v28 = (v27 + v22) & ~v26;
  v29 = (v27 + v23) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v25 + 32))(v28, v29);
  v30 = *(_QWORD *)(v25 + 64);
  v31 = *(_QWORD *)(a3[7] - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = v30 + v32;
  v34 = (v33 + v28) & ~v32;
  v35 = (v33 + v29) & ~v32;
  (*(void (**)(uint64_t, uint64_t))(v31 + 32))(v34, v35);
  v36 = *(_QWORD *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v36 + 32))((*(_QWORD *)(v31 + 64) + *(unsigned __int8 *)(v36 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80), (*(_QWORD *)(v31 + 64) + *(unsigned __int8 *)(v36 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
  return a1;
}

uint64_t sub_1A921EF08(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 40))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = *(_QWORD *)(a3[6] - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v24 + v26;
  v28 = (v27 + v22) & ~v26;
  v29 = (v27 + v23) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v25 + 40))(v28, v29);
  v30 = *(_QWORD *)(v25 + 64);
  v31 = *(_QWORD *)(a3[7] - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = v30 + v32;
  v34 = (v33 + v28) & ~v32;
  v35 = (v33 + v29) & ~v32;
  (*(void (**)(uint64_t, uint64_t))(v31 + 40))(v34, v35);
  v36 = *(_QWORD *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v36 + 40))((*(_QWORD *)(v31 + 64) + *(unsigned __int8 *)(v36 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80), (*(_QWORD *)(v31 + 64) + *(unsigned __int8 *)(v36 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
  return a1;
}

uint64_t sub_1A921F080(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  unsigned int v27;
  unsigned int v28;
  unint64_t v29;
  char v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v5 = a3[3];
  v6 = *(_QWORD *)(a3[2] - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7)
    v10 = *(_DWORD *)(v6 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  v11 = *(_QWORD *)(a3[4] - 8);
  v12 = *(_DWORD *)(v11 + 84);
  if (v12 > v10)
    v10 = *(_DWORD *)(v11 + 84);
  v13 = *(_QWORD *)(a3[5] - 8);
  v14 = *(_DWORD *)(v13 + 84);
  if (v14 <= v10)
    v15 = v10;
  else
    v15 = *(_DWORD *)(v13 + 84);
  v16 = *(_QWORD *)(a3[6] - 8);
  v17 = *(_DWORD *)(v16 + 84);
  if (v17 > v15)
    v15 = *(_DWORD *)(v16 + 84);
  v18 = *(_QWORD *)(a3[7] - 8);
  v19 = *(unsigned int *)(v18 + 84);
  if (v19 <= v15)
    v20 = v15;
  else
    v20 = *(_DWORD *)(v18 + 84);
  v21 = *(_QWORD *)(a3[8] - 8);
  if (*(_DWORD *)(v21 + 84) <= v20)
    v22 = v20;
  else
    v22 = *(_DWORD *)(v21 + 84);
  if (!a2)
    return 0;
  v23 = *(unsigned __int8 *)(v8 + 80);
  v47 = *(_QWORD *)(v6 + 64) + v23;
  v45 = *(_QWORD *)(v8 + 64);
  v46 = *(unsigned __int8 *)(v11 + 80);
  v24 = *(unsigned __int8 *)(v16 + 80);
  v43 = *(_QWORD *)(v13 + 64) + v24;
  v44 = *(_QWORD *)(v11 + 64);
  v25 = *(unsigned __int8 *)(v18 + 80);
  v42 = *(_QWORD *)(v16 + 64) + v25;
  v40 = *(_QWORD *)(v18 + 64) + *(unsigned __int8 *)(v21 + 80);
  v41 = *(unsigned __int8 *)(v21 + 80);
  v26 = a2 >= v22;
  v27 = a2 - v22;
  if (v27 == 0 || !v26)
  {
LABEL_37:
    if (v22)
    {
      if ((_DWORD)v7 == v22)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 48))(a1, v7);
      v35 = *(unsigned __int8 *)(v13 + 80);
      if ((_DWORD)v9 == v22)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))((v47 + a1) & ~v23, v9, v5);
      v36 = (((v47 + a1) & ~v23) + v45 + v46) & ~v46;
      if (v12 == v22)
        return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v11 + 48))((((v47 + a1) & ~v23) + v45 + v46) & ~v46, *(unsigned int *)(v11 + 84), a3[4]);
      v37 = (v36 + v44 + v35) & ~v35;
      if (v14 == v22)
        return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v13 + 48))((v36 + v44 + v35) & ~v35, *(unsigned int *)(v13 + 84), a3[5]);
      v39 = (v43 + v37) & ~v24;
      if (v17 == v22)
        return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v16 + 48))((v43 + v37) & ~v24, *(unsigned int *)(v16 + 84), a3[6]);
      if ((_DWORD)v19 == v22)
        return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v18 + 48))((v42 + v39) & ~v25, v19, a3[7]);
      return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v21 + 48))((v40 + ((v42 + v39) & ~v25)) & ~v41, *(unsigned int *)(v21 + 84), a3[8]);
    }
    return 0;
  }
  v28 = v27;
  v29 = ((v40
        + ((v42
          + ((v43
            + ((v44 + *(unsigned __int8 *)(v13 + 80) + ((v45 + v46 + (v47 & ~v23)) & ~v46)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))) & ~v24)) & ~v25)) & ~v41)
      + *(_QWORD *)(v21 + 64);
  v30 = 8 * v29;
  if (v29 <= 3)
  {
    v32 = ((v28 + ~(-1 << v30)) >> v30) + 1;
    if (HIWORD(v32))
    {
      v31 = *(_DWORD *)(a1 + v29);
      if (!v31)
        goto LABEL_37;
      goto LABEL_28;
    }
    if (v32 > 0xFF)
    {
      v31 = *(unsigned __int16 *)(a1 + v29);
      if (!*(_WORD *)(a1 + v29))
        goto LABEL_37;
      goto LABEL_28;
    }
    if (v32 < 2)
      goto LABEL_37;
  }
  v31 = *(unsigned __int8 *)(a1 + v29);
  if (!*(_BYTE *)(a1 + v29))
    goto LABEL_37;
LABEL_28:
  v33 = (v31 - 1) << v30;
  if (v29 > 3)
    v33 = 0;
  if ((_DWORD)v29)
  {
    if (v29 <= 3)
      v34 = ((v40
            + ((v42
              + ((v43
                + ((v44 + *(unsigned __int8 *)(v13 + 80) + ((v45 + v46 + (v47 & ~(_DWORD)v23)) & ~(_DWORD)v46)) & ~*(unsigned __int8 *)(v13 + 80))) & ~(_DWORD)v24)) & ~(_DWORD)v25)) & ~(_DWORD)v41)
          + *(_DWORD *)(v21 + 64);
    else
      v34 = 4;
    __asm { BR              X11 }
  }
  return v22 + v33 + 1;
}

void sub_1A921F4B0(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v5 = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(a4[3] - 8);
  v7 = *(_QWORD *)(a4[4] - 8);
  v8 = *(_QWORD *)(a4[5] - 8);
  v9 = *(_QWORD *)(a4[6] - 8);
  v10 = *(_QWORD *)(a4[7] - 8);
  v11 = *(_QWORD *)(a4[8] - 8);
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = ((*(_QWORD *)(v10 + 64)
        + *(unsigned __int8 *)(v11 + 80)
        + ((*(_QWORD *)(v9 + 64)
          + v13
          + ((*(_QWORD *)(v8 + 64)
            + *(unsigned __int8 *)(v9 + 80)
            + ((*(_QWORD *)(v7 + 64)
              + v12
              + ((*(_QWORD *)(v6 + 64)
                + *(unsigned __int8 *)(v7 + 80)
                + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~v12)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~v13)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
      + *(_QWORD *)(v11 + 64);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v15 = *(_DWORD *)(v5 + 84);
  else
    v15 = *(_DWORD *)(v6 + 84);
  if (*(_DWORD *)(v7 + 84) > v15)
    v15 = *(_DWORD *)(v7 + 84);
  if (*(_DWORD *)(v8 + 84) > v15)
    v15 = *(_DWORD *)(v8 + 84);
  if (*(_DWORD *)(v9 + 84) > v15)
    v15 = *(_DWORD *)(v9 + 84);
  if (*(_DWORD *)(v10 + 84) > v15)
    v15 = *(_DWORD *)(v10 + 84);
  if (*(_DWORD *)(v11 + 84) > v15)
    v15 = *(_DWORD *)(v11 + 84);
  if (a3 <= v15)
  {
    v16 = 0u;
    if (v15 >= a2)
      goto LABEL_30;
  }
  else if (v14 <= 3)
  {
    v18 = ((a3 - v15 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v18))
    {
      v16 = 4u;
    }
    else
    {
      v16 = v18 > 1;
      if (v18 >= 0x100)
        v16 = 2;
    }
    if (v15 >= a2)
LABEL_30:
      __asm { BR              X9 }
  }
  else
  {
    v16 = 1u;
    if (v15 >= a2)
      goto LABEL_30;
  }
  v17 = ~v15 + a2;
  if (v14 < 4)
  {
    if ((_DWORD)v14)
    {
      v19 = v17 & ~(-1 << (8 * v14));
      bzero(a1, v14);
      if ((_DWORD)v14 == 3)
      {
        *a1 = v19;
        *((_BYTE *)a1 + 2) = BYTE2(v19);
      }
      else if ((_DWORD)v14 == 2)
      {
        *a1 = v19;
      }
      else
      {
        *(_BYTE *)a1 = v19;
      }
    }
  }
  else
  {
    bzero(a1, v14);
    *(_DWORD *)a1 = v17;
  }
  __asm { BR              X10 }
}

void sub_1A921F810()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v2 + v0) = v1;
}

void sub_1A921F818()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v2 + v0) = v1;
}

uint64_t sub_1A921F8E8()
{
  return sub_1A921F9CC(&OBJC_IVAR___MTRecommendationModule_id);
}

uint64_t sub_1A921F900(uint64_t a1, uint64_t a2)
{
  return sub_1A921FA9C(a1, a2, &OBJC_IVAR___MTRecommendationModule_id);
}

uint64_t (*sub_1A921F90C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1A921F95C()
{
  void *v0;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v0 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A921F9C0()
{
  return sub_1A921F9CC(&OBJC_IVAR___MTRecommendationModule_type);
}

uint64_t sub_1A921F9CC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1A921FA28(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  v6 = sub_1A93F8040();
  v8 = v7;
  v9 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  *v9 = v6;
  v9[1] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A921FA90(uint64_t a1, uint64_t a2)
{
  return sub_1A921FA9C(a1, a2, &OBJC_IVAR___MTRecommendationModule_type);
}

uint64_t sub_1A921FA9C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)(v3 + *a3);
  swift_beginAccess();
  *v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A921FAF4(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a1;
  v5 = a1[1];
  v7 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A921FB58())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void *RecommendationModule.attributes.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___MTRecommendationModule_attributes);
  v2 = v1;
  return v1;
}

uint64_t sub_1A921FBD8()
{
  return sub_1A9220A84();
}

uint64_t sub_1A921FBE4(uint64_t a1)
{
  return sub_1A9220AD4(a1, &OBJC_IVAR___MTRecommendationModule_shows);
}

uint64_t (*sub_1A921FBF0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A921FC34(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v6 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A921FC98()
{
  return sub_1A9220A84();
}

uint64_t sub_1A921FCA4(uint64_t a1)
{
  return sub_1A9220AD4(a1, &OBJC_IVAR___MTRecommendationModule_episodes);
}

uint64_t (*sub_1A921FCB0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

BOOL sub_1A921FCF4()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;

  v1 = (unint64_t *)(v0 + OBJC_IVAR___MTRecommendationModule_shows);
  swift_beginAccess();
  v2 = *v1;
  if (v2)
  {
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      v4 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
      if (v4)
        return 0;
    }
    else if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      return 0;
    }
  }
  v5 = (unint64_t *)(v0 + OBJC_IVAR___MTRecommendationModule_episodes);
  swift_beginAccess();
  v6 = *v5;
  if (v6)
  {
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
  }
  else
  {
    v7 = 0;
  }
  return v7 == 0;
}

uint64_t sub_1A921FE00()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A921FE24 + 4 * byte_1A9412DA0[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1A921FE24()
{
  return 1701869940;
}

uint64_t sub_1A921FE34()
{
  return 0x7475626972747461;
}

uint64_t sub_1A921FE50()
{
  return 0x73776F6873;
}

uint64_t sub_1A921FE64()
{
  return 0x7365646F73697065;
}

uint64_t sub_1A921FE7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9222310(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A921FEA0()
{
  sub_1A92202A8();
  return sub_1A93F945C();
}

uint64_t sub_1A921FEC8()
{
  sub_1A92202A8();
  return sub_1A93F9468();
}

id RecommendationModule.__deallocating_deinit()
{
  return sub_1A91D2A44(type metadata accessor for RecommendationModule);
}

uint64_t type metadata accessor for RecommendationModule()
{
  return objc_opt_self();
}

uint64_t sub_1A921FF8C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAF50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A92202A8();
  sub_1A93F93D8();
  swift_beginAccess();
  v17 = 0;
  swift_bridgeObjectRetain();
  sub_1A93F9000();
  if (v2)
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    LOBYTE(v16) = 1;
    swift_bridgeObjectRetain();
    sub_1A93F9000();
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v3 + OBJC_IVAR___MTRecommendationModule_attributes);
    LOBYTE(v15) = 2;
    type metadata accessor for RecommendationModuleAttributes();
    sub_1A9066CE8(&qword_1EEABAF60, v9, (uint64_t (*)(uint64_t))type metadata accessor for RecommendationModuleAttributes, (uint64_t)&protocol conformance descriptor for RecommendationModuleAttributes);
    sub_1A93F8FE8();
    v10 = (uint64_t *)(v3 + OBJC_IVAR___MTRecommendationModule_shows);
    swift_beginAccess();
    v15 = *v10;
    LOBYTE(v14) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAF68);
    sub_1A9220774(&qword_1EEABAF70, (unint64_t *)&qword_1ED2A2108, (uint64_t)&protocol conformance descriptor for ServerPodcastBase, MEMORY[0x1E0DEAF10]);
    sub_1A93F8FE8();
    v11 = (uint64_t *)(v3 + OBJC_IVAR___MTRecommendationModule_episodes);
    swift_beginAccess();
    v14 = *v11;
    v13[7] = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAF78);
    sub_1A92207FC((unint64_t *)&qword_1EEABAF80, &qword_1EEABAF88, (uint64_t)&protocol conformance descriptor for ServerPodcastEpisode, MEMORY[0x1E0DEAF10]);
    sub_1A93F8FE8();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
}

unint64_t sub_1A92202A8()
{
  unint64_t result;

  result = qword_1EEABAF58;
  if (!qword_1EEABAF58)
  {
    result = MEMORY[0x1AF414014](&unk_1A941326C, &type metadata for RecommendationModule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABAF58);
  }
  return result;
}

uint64_t type metadata accessor for RecommendationModuleAttributes()
{
  return objc_opt_self();
}

id RecommendationModule.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return RecommendationModule.init(from:)(a1);
}

id RecommendationModule.init(from:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  objc_class *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  objc_super v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAF90);
  v3 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = a1;
  v28 = &v1[OBJC_IVAR___MTRecommendationModule_shows];
  *(_QWORD *)v28 = 0;
  v29 = &v1[OBJC_IVAR___MTRecommendationModule_episodes];
  *(_QWORD *)&v1[OBJC_IVAR___MTRecommendationModule_episodes] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A92202A8();
  v6 = v1;
  v7 = v30;
  sub_1A93F93C0();
  if (v7)
  {
    v24 = v6;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    type metadata accessor for RecommendationModule();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v8 = v3;
    LOBYTE(v33) = 0;
    v9 = v5;
    v10 = sub_1A93F8F4C();
    v12 = v6;
    v13 = (uint64_t *)&v6[OBJC_IVAR___MTRecommendationModule_id];
    *v13 = v10;
    v13[1] = v14;
    LOBYTE(v33) = 1;
    v15 = sub_1A93F8F4C();
    v16 = (uint64_t *)&v6[OBJC_IVAR___MTRecommendationModule_type];
    *v16 = v15;
    v16[1] = v17;
    type metadata accessor for RecommendationModuleAttributes();
    LOBYTE(v32) = 2;
    sub_1A9066CE8(&qword_1EEABAF98, v18, (uint64_t (*)(uint64_t))type metadata accessor for RecommendationModuleAttributes, (uint64_t)&protocol conformance descriptor for RecommendationModuleAttributes);
    sub_1A93F8F34();
    *(_QWORD *)&v6[OBJC_IVAR___MTRecommendationModule_attributes] = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAF68);
    LOBYTE(v33) = 3;
    sub_1A9220774(&qword_1EEABAFA0, qword_1ED2A2110, (uint64_t)&protocol conformance descriptor for ServerPodcastBase, MEMORY[0x1E0DEAF40]);
    sub_1A93F8F34();
    v19 = v32;
    v20 = v28;
    swift_beginAccess();
    *(_QWORD *)v20 = v19;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAF78);
    LOBYTE(v32) = 4;
    sub_1A92207FC((unint64_t *)&qword_1EEABAFA8, qword_1ED2A2D58, (uint64_t)&protocol conformance descriptor for ServerPodcastEpisode, MEMORY[0x1E0DEAF40]);
    sub_1A93F8F34();
    v21 = v29;
    v22 = v34;
    swift_beginAccess();
    *(_QWORD *)v21 = v22;

    swift_bridgeObjectRelease();
    v23 = (objc_class *)type metadata accessor for RecommendationModule();
    v31.receiver = v12;
    v31.super_class = v23;
    v24 = objc_msgSendSuper2(&v31, sel_init);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v9, v26);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  }
  return v24;
}

uint64_t sub_1A9220774(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABAF68);
    v10 = sub_1A9066CE8(a2, 255, (uint64_t (*)(uint64_t))type metadata accessor for ServerPodcast, a3);
    result = MEMORY[0x1AF414014](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A92207FC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABAF78);
    v10 = sub_1A9066CE8(a2, 255, (uint64_t (*)(uint64_t))type metadata accessor for ServerPodcastEpisode, a3);
    result = MEMORY[0x1AF414014](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

id sub_1A9220884@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;
  id result;

  v5 = objc_allocWithZone((Class)type metadata accessor for RecommendationModule());
  result = RecommendationModule.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A92208D4(_QWORD *a1)
{
  return sub_1A921FF8C(a1);
}

void *RecommendationModuleAttributes.title.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___MTRecommendationModuleAttributes_title);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void RecommendationModuleAttributes.title.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___MTRecommendationModuleAttributes_title);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*RecommendationModuleAttributes.title.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t RecommendationModuleAttributes.resourceTypes.getter()
{
  return sub_1A9220A84();
}

uint64_t sub_1A9220A84()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t RecommendationModuleAttributes.resourceTypes.setter(uint64_t a1)
{
  return sub_1A9220AD4(a1, &OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes);
}

uint64_t sub_1A9220AD4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  swift_beginAccess();
  *v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*RecommendationModuleAttributes.resourceTypes.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id RecommendationModuleAttributes.init()()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR___MTRecommendationModuleAttributes_title] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t sub_1A9220C04()
{
  _BYTE *v0;

  if (*v0)
    return 0x656372756F736572;
  else
    return 0x656C746974;
}

uint64_t sub_1A9220C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9222508(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9220C6C()
{
  sub_1A9220EBC();
  return sub_1A93F945C();
}

uint64_t sub_1A9220C94()
{
  sub_1A9220EBC();
  return sub_1A93F9468();
}

uint64_t RecommendationModuleAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAFC0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9220EBC();
  sub_1A93F93D8();
  v9 = (uint64_t *)(v3 + OBJC_IVAR___MTRecommendationModuleAttributes_title);
  swift_beginAccess();
  v15 = *v9;
  LOBYTE(v14) = 0;
  type metadata accessor for RecommendationModuleTitle();
  sub_1A9066CE8(&qword_1EEABAFD0, v10, (uint64_t (*)(uint64_t))type metadata accessor for RecommendationModuleTitle, (uint64_t)&protocol conformance descriptor for RecommendationModuleTitle);
  sub_1A93F8FE8();
  if (!v2)
  {
    v11 = (uint64_t *)(v3 + OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes);
    swift_beginAccess();
    v14 = *v11;
    v13[7] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAFD8);
    sub_1A9220F20(&qword_1EEABAFE0, (uint64_t (*)(void))sub_1A9220F88, MEMORY[0x1E0DEAF10]);
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A9220EBC()
{
  unint64_t result;

  result = qword_1EEABAFC8;
  if (!qword_1EEABAFC8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941321C, &type metadata for RecommendationModuleAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABAFC8);
  }
  return result;
}

uint64_t type metadata accessor for RecommendationModuleTitle()
{
  return objc_opt_self();
}

uint64_t sub_1A9220F20(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABAFD8);
    v8 = a2();
    result = MEMORY[0x1AF414014](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A9220F88()
{
  unint64_t result;

  result = qword_1EEABAFE8;
  if (!qword_1EEABAFE8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequest.ContentType, &type metadata for MediaRequest.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EEABAFE8);
  }
  return result;
}

id RecommendationModuleAttributes.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return RecommendationModuleAttributes.init(from:)(a1);
}

id RecommendationModuleAttributes.init(from:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  id *v5;
  id *v6;
  uint64_t v7;
  char *v8;
  void **v9;
  objc_class *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void **v16;
  void *v17;
  void ***v19;
  id v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id *v24;
  uint64_t ObjectType;
  void **v26;
  objc_super v27;
  void *v28;
  char v29;
  void **v30;

  ObjectType = swift_getObjectType();
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAFF0);
  v21 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (id *)&v1[OBJC_IVAR___MTRecommendationModuleAttributes_title];
  *(_QWORD *)&v1[OBJC_IVAR___MTRecommendationModuleAttributes_title] = 0;
  v6 = (id *)&v1[OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes];
  *(_QWORD *)&v1[OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes] = 0;
  v7 = a1[3];
  v24 = (id *)a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1A9220EBC();
  v8 = v1;
  v22 = v4;
  v10 = (objc_class *)ObjectType;
  v9 = v26;
  sub_1A93F93C0();
  if (v9)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    v20 = *v6;
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v26 = v5;
    v24 = v6;
    v11 = v21;
    type metadata accessor for RecommendationModuleTitle();
    v29 = 0;
    sub_1A9066CE8(&qword_1EEABAFF8, v12, (uint64_t (*)(uint64_t))type metadata accessor for RecommendationModuleTitle, (uint64_t)&protocol conformance descriptor for RecommendationModuleTitle);
    v13 = v22;
    v14 = v23;
    sub_1A93F8F34();
    v15 = v28;
    v16 = v26;
    swift_beginAccess();
    v17 = *v16;
    *v16 = v15;

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABAFD8);
    LOBYTE(v28) = 1;
    sub_1A9220F20(&qword_1EEABB000, (uint64_t (*)(void))sub_1A92212C0, MEMORY[0x1E0DEAF40]);
    sub_1A93F8F34();
    v26 = v30;
    v19 = (void ***)v24;
    swift_beginAccess();
    *v19 = v26;

    swift_bridgeObjectRelease();
    v27.receiver = v8;
    v27.super_class = v10;
    v20 = objc_msgSendSuper2(&v27, sel_init);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v14);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v20;
}

unint64_t sub_1A92212C0()
{
  unint64_t result;

  result = qword_1EEABB008;
  if (!qword_1EEABB008)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequest.ContentType, &type metadata for MediaRequest.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EEABB008);
  }
  return result;
}

uint64_t sub_1A9221304@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A92219E0(a1, (uint64_t (*)(uint64_t))RecommendationModuleAttributes.init(from:), a2);
}

uint64_t sub_1A9221320(_QWORD *a1)
{
  return RecommendationModuleAttributes.encode(to:)(a1);
}

uint64_t RecommendationModuleTitle.stringForDisplay.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___MTRecommendationModuleTitle_stringForDisplay);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t RecommendationModuleTitle.stringForDisplay.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___MTRecommendationModuleTitle_stringForDisplay);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*RecommendationModuleTitle.stringForDisplay.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id RecommendationModuleTitle.init()()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = &v0[OBJC_IVAR___MTRecommendationModuleTitle_stringForDisplay];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

unint64_t sub_1A92215B4()
{
  return 0xD000000000000010;
}

uint64_t sub_1A92215D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9222614(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A92215F8()
{
  sub_1A922177C();
  return sub_1A93F945C();
}

uint64_t sub_1A9221620()
{
  sub_1A922177C();
  return sub_1A93F9468();
}

uint64_t RecommendationModuleTitle.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABB018);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A922177C();
  sub_1A93F93D8();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1A93F8FB8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A922177C()
{
  unint64_t result;

  result = qword_1EEABB020;
  if (!qword_1EEABB020)
  {
    result = MEMORY[0x1AF414014](&unk_1A94131CC, &type metadata for RecommendationModuleTitle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABB020);
  }
  return result;
}

id RecommendationModuleTitle.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return RecommendationModuleTitle.init(from:)(a1);
}

id RecommendationModuleTitle.init(from:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  id v7;
  char *v8;
  objc_class *v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  objc_super v21;
  uint64_t v22;

  ObjectType = swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABB028);
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)&v1[OBJC_IVAR___MTRecommendationModuleTitle_stringForDisplay];
  *v6 = 0;
  v6[1] = 0;
  v7 = (id)a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A922177C();
  v8 = v1;
  v17 = v5;
  v9 = (objc_class *)ObjectType;
  v10 = v22;
  sub_1A93F93C0();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v11 = v17;
    v13 = sub_1A93F8F04();
    v15 = v14;
    swift_beginAccess();
    *v6 = v13;
    v6[1] = v15;

    swift_bridgeObjectRelease();
    v21.receiver = v8;
    v21.super_class = v9;
    v7 = objc_msgSendSuper2(&v21, sel_init);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v19);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_1A92219C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A92219E0(a1, (uint64_t (*)(uint64_t))RecommendationModuleTitle.init(from:), a2);
}

uint64_t sub_1A92219E0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  objc_class *v3;
  uint64_t v4;
  id v8;
  uint64_t result;

  v8 = objc_allocWithZone(v3);
  result = a2(a1);
  if (!v4)
    *a3 = result;
  return result;
}

uint64_t sub_1A9221A38(_QWORD *a1)
{
  return RecommendationModuleTitle.encode(to:)(a1);
}

id RecentlyPlayedModule.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id RecentlyPlayedModule.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecentlyPlayedModule();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for RecentlyPlayedModule()
{
  return objc_opt_self();
}

id RecentlyPlayedModule.__deallocating_deinit()
{
  return sub_1A91D2A44(type metadata accessor for RecentlyPlayedModule);
}

uint64_t sub_1A9221B10@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___MTRecommendationModule_id, a2);
}

uint64_t sub_1A9221B1C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A921FAF4(a1, a2, a3, a4, &OBJC_IVAR___MTRecommendationModule_id);
}

uint64_t sub_1A9221B38@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___MTRecommendationModule_type, a2);
}

uint64_t keypath_getTm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A9221B94(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A921FAF4(a1, a2, a3, a4, &OBJC_IVAR___MTRecommendationModule_type);
}

uint64_t sub_1A9221BB0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_3Tm(a1, &OBJC_IVAR___MTRecommendationModule_shows, a2);
}

uint64_t sub_1A9221BBC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A921FC34(a1, a2, a3, a4, &OBJC_IVAR___MTRecommendationModule_shows);
}

uint64_t sub_1A9221BD8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_3Tm(a1, &OBJC_IVAR___MTRecommendationModule_episodes, a2);
}

uint64_t keypath_get_3Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A9221C34(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A921FC34(a1, a2, a3, a4, &OBJC_IVAR___MTRecommendationModule_episodes);
}

uint64_t method lookup function for RecommendationModule()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecommendationModule.id.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of RecommendationModule.id.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of RecommendationModule.id.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of RecommendationModule.type.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of RecommendationModule.type.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of RecommendationModule.type.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of RecommendationModule.shows.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of RecommendationModule.shows.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of RecommendationModule.shows.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of RecommendationModule.episodes.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of RecommendationModule.episodes.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of RecommendationModule.episodes.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of RecommendationModule.isEmpty.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of RecommendationModule.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of RecommendationModule.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t method lookup function for RecommendationModuleAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecommendationModuleAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for RecommendationModuleTitle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecommendationModuleTitle.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t storeEnumTagSinglePayload for RecommendationModuleTitle.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A9221E94 + 4 * byte_1A9412DA5[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A9221EB4 + 4 * byte_1A9412DAA[v4]))();
}

_BYTE *sub_1A9221E94(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A9221EB4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9221EBC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9221EC4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9221ECC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9221ED4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RecommendationModuleTitle.CodingKeys()
{
  return &type metadata for RecommendationModuleTitle.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for RecommendationModuleAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A9221F3C + 4 * byte_1A9412DB4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A9221F70 + 4 * byte_1A9412DAF[v4]))();
}

uint64_t sub_1A9221F70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9221F78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9221F80);
  return result;
}

uint64_t sub_1A9221F8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9221F94);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A9221F98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9221FA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecommendationModuleAttributes.CodingKeys()
{
  return &type metadata for RecommendationModuleAttributes.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for RecommendationModule.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A9222008 + 4 * byte_1A9412DBE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A922203C + 4 * byte_1A9412DB9[v4]))();
}

uint64_t sub_1A922203C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9222044(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A922204CLL);
  return result;
}

uint64_t sub_1A9222058(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9222060);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A9222064(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A922206C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecommendationModule.CodingKeys()
{
  return &type metadata for RecommendationModule.CodingKeys;
}

unint64_t sub_1A922208C()
{
  unint64_t result;

  result = qword_1EEABB0D0;
  if (!qword_1EEABB0D0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9413034, &type metadata for RecommendationModule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABB0D0);
  }
  return result;
}

unint64_t sub_1A92220D4()
{
  unint64_t result;

  result = qword_1EEABB0D8;
  if (!qword_1EEABB0D8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94130EC, &type metadata for RecommendationModuleAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABB0D8);
  }
  return result;
}

unint64_t sub_1A922211C()
{
  unint64_t result;

  result = qword_1EEABB0E0;
  if (!qword_1EEABB0E0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94131A4, &type metadata for RecommendationModuleTitle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABB0E0);
  }
  return result;
}

unint64_t sub_1A9222164()
{
  unint64_t result;

  result = qword_1EEABB0E8;
  if (!qword_1EEABB0E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9413114, &type metadata for RecommendationModuleTitle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABB0E8);
  }
  return result;
}

unint64_t sub_1A92221AC()
{
  unint64_t result;

  result = qword_1EEABB0F0;
  if (!qword_1EEABB0F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A941313C, &type metadata for RecommendationModuleTitle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABB0F0);
  }
  return result;
}

unint64_t sub_1A92221F4()
{
  unint64_t result;

  result = qword_1EEABB0F8;
  if (!qword_1EEABB0F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941305C, &type metadata for RecommendationModuleAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABB0F8);
  }
  return result;
}

unint64_t sub_1A922223C()
{
  unint64_t result;

  result = qword_1EEABB100;
  if (!qword_1EEABB100)
  {
    result = MEMORY[0x1AF414014](&unk_1A9413084, &type metadata for RecommendationModuleAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABB100);
  }
  return result;
}

unint64_t sub_1A9222284()
{
  unint64_t result;

  result = qword_1EEABB108;
  if (!qword_1EEABB108)
  {
    result = MEMORY[0x1AF414014](&unk_1A9412FA4, &type metadata for RecommendationModule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABB108);
  }
  return result;
}

unint64_t sub_1A92222CC()
{
  unint64_t result;

  result = qword_1EEABB110;
  if (!qword_1EEABB110)
  {
    result = MEMORY[0x1AF414014](&unk_1A9412FCC, &type metadata for RecommendationModule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABB110);
  }
  return result;
}

uint64_t sub_1A9222310(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73776F6873 && a2 == 0xE500000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7365646F73697065 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A9222508(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F736572 && a2 == 0xED00007365707954)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A9222614(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001A94496C0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t MetricsEventVersion.debugDescription.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  sub_1A93F9060();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD00000000000001ELL;
}

unint64_t sub_1A9222748()
{
  return MetricsEventVersion.debugDescription.getter();
}

uint64_t MetricsEventVersion.description.getter()
{
  sub_1A922278C();
  return sub_1A93F8B38();
}

unint64_t sub_1A922278C()
{
  unint64_t result;

  result = qword_1EEABB118;
  if (!qword_1EEABB118)
  {
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEBBD8], MEMORY[0x1E0DEBB98]);
    atomic_store(result, (unint64_t *)&qword_1EEABB118);
  }
  return result;
}

uint64_t sub_1A92227D0()
{
  sub_1A922278C();
  return sub_1A93F8B38();
}

uint64_t MetricsEventVersion.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_1A93F90FC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1A92228C8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  v5 = sub_1A93F90FC();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v5;
  return result;
}

uint64_t MetricsEventVersion.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F9168();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t sub_1A9222A14(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F9168();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsEventVersion.v1.getter()
{
  return 1;
}

uint64_t static MetricsEventVersion.v2.getter()
{
  return 2;
}

uint64_t static MetricsEventVersion.v3.getter()
{
  return 3;
}

uint64_t static MetricsEventVersion.v4.getter()
{
  return 4;
}

uint64_t static MetricsEventVersion.v5.getter()
{
  return 5;
}

unint64_t sub_1A9222AD0()
{
  unint64_t result;

  result = qword_1EEABB120;
  if (!qword_1EEABB120)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsEventVersion, &type metadata for MetricsEventVersion);
    atomic_store(result, (unint64_t *)&qword_1EEABB120);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEventVersion()
{
  return &type metadata for MetricsEventVersion;
}

double sub_1A9222B24(uint64_t a1)
{
  uint64_t v2;
  BOOL v3;
  unint64_t v4;
  mach_timebase_info v6[2];

  v6[1] = *(mach_timebase_info *)MEMORY[0x1E0C80C00];
  v2 = mach_absolute_time();
  v3 = v2 >= a1;
  v4 = v2 - a1;
  if (!v3)
  {
    __break(1u);
LABEL_6:
    __break(1u);
LABEL_7:
    __break(1u);
  }
  v6[0] = 0;
  mach_timebase_info(v6);
  if (!is_mul_ok(v4, v6[0].numer))
    goto LABEL_6;
  if (!v6[0].denom)
    goto LABEL_7;
  return (double)(v4 * v6[0].numer / v6[0].denom) / 1000000000.0;
}

uint64_t sub_1A9222BCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC900);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - v7;
  v9 = v1 + OBJC_IVAR____TtC18PodcastsFoundation20PodcastsMediaLibrary____lazy_storage___signpostID;
  swift_beginAccess();
  sub_1A9062170(v9, (uint64_t)v8, &qword_1ED2AC900);
  v10 = sub_1A93F75FC();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_1A905FD54((uint64_t)v8, &qword_1ED2AC900);
  if (qword_1EEAB6EB8 != -1)
    swift_once();
  swift_beginAccess();
  v12 = (id)qword_1EEABA8E0;
  swift_retain();
  sub_1A93F75CC();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess();
  sub_1A922708C((uint64_t)v5, v9, &qword_1ED2AC900);
  return swift_endAccess();
}

_OWORD *PodcastsMediaLibrary.__allocating_init(config:)(_OWORD *a1)
{
  _OWORD *v2;
  char *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v2 = (_OWORD *)swift_allocObject();
  v3 = (char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation20PodcastsMediaLibrary____lazy_storage___signpostID;
  v4 = sub_1A93F75FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = a1[3];
  v2[3] = a1[2];
  v2[4] = v5;
  v6 = a1[5];
  v2[5] = a1[4];
  v2[6] = v6;
  v7 = a1[1];
  v2[1] = *a1;
  v2[2] = v7;
  return v2;
}

_OWORD *PodcastsMediaLibrary.init(config:)(_OWORD *a1)
{
  _OWORD *v1;
  char *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = (char *)v1 + OBJC_IVAR____TtC18PodcastsFoundation20PodcastsMediaLibrary____lazy_storage___signpostID;
  v4 = sub_1A93F75FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = a1[3];
  v1[3] = a1[2];
  v1[4] = v5;
  v6 = a1[5];
  v1[5] = a1[4];
  v1[6] = v6;
  v7 = a1[1];
  v1[1] = *a1;
  v1[2] = v7;
  return v1;
}

uint64_t sub_1A9222E9C(__int128 *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  void (*v32)(_QWORD, _QWORD);
  id v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  void (*v58)(__int128 *, uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v74[2];
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(_QWORD, _QWORD);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88[23];
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  _OWORD v98[3];
  _QWORD v99[3];
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  _OWORD v111[2];
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  _OWORD v121[3];

  v83 = a2;
  v86 = sub_1A93F75FC();
  v80 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v85 = (uint64_t)v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v82 = (char *)v74 - v7;
  MEMORY[0x1E0C80A78](v8);
  v79 = (uint64_t)v74 - v9;
  v81 = v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v74 - v12;
  v87 = swift_allocObject();
  v77 = a3;
  *(_QWORD *)(v87 + 16) = a3;
  v14 = a1[8];
  v15 = a1[9];
  v16 = a1[6];
  v119 = a1[7];
  v120 = v14;
  v121[0] = v15;
  *(_OWORD *)((char *)v121 + 10) = *(__int128 *)((char *)a1 + 154);
  v17 = a1[5];
  v116 = a1[4];
  v117 = v17;
  v118 = v16;
  v18 = a1[1];
  v112 = *a1;
  v113 = v18;
  v19 = a1[3];
  v114 = a1[2];
  v115 = v19;
  v84 = mach_absolute_time();
  if (qword_1EEAB6D68 != -1)
    swift_once();
  v20 = sub_1A93F7698();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EEABA690);
  sub_1A912D274((uint64_t)&v112);
  sub_1A912D274((uint64_t)&v112);
  v76 = v21;
  v22 = sub_1A93F7674();
  v23 = sub_1A93F87B4();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v78 = (void (*)(_QWORD, _QWORD))v25;
    v75 = v24;
    *(_DWORD *)v24 = 136315138;
    v88[0] = v25;
    v74[1] = v24 + 4;
    v97 = v120;
    v98[0] = v121[0];
    *(_OWORD *)((char *)v98 + 10) = *(_OWORD *)((char *)v121 + 10);
    v93 = v116;
    v94 = v117;
    v95 = v118;
    v96 = v119;
    v89 = v112;
    v90 = v113;
    v91 = v114;
    v92 = v115;
    sub_1A938CF04();
    v26 = v13;
    v27 = MEMORY[0x1AF412034]();
    v29 = v28;
    swift_bridgeObjectRelease();
    v30 = v27;
    v13 = v26;
    *(_QWORD *)&v89 = sub_1A906436C(v30, v29, v88);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A912D5B8((uint64_t)&v112);
    sub_1A912D5B8((uint64_t)&v112);
    v31 = v75;
    _os_log_impl(&dword_1A904E000, v22, v23, "Calling media collection with request: %s", v75, 0xCu);
    v32 = v78;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v32, -1, -1);
    MEMORY[0x1AF41411C](v31, -1, -1);
  }
  else
  {
    sub_1A912D5B8((uint64_t)&v112);
    sub_1A912D5B8((uint64_t)&v112);
  }

  sub_1A93F8940();
  if (qword_1EEAB6EB8 != -1)
    swift_once();
  swift_beginAccess();
  v33 = (id)qword_1EEABA8E0;
  v34 = v83;
  sub_1A9222BCC((uint64_t)v13);
  sub_1A93F75C0();

  v35 = v80;
  v36 = v13;
  v37 = v86;
  v78 = *(void (**)(_QWORD, _QWORD))(v80 + 8);
  v78(v36, v86);
  v38 = v79;
  sub_1A9222BCC(v79);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 32);
  v40 = v82;
  v39(v82, v38, v37);
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v85, v40, v37);
  v41 = (*(unsigned __int8 *)(v35 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v42 = swift_allocObject();
  v43 = v87;
  *(_QWORD *)(v42 + 16) = sub_1A922701C;
  *(_QWORD *)(v42 + 24) = v43;
  *(_QWORD *)(v42 + 32) = v84;
  *(_QWORD *)(v42 + 40) = "mediaCollection(for:completion:)";
  *(_QWORD *)(v42 + 48) = 32;
  *(_BYTE *)(v42 + 56) = 2;
  v39((char *)(v42 + v41), (uint64_t)v40, v37);
  v97 = v120;
  v98[0] = v121[0];
  *(_OWORD *)((char *)v98 + 10) = *(_OWORD *)((char *)v121 + 10);
  v93 = v116;
  v94 = v117;
  v95 = v118;
  v96 = v119;
  v89 = v112;
  v90 = v113;
  v91 = v114;
  v92 = v115;
  swift_retain();
  sub_1A939D6C4(v34 + 2);
  v44 = v34[5];
  v45 = v34[6];
  __swift_project_boxed_opaque_existential_1(v34 + 2, v44);
  v46 = BYTE8(v111[1]);
  (*(void (**)(__int128 *__return_ptr, _QWORD, uint64_t, uint64_t))(v45 + 8))(&v89, BYTE8(v111[1]), v44, v45);
  if (*((_QWORD *)&v90 + 1))
  {
    sub_1A905D4AC(&v89, (uint64_t)v99);
    v47 = v100;
    v48 = v101;
    __swift_project_boxed_opaque_existential_1(v99, v100);
    v97 = v110;
    v98[0] = v111[0];
    *(_OWORD *)((char *)v98 + 10) = *(_OWORD *)((char *)v111 + 10);
    v93 = v106;
    v94 = v107;
    v95 = v108;
    v96 = v109;
    v89 = v102;
    v90 = v103;
    v91 = v104;
    v92 = v105;
    if (((*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v48 + 16))(&v89, v47, v48) & 1) != 0)
    {
      v78(v85, v86);
      v49 = v100;
      v50 = v101;
      __swift_project_boxed_opaque_existential_1(v99, v100);
      v97 = v110;
      v98[0] = v111[0];
      *(_OWORD *)((char *)v98 + 10) = *(_OWORD *)((char *)v111 + 10);
      v93 = v106;
      v94 = v107;
      v95 = v108;
      v96 = v109;
      v89 = v102;
      v90 = v103;
      v91 = v104;
      v92 = v105;
      v51 = swift_allocObject();
      v52 = v108;
      *(_OWORD *)(v51 + 136) = v109;
      v53 = v111[0];
      *(_OWORD *)(v51 + 152) = v110;
      *(_OWORD *)(v51 + 168) = v53;
      *(_OWORD *)(v51 + 178) = *(_OWORD *)((char *)v111 + 10);
      v54 = v104;
      *(_OWORD *)(v51 + 72) = v105;
      v55 = v107;
      *(_OWORD *)(v51 + 88) = v106;
      *(_OWORD *)(v51 + 104) = v55;
      *(_OWORD *)(v51 + 120) = v52;
      v56 = v103;
      *(_OWORD *)(v51 + 24) = v102;
      *(_OWORD *)(v51 + 40) = v56;
      *(_QWORD *)(v51 + 16) = v83;
      *(_OWORD *)(v51 + 56) = v54;
      *(_QWORD *)(v51 + 200) = sub_1A9226818;
      *(_QWORD *)(v51 + 208) = v42;
      v57 = v87;
      *(_QWORD *)(v51 + 216) = sub_1A922701C;
      *(_QWORD *)(v51 + 224) = v57;
      v58 = *(void (**)(__int128 *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v50 + 8);
      swift_retain();
      sub_1A912D274((uint64_t)&v102);
      swift_retain();
      swift_retain();
      v58(&v89, sub_1A9226820, v51, v49, v50);
      swift_release();
      swift_release();
      sub_1A912D5B8((uint64_t)&v102);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v99);
    }
    else
    {
      v68 = sub_1A93F7674();
      v69 = sub_1A93F879C();
      if (os_log_type_enabled(v68, v69))
      {
        v70 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v70 = 0;
        _os_log_impl(&dword_1A904E000, v68, v69, "No provider for request found", v70, 2u);
        MEMORY[0x1AF41411C](v70, -1, -1);
      }

      *(_QWORD *)&v89 = 1;
      sub_1A912C4F0((uint64_t)&v89);
      sub_1A9062F08((uint64_t)&v89, (uint64_t)v88, &qword_1EEAB7DE0);
      v71 = v85;
      sub_1A922417C((uint64_t)v88, v84, (uint64_t)"mediaCollection(for:completion:)", 32, 2, v85, v77);
      swift_release();
      sub_1A912D5B8((uint64_t)&v102);
      v78(v71, v86);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v99);
    }
  }
  else
  {
    sub_1A905FD54((uint64_t)&v89, (uint64_t *)&unk_1EEABB130);
    sub_1A912D274((uint64_t)&v102);
    sub_1A912D274((uint64_t)&v102);
    v59 = sub_1A93F7674();
    v60 = sub_1A93F879C();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc();
      v62 = swift_slowAlloc();
      *(_QWORD *)&v89 = v62;
      *(_DWORD *)v61 = 136446210;
      v63 = 0xEC00000079726172;
      v64 = 0x62694C6C61636F6CLL;
      if (v46 != 1)
      {
        v64 = 0x7265666E69;
        v63 = 0xE500000000000000;
      }
      if (v46)
        v65 = v64;
      else
        v65 = 0x495041616964656DLL;
      if (v46)
        v66 = v63;
      else
        v66 = 0xE800000000000000;
      v67 = v78;
      v88[0] = sub_1A906436C(v65, v66, (uint64_t *)&v89);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A912D5B8((uint64_t)&v102);
      sub_1A912D5B8((uint64_t)&v102);
      _os_log_impl(&dword_1A904E000, v59, v60, "No provider for %{public}s found", v61, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v62, -1, -1);
      MEMORY[0x1AF41411C](v61, -1, -1);

    }
    else
    {
      sub_1A912D5B8((uint64_t)&v102);
      sub_1A912D5B8((uint64_t)&v102);

      v67 = v78;
    }
    *(_QWORD *)&v89 = 0;
    sub_1A912C4F0((uint64_t)&v89);
    sub_1A9062F08((uint64_t)&v89, (uint64_t)v88, &qword_1EEAB7DE0);
    v72 = v85;
    sub_1A922417C((uint64_t)v88, v84, (uint64_t)"mediaCollection(for:completion:)", 32, 2, v85, v77);
    swift_release();
    sub_1A912D5B8((uint64_t)&v102);
    v67(v72, v86);
  }
  return swift_release();
}

uint64_t sub_1A922382C(__int128 *a1, void (*a2)(_QWORD *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint8_t *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  void (*v56)(__int128 *, uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t (*v65)(char *, uint64_t);
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  char *v69;
  char *v71;
  _QWORD v72[2];
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  _QWORD *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void (*v84)(_QWORD *);
  uint64_t v85;
  uint64_t v86[23];
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  _OWORD v96[3];
  _QWORD v97[3];
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  _OWORD v109[2];
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  _OWORD v119[3];

  v84 = a2;
  v85 = a3;
  v83 = sub_1A93F75FC();
  v78 = *(_QWORD *)(v83 - 8);
  v4 = *(_QWORD *)(v78 + 64);
  MEMORY[0x1E0C80A78](v83);
  v82 = (char *)v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v79 = (char *)v72 - v6;
  MEMORY[0x1E0C80A78](v7);
  v77 = (uint64_t)v72 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v72 - v10;
  v12 = a1[8];
  v13 = a1[9];
  v14 = a1[6];
  v117 = a1[7];
  v118 = v12;
  v119[0] = v13;
  *(_OWORD *)((char *)v119 + 10) = *(__int128 *)((char *)a1 + 154);
  v15 = a1[5];
  v114 = a1[4];
  v115 = v15;
  v116 = v14;
  v16 = a1[1];
  v110 = *a1;
  v111 = v16;
  v17 = a1[3];
  v112 = a1[2];
  v113 = v17;
  v81 = mach_absolute_time();
  if (qword_1EEAB6D68 != -1)
    swift_once();
  v18 = sub_1A93F7698();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EEABA690);
  sub_1A912D274((uint64_t)&v110);
  sub_1A912D274((uint64_t)&v110);
  v75 = v19;
  v20 = sub_1A93F7674();
  v21 = sub_1A93F87B4();
  v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    LODWORD(v76) = v22;
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v74 = v24;
    *(_DWORD *)v23 = 136315138;
    v86[0] = v24;
    v72[1] = v23 + 4;
    v73 = v23;
    v95 = v118;
    v96[0] = v119[0];
    *(_OWORD *)((char *)v96 + 10) = *(_OWORD *)((char *)v119 + 10);
    v91 = v114;
    v92 = v115;
    v93 = v116;
    v94 = v117;
    v87 = v110;
    v88 = v111;
    v89 = v112;
    v90 = v113;
    sub_1A938CF04();
    v25 = v11;
    v26 = MEMORY[0x1AF412034]();
    v28 = v27;
    swift_bridgeObjectRelease();
    v29 = v26;
    v11 = v25;
    *(_QWORD *)&v87 = sub_1A906436C(v29, v28, v86);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A912D5B8((uint64_t)&v110);
    sub_1A912D5B8((uint64_t)&v110);
    v30 = v73;
    _os_log_impl(&dword_1A904E000, v20, (os_log_type_t)v76, "Calling media collection with request: %s", v73, 0xCu);
    v31 = v74;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v31, -1, -1);
    MEMORY[0x1AF41411C](v30, -1, -1);
  }
  else
  {
    sub_1A912D5B8((uint64_t)&v110);
    sub_1A912D5B8((uint64_t)&v110);
  }

  sub_1A93F8940();
  if (qword_1EEAB6EB8 != -1)
    swift_once();
  swift_beginAccess();
  v32 = (id)qword_1EEABA8E0;
  v33 = v80;
  sub_1A9222BCC((uint64_t)v11);
  sub_1A93F75C0();

  v34 = v78;
  v35 = v11;
  v36 = v83;
  v76 = *(void (**)(char *, uint64_t))(v78 + 8);
  v76(v35, v83);
  v37 = v77;
  sub_1A9222BCC(v77);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 32);
  v39 = v79;
  v38(v79, v37, v36);
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v82, v39, v36);
  v40 = (*(unsigned __int8 *)(v34 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v41 = swift_allocObject();
  v42 = v85;
  *(_QWORD *)(v41 + 16) = v84;
  *(_QWORD *)(v41 + 24) = v42;
  *(_QWORD *)(v41 + 32) = v81;
  *(_QWORD *)(v41 + 40) = "mediaCollection(for:completion:)";
  *(_QWORD *)(v41 + 48) = 32;
  *(_BYTE *)(v41 + 56) = 2;
  v38((char *)(v41 + v40), (uint64_t)v39, v36);
  v95 = v118;
  v96[0] = v119[0];
  *(_OWORD *)((char *)v96 + 10) = *(_OWORD *)((char *)v119 + 10);
  v91 = v114;
  v92 = v115;
  v93 = v116;
  v94 = v117;
  v87 = v110;
  v88 = v111;
  v89 = v112;
  v90 = v113;
  swift_retain();
  sub_1A939D6C4(v33 + 2);
  v43 = v33[5];
  v44 = v33[6];
  __swift_project_boxed_opaque_existential_1(v33 + 2, v43);
  v45 = BYTE8(v109[1]);
  (*(void (**)(__int128 *__return_ptr, _QWORD, uint64_t, uint64_t))(v44 + 8))(&v87, BYTE8(v109[1]), v43, v44);
  if (*((_QWORD *)&v88 + 1))
  {
    sub_1A905D4AC(&v87, (uint64_t)v97);
    v46 = v98;
    v47 = v99;
    __swift_project_boxed_opaque_existential_1(v97, v98);
    v95 = v108;
    v96[0] = v109[0];
    *(_OWORD *)((char *)v96 + 10) = *(_OWORD *)((char *)v109 + 10);
    v91 = v104;
    v92 = v105;
    v93 = v106;
    v94 = v107;
    v87 = v100;
    v88 = v101;
    v89 = v102;
    v90 = v103;
    if (((*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v47 + 16))(&v87, v46, v47) & 1) != 0)
    {
      v76(v82, v83);
      v48 = v98;
      v49 = v99;
      __swift_project_boxed_opaque_existential_1(v97, v98);
      v95 = v108;
      v96[0] = v109[0];
      *(_OWORD *)((char *)v96 + 10) = *(_OWORD *)((char *)v109 + 10);
      v91 = v104;
      v92 = v105;
      v93 = v106;
      v94 = v107;
      v87 = v100;
      v88 = v101;
      v89 = v102;
      v90 = v103;
      v50 = swift_allocObject();
      v51 = v106;
      *(_OWORD *)(v50 + 136) = v107;
      v52 = v109[0];
      *(_OWORD *)(v50 + 152) = v108;
      *(_OWORD *)(v50 + 168) = v52;
      *(_OWORD *)(v50 + 178) = *(_OWORD *)((char *)v109 + 10);
      v53 = v102;
      *(_OWORD *)(v50 + 72) = v103;
      v54 = v105;
      *(_OWORD *)(v50 + 88) = v104;
      *(_OWORD *)(v50 + 104) = v54;
      *(_OWORD *)(v50 + 120) = v51;
      v55 = v101;
      *(_OWORD *)(v50 + 24) = v100;
      *(_OWORD *)(v50 + 40) = v55;
      *(_QWORD *)(v50 + 16) = v80;
      *(_OWORD *)(v50 + 56) = v53;
      *(_QWORD *)(v50 + 200) = sub_1A9226818;
      *(_QWORD *)(v50 + 208) = v41;
      *(_QWORD *)(v50 + 216) = v84;
      *(_QWORD *)(v50 + 224) = v85;
      v56 = *(void (**)(__int128 *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v49 + 8);
      swift_retain();
      swift_retain();
      sub_1A912D274((uint64_t)&v100);
      swift_retain();
      v56(&v87, sub_1A9226820, v50, v48, v49);
      swift_release();
      swift_release();
      sub_1A912D5B8((uint64_t)&v100);
    }
    else
    {
      v66 = sub_1A93F7674();
      v67 = sub_1A93F879C();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v68 = 0;
        _os_log_impl(&dword_1A904E000, v66, v67, "No provider for request found", v68, 2u);
        MEMORY[0x1AF41411C](v68, -1, -1);
      }

      *(_QWORD *)&v87 = 1;
      sub_1A912C4F0((uint64_t)&v87);
      sub_1A9062F08((uint64_t)&v87, (uint64_t)v86, &qword_1EEAB7DE0);
      v69 = v82;
      sub_1A9224494((uint64_t)v86, v84, v85, v81);
      swift_release();
      sub_1A912D5B8((uint64_t)&v100);
      v76(v69, v83);
    }
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v97);
  }
  else
  {
    sub_1A905FD54((uint64_t)&v87, (uint64_t *)&unk_1EEABB130);
    sub_1A912D274((uint64_t)&v100);
    sub_1A912D274((uint64_t)&v100);
    v57 = sub_1A93F7674();
    v58 = sub_1A93F879C();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc();
      v60 = swift_slowAlloc();
      *(_QWORD *)&v87 = v60;
      *(_DWORD *)v59 = 136446210;
      v61 = 0xEC00000079726172;
      v62 = 0x62694C6C61636F6CLL;
      if (v45 != 1)
      {
        v62 = 0x7265666E69;
        v61 = 0xE500000000000000;
      }
      if (v45)
        v63 = v62;
      else
        v63 = 0x495041616964656DLL;
      if (v45)
        v64 = v61;
      else
        v64 = 0xE800000000000000;
      v65 = (uint64_t (*)(char *, uint64_t))v76;
      v86[0] = sub_1A906436C(v63, v64, (uint64_t *)&v87);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A912D5B8((uint64_t)&v100);
      sub_1A912D5B8((uint64_t)&v100);
      _os_log_impl(&dword_1A904E000, v57, v58, "No provider for %{public}s found", v59, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v60, -1, -1);
      MEMORY[0x1AF41411C](v59, -1, -1);

    }
    else
    {
      sub_1A912D5B8((uint64_t)&v100);
      sub_1A912D5B8((uint64_t)&v100);

      v65 = (uint64_t (*)(char *, uint64_t))v76;
    }
    *(_QWORD *)&v87 = 0;
    sub_1A912C4F0((uint64_t)&v87);
    sub_1A9062F08((uint64_t)&v87, (uint64_t)v86, &qword_1EEAB7DE0);
    v71 = v82;
    sub_1A9224494((uint64_t)v86, v84, v85, v81);
    swift_release();
    sub_1A912D5B8((uint64_t)&v100);
    return v65(v71, v83);
  }
}

void sub_1A922417C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[19];
  _QWORD v37[23];
  _BYTE v38[184];
  _BYTE v39[200];

  sub_1A9062F08(a1, (uint64_t)v38, &qword_1EEAB7DE0);
  sub_1A9062F08((uint64_t)v38, (uint64_t)v39, &qword_1EEAB7DE0);
  if (sub_1A9165314((uint64_t)v39) == 1)
  {
    sub_1A9062F08((uint64_t)v38, (uint64_t)v37, &qword_1EEAB7DE0);
    v12 = *(void **)nullsub_1(v37, v9, v10, v11);
    sub_1A916552C();
    v13 = swift_allocError();
    *v14 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    swift_allocError();
    *v15 = v13;
    sub_1A912C4E0(v12);
    swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1A9062F08((uint64_t)v38, (uint64_t)v37, &qword_1EEAB7DE0);
    v19 = nullsub_1(v37, v16, v17, v18);
    v34 = *(_OWORD *)(v19 + 128);
    v35 = *(_OWORD *)(v19 + 144);
    *(_OWORD *)v36 = *(_OWORD *)(v19 + 160);
    *(_DWORD *)&v36[15] = *(_DWORD *)(v19 + 175);
    v30 = *(_OWORD *)(v19 + 64);
    v31 = *(_OWORD *)(v19 + 80);
    v32 = *(_OWORD *)(v19 + 96);
    v33 = *(_OWORD *)(v19 + 112);
    v26 = *(_OWORD *)v19;
    v27 = *(_OWORD *)(v19 + 16);
    v28 = *(_OWORD *)(v19 + 32);
    v29 = *(_OWORD *)(v19 + 48);
    sub_1A912D3DC(v19);
    v20 = *(_QWORD *)(*(_QWORD *)(a7 + 64) + 40);
    *(_OWORD *)(v20 + 128) = v34;
    *(_OWORD *)(v20 + 144) = v35;
    *(_OWORD *)(v20 + 160) = *(_OWORD *)v36;
    *(_DWORD *)(v20 + 175) = *(_DWORD *)&v36[15];
    *(_OWORD *)(v20 + 64) = v30;
    *(_OWORD *)(v20 + 80) = v31;
    *(_OWORD *)(v20 + 96) = v32;
    *(_OWORD *)(v20 + 112) = v33;
    *(_OWORD *)v20 = v26;
    *(_OWORD *)(v20 + 16) = v27;
    *(_OWORD *)(v20 + 32) = v28;
    *(_OWORD *)(v20 + 48) = v29;
    swift_continuation_throwingResume();
  }
  if (qword_1EEAB6D68 != -1)
    swift_once();
  v21 = sub_1A93F7698();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EEABA690);
  v22 = sub_1A93F7674();
  v23 = sub_1A93F87B4();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v24 = 134217984;
    v37[0] = sub_1A9222B24(a2);
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v22, v23, "PML Total request duration: %fs", v24, 0xCu);
    MEMORY[0x1AF41411C](v24, -1, -1);
  }

  sub_1A93F8934();
  if (qword_1EEAB6EB8 != -1)
    swift_once();
  swift_beginAccess();
  v25 = (id)qword_1EEABA8E0;
  sub_1A93F75C0();

}

void sub_1A9224494(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  _QWORD v11[23];
  _BYTE v12[192];

  sub_1A9062F08(a1, (uint64_t)v12, &qword_1EEAB7DE0);
  sub_1A9062F08((uint64_t)v12, (uint64_t)v11, &qword_1EEAB7DE0);
  a2(v11);
  if (qword_1EEAB6D68 != -1)
    swift_once();
  v6 = sub_1A93F7698();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEABA690);
  v7 = sub_1A93F7674();
  v8 = sub_1A93F87B4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v9 = 134217984;
    v11[0] = sub_1A9222B24(a4);
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v7, v8, "PML Total request duration: %fs", v9, 0xCu);
    MEMORY[0x1AF41411C](v9, -1, -1);
  }

  sub_1A93F8934();
  if (qword_1EEAB6EB8 != -1)
    swift_once();
  swift_beginAccess();
  v10 = (id)qword_1EEABA8E0;
  sub_1A93F75C0();

}

uint64_t sub_1A9224680(uint64_t a1, _QWORD *a2, unint64_t a3, void (*a4)(__int128 *), uint64_t a5, void (*a6)(_QWORD *), uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint8_t *v31;
  __int128 *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  __int16 v65;
  unsigned __int8 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  id v72;
  uint64_t v73;
  __int128 *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  void (*v112)(__int128 *);
  uint64_t v113;
  __int128 v114;
  __int128 v115;
  _BYTE v116[112];
  _BYTE v117[26];
  __int128 v118;
  __int128 v119;
  _BYTE v120[112];
  _BYTE v121[26];
  __int128 v122;
  __int128 v123;
  _BYTE v124[32];
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  _BYTE v130[35];
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  _BYTE v140[35];
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  _BYTE v150[35];
  _BYTE v151[184];
  _BYTE v152[200];

  sub_1A9062F08(a1, (uint64_t)v151, &qword_1EEAB7DE0);
  sub_1A9062F08((uint64_t)v151, (uint64_t)v152, &qword_1EEAB7DE0);
  if (sub_1A9165314((uint64_t)v152) == 1)
  {
    v16 = *(_QWORD *)nullsub_1(v152, v13, v14, v15);
    sub_1A9062F08((uint64_t)v151, (uint64_t)&v131, &qword_1EEAB7DE0);
    v20 = *(void **)nullsub_1(&v131, v17, v18, v19);
    sub_1A912C4E0(v20);
    if (qword_1EEAB6D68 != -1)
      swift_once();
    v21 = sub_1A93F7698();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EEABA690);
    sub_1A9062F08((uint64_t)v151, (uint64_t)&v141, &qword_1EEAB7DE0);
    v25 = (id *)nullsub_1(&v141, v22, v23, v24);
    sub_1A912C4E0(*v25);
    sub_1A912C4E0(v20);
    v26 = sub_1A93F7674();
    v27 = sub_1A93F879C();
    if (os_log_type_enabled(v26, v27))
    {
      v113 = v16;
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v28 = 138412290;
      sub_1A916552C();
      swift_allocError();
      *v30 = v113;
      sub_1A912C4E0(v20);
      *(_QWORD *)&v122 = _swift_stdlib_bridgeErrorToNSError();
      sub_1A93F8AA8();
      *v29 = v122;
      sub_1A916531C((uint64_t)v151);
      sub_1A916531C((uint64_t)v151);
      _os_log_impl(&dword_1A904E000, v26, v27, "Received error from provider: %@", v28, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v29, -1, -1);
      v31 = v28;
      v16 = v113;
      MEMORY[0x1AF41411C](v31, -1, -1);
    }
    else
    {
      sub_1A916531C((uint64_t)v151);
      sub_1A916531C((uint64_t)v151);
    }

    *(_QWORD *)&v122 = v16;
    sub_1A912C4F0((uint64_t)&v122);
    sub_1A9062F08((uint64_t)&v122, (uint64_t)&v118, &qword_1EEAB7DE0);
    sub_1A912C4E0(v20);
    a4(&v118);
    goto LABEL_11;
  }
  v112 = a4;
  v32 = &v131;
  v33 = nullsub_1(v152, v13, v14, v15);
  v149 = *(_OWORD *)(v33 + 128);
  *(_OWORD *)v150 = *(_OWORD *)(v33 + 144);
  *(_OWORD *)&v150[16] = *(_OWORD *)(v33 + 160);
  *(_DWORD *)&v150[31] = *(_DWORD *)(v33 + 175);
  v145 = *(_OWORD *)(v33 + 64);
  v146 = *(_OWORD *)(v33 + 80);
  v147 = *(_OWORD *)(v33 + 96);
  v148 = *(_OWORD *)(v33 + 112);
  v141 = *(_OWORD *)v33;
  v142 = *(_OWORD *)(v33 + 16);
  v143 = *(_OWORD *)(v33 + 32);
  v144 = *(_OWORD *)(v33 + 48);
  sub_1A912D3DC(v33);
  v34 = sub_1A9225124((uint64_t *)a3, (uint64_t *)&v141);
  v38 = v34;
  if ((v35 & 1) == 0)
  {
    v39 = a2[5];
    v40 = a2[6];
    __swift_project_boxed_opaque_existential_1(a2 + 2, v39);
    v41 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v40 + 16))(*(unsigned __int8 *)(a3 + 168), v39, v40);
    v42 = *(_QWORD *)(a3 + 8);
    v43 = *(_QWORD *)(a3 + 16);
    v44 = *(_QWORD *)(a3 + 24);
    v45 = *(_QWORD *)(a3 + 152);
    *(_QWORD *)&v118 = *(_QWORD *)a3;
    *((_QWORD *)&v118 + 1) = v42;
    *(_QWORD *)&v119 = v43;
    *((_QWORD *)&v119 + 1) = v44;
    v120[0] = *(_BYTE *)(a3 + 32);
    memset(&v120[8], 0, 104);
    v121[2] = 0;
    *(_WORD *)v121 = 2;
    *(_QWORD *)&v121[8] = v45;
    *(_QWORD *)&v121[16] = v38;
    v121[24] = v41;
    v121[25] = 0;
    v149 = 0uLL;
    *(_OWORD *)v150 = *(_OWORD *)v121;
    *(_OWORD *)&v150[10] = *(_OWORD *)&v121[10];
    v141 = v118;
    v142 = v119;
    v143 = *(_OWORD *)v120;
    v144 = *(_OWORD *)&v120[16];
    v145 = *(_OWORD *)&v120[32];
    v146 = *(_OWORD *)&v120[48];
    v147 = *(_OWORD *)&v120[64];
    v148 = *(_OWORD *)&v120[80];
    v46 = *(_OWORD *)(a3 + 144);
    v139 = *(_OWORD *)(a3 + 128);
    *(_OWORD *)v140 = v46;
    *(_OWORD *)&v140[10] = *(_OWORD *)(a3 + 154);
    v47 = *(_OWORD *)(a3 + 80);
    v135 = *(_OWORD *)(a3 + 64);
    v136 = v47;
    v48 = *(_OWORD *)(a3 + 112);
    v137 = *(_OWORD *)(a3 + 96);
    v138 = v48;
    v49 = *(_OWORD *)(a3 + 16);
    v131 = *(_OWORD *)a3;
    v132 = v49;
    v50 = *(_OWORD *)(a3 + 48);
    v133 = *(_OWORD *)(a3 + 32);
    v134 = v50;
    sub_1A912C880(v118, v42, v43, v44, v120[0]);
    if ((sub_1A939DB70((uint64_t)&v131) & 1) != 0)
    {
      *(_QWORD *)&v141 = 2;
      sub_1A912C4F0((uint64_t)&v141);
      sub_1A9062F08((uint64_t)&v141, (uint64_t)&v131, &qword_1EEAB7DE0);
      a4(&v131);
      sub_1A912D5B8((uint64_t)&v118);
      return sub_1A916531C((uint64_t)v151);
    }
    v52 = &v118;
    if (v38 >= *(_QWORD *)(*(_QWORD *)v33 + 16))
      v73 = *(_QWORD *)(*(_QWORD *)v33 + 16);
    else
      v73 = v38;
    a6 = (void (*)(_QWORD *))sub_1A93E24E0(v73, *(_QWORD *)v33);
    v32 = v74;
    v7 = v75;
    a3 = v76;
    if ((v76 & 1) == 0)
    {
      swift_bridgeObjectRetain();
LABEL_22:
      v77 = sub_1A930C33C((uint64_t)a6, (uint64_t)v32, v7, a3);
LABEL_32:
      swift_unknownObjectRelease();
      *(_OWORD *)&v116[96] = *(_OWORD *)&v120[96];
      *(_OWORD *)v117 = *(_OWORD *)v121;
      *(_OWORD *)&v117[10] = *(__int128 *)((char *)v52 + 154);
      *(_OWORD *)&v116[32] = *(_OWORD *)&v120[32];
      *(_OWORD *)&v116[48] = *(_OWORD *)&v120[48];
      *(_OWORD *)&v116[64] = *(_OWORD *)&v120[64];
      *(_OWORD *)&v116[80] = *(_OWORD *)&v120[80];
      v114 = v118;
      v115 = v119;
      *(_OWORD *)v116 = *(_OWORD *)v120;
      *(_OWORD *)&v116[16] = *(_OWORD *)&v120[16];
      nullsub_1(&v114, v102, v103, v104);
      sub_1A9062F08((uint64_t)&v114, (uint64_t)&v141, &qword_1EEAB7DD8);
      sub_1A912D274((uint64_t)&v118);
      sub_1A916D618(v77, (uint64_t)&v141, 0, (uint64_t)&v122);
      v149 = v129;
      *(_OWORD *)v150 = *(_OWORD *)v130;
      *(_OWORD *)&v150[16] = *(_OWORD *)&v130[16];
      *(_DWORD *)&v150[31] = *(_DWORD *)&v130[31];
      v145 = v125;
      v146 = v126;
      v147 = v127;
      v148 = v128;
      v141 = v122;
      v142 = v123;
      v143 = *(_OWORD *)v124;
      v144 = *(_OWORD *)&v124[16];
      sub_1A912C50C((uint64_t)&v141);
      sub_1A9062F08((uint64_t)&v141, (uint64_t)&v131, &qword_1EEAB7DE0);
      sub_1A912D3DC((uint64_t)&v122);
      v112(&v131);
      sub_1A916531C((uint64_t)v151);
      sub_1A912C514((uint64_t)&v122);
      v99 = &v118;
      goto LABEL_33;
    }
    sub_1A93F91EC();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    v100 = swift_dynamicCastClass();
    if (!v100)
    {
      swift_unknownObjectRelease();
      v100 = MEMORY[0x1E0DEE9D8];
    }
    v101 = *(_QWORD *)(v100 + 16);
    swift_release();
    if (!__OFSUB__(a3 >> 1, v7))
    {
      if (v101 == (a3 >> 1) - v7)
      {
        v77 = swift_dynamicCastClass();
        swift_unknownObjectRelease();
        if (!v77)
        {
          swift_unknownObjectRelease();
          v77 = MEMORY[0x1E0DEE9D8];
        }
        goto LABEL_32;
      }
      goto LABEL_37;
    }
LABEL_36:
    __break(1u);
LABEL_37:
    swift_unknownObjectRelease_n();
    goto LABEL_22;
  }
  v52 = &v141;
  if (!v34)
  {
    v78 = *(_OWORD *)v33;
    v79 = *(_OWORD *)(v33 + 16);
    v80 = *(_OWORD *)(v33 + 48);
    v133 = *(_OWORD *)(v33 + 32);
    v134 = v80;
    v131 = v78;
    v132 = v79;
    v81 = *(_OWORD *)(v33 + 64);
    v82 = *(_OWORD *)(v33 + 80);
    v83 = *(_OWORD *)(v33 + 112);
    v137 = *(_OWORD *)(v33 + 96);
    v138 = v83;
    v135 = v81;
    v136 = v82;
    v84 = *(_OWORD *)(v33 + 128);
    v85 = *(_OWORD *)(v33 + 144);
    v86 = *(_OWORD *)(v33 + 160);
    *(_DWORD *)&v140[31] = *(_DWORD *)(v33 + 175);
    *(_OWORD *)v140 = v85;
    *(_OWORD *)&v140[16] = v86;
    v139 = v84;
    sub_1A912C50C((uint64_t)&v131);
    sub_1A9062F08((uint64_t)&v131, (uint64_t)&v122, &qword_1EEAB7DE0);
    sub_1A9062F08((uint64_t)v151, (uint64_t)&v141, &qword_1EEAB7DE0);
    v90 = nullsub_1(&v141, v87, v88, v89);
    sub_1A912D3DC(v90);
    v112(&v122);
LABEL_11:
    sub_1A916531C((uint64_t)v151);
    return sub_1A916531C((uint64_t)v151);
  }
  if (v34 != 1)
  {
    v91 = *(_QWORD *)(a3 + 152);
    v92 = *(_QWORD *)(a3 + 160);
    v93 = __OFADD__(v92, v91);
    v94 = v92 + v91;
    if (!v93)
    {
      v95 = *(_QWORD *)(a3 + 8);
      v96 = *(_QWORD *)(a3 + 16);
      v97 = *(_QWORD *)(a3 + 24);
      *(_QWORD *)&v114 = *(_QWORD *)a3;
      *((_QWORD *)&v114 + 1) = v95;
      *(_QWORD *)&v115 = v96;
      *((_QWORD *)&v115 + 1) = v97;
      v116[0] = *(_BYTE *)(a3 + 32);
      memset(&v116[8], 0, 104);
      v117[2] = 0;
      *(_WORD *)v117 = 2;
      *(_QWORD *)&v117[8] = v91;
      *(_QWORD *)&v117[16] = v94;
      *(_WORD *)&v117[24] = 2;
      v98 = *(_QWORD *)v33;
      *(_OWORD *)&v120[96] = 0uLL;
      *(_OWORD *)v121 = *(_OWORD *)v117;
      *(_OWORD *)&v121[10] = *(_OWORD *)&v117[10];
      *(_OWORD *)&v120[32] = *(_OWORD *)&v116[32];
      *(_OWORD *)&v120[48] = *(_OWORD *)&v116[48];
      v118 = v114;
      v119 = v115;
      *(_OWORD *)v120 = *(_OWORD *)v116;
      *(_OWORD *)&v120[16] = *(_OWORD *)&v116[16];
      *(_OWORD *)&v120[64] = *(_OWORD *)&v116[64];
      *(_OWORD *)&v120[80] = *(_OWORD *)&v116[80];
      nullsub_1(&v118, v35, v36, v37);
      sub_1A9062F08((uint64_t)&v118, (uint64_t)&v141, &qword_1EEAB7DD8);
      sub_1A912C880(v114, v95, v96, v97, v116[0]);
      swift_bridgeObjectRetain();
      sub_1A912D274((uint64_t)&v114);
      sub_1A916D618(v98, (uint64_t)&v141, 0, (uint64_t)&v122);
      v149 = v129;
      *(_OWORD *)v150 = *(_OWORD *)v130;
      *(_OWORD *)&v150[16] = *(_OWORD *)&v130[16];
      *(_DWORD *)&v150[31] = *(_DWORD *)&v130[31];
      v145 = v125;
      v146 = v126;
      v147 = v127;
      v148 = v128;
      v141 = v122;
      v142 = v123;
      v143 = *(_OWORD *)v124;
      v144 = *(_OWORD *)&v124[16];
      sub_1A912C50C((uint64_t)&v141);
      sub_1A9062F08((uint64_t)&v141, (uint64_t)&v131, &qword_1EEAB7DE0);
      v112(&v131);
      sub_1A916531C((uint64_t)v151);
      v99 = &v114;
LABEL_33:
      sub_1A912D5B8((uint64_t)v99);
      return sub_1A912C514((uint64_t)&v122);
    }
    __break(1u);
    goto LABEL_36;
  }
  v53 = a2[5];
  v54 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v53);
  v55 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v54 + 16))(*(unsigned __int8 *)(a3 + 168), v53, v54);
  v56 = *(_QWORD *)(a3 + 8);
  v57 = *(_QWORD *)(a3 + 16);
  v58 = *(_QWORD *)(a3 + 24);
  v59 = *(_QWORD *)(a3 + 56);
  v60 = *(_QWORD *)(a3 + 72);
  v61 = *(_QWORD *)(a3 + 80);
  v109 = *(_QWORD *)(a3 + 88);
  v110 = *(_QWORD *)(a3 + 64);
  v107 = *(_QWORD *)(a3 + 104);
  v108 = *(_QWORD *)(a3 + 96);
  v62 = *(_QWORD *)(a3 + 128);
  v105 = *(_QWORD *)(a3 + 120);
  v106 = *(_QWORD *)(a3 + 112);
  v63 = *(_QWORD *)(a3 + 136);
  v64 = *(_BYTE *)(a3 + 146);
  v65 = *(_WORD *)(a3 + 144);
  v111 = v65;
  v66 = *(_BYTE *)(a3 + 32);
  *(_QWORD *)&v122 = *(_QWORD *)a3;
  *((_QWORD *)&v122 + 1) = v56;
  *(_QWORD *)&v123 = v57;
  *((_QWORD *)&v123 + 1) = v58;
  v124[0] = v66;
  *(_OWORD *)&v124[8] = *(_OWORD *)(a3 + 40);
  *(_QWORD *)&v124[24] = v59;
  *(_QWORD *)&v125 = v110;
  *((_QWORD *)&v125 + 1) = v60;
  *(_QWORD *)&v126 = v61;
  *((_QWORD *)&v126 + 1) = v109;
  *(_QWORD *)&v127 = v108;
  *((_QWORD *)&v127 + 1) = v107;
  *(_QWORD *)&v128 = v106;
  *((_QWORD *)&v128 + 1) = v105;
  *(_QWORD *)&v129 = v62;
  *((_QWORD *)&v129 + 1) = v63;
  v130[2] = v64;
  *(_WORD *)v130 = v65;
  *(_OWORD *)&v130[8] = *(_OWORD *)(a3 + 152);
  v130[24] = v55;
  v130[25] = 0;
  v149 = v129;
  *(_OWORD *)v150 = *(_OWORD *)v130;
  *(_OWORD *)&v150[10] = *(_OWORD *)&v130[10];
  v145 = v125;
  v146 = v126;
  v147 = v127;
  v148 = v128;
  v141 = v122;
  v142 = v123;
  v143 = *(_OWORD *)v124;
  v144 = *(_OWORD *)&v124[16];
  v67 = *(_OWORD *)(a3 + 112);
  v68 = *(_OWORD *)(a3 + 144);
  v139 = *(_OWORD *)(a3 + 128);
  *(_OWORD *)v140 = v68;
  *(_OWORD *)&v140[10] = *(_OWORD *)(a3 + 154);
  v69 = *(_OWORD *)(a3 + 48);
  v70 = *(_OWORD *)(a3 + 80);
  v135 = *(_OWORD *)(a3 + 64);
  v136 = v70;
  v137 = *(_OWORD *)(a3 + 96);
  v138 = v67;
  v71 = *(_OWORD *)(a3 + 16);
  v131 = *(_OWORD *)a3;
  v132 = v71;
  v133 = *(_OWORD *)(a3 + 32);
  v134 = v69;
  sub_1A912C880(v122, v56, v57, v58, v66);
  swift_bridgeObjectRetain();
  v72 = *(id *)&v124[8];
  sub_1A912C8E4(v110, v60, v61, v109, v108, v107, v106, v105, v62, v63, v111);
  if ((sub_1A939DB70((uint64_t)&v131) & 1) != 0)
  {
    *(_QWORD *)&v141 = 3;
    sub_1A912C4F0((uint64_t)&v141);
    sub_1A9062F08((uint64_t)&v141, (uint64_t)&v131, &qword_1EEAB7DE0);
    v112(&v131);
    sub_1A912D5B8((uint64_t)&v122);
    return sub_1A916531C((uint64_t)v151);
  }
  v149 = v129;
  *(_OWORD *)v150 = *(_OWORD *)v130;
  *(_OWORD *)&v150[10] = *(_OWORD *)&v130[10];
  v145 = v125;
  v146 = v126;
  v147 = v127;
  v148 = v128;
  v141 = v122;
  v142 = v123;
  v143 = *(_OWORD *)v124;
  v144 = *(_OWORD *)&v124[16];
  sub_1A922382C(&v141, a6, a7);
  sub_1A916531C((uint64_t)v151);
  return sub_1A912D5B8((uint64_t)&v122);
}

uint64_t sub_1A9225124(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _BYTE v62[23];
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  __int128 v68;
  _OWORD v69[8];
  _BYTE v70[26];
  char v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  _BYTE v78[23];
  char v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  _OWORD v89[3];

  v3 = v2;
  v6 = sub_1A93F75FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = *a1;
  v10 = a1[1];
  v46 = a1[2];
  v47 = v10;
  v45 = a1[3];
  v11 = *((unsigned __int8 *)a1 + 32);
  v12 = *(_OWORD *)((char *)a1 + 113);
  v76 = *(_OWORD *)((char *)a1 + 97);
  v77 = v12;
  *(_OWORD *)v78 = *(_OWORD *)((char *)a1 + 129);
  v13 = a1[19];
  *(_QWORD *)&v78[15] = a1[18];
  v14 = *(_OWORD *)((char *)a1 + 49);
  v72 = *(_OWORD *)((char *)a1 + 33);
  v73 = v14;
  v15 = *(_OWORD *)((char *)a1 + 81);
  v74 = *(_OWORD *)((char *)a1 + 65);
  v75 = v15;
  v48 = a1[20];
  v49 = v13;
  v16 = *((unsigned __int8 *)a1 + 168);
  v50 = *((unsigned __int8 *)a1 + 169);
  v17 = *a2;
  v18 = *(_OWORD *)(a2 + 15);
  v19 = *(_OWORD *)(a2 + 19);
  v88 = *(_OWORD *)(a2 + 17);
  v89[0] = v19;
  *(_OWORD *)((char *)v89 + 10) = *(_OWORD *)((char *)a2 + 162);
  v20 = *(_OWORD *)(a2 + 7);
  v21 = *(_OWORD *)(a2 + 11);
  v84 = *(_OWORD *)(a2 + 9);
  v85 = v21;
  v86 = *(_OWORD *)(a2 + 13);
  v87 = v18;
  v22 = *(_OWORD *)(a2 + 3);
  v80 = *(_OWORD *)(a2 + 1);
  v81 = v22;
  v82 = *(_OWORD *)(a2 + 5);
  v83 = v20;
  v79 = *((_BYTE *)a2 + 178);
  sub_1A93F894C();
  if (qword_1EEAB6EB8 != -1)
    swift_once();
  swift_beginAccess();
  v23 = (id)qword_1EEABA8E0;
  sub_1A93F75F0();
  sub_1A93F75C0();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!*(_QWORD *)(v17 + 16) && v79 != 1)
    return 1;
  if (v11 != 1)
    return 0;
  v24 = *(_QWORD *)(v3 + 40);
  v25 = *(_QWORD *)(v3 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), v24);
  if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 24))(v16, v24, v25) & 1) != 0
    && *(_BYTE *)(v3 + 64) == 1)
  {
    v26 = v49 + v48;
    v27 = v51;
    if (!__OFADD__(v49, v48))
      return 2 * (v26 < *(_QWORD *)(v27 + 16));
    __break(1u);
    return 0;
  }
  v69[6] = v87;
  v69[7] = v88;
  *(_OWORD *)v70 = v89[0];
  *(_OWORD *)&v70[10] = *(_OWORD *)((char *)v89 + 10);
  v69[2] = v83;
  v69[3] = v84;
  v69[4] = v85;
  v69[5] = v86;
  v68 = v80;
  v69[0] = v81;
  v69[1] = v82;
  v60 = v76;
  v61 = v77;
  *(_OWORD *)v62 = *(_OWORD *)v78;
  v56 = v72;
  v57 = v73;
  v58 = v74;
  v67 = v17;
  v71 = v79;
  v29 = v51;
  v30 = v16;
  v31 = v47;
  v32 = v48;
  *(_QWORD *)&v52 = v51;
  *((_QWORD *)&v52 + 1) = v47;
  v34 = v45;
  v33 = v46;
  v53 = v46;
  v54 = v45;
  v28 = 1;
  v55 = 1;
  v59 = v75;
  v43 = v17;
  v35 = v49;
  *(_QWORD *)&v62[15] = *(_QWORD *)&v78[15];
  v63 = v49;
  v64 = v48;
  v44 = v30;
  v65 = v30;
  v66 = v50;
  v36 = sub_1A916E1A0(&v52);
  if (v36 < 1)
    return v28;
  v42 = v36;
  *(_OWORD *)((char *)&v69[4] + 9) = v76;
  *(_OWORD *)((char *)&v69[5] + 9) = v77;
  *(_OWORD *)((char *)&v69[6] + 9) = *(_OWORD *)v78;
  *(_OWORD *)((char *)v69 + 9) = v72;
  *(_OWORD *)((char *)&v69[1] + 9) = v73;
  *(_OWORD *)((char *)&v69[2] + 9) = v74;
  v37 = v31;
  v38 = *(_QWORD *)(v43 + 16);
  v67 = v29;
  *(_QWORD *)&v68 = v37;
  *((_QWORD *)&v68 + 1) = v33;
  *(_QWORD *)&v69[0] = v34;
  BYTE8(v69[0]) = 1;
  *(_OWORD *)((char *)&v69[3] + 9) = v75;
  *((_QWORD *)&v69[7] + 1) = *(_QWORD *)&v78[15];
  *(_QWORD *)v70 = v35;
  *(_QWORD *)&v70[8] = v32;
  v70[16] = v44;
  v70[17] = v50;
  sub_1A938CF04();
  v40 = *(_QWORD *)(v39 + 16);
  result = swift_bridgeObjectRelease();
  if (v38 >= v40)
  {
    v26 = v35 + v32;
    if (!__OFADD__(v35, v32))
    {
      v27 = v51;
      return 2 * (v26 < *(_QWORD *)(v27 + 16));
    }
  }
  else
  {
    v28 = v42 + v32;
    if (!__OFADD__(v42, v32))
      return v28;
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9225520(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v4 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v3[24] = v4;
  v3[25] = *(_QWORD *)(v4 - 8);
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A92255E0()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(_QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v60;

  if (qword_1EEAB6D68 != -1)
    swift_once();
  v1 = (_BYTE *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = sub_1A93F7698();
  *(_QWORD *)(v0 + 224) = __swift_project_value_buffer(v4, (uint64_t)qword_1EEABA690);
  sub_1A9064630(v3, v2, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  v5 = sub_1A93F7674();
  v6 = sub_1A93F87B4();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 216);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 192);
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    *(_DWORD *)v10 = 136315138;
    v12 = *(unsigned __int8 *)(v8 + *(int *)(v9 + 172));
    v60 = v11;
    if (v12)
      v13 = 0x776F6C6C616873;
    else
      v13 = 0x656C617473;
    if (v12)
      v14 = 0xE700000000000000;
    else
      v14 = 0xE500000000000000;
    *(_QWORD *)(v0 + 128) = sub_1A906436C(v13, v14, &v60);
    v1 = (_BYTE *)(v0 + 240);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A916E4E4(v8);
    _os_log_impl(&dword_1A904E000, v5, v6, "Reloading item [%s]", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v11, -1, -1);
    MEMORY[0x1AF41411C](v10, -1, -1);
  }
  else
  {
    sub_1A916E4E4(*(_QWORD *)(v0 + 216));
  }

  v15 = *(_QWORD *)(v0 + 192);
  v16 = *(_QWORD *)(v0 + 200);
  v17 = *(_QWORD *)(v0 + 184);
  v18 = *(_QWORD **)(v0 + 152);
  *(_BYTE *)(v0 + 240) = 2;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v17, 1, 1, v15);
  v19 = v18 + 2;
  swift_beginAccess();
  v20 = v18[5];
  v21 = v18[6];
  __swift_project_boxed_opaque_existential_1(v19, v20);
  if (((*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v21 + 24))(*(unsigned __int8 *)(v0 + 240), v20, v21) & 1) != 0)
    goto LABEL_27;
  v22 = *(_QWORD *)(v0 + 192);
  v23 = *(_QWORD *)(v0 + 200);
  v24 = *(_QWORD *)(v0 + 176);
  sub_1A9062170(*(_QWORD *)(v0 + 184), v24, &qword_1ED2AAF68);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v24, 1, v22) != 1)
  {
    sub_1A905FD54(*(_QWORD *)(v0 + 176), &qword_1ED2AAF68);
LABEL_27:
    v45 = *(_QWORD *)(v0 + 200);
    v44 = *(_QWORD *)(v0 + 208);
    v46 = *(_QWORD *)(v0 + 192);
    v47 = *(_QWORD *)(v0 + 160);
    v48 = *(_QWORD *)(v0 + 144);
    sub_1A9062F08(*(_QWORD *)(v0 + 184), v47, &qword_1ED2AAF68);
    sub_1A9064630(v48, v44, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v47, 1, v46);
    v50 = *(_QWORD *)(v0 + 208);
    v51 = *(_QWORD *)(v0 + 160);
    v52 = *(_QWORD *)(v0 + 136);
    if (v49 == 1)
    {
      sub_1A9116174(v50, *(_QWORD *)(v0 + 136), type metadata accessor for PodcastsMediaLibrary.MediaItem);
      sub_1A905FD54(v51, &qword_1ED2AAF68);
    }
    else
    {
      sub_1A916E4E4(v50);
      sub_1A9116174(v51, v52, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    }
    goto LABEL_30;
  }
  v25 = *(_QWORD **)(v0 + 152);
  v26 = v25 + 2;
  sub_1A905FD54(*(_QWORD *)(v0 + 176), &qword_1ED2AAF68);
  v27 = v25[5];
  v28 = v25[6];
  __swift_project_boxed_opaque_existential_1(v26, v27);
  *(_BYTE *)(v0 + 240) = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v28 + 16))(*(unsigned __int8 *)(v0 + 240), v27, v28);
  v29 = sub_1A93F7674();
  v30 = sub_1A93F87B4();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    *(_QWORD *)(v0 + 120) = v32;
    *(_DWORD *)v31 = 136315138;
    v33 = 0xEC00000079726172;
    v34 = 0x62694C6C61636F6CLL;
    if (*v1 != 1)
    {
      v34 = 0x7265666E69;
      v33 = 0xE500000000000000;
    }
    if (*v1)
      v35 = v34;
    else
      v35 = 0x495041616964656DLL;
    if (*v1)
      v36 = v33;
    else
      v36 = 0xE800000000000000;
    *(_QWORD *)(v31 + 4) = sub_1A906436C(v35, v36, (uint64_t *)(v0 + 120));
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v29, v30, "Asking for item at source: %s", (uint8_t *)v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v32, -1, -1);
    MEMORY[0x1AF41411C](v31, -1, -1);
  }

  v37 = *(_QWORD **)(v0 + 152);
  v38 = v37[5];
  v39 = v37[6];
  __swift_project_boxed_opaque_existential_1(v37 + 2, v38);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v39 + 8))(*(unsigned __int8 *)(v0 + 240), v38, v39);
  if (*(_QWORD *)(v0 + 80))
  {
    sub_1A905D4AC((__int128 *)(v0 + 56), v0 + 16);
    v40 = *(_QWORD *)(v0 + 40);
    v41 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v40);
    v59 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v41 + 24) + *(_QWORD *)(v41 + 24));
    v42 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v42;
    *v42 = v0;
    v42[1] = sub_1A9225C48;
    return v59(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 144), v40, v41);
  }
  sub_1A905FD54(v0 + 56, (uint64_t *)&unk_1EEABB130);
  v53 = sub_1A93F7674();
  v54 = sub_1A93F87B4();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v55 = 0;
    _os_log_impl(&dword_1A904E000, v53, v54, "No provider for source found. returning original.", v55, 2u);
    MEMORY[0x1AF41411C](v55, -1, -1);
  }
  v56 = *(_QWORD *)(v0 + 184);
  v58 = *(_QWORD *)(v0 + 136);
  v57 = *(_QWORD *)(v0 + 144);

  sub_1A905FD54(v56, &qword_1ED2AAF68);
  sub_1A9064630(v57, v58, type metadata accessor for PodcastsMediaLibrary.MediaItem);
LABEL_30:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A9225C48()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A9225C9C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 152);
  v2 = v1 + 2;
  sub_1A922708C(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 184), &qword_1ED2AAF68);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  if (((*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v4 + 24))(*(unsigned __int8 *)(v0 + 240), v3, v4) & 1) != 0)
    goto LABEL_16;
  v6 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 176);
  sub_1A9062170(*(_QWORD *)(v0 + 184), v8, &qword_1ED2AAF68);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) != 1)
  {
    sub_1A905FD54(*(_QWORD *)(v0 + 176), &qword_1ED2AAF68);
LABEL_16:
    v30 = *(_QWORD *)(v0 + 200);
    v29 = *(_QWORD *)(v0 + 208);
    v31 = *(_QWORD *)(v0 + 192);
    v32 = *(_QWORD *)(v0 + 160);
    v33 = *(_QWORD *)(v0 + 144);
    sub_1A9062F08(*(_QWORD *)(v0 + 184), v32, &qword_1ED2AAF68);
    sub_1A9064630(v33, v29, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v32, 1, v31);
    v35 = *(_QWORD *)(v0 + 208);
    v36 = *(_QWORD *)(v0 + 160);
    v37 = *(_QWORD *)(v0 + 136);
    if (v34 == 1)
    {
      sub_1A9116174(v35, *(_QWORD *)(v0 + 136), type metadata accessor for PodcastsMediaLibrary.MediaItem);
      sub_1A905FD54(v36, &qword_1ED2AAF68);
    }
    else
    {
      sub_1A916E4E4(v35);
      sub_1A9116174(v36, v37, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    }
    goto LABEL_19;
  }
  v9 = (__int128 *)(v0 + 56);
  v10 = *(_QWORD **)(v0 + 152);
  v11 = v10 + 2;
  sub_1A905FD54(*(_QWORD *)(v0 + 176), &qword_1ED2AAF68);
  v12 = v10[5];
  v13 = v10[6];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  *(_BYTE *)(v0 + 240) = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v13 + 16))(*(unsigned __int8 *)(v0 + 240), v12, v13);
  v14 = sub_1A93F7674();
  v15 = sub_1A93F87B4();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    *(_QWORD *)(v0 + 120) = v17;
    *(_DWORD *)v16 = 136315138;
    v5 = (_BYTE *)(v0 + 240);
    v18 = 0xEC00000079726172;
    v19 = 0x62694C6C61636F6CLL;
    if (*(_BYTE *)(v0 + 240) != 1)
    {
      v19 = 0x7265666E69;
      v18 = 0xE500000000000000;
    }
    if (*v5)
      v20 = v19;
    else
      v20 = 0x495041616964656DLL;
    if (*v5)
      v21 = v18;
    else
      v21 = 0xE800000000000000;
    *(_QWORD *)(v16 + 4) = sub_1A906436C(v20, v21, (uint64_t *)(v0 + 120));
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v14, v15, "Asking for item at source: %s", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v17, -1, -1);
    MEMORY[0x1AF41411C](v16, -1, -1);
  }

  v22 = *(_QWORD **)(v0 + 152);
  v23 = v22[5];
  v24 = v22[6];
  __swift_project_boxed_opaque_existential_1(v22 + 2, v23);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v24 + 8))(*(unsigned __int8 *)(v0 + 240), v23, v24);
  if (*(_QWORD *)(v0 + 80))
  {
    sub_1A905D4AC(v9, v0 + 16);
    v25 = *(_QWORD *)(v0 + 40);
    v26 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v25);
    v44 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v26 + 24) + *(_QWORD *)(v26 + 24));
    v27 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v27;
    *v27 = v0;
    v27[1] = sub_1A9225C48;
    return v44(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 144), v25, v26);
  }
  sub_1A905FD54((uint64_t)v9, (uint64_t *)&unk_1EEABB130);
  v38 = sub_1A93F7674();
  v39 = sub_1A93F87B4();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v40 = 0;
    _os_log_impl(&dword_1A904E000, v38, v39, "No provider for source found. returning original.", v40, 2u);
    MEMORY[0x1AF41411C](v40, -1, -1);
  }
  v41 = *(_QWORD *)(v0 + 184);
  v43 = *(_QWORD *)(v0 + 136);
  v42 = *(_QWORD *)(v0 + 144);

  sub_1A905FD54(v41, &qword_1ED2AAF68);
  sub_1A9064630(v42, v43, type metadata accessor for PodcastsMediaLibrary.MediaItem);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PodcastsMediaLibrary.deinit()
{
  uint64_t v0;

  sub_1A9226824(v0 + 16);
  sub_1A905FD54(v0 + OBJC_IVAR____TtC18PodcastsFoundation20PodcastsMediaLibrary____lazy_storage___signpostID, &qword_1ED2AC900);
  return v0;
}

uint64_t PodcastsMediaLibrary.__deallocating_deinit()
{
  uint64_t v0;

  sub_1A9226824(v0 + 16);
  sub_1A905FD54(v0 + OBJC_IVAR____TtC18PodcastsFoundation20PodcastsMediaLibrary____lazy_storage___signpostID, &qword_1ED2AC900);
  return swift_deallocClassInstance();
}

uint64_t PodcastsMediaLibrary.mediaCollection(for:)(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)(v3 + 440) = a1;
  *(_QWORD *)(v3 + 448) = v2;
  v4 = a2[9];
  *(_OWORD *)(v3 + 392) = a2[8];
  *(_OWORD *)(v3 + 408) = v4;
  *(_OWORD *)(v3 + 418) = *(_OWORD *)((char *)a2 + 154);
  v5 = a2[5];
  *(_OWORD *)(v3 + 328) = a2[4];
  *(_OWORD *)(v3 + 344) = v5;
  v6 = a2[7];
  *(_OWORD *)(v3 + 360) = a2[6];
  *(_OWORD *)(v3 + 376) = v6;
  v7 = a2[1];
  *(_OWORD *)(v3 + 264) = *a2;
  *(_OWORD *)(v3 + 280) = v7;
  v8 = a2[3];
  *(_OWORD *)(v3 + 296) = a2[2];
  *(_OWORD *)(v3 + 312) = v8;
  return swift_task_switch();
}

uint64_t sub_1A92261F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(v0 + 448);
  *(_QWORD *)(v0 + 56) = v0 + 80;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1A9226260;
  v2 = swift_continuation_init();
  sub_1A9222E9C((__int128 *)(v0 + 264), v1, v2);
  return swift_continuation_await();
}

uint64_t sub_1A9226260()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
  {
    swift_willThrow();
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 440);
    v3 = *(_OWORD *)(v1 + 80);
    v4 = *(_OWORD *)(v1 + 96);
    v5 = *(_OWORD *)(v1 + 128);
    *(_OWORD *)(v2 + 32) = *(_OWORD *)(v1 + 112);
    *(_OWORD *)(v2 + 48) = v5;
    *(_OWORD *)v2 = v3;
    *(_OWORD *)(v2 + 16) = v4;
    v6 = *(_OWORD *)(v1 + 144);
    v7 = *(_OWORD *)(v1 + 160);
    v8 = *(_OWORD *)(v1 + 192);
    *(_OWORD *)(v2 + 96) = *(_OWORD *)(v1 + 176);
    *(_OWORD *)(v2 + 112) = v8;
    *(_OWORD *)(v2 + 64) = v6;
    *(_OWORD *)(v2 + 80) = v7;
    v9 = *(_OWORD *)(v1 + 208);
    v10 = *(_OWORD *)(v1 + 224);
    v11 = *(_OWORD *)(v1 + 240);
    *(_DWORD *)(v2 + 175) = *(_DWORD *)(v1 + 255);
    *(_OWORD *)(v2 + 144) = v10;
    *(_OWORD *)(v2 + 160) = v11;
    *(_OWORD *)(v2 + 128) = v9;
  }
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1A92262F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[19];
  _BYTE v27[184];
  _BYTE v28[184];
  _BYTE v29[184];

  sub_1A9062F08(a1, (uint64_t)v28, &qword_1EEAB7DE0);
  sub_1A9062F08((uint64_t)v28, (uint64_t)v29, &qword_1EEAB7DE0);
  if (sub_1A9165314((uint64_t)v29) == 1)
  {
    sub_1A9062F08((uint64_t)v28, (uint64_t)v27, &qword_1EEAB7DE0);
    v6 = *(void **)nullsub_1(v27, v3, v4, v5);
    sub_1A916552C();
    v7 = swift_allocError();
    *v8 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    swift_allocError();
    *v9 = v7;
    sub_1A912C4E0(v6);
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1A9062F08((uint64_t)v28, (uint64_t)v27, &qword_1EEAB7DE0);
    v14 = nullsub_1(v27, v11, v12, v13);
    v24 = *(_OWORD *)(v14 + 128);
    v25 = *(_OWORD *)(v14 + 144);
    *(_OWORD *)v26 = *(_OWORD *)(v14 + 160);
    *(_DWORD *)&v26[15] = *(_DWORD *)(v14 + 175);
    v20 = *(_OWORD *)(v14 + 64);
    v21 = *(_OWORD *)(v14 + 80);
    v22 = *(_OWORD *)(v14 + 96);
    v23 = *(_OWORD *)(v14 + 112);
    v16 = *(_OWORD *)v14;
    v17 = *(_OWORD *)(v14 + 16);
    v18 = *(_OWORD *)(v14 + 32);
    v19 = *(_OWORD *)(v14 + 48);
    sub_1A912D3DC(v14);
    v15 = *(_QWORD *)(*(_QWORD *)(a2 + 64) + 40);
    *(_OWORD *)(v15 + 128) = v24;
    *(_OWORD *)(v15 + 144) = v25;
    *(_OWORD *)(v15 + 160) = *(_OWORD *)v26;
    *(_DWORD *)(v15 + 175) = *(_DWORD *)&v26[15];
    *(_OWORD *)(v15 + 64) = v20;
    *(_OWORD *)(v15 + 80) = v21;
    *(_OWORD *)(v15 + 96) = v22;
    *(_OWORD *)(v15 + 112) = v23;
    *(_OWORD *)v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    *(_OWORD *)(v15 + 32) = v18;
    *(_OWORD *)(v15 + 48) = v19;
    return swift_continuation_throwingResume();
  }
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.resolvedContext()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[10] = a1;
  v2[11] = v1;
  v3 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  v2[12] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[13] = v4;
  v2[14] = *(_QWORD *)(v4 + 64);
  v2[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A92264EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t (**v10)(uint64_t);
  id v11;
  void *v12;
  void *v14;
  __int128 v15;
  _OWORD v16[2];
  uint64_t v17;

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[13];
  v4 = v0[11];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_1A9226678;
  v5 = swift_continuation_init();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  v7 = *(_QWORD *)(v4 + 88);
  v15 = *(_OWORD *)(v4 + 72);
  v16[0] = *(_OWORD *)(v4 + 56);
  v14 = *(void **)&v16[0];
  v16[1] = v15;
  v17 = v7;
  sub_1A9064630(v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  v8 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v9 = swift_allocObject();
  sub_1A9116174(v1, v9 + v8, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  v10 = (uint64_t (**)(uint64_t))(v9 + ((v2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v10 = sub_1A9226868;
  v10[1] = (uint64_t (*)(uint64_t))v6;
  swift_bridgeObjectRetain();
  swift_retain();
  v11 = v14;
  swift_bridgeObjectRetain();
  sub_1A922A590((uint64_t)v16, (uint64_t)sub_1A9226DE0, v9);
  swift_release();
  v12 = *(void **)&v16[0];
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_continuation_await();
}

uint64_t sub_1A9226678()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1A92266D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v4 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABB248);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A9062170(a1, (uint64_t)v9, &qword_1EEABB248);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = *v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    swift_allocError();
    *v11 = v10;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1A9116174((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
    sub_1A9116174((uint64_t)v6, *(_QWORD *)(*(_QWORD *)(a2 + 64) + 40), (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1A9226824(uint64_t a1)
{
  _s13ConfigurationVwxx(a1);
  return a1;
}

uint64_t sub_1A9226858()
{
  return swift_deallocObject();
}

uint64_t sub_1A9226868(uint64_t a1)
{
  uint64_t v1;

  return sub_1A92266D8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A9226870()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  int *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);

  v1 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = (char *)v2 + *(int *)(v1 + 44);
  v4 = type metadata accessor for PlaybackIntent(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
  {
    sub_1A912C6B4(*(_QWORD *)v3, *((_QWORD *)v3 + 1), *((_QWORD *)v3 + 2), *((_QWORD *)v3 + 3), v3[32]);
    if (v3[120] != 2)
      sub_1A90531EC(*((_QWORD *)v3 + 5), *((_QWORD *)v3 + 6), *((_QWORD *)v3 + 7), *((_QWORD *)v3 + 8), *((_QWORD *)v3 + 9), *((_QWORD *)v3 + 10), *((_QWORD *)v3 + 11), *((_QWORD *)v3 + 12), v3[104]);
    v5 = &v3[*(int *)(v4 + 24)];
    v6 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = &v5[v6[12]];
      v8 = sub_1A93F726C();
      v27 = *(_QWORD *)(v8 - 8);
      v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      if (!v28(v7, 1, v8))
        (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v8);
      swift_bridgeObjectRelease();
      v9 = &v5[v6[16]];
      if (!v28(v9, 1, v8))
        (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v8);
      v26 = v8;
      swift_bridgeObjectRelease();
      swift_release();
      v10 = &v5[v6[20]];
      v11 = sub_1A93F738C();
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = &v5[v6[36]];
      if (!v28(v13, 1, v26))
        (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  v14 = (char *)v2 + *(int *)(v1 + 56);
  v15 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v15 - 1) + 48))(v14, 1, v15))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = &v14[v15[12]];
    v17 = sub_1A93F726C();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    if (!v19(v16, 1, v17))
      (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
    swift_bridgeObjectRelease();
    v20 = &v14[v15[16]];
    if (!v19(v20, 1, v17))
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    swift_bridgeObjectRelease();
    swift_release();
    v21 = &v14[v15[20]];
    v22 = sub_1A93F738C();
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = &v14[v15[36]];
    if (!v19(v24, 1, v17))
      (*(void (**)(char *, uint64_t))(v18 + 8))(v24, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9226DE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1A92E0C40(a1, v1 + v4, *(void (**)(uint64_t))v5, *(_QWORD *)(v5 + 8));
}

uint64_t sub_1A9226E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 24) + *(_QWORD *)(a4 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1A921755C;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1A9226EBC()
{
  return type metadata accessor for PodcastsMediaLibrary();
}

uint64_t type metadata accessor for PodcastsMediaLibrary()
{
  uint64_t result;

  result = qword_1EEABB180;
  if (!qword_1EEABB180)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A9226F00()
{
  unint64_t v0;

  sub_1A9070064();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for PodcastsMediaLibrary()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PodcastsMediaLibrary.__allocating_init(config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of PodcastsMediaLibrary.mediaCollection(for:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of PodcastsMediaLibrary.reloadMediaItem(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 144) + *(_QWORD *)(*(_QWORD *)v2 + 144));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1A9164CD4;
  return v8(a1, a2);
}

uint64_t sub_1A922700C()
{
  return swift_deallocObject();
}

uint64_t sub_1A922701C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A92262F8(a1, *(_QWORD *)(v1 + 16));
}

void sub_1A9227028(uint64_t a1)
{
  uint64_t v1;

  sub_1A93F75FC();
  sub_1A9224494(a1, *(void (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1A9227078(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9224680(a1, *(_QWORD **)(v1 + 16), v1 + 24, *(void (**)(__int128 *))(v1 + 200), *(_QWORD *)(v1 + 208), *(void (**)(_QWORD *))(v1 + 216), *(_QWORD *)(v1 + 224));
}

uint64_t sub_1A922708C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_1A92270D0(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1A9227118()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A92271C4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A9227210()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A922730C(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1A9227354()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A92273A8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92273E4()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A92274C0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A922750C()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A92275C8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A922760C()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A9227690(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92276C8()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A9227764(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92277A8()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t TTMLRequest.init(remoteUrl:priority:fileName:lifetime:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v10;
  char v11;
  int *v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;

  v10 = *a2;
  v11 = *a5;
  v12 = (int *)type metadata accessor for TTMLRequest();
  v13 = a6 + v12[9];
  *(_QWORD *)(v13 + 32) = 0;
  *(_OWORD *)v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  result = sub_1A908F9F4(a1, a6);
  *(_BYTE *)(a6 + v12[5]) = v10;
  v15 = (_QWORD *)(a6 + v12[6]);
  *v15 = a3;
  v15[1] = a4;
  *(_BYTE *)(a6 + v12[8]) = v11;
  *(_BYTE *)(a6 + v12[7]) = 7;
  return result;
}

uint64_t TTMLRequest.remoteUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9062170(v1, a1, &qword_1ED2AD3D0);
}

uint64_t TTMLRequest.priority.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TTMLRequest();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t TTMLRequest.fileFormat.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TTMLRequest();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t TTMLRequest.lifetime.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TTMLRequest();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t TTMLRequest.trace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TTMLRequest();
  return sub_1A9062170(v1 + *(int *)(v3 + 36), a1, &qword_1ED2AD0C0);
}

uint64_t TTMLRequest.trace.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for TTMLRequest() + 36);
  return sub_1A9210154(a1, v3);
}

uint64_t (*TTMLRequest.trace.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for TTMLRequest();
  return nullsub_1;
}

uint64_t _s18PodcastsFoundation11TTMLRequestV8fileNameSSvg_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TTMLRequest() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A9227A2C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9227A60 + 4 * byte_1A941355B[*v0]))(0x725565746F6D6572, 0xE90000000000006CLL);
}

uint64_t sub_1A9227A60()
{
  return 0x797469726F697270;
}

uint64_t sub_1A9227A78()
{
  return 0x656D614E656C6966;
}

uint64_t sub_1A9227A90()
{
  return 0x6D726F46656C6966;
}

uint64_t sub_1A9227AAC()
{
  return 0x656D69746566696CLL;
}

uint64_t sub_1A9227AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9229744(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9227AE8()
{
  sub_1A9228B04();
  return sub_1A93F945C();
}

uint64_t sub_1A9227B10()
{
  sub_1A9228B04();
  return sub_1A93F9468();
}

void TTMLRequest.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9062170(v2, (uint64_t)v10, &qword_1ED2AD3D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1A93F92F4();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_1A93F92F4();
    sub_1A9066CA8(&qword_1EEAB9148, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    sub_1A93F7FB0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v11 = type metadata accessor for TTMLRequest();
  sub_1A93F9300();
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  sub_1A9227690(a1, *(_BYTE *)(v2 + *(int *)(v11 + 28)));
}

uint64_t TTMLRequest.encode(_:)(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  sub_1A90D8068(v1, *(_QWORD *)(a1 + 32));
  return v1;
}

void TTMLRequest.decode(_:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  TranscriptParser.parse(ttmlData:)(a1, a2, a3);
}

uint64_t TTMLRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  int *v9;
  _BYTE v11[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABB250);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9228B04();
  sub_1A93F93D8();
  v11[15] = 0;
  sub_1A93F726C();
  sub_1A9066CA8(&qword_1EEAB7BF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
  sub_1A93F8FE8();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for TTMLRequest();
    v11[14] = *(_BYTE *)(v3 + v9[5]);
    v11[13] = 1;
    sub_1A921026C();
    sub_1A93F9030();
    v11[12] = 2;
    sub_1A93F9000();
    v11[11] = *(_BYTE *)(v3 + v9[7]);
    v11[10] = 3;
    sub_1A9228B48();
    sub_1A93F9030();
    v11[9] = *(_BYTE *)(v3 + v9[8]);
    v11[8] = 4;
    sub_1A92102B0();
    sub_1A93F9030();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t TTMLRequest.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A93F92DC();
  TTMLRequest.hash(into:)((uint64_t)v1);
  return sub_1A93F9324();
}

uint64_t TTMLRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v4);
  v25 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABB268);
  v6 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for TTMLRequest();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v11[*(int *)(v12 + 36)];
  *((_QWORD *)v13 + 4) = 0;
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  v27 = (uint64_t)v13;
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9228B04();
  v14 = v8;
  sub_1A93F93C0();
  if (v2)
  {
    v18 = v27;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    return sub_1A905FD54(v18, &qword_1ED2AD0C0);
  }
  else
  {
    v15 = (uint64_t)v11;
    sub_1A93F726C();
    v36 = 0;
    sub_1A9066CA8(&qword_1EEAB7C30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    v17 = (uint64_t)v25;
    v16 = v26;
    sub_1A93F8F34();
    sub_1A908F9F4(v17, v15);
    v34 = 1;
    sub_1A9210338();
    sub_1A93F8F7C();
    *(_BYTE *)(v15 + v9[5]) = v35;
    v33 = 2;
    v19 = sub_1A93F8F4C();
    v20 = (uint64_t *)(v15 + v9[6]);
    *v20 = v19;
    v20[1] = v21;
    v31 = 3;
    sub_1A9228B8C();
    sub_1A93F8F7C();
    *(_BYTE *)(v15 + v9[7]) = v32;
    v29 = 4;
    sub_1A921037C();
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v16);
    *(_BYTE *)(v15 + v9[8]) = v30;
    sub_1A9228BD0(v15, v24);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    return sub_1A9228C14(v15);
  }
}

uint64_t sub_1A9228318@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TTMLRequest.init(from:)(a1, a2);
}

uint64_t sub_1A922832C(_QWORD *a1)
{
  return TTMLRequest.encode(to:)(a1);
}

uint64_t sub_1A9228340@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9062170(v1, a1, &qword_1ED2AD3D0);
}

uint64_t sub_1A9228364@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 20));
  return result;
}

uint64_t sub_1A9228374()
{
  _BYTE v1[72];

  sub_1A93F92DC();
  TTMLRequest.hash(into:)((uint64_t)v1);
  return sub_1A93F9324();
}

uint64_t sub_1A92283B4()
{
  _BYTE v1[72];

  sub_1A93F92DC();
  TTMLRequest.hash(into:)((uint64_t)v1);
  return sub_1A93F9324();
}

uint64_t sub_1A92283EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + *(int *)(a1 + 24));
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A9228400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A9062170(v2 + *(int *)(a1 + 36), a2, &qword_1ED2AD0C0);
}

uint64_t sub_1A9228428(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A9210154(a1, v2 + *(int *)(a2 + 36));
}

uint64_t (*sub_1A9228434())()
{
  return nullsub_1;
}

uint64_t sub_1A9228448@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 28));
  return result;
}

uint64_t sub_1A9228458(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  sub_1A90D8068(v1, *(_QWORD *)(a1 + 32));
  return v1;
}

void sub_1A9228498(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  TranscriptParser.parse(ttmlData:)(a1, a2, a3);
}

uint64_t TTMLRequest.inMemorySize.getter()
{
  return 1;
}

BOOL static TTMLError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TTMLError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t TTMLError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t _s18PodcastsFoundation11TTMLRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  float v42;
  float v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  char v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;

  v56 = type metadata accessor for TTMLRequest();
  MEMORY[0x1E0C80A78](v56);
  v59 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v58 = (char *)&v55 - v6;
  MEMORY[0x1E0C80A78](v7);
  v57 = (uint64_t)&v55 - v8;
  MEMORY[0x1E0C80A78](v9);
  v62 = (char *)&v55 - v10;
  MEMORY[0x1E0C80A78](v11);
  v61 = (uint64_t)&v55 - v12;
  MEMORY[0x1E0C80A78](v13);
  v60 = (uint64_t)&v55 - v14;
  v15 = sub_1A93F726C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v55 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABB2A8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v55 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v55 - v28;
  v63 = a1;
  sub_1A9062170(a1, (uint64_t)&v55 - v28, &qword_1ED2AD3D0);
  v64 = a2;
  sub_1A9062170(a2, (uint64_t)v26, &qword_1ED2AD3D0);
  v30 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_1A9062170((uint64_t)v29, (uint64_t)v20, &qword_1ED2AD3D0);
  sub_1A9062170((uint64_t)v26, v30, &qword_1ED2AD3D0);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v31((uint64_t)v20, 1, v15) == 1)
  {
    sub_1A905FD54((uint64_t)v26, &qword_1ED2AD3D0);
    sub_1A905FD54((uint64_t)v29, &qword_1ED2AD3D0);
    if (v31(v30, 1, v15) == 1)
    {
      sub_1A905FD54((uint64_t)v20, &qword_1ED2AD3D0);
      v32 = v63;
      v33 = v60;
      sub_1A9228BD0(v63, v60);
      v34 = v64;
      v35 = v61;
      sub_1A9228BD0(v64, v61);
      v36 = (uint64_t)v62;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1A9062170((uint64_t)v20, (uint64_t)v23, &qword_1ED2AD3D0);
  if (v31(v30, 1, v15) == 1)
  {
    sub_1A905FD54((uint64_t)v26, &qword_1ED2AD3D0);
    sub_1A905FD54((uint64_t)v29, &qword_1ED2AD3D0);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v23, v15);
LABEL_6:
    sub_1A905FD54((uint64_t)v20, &qword_1EEABB2A8);
    v32 = v63;
    v33 = v60;
    sub_1A9228BD0(v63, v60);
    v34 = v64;
    v35 = v61;
    sub_1A9228BD0(v64, v61);
    v36 = (uint64_t)v62;
LABEL_12:
    sub_1A9228C14(v35);
    sub_1A9228C14(v33);
    sub_1A9228BD0(v32, v36);
    v44 = v57;
    sub_1A9228BD0(v34, v57);
    v46 = (uint64_t)v58;
    v45 = (uint64_t)v59;
    goto LABEL_13;
  }
  v37 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v55, v30, v15);
  sub_1A9066CA8(&qword_1EEAB8218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
  v38 = sub_1A93F8004();
  v39 = *(void (**)(char *, uint64_t))(v16 + 8);
  v39(v37, v15);
  sub_1A905FD54((uint64_t)v26, &qword_1ED2AD3D0);
  sub_1A905FD54((uint64_t)v29, &qword_1ED2AD3D0);
  v39(v23, v15);
  sub_1A905FD54((uint64_t)v20, &qword_1ED2AD3D0);
  v32 = v63;
  v33 = v60;
  sub_1A9228BD0(v63, v60);
  v34 = v64;
  v35 = v61;
  sub_1A9228BD0(v64, v61);
  v36 = (uint64_t)v62;
  if ((v38 & 1) == 0)
    goto LABEL_12;
LABEL_8:
  v40 = v56;
  v41 = *(int *)(v56 + 20);
  v42 = flt_1A9406340[*(char *)(v33 + v41)];
  v43 = flt_1A9406340[*(char *)(v35 + v41)];
  sub_1A9228C14(v35);
  sub_1A9228C14(v33);
  sub_1A9228BD0(v32, v36);
  v44 = v57;
  sub_1A9228BD0(v34, v57);
  v46 = (uint64_t)v58;
  v45 = (uint64_t)v59;
  if (v42 != v43)
  {
LABEL_13:
    sub_1A9228C14(v36);
    sub_1A9228C14(v44);
    sub_1A9228BD0(v32, v46);
    sub_1A9228BD0(v34, v45);
    v51 = 0;
    goto LABEL_14;
  }
  v47 = *(int *)(v40 + 24);
  v48 = *(_QWORD *)(v36 + v47);
  v49 = *(_QWORD *)(v36 + v47 + 8);
  v50 = (_QWORD *)(v44 + v47);
  if (v48 == *v50 && v49 == v50[1])
  {
    sub_1A9228C14(v36);
    sub_1A9228C14(v44);
    sub_1A9228BD0(v32, v46);
    sub_1A9228BD0(v34, v45);
LABEL_16:
    sub_1A92F8F88(*(_BYTE *)(v46 + *(int *)(v40 + 28)));
    v51 = v54;
    goto LABEL_14;
  }
  v53 = sub_1A93F90C0();
  sub_1A9228C14(v36);
  sub_1A9228C14(v44);
  sub_1A9228BD0(v32, v46);
  sub_1A9228BD0(v34, v45);
  v51 = 0;
  if ((v53 & 1) != 0)
    goto LABEL_16;
LABEL_14:
  sub_1A9228C14(v45);
  sub_1A9228C14(v46);
  return v51 & 1;
}

unint64_t sub_1A9228B04()
{
  unint64_t result;

  result = qword_1EEABB258;
  if (!qword_1EEABB258)
  {
    result = MEMORY[0x1AF414014](&unk_1A94138E0, &type metadata for TTMLRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABB258);
  }
  return result;
}

unint64_t sub_1A9228B48()
{
  unint64_t result;

  result = qword_1EEABB260;
  if (!qword_1EEABB260)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for FileFormat, &type metadata for FileFormat);
    atomic_store(result, (unint64_t *)&qword_1EEABB260);
  }
  return result;
}

unint64_t sub_1A9228B8C()
{
  unint64_t result;

  result = qword_1EEABB270;
  if (!qword_1EEABB270)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for FileFormat, &type metadata for FileFormat);
    atomic_store(result, (unint64_t *)&qword_1EEABB270);
  }
  return result;
}

uint64_t sub_1A9228BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTMLRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9228C14(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTMLRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A9228C54()
{
  unint64_t result;

  result = qword_1EEABB288;
  if (!qword_1EEABB288)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for TTMLError, &type metadata for TTMLError);
    atomic_store(result, (unint64_t *)&qword_1EEABB288);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TTMLRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A93F726C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
    v16 = a3[9];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = *((_QWORD *)v18 + 3);
    swift_bridgeObjectRetain();
    if (v19)
    {
      v20 = *((_QWORD *)v18 + 4);
      *((_QWORD *)v17 + 3) = v19;
      *((_QWORD *)v17 + 4) = v20;
      (**(void (***)(char *, char *, uint64_t))(v19 - 8))(v17, v18, v19);
    }
    else
    {
      v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v21;
      *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
    }
  }
  return a1;
}

uint64_t destroy for TTMLRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease();
  result = a1 + *(int *)(a2 + 36);
  if (*(_QWORD *)(result + 24))
    return __swift_destroy_boxed_opaque_existential_0(result);
  return result;
}

char *initializeWithCopy for TTMLRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v13] = a2[v13];
  v14 = a3[9];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *((_QWORD *)v16 + 3);
  swift_bridgeObjectRetain();
  if (v17)
  {
    v18 = *((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 3) = v17;
    *((_QWORD *)v15 + 4) = v18;
    (**(void (***)(char *, char *, uint64_t))(v17 - 8))(v15, v16, v17);
  }
  else
  {
    v19 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v19;
    *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  }
  return a1;
}

char *assignWithCopy for TTMLRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  a1[a3[5]] = a2[a3[5]];
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  v15 = a3[9];
  v16 = (uint64_t)&a1[v15];
  v17 = &a2[v15];
  v18 = *((_QWORD *)v17 + 3);
  if (!*(_QWORD *)&a1[v15 + 24])
  {
    if (v18)
    {
      *(_QWORD *)(v16 + 24) = v18;
      *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
      (**(void (***)(uint64_t, char *))(v18 - 8))(v16, v17);
      return a1;
    }
LABEL_13:
    v19 = *(_OWORD *)v17;
    v20 = *((_OWORD *)v17 + 1);
    *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
    *(_OWORD *)v16 = v19;
    *(_OWORD *)(v16 + 16) = v20;
    return a1;
  }
  if (!v18)
  {
    __swift_destroy_boxed_opaque_existential_0(v16);
    goto LABEL_13;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v16, (uint64_t *)v17);
  return a1;
}

char *initializeWithTake for TTMLRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v10 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v10] = a2[v10];
  v11 = a3[9];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  return a1;
}

char *assignWithTake for TTMLRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v17] = a2[v17];
  v18 = a3[9];
  v19 = &a1[v18];
  if (*(_QWORD *)&a1[v18 + 24])
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&a1[v18]);
  v20 = *(_OWORD *)&a2[v18 + 16];
  *(_OWORD *)v19 = *(_OWORD *)&a2[v18];
  *((_OWORD *)v19 + 1) = v20;
  *((_QWORD *)v19 + 4) = *(_QWORD *)&a2[v18 + 32];
  return a1;
}

uint64_t getEnumTagSinglePayload for TTMLRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A92293C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TTMLRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9229454(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for TTMLError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A9229520 + 4 * byte_1A9413565[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A9229554 + 4 * byte_1A9413560[v4]))();
}

uint64_t sub_1A9229554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A922955C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9229564);
  return result;
}

uint64_t sub_1A9229570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9229578);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A922957C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9229584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTMLError()
{
  return &type metadata for TTMLError;
}

uint64_t storeEnumTagSinglePayload for TTMLRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A92295EC + 4 * byte_1A941356F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A9229620 + 4 * byte_1A941356A[v4]))();
}

uint64_t sub_1A9229620(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9229628(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9229630);
  return result;
}

uint64_t sub_1A922963C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9229644);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A9229648(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9229650(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTMLRequest.CodingKeys()
{
  return &type metadata for TTMLRequest.CodingKeys;
}

unint64_t sub_1A9229670()
{
  unint64_t result;

  result = qword_1EEABB290;
  if (!qword_1EEABB290)
  {
    result = MEMORY[0x1AF414014](&unk_1A94138B8, &type metadata for TTMLRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABB290);
  }
  return result;
}

unint64_t sub_1A92296B8()
{
  unint64_t result;

  result = qword_1EEABB298;
  if (!qword_1EEABB298)
  {
    result = MEMORY[0x1AF414014](&unk_1A9413828, &type metadata for TTMLRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABB298);
  }
  return result;
}

unint64_t sub_1A9229700()
{
  unint64_t result;

  result = qword_1EEABB2A0;
  if (!qword_1EEABB2A0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9413850, &type metadata for TTMLRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABB2A0);
  }
  return result;
}

uint64_t sub_1A9229744(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x725565746F6D6572 && a2 == 0xE90000000000006CLL;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E656C6966 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D726F46656C6966 && a2 == 0xEA00000000007461 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D69746566696CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t MTEpisode.transcriptRequest(priority:lifetime:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  char v6;
  char v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  v6 = *a1;
  v7 = *a2;
  v8 = (uint64_t)objc_msgSend(v3, sel_storeTrackId);
  v9 = objc_msgSend(v4, sel_priceType);
  if (v9)
  {
    v10 = v9;
    v11 = sub_1A93F8040();
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  v14 = objc_msgSend(v4, sel_transcriptIdentifier);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1A93F8040();
    v18 = v17;

  }
  else
  {
    v16 = 0;
    v18 = 0;
  }
  v22 = v8 & ~(v8 >> 63);
  v23 = v11;
  v24 = v13;
  v25 = v16;
  v26 = v18;
  v21 = v6;
  v20 = v7;
  TranscriptEpisodeContext.transcriptRequest(priority:lifetime:)(&v21, &v20, a3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t MTInterest.state.getter()
{
  void *v0;
  double v1;

  objc_msgSend(v0, sel_interestValue);
  if (v1 == -1.0)
    return 0;
  if (v1 == 0.0)
    return 1;
  if (v1 == 1.0)
    return 2;
  return 3;
}

uint64_t InterestRepository.__allocating_init(interestStore:syncKeysRepository:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t InterestRepository.init(interestStore:syncKeysRepository:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t InterestRepository.deinit()
{
  uint64_t v0;

  swift_release();

  return v0;
}

uint64_t InterestRepository.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t InterestRepository.favoriteInterest(forAdamID:)(uint64_t a1)
{
  return sub_1A9229C18(a1, (uint64_t)&unk_1E54E6758, (unint64_t)sub_1A918CCBC, (ValueMetadata *)&block_descriptor_29);
}

uint64_t sub_1A9229BA0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t InterestRepository.unfavoriteInterest(forAdamID:)(uint64_t a1)
{
  return sub_1A9229C18(a1, (uint64_t)&unk_1E54E67A8, (unint64_t)sub_1A918CCC4, (ValueMetadata *)&block_descriptor_10_0);
}

uint64_t InterestRepository.suggestLess(forAdamID:)(uint64_t a1)
{
  return sub_1A9229C18(a1, (uint64_t)&unk_1E54E67F8, (unint64_t)sub_1A922A214, (ValueMetadata *)&block_descriptor_17_0);
}

uint64_t InterestRepository.undoSuggestLess(forAdamID:)(uint64_t a1)
{
  return sub_1A9229C18(a1, (uint64_t)&unk_1E54E6848, (unint64_t)sub_1A922A21C, (ValueMetadata *)&block_descriptor_24_0);
}

uint64_t sub_1A9229C18(uint64_t a1, uint64_t a2, unint64_t a3, ValueMetadata *a4)
{
  uint64_t v4;
  unint64_t v8;
  char v9;
  uint64_t result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  ValueMetadata *v17;
  unint64_t v18;
  _QWORD aBlock[3];
  ValueMetadata *v20;
  unint64_t v21;
  uint64_t v22;

  v20 = &type metadata for Podcasts;
  v8 = sub_1A90A4238();
  v21 = v8;
  LOBYTE(aBlock[0]) = 39;
  v9 = sub_1A93F7500();
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  if ((v9 & 1) != 0)
  {
    v11 = *(void **)(*(_QWORD *)(v4 + 16) + 16);
    v12 = swift_allocObject();
    swift_weakInit();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v12;
    *(_QWORD *)(v13 + 24) = a1;
    v21 = a3;
    v22 = v13;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    v20 = a4;
    v14 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v11, sel_performBlock_, v14);
    _Block_release(v14);
    v20 = &type metadata for Podcasts;
    v21 = v8;
    LOBYTE(aBlock[0]) = 44;
    v15 = sub_1A93F7500();
    result = __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    if ((v15 & 1) != 0)
    {
      v16 = *(_QWORD *)(v4 + 24) + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
      swift_beginAccess();
      sub_1A905DC3C(v16, (uint64_t)aBlock);
      v17 = v20;
      v18 = v21;
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v20);
      (*(void (**)(uint64_t, ValueMetadata *, unint64_t))(v18 + 280))(1, v17, v18);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    }
  }
  return result;
}

Swift::Void __swiftcall InterestRepository.unsafeFavoriteExistingEntitledChannelsIfNeeded(entitledChannels:)(Swift::OpaquePointer entitledChannels)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  id v11;
  void *v12;
  unsigned __int8 v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[3];
  ValueMetadata *v20;
  unint64_t v21;
  uint64_t v22;

  v2 = sub_1A93F7D58();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &type metadata for Podcasts;
  v21 = sub_1A90A4238();
  LOBYTE(aBlock[0]) = 39;
  v10 = sub_1A93F7500();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  if ((v10 & 1) != 0)
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
    v12 = (void *)sub_1A93F8010();
    v13 = objc_msgSend(v11, sel_BOOLForKey_, v12);

    if ((v13 & 1) == 0)
    {
      v17 = v3;
      InterestStore.unsafeFavoriteExistingEntitledChannelsIfNeeded(entitledChannels:)(entitledChannels);
      if (qword_1ED2A93F0 != -1)
        swift_once();
      v14 = swift_allocObject();
      swift_weakInit();
      v21 = (unint64_t)sub_1A922A224;
      v22 = v14;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1A908A91C;
      v20 = (ValueMetadata *)&block_descriptor_30_0;
      v15 = _Block_copy(aBlock);
      swift_retain();
      sub_1A93F7D88();
      v18 = MEMORY[0x1E0DEE9D8];
      sub_1A90A1130();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
      sub_1A9066D28();
      sub_1A93F8B5C();
      MEMORY[0x1AF412598](0, v9, v5, v15);
      _Block_release(v15);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      swift_release();
      swift_release();
    }
  }
}

void sub_1A922A06C()
{
  uint64_t Strong;
  uint64_t v1;
  char v2;
  uint64_t v3;
  ValueMetadata *v4;
  unint64_t v5;
  id v6;
  void *v7;
  _QWORD v8[3];
  ValueMetadata *v9;
  unint64_t v10;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = Strong;
    v9 = &type metadata for Podcasts;
    v10 = sub_1A90A4238();
    LOBYTE(v8[0]) = 44;
    v2 = sub_1A93F7500();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
    if ((v2 & 1) != 0)
    {
      v3 = *(_QWORD *)(v1 + 24) + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
      swift_beginAccess();
      sub_1A905DC3C(v3, (uint64_t)v8);
      v4 = v9;
      v5 = v10;
      __swift_project_boxed_opaque_existential_1(v8, (uint64_t)v9);
      (*(void (**)(uint64_t, ValueMetadata *, unint64_t))(v5 + 280))(1, v4, v5);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
    }
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v6 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
    v7 = (void *)sub_1A93F8010();
    objc_msgSend(v6, sel_setBool_forKey_, 1, v7);
    swift_release();

  }
}

uint64_t sub_1A922A1F0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A922A214()
{
  uint64_t v0;

  sub_1A9257648(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1A922A21C()
{
  uint64_t v0;

  sub_1A9257CB0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1A922A224()
{
  sub_1A922A06C();
}

uint64_t type metadata accessor for InterestRepository()
{
  return objc_opt_self();
}

uint64_t method lookup function for InterestRepository()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InterestRepository.__allocating_init(interestStore:syncKeysRepository:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ArtworkSizeBucketingStrategy.bucketedSize(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A922A280@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC900);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - v7;
  v9 = v1 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  swift_beginAccess();
  sub_1A9066554(v9, (uint64_t)v8);
  v10 = sub_1A93F75FC();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_1A905FD54((uint64_t)v8, &qword_1ED2AC900);
  if (qword_1EEAB6EB8 != -1)
    swift_once();
  swift_beginAccess();
  v12 = (id)qword_1EEABA8E0;
  swift_retain();
  sub_1A93F75CC();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess();
  sub_1A908A030((uint64_t)v5, v9);
  return swift_endAccess();
}

id AccountResolver.AccountInfo.primaryAccount.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void *AccountResolver.AccountInfo.sharedAccount.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

uint64_t AccountResolver.AccountInfo.privateListeningEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t AccountResolver.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_allocObject();
  v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  v2 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(_QWORD *)(v0 + v3) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFE920]), sel_init);
  return v0;
}

uint64_t AccountResolver.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  v2 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(_QWORD *)(v0 + v3) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFE920]), sel_init);
  return v0;
}

void sub_1A922A590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  _DWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  _QWORD v59[5];
  uint64_t v60;
  _BYTE v62[40];
  uint64_t v63;

  v46 = a2;
  v63 = *MEMORY[0x1E0C80C00];
  v6 = sub_1A93F75FC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v52 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v44 = (char *)v39 - v10;
  MEMORY[0x1E0C80A78](v11);
  v41 = (uint64_t)v39 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v39 - v14;
  v17 = *(void **)a1;
  v16 = *(_QWORD *)(a1 + 8);
  v50 = *(_QWORD *)(a1 + 16);
  v51 = v16;
  v18 = *(_QWORD *)(a1 + 32);
  v49 = *(_QWORD *)(a1 + 24);
  sub_1A93F8940();
  if (qword_1EEAB6EB8 != -1)
    swift_once();
  v45 = a3;
  swift_beginAccess();
  v19 = (id)qword_1EEABA8E0;
  v47 = v3;
  sub_1A922A280((uint64_t)v15);
  sub_1A93F75C0();

  v42 = v7;
  v20 = v6;
  v40 = *(void (**)(char *, uint64_t))(v7 + 8);
  v40(v15, v6);
  if (qword_1EEAB6D68 != -1)
    swift_once();
  v21 = sub_1A93F7698();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EEABA690);
  swift_bridgeObjectRetain_n();
  v23 = v17;
  v24 = v50;
  swift_bridgeObjectRetain_n();
  v25 = v23;
  v39[1] = v22;
  v26 = v17;
  v27 = sub_1A93F7674();
  v28 = sub_1A93F87B4();
  v29 = os_log_type_enabled(v27, v28);
  v48 = v20;
  v43 = v26;
  if (v29)
  {
    v30 = (_DWORD *)swift_slowAlloc();
    v60 = swift_slowAlloc();
    *v30 = 136446210;
    v53 = v26;
    v54 = v51;
    v55 = v24;
    v56 = v49;
    v39[0] = v18;
    v57 = v18;
    sub_1A9345D24((uint64_t)v58);
    sub_1A922C2E0((uint64_t)v58, (uint64_t)v62);
    __asm { BR              X10 }
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  v31 = v52;
  v32 = v41;
  sub_1A922A280(v41);
  v33 = v42;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 32);
  v35 = v44;
  v34(v44, v32, v20);
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v31, v35, v20);
  v36 = (*(unsigned __int8 *)(v33 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v37 = swift_allocObject();
  v38 = v45;
  *(_QWORD *)(v37 + 16) = v46;
  *(_QWORD *)(v37 + 24) = v38;
  *(_QWORD *)(v37 + 32) = "accounts(for:completion:)";
  *(_QWORD *)(v37 + 40) = 25;
  *(_BYTE *)(v37 + 48) = 2;
  v34((char *)(v37 + v36), (uint64_t)v35, v20);
  v53 = v43;
  v54 = v51;
  v55 = v24;
  v56 = v49;
  v57 = v18;
  swift_retain();
  sub_1A9345D24((uint64_t)v59);
  sub_1A922C2E0((uint64_t)v59, (uint64_t)&v60);
  __asm { BR              X10 }
}

void sub_1A922B16C(__int128 *a1, void (*a2)(__int128 *))
{
  char v2;
  char v3;
  id v4;
  __int128 v5;
  char v6;
  char v7;

  v2 = *((_BYTE *)a1 + 16);
  v3 = *((_BYTE *)a1 + 17);
  v5 = *a1;
  v6 = v2;
  v7 = v3;
  a2(&v5);
  sub_1A93F8934();
  if (qword_1EEAB6EB8 != -1)
    swift_once();
  swift_beginAccess();
  v4 = (id)qword_1EEABA8E0;
  sub_1A93F75C0();

}

uint64_t sub_1A922B250(void *a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v9 = sub_1A93F7D58();
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1A93F7DB8();
  v12 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a3;
  sub_1A9066C6C();
  v16 = (void *)sub_1A93F8868();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a1;
  v17[3] = a4;
  v17[4] = a5;
  v17[5] = v15;
  aBlock[4] = sub_1A922C73C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_22_2;
  v18 = _Block_copy(aBlock);
  v19 = a1;
  swift_retain();
  sub_1A922C748(v15);
  swift_release();
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D28();
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v14, v11, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v21);
}

void sub_1A922B45C(void *a1, void (*a2)(uint64_t *), uint64_t a3, void *a4)
{
  id v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __int16 v10;

  if (a1)
  {
    v8 = (uint64_t)a1;
    v9 = a1;
    v10 = 0;
    v5 = a1;
    a2(&v8);

  }
  else
  {
    if (a4 == (void *)2)
      v7 = 1;
    else
      v7 = (uint64_t)a4;
    v8 = v7;
    v9 = 0;
    v10 = 256;
    sub_1A922C748(a4);
    a2(&v8);
    sub_1A922C768(a4);
  }
}

void sub_1A922B4F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  _QWORD v18[6];

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a7;
  v12[4] = a8;
  v13 = *(void **)(a4 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection);
  v14 = a1;
  swift_retain();
  v15 = (void *)sub_1A93F8010();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1A922C7B4;
  *(_QWORD *)(v16 + 24) = v12;
  v18[4] = sub_1A922C858;
  v18[5] = v16;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 1107296256;
  v18[2] = sub_1A922C120;
  v18[3] = &block_descriptor_32;
  v17 = _Block_copy(v18);
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_getHomeUserIdForSharedUserId_completion_, v15, v17);
  _Block_release(v17);
  swift_release();

}

uint64_t sub_1A922B634(void *a1, char a2, void **a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  char *v20;
  uint64_t v21;
  char v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  char v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  _QWORD *v32;
  void *v33;
  uint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t aBlock;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  void *v44;
  void (*v45)();
  _QWORD *v46;

  v12 = sub_1A93F7D58();
  v40 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F7DB8();
  v38 = *(_QWORD *)(v15 - 8);
  v39 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9066C6C();
  if (a4 && a1)
  {
    v18 = a1;
    v19 = a4;
    v37 = v17;
    v20 = v14;
    v21 = v12;
    v22 = a2;
    v23 = v19;
    v36 = v18;
    v24 = v23;
    v25 = (void *)sub_1A93F8868();
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = a5;
    *(_QWORD *)(v26 + 24) = a6;
    *(_QWORD *)(v26 + 32) = a4;
    *(_QWORD *)(v26 + 40) = a1;
    v27 = v22 & 1;
    v12 = v21;
    v14 = v20;
    v17 = v37;
    *(_BYTE *)(v26 + 48) = v27;
    v45 = sub_1A922C834;
    v46 = (_QWORD *)v26;
    aBlock = MEMORY[0x1E0C809B0];
    v42 = 1107296256;
    v43 = sub_1A908A91C;
    v44 = &block_descriptor_44;
    v28 = _Block_copy(&aBlock);
    swift_retain();
    v29 = v24;
    v30 = v36;
    swift_release();
    sub_1A93F7D88();
    aBlock = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D28();
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v17, v14, v28);
    _Block_release(v28);

  }
  else
  {
    v31 = *a3;
    v25 = (void *)sub_1A93F8868();
    v32 = (_QWORD *)swift_allocObject();
    v32[2] = a5;
    v32[3] = a6;
    v32[4] = v31;
    v45 = sub_1A922C7F4;
    v46 = v32;
    aBlock = MEMORY[0x1E0C809B0];
    v42 = 1107296256;
    v43 = sub_1A908A91C;
    v44 = &block_descriptor_38_0;
    v33 = _Block_copy(&aBlock);
    swift_retain();
    sub_1A922C748(v31);
    swift_release();
    sub_1A93F7D88();
    aBlock = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D28();
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v17, v14, v33);
    _Block_release(v33);
  }

  (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v39);
}

void sub_1A922B9C4(void (*a1)(_QWORD *), uint64_t a2, void *a3)
{
  uint64_t v5;
  _QWORD v6[2];
  __int16 v7;

  if (a3 == (void *)2)
    v5 = 1;
  else
    v5 = (uint64_t)a3;
  v6[0] = v5;
  v6[1] = 0;
  v7 = 256;
  sub_1A922C748(a3);
  a1(v6);
  sub_1A922C768(a3);
}

void sub_1A922BA20(void (*a1)(_QWORD *), uint64_t a2, void *a3, void *a4, char a5)
{
  id v7;
  id v8;
  _QWORD v9[2];
  char v10;
  char v11;

  v9[0] = a3;
  v9[1] = a4;
  v10 = a5;
  v11 = 0;
  v7 = a4;
  v8 = a3;
  a1(v9);

}

void sub_1A922BA80(void *a1, void *a2, void *a3, void (*a4)(id, id, id *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void (*v44)(char *, uint64_t);
  id v45;
  uint64_t v46;
  unint64_t v47;
  os_log_t v48;
  void *v49;
  id v50;
  id v51;
  os_log_t v52;
  int v53;
  void *v54;
  id v55[2];
  uint64_t v56[2];

  v56[1] = *MEMORY[0x1E0C80C00];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C80);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F73E0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v52 - v16;
  if (a3)
  {
    v55[0] = a3;
    v18 = a3;
    a4(0, 0, v55);

    return;
  }
  if (!a2)
    goto LABEL_6;
  sub_1A93F7398();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1A905FD54((uint64_t)v10, &qword_1ED2A5C80);
LABEL_6:
    if (qword_1EEAB6D68 != -1)
      swift_once();
    v19 = sub_1A93F7698();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EEABA690);
    swift_bridgeObjectRetain_n();
    v20 = sub_1A93F7674();
    v21 = sub_1A93F879C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v55[1] = a2;
      v56[0] = v23;
      *(_DWORD *)v22 = 136446210;
      v55[0] = a1;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
      v24 = sub_1A93F8094();
      v55[0] = (id)sub_1A906436C(v24, v25, v56);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v20, v21, "Error resolving user. UserIDString missing. %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v23, -1, -1);
      MEMORY[0x1AF41411C](v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v55[0] = 0;
    a4(0, 0, v55);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
  v26 = objc_msgSend((id)objc_opt_self(), sel_sharedAccountStore);
  v27 = (void *)sub_1A93F73B0();
  v55[0] = 0;
  v28 = objc_msgSend(v26, sel_storeAccountForHomeUserIdentifier_error_, v27, v55);

  if (v28)
  {
    v29 = v55[0];
    v30 = objc_msgSend(v28, sel_ic_privateListeningEnabled);
    if (v30)
    {
      v31 = v30;
      v32 = objc_msgSend(v30, sel_BOOLValue);

    }
    else
    {
      v32 = 0;
    }
    v55[0] = (id)2;
    v50 = v28;
    a4(v28, v32, v55);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  else
  {
    v33 = v55[0];
    v34 = (void *)sub_1A93F7128();

    swift_willThrow();
    if (qword_1EEAB6D68 != -1)
      swift_once();
    v35 = sub_1A93F7698();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EEABA690);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
    v36 = v34;
    v37 = v34;
    v38 = sub_1A93F7674();
    v39 = sub_1A93F879C();
    v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      v41 = swift_slowAlloc();
      v54 = (void *)swift_slowAlloc();
      v55[0] = v54;
      *(_DWORD *)v41 = 136446466;
      v53 = v40;
      sub_1A9066CA8(&qword_1ED2A5C78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v52 = v38;
      v42 = sub_1A93F9060();
      v56[0] = sub_1A906436C(v42, v43, (uint64_t *)v55);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      v44 = *(void (**)(char *, uint64_t))(v12 + 8);
      v44(v14, v11);
      *(_WORD *)(v41 + 12) = 2082;
      v56[0] = (uint64_t)v34;
      v45 = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
      v46 = sub_1A93F8094();
      v56[0] = sub_1A906436C(v46, v47, (uint64_t *)v55);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();

      v48 = v52;
      _os_log_impl(&dword_1A904E000, v52, (os_log_type_t)v53, "Error resolving user from home identifier %{public}s - %{public}s", (uint8_t *)v41, 0x16u);
      v49 = v54;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v49, -1, -1);
      MEMORY[0x1AF41411C](v41, -1, -1);

    }
    else
    {
      v44 = *(void (**)(char *, uint64_t))(v12 + 8);
      v44(v14, v11);

    }
    v55[0] = v34;
    v51 = v34;
    a4(0, 0, v55);

    v44(v17, v11);
  }
}

uint64_t sub_1A922C120(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, uint64_t, void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    v5 = sub_1A93F8040();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  swift_retain();
  v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t AccountResolver.deinit()
{
  uint64_t v0;

  sub_1A905FD54(v0 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID, &qword_1ED2AC900);

  return v0;
}

uint64_t AccountResolver.__deallocating_deinit()
{
  uint64_t v0;

  sub_1A905FD54(v0 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID, &qword_1ED2AC900);

  return swift_deallocClassInstance();
}

uint64_t sub_1A922C224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A93F75FC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1A922C298(__int128 *a1)
{
  uint64_t v1;

  sub_1A93F75FC();
  sub_1A922B16C(a1, *(void (**)(__int128 *))(v1 + 16));
}

uint64_t sub_1A922C2E0(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

uint64_t sub_1A922C31C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1A922C350(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1A922B4F8(a1, a2, a3, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

void sub_1A922C360(void *a1, void *a2, void *a3)
{
  uint64_t v3;

  sub_1A922BA80(a1, a2, a3, *(void (**)(id, id, id *))(v3 + 16));
}

uint64_t sub_1A922C368(void *a1, uint64_t a2, void **a3)
{
  uint64_t v3;

  return sub_1A922B250(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1A922C370()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A922C394(uint64_t a1)
{
  sub_1A922C3C8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

void sub_1A922C3C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 3:

      break;
    case 1:
      goto LABEL_3;
    case 2:
      swift_bridgeObjectRelease();
LABEL_3:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_1A922C428()
{
  return type metadata accessor for AccountResolver();
}

uint64_t type metadata accessor for AccountResolver()
{
  uint64_t result;

  result = qword_1EEABB2E8;
  if (!qword_1EEABB2E8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A922C46C()
{
  unint64_t v0;

  sub_1A9070064();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for AccountResolver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccountResolver.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of AccountResolver.accounts(for:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t getEnumTagSinglePayload for AccountResolver.Error(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

ValueMetadata *type metadata accessor for AccountResolver.Error()
{
  return &type metadata for AccountResolver.Error;
}

uint64_t initializeBufferWithCopyOfBuffer for AccountResolver.AccountInfo(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for AccountResolver.AccountInfo(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for AccountResolver.AccountInfo(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountResolver.AccountInfo(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountResolver.AccountInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountResolver.AccountInfo()
{
  return &type metadata for AccountResolver.AccountInfo;
}

uint64_t sub_1A922C700()
{
  uint64_t v0;
  void *v1;

  swift_release();
  v1 = *(void **)(v0 + 40);
  if ((unint64_t)v1 >= 3)

  return swift_deallocObject();
}

void sub_1A922C73C()
{
  uint64_t v0;

  sub_1A922B45C(*(void **)(v0 + 16), *(void (**)(uint64_t *))(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

id sub_1A922C748(id result)
{
  if (result != (id)2)
    return sub_1A922C758(result);
  return result;
}

id sub_1A922C758(id result)
{
  if ((unint64_t)result >= 2)
    return result;
  return result;
}

void sub_1A922C768(id a1)
{
  if (a1 != (id)2)
    sub_1A922C778(a1);
}

void sub_1A922C778(id a1)
{
  if ((unint64_t)a1 >= 2)

}

uint64_t sub_1A922C788()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A922C7B4(void *a1, char a2, void **a3)
{
  uint64_t v3;

  return sub_1A922B634(a1, a2, a3, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_1A922C7C0()
{
  uint64_t v0;
  void *v1;

  swift_release();
  v1 = *(void **)(v0 + 32);
  if ((unint64_t)v1 >= 3)

  return swift_deallocObject();
}

void sub_1A922C7F4()
{
  uint64_t v0;

  sub_1A922B9C4(*(void (**)(_QWORD *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1A922C800()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1A922C834()
{
  uint64_t v0;

  sub_1A922BA20(*(void (**)(_QWORD *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(_BYTE *)(v0 + 48));
}

uint64_t MetricsOfferType.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t MetricsOfferType.debugDescription.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD00000000000001CLL;
}

unint64_t sub_1A922C930()
{
  return MetricsOfferType.debugDescription.getter();
}

uint64_t MetricsOfferType.description.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t MetricsOfferType.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_1A93F90CC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsOfferType.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F912C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsOfferType.free.getter()
{
  return 1701147238;
}

uint64_t static MetricsOfferType.paid.getter()
{
  return 1684627824;
}

uint64_t static MetricsOfferType.hybrid.getter()
{
  return 0x646972627968;
}

uint64_t static MetricsOfferType.subscribed.getter()
{
  return 0x6269726373627573;
}

unint64_t sub_1A922CB14()
{
  unint64_t result;

  result = qword_1EEABB3A0;
  if (!qword_1EEABB3A0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsOfferType, &type metadata for MetricsOfferType);
    atomic_store(result, (unint64_t *)&qword_1EEABB3A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsOfferType()
{
  return &type metadata for MetricsOfferType;
}

uint64_t sub_1A922CB68()
{
  return swift_deallocObject();
}

uint64_t sub_1A922CB78()
{
  return swift_deallocObject();
}

uint64_t sub_1A922CB88()
{
  return swift_deallocObject();
}

uint64_t sub_1A922CB98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_1A922CC0C()
{
  return swift_deallocObject();
}

uint64_t sub_1A922CC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  swift_getAssociatedTypeWitness();
  v0 = sub_1A93F8A90();
  v1 = sub_1A93F77DC();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v8 = type metadata accessor for RepublishingValueSubject(255, v0, AssociatedTypeWitness, AssociatedConformanceWitness);
  MEMORY[0x1AF414014](MEMORY[0x1E0C95950], v1);
  MEMORY[0x1AF414014](&protocol conformance descriptor for RepublishingValueSubject<A, B>, v8);
  v4 = sub_1A93F7878();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95C98], v4);
  v5 = sub_1A93F7740();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95768], v5);
  v6 = sub_1A93F7734();
  return MEMORY[0x1AF414014](MEMORY[0x1E0C95708], v6);
}

void static DeviceCapabilities.mobileGestaltCapabilities()(_QWORD *a1@<X8>)
{
  void *v2;
  unsigned int v3;

  v2 = (void *)sub_1A93F8010();
  v3 = MGGetBoolAnswer();

  *a1 = v3;
}

id sub_1A922CDE8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ApplicationStateMonitor()), sel_init);
  qword_1ED2AB238 = (uint64_t)result;
  return result;
}

id ApplicationStateMonitor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static ApplicationStateMonitor.shared.getter()
{
  if (qword_1ED2AA358 != -1)
    swift_once();
  return (id)qword_1ED2AB238;
}

Swift::Void __swiftcall ApplicationStateMonitor.beginListening()()
{
  char *v0;
  os_unfair_lock_s *v1;
  uint64_t *v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)&v0[OBJC_IVAR___PodcastsApplicationStateMonitor_listenerTask];
  v2 = (uint64_t *)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1A922CF0C(v2, v0);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1A922CF0C(uint64_t *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC08);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
    sub_1A93F8514();
  sub_1A93F8484();
  v7 = sub_1A93F84CC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a2;
  v9 = a2;
  v10 = sub_1A936AF50((uint64_t)v6, (uint64_t)&unk_1EEABB3C8, (uint64_t)v8);
  result = swift_release();
  *a1 = v10;
  return result;
}

uint64_t sub_1A922D01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_1A921755C;
  v6[9] = a4;
  return swift_task_switch();
}

uint64_t sub_1A922D07C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = v0;
  return swift_task_switch();
}

uint64_t sub_1A922D094()
{
  _QWORD *v0;
  void *v1;
  uint64_t inited;
  void *v3;
  __CFString *v4;
  __CFString *v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v1 = (void *)v0[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABE08);
  inited = swift_initStackObject();
  v0[10] = inited;
  *(_OWORD *)(inited + 16) = xmmword_1A9405950;
  *(_QWORD *)(inited + 32) = CFSTR("MTApplicationDidBecomeActiveNotification");
  *(_QWORD *)(inited + 40) = CFSTR("MTApplicationDidEnterBackgroundNotification");
  v3 = (void *)objc_opt_self();
  v4 = CFSTR("MTApplicationDidBecomeActiveNotification");
  v5 = CFSTR("MTApplicationDidEnterBackgroundNotification");
  v6 = objc_msgSend(v3, sel_defaultCenter);
  v0[11] = v6;
  v7 = swift_allocObject();
  v0[12] = v7;
  *(_QWORD *)(v7 + 16) = v1;
  v8 = v1;
  v9 = v6;
  v10 = sub_1A93E20E4(inited);
  v0[13] = v10;

  v11 = swift_allocObject();
  v0[14] = v11;
  *(_QWORD *)(v11 + 16) = &unk_1EEABB3E0;
  *(_QWORD *)(v11 + 24) = v7;
  swift_retain();
  v12 = (_QWORD *)swift_task_alloc();
  v0[15] = v12;
  v12[2] = v10;
  v12[3] = &unk_1EEABB3E8;
  v12[4] = v11;
  v13 = (_QWORD *)swift_task_alloc();
  v0[16] = v13;
  *v13 = v0;
  v13[1] = sub_1A922D244;
  return sub_1A93F8EE0();
}

uint64_t sub_1A922D244()
{
  uint64_t v0;

  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A922D2AC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);
  swift_release();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  type metadata accessor for Name(0);
  swift_arrayDestroy();
  swift_release();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A922D328()
{
  return swift_task_dealloc();
}

Swift::Void __swiftcall ApplicationStateMonitor.endListening()()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___PodcastsApplicationStateMonitor_listenerTask);
  v2 = v1 + 4;
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1A922D388(v2);
  os_unfair_lock_unlock(v3);
}

_QWORD *sub_1A922D388(_QWORD *result)
{
  _QWORD *v1;

  v1 = result;
  if (*result)
  {
    sub_1A93F8514();
    result = (_QWORD *)swift_release();
  }
  *v1 = 0;
  return result;
}

uint64_t ApplicationStateMonitor.currentState()()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState);
  v2 = (os_unfair_lock_s *)(v1 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v3 = *(_QWORD *)(v1 + 16);
  os_unfair_lock_unlock(v2);
  return v3;
}

Swift::Bool __swiftcall ApplicationStateMonitor.isActive()()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState);
  v2 = (os_unfair_lock_s *)(v1 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v3 = *(_QWORD *)(v1 + 16);
  os_unfair_lock_unlock(v2);
  return v3 == 1;
}

Swift::Bool __swiftcall ApplicationStateMonitor.isBackground()()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState);
  v2 = (os_unfair_lock_s *)(v1 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v3 = *(_QWORD *)(v1 + 16);
  os_unfair_lock_unlock(v2);
  return v3 == 2;
}

Swift::Bool __swiftcall ApplicationStateMonitor.isUnknown()()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState);
  v2 = (os_unfair_lock_s *)(v1 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v3 = *(_QWORD *)(v1 + 16);
  os_unfair_lock_unlock(v2);
  return v3 == 0;
}

void ApplicationStateMonitor.update(state:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState);
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  *(_QWORD *)(v3 + 16) = a1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
}

uint64_t static ApplicationStateMonitor.description(for:)(uint64_t a1)
{
  uint64_t result;

  result = 0x6E776F6E6B6E55;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x657669746341;
      break;
    case 2:
      result = 0x756F72676B636142;
      break;
    case 3:
      result = 0x6576697463616E49;
      break;
    default:
      result = sub_1A93F921C();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1A922D924(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1A922D93C()
{
  uint64_t v0;
  void *v1;

  v1 = (void *)sub_1A93F6E64();
  sub_1A922D988(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A922D988(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;

  v3 = sub_1A93F8040();
  v5 = v4;
  if (v3 == sub_1A93F8040() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  v8 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
LABEL_16:
    v23 = *(_QWORD *)(v1 + OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState);
    v24 = (os_unfair_lock_s *)(v23 + 24);
    os_unfair_lock_lock((os_unfair_lock_t)(v23 + 24));
    v25 = 1;
LABEL_19:
    *(_QWORD *)(v23 + 16) = v25;
    os_unfair_lock_unlock(v24);
    return;
  }
  v9 = sub_1A93F8040();
  v11 = v10;
  if (v9 == sub_1A93F8040() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  v14 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
LABEL_18:
    v23 = *(_QWORD *)(v1 + OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState);
    v24 = (os_unfair_lock_s *)(v23 + 24);
    os_unfair_lock_lock((os_unfair_lock_t)(v23 + 24));
    v25 = 2;
    goto LABEL_19;
  }
  if (qword_1EEAB6DA0 != -1)
    swift_once();
  v15 = sub_1A93F7698();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EEABA720);
  v26 = a1;
  v16 = sub_1A93F7674();
  v17 = sub_1A93F879C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v27 = v19;
    *(_DWORD *)v18 = 136315138;
    type metadata accessor for Name(0);
    v20 = v26;
    v21 = sub_1A93F8094();
    sub_1A906436C(v21, v22, &v27);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v16, v17, "Application monitor received unknown notification: %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v19, -1, -1);
    MEMORY[0x1AF41411C](v18, -1, -1);

  }
  else
  {

  }
}

id ApplicationStateMonitor.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2ABD70);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)&v0[v2] = v3;
  v4 = OBJC_IVAR___PodcastsApplicationStateMonitor_listenerTask;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABD90);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)&v0[v4] = v5;
  v7.receiver = v0;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

id ApplicationStateMonitor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t PFApplicationState.init(rawValue:)(unint64_t a1)
{
  return sub_1A922DE14(a1);
}

unint64_t sub_1A922DDE4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1A922DE14(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_1A922DE14(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

unint64_t sub_1A922DE28()
{
  unint64_t result;

  result = qword_1EEABB3B8;
  if (!qword_1EEABB3B8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PFApplicationState, &type metadata for PFApplicationState);
    atomic_store(result, &qword_1EEABB3B8);
  }
  return result;
}

uint64_t type metadata accessor for ApplicationStateMonitor()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for PFApplicationState()
{
  return &type metadata for PFApplicationState;
}

_QWORD *sub_1A922DE9C(_QWORD *result)
{
  uint64_t v1;

  *result = *(_QWORD *)(v1 + 16);
  return result;
}

uint64_t sub_1A922DEA8()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A922DED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1A9164CD4;
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_1A921755C;
  v4[9] = v2;
  return swift_task_switch();
}

uint64_t sub_1A922DF54()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A922DF78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A9164CD4;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1A922DFDC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A922E000(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A921755C;
  return sub_1A93E1FFC(a1, v4);
}

uint64_t sub_1A922E060(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_1A921755C;
  return sub_1A93E0808(a1, a2, v6, v7, v8);
}

PodcastsFoundation::ShowType_optional __swiftcall ShowType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1;
  PodcastsFoundation::ShowType_optional v2;

  v1 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v1 == 1)
    v2.value = PodcastsFoundation_ShowType_serial;
  else
    v2.value = PodcastsFoundation_ShowType_unknownDefault;
  if (v1)
    return v2;
  else
    return 0;
}

uint64_t ShowType.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C6169726573;
  else
    return 0x6369646F73697065;
}

uint64_t sub_1A922E160(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x6C6169726573;
  else
    v3 = 0x6369646F73697065;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE600000000000000;
  if (*a2)
    v5 = 0x6C6169726573;
  else
    v5 = 0x6369646F73697065;
  if (*a2)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v8 = 1;
  else
    v8 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A922E204()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A922E280()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A922E2D8()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A922E350@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1A922E3AC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6369646F73697065;
  if (*v1)
    v2 = 0x6C6169726573;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A922E3E8()
{
  sub_1A922E5B4();
  return sub_1A93F82BC();
}

uint64_t sub_1A922E444()
{
  sub_1A922E5B4();
  return sub_1A93F828C();
}

uint64_t ShowType.mtPodcastShowType.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 2;
  else
    return 1;
}

unint64_t sub_1A922E4A4()
{
  unint64_t result;

  result = qword_1EEABB3F8;
  if (!qword_1EEABB3F8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ShowType, &type metadata for ShowType);
    atomic_store(result, &qword_1EEABB3F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ShowType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A922E534 + 4 * byte_1A9413D85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A922E568 + 4 * asc_1A9413D80[v4]))();
}

uint64_t sub_1A922E568(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A922E570(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A922E578);
  return result;
}

uint64_t sub_1A922E584(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A922E58CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A922E590(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A922E598(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShowType()
{
  return &type metadata for ShowType;
}

unint64_t sub_1A922E5B4()
{
  unint64_t result;

  result = qword_1ED2A8628;
  if (!qword_1ED2A8628)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ShowType, &type metadata for ShowType);
    atomic_store(result, (unint64_t *)&qword_1ED2A8628);
  }
  return result;
}

void NSManagedObjectContext.unsafeInterest(forAdamID:)(uint64_t a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;

  v3 = (void *)sub_1A93F8010();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1A9405950;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1A90A92DC();
  *(_QWORD *)(v4 + 32) = 0x44496D616461;
  *(_QWORD *)(v4 + 40) = 0xE600000000000000;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, a1);
  *(_QWORD *)(v4 + 96) = sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
  *(_QWORD *)(v4 + 104) = sub_1A922E830();
  *(_QWORD *)(v4 + 72) = v5;
  v6 = (void *)sub_1A93F8754();
  v7 = objc_msgSend(v1, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_limit_, v3, v6, 0, 1, 1);

  if (!v7)
    goto LABEL_14;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
  v8 = sub_1A93F8310();

  if (!(v8 >> 62))
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v11 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_10;
LABEL_4:
  if ((v8 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v9 = *(id *)(v8 + 32);
      goto LABEL_7;
    }
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  v9 = (id)MEMORY[0x1AF4129DC](0, v8);
LABEL_7:
  v10 = v9;
  swift_bridgeObjectRelease();
  type metadata accessor for MTInterest();
  if (!swift_dynamicCastClass())

}

unint64_t sub_1A922E830()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2A4240;
  if (!qword_1ED2A4240)
  {
    v1 = sub_1A9072534(255, (unint64_t *)&qword_1ED2A4230);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2A4240);
  }
  return result;
}

void sub_1A922E888(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A93F8B8C();
    sub_1A909E53C();
    sub_1A922ECCC();
    sub_1A93F8670();
    v1 = v18;
    v17 = v19;
    v2 = v20;
    v3 = v21;
    v4 = v22;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v16 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    v8 = v3;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!sub_1A93F8BE0())
      goto LABEL_36;
    sub_1A909E53C();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v11 = v23;
    swift_unknownObjectRelease();
    if (!v23)
      goto LABEL_36;
LABEL_31:
    if ((objc_msgSend(v11, sel_isBookmarked) & 1) != 0)
    {

LABEL_36:
      sub_1A9120240();
      return;
    }
    v15 = objc_msgSend(v11, sel_isDownloaded);

    if ((v15 & 1) != 0)
      goto LABEL_36;
  }
  if (v4)
  {
    v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v10 = v9 | (v3 << 6);
LABEL_30:
    v11 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v11)
      goto LABEL_36;
    goto LABEL_31;
  }
  v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v16)
      goto LABEL_36;
    v13 = *(_QWORD *)(v17 + 8 * v12);
    ++v3;
    if (!v13)
    {
      v3 = v8 + 2;
      if (v8 + 2 >= v16)
        goto LABEL_36;
      v13 = *(_QWORD *)(v17 + 8 * v3);
      if (!v13)
      {
        v3 = v8 + 3;
        if (v8 + 3 >= v16)
          goto LABEL_36;
        v13 = *(_QWORD *)(v17 + 8 * v3);
        if (!v13)
        {
          v3 = v8 + 4;
          if (v8 + 4 >= v16)
            goto LABEL_36;
          v13 = *(_QWORD *)(v17 + 8 * v3);
          if (!v13)
          {
            v3 = v8 + 5;
            if (v8 + 5 >= v16)
              goto LABEL_36;
            v13 = *(_QWORD *)(v17 + 8 * v3);
            if (!v13)
            {
              v14 = v8 + 6;
              while (v16 != v14)
              {
                v13 = *(_QWORD *)(v17 + 8 * v14++);
                if (v13)
                {
                  v3 = v14 - 1;
                  goto LABEL_29;
                }
              }
              goto LABEL_36;
            }
          }
        }
      }
    }
LABEL_29:
    v4 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t MTPodcast.shouldBeDeleted.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  int v4;
  int v5;

  v1 = objc_msgSend(v0, sel_episodes);
  if (v1)
  {
    v2 = v1;
    sub_1A909E53C();
    sub_1A922ECCC();
    v3 = sub_1A93F85F8();

    sub_1A922E888(v3);
    LODWORD(v2) = v4;
    swift_bridgeObjectRelease();
    v5 = v2 ^ 1;
  }
  else
  {
    v5 = 1;
  }
  return (objc_msgSend(v0, sel_subscribed) ^ 1) & v5;
}

unint64_t sub_1A922ECCC()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1ED2A1CA8;
  if (!qword_1ED2A1CA8)
  {
    v1 = sub_1A909E53C();
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2A1CA8);
  }
  return result;
}

uint64_t Future<>.init(unwrapping:)(uint64_t a1, uint64_t a2)
{
  return sub_1A922EFCC(a1, a2);
}

{
  return sub_1A922EFCC(a1, a2);
}

uint64_t sub_1A922ED28()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A922ED4C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A922F028(a1, a2, v2[3], v2[4], v2[2], (uint64_t)&unk_1E54E70F8, (uint64_t)&unk_1EEABB418);
}

uint64_t sub_1A922ED78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);

  v6[2] = a4;
  v6[3] = a5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v8 = sub_1A93F9390();
  v6[4] = v8;
  v6[5] = *(_QWORD *)(v8 - 8);
  v6[6] = swift_task_alloc();
  v9 = swift_task_alloc();
  v6[7] = v9;
  v12 = (uint64_t (*)(uint64_t))((char *)a6 + *a6);
  v10 = (_QWORD *)swift_task_alloc();
  v6[8] = v10;
  *v10 = v6;
  v10[1] = sub_1A922EE44;
  return v12(v9);
}

uint64_t sub_1A922EE44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A922EEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(void (**)(uint64_t))(v0 + 16);
  swift_storeEnumTagMultiPayload();
  v4(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A922EF24()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD *);
  id v6;

  v1 = *(void **)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD **)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(void (**)(_QWORD *))(v0 + 16);
  *v2 = v1;
  swift_storeEnumTagMultiPayload();
  v6 = v1;
  v5(v2);

  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A922EFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_allocObject();
  v5[2] = *(_QWORD *)(v2 + *MEMORY[0x1E0C960E8]);
  v5[3] = a1;
  v5[4] = a2;
  return sub_1A93F7A88();
}

uint64_t sub_1A922F028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC08);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A93F84CC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = a5;
  v17[5] = a1;
  v17[6] = a2;
  v17[7] = a3;
  v17[8] = a4;
  swift_retain();
  swift_retain();
  sub_1A936AF50((uint64_t)v15, a7, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_1A922F11C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A922F028(a1, a2, v2[3], v2[4], v2[2], (uint64_t)&unk_1E54E70D0, (uint64_t)&unk_1EEABB408);
}

uint64_t sub_1A922F148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);

  v6[2] = a4;
  v6[3] = a5;
  v8 = sub_1A93F9390();
  v6[4] = v8;
  v6[5] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v6[6] = v9;
  v12 = (uint64_t (*)(uint64_t))((char *)a6 + *a6);
  v10 = (_QWORD *)swift_task_alloc();
  v6[7] = v10;
  *v10 = v6;
  v10[1] = sub_1A922F1F4;
  return v12(v9);
}

uint64_t sub_1A922F1F4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A922F248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(void (**)(uint64_t))(v0 + 16);
  swift_storeEnumTagMultiPayload();
  v4(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A922F2C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[5];
  v7 = v1[6];
  v8 = (int *)v1[7];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1A921755C;
  return sub_1A922F148(a1, v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_5Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A922F38C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[5];
  v7 = v1[6];
  v8 = (int *)v1[7];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1A9164CD4;
  return sub_1A922ED78(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1A922F424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 48);
  if (*(_QWORD *)(v10 + 16))
  {
    v11 = a4 & 1;
    sub_1A9086E60(a2, a3, v11);
    v12 = sub_1A9083EC8(a2, a3, v11);
    if ((v13 & 1) != 0)
    {
      v14 = v12;
      v15 = *(_QWORD *)(v10 + 56);
      v16 = type metadata accessor for EpisodePlayState();
      v17 = *(_QWORD *)(v16 - 8);
      sub_1A90891E4(v15 + *(_QWORD *)(v17 + 72) * v14, a5);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(a5, 0, 1, v16);
    }
    else
    {
      v19 = type metadata accessor for EpisodePlayState();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a5, 1, 1, v19);
    }
    sub_1A9086E08(a2, a3, v11);
  }
  else
  {
    v18 = type metadata accessor for EpisodePlayState();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a5, 1, 1, v18);
  }
  return swift_endAccess();
}

uint64_t OnDemandLibraryEpisodeStateDataSource<>.estimatedPlayState(for:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v22;
  os_log_type_t v23;
  NSObject *v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;

  v5 = v4;
  v10 = sub_1A93F7698();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v5 + 56))
  {
    v18 = a3 & 1;
    MEMORY[0x1E0C80A78](v15);
    *(&v27 - 4) = v5;
    *(&v27 - 3) = a1;
    *(&v27 - 2) = a2;
    *((_BYTE *)&v27 - 8) = v19;
    sub_1A93F8874();
    v20 = type metadata accessor for EpisodePlayState();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v17, 1, v20) == 1)
      EpisodeStateRepository.enqueueEpisodeStateFetch(for:)(a1, a2, v18);
    return sub_1A911612C((uint64_t)v17, a4);
  }
  else
  {
    if (qword_1EEAB6E90 != -1)
      swift_once();
    v22 = __swift_project_value_buffer(v10, (uint64_t)qword_1EEABA8A8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v22, v10);
    v23 = sub_1A93F879C();
    v24 = sub_1A93F7674();
    if (os_log_type_enabled(v24, v23))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1A904E000, v24, v23, "You are using an instance of OnDemandLibraryEpisodeStateDataSource that never received startObservingChanges()!! This means estimatedPlayState(for:) will never return any state at all, just nils. This is not the way this was supposed to be used. You should be using the same shared instance of OnDemandLibraryEpisodeStateDataSource than the FSM system is using.", v25, 2u);
      MEMORY[0x1AF41411C](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v26 = type metadata accessor for EpisodePlayState();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a4, 1, 1, v26);
  }
}

uint64_t sub_1A922F7D8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  return OnDemandLibraryEpisodeStateDataSource<>.estimatedPlayState(for:)(a1, a2, a3 & 1, a4);
}

uint64_t sub_1A922F7FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A922F424(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), a1);
}

Swift::String __swiftcall PFLocalizedString(_:comment:)(Swift::String _, Swift::String comment)
{
  uint64_t v2;
  void *v3;
  Swift::String result;

  if (qword_1ED2AD260 != -1)
    swift_once();
  v2 = sub_1A93F7044();
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

id sub_1A922F8A8()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for PodcastsFoundationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1ED2AD218 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for PodcastsFoundationBundle()
{
  return objc_opt_self();
}

uint64_t Publisher.ignoreValue()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1A93F7B84();
  return swift_release();
}

uint64_t sub_1A922F994()
{
  return swift_deallocObject();
}

uint64_t dispatch thunk of EpisodeAndShowStorage.episodeChanges.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EpisodeAndShowStorage.showChanges.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EpisodeAndShowStorage.limitShowNotifications(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EpisodeAndShowStorage.limitEpisodeNotifications(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of EpisodeAndShowStorage.fetchShowIDs(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of EpisodeAndShowStorage.fetchEpisodeIDs(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of EpisodeAndShowStorage.fetchEpisodeManagedIDs(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_1A922FA3C()
{
  uint64_t v0;

  sub_1A9085818(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EpisodeRemovalManagingMock()
{
  return objc_opt_self();
}

void sub_1A922FAB0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  _BYTE *v14;
  void *v15;
  _BYTE *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v19 = objc_msgSend(objc_allocWithZone((Class)IMPodcastParser), sel_init);
  v0 = (void *)sub_1A93F729C();
  v1 = objc_msgSend(v19, sel_parseWithData_, v0);

  v2 = objc_msgSend(v19, sel_parseError);
  if (v2)
  {
    v20 = (uint64_t)v2;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 96;
    v18 = v2;
    sub_1A9067F64(&v20);

LABEL_3:
    return;
  }
  if (v1)
  {
    v18 = v1;
    v3 = objc_msgSend(v18, sel_items);
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(v3, sel_count);

      if (!v5)
      {
        sub_1A9069320();
        v15 = (void *)swift_allocError();
        *v16 = 8;
        v20 = (uint64_t)v15;
        v21 = 0;
        v22 = 0;
        v23 = 0;
        v24 = 96;
        sub_1A9067F64(&v20);

        goto LABEL_3;
      }
      if (qword_1ED2A4890 != -1)
        swift_once();
      v6 = sub_1A93F7698();
      __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A87A8);
      swift_retain_n();
      v7 = sub_1A93F7674();
      v8 = sub_1A93F87B4();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = swift_slowAlloc();
        v10 = swift_slowAlloc();
        *(_DWORD *)v9 = 141558275;
        v20 = v10;
        sub_1A93F8AA8();
        *(_WORD *)(v9 + 12) = 2081;
        type metadata accessor for FeedUpdateRequest();
        v11 = sub_1A93F7170();
        sub_1A906436C(v11, v12, &v20);
        sub_1A93F8AA8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v7, v8, "Job %{private,mask.hash}s: Successfully parsed feed.", (uint8_t *)v9, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v10, -1, -1);
        MEMORY[0x1AF41411C](v9, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v20 = (uint64_t)v1;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      v24 = 32;
      v17 = v18;
      sub_1A9067F64(&v20);

    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1A9069320();
    v13 = (void *)swift_allocError();
    *v14 = 6;
    v20 = (uint64_t)v13;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 96;
    sub_1A9067F64(&v20);

  }
}

void sub_1A922FE84(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(void *, uint64_t, uint64_t);
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  _BYTE *v13;
  void *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  void (*v18)();
  uint64_t v19;

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_request;
  v5 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v4
                                                          + *(int *)(type metadata accessor for FeedUpdateRequest() + 60));
  if (!v5)
    goto LABEL_4;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  swift_retain();
  v7 = (void *)v5(a1, 1, v6);
  if (objc_msgSend(v7, sel_shouldContinue))
  {

    sub_1A9085818((uint64_t)v5);
LABEL_4:
    v8 = *(void **)(v2 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v2;
    *(_QWORD *)(v9 + 24) = a1;
    v18 = sub_1A9234438;
    v19 = v9;
    v14 = (void *)MEMORY[0x1E0C809B0];
    v15 = 1107296256;
    v16 = sub_1A908A91C;
    v17 = &block_descriptor_4;
    v10 = _Block_copy(&v14);
    swift_retain();
    v11 = a1;
    swift_release();
    objc_msgSend(v8, sel_performBlock_, v10);
    _Block_release(v10);
    return;
  }
  sub_1A9069320();
  v12 = (void *)swift_allocError();
  *v13 = 11;
  v14 = v12;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  LOBYTE(v18) = 96;
  sub_1A9067F64(&v14);

  sub_1A9085818((uint64_t)v5);
}

void sub_1A9230044(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD v11[6];

  v3 = v2;
  v6 = v3 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_request;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6
                                                        + *(int *)(type metadata accessor for FeedUpdateRequest() + 64));
  if (v7)
  {
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
    swift_retain();
    v7(a1, a2, v8);
    sub_1A9085818((uint64_t)v7);
  }
  v9 = *(void **)(v3 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  v11[4] = sub_1A92367E0;
  v11[5] = v3;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A908A91C;
  v11[3] = &block_descriptor_7_1;
  v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_performBlock_, v10);
  _Block_release(v10);
}

uint64_t sub_1A9230160()
{
  return type metadata accessor for RSSFeedUpdaterJob();
}

uint64_t sub_1A9230168()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for FeedUpdateRequest();
  if (v1 <= 0x3F)
  {
    result = sub_1A93F75FC();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

id sub_1A9230248(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    return result;
  return result;
}

void destroy for RSSFeedUpdaterJob.State(uint64_t a1)
{
  sub_1A9068AD8(*(void **)a1, *(id *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

void sub_1A9230268(id a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)

}

uint64_t initializeWithCopy for RSSFeedUpdaterJob.State(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A9068B40(*(id *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for RSSFeedUpdaterJob.State(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A9068B40(*(id *)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(void **)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1A9068AD8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for RSSFeedUpdaterJob.State(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1A9068AD8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for RSSFeedUpdaterJob.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7B && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 123);
  v3 = ((*(unsigned __int8 *)(a1 + 32) >> 5) & 0xFFFFFF87 | (8 * ((*(unsigned __int8 *)(a1 + 32) >> 1) & 0xF))) ^ 0x7F;
  if (v3 >= 0x7A)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RSSFeedUpdaterJob.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7A)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 123;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1A923043C(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 <= 0x9F)
    return v1 >> 5;
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_1A9230458(uint64_t result)
{
  *(_BYTE *)(result + 32) &= 0x1Fu;
  return result;
}

uint64_t sub_1A9230468(uint64_t result, unsigned int a2)
{
  if (a2 < 5)
  {
    *(_BYTE *)(result + 32) = *(_BYTE *)(result + 32) & 1 | (32 * a2);
  }
  else
  {
    *(_QWORD *)result = a2 - 5;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = -96;
  }
  return result;
}

ValueMetadata *type metadata accessor for RSSFeedUpdaterJob.State()
{
  return &type metadata for RSSFeedUpdaterJob.State;
}

void sub_1A92304A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;

  v4 = sub_1A93F7E9C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9A18];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1A93F7EA8();
  MEMORY[0x1E0C80A78](v6);
  sub_1A9066CA8(&qword_1ED2AD1E0, v5, MEMORY[0x1E0CA9A10]);
  sub_1A93F7E78();
  __asm { BR              X10 }
}

void sub_1A92305AC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;

  *(_QWORD *)(v6 - 128) = v1;
  *(_WORD *)(v6 - 120) = v0;
  *(_BYTE *)(v6 - 118) = BYTE2(v0);
  *(_BYTE *)(v6 - 117) = BYTE3(v0);
  *(_BYTE *)(v6 - 116) = BYTE4(v0);
  *(_BYTE *)(v6 - 115) = BYTE5(v0);
  sub_1A93F7E60();
  sub_1A905F180(v1, v0);
  sub_1A93F7E6C();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  v7 = sub_1A91C6E60(v5);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 176) + 8))(v5, *(_QWORD *)(v6 - 168));
  *(_QWORD *)(v6 - 128) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
  v8 = sub_1A93F7FE0();
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v6 - 160);
  v12 = (uint64_t *)(v11 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_feedUniquenessHash);
  *v12 = v8;
  v12[1] = v10;
  swift_bridgeObjectRelease();
  v13 = *(void **)(v11 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  type metadata accessor for FeedUpdateRequest();
  sub_1A93F7170();
  v14 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_podcastForFeedUrl_, v14);

  if (!v15)
    goto LABEL_12;
  v16 = objc_msgSend(v15, sel_feedUniquenessHash);
  if (!v16)
  {
    v21 = v12[1];
LABEL_9:
    if (!v21)
      goto LABEL_14;
    goto LABEL_10;
  }
  v17 = v16;
  v18 = sub_1A93F8040();
  v20 = v19;

  v21 = v12[1];
  if (!v20)
    goto LABEL_9;
  if (!v21)
  {

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v18 != *v12 || v21 != v20)
  {
    v22 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
      goto LABEL_14;
LABEL_10:

LABEL_12:
    *(_QWORD *)(v6 - 128) = v1;
    *(_QWORD *)(v6 - 120) = v0;
    *(_QWORD *)(v6 - 112) = 0;
    *(_QWORD *)(v6 - 104) = 0;
    *(_BYTE *)(v6 - 96) = 0;
    sub_1A9067F64((__int128 *)(v6 - 128));
    return;
  }
  swift_bridgeObjectRelease();
LABEL_14:
  if (qword_1ED2A4890 != -1)
    swift_once();
  v23 = sub_1A93F7698();
  __swift_project_value_buffer(v23, (uint64_t)qword_1ED2A87A8);
  swift_retain_n();
  v24 = sub_1A93F7674();
  v25 = sub_1A93F87B4();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    *(_QWORD *)(v6 - 128) = v27;
    *(_DWORD *)v26 = 141558275;
    *(_QWORD *)(v6 - 152) = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v26 + 12) = 2081;
    v28 = sub_1A93F7170();
    *(_QWORD *)(v6 - 152) = sub_1A906436C(v28, v29, (uint64_t *)(v6 - 128));
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v24, v25, "Job %{private,mask.hash}s: Feed has not changed since last feed update. Not doing feed update.", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v27, -1, -1);
    MEMORY[0x1AF41411C](v26, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v30 = *(_OWORD *)(v11 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData + 16);
  *(_OWORD *)(v6 - 128) = *(_OWORD *)(v11 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData);
  *(_OWORD *)(v6 - 112) = v30;
  *(_BYTE *)(v6 - 96) = 0x80;
  sub_1A9067F64((__int128 *)(v6 - 128));

}

void sub_1A9230AC8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t updated;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  id v89;
  void *v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  id v97;
  char v98;
  uint64_t v99;
  void (*v100)(char *);
  char *v101;
  NSObject *v102;
  os_log_type_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  id v107;
  void *v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  id v113;
  void *v114;
  char *v115;
  uint64_t v116;
  void (*v117)(uint64_t, char *, uint64_t);
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  char *v124;
  char v125;
  void (*v126)(char *, uint64_t);
  char *v127;
  char *v128;
  id v129;
  id v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  NSObject *v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  id v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  id v153;
  NSObject *v154;
  os_log_type_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  id v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  id v167;
  id v168;
  NSObject *v169;
  os_log_type_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  id v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  char *v185;
  double v186;
  double v187;
  double v188;
  double v189;
  void *v190;
  id v191;
  id v192;
  NSObject *v193;
  os_log_type_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  id v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void *v204;
  _BYTE *v205;
  uint64_t v206;
  unint64_t v207;
  NSObject *v208;
  os_log_type_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  unint64_t v214;
  uint64_t v215;
  id v216;
  int v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  int64_t v221;
  void *v222;
  char *v223;
  unint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;
  __int128 v228;
  int64_t v229;
  unint64_t v230;
  int64_t v231;
  id v232;
  __int128 v233;
  unint64_t *v234;
  id v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t *v239;
  char *v240;
  unint64_t v241;
  void *v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  id v251;
  void *v252;
  uint64_t v253;
  void *v254;
  uint64_t v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char v262;

  v254 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v3);
  v237 = (char *)&v214 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F738C();
  v245 = *(_QWORD *)(v5 - 8);
  v246 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v240 = (char *)&v214 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v223 = (char *)&v214 - v8;
  v9 = sub_1A93F7698();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v214 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v243 = (char *)&v214 - v15;
  MEMORY[0x1E0C80A78](v14);
  v244 = (char *)&v214 - v16;
  v17 = *(void **)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  v18 = a1;
  v19 = a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_request;
  updated = type metadata accessor for FeedUpdateRequest();
  v253 = v19 + *(int *)(updated + 20);
  sub_1A93F7170();
  v21 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v235 = v17;
  v22 = objc_msgSend(v17, sel_podcastForFeedUrl_, v21);

  if (!v22)
    goto LABEL_117;
  v23 = objc_msgSend(v22, sel_uuid);
  if (!v23)
  {

LABEL_117:
    sub_1A9069320();
    v204 = (void *)swift_allocError();
    *v205 = 10;
    v258 = (uint64_t)v204;
    v259 = 0;
    v260 = 0;
    v261 = 0;
    v262 = 96;
    sub_1A9067F64(&v258);

    return;
  }
  v24 = v23;
  v220 = v13;
  v249 = v10;
  v250 = v9;
  v219 = sub_1A93F8040();
  v26 = v25;

  v27 = *(_QWORD *)(v18 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ingesterProvider + 24);
  v28 = *(_QWORD *)(v18 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ingesterProvider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v18 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ingesterProvider), v27);
  v29 = *(_QWORD *)(v19 + *(int *)(updated + 48));
  v30 = *(_QWORD *)(v18 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_updaterJobUUID);
  v31 = *(_QWORD *)(v18 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_updaterJobUUID + 8);
  v32 = *(uint64_t (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8);
  swift_bridgeObjectRetain();
  v33 = v27;
  v34 = v18;
  v35 = (void *)v32(v22, v29, v30, v31, v33, v28);
  swift_bridgeObjectRelease();
  v36 = v254;
  objc_msgSend(v35, sel_unsafeIngestShow_, v254);
  objc_msgSend(v235, sel_saveInCurrentBlock);
  v37 = sub_1A923281C(v36);
  if (v37)
  {
    v38 = v37;
    v216 = v22;
    v222 = v35;
    v215 = v26;
    v231 = sub_1A9232C20();
    v256 = 0;
    v257 = MEMORY[0x1E0DEE9E8];
    v241 = v38;
    v226 = v38 & 0xFFFFFFFFFFFFFF8;
    if (v38 >> 62)
      goto LABEL_137;
    v40 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_6:
    v42 = v249;
    v41 = v250;
    v43 = v244;
    v44 = &unk_1A940B000;
    v238 = v34;
    if (v40 <= 0)
    {
LABEL_111:
      swift_bridgeObjectRelease();
      objc_msgSend(v235, sel_saveInCurrentBlock);
      sub_1A9232DE8((uint64_t *)&v256, v231, (uint64_t)&v257);
      swift_bridgeObjectRelease();
      v190 = v222;
      sub_1A9233380(v257, v222);
      swift_bridgeObjectRelease();
      objc_msgSend(v190, sel_unsafeFinalizeIngestion);
      v191 = v216;
      objc_msgSend(v216, sel_setImporting_, 0);
      objc_msgSend(v191, sel_setIsTransitioningFromImplicit_, 0);
      if (qword_1ED2A4890 != -1)
        swift_once();
      __swift_project_value_buffer(v41, (uint64_t)qword_1ED2A87A8);
      swift_retain_n();
      v192 = v191;
      v193 = sub_1A93F7674();
      v194 = sub_1A93F87B4();
      if (os_log_type_enabled(v193, v194))
      {
        v195 = swift_slowAlloc();
        v196 = swift_slowAlloc();
        v255 = v196;
        *(_DWORD *)v195 = v44[457];
        v258 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v195 + 12) = 2081;
        v197 = sub_1A93F7170();
        v258 = sub_1A906436C(v197, v198, &v255);
        sub_1A93F8AA8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v195 + 22) = 2082;
        v199 = objc_msgSend(v192, sel_uuid);
        if (v199)
        {
          v200 = v199;
          v201 = sub_1A93F8040();
          v203 = v202;

        }
        else
        {
          v201 = 0;
          v203 = 0;
        }
        v258 = v201;
        v259 = v203;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
        v206 = sub_1A93F8094();
        v258 = sub_1A906436C(v206, v207, &v255);
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v193, v194, "Job %{private,mask.hash}s: finalized ingestion for show: %{public}s", (uint8_t *)v195, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v196, -1, -1);
        MEMORY[0x1AF41411C](v195, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      objc_msgSend(v235, sel_saveInCurrentBlock, v214);
      swift_retain_n();
      v208 = sub_1A93F7674();
      v209 = sub_1A93F87B4();
      if (os_log_type_enabled(v208, v209))
      {
        v210 = swift_slowAlloc();
        v211 = swift_slowAlloc();
        v258 = v211;
        *(_DWORD *)v210 = 141558275;
        v255 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v210 + 12) = 2081;
        v212 = sub_1A93F7170();
        v255 = sub_1A906436C(v212, v213, &v258);
        sub_1A93F8AA8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v208, v209, "Job %{private,mask.hash}s: Processing fully completed.", (uint8_t *)v210, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v211, -1, -1);
        MEMORY[0x1AF41411C](v210, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v258 = v219;
      v259 = v215;
      v260 = 0;
      v261 = 0;
      v262 = 64;
      sub_1A9067F64(&v258);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

    }
    else
    {
      v45 = 0;
      v218 = v34 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData;
      v248 = v241 & 0xC000000000000001;
      v224 = v241 + 32;
      v46 = v231 & 0xFFFFFFFFFFFFFF8;
      v225 = v231 & 0xFFFFFFFFFFFFFF8;
      if (v231 < 0)
        v46 = v231;
      v214 = v46;
      v230 = v231 & 0xC000000000000001;
      v221 = v231 + 32;
      v234 = &v256;
      v239 = &v259;
      *(_QWORD *)&v39 = 141558787;
      v233 = v39;
      v227 = MEMORY[0x1E0DEE9B8] + 8;
      *(_QWORD *)&v39 = 141558531;
      v228 = v39;
      v236 = v40;
      while (1)
      {
        v254 = (void *)v45;
        if (v248)
        {
          v47 = (id)MEMORY[0x1AF4129DC](v45);
        }
        else
        {
          if (v45 < 0)
            goto LABEL_127;
          if ((unint64_t)v45 >= *(_QWORD *)(v226 + 16))
          {
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            swift_bridgeObjectRetain();
            v40 = sub_1A93F8E5C();
            swift_bridgeObjectRelease();
            goto LABEL_6;
          }
          v47 = *(id *)(v224 + 8 * v45);
        }
        v48 = v47;
        v49 = objc_msgSend(v47, sel_enclosureURL, v214);
        if (!v49)
          break;

        v50 = objc_msgSend(v48, sel_enclosureURL);
        if (!v50)
          break;
        v51 = v50;
        v52 = sub_1A93F8040();
        v54 = v53;

        if (!v54)
          break;
        swift_bridgeObjectRelease();
        v55 = HIBYTE(v54) & 0xF;
        if ((v54 & 0x2000000000000000) == 0)
          v55 = v52 & 0xFFFFFFFFFFFFLL;
        if (!v55)
          break;
        v56 = v256;
        if ((unint64_t)v231 >> 62)
        {
          swift_bridgeObjectRetain();
          v57 = sub_1A93F8E5C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v57 = *(_QWORD *)(v225 + 16);
        }
        v252 = v48;
        if ((uint64_t)v56 < v57)
        {
          v229 = v57;
          if (v230)
          {
            v58 = (id)MEMORY[0x1AF4129DC](v56, v231);
          }
          else
          {
            if ((v56 & 0x8000000000000000) != 0)
              goto LABEL_133;
            if (v56 >= *(_QWORD *)(v225 + 16))
              goto LABEL_134;
            v58 = *(id *)(v221 + 8 * v56);
          }
          v59 = v58;
          v60 = v58;
          if ((sub_1A92361B4(v60, v48) & 1) != 0)
          {
LABEL_32:

            v256 = v56 + 1;
            v251 = v59;
LABEL_88:
            v79 = v59;

            if (qword_1ED2A4890 != -1)
              swift_once();
            __swift_project_value_buffer(v41, (uint64_t)qword_1ED2A87A8);
            swift_retain_n();
            v168 = v60;
            v169 = sub_1A93F7674();
            v170 = sub_1A93F87B4();
            if (os_log_type_enabled(v169, v170))
            {
              v171 = swift_slowAlloc();
              v172 = swift_slowAlloc();
              v255 = v172;
              *(_DWORD *)v171 = v228;
              v258 = 1752392040;
              sub_1A93F8AA8();
              *(_WORD *)(v171 + 12) = 2081;
              v173 = sub_1A93F7170();
              v258 = sub_1A906436C(v173, v174, &v255);
              sub_1A93F8AA8();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v171 + 22) = 2082;
              v175 = objc_msgSend(v168, sel_uuid);
              if (v175)
              {
                v176 = v175;
                v177 = sub_1A93F8040();
                v179 = v178;

              }
              else
              {
                v177 = 0;
                v179 = 0;
              }
              v258 = v177;
              v259 = v179;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
              v180 = sub_1A93F8094();
              v258 = sub_1A906436C(v180, v181, &v255);
              sub_1A93F8AA8();

              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1A904E000, v169, v170, "Job %{private,mask.hash}s: updating episode: %{public}s", (uint8_t *)v171, 0x20u);
              swift_arrayDestroy();
              MEMORY[0x1AF41411C](v172, -1, -1);
              MEMORY[0x1AF41411C](v171, -1, -1);

              v34 = v238;
              v42 = v249;
              v41 = v250;
              v48 = v252;
            }
            else
            {

              swift_release_n();
            }
            v182 = *(_QWORD *)(v218 + 16);
            v95 = __OFADD__(v182, 1);
            v183 = v182 + 1;
            v43 = v244;
            v44 = (_QWORD *)&unk_1A940B000;
            v40 = v236;
            if (v95)
              goto LABEL_135;
            *(_QWORD *)(v218 + 16) = v183;
            goto LABEL_98;
          }
          if (qword_1ED2A4890 != -1)
            swift_once();
          v251 = v59;
          while (2)
          {
            v99 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED2A87A8);
            v100 = *(void (**)(char *))(v42 + 16);
            v101 = v243;
            v247 = v99;
            v100(v243);
            swift_retain_n();
            v68 = v48;
            v102 = sub_1A93F7674();
            v103 = sub_1A93F87B4();
            if (os_log_type_enabled(v102, v103))
            {
              v232 = v60;
              v66 = (char *)swift_slowAlloc();
              v104 = swift_slowAlloc();
              v258 = v104;
              *(_DWORD *)v66 = v228;
              v255 = 1752392040;
              sub_1A93F8AA8();
              *((_WORD *)v66 + 6) = 2081;
              v105 = sub_1A93F7170();
              v255 = sub_1A906436C(v105, v106, &v258);
              sub_1A93F8AA8();
              swift_release_n();
              swift_bridgeObjectRelease();
              *((_WORD *)v66 + 11) = 2080;
              v107 = objc_msgSend((id)v68, sel_title);
              if (!v107)
                goto LABEL_139;
              v108 = v107;
              v109 = sub_1A93F8040();
              v111 = v110;

              v255 = sub_1A906436C(v109, v111, &v258);
              sub_1A93F8AA8();

              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1A904E000, v102, v103, "Job %{private,mask.hash}s: did not find a local episode match for server episode: %s", (uint8_t *)v66, 0x20u);
              swift_arrayDestroy();
              MEMORY[0x1AF41411C](v104, -1, -1);
              MEMORY[0x1AF41411C](v66, -1, -1);

              v42 = v249;
              v41 = v250;
              (*(void (**)(char *, uint64_t))(v249 + 8))(v243, v250);
              v34 = v238;
              v112 = (uint64_t)v237;
              v60 = v232;
            }
            else
            {

              swift_release_n();
              (*(void (**)(char *, uint64_t))(v42 + 8))(v101, v41);
              v112 = (uint64_t)v237;
            }
            v242 = (void *)v68;
            v113 = objc_msgSend((id)v68, sel_pubDate);
            v48 = v252;
            if (v113)
            {
              v114 = v113;
              v115 = v240;
              sub_1A93F7368();

              v116 = v245;
              v117 = *(void (**)(uint64_t, char *, uint64_t))(v245 + 32);
              v118 = v115;
              v119 = v246;
              v117(v112, v118, v246);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v116 + 56))(v112, 0, 1, v119);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v112, 1, v119) != 1)
              {
                v120 = v223;
                v121 = v246;
                v117((uint64_t)v223, (char *)v112, v246);
                objc_msgSend(v60, sel_pubDate);
                v122 = v60;
                v123 = v34;
                v124 = v240;
                sub_1A93F72CC();
                v125 = sub_1A93F732C();
                v126 = *(void (**)(char *, uint64_t))(v245 + 8);
                v127 = v124;
                v34 = v123;
                v60 = v122;
                v126(v127, v121);
                v128 = v120;
                v48 = v252;
                v126(v128, v121);
                if ((v125 & 1) != 0)
                  goto LABEL_87;
LABEL_64:
                v130 = objc_msgSend(v60, sel_uuid);
                if (v130)
                {
                  v131 = v130;
                  v132 = sub_1A93F8040();
                  v133 = v34;
                  v135 = v134;

                  v136 = v135;
                  v34 = v133;
                  sub_1A9091D1C(&v258, v132, v136);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  swift_retain_n();
                  v137 = v60;
                  v138 = v34;
                  v139 = sub_1A93F7674();
                  v140 = sub_1A93F879C();
                  if (os_log_type_enabled(v139, (os_log_type_t)v140))
                  {
                    v217 = v140;
                    v232 = v60;
                    v141 = swift_slowAlloc();
                    v142 = swift_slowAlloc();
                    v255 = v142;
                    *(_DWORD *)v141 = v233;
                    v258 = 1752392040;
                    sub_1A93F8AA8();
                    *(_WORD *)(v141 + 12) = 2081;
                    v143 = sub_1A93F7170();
                    v258 = sub_1A906436C(v143, v144, &v255);
                    sub_1A93F8AA8();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v141 + 22) = 2160;
                    v258 = 1752392040;
                    sub_1A93F8AA8();
                    *(_WORD *)(v141 + 32) = 2081;
                    v145 = objc_msgSend(v137, sel_title);
                    if (v145)
                    {
                      v146 = v145;
                      v147 = sub_1A93F8040();
                      v149 = v148;

                    }
                    else
                    {
                      v147 = 0;
                      v149 = 0;
                    }
                    v258 = v147;
                    v259 = v149;
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
                    v150 = sub_1A93F8094();
                    v258 = sub_1A906436C(v150, v151, &v255);
                    sub_1A93F8AA8();

                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_1A904E000, v139, (os_log_type_t)v217, "Job %{private,mask.hash}s: nil UUID for localEpisode no longer in server feed: %{private,mask.hash}s", (uint8_t *)v141, 0x2Au);
                    swift_arrayDestroy();
                    MEMORY[0x1AF41411C](v142, -1, -1);
                    MEMORY[0x1AF41411C](v141, -1, -1);

                    v34 = v238;
                    v42 = v249;
                    v41 = v250;
                    v60 = v232;
                  }
                  else
                  {

                    swift_release_n();
                    v34 = v138;
                  }
                }
                v152 = v256 + 1;
                if (__OFADD__(v256, 1))
                {
                  __break(1u);
LABEL_127:
                  __break(1u);
                  goto LABEL_128;
                }
                ++v256;
                swift_retain_n();
                v153 = v60;
                v154 = sub_1A93F7674();
                v155 = sub_1A93F87B4();
                if (os_log_type_enabled(v154, v155))
                {
                  v156 = swift_slowAlloc();
                  v247 = swift_slowAlloc();
                  v255 = v247;
                  *(_DWORD *)v156 = v228;
                  v258 = 1752392040;
                  sub_1A93F8AA8();
                  *(_WORD *)(v156 + 12) = 2081;
                  v157 = sub_1A93F7170();
                  v258 = sub_1A906436C(v157, v158, &v255);
                  sub_1A93F8AA8();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v156 + 22) = 2082;
                  v159 = objc_msgSend(v153, sel_uuid);
                  if (v159)
                  {
                    v160 = v159;
                    v161 = sub_1A93F8040();
                    v163 = v162;

                  }
                  else
                  {
                    v161 = 0;
                    v163 = 0;
                  }
                  v258 = v161;
                  v259 = v163;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
                  v164 = sub_1A93F8094();
                  v258 = sub_1A906436C(v164, v165, &v255);
                  sub_1A93F8AA8();

                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_1A904E000, v154, v155, "Job %{private,mask.hash}s: marking episode for deletion: %{public}s", (uint8_t *)v156, 0x20u);
                  v166 = v247;
                  swift_arrayDestroy();
                  MEMORY[0x1AF41411C](v166, -1, -1);
                  MEMORY[0x1AF41411C](v156, -1, -1);

                  v34 = v238;
                  v42 = v249;
                  v41 = v250;
                }
                else
                {

                  swift_release_n();
                }
                v48 = v252;
                if (__ROR8__(0x8F5C28F5C28F5C29 * v152 + 0x51EB851EB851EB8, 3) <= 0x147AE147AE147AEuLL)
                  objc_msgSend(v235, sel_saveInCurrentBlock);

                v56 = v256;
                if ((uint64_t)v256 >= v229)
                {
                  v60 = v251;
                  v59 = v251;
                  goto LABEL_88;
                }
                v167 = v251;
                if (v230)
                {
                  v97 = (id)MEMORY[0x1AF4129DC](v256, v231);
                }
                else
                {
                  if ((v256 & 0x8000000000000000) != 0)
                    goto LABEL_129;
                  if (v256 >= *(_QWORD *)(v225 + 16))
                    goto LABEL_130;
                  v97 = *(id *)(v221 + 8 * v256);
                }
                v59 = v97;

                v60 = v59;
                v98 = sub_1A92361B4(v60, v242);
                v251 = v59;
                if ((v98 & 1) != 0)
                  goto LABEL_32;
                continue;
              }
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v245 + 56))(v112, 1, 1, v246);
            }
            break;
          }
          sub_1A905FD54(v112, (uint64_t *)&unk_1ED2AD360);
          v129 = objc_msgSend(v60, sel_guid);
          if (!v129)
          {
LABEL_87:

            v77 = v251;
            goto LABEL_39;
          }

          goto LABEL_64;
        }
        v77 = 0;
LABEL_39:
        v78 = v48;
        v79 = objc_msgSend(v222, sel_unsafeIngestNewEpisode_, v78);

        if (qword_1ED2A4890 != -1)
          swift_once();
        v80 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED2A87A8);
        v81 = v220;
        (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v220, v80, v41);
        swift_retain_n();
        v82 = v34;
        v66 = (char *)v78;
        v83 = sub_1A93F7674();
        v84 = sub_1A93F87B4();
        if (os_log_type_enabled(v83, v84))
        {
          v85 = swift_slowAlloc();
          v86 = swift_slowAlloc();
          v258 = v86;
          *(_DWORD *)v85 = v233;
          *(_QWORD *)(v85 + 4) = 1752392040;
          *(_WORD *)(v85 + 12) = 2081;
          v87 = sub_1A93F7170();
          *(_QWORD *)(v85 + 14) = sub_1A906436C(v87, v88, &v258);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v85 + 22) = 2160;
          *(_QWORD *)(v85 + 24) = 1752392040;
          *(_WORD *)(v85 + 32) = 2081;
          v89 = objc_msgSend(v66, sel_title);
          if (!v89)
            goto LABEL_140;
          v90 = v89;
          v91 = sub_1A93F8040();
          v93 = v92;

          *(_QWORD *)(v85 + 34) = sub_1A906436C(v91, v93, &v258);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A904E000, v83, v84, "Job %{private,mask.hash}s: inserting new episode for server episode: %{private,mask.hash}s", (uint8_t *)v85, 0x2Au);
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v86, -1, -1);
          MEMORY[0x1AF41411C](v85, -1, -1);

          v42 = v249;
          v41 = v250;
          (*(void (**)(char *, uint64_t))(v249 + 8))(v220, v250);
          v34 = v238;
          v44 = (_QWORD *)&unk_1A940B000;
          v40 = v236;
          v48 = v252;
        }
        else
        {

          swift_release_n();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v81, v41);
          v34 = v82;
          v44 = (_QWORD *)&unk_1A940B000;
          v40 = v236;
        }
        v94 = *(_QWORD *)(v218 + 8);
        v95 = __OFADD__(v94, 1);
        v96 = v94 + 1;
        v43 = v244;
        if (v95)
          goto LABEL_132;
        *(_QWORD *)(v218 + 8) = v96;
        v251 = v79;
        if (!v79)
        {
          v251 = 0;
          goto LABEL_102;
        }
LABEL_98:
        v184 = v79;
        v185 = v240;
        sub_1A93F7380();
        sub_1A93F72D8();
        v187 = v186;
        (*(void (**)(char *, uint64_t))(v245 + 8))(v185, v246);
        objc_msgSend(v184, sel_firstTimeAvailable);
        if (v187 < v188)
        {
          objc_msgSend(v184, sel_firstTimeAvailableAsFree);
          if (v189 == 0.0)
          {
            objc_msgSend(v184, sel_setFirstTimeAvailable_, v187);
            objc_msgSend(v184, sel_setFirstTimeAvailableAsFree_, v187);
          }
        }

LABEL_102:
        if (__ROR8__(0x8F5C28F5C28F5C29 * v256 + 0x51EB851EB851EB8, 3) <= 0x147AE147AE147AEuLL)
        {
          objc_msgSend(v235, sel_saveInCurrentBlock);

          v45 = (uint64_t)v254 + 1;
          if (__OFADD__(v254, 1))
            goto LABEL_136;
        }
        else
        {

          v45 = (uint64_t)v254 + 1;
          if (__OFADD__(v254, 1))
            goto LABEL_131;
        }
LABEL_12:
        if (v45 >= v40)
          goto LABEL_111;
      }
      if (qword_1ED2A4890 != -1)
        swift_once();
      v61 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED2A87A8);
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v43, v61, v41);
      swift_retain_n();
      v62 = v48;
      v63 = sub_1A93F7674();
      v64 = sub_1A93F87B4();
      if (!os_log_type_enabled(v63, v64))
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v41);
LABEL_11:
        v45 = (uint64_t)v254 + 1;
        goto LABEL_12;
      }
      v65 = v34;
      v66 = (char *)swift_slowAlloc();
      v67 = swift_slowAlloc();
      v258 = v67;
      *(_DWORD *)v66 = v233;
      v68 = 1752392040;
      *(_QWORD *)(v66 + 4) = 1752392040;
      *((_WORD *)v66 + 6) = 2081;
      v69 = sub_1A93F7170();
      *(_QWORD *)(v66 + 14) = sub_1A906436C(v69, v70, &v258);
      v71 = v65;
      swift_release_n();
      swift_bridgeObjectRelease();
      *((_WORD *)v66 + 11) = 2160;
      *((_QWORD *)v66 + 3) = 1752392040;
      *((_WORD *)v66 + 16) = 2081;
      v72 = objc_msgSend(v62, sel_title);
      if (v72)
      {
        v73 = v72;
        v74 = sub_1A93F8040();
        v76 = v75;

        *(_QWORD *)(v66 + 34) = sub_1A906436C(v74, v76, &v258);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v63, v64, "Job %{private,mask.hash}s: feed item without an enclosure: %{private,mask.hash}s", (uint8_t *)v66, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v67, -1, -1);
        MEMORY[0x1AF41411C](v66, -1, -1);

        v42 = v249;
        v41 = v250;
        v43 = v244;
        (*(void (**)(char *, uint64_t))(v249 + 8))(v244, v250);
        v34 = v71;
        v44 = (_QWORD *)&unk_1A940B000;
        v40 = v236;
        goto LABEL_11;
      }

      __break(1u);
LABEL_139:

      __break(1u);
LABEL_140:

      __break(1u);
    }
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1A923281C(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  _BYTE *v4;
  _QWORD v6[4];
  char v7;

  v1 = objc_msgSend(a1, sel_items);
  if (v1)
  {
    v2 = v1;
    v6[0] = 0;
    sub_1A9072534(0, &qword_1ED2A41B0);
    sub_1A93F8304();

  }
  sub_1A9069320();
  v3 = (void *)swift_allocError();
  *v4 = 5;
  v6[0] = v3;
  memset(&v6[1], 0, 24);
  v7 = 96;
  sub_1A9067F64(v6);

  return 0;
}

uint64_t sub_1A9232C20()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;

  sub_1A93F8040();
  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_1A93F8010();
  v5 = objc_msgSend(v3, sel_predicateForAllEpisodesIncludingHiddenOnPodcastUuid_, v4);

  objc_msgSend(v2, sel_setPredicate_, v5);
  sub_1A923608C();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v6 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setSortDescriptors_, v6);

  objc_msgSend(v2, sel_setReturnsObjectsAsFaults_, 0);
  objc_msgSend(v2, sel_setFetchBatchSize_, 200);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v7 = sub_1A93F89DC();

  return v7;
}

void sub_1A9232DE8(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v4 = a2;
  v5 = a1;
  v6 = *a1;
  if (a2 >> 62)
    goto LABEL_34;
  v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v6 < v7)
  {
    v51 = v4 & 0xC000000000000001;
    v46 = v4 + 32;
    v47 = v4 & 0xFFFFFFFFFFFFFF8;
    v45 = a3;
    v48 = v4;
    v49 = v7;
    v50 = v5;
    while (1)
    {
      if (v51)
      {
        v8 = (id)MEMORY[0x1AF4129DC](v6, v4);
      }
      else
      {
        if (v6 < 0)
          goto LABEL_32;
        if ((unint64_t)v6 >= *(_QWORD *)(v47 + 16))
          goto LABEL_33;
        v8 = *(id *)(v46 + 8 * v6);
      }
      v9 = v8;
      v10 = objc_msgSend(v8, sel_uuid);
      if (v10)
      {
        v11 = v10;
        v12 = sub_1A93F8040();
        v14 = v13;

        sub_1A9091D1C(&v52, v12, v14);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1ED2A4890 != -1)
          swift_once();
        v15 = sub_1A93F7698();
        __swift_project_value_buffer(v15, (uint64_t)qword_1ED2A87A8);
        swift_retain_n();
        v16 = v9;
        v17 = sub_1A93F7674();
        v18 = sub_1A93F879C();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = swift_slowAlloc();
          v20 = swift_slowAlloc();
          v54 = v20;
          *(_DWORD *)v19 = 141558787;
          *(_QWORD *)(v19 + 4) = 1752392040;
          *(_WORD *)(v19 + 12) = 2081;
          type metadata accessor for FeedUpdateRequest();
          v21 = sub_1A93F7170();
          *(_QWORD *)(v19 + 14) = sub_1A906436C(v21, v22, &v54);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v19 + 22) = 2160;
          *(_QWORD *)(v19 + 24) = 1752392040;
          *(_WORD *)(v19 + 32) = 2081;
          v23 = objc_msgSend(v16, sel_title);
          if (v23)
          {
            v24 = v23;
            v25 = sub_1A93F8040();
            v27 = v26;

          }
          else
          {
            v25 = 0;
            v27 = 0;
          }
          v4 = v48;
          v52 = v25;
          v53 = v27;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
          v28 = sub_1A93F8094();
          *(_QWORD *)(v19 + 34) = sub_1A906436C(v28, v29, &v54);

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A904E000, v17, v18, "Job %{private,mask.hash}s: nil UUID for localEpisode no longer in server feed: %{private,mask.hash}s", (uint8_t *)v19, 0x2Au);
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v20, -1, -1);
          MEMORY[0x1AF41411C](v19, -1, -1);

          a3 = v45;
        }
        else
        {

          swift_release_n();
        }
        v7 = v49;
        v5 = v50;
      }
      if (qword_1ED2A4890 != -1)
        swift_once();
      v30 = sub_1A93F7698();
      __swift_project_value_buffer(v30, (uint64_t)qword_1ED2A87A8);
      swift_retain_n();
      v31 = v9;
      v32 = sub_1A93F7674();
      v33 = sub_1A93F87B4();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = swift_slowAlloc();
        v35 = swift_slowAlloc();
        v54 = v35;
        *(_DWORD *)v34 = 141558787;
        *(_QWORD *)(v34 + 4) = 1752392040;
        *(_WORD *)(v34 + 12) = 2081;
        type metadata accessor for FeedUpdateRequest();
        v36 = sub_1A93F7170();
        *(_QWORD *)(v34 + 14) = sub_1A906436C(v36, v37, &v54);
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 22) = 2160;
        *(_QWORD *)(v34 + 24) = 1752392040;
        *(_WORD *)(v34 + 32) = 2081;
        v38 = objc_msgSend(v31, sel_uuid);
        if (v38)
        {
          v39 = v38;
          v40 = sub_1A93F8040();
          v42 = v41;

        }
        else
        {
          v40 = 0;
          v42 = 0;
        }
        v4 = v48;
        v52 = v40;
        v53 = v42;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
        v43 = sub_1A93F8094();
        *(_QWORD *)(v34 + 34) = sub_1A906436C(v43, v44, &v54);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v32, v33, "Job %{private,mask.hash}s: marking episode for deletion from tail end: %{private,mask.hash}s", (uint8_t *)v34, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v35, -1, -1);
        MEMORY[0x1AF41411C](v34, -1, -1);

        v7 = v49;
        v5 = v50;
      }
      else
      {

        swift_release_n();
      }
      v6 = *v5 + 1;
      if (__OFADD__(*v5, 1))
        break;
      *v5 = v6;
      if (v6 >= v7)
        return;
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v7 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
}

void sub_1A9233380(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  void *v53;
  int v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v60[2];
  uint64_t v61[2];

  v3 = v2;
  sub_1A93F8040();
  v5 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v6 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  v8 = (void *)objc_opt_self();
  v9 = (void *)sub_1A93F85EC();
  v10 = objc_msgSend(v8, sel_predicateForEpisodeUuids_, v9);

  objc_msgSend(v7, sel_setPredicate_, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1A9405960;
  sub_1A93F8040();
  v12 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v13 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithKey_ascending_, v13, 0);

  *(_QWORD *)(v11 + 32) = v14;
  v60[0] = v11;
  sub_1A93F8328();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v15 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setSortDescriptors_, v15);

  objc_msgSend(v7, sel_setReturnsObjectsAsFaults_, 0);
  objc_msgSend(v7, sel_setFetchBatchSize_, 200);
  v58 = v3;
  v16 = *(void **)(v3 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v52 = v16;
  v53 = v7;
  v17 = sub_1A93F89DC();
  v18 = v3;
  if (qword_1ED2A4890 != -1)
    goto LABEL_23;
  while (1)
  {
    v19 = sub_1A93F7698();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED2A87A8);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v20 = sub_1A93F7674();
    v21 = sub_1A93F87B4();
    v22 = &unk_1A940B000;
    v23 = v17 >> 62;
    v57 = v17;
    if (os_log_type_enabled(v20, v21))
    {
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v60[0] = v25;
      *(_DWORD *)v24 = 141558531;
      v61[0] = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v24 + 12) = 2081;
      type metadata accessor for FeedUpdateRequest();
      v26 = sub_1A93F7170();
      v61[0] = sub_1A906436C(v26, v27, v60);
      v18 = v58;
      sub_1A93F8AA8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 22) = 2048;
      if (v23)
      {
        swift_bridgeObjectRetain();
        v28 = sub_1A93F8E5C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v28 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v61[0] = v28;
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v20, v21, "Job %{private,mask.hash}s: deleting %ld feed deleted episodes", (uint8_t *)v24, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v25, -1, -1);
      MEMORY[0x1AF41411C](v24, -1, -1);

      v17 = v57;
      v22 = (_QWORD *)&unk_1A940B000;
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    v29 = *(_QWORD *)(a1 + 16);
    v30 = *(_QWORD *)(v18 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData + 24);
    v31 = __OFADD__(v30, v29);
    v32 = v30 + v29;
    if (v31)
      break;
    *(_QWORD *)(v18 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData + 24) = v32;
    if (v23)
      goto LABEL_25;
    v33 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v33)
      goto LABEL_26;
LABEL_10:
    v34 = v17 & 0xC000000000000001;
    v35 = 4;
    v54 = v22[457];
    v56 = v33;
    v55 = v17 & 0xC000000000000001;
    while (1)
    {
      v36 = v34 ? (id)MEMORY[0x1AF4129DC](v35 - 4, v17) : *(id *)(v17 + 8 * v35);
      v37 = v36;
      a1 = v35 - 3;
      if (__OFADD__(v35 - 4, 1))
        break;
      objc_msgSend(a2, sel_unsafeDeleteFeedDeletedEpisode_, v36);
      swift_retain_n();
      v38 = v37;
      v39 = sub_1A93F7674();
      v40 = sub_1A93F87B4();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = swift_slowAlloc();
        v42 = swift_slowAlloc();
        v61[0] = v42;
        *(_DWORD *)v41 = v54;
        *(_QWORD *)(v41 + 4) = 1752392040;
        *(_WORD *)(v41 + 12) = 2081;
        type metadata accessor for FeedUpdateRequest();
        v43 = sub_1A93F7170();
        *(_QWORD *)(v41 + 14) = sub_1A906436C(v43, v44, v61);
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v41 + 22) = 2082;
        v45 = objc_msgSend(v38, sel_uuid);
        if (v45)
        {
          v46 = v45;
          v47 = sub_1A93F8040();
          v49 = v48;

        }
        else
        {
          v47 = 0;
          v49 = 0;
        }
        v34 = v55;
        v60[0] = v47;
        v60[1] = v49;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
        v50 = sub_1A93F8094();
        *(_QWORD *)(v41 + 24) = sub_1A906436C(v50, v51, v61);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v39, v40, "Job %{private,mask.hash}s: deleting episode %{public}s", (uint8_t *)v41, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v42, -1, -1);
        MEMORY[0x1AF41411C](v41, -1, -1);

        v17 = v57;
        v18 = v58;
        v33 = v56;
      }
      else
      {

        swift_release_n();
      }
      ++v35;
      if (a1 == v33)
        goto LABEL_26;
    }
    __break(1u);
LABEL_23:
    swift_once();
  }
  __break(1u);
LABEL_25:
  swift_bridgeObjectRetain();
  v33 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (v33)
    goto LABEL_10;
LABEL_26:
  swift_bridgeObjectRelease();
  objc_msgSend(v52, sel_saveInCurrentBlock);

}

uint64_t sub_1A9233B10(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  _OWORD v15[2];
  char v16;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  type metadata accessor for FeedUpdateRequest();
  sub_1A93F7170();
  v3 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_podcastForFeedUrl_, v3);

  if (v4)
  {
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_feedUniquenessHash + 8))
    {
      swift_bridgeObjectRetain();
      v5 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v4, sel_setFeedUniquenessHash_, v5);

    objc_msgSend(v2, sel_saveInCurrentBlock);
  }
  else
  {
    if (qword_1ED2A4890 != -1)
      swift_once();
    v6 = sub_1A93F7698();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A87A8);
    swift_retain_n();
    v7 = sub_1A93F7674();
    v8 = sub_1A93F879C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      *(_DWORD *)v9 = 141558275;
      *(_QWORD *)&v15[0] = v10;
      sub_1A93F8AA8();
      *(_WORD *)(v9 + 12) = 2081;
      v11 = sub_1A93F7170();
      sub_1A906436C(v11, v12, (uint64_t *)v15);
      sub_1A93F8AA8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v7, v8, "Job %{private,mask.hash}s: Unable to save data uniqueness hash.", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v10, -1, -1);
      MEMORY[0x1AF41411C](v9, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
  v13 = *(_OWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData + 16);
  v15[0] = *(_OWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData);
  v15[1] = v13;
  v16 = 0x80;
  return sub_1A9067F64(v15);
}

void sub_1A9233DD8()
{
  __int128 *v0;
  _BYTE v1[40];

  sub_1A9068BA8(v0, (uint64_t)v1);
  sub_1A9068BC0();
}

char *sub_1A9233E0C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABB6B0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A9233F04(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -40)
  {
    result = (char *)sub_1A93F8E98();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = 40 * (v4 / 40);
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_1A9233FBC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_1A93F8E98();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

char *sub_1A9234064(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_1A93F8E98();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1A9234110(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -48)
  {
    result = (char *)sub_1A93F8E98();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
      return (char *)memmove(result, v3, 48 * v6);
  }
  return result;
}

char *sub_1A92341CC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1A93F8E98();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1A9234274(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    result = (char *)sub_1A93F8E98();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
      return (char *)memmove(result, v3, 24 * v6);
  }
  return result;
}

char *sub_1A9234330(uint64_t a1)
{
  return sub_1A9233E0C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A9234344(uint64_t a1)
{
  return sub_1A929F698(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A9234358(uint64_t a1)
{
  return sub_1A929F800(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A923436C(uint64_t a1)
{
  return sub_1A929F964(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A9234380(uint64_t a1)
{
  return sub_1A929FAC0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A9234394(_QWORD *a1)
{
  return sub_1A929FEE0(0, a1[2], 0, a1);
}

uint64_t sub_1A92343A8(_QWORD *a1)
{
  return sub_1A929FEF4(0, a1[2], 0, a1);
}

uint64_t sub_1A92343BC(_QWORD *a1)
{
  return sub_1A92A01E0(0, a1[2], 0, a1);
}

uint64_t sub_1A92343D0(uint64_t a1)
{
  return sub_1A9081848(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A92343E4(_QWORD *a1)
{
  return sub_1A92A1358(0, a1[2], 0, a1);
}

uint64_t sub_1A92343F8(_QWORD *a1)
{
  return sub_1A92A136C(0, a1[2], 0, a1);
}

uint64_t sub_1A923440C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1A9234438()
{
  uint64_t v0;

  sub_1A9230AC8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1A9234440(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  id v24;
  id v25;
  void *v26;
  int v27;
  char *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  char v42;
  uint64_t v44;
  char *v45;
  void *v46;
  id v47;

  v47 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v44 - v7;
  v9 = sub_1A93F738C();
  v10 = *(_QWORD **)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v44 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v44 - v17;
  v19 = objc_msgSend(a1, sel_pubDate);
  if (v19)
  {
    v20 = v19;
    v45 = v13;
    v46 = a1;
    sub_1A93F7368();

    v21 = (void (*)(char *, char *, uint64_t))v10[4];
    v21(v8, v16, v9);
    v22 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v10[7];
    v22(v8, 0, 1, v9);
    v23 = (uint64_t (*)(char *, uint64_t, uint64_t))v10[6];
    if (v23(v8, 1, v9) == 1)
    {
      v6 = v8;
      a1 = v46;
      v24 = v47;
    }
    else
    {
      v21(v18, v8, v9);
      v24 = v47;
      v25 = objc_msgSend(v47, sel_pubDate);
      if (v25)
      {
        v26 = v25;
        sub_1A93F7368();

        v21(v6, v16, v9);
        v22(v6, 0, 1, v9);
        v27 = v23(v6, 1, v9);
        a1 = v46;
        if (v27 != 1)
        {
          v28 = v45;
          v21(v45, v6, v9);
          sub_1A9066CA8(&qword_1ED2A5C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
          v29 = sub_1A93F7FEC() ^ 1;
          v30 = (void (*)(char *, uint64_t))v10[1];
          v30(v28, v9);
          v30(v18, v9);
          return v29 & 1;
        }
      }
      else
      {
        v22(v6, 1, 1, v9);
        a1 = v46;
      }
      ((void (*)(char *, uint64_t))v10[1])(v18, v9);
    }
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v10[7])(v8, 1, 1, v9);
    v6 = v8;
    v24 = v47;
  }
  sub_1A905FD54((uint64_t)v6, (uint64_t *)&unk_1ED2AD360);
  v31 = objc_msgSend(a1, sel_guid);
  if (!v31)
    goto LABEL_16;
  v32 = v31;
  v33 = sub_1A93F8040();
  v35 = v34;

  v36 = objc_msgSend(v24, sel_guid);
  if (!v36)
  {
    swift_bridgeObjectRelease();
LABEL_16:
    v41 = objc_msgSend(v24, sel_guid);
    if (v41)
    {

      v29 = 0;
    }
    else
    {
      v29 = 1;
    }
    return v29 & 1;
  }
  v37 = v36;
  v38 = sub_1A93F8040();
  v40 = v39;

  if (v33 == v38 && v35 == v40)
  {
    swift_bridgeObjectRelease_n();
    v29 = 1;
  }
  else
  {
    v42 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = v42 ^ 1;
  }
  return v29 & 1;
}

uint64_t sub_1A92347FC(id *a1, id *__src, unint64_t a3, char *a4)
{
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  char v18;
  id *v19;
  char *v20;
  id *v21;
  id *v22;
  id *v23;
  void *v24;
  id v25;
  id v26;
  char v27;
  uint64_t result;
  char *v31;
  void **v32;
  id *v33;

  v33 = a1;
  v5 = __src;
  v6 = (char *)__src - (char *)a1;
  v7 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0)
    v7 = (char *)__src - (char *)a1;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)__src;
  v10 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v10 = a3 - (_QWORD)__src;
  v11 = v10 >> 3;
  v32 = (void **)a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != (char *)__src || &__src[v11] <= (id *)a4)
        memmove(a4, __src, 8 * v11);
      v20 = &a4[8 * v11];
      v31 = v20;
      v33 = v5;
      if (a1 < v5 && v9 >= 8)
      {
        v21 = (id *)(a3 - 8);
        v22 = v5;
        do
        {
          v23 = v21 + 1;
          v24 = *--v22;
          v25 = *((id *)v20 - 1);
          v26 = v24;
          v27 = sub_1A9234440(v25, v26);

          if ((v27 & 1) != 0)
          {
            if (v23 != v5 || v21 >= v5)
              *v21 = *v22;
            v33 = v22;
          }
          else
          {
            v31 = v20 - 8;
            if (v23 < (id *)v20 || v21 >= (id *)v20 || v23 != (id *)v20)
              *v21 = (id)*((_QWORD *)v20 - 1);
            v22 = v5;
            v20 -= 8;
          }
          if (v22 <= a1)
            break;
          --v21;
          v5 = v22;
        }
        while (v20 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != (char *)a1 || &a1[v8] <= (id *)a4)
      memmove(a4, a1, 8 * v8);
    v12 = (void **)&a4[8 * v8];
    v31 = (char *)v12;
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      v13 = (void **)a4;
      v14 = a1;
      do
      {
        v15 = *v13;
        v16 = *v5;
        v17 = v15;
        v18 = sub_1A9234440(v16, v17);

        if ((v18 & 1) != 0)
        {
          v19 = v5 + 1;
          if (v14 < v5 || v14 >= v19 || v14 != v5)
            *v14 = *v5;
        }
        else
        {
          if (v14 != v13)
            *v14 = *v13;
          v32 = ++v13;
          v19 = v5;
        }
        ++v14;
        if (v13 >= v12)
          break;
        v5 = v19;
      }
      while ((unint64_t)v19 < a3);
      v33 = v14;
    }
LABEL_43:
    sub_1A9234064((void **)&v33, (const void **)&v32, &v31);
    return 1;
  }
  swift_release();
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

void sub_1A9234AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char **v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  id v32;
  void *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  char v38;
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  char v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  id v70;

  v59 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  v8 = MEMORY[0x1E0C80A78](v7);
  v62 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v69 = (char *)&v57 - v10;
  v11 = sub_1A93F738C();
  v68 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v60 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v64 = (char *)&v57 - v15;
  MEMORY[0x1E0C80A78](v14);
  v63 = (char *)&v57 - v16;
  v58 = a2;
  if (a3 != a2)
  {
    v17 = *a4;
    v65 = v11;
    v66 = v17;
    v18 = v17 + 8 * a3 - 8;
    v19 = &selRef_dateByAddingTimeInterval_;
LABEL_5:
    v20 = *(void **)(v66 + 8 * a3);
    v21 = v59;
    v61 = v18;
    v67 = a3;
    while (1)
    {
      v22 = *(void **)v18;
      v23 = v20;
      v70 = v22;
      v24 = objc_msgSend(v23, sel_pubDate);
      if (v24)
      {
        v25 = v24;
        v26 = v64;
        sub_1A93F7368();

        v28 = v68;
        v27 = (uint64_t)v69;
        v29 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
        v29(v69, v26, v11);
        v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
        v30(v27, 0, 1, v11);
        v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
        if (v31(v27, 1, v11) != 1)
        {
          v29(v63, v69, v11);
          v32 = objc_msgSend(v70, sel_pubDate);
          if (v32)
          {
            v33 = v32;
            v34 = v64;
            sub_1A93F7368();

            v27 = (uint64_t)v62;
            v35 = v34;
            v19 = &selRef_dateByAddingTimeInterval_;
            v29(v62, v35, v11);
            v30(v27, 0, 1, v11);
            if (v31(v27, 1, v11) != 1)
            {
              v36 = v60;
              v29(v60, (char *)v27, v11);
              sub_1A9066CA8(&qword_1ED2A5C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
              v37 = v63;
              v38 = sub_1A93F7FEC();
              v11 = v65;
              v39 = v38;
              v40 = *(void (**)(char *, uint64_t))(v68 + 8);
              v40(v36, v65);
              v40(v37, v11);

              v41 = v67;
              if ((v39 & 1) != 0)
                goto LABEL_4;
              goto LABEL_24;
            }
          }
          else
          {
            v27 = (uint64_t)v62;
            v30((uint64_t)v62, 1, 1, v11);
          }
          (*(void (**)(char *, uint64_t))(v68 + 8))(v63, v11);
        }
      }
      else
      {
        v27 = (uint64_t)v69;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v69, 1, 1, v11);
      }
      sub_1A905FD54(v27, (uint64_t *)&unk_1ED2AD360);
      v42 = objc_msgSend(v23, v19[196]);
      v41 = v67;
      if (v42)
      {
        v43 = v42;
        v44 = v67;
        v45 = sub_1A93F8040();
        v47 = v46;

        v48 = objc_msgSend(v70, v19[196]);
        if (v48)
        {
          v49 = v48;
          v50 = sub_1A93F8040();
          v52 = v51;

          if (v45 == v50 && v47 == v52)
          {

            swift_bridgeObjectRelease_n();
            v41 = v44;
            v11 = v65;
            v19 = &selRef_dateByAddingTimeInterval_;
          }
          else
          {
            v55 = sub_1A93F90C0();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v41 = v44;
            v11 = v65;
            v19 = &selRef_dateByAddingTimeInterval_;
            if ((v55 & 1) != 0)
              goto LABEL_4;
          }
          goto LABEL_24;
        }
        swift_bridgeObjectRelease();
        v41 = v44;
        v11 = v65;
        v19 = &selRef_dateByAddingTimeInterval_;
      }
      v53 = v70;
      v54 = objc_msgSend(v70, v19[196]);

      if (v54)
      {

LABEL_4:
        a3 = v41 + 1;
        v18 = v61 + 8;
        if (a3 == v58)
          return;
        goto LABEL_5;
      }
LABEL_24:
      if (!v66)
      {
        __break(1u);
        return;
      }
      v56 = *(void **)v18;
      v20 = *(void **)(v18 + 8);
      *(_QWORD *)v18 = v20;
      *(_QWORD *)(v18 + 8) = v56;
      v18 -= 8;
      if (v41 == ++v21)
        goto LABEL_4;
    }
  }
}

uint64_t sub_1A9234F90(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  int v52;
  char **v53;
  uint64_t v54;
  id v55;
  void *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  int v61;
  void (*v62)(char *, uint64_t);
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  const char *v73;
  char *v74;
  id v75;
  uint64_t *v76;
  char *v77;
  char *v78;
  uint64_t *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void *v83;
  void *v84;
  id v85;
  id v86;
  id v87;
  void *v88;
  char *v89;
  uint64_t v90;
  id v91;
  char *v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  unsigned int (*v96)(char *, uint64_t, uint64_t);
  unsigned int v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  id v100;
  uint64_t v101;
  void *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char v108;
  void *v109;
  void (*v110)(char *, uint64_t);
  char *v111;
  id v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  id v118;
  void *v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  char v125;
  void *v126;
  char *v127;
  unint64_t v128;
  unint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  BOOL v144;
  unint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  BOOL v154;
  uint64_t v155;
  char v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  BOOL v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  unint64_t v176;
  char *v177;
  uint64_t v178;
  id *v179;
  id *v180;
  unint64_t v181;
  id *v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  id *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t *v200;
  char *v201;
  char *v202;
  char *v203;
  uint64_t v204;
  char *v205;
  char *v206;
  char *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  unsigned int (*v214)(char *, uint64_t, uint64_t);
  char *v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  v6 = MEMORY[0x1E0C80A78](v5);
  v213 = (char *)&v196 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v220 = (char *)&v196 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v201 = (char *)&v196 - v11;
  MEMORY[0x1E0C80A78](v10);
  v205 = (char *)&v196 - v12;
  v218 = sub_1A93F738C();
  v221 = *(_QWORD *)(v218 - 8);
  v13 = MEMORY[0x1E0C80A78](v218);
  v207 = (char *)&v196 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v215 = (char *)&v196 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v199 = (char *)&v196 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v216 = (char *)&v196 - v20;
  MEMORY[0x1E0C80A78](v19);
  v202 = (char *)&v196 - v21;
  v200 = a1;
  v22 = a1[1];
  swift_retain_n();
  v23 = sub_1A93F9054();
  if (v23 >= v22)
  {
    if (v22 < 0)
      goto LABEL_178;
    if (v22)
      sub_1A9234AC4(0, v22, 1, v200);
    return swift_release_n();
  }
  if (v22 >= 0)
    v24 = v22;
  else
    v24 = v22 + 1;
  if (v22 < -1)
    goto LABEL_186;
  v210 = a2;
  v204 = v22;
  v198 = v23;
  v211 = v2;
  if (v22 < 2)
  {
    v28 = (char *)MEMORY[0x1E0DEE9D8];
    v223 = MEMORY[0x1E0DEE9D8];
    v209 = (char *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v22 != 1)
    {
      v32 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_144:
      v212 = v28;
      if (v32 >= 2)
      {
        v185 = *v200;
        do
        {
          v186 = v32 - 2;
          if (v32 < 2)
            goto LABEL_173;
          if (!v185)
            goto LABEL_185;
          v187 = *(_QWORD *)&v212[16 * v186 + 32];
          v188 = *(_QWORD *)&v212[16 * v32 + 24];
          v189 = (id *)(v185 + 8 * *(_QWORD *)&v212[16 * v32 + 16]);
          swift_retain();
          v190 = v211;
          sub_1A92347FC((id *)(v185 + 8 * v187), v189, v185 + 8 * v188, v209);
          v211 = v190;
          if (v190)
            goto LABEL_142;
          swift_release();
          if (v188 < v187)
            goto LABEL_174;
          v191 = v212;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v191 = sub_1A9234330((uint64_t)v191);
          if (v186 >= *((_QWORD *)v191 + 2))
            goto LABEL_175;
          v192 = v191 + 32;
          v193 = &v191[16 * v186 + 32];
          *(_QWORD *)v193 = v187;
          *((_QWORD *)v193 + 1) = v188;
          v194 = v191;
          v195 = *((_QWORD *)v191 + 2);
          if (v32 > v195)
            goto LABEL_176;
          memmove(&v192[16 * v32 - 16], &v192[16 * v32], 16 * (v195 - v32));
          v212 = v194;
          *((_QWORD *)v194 + 2) = v195 - 1;
          v32 = v195 - 1;
        }
        while (v195 > 2);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)((v223 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1A93F8328();
      swift_release_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v25 = v24 >> 1;
    sub_1A9072534(0, &qword_1ED2A41B0);
    v26 = sub_1A93F837C();
    *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) = v25;
    v209 = (char *)((v26 & 0xFFFFFFFFFFFFFF8) + 32);
    v223 = v26;
  }
  v29 = 0;
  v30 = *v200;
  v197 = *v200 - 8;
  v28 = (char *)MEMORY[0x1E0DEE9D8];
  v31 = v204;
  v219 = v30;
  while (2)
  {
    v33 = (uint64_t)v29;
    v34 = v29 + 1;
    v212 = v28;
    v206 = v29;
    if ((uint64_t)(v29 + 1) >= v31)
    {
      ++v29;
      goto LABEL_90;
    }
    v35 = *(void **)(v219 + 8 * (_QWORD)v29);
    v36 = *(id *)(v219 + 8 * (_QWORD)v34);
    v37 = v35;
    LODWORD(v217) = sub_1A9234440(v36, v37);

    v38 = v204;
    v39 = (uint64_t)(v29 + 2);
    if ((uint64_t)(v29 + 2) >= v204)
    {
      v29 += 2;
      v28 = v212;
LABEL_46:
      if ((v217 & 1) != 0)
      {
LABEL_47:
        if ((uint64_t)v29 < v33)
          goto LABEL_179;
LABEL_48:
        if (v33 < (uint64_t)v29)
        {
          v76 = (uint64_t *)(v197 + 8 * (_QWORD)v29);
          v77 = v29;
          v78 = (char *)v33;
          v79 = (uint64_t *)(v219 + 8 * v33);
          while (1)
          {
            if (v78 != --v77)
            {
              if (!v219)
                goto LABEL_184;
              v80 = *v79;
              *v79 = *v76;
              *v76 = v80;
            }
            ++v78;
            --v76;
            ++v79;
            if ((uint64_t)v78 >= (uint64_t)v77)
              goto LABEL_55;
          }
        }
      }
      goto LABEL_55;
    }
    while (1)
    {
      while (1)
      {
        v40 = *(void **)(v219 + 8 * (_QWORD)v34);
        v41 = *(id *)(v219 + 8 * v39);
        v222 = v40;
        v42 = objc_msgSend(v41, sel_pubDate);
        if (v42)
        {
          v43 = v42;
          v44 = v216;
          sub_1A93F7368();

          v45 = v221;
          v46 = *(void (**)(char *, char *, uint64_t))(v221 + 32);
          v47 = (uint64_t)v205;
          v48 = v44;
          v49 = v218;
          v46(v205, v48, v218);
          v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56);
          v50(v47, 0, 1, v49);
          v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
          v52 = v51(v47, 1, v49);
          v53 = &selRef_dateByAddingTimeInterval_;
          if (v52 != 1)
          {
            v54 = v218;
            v46(v202, v205, v218);
            v55 = objc_msgSend(v222, sel_pubDate);
            if (v55)
            {
              v56 = v55;
              v57 = v216;
              sub_1A93F7368();

              v47 = (uint64_t)v201;
              v58 = v57;
              v53 = &selRef_dateByAddingTimeInterval_;
              v46(v201, v58, v54);
              v50(v47, 0, 1, v54);
              if (v51(v47, 1, v54) != 1)
              {
                v59 = v199;
                v46(v199, (char *)v47, v54);
                sub_1A9066CA8(&qword_1ED2A5C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
                v60 = v202;
                v61 = sub_1A93F7FEC();
                v62 = *(void (**)(char *, uint64_t))(v221 + 8);
                v62(v59, v54);
                v62(v60, v54);
                v38 = v204;
                v33 = (uint64_t)v206;
                goto LABEL_41;
              }
            }
            else
            {
              v47 = (uint64_t)v201;
              v50((uint64_t)v201, 1, 1, v54);
            }
            (*(void (**)(char *, uint64_t))(v221 + 8))(v202, v54);
            v33 = (uint64_t)v206;
          }
        }
        else
        {
          v47 = (uint64_t)v205;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v221 + 56))(v205, 1, 1, v218);
          v53 = &selRef_dateByAddingTimeInterval_;
        }
        sub_1A905FD54(v47, (uint64_t *)&unk_1ED2AD360);
        v63 = objc_msgSend(v41, v53[196]);
        if (v63)
          break;
LABEL_32:
        v73 = v53[196];
        v74 = v222;
        v75 = objc_msgSend(v222, v73);

        if (v75)
        {

          v38 = v204;
          if ((v217 & 1) != 0)
          {
            v29 = (char *)v39;
            v28 = v212;
            if (v39 < v33)
              goto LABEL_179;
            goto LABEL_48;
          }
          v29 = (char *)(v39 + 1);
          v34 = (char *)v39;
          v39 = (uint64_t)v29;
          v28 = v212;
          if ((uint64_t)v29 >= v204)
            goto LABEL_55;
        }
        else
        {
          v28 = v212;
          v38 = v204;
          if ((v217 & 1) == 0)
          {
            v29 = (char *)v39;
            if (v39 >= v204)
              goto LABEL_90;
            goto LABEL_56;
          }
          v29 = (char *)(v39 + 1);
          v34 = (char *)v39;
          v39 = (uint64_t)v29;
          if ((uint64_t)v29 >= v204)
            goto LABEL_47;
        }
      }
      v64 = v63;
      v65 = sub_1A93F8040();
      v67 = v66;

      v68 = objc_msgSend(v222, v53[196]);
      if (!v68)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      v69 = v68;
      v70 = sub_1A93F8040();
      v72 = v71;

      if (v65 == v70 && v67 == v72)
        v61 = 0;
      else
        v61 = sub_1A93F90C0();
      v38 = v204;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_41:

      v28 = v212;
      if (((v217 ^ v61) & 1) == 0)
        break;
      v29 = (char *)(v39 + 1);
      v34 = (char *)v39;
      v39 = (uint64_t)v29;
      if ((uint64_t)v29 >= v38)
        goto LABEL_46;
    }
    v29 = (char *)v39;
    if ((v217 & 1) != 0)
      goto LABEL_47;
LABEL_55:
    if ((uint64_t)v29 >= v38)
      goto LABEL_90;
LABEL_56:
    if (__OFSUB__(v29, v33))
      goto LABEL_177;
    if ((uint64_t)&v29[-v33] >= v198)
      goto LABEL_90;
    if (__OFADD__(v33, v198))
      goto LABEL_180;
    if (v33 + v198 >= v38)
      v81 = (char *)v38;
    else
      v81 = (char *)(v33 + v198);
    if ((uint64_t)v81 >= v33)
    {
      if (v29 == v81)
        goto LABEL_90;
      v82 = v197 + 8 * (_QWORD)v29;
      v203 = v81;
      while (2)
      {
        v83 = *(void **)(v219 + 8 * (_QWORD)v29);
        v208 = v82;
        v222 = v29;
        while (2)
        {
          v84 = *(void **)v82;
          v85 = v83;
          v86 = v84;
          v87 = objc_msgSend(v85, sel_pubDate);
          if (!v87)
          {
            v104 = v220;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v221 + 56))(v220, 1, 1, v218);
            goto LABEL_76;
          }
          v88 = v87;
          v89 = v216;
          sub_1A93F7368();

          v90 = v221;
          v91 = v85;
          v92 = v220;
          v93 = v89;
          v94 = v218;
          v95 = *(void (**)(char *, char *, uint64_t))(v221 + 32);
          v95(v220, v93, v218);
          v217 = *(char **)(v90 + 56);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v217)(v92, 0, 1, v94);
          v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
          v97 = v96(v92, 1, v94);
          v98 = (uint64_t)v92;
          v85 = v91;
          if (v97 != 1)
          {
            v214 = v96;
            v99 = v95;
            v95(v215, v220, v94);
            v100 = objc_msgSend(v86, sel_pubDate);
            v101 = v94;
            if (v100)
            {
              v102 = v100;
              v103 = v216;
              sub_1A93F7368();

              v104 = v213;
              v105 = v103;
              v85 = v91;
              v95(v213, v105, v101);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v217)(v104, 0, 1, v101);
              if (v214(v104, 1, v101) != 1)
              {
                v106 = v207;
                v99(v207, v104, v101);
                sub_1A9066CA8(&qword_1ED2A5C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
                v107 = v215;
                v108 = sub_1A93F7FEC();
                v109 = v86;
                v110 = *(void (**)(char *, uint64_t))(v221 + 8);
                v110(v106, v101);
                v110(v107, v101);

                v111 = v222;
                if ((v108 & 1) != 0)
                  goto LABEL_65;
                goto LABEL_86;
              }
            }
            else
            {
              v104 = v213;
              ((void (*)(char *, uint64_t, uint64_t, uint64_t))v217)(v213, 1, 1, v101);
            }
            (*(void (**)(char *, uint64_t))(v221 + 8))(v215, v101);
LABEL_76:
            v98 = (uint64_t)v104;
          }
          sub_1A905FD54(v98, (uint64_t *)&unk_1ED2AD360);
          v112 = objc_msgSend(v85, sel_guid);
          v111 = v222;
          if (v112)
          {
            v113 = v112;
            v114 = sub_1A93F8040();
            v116 = v115;

            v117 = v86;
            v118 = objc_msgSend(v86, sel_guid);
            if (v118)
            {
              v119 = v118;
              v120 = v85;
              v121 = sub_1A93F8040();
              v123 = v122;

              if (v114 == v121 && v116 == v123)
              {

                swift_bridgeObjectRelease_n();
                v111 = v222;
              }
              else
              {
                v125 = sub_1A93F90C0();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v111 = v222;
                if ((v125 & 1) != 0)
                  goto LABEL_65;
              }
LABEL_86:
              if (!v219)
                goto LABEL_182;
              v126 = *(void **)v82;
              v83 = *(void **)(v82 + 8);
              *(_QWORD *)v82 = v83;
              *(_QWORD *)(v82 + 8) = v126;
              v82 -= 8;
              if (v111 == (char *)++v33)
                goto LABEL_65;
              continue;
            }
            swift_bridgeObjectRelease();
            v111 = v222;
          }
          break;
        }
        v124 = objc_msgSend(v86, sel_guid);

        if (!v124)
          goto LABEL_86;

LABEL_65:
        v29 = v111 + 1;
        v82 = v208 + 8;
        v33 = (uint64_t)v206;
        if (v29 != v203)
          continue;
        break;
      }
      v29 = v203;
      v28 = v212;
LABEL_90:
      if ((uint64_t)v29 < v33)
        goto LABEL_172;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v28 = sub_1A9233E0C(0, *((_QWORD *)v28 + 2) + 1, 1, v28);
      v127 = v28;
      v128 = *((_QWORD *)v28 + 2);
      v212 = v127;
      v129 = *((_QWORD *)v127 + 3);
      v32 = v128 + 1;
      if (v128 >= v129 >> 1)
        v212 = sub_1A9233E0C((char *)(v129 > 1), v128 + 1, 1, v212);
      v130 = v212;
      *((_QWORD *)v212 + 2) = v32;
      v217 = v130 + 32;
      v131 = &v130[16 * v128 + 32];
      *(_QWORD *)v131 = v33;
      *((_QWORD *)v131 + 1) = v29;
      if (!v128)
      {
        v32 = 1;
        v28 = v212;
LABEL_15:
        v31 = v204;
        if ((uint64_t)v29 >= v204)
          goto LABEL_144;
        continue;
      }
      v28 = v212;
      v132 = v217;
      v222 = v29;
LABEL_97:
      v133 = v32 - 1;
      if (v32 >= 4)
      {
        v138 = &v132[16 * v32];
        v139 = *((_QWORD *)v138 - 8);
        v140 = *((_QWORD *)v138 - 7);
        v144 = __OFSUB__(v140, v139);
        v141 = v140 - v139;
        if (v144)
          goto LABEL_161;
        v143 = *((_QWORD *)v138 - 6);
        v142 = *((_QWORD *)v138 - 5);
        v144 = __OFSUB__(v142, v143);
        v136 = v142 - v143;
        v137 = v144;
        if (v144)
          goto LABEL_162;
        v145 = v32 - 2;
        v146 = &v132[16 * v32 - 32];
        v148 = *(_QWORD *)v146;
        v147 = *((_QWORD *)v146 + 1);
        v144 = __OFSUB__(v147, v148);
        v149 = v147 - v148;
        if (v144)
          goto LABEL_164;
        v144 = __OFADD__(v136, v149);
        v150 = v136 + v149;
        if (v144)
          goto LABEL_167;
        if (v150 >= v141)
        {
          v168 = &v132[16 * v133];
          v170 = *(_QWORD *)v168;
          v169 = *((_QWORD *)v168 + 1);
          v144 = __OFSUB__(v169, v170);
          v171 = v169 - v170;
          if (v144)
            goto LABEL_171;
          v161 = v136 < v171;
        }
        else
        {
LABEL_110:
          if ((v137 & 1) != 0)
            goto LABEL_163;
          v145 = v32 - 2;
          v151 = &v132[16 * v32 - 32];
          v153 = *(_QWORD *)v151;
          v152 = *((_QWORD *)v151 + 1);
          v154 = __OFSUB__(v152, v153);
          v155 = v152 - v153;
          v156 = v154;
          if (v154)
            goto LABEL_166;
          v157 = &v132[16 * v133];
          v159 = *(_QWORD *)v157;
          v158 = *((_QWORD *)v157 + 1);
          v144 = __OFSUB__(v158, v159);
          v160 = v158 - v159;
          if (v144)
            goto LABEL_169;
          if (__OFADD__(v155, v160))
            goto LABEL_170;
          if (v155 + v160 < v136)
            goto LABEL_122;
          v161 = v136 < v160;
        }
        if (v161)
          v133 = v145;
      }
      else
      {
        if (v32 == 3)
        {
          v135 = *((_QWORD *)v28 + 4);
          v134 = *((_QWORD *)v28 + 5);
          v144 = __OFSUB__(v134, v135);
          v136 = v134 - v135;
          v137 = v144;
          goto LABEL_110;
        }
        v162 = *((_QWORD *)v28 + 4);
        v163 = *((_QWORD *)v28 + 5);
        v144 = __OFSUB__(v163, v162);
        v155 = v163 - v162;
        v156 = v144;
LABEL_122:
        if ((v156 & 1) != 0)
          goto LABEL_165;
        v164 = &v132[16 * v133];
        v166 = *(_QWORD *)v164;
        v165 = *((_QWORD *)v164 + 1);
        v144 = __OFSUB__(v165, v166);
        v167 = v165 - v166;
        if (v144)
          goto LABEL_168;
        if (v167 < v155)
          goto LABEL_15;
      }
      v172 = v133 - 1;
      if (v133 - 1 >= v32)
      {
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
        break;
      }
      if (!v219)
        goto LABEL_183;
      v173 = v132;
      v174 = &v132[16 * v172];
      v175 = *(_QWORD *)v174;
      v176 = v133;
      v177 = &v173[16 * v133];
      v178 = *((_QWORD *)v177 + 1);
      v179 = (id *)(v219 + 8 * *(_QWORD *)v174);
      v180 = (id *)(v219 + 8 * *(_QWORD *)v177);
      v181 = v219 + 8 * v178;
      swift_retain();
      v182 = v179;
      v183 = v211;
      sub_1A92347FC(v182, v180, v181, v209);
      if (v183)
      {
LABEL_142:
        swift_bridgeObjectRelease();
        swift_release();
        *(_QWORD *)((v223 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
        sub_1A93F8328();
        swift_release_n();
        return swift_bridgeObjectRelease();
      }
      swift_release();
      if (v178 < v175)
        goto LABEL_158;
      v28 = v212;
      if (v176 > *((_QWORD *)v212 + 2))
        goto LABEL_159;
      *(_QWORD *)v174 = v175;
      v132 = v217;
      *(_QWORD *)&v217[16 * v172 + 8] = v178;
      v184 = *((_QWORD *)v28 + 2);
      if (v176 >= v184)
        goto LABEL_160;
      v211 = 0;
      v32 = v184 - 1;
      memmove(v177, v177 + 16, 16 * (v184 - 1 - v176));
      *((_QWORD *)v28 + 2) = v184 - 1;
      v29 = v222;
      if (v184 <= 2)
        goto LABEL_15;
      goto LABEL_97;
    }
    break;
  }
  __break(1u);
LABEL_182:
  swift_release_n();
  __break(1u);
LABEL_183:
  swift_release_n();
  __break(1u);
LABEL_184:
  swift_release_n();
  __break(1u);
LABEL_185:
  swift_release_n();
  __break(1u);
LABEL_186:
  swift_release_n();
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t sub_1A9235FD8(unint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v6;
  uint64_t v8[2];

  v4 = *a1;
  swift_retain_n();
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v4;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v4 & 0x8000000000000000) != 0
    || (v4 & 0x4000000000000000) != 0)
  {
    sub_1A9398E00(v4);
  }
  v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v8[0] = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
  v8[1] = v6;
  swift_retain();
  sub_1A9234F90(v8, a2);
  swift_release();
  sub_1A93F8328();
  return swift_release_n();
}

uint64_t sub_1A923608C()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A940EB90;
  sub_1A93F8040();
  v1 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v2 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithKey_ascending_, v2, 0);

  *(_QWORD *)(v0 + 32) = v3;
  sub_1A93F8040();
  v4 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v5 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithKey_ascending_, v5, 0);

  *(_QWORD *)(v0 + 40) = v6;
  sub_1A93F8328();
  return v0;
}

uint64_t sub_1A92361B4(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  id v50;
  void *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(uint64_t, uint64_t, uint64_t);
  char *v59;
  char v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;

  v4 = sub_1A93F738C();
  v66 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v63 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C70);
  MEMORY[0x1E0C80A78](v64);
  v67 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v62 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v62 - v14;
  v16 = objc_msgSend(a2, sel_guid);
  if (v16)
  {
    v17 = v16;
    v18 = sub_1A93F8040();
    v20 = v19;

  }
  else
  {
    v18 = 0;
    v20 = 0;
  }
  v65 = v10;
  v21 = objc_msgSend(a1, sel_guid);
  if (!v21)
  {
    if (!v20)
      return 1;
    goto LABEL_13;
  }
  v22 = v21;
  v23 = sub_1A93F8040();
  v25 = v24;

  if (!v20)
  {
    if (!v25)
      return 1;
    goto LABEL_13;
  }
  if (!v25)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (v18 == v23 && v20 == v25)
    goto LABEL_22;
  v47 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v47 & 1) != 0)
    return 1;
LABEL_14:
  v26 = objc_msgSend(a2, sel_resolvedEnclosureUrl);
  if (v26)
  {
    v27 = v26;
    v28 = sub_1A93F8040();
    v30 = v29;

  }
  else
  {
    v28 = 0;
    v30 = 0;
  }
  v31 = objc_msgSend(a1, sel_enclosureURL);
  if (!v31)
  {
    if (!v30)
      return 1;
    goto LABEL_26;
  }
  v32 = v31;
  v33 = sub_1A93F8040();
  v35 = v34;

  if (!v30)
  {
    if (!v35)
      return 1;
    goto LABEL_26;
  }
  if (!v35)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  if (v28 == v33 && v30 == v35)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  v48 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v48 & 1) != 0)
    return 1;
LABEL_27:
  result = (uint64_t)objc_msgSend(a2, sel_title);
  if (result)
  {
    v37 = (void *)result;
    v38 = objc_msgSend((id)result, sel_stringByStrippingHTML);

    if (v38)
    {
      v39 = sub_1A93F8040();
      v41 = v40;

    }
    else
    {
      v39 = 0;
      v41 = 0;
    }
    v42 = objc_msgSend(a1, sel_title);
    if (v42)
    {
      v43 = v42;
      v44 = sub_1A93F8040();
      v46 = v45;

      if (v41)
      {
        if (v46)
        {
          if (v39 == v44 && v41 == v46)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_46:
            v50 = objc_msgSend(a2, sel_pubDate);
            if (v50)
            {
              v51 = v50;
              sub_1A93F7368();

              v52 = v66;
              v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56);
              v53(v15, 0, 1, v4);
            }
            else
            {
              v52 = v66;
              v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56);
              v53(v15, 1, 1, v4);
            }
            v54 = (uint64_t)v67;
            v55 = v64;
            v56 = (uint64_t)v65;
            objc_msgSend(a1, sel_pubDate);
            sub_1A93F72CC();
            v53(v13, 0, 1, v4);
            v57 = v54 + *(int *)(v55 + 48);
            sub_1A90A1CA8((uint64_t)v15, v54);
            sub_1A90A1CA8((uint64_t)v13, v57);
            v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
            if (v58(v54, 1, v4) == 1)
            {
              sub_1A905FD54((uint64_t)v13, (uint64_t *)&unk_1ED2AD360);
              sub_1A905FD54((uint64_t)v15, (uint64_t *)&unk_1ED2AD360);
              if (v58(v57, 1, v4) == 1)
              {
                sub_1A905FD54(v54, (uint64_t *)&unk_1ED2AD360);
                return 1;
              }
              goto LABEL_54;
            }
            sub_1A90A1CA8(v54, v56);
            if (v58(v57, 1, v4) == 1)
            {
              sub_1A905FD54((uint64_t)v13, (uint64_t *)&unk_1ED2AD360);
              sub_1A905FD54((uint64_t)v15, (uint64_t *)&unk_1ED2AD360);
              (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v56, v4);
LABEL_54:
              sub_1A905FD54(v54, &qword_1ED2A5C70);
              return 0;
            }
            v59 = v63;
            (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v63, v57, v4);
            sub_1A9066CA8((unint64_t *)&unk_1EEABB6A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
            v60 = sub_1A93F8004();
            v61 = *(void (**)(char *, uint64_t))(v52 + 8);
            v61(v59, v4);
            sub_1A905FD54((uint64_t)v13, (uint64_t *)&unk_1ED2AD360);
            sub_1A905FD54((uint64_t)v15, (uint64_t *)&unk_1ED2AD360);
            v61((char *)v56, v4);
            sub_1A905FD54(v54, (uint64_t *)&unk_1ED2AD360);
            return (v60 & 1) != 0;
          }
          v49 = sub_1A93F90C0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v49 & 1) != 0)
            goto LABEL_46;
          return 0;
        }
      }
      else if (!v46)
      {
        goto LABEL_46;
      }
    }
    else if (!v41)
    {
      goto LABEL_46;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A92367E0()
{
  uint64_t v0;

  return sub_1A9233B10(v0);
}

uint64_t sub_1A92367E8()
{
  uint64_t v0;

  swift_release();
  sub_1A9068AD8(*(void **)(v0 + 24), *(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_1A923681C()
{
  uint64_t v0;

  swift_release();
  sub_1A905F180(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return swift_deallocObject();
}

void sub_1A9236848()
{
  uint64_t *v0;

  sub_1A92304A8(v0[2], v0[3], v0[4]);
}

uint64_t PendingPlaybackStore.publisher.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*PendingPlaybackStore.publisher.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t PendingPlaybackStore.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9118);
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1A93F79EC();
  return v0;
}

uint64_t PendingPlaybackStore.pendingEpisode.getter()
{
  swift_beginAccess();
  swift_retain();
  sub_1A93F79BC();
  return swift_release();
}

uint64_t PendingPlaybackStore.update(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  ValueMetadata *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  _QWORD v10[3];
  ValueMetadata *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *a1;
  v2 = *((unsigned __int8 *)a1 + 8);
  v4 = a1[2];
  v3 = (ValueMetadata *)a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v11 = &type metadata for Podcasts;
  v12 = sub_1A90A4238();
  LOBYTE(v10[0]) = 31;
  v8 = sub_1A93F7500();
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  if ((v8 & 1) != 0)
  {
    swift_beginAccess();
    v10[0] = v1;
    v10[1] = v2;
    v10[2] = v4;
    v11 = v3;
    v12 = v5;
    v13 = v6;
    v14 = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1A93F79B0();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall PendingPlaybackStore.reset()()
{
  char v0;
  _QWORD v1[3];
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t)&type metadata for Podcasts;
  v3 = sub_1A90A4238();
  LOBYTE(v1[0]) = 31;
  v0 = sub_1A93F7500();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v1);
  if ((v0 & 1) != 0)
  {
    swift_beginAccess();
    memset(v1, 0, sizeof(v1));
    v2 = 1;
    v4 = 0;
    v5 = 0;
    v3 = 0;
    swift_retain();
    sub_1A93F79B0();
    swift_release();
  }
}

uint64_t PendingPlaybackStore.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t PendingPlaybackStore.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

double EpisodePlayState.duration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double *v3;
  uint64_t (*v4)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v7;

  v1 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1E0C80A78](v1);
  v3 = (double *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A9064630(v0, (uint64_t)v3, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload || EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 1)
    return v3[1];
  sub_1A9089264((uint64_t)v3);
  return 0.0;
}

double EpisodePlayState.position.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v7;

  v1 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9064630(v0, (uint64_t)v3, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload || EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 1)
    return *(double *)v3;
  sub_1A9089264((uint64_t)v3);
  return 0.0;
}

uint64_t PendingPlaybackMetadata.adamId.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t PendingPlaybackMetadata.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double PendingPlaybackMetadata.timestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double PendingPlaybackMetadata.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double PendingPlaybackMetadata.position.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

double PendingPlaybackMetadata.init(adamId:uuid:)@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  __int128 v16;
  __int128 v17;
  _OWORD v18[3];
  uint64_t v19;

  v9 = a2 & 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for EpisodePlayState();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_1A9236DC0(a1, v9, a3, a4, 0, 1, (uint64_t)v12, v18);
  v14 = v19;
  result = *(double *)v18;
  v16 = v18[1];
  v17 = v18[2];
  *(_OWORD *)a5 = v18[0];
  *(_OWORD *)(a5 + 16) = v16;
  *(_OWORD *)(a5 + 32) = v17;
  *(_QWORD *)(a5 + 48) = v14;
  return result;
}

uint64_t sub_1A9236DC0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t result;
  unsigned int v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;

  v42 = a6;
  v41 = a5;
  v43 = a1;
  v44 = a3;
  v12 = sub_1A93F738C();
  v39 = *(_QWORD *)(v12 - 8);
  v40 = v12;
  MEMORY[0x1E0C80A78](v12);
  v38 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for EpisodePlayState();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v38 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v38 - v25;
  if ((a2 & 1) != 0 && !a4)
  {
    result = sub_1A923B198(a7);
    *a8 = 0;
    a8[1] = 0;
    a8[2] = 0;
    a8[3] = 1;
    a8[5] = 0;
    a8[6] = 0;
    a8[4] = 0;
    return result;
  }
  v28 = a2 & 1;
  v45 = v28;
  sub_1A9188C8C(a7, (uint64_t)&v38 - v25);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v29(v26, 1, v14) == 1)
  {
    sub_1A923B198((uint64_t)v26);
    v30 = 0;
  }
  else
  {
    sub_1A9064630((uint64_t)v26, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload || EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 1)
    {
      v30 = *((_QWORD *)v20 + 1);
    }
    else
    {
      sub_1A9089264((uint64_t)v20);
      v30 = 0;
    }
    sub_1A9089264((uint64_t)v26);
  }
  sub_1A9188C8C(a7, (uint64_t)v23);
  if (v29(v23, 1, v14) != 1)
  {
    sub_1A9064630((uint64_t)v23, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
    v37 = swift_getEnumCaseMultiPayload();
    if (!v37 || v37 == 3 || v37 == 1)
    {
      v32 = *v17;
    }
    else
    {
      sub_1A9089264((uint64_t)v17);
      v32 = 0;
    }
    sub_1A9089264((uint64_t)v23);
    if ((v42 & 1) != 0)
      goto LABEL_14;
LABEL_21:
    result = sub_1A923B198(a7);
    v36 = v41;
    goto LABEL_22;
  }
  sub_1A923B198((uint64_t)v23);
  v32 = 0;
  if ((v42 & 1) == 0)
    goto LABEL_21;
LABEL_14:
  v33 = v38;
  sub_1A93F7380();
  sub_1A93F72D8();
  v35 = v34;
  sub_1A923B198(a7);
  result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v33, v40);
  v36 = v35;
  v28 = v45;
LABEL_22:
  *a8 = v43;
  a8[1] = v28;
  a8[2] = v44;
  a8[3] = a4;
  a8[4] = v36;
  a8[5] = v30;
  a8[6] = v32;
  return result;
}

Swift::Bool __swiftcall PendingPlaybackMetadata.isWithinTimeInterval(seconds:)(Swift::Double seconds)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  double v9;
  uint64_t v11;

  v3 = sub_1A93F738C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(double *)(v1 + 32);
  sub_1A93F7380();
  sub_1A93F72D8();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9 - v7 < seconds;
}

Swift::Double __swiftcall PendingPlaybackMetadata.timeRemaining(timeToLive:)(Swift::Double timeToLive)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  double v9;
  Swift::Double result;
  uint64_t v11;

  v3 = sub_1A93F738C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(double *)(v1 + 32) + timeToLive;
  sub_1A93F7380();
  sub_1A93F72D8();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  result = v7 - v9;
  if (v7 - v9 <= 0.0)
    return 0.0;
  return result;
}

uint64_t PendingPlaybackMetadata.identifierSet.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = MEMORY[0x1E0DEE9E8];
  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
  {
    v4 = *(_QWORD *)v0;
    sub_1A93F92DC();
    sub_1A93F92E8();
    sub_1A93F930C();
    v5 = sub_1A93F9324();
    v6 = -1 << *(_BYTE *)(v3 + 32);
    v7 = v5 & ~v6;
    if (((*(_QWORD *)(v3 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v7) & 1) != 0)
    {
      v8 = ~v6;
      while (1)
      {
        v9 = *(_QWORD *)(v3 + 48) + 24 * v7;
        if ((*(_BYTE *)(v9 + 16) & 1) == 0 && *(_QWORD *)v9 == v4)
          break;
        v7 = (v7 + 1) & v8;
        if (((*(_QWORD *)(v3 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v7) & 1) == 0)
          goto LABEL_8;
      }
    }
    else
    {
LABEL_8:
      result = swift_isUniquelyReferenced_nonNull_native();
      if (*(_QWORD *)(v3 + 24) <= *(_QWORD *)(v3 + 16))
      {
        if ((_DWORD)result)
          sub_1A909E810();
        else
          sub_1A909EB48();
        sub_1A93F92DC();
        sub_1A93F92E8();
        sub_1A93F930C();
        result = sub_1A93F9324();
        v11 = -1 << *(_BYTE *)(v3 + 32);
        v7 = result & ~v11;
        if (((*(_QWORD *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v12 = ~v11;
          do
          {
            v13 = *(_QWORD *)(v3 + 48) + 24 * v7;
            if ((*(_BYTE *)(v13 + 16) & 1) == 0 && *(_QWORD *)v13 == v4)
              goto LABEL_49;
            v7 = (v7 + 1) & v12;
          }
          while (((*(_QWORD *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
        }
      }
      else if ((result & 1) != 0)
      {
        v3 = MEMORY[0x1E0DEE9E8];
      }
      else
      {
        result = (uint64_t)sub_1A92387B8();
      }
      *(_QWORD *)(v3 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v7;
      v14 = *(_QWORD *)(v3 + 48) + 24 * v7;
      *(_QWORD *)v14 = v4;
      *(_QWORD *)(v14 + 8) = 0;
      *(_BYTE *)(v14 + 16) = 0;
      v15 = *(_QWORD *)(v3 + 16);
      v16 = __OFADD__(v15, 1);
      v17 = v15 + 1;
      if (v16)
        goto LABEL_55;
      *(_QWORD *)(v3 + 16) = v17;
      swift_bridgeObjectRelease();
    }
  }
  if (!v1)
    return v3;
  sub_1A93F92DC();
  sub_1A93F92E8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  v18 = sub_1A93F9324();
  v19 = -1 << *(_BYTE *)(v3 + 32);
  v4 = v18 & ~v19;
  if (((*(_QWORD *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v20 = ~v19;
    v21 = *(_QWORD *)(v3 + 48);
    while (1)
    {
      v22 = v21 + 24 * v4;
      if (*(_BYTE *)(v22 + 16) == 1)
      {
        v23 = *(_QWORD *)v22 == v2 && *(_QWORD *)(v22 + 8) == v1;
        if (v23 || (sub_1A93F90C0() & 1) != 0)
          break;
      }
      v4 = (v4 + 1) & v20;
      if (((*(_QWORD *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
        goto LABEL_34;
    }
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
LABEL_34:
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *(_QWORD *)(v3 + 16);
  v26 = *(_QWORD *)(v3 + 24);
  result = swift_bridgeObjectRetain();
  if (v26 > v25)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      result = (uint64_t)sub_1A92387B8();
    goto LABEL_50;
  }
  if (isUniquelyReferenced_nonNull_native)
    sub_1A909E810();
  else
    sub_1A909EB48();
  sub_1A93F92DC();
  sub_1A93F92E8();
  sub_1A93F7FBC();
  result = sub_1A93F9324();
  v27 = -1 << *(_BYTE *)(v3 + 32);
  v4 = result & ~v27;
  if (((*(_QWORD *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
    goto LABEL_50;
  v28 = ~v27;
  v29 = *(_QWORD *)(v3 + 48);
  while (1)
  {
    v30 = v29 + 24 * v4;
    if (*(_BYTE *)(v30 + 16) == 1)
    {
      if (*(_QWORD *)v30 == v2 && *(_QWORD *)(v30 + 8) == v1)
        break;
      result = sub_1A93F90C0();
      if ((result & 1) != 0)
        break;
    }
    v4 = (v4 + 1) & v28;
    if (((*(_QWORD *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
      goto LABEL_50;
  }
LABEL_49:
  result = sub_1A93F924C();
  __break(1u);
LABEL_50:
  *(_QWORD *)(v3 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v4;
  v32 = *(_QWORD *)(v3 + 48) + 24 * v4;
  *(_QWORD *)v32 = v2;
  *(_QWORD *)(v32 + 8) = v1;
  *(_BYTE *)(v32 + 16) = 1;
  v33 = *(_QWORD *)(v3 + 16);
  v16 = __OFADD__(v33, 1);
  v34 = v33 + 1;
  if (!v16)
  {
    *(_QWORD *)(v3 + 16) = v34;
    swift_bridgeObjectRelease();
LABEL_52:
    swift_bridgeObjectRelease();
    return v3;
  }
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

