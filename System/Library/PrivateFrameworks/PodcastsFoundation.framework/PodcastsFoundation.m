ValueMetadata *type metadata accessor for NetworkTaskPriority()
{
  return &type metadata for NetworkTaskPriority;
}

uint64_t EpisodeListSettings.listType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A93CA8DC(v1, a1);
}

uint64_t initializeWithCopy for EpisodeListSettings(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v13 = *(_BYTE *)(a2 + 64);
  sub_1A90519B4(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v13);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v13;
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_WORD *)(a1 + 81) = *(_WORD *)(a2 + 81);
  return a1;
}

uint64_t sub_1A90519B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t result;

  switch(a9)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 6:
    case 8:
      goto LABEL_2;
    case 4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_2:
      result = swift_bridgeObjectRetain();
      break;
    case 7:
      swift_bridgeObjectRetain();
      result = sub_1A912C900(a3, a4);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A9051A5C()
{
  sub_1A9051B04();
  sub_1A9051AC0();
  return sub_1A93F92B8();
}

uint64_t BinaryFloatingPoint.safeInt.getter(uint64_t a1, uint64_t a2)
{
  return sub_1A9165F08(a1, a2, (void (*)(uint64_t))sub_1A9051AC0, MEMORY[0x1E0DEB418], 7630409, 0xE300000000000000);
}

unint64_t sub_1A9051AC0()
{
  unint64_t result;

  result = qword_1ED2AD168;
  if (!qword_1ED2AD168)
  {
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED2AD168);
  }
  return result;
}

unint64_t sub_1A9051B04()
{
  unint64_t result;

  result = qword_1ED2A6348;
  if (!qword_1ED2A6348)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for FeedUpdaterError, &type metadata for FeedUpdaterError);
    atomic_store(result, (unint64_t *)&qword_1ED2A6348);
  }
  return result;
}

uint64_t sub_1A9051B48(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a3[3] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[4] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[2] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v16, v17);
  *(_BYTE *)(v16 + *(_QWORD *)(v13 + 64)) = *(_BYTE *)(v17 + *(_QWORD *)(v13 + 64));
  return a1;
}

uint64_t sub_1A9051C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RepublishingValueSubject.receive<A>(subscriber:)(a1, a2, a3);
}

uint64_t RepublishingValueSubject.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[4];

  v4 = v3;
  v28 = a1;
  v29 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v30 = a3;
  v24 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](a1);
  v23 = (uint64_t)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v7 + 88);
  v25 = *(_QWORD *)(v7 + 96);
  v26 = v8;
  v9 = sub_1A93F78C0();
  v10 = sub_1A93F8A90();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v23 - v13;
  v27 = *(_QWORD *)(v9 - 8);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v23 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (os_unfair_lock_s *)(*(_QWORD *)(v4 + 16) + 16);
  os_unfair_lock_lock(v18);
  if (*(_BYTE *)(v4 + 24) == 1)
  {
    v31[0] = v29;
    v31[1] = v26;
    v31[2] = a2;
    v31[3] = v30;
    type metadata accessor for RepublishingValueSubject.Conduit();
  }
  v26 = a2;
  v19 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v19, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v14, 1, v9) == 1)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    __break(1u);
  }
  else
  {
    v20 = v27;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v17, v14, v9);
    os_unfair_lock_unlock(v18);
    sub_1A93F7914();
    sub_1A93F789C();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
    v21 = v23;
    RepublishingValueSubject.value.getter(v23);
    sub_1A93F78A8();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v29);
    sub_1A93F7890();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v17, v9);
  }
  return result;
}

uint64_t type metadata accessor for ConduitList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConduitList);
}

void type metadata accessor for RepublishingValueSubject.Conduit()
{
  JUMPOUT(0x1AF413F6CLL);
}

uint64_t sub_1A9051F8C(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  v5 = result;
  v6 = *(_QWORD *)v3;
  if (*(_BYTE *)(v3 + 8))
  {
    if (*(_BYTE *)(v3 + 8) == 1)
    {
      v14 = *(_QWORD *)v3;
      swift_retain();
      sub_1A9052820(v6, 1);
      v7 = type metadata accessor for ConduitBase(255, a2[2], a2[3], a2[4]);
      MEMORY[0x1AF414014](&unk_1A9421100, v7);
      sub_1A93F867C();
      sub_1A93F8658();
      swift_release();
      v8 = *(_QWORD *)v3;
      *(_QWORD *)v3 = v14;
      v9 = *(_BYTE *)(v3 + 8);
      *(_BYTE *)(v3 + 8) = 1;
      swift_bridgeObjectRetain();
      sub_1A9052AB4(v8, v9);
      return swift_bridgeObjectRelease();
    }
    else
    {
      *(_QWORD *)v3 = result;
      *(_BYTE *)(v3 + 8) = 0;
      return swift_retain();
    }
  }
  else if (v6 != result)
  {
    v10 = type metadata accessor for ConduitBase(0, a2[2], a2[3], a2[4]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
    swift_allocObject();
    v11 = sub_1A93F8334();
    *v12 = v6;
    v12[1] = v5;
    sub_1A905318C(v11);
    v13 = sub_1A93F83D0();
    swift_retain();
    MEMORY[0x1AF414014](&unk_1A9421100, v10);
    MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v13);
    result = sub_1A93F8688();
    *(_QWORD *)v3 = result;
    *(_BYTE *)(v3 + 8) = 1;
  }
  return result;
}

uint64_t sub_1A9052150()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1A9052158()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 128))();
}

void sub_1A9052180()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  os_unfair_lock_s *v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _BYTE v15[24];

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 176);
  v3 = sub_1A93F8A90();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v15[-v8];
  v10 = (os_unfair_lock_s *)(*(_QWORD *)((char *)v0 + *(_QWORD *)(v1 + 216)) + 16);
  os_unfair_lock_lock(v10);
  v11 = (char *)v0 + *(_QWORD *)(*v0 + 200);
  swift_beginAccess();
  (*(void (**)(_BYTE *, char *, uint64_t))(v4 + 16))(v9, v11, v3);
  v12 = *(_QWORD *)(v2 - 8);
  v13 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v2);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  if (v13 == 1)
  {
    os_unfair_lock_unlock(v10);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v7, 1, 1, v2);
    swift_beginAccess();
    (*(void (**)(char *, _BYTE *, uint64_t))(v4 + 40))(v11, v7, v3);
    swift_endAccess();
    v14 = v0[2];
    v0[2] = 0;
    os_unfair_lock_unlock(v10);
    if (v14)
    {
      swift_retain();
      sub_1A9052D48((uint64_t)v0);
      swift_release_n();
    }
  }
}

uint64_t sub_1A9052324(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v2;
  v4 = *(_QWORD *)v2;
  if (!*(_BYTE *)(v2 + 8))
  {
    if (v4 != result)
      return result;
    result = sub_1A9052AB4(*(_QWORD *)v2, 0);
    goto LABEL_11;
  }
  if (*(_BYTE *)(v2 + 8) != 1)
    return result;
  v9 = *(_QWORD *)v2;
  v5 = type metadata accessor for ConduitBase(255, a2[2], a2[3], a2[4]);
  swift_bridgeObjectRetain();
  MEMORY[0x1AF414014](&unk_1A9421100, v5);
  v6 = sub_1A93F867C();
  sub_1A93F8664();
  swift_release();
  swift_bridgeObjectRetain();
  v7 = sub_1A93F864C();
  swift_bridgeObjectRelease();
  if (v7 != 1)
  {
    result = sub_1A9052AB4(v4, 1);
    if (v7)
    {
      *(_QWORD *)v3 = v9;
      *(_BYTE *)(v3 + 8) = 1;
      return result;
    }
    result = swift_bridgeObjectRelease();
LABEL_11:
    *(_QWORD *)v3 = 0;
    *(_BYTE *)(v3 + 8) = 2;
    return result;
  }
  MEMORY[0x1AF414014](MEMORY[0x1E0DEB3E0], v6);
  result = sub_1A93F86DC();
  if (v8)
  {
    sub_1A9052AB4(v4, 1);
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v3 = v8;
    *(_BYTE *)(v3 + 8) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A90524AC(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 40))(*a1);
}

void RepublishingValueSubject.send(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[6];

  v3 = *v1;
  v4 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v4);
  if (*((_BYTE *)v1 + 24) == 1)
  {
    v5 = (uint64_t)v1 + *(_QWORD *)(*v1 + 128);
    swift_beginAccess();
    v6 = *(_QWORD *)v5;
    v7 = (uint64_t)v1 + *(_QWORD *)(*v1 + 136);
    LOBYTE(v5) = *(_BYTE *)(v5 + 8);
    swift_beginAccess();
    sub_1A9052820(v6, v5);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 24))(v7, a1, *(_QWORD *)(v3 + 80));
    swift_endAccess();
    os_unfair_lock_unlock(v4);
    MEMORY[0x1E0C80A78](v8);
    v9[2] = a1;
    sub_1A905283C((uint64_t)sub_1A9052DF8, (uint64_t)v9, v6, v5);
    sub_1A9052AB4(v6, v5);
  }
  else
  {
    os_unfair_lock_unlock(v4);
  }
}

void RepublishingValueSubject.send(completion:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 88);
  v5 = *(_QWORD *)(*v1 + 96);
  v6 = sub_1A93F78C0();
  v7 = sub_1A93F8A90();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - v9;
  v11 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v11);
  if (*((_BYTE *)v1 + 24) == 1)
  {
    *((_BYTE *)v1 + 24) = 0;
    v12 = a1;
    v20 = a1;
    v13 = *(_QWORD *)(v6 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v10, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v6);
    v14 = (uint64_t)v1 + *(_QWORD *)(*v1 + 120);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v14, v10, v7);
    swift_endAccess();
    v15 = (uint64_t)v1 + *(_QWORD *)(*v1 + 128);
    swift_beginAccess();
    v16 = *(_QWORD *)v15;
    v17 = *(_BYTE *)(v15 + 8);
    sub_1A9052820(*(_QWORD *)v15, v17);
    type metadata accessor for ConduitList(0, *(_QWORD *)(v3 + 80), v4, v5);
    sub_1A9053158();
    os_unfair_lock_unlock(v11);
    MEMORY[0x1E0C80A78](v18);
    *(&v19 - 2) = v20;
    sub_1A905283C((uint64_t)sub_1A9052AD0, (uint64_t)(&v19 - 4), v16, v17);
    sub_1A9052AB4(v16, v17);
  }
  else
  {
    os_unfair_lock_unlock(v11);
  }
}

uint64_t sub_1A9052820(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 1)
    return swift_bridgeObjectRetain();
  if (!a2)
    return swift_retain();
  return result;
}

uint64_t sub_1A905283C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = (void (*)(uint64_t))result;
  if (a4)
  {
    if (a4 == 1)
    {
      MEMORY[0x1E0C80A78](result);
      v9 = type metadata accessor for ConduitBase(255, v6, v7, v8);
      MEMORY[0x1AF414014](&unk_1A9421100, v9);
      v10 = sub_1A93F867C();
      MEMORY[0x1AF414014](MEMORY[0x1E0DEB3D0], v10);
      return sub_1A93F8238();
    }
  }
  else
  {
    v11 = swift_retain();
    v5(v11);
    return sub_1A9052AB4(a3, 0);
  }
  return result;
}

uint64_t RepublishingValueSubject.__deallocating_deinit()
{
  RepublishingValueSubject.deinit();
  return swift_deallocClassInstance();
}

uint64_t *RepublishingValueSubject.deinit()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  v1 = v0;
  v2 = *v0;
  v3 = (uint64_t)v0 + *(_QWORD *)(*v0 + 144);
  swift_beginAccess();
  v4 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v4)
  {
    v5 = *(_QWORD *)v3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1A905DC3C(v5, (uint64_t)v9);
      __swift_project_boxed_opaque_existential_1(v9, v9[3]);
      sub_1A93F78B4();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
      v5 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  swift_release();
  v6 = (uint64_t)v0 + *(_QWORD *)(*v0 + 120);
  sub_1A93F78C0();
  v7 = sub_1A93F8A90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  sub_1A9052AB4(*(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 128)), *((_BYTE *)v1 + *(_QWORD *)(*v1 + 128) + 8));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 8))((uint64_t)v1 + *(_QWORD *)(*v1 + 136));
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A9052AB4(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 1)
    return swift_bridgeObjectRelease();
  if (!a2)
    return swift_release();
  return result;
}

uint64_t sub_1A9052AD0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1 + 112))(*(_QWORD *)(v1 + 16));
}

void sub_1A9052B08(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  os_unfair_lock_s *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD v20[2];
  char *v21;
  uint64_t v22;

  v2 = v1;
  v22 = a1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 176);
  v5 = sub_1A93F8A90();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v21 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v20 - v10;
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (os_unfair_lock_s *)(*(_QWORD *)((char *)v2 + *(_QWORD *)(v3 + 216)) + 16);
  os_unfair_lock_lock(v15);
  v16 = (char *)v2 + *(_QWORD *)(*v2 + 200);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v16, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    os_unfair_lock_unlock(v15);
  }
  else
  {
    v20[1] = v3;
    v17 = v14;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, v4);
    v18 = v21;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v21, 1, 1, v4);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v6 + 40))(v16, v18, v5);
    swift_endAccess();
    v19 = v2[2];
    v2[2] = 0;
    os_unfair_lock_unlock(v15);
    if (v19)
    {
      swift_retain();
      sub_1A9052D48((uint64_t)v2);
      swift_release();
    }
    os_unfair_recursive_lock_lock_with_options();
    sub_1A93F7890();
    os_unfair_recursive_lock_unlock();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v4);
  }
}

void sub_1A9052D48(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  os_unfair_lock_s *v4;
  uint64_t *v5;

  v3 = *(uint64_t **)v1;
  v4 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v4);
  if (*(_BYTE *)(v1 + 24) == 1)
  {
    swift_beginAccess();
    v5 = (uint64_t *)type metadata accessor for ConduitList(0, v3[10], v3[11], v3[12]);
    sub_1A9052324(a1, v5);
    swift_endAccess();
  }
  os_unfair_lock_unlock(v4);
}

uint64_t sub_1A9052DF8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1 + 104))(*(_QWORD *)(v1 + 16));
}

void sub_1A9052E30(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD v22[2];
  char *v23;

  v22[1] = a1;
  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  v4 = sub_1A93F8A90();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v22 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v6);
  v23 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v1 + *(_QWORD *)(v2 + 216)) + 16);
  os_unfair_lock_lock(v11);
  v12 = (uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 208));
  swift_beginAccess();
  v13 = *v12;
  sub_1A93F78E4();
  if ((sub_1A93F78CC() & 1) == 0)
  {
    if (v13 < 0)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (!v13)
    {
LABEL_6:
      *((_BYTE *)v1 + *(_QWORD *)(*v1 + 232)) = 0;
      os_unfair_lock_unlock(v11);
      return;
    }
  }
  v14 = (uint64_t)v1 + *(_QWORD *)(*v1 + 200);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v14, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    goto LABEL_6;
  }
  v15 = v23;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v23, v8, v3);
  swift_beginAccess();
  v16 = *v12;
  sub_1A93F78E4();
  if ((sub_1A93F78CC() & 1) == 0)
  {
    sub_1A93F78E4();
    if ((sub_1A93F78CC() & 1) != 0)
    {
      v17 = sub_1A93F78E4();
    }
    else
    {
      if (v16 < 0)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      if (!v16)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      v17 = v16 - 1;
    }
    *v12 = v17;
  }
  swift_endAccess();
  *((_BYTE *)v1 + *(_QWORD *)(*v1 + 232)) = 1;
  os_unfair_lock_unlock(v11);
  os_unfair_recursive_lock_lock_with_options();
  v18 = sub_1A93F78A8();
  os_unfair_recursive_lock_unlock();
  sub_1A93F78E4();
  if ((sub_1A93F78CC() & 1) != 0)
  {
LABEL_17:
    os_unfair_lock_lock(v11);
    swift_beginAccess();
    v19 = *v12;
    sub_1A93F78E4();
    if ((sub_1A93F78CC() & 1) != 0)
    {
LABEL_26:
      swift_endAccess();
      os_unfair_lock_unlock(v11);
      goto LABEL_27;
    }
    sub_1A93F78E4();
    v20 = sub_1A93F78CC();
    v21 = sub_1A93F78E4();
    if ((v20 & 1) != 0)
    {
LABEL_25:
      *v12 = v21;
      goto LABEL_26;
    }
    if ((sub_1A93F78CC() & 1) != 0)
    {
LABEL_23:
      v21 = sub_1A93F78E4();
      goto LABEL_25;
    }
    if (((v19 | v18) & 0x8000000000000000) == 0)
    {
      v21 = v19 + v18;
      if (!__OFADD__(v19, v18))
      {
        if ((v21 & 0x8000000000000000) == 0)
          goto LABEL_25;
LABEL_34:
        __break(1u);
        return;
      }
      goto LABEL_23;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v18 < 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v18)
    goto LABEL_17;
LABEL_27:
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v3);
}

uint64_t sub_1A9053158()
{
  uint64_t v0;
  uint64_t result;

  result = sub_1A9052AB4(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
  *(_QWORD *)v0 = 0;
  *(_BYTE *)(v0 + 8) = 2;
  return result;
}

uint64_t type metadata accessor for ConduitBase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConduitBase);
}

uint64_t sub_1A905318C(uint64_t a1)
{
  sub_1A93F83D0();
  return a1;
}

uint64_t destroy for EpisodeListType(uint64_t a1)
{
  return sub_1A90531EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t sub_1A90531EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t result;

  switch(a9)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 6:
    case 8:
      goto LABEL_2;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_2:
      result = swift_bridgeObjectRelease();
      break;
    case 7:
      swift_bridgeObjectRelease();
      result = sub_1A912C738(a3, a4);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A9053294(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  result = sub_1A93F75FC();
  if (v5 <= 0x3F)
  {
    result = type metadata accessor for Loadable(319, *(_QWORD *)(a1 + 16), v3, v4);
    if (v6 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t Loadable.item.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, 1, 1, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
  }
}

uint64_t Loadable.coalescing(update:keepLoadedDataOnFailure:droppingNewNotLoadeds:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, double);
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;

  v6 = v5;
  v26 = a2;
  v27 = a3;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v13 = (char *)&v25 - v12;
  v15 = (char *)&v25 + *(int *)(v14 + 48) - v12;
  v16 = *(_QWORD *)(a4 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v17((char *)&v25 - v12, v6, a4, v11);
  ((void (*)(char *, uint64_t, uint64_t))v17)(v15, a1, a4);
  v18 = *(_QWORD *)(a4 + 16);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48);
  v20 = v19(v15, 2, v18);
  if (!v20)
  {
    ((void (*)(uint64_t, uint64_t, uint64_t))v17)(a5, a1, a4);
    v22 = *(void (**)(char *, uint64_t))(v16 + 8);
    v22(v15, a4);
    return ((uint64_t (*)(char *, uint64_t))v22)(v13, a4);
  }
  if (v20 == 1)
  {
    v21 = v27;
  }
  else
  {
    if (v19(v13, 2, v18))
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(a5, a1, a4);
    v21 = v26;
  }
  if ((v21 & 1) != 0)
    v24 = v6;
  else
    v24 = a1;
  ((void (*)(uint64_t, uint64_t, uint64_t))v17)(a5, v24, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v13, a4);
}

uint64_t PerformanceLoadable.value.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1A90535E8(a1, a2, a3, a4);
  v8 = type metadata accessor for Loadable(0, *(_QWORD *)(a2 + 16), v6, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
}

uint64_t sub_1A90535E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = type metadata accessor for Loadable(0, *(_QWORD *)(a2 + 16), a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - v9;
  v11 = v4 + *(int *)(a2 + 40);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - v9, v11, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, a1, v7);
  sub_1A9053848((uint64_t)v10, a2, v12, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t PerformanceLoadable.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = v4 + *(int *)(a1 + 40);
  v7 = type metadata accessor for Loadable(0, *(_QWORD *)(a1 + 16), a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v6, v7);
}

uint64_t type metadata accessor for Loadable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Loadable);
}

void *sub_1A90536F8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  unsigned int v10;
  size_t v11;
  uint64_t v12;
  unsigned int v13;
  _BOOL8 v14;
  BOOL v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 2, v5);
  v9 = v7(a2, 2, v5);
  if (v8)
  {
    if (v9)
    {
      v10 = *(_DWORD *)(v6 + 84);
      v11 = *(_QWORD *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
        {
LABEL_5:
          v12 = 1;
LABEL_16:
          v11 += v12;
          goto LABEL_17;
        }
LABEL_9:
        v13 = (~(-1 << (8 * v11)) - v10 + 2) >> (8 * v11);
        if (v13 > 0xFFFE)
        {
          v12 = 4;
        }
        else
        {
          v14 = v13 != 0;
          v15 = v13 >= 0xFF;
          v12 = 2;
          if (!v15)
            v12 = v14;
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  else
  {
    if (v9)
    {
      (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
      v10 = *(_DWORD *)(v6 + 84);
      v11 = *(_QWORD *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
          goto LABEL_5;
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
  }
  return a1;
}

uint64_t sub_1A9053848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;

  v7 = *(_QWORD *)(a2 + 16);
  v8 = type metadata accessor for Loadable(255, v7, a3, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v20 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v10 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v12 = (char *)&v20 - v11;
  v13 = *(int *)(a2 + 40);
  v21 = v4;
  v14 = v4 + v13;
  v15 = &v12[*(int *)(v10 + 48)];
  v16 = *(_QWORD *)(v8 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v17(v12, a1, v8);
  v17(v15, v14, v8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (v18(v12, 2, v7) == 1)
  {
    sub_1A9053CC0();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v15, v8);
  }
  else if (v18(v15, 2, v7) == 1)
  {
    sub_1A90738E0(a2);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v12, v8);
  }
  else
  {
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v12, TupleTypeMetadata2);
  }
}

BOOL Loadable.notLoaded.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78]();
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  v5 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 48))(v4, 2);
  if (v5 != 1)
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5 == 1;
}

uint64_t sub_1A9053A50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 2, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return result;
}

uint64_t Loadable.map<A>(_:)@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v14 + 16))(v13, v15);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 2, v7);
  if (!(_DWORD)v16)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, v7);
    a1(v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, v16, 2, a3);
}

void *sub_1A9053BD0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  uint64_t v9;
  unsigned int v10;
  _BOOL8 v11;
  BOOL v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v10 > 0xFFFE)
        {
          v9 = 4;
        }
        else
        {
          v11 = v10 != 0;
          v12 = v10 >= 0xFF;
          v9 = 2;
          if (!v12)
            v9 = v11;
        }
      }
      else
      {
        v9 = 1;
      }
      v8 += v9;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  return a1;
}

uint64_t sub_1A9053CC0()
{
  sub_1A93F8934();
  return sub_1A93F75C0();
}

uint64_t sub_1A9053CFC@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t getEnumTagSinglePayload for EpisodeListSettings(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 83))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 80);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t EmitLifecycle.LifecycleEmitting.__deallocating_deinit()
{
  EmitLifecycle.LifecycleEmitting.deinit();
  return swift_deallocClassInstance();
}

uint64_t *EmitLifecycle.LifecycleEmitting.deinit()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  v2 = *v0;
  v3 = *(os_unfair_lock_s **)((char *)v0 + *(_QWORD *)(*v0 + 168));
  v4 = (uint64_t)&v3[4];
  v5 = v3 + 24;
  os_unfair_lock_lock(v3 + 24);
  sub_1A9053EBC(v4);
  os_unfair_lock_unlock(v5);
  v6 = (uint64_t)v1 + qword_1ED2B8990;
  v7 = sub_1A93F76D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 88) - 8) + 8))((uint64_t)v1 + *(_QWORD *)(*v1 + 120));
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v1 + *(_QWORD *)(*v1 + 128));
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t sub_1A9053EBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  sub_1A9062170(a1 + 40, (uint64_t)&v4, qword_1ED2A6060);
  if (!v5)
    return sub_1A905FD54((uint64_t)&v4, qword_1ED2A6060);
  sub_1A905D4AC(&v4, (uint64_t)v6);
  v1 = v7;
  v2 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v2 + 8))(0x434F4C4C414544, 0xE700000000000000, v1, v2);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
}

void EpisodeListType.description.getter()
{
  uint64_t v0;
  _QWORD v1[8];

  sub_1A905466C(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1A9053FC8()
{
  uint64_t v0;

  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F810C();
  return v0 - 1;
}

void sub_1A90542B4()
{
  JUMPOUT(0x1A905429CLL);
}

uint64_t EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  int v14;
  uint64_t result;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  _OWORD v20[4];
  char v21;
  uint64_t v22;

  v14 = a2;
  result = sub_1A905466C(a1, (uint64_t)v20);
  v16 = v20[1];
  v17 = v20[2];
  v18 = v20[3];
  v19 = v21;
  if (v14 == 17)
  {
    sub_1A905466C(a1, (uint64_t)&v22);
    __asm { BR              X11 }
  }
  *(_OWORD *)a7 = v20[0];
  *(_OWORD *)(a7 + 16) = v16;
  *(_OWORD *)(a7 + 32) = v17;
  *(_OWORD *)(a7 + 48) = v18;
  *(_BYTE *)(a7 + 64) = v19;
  *(_BYTE *)(a7 + 65) = a2;
  *(_QWORD *)(a7 + 72) = a3;
  *(_BYTE *)(a7 + 80) = a4 & 1;
  *(_BYTE *)(a7 + 81) = a5 & 1;
  *(_BYTE *)(a7 + 82) = a6 & 1;
  return result;
}

uint64_t EpisodeListType.wantsListenNowReason.getter()
{
  uint64_t v0;
  int8x16_t v1;
  uint64_t v2;
  _QWORD v5[4];
  int8x16_t v6;
  int8x16_t v7;
  char v8;

  sub_1A905466C(v0, (uint64_t)v5);
  if (v8 == 5)
    return LOBYTE(v5[0]);
  if (v8 == 9)
  {
    v1 = vorrq_s8(v6, v7);
    v2 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | v5[3] | v5[2] | v5[1];
    if (v5[0] == 2 && v2 == 0)
      return 1;
  }
  return 0;
}

uint64_t EpisodeListType.stationUUID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  char v4;

  sub_1A905466C(v0, (uint64_t)&v3);
  if (v4 != 4)
    return 0;
  v1 = v3;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A905466C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a2 = *(_OWORD *)a1;
  v2 = *(_OWORD *)(a1 + 16);
  v3 = *(_OWORD *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(a2 + 64) = *(_BYTE *)(a1 + 64);
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 16) = v2;
  return a2;
}

uint64_t storeEnumTagSinglePayload for EpisodeListSettings(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 82) = 0;
    *(_WORD *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 83) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 83) = 0;
    if (a2)
      *(_BYTE *)(result + 80) = a2 + 1;
  }
  return result;
}

uint64_t LibraryEntity.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 > 1u)
  {
    sub_1A93F92E8();
    return sub_1A93F930C();
  }
  else
  {
    sub_1A93F92E8();
    return sub_1A93F7FBC();
  }
}

ValueMetadata *type metadata accessor for EpisodeListSettings()
{
  return &type metadata for EpisodeListSettings;
}

uint64_t sub_1A905477C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 120))();
}

void sub_1A90547A4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  os_unfair_lock_s *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  void (*v53)(uint64_t, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t *v64;
  os_unfair_lock_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v2 = v1;
  v4 = *v2;
  v5 = *(_QWORD *)(*(_QWORD *)(*v2 + 160) - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = v8;
  v69 = sub_1A93F8A90();
  v72 = *(_QWORD *)(v69 - 8);
  v9 = MEMORY[0x1E0C80A78](v69);
  v70 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v63 - v11;
  v67 = v4;
  v13 = *(_QWORD *)(v4 + 176);
  v14 = sub_1A93F8A90();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v63 - v17;
  v73 = v13;
  v19 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F78E4();
  if ((sub_1A93F78CC() & 1) == 0)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (a1)
    {
      goto LABEL_4;
    }
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
LABEL_4:
  v71 = v12;
  v66 = v7;
  v22 = v5;
  v23 = (os_unfair_lock_s *)(*(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 216)) + 16);
  os_unfair_lock_lock(v23);
  v24 = *(_QWORD *)(*v2 + 200);
  v74 = v19;
  v25 = (char *)v2 + v24;
  swift_beginAccess();
  v26 = v25;
  v27 = v74;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v26, v14);
  v28 = v73;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v18, 1, v73) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    os_unfair_lock_unlock(v23);
    return;
  }
  v65 = v23;
  v29 = v21;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v21, v18, v28);
  v30 = *(_QWORD *)(*v2 + 232);
  if ((*((_BYTE *)v2 + v30) & 1) != 0)
  {
    v31 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 208));
    swift_beginAccess();
    v32 = *v31;
    sub_1A93F78E4();
    if ((sub_1A93F78CC() & 1) != 0)
    {
LABEL_30:
      swift_endAccess();
      os_unfair_lock_unlock(v65);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v28);
      return;
    }
    sub_1A93F78E4();
    v33 = sub_1A93F78CC();
    v34 = sub_1A93F78E4();
    if ((v33 & 1) != 0)
    {
      v27 = v74;
LABEL_29:
      *v31 = v34;
      goto LABEL_30;
    }
    v41 = sub_1A93F78CC();
    v27 = v74;
    if ((v41 & 1) != 0)
      goto LABEL_22;
    if (((v32 | a1) & 0x8000000000000000) == 0)
    {
      v34 = v32 + a1;
      if (!__OFADD__(v32, a1))
      {
        if ((v34 & 0x8000000000000000) == 0)
          goto LABEL_29;
        goto LABEL_61;
      }
LABEL_22:
      v34 = sub_1A93F78E4();
      goto LABEL_29;
    }
    goto LABEL_59;
  }
  sub_1A93F78E4();
  if ((sub_1A93F78CC() & 1) != 0)
  {
    v35 = sub_1A93F78E4();
    v36 = v22;
    goto LABEL_15;
  }
  if (a1 < 0)
    goto LABEL_56;
  if (!a1)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v36 = v22;
  v35 = a1 - 1;
LABEL_15:
  v37 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 208));
  swift_beginAccess();
  v38 = *v37;
  sub_1A93F78E4();
  if ((sub_1A93F78CC() & 1) == 0)
  {
    sub_1A93F78E4();
    v39 = sub_1A93F78CC();
    v40 = sub_1A93F78E4();
    if ((v39 & 1) != 0)
    {
      v27 = v74;
    }
    else
    {
      v42 = sub_1A93F78CC();
      v27 = v74;
      if ((v42 & 1) != 0)
        goto LABEL_27;
      if ((v38 | v35) < 0)
      {
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      v40 = v38 + v35;
      if (__OFADD__(v38, v35))
      {
LABEL_27:
        v40 = sub_1A93F78E4();
      }
      else if (v40 < 0)
      {
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
    }
    *v37 = v40;
  }
  v64 = v37;
  v43 = v21;
  swift_endAccess();
  v44 = 1;
  *((_BYTE *)v2 + v30) = 1;
  if (v2[2])
  {
    swift_retain();
    v45 = (uint64_t)v71;
    RepublishingValueSubject.value.getter((uint64_t)v71);
    swift_release();
    v44 = 0;
    v47 = v68;
    v46 = v69;
    v48 = v65;
  }
  else
  {
    v47 = v68;
    v46 = v69;
    v48 = v65;
    v45 = (uint64_t)v71;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v45, v44, 1, v47);
  os_unfair_lock_unlock(v48);
  v49 = v36;
  v50 = v72;
  v51 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v70, v45, v46);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v51, 1, v47) == 1)
  {
    v52 = v51;
    v53 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    v53(v45, v46);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v43, v73);
    v53((uint64_t)v52, v46);
    return;
  }
  v54 = v66;
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v66, v51, v47);
  os_unfair_recursive_lock_lock_with_options();
  v55 = v43;
  v56 = sub_1A93F78A8();
  v57 = v74;
  os_unfair_recursive_lock_unlock();
  sub_1A93F78E4();
  if ((sub_1A93F78CC() & 1) == 0)
  {
    if ((v56 & 0x8000000000000000) == 0)
    {
      if (!v56)
        goto LABEL_52;
      goto LABEL_41;
    }
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
LABEL_41:
  os_unfair_lock_lock(v48);
  v58 = v64;
  swift_beginAccess();
  v59 = *v58;
  sub_1A93F78E4();
  if ((sub_1A93F78CC() & 1) == 0)
  {
    sub_1A93F78E4();
    v60 = sub_1A93F78CC();
    v61 = sub_1A93F78E4();
    if ((v60 & 1) != 0)
    {
      v57 = v74;
    }
    else
    {
      v62 = sub_1A93F78CC();
      v57 = v74;
      if ((v62 & 1) != 0)
        goto LABEL_48;
      if ((v59 | v56) < 0)
      {
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
      v61 = v59 + v56;
      if (__OFADD__(v59, v56))
      {
LABEL_48:
        v61 = sub_1A93F78E4();
      }
      else if (v61 < 0)
      {
LABEL_64:
        __break(1u);
        return;
      }
    }
    *v64 = v61;
  }
  swift_endAccess();
  os_unfair_lock_unlock(v65);
LABEL_52:
  (*(void (**)(char *, uint64_t))(v49 + 8))(v54, v47);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v46);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v55, v73);
}

void RepublishingValueSubject.value.getter(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;

  v3 = *v1;
  os_unfair_lock_lock((os_unfair_lock_t)(v1[2] + 16));
  v4 = (char *)v1 + *(_QWORD *)(*v1 + 136);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1[2] + 16));
}

uint64_t sub_1A9054E2C(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_1A9054E34()
{
  return DiskAssetCache.description.getter();
}

uint64_t DiskAssetCache.description.getter()
{
  uint64_t v0;
  int v1;
  uint64_t result;

  sub_1A93F8C70();
  sub_1A93F810C();
  sub_1A93F9474();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F9474();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  if ((*(_BYTE *)(v0 + qword_1ED2B8A18 + 4) & 1) != 0
    || (v1 = *(_DWORD *)(v0 + qword_1ED2B8A18), v1 == 512)
    || v1 == 0x8000
    || v1 == 2048)
  {
    sub_1A93F8DE4();
    sub_1A93F810C();
    return 0;
  }
  else
  {
    result = sub_1A93F8E14();
    __break(1u);
  }
  return result;
}

uint64_t static OSSignposter.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A86B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1ED2A8698, a1);
}

uint64_t static Logger.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2AD130, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2AD110, a1);
}

uint64_t sub_1A9055040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A9055058(a1, a2);
}

uint64_t sub_1A9055058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  v4 = sub_1A93F8A90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

BOOL Collection.isNotEmpty.getter()
{
  return (sub_1A93F86C4() & 1) == 0;
}

uint64_t dispatch thunk of AssetProcessingStep.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

ValueMetadata *type metadata accessor for EpisodeListenNowReason()
{
  return &type metadata for EpisodeListenNowReason;
}

id sub_1A90550F0()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1A93F71A0();
  v1 = objc_msgSend(v0, sel_isPackagedMedia);

  return v1;
}

uint64_t sub_1A905512C(void *a1)
{
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_pathExtension);
  if (v2)
  {
    v3 = v2;
    v4 = sub_1A93F8040();
    v6 = v5;

    if (v4 == 0x676B70766F6DLL && v6 == 0xE600000000000000)
    {

      swift_bridgeObjectRelease();
      v8 = 1;
    }
    else
    {
      v8 = sub_1A93F90C0();

      swift_bridgeObjectRelease();
    }
  }
  else
  {

    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1A90551F8()
{
  unsigned __int8 *v0;

  return sub_1A9055200(*v0);
}

uint64_t sub_1A9055200(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9055234 + 4 * byte_1A94227F0[a1]))(0x6574616C706D6574, 0xE800000000000000);
}

uint64_t sub_1A9055234()
{
  return 0x6874646977;
}

uint64_t sub_1A9055248()
{
  return 0x746867696568;
}

uint64_t sub_1A905525C()
{
  return 0x756F72676B636162;
}

unint64_t sub_1A9055280()
{
  return 0xD000000000000010;
}

unint64_t sub_1A905529C()
{
  return 0xD000000000000012;
}

uint64_t Podcasts.feature.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1A9055314 + 4 * byte_1A9411760[*v0]))("WatchContextMenu", 16);
}

const char *sub_1A9055314()
{
  return "SerialSortAutoDownloads";
}

const char *sub_1A9055698()
{
  return "ObjectGraphBuilderInitialization";
}

uint64_t sub_1A90556D4()
{
  return Podcasts.feature.getter();
}

const char *sub_1A90556EC()
{
  return "Podcasts";
}

uint64_t getEnumTagSinglePayload for DeferredLaunchTaskCoordinator._DeferredTask(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1A9055748()
{
  uint64_t v0;

  return sub_1A9098E20(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A9055750()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A9055770(uint64_t a1)
{
  uint64_t v1;

  return sub_1A91D86F4(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1A9055778()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return sub_1A90557E4(v0[5], (uint64_t)v0 + ((v4 + 48) & ~v4), v1, v2, v3);
}

uint64_t sub_1A90557E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = &v15[-v12];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(&v15[-v12], a2, AssociatedTypeWitness);
  v16 = a3;
  v17 = a4;
  v18 = a5;
  v19 = v13;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  sub_1A93F78FC();
  sub_1A93F7F5C();
  sub_1A905F5EC((void (*)(uint64_t))sub_1A907AB44, (uint64_t)v15, a1);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
}

void sub_1A9055950(uint64_t *a1)
{
  uint64_t v1;

  sub_1A9055960(a1, *(os_unfair_lock_s **)(v1 + 16), *(const char **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

void sub_1A9055960(uint64_t *a1, os_unfair_lock_s *a2, const char *a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;

  v8 = *a1;
  v9 = (uint64_t)&a2[4];
  v10 = a2 + 10;
  os_unfair_lock_lock(a2 + 10);
  sub_1A90559D0(v9, v8, a3, a4, a5);
  os_unfair_lock_unlock(v10);
}

uint64_t sub_1A90559D0(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, unsigned __int8 a5)
{
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  NSObject *v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  char v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  os_signpost_id_t v53;
  os_log_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  int v58;
  int v59;
  char v60;
  char v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  os_signpost_id_t v67;
  os_log_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  os_log_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  const char *v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v85 = (char *)a3;
  v7 = (const char *)sub_1A93F7638();
  v81 = *((_QWORD *)v7 - 1);
  v82 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v74 - v11;
  v13 = sub_1A93F75FC();
  v86 = *(_QWORD *)(v13 - 8);
  v87 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v80 = (char *)&v74 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v74 - v19;
  v21 = sub_1A93F762C();
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v22);
  v29 = (char *)&v74 - v28;
  if (*v26)
  {
    v77 = v26[1];
    v79 = v26;
    v30 = v26[2];
    v83 = v27;
    v84 = v30;
    v78 = a5;
    if (a2)
    {
      if (qword_1ED2A86B0 != -1)
      {
        v72 = result;
        swift_once();
        result = v72;
      }
      v31 = result;
      v32 = __swift_project_value_buffer(result, (uint64_t)qword_1ED2A8698);
      v33 = v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v24, v32, v31);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      v34 = sub_1A93F7620();
      sub_1A93F7644();
      v75 = sub_1A93F8934();
      if ((sub_1A93F8A6C() & 1) != 0)
      {
        v76 = v31;
        if ((v78 & 1) == 0)
        {
          if (v85)
          {
            v36 = v81;
            v35 = v82;
LABEL_22:
            swift_retain();
            sub_1A93F7668();
            swift_release();
            v45 = (*(uint64_t (**)(char *, const char *))(v36 + 88))(v10, v35);
            v46 = *MEMORY[0x1E0DF2190];
            v74 = v34;
            if (v45 == v46)
            {
              v47 = 0;
              v48 = 0;
              v82 = "[Error] Interval already ended";
            }
            else
            {
              (*(void (**)(char *, const char *))(v36 + 8))(v10, v35);
              v82 = "[identifier=%{name=identifier}s] FAILURE";
              v48 = 2;
              v47 = 1;
            }
            v49 = v80;
            (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v80, v16, v87);
            v50 = swift_slowAlloc();
            v51 = swift_slowAlloc();
            v90 = v51;
            *(_BYTE *)v50 = v48;
            *(_BYTE *)(v50 + 1) = v47;
            *(_WORD *)(v50 + 2) = 2080;
            v52 = v84;
            swift_bridgeObjectRetain();
            v89 = sub_1A906436C(v77, v52, &v90);
            sub_1A93F8AA8();
            swift_release_n();
            swift_bridgeObjectRelease_n();
            v53 = sub_1A93F75E4();
            v54 = v74;
            _os_signpost_emit_with_name_impl(&dword_1A904E000, v74, (os_signpost_type_t)v75, v53, v85, v82, (uint8_t *)v50, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1AF41411C](v51, -1, -1);
            MEMORY[0x1AF41411C](v50, -1, -1);

            v55 = v87;
            v56 = *(void (**)(char *, uint64_t))(v86 + 8);
            v56(v16, v87);
            (*(void (**)(char *, uint64_t))(v83 + 8))(v24, v76);
            swift_bridgeObjectRelease();
            swift_release();
            result = ((uint64_t (*)(char *, uint64_t))v56)(v49, v55);
            goto LABEL_35;
          }
          goto LABEL_43;
        }
        if ((unint64_t)v85 >> 32)
        {
          __break(1u);
        }
        else
        {
          v36 = v81;
          v35 = v82;
          if (v85 >> 11 == 27)
          {
LABEL_41:
            __break(1u);
            goto LABEL_42;
          }
          if (v85 >> 16 <= 0x10)
          {
            v44 = v88;
            v85 = sub_1A910F87C();
            v88 = v44;
            goto LABEL_22;
          }
        }
        __break(1u);
        goto LABEL_39;
      }
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v86 + 8))(v16, v87);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v31);
    }
    else
    {
      if (qword_1ED2A86B0 != -1)
      {
        v73 = result;
        swift_once();
        result = v73;
      }
      v37 = result;
      v38 = __swift_project_value_buffer(result, (uint64_t)qword_1ED2A8698);
      v39 = v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v29, v38, v37);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      v40 = sub_1A93F7620();
      sub_1A93F7644();
      v75 = sub_1A93F8934();
      if ((sub_1A93F8A6C() & 1) != 0)
      {
        v76 = v37;
        if ((v78 & 1) != 0)
        {
          if ((unint64_t)v85 >> 32)
          {
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          v41 = v40;
          v43 = v81;
          v42 = v82;
          if (v85 >> 11 == 27)
          {
LABEL_42:
            __break(1u);
LABEL_43:
            swift_bridgeObjectRelease_n();
            swift_release_n();
            __break(1u);
            goto LABEL_44;
          }
          if (v85 >> 16 > 0x10)
            goto LABEL_40;
          v57 = v88;
          v85 = sub_1A910F87C();
          v88 = v57;
        }
        else
        {
          if (!v85)
          {
LABEL_44:
            swift_bridgeObjectRelease_n();
            result = swift_release_n();
            __break(1u);
            return result;
          }
          v41 = v40;
          v43 = v81;
          v42 = v82;
        }
        swift_retain();
        sub_1A93F7668();
        swift_release();
        v58 = (*(uint64_t (**)(char *, const char *))(v43 + 88))(v12, v42);
        v59 = *MEMORY[0x1E0DF2190];
        v74 = v41;
        if (v58 == v59)
        {
          v60 = 0;
          v61 = 0;
          v82 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, const char *))(v43 + 8))(v12, v42);
          v82 = "[identifier=%{name=identifier}s] EMPTY";
          v61 = 2;
          v60 = 1;
        }
        v62 = v86;
        v63 = v80;
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v80, v20, v87);
        v64 = swift_slowAlloc();
        v65 = swift_slowAlloc();
        v90 = v65;
        *(_BYTE *)v64 = v61;
        *(_BYTE *)(v64 + 1) = v60;
        *(_WORD *)(v64 + 2) = 2080;
        v66 = v84;
        swift_bridgeObjectRetain();
        v89 = sub_1A906436C(v77, v66, &v90);
        sub_1A93F8AA8();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        v67 = sub_1A93F75E4();
        v68 = v74;
        _os_signpost_emit_with_name_impl(&dword_1A904E000, v74, (os_signpost_type_t)v75, v67, v85, v82, (uint8_t *)v64, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v65, -1, -1);
        MEMORY[0x1AF41411C](v64, -1, -1);

        v69 = *(void (**)(char *, uint64_t))(v62 + 8);
        v70 = v87;
        v69(v20, v87);
        (*(void (**)(char *, uint64_t))(v83 + 8))(v29, v76);
        swift_bridgeObjectRelease();
        swift_release();
        result = ((uint64_t (*)(char *, uint64_t))v69)(v63, v70);
        goto LABEL_35;
      }
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v86 + 8))(v20, v87);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v37);
    }
    swift_bridgeObjectRelease();
    result = swift_release();
LABEL_35:
    v71 = v79;
    *v79 = 0;
    v71[1] = 0;
    v71[2] = 0;
  }
  return result;
}

uint64_t destroy for EpisodeStateIdentifier(uint64_t a1)
{
  return sub_1A9086E08(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1A90561F4()
{
  uint64_t v0;

  sub_1A93F6DEC();
  swift_allocObject();
  sub_1A93F6DE0();
  type metadata accessor for PlayerArtwork();
  sub_1A905638C();
  v0 = sub_1A93F6DD4();
  swift_release();
  return v0;
}

id PlayerArtwork.init(template:width:height:backgroundColor:primaryTextColor:secondaryTextColor:tertiaryTextColor:quaternaryTextColor:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  objc_super v26;

  v17 = &v16[OBJC_IVAR___IMPlayerArtwork_template];
  *(_QWORD *)v17 = a1;
  *((_QWORD *)v17 + 1) = a2;
  v18 = &v16[OBJC_IVAR___IMPlayerArtwork_width];
  *(_QWORD *)v18 = a3;
  v18[8] = a4 & 1;
  v19 = &v16[OBJC_IVAR___IMPlayerArtwork_height];
  *(_QWORD *)v19 = a5;
  v19[8] = a6 & 1;
  v20 = &v16[OBJC_IVAR___IMPlayerArtwork_backgroundColor];
  *(_QWORD *)v20 = a7;
  *((_QWORD *)v20 + 1) = a8;
  v21 = &v16[OBJC_IVAR___IMPlayerArtwork_primaryTextColor];
  *(_QWORD *)v21 = a9;
  *((_QWORD *)v21 + 1) = a10;
  v22 = &v16[OBJC_IVAR___IMPlayerArtwork_secondaryTextColor];
  *(_QWORD *)v22 = a11;
  *((_QWORD *)v22 + 1) = a12;
  v23 = &v16[OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor];
  *(_QWORD *)v23 = a13;
  *((_QWORD *)v23 + 1) = a14;
  v24 = &v16[OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor];
  *(_QWORD *)v24 = a15;
  *((_QWORD *)v24 + 1) = a16;
  v26.receiver = v16;
  v26.super_class = (Class)type metadata accessor for PlayerArtwork();
  return objc_msgSendSuper2(&v26, sel_init);
}

uint64_t type metadata accessor for PlayerArtwork()
{
  return objc_opt_self();
}

unint64_t sub_1A905638C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2A9D58[0];
  if (!qword_1ED2A9D58[0])
  {
    v1 = type metadata accessor for PlayerArtwork();
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PlayerArtwork, v1);
    atomic_store(result, qword_1ED2A9D58);
  }
  return result;
}

_BYTE *sub_1A90563D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

uint64_t getEnumTagSinglePayload for EpisodeListenNowReason(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A90563F8(uint64_t a1, unint64_t a2, dispatch_group_t group, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  NSObject *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  __int128 v22;
  __int128 v23;
  uint64_t (*v24)(void *, uint64_t);
  uint64_t v25;
  _BYTE v26[72];
  _OWORD v27[4];
  uint64_t v28;

  dispatch_group_enter(group);
  sub_1A9057F7C(a4, (uint64_t)v27);
  sub_1A9057F7C((uint64_t)v27, (uint64_t)v26);
  v10 = swift_allocObject();
  v11 = v27[1];
  v12 = v27[3];
  *(_OWORD *)(v10 + 48) = v27[2];
  *(_OWORD *)(v10 + 64) = v12;
  v13 = v28;
  *(_OWORD *)(v10 + 16) = v27[0];
  *(_OWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 80) = v13;
  *(_QWORD *)(v10 + 88) = a5;
  *(_QWORD *)(v10 + 96) = group;
  *(_QWORD *)(v10 + 104) = a1;
  *(_QWORD *)(v10 + 112) = a2;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v14 = group;
  v15 = sub_1A90D518C(a1, a2);
  if (v15)
  {
    v16 = v15;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_1A90D6B18;
    *(_QWORD *)(v17 + 24) = v10;
    v24 = sub_1A90D50D0;
    v25 = v17;
    *(_QWORD *)&v22 = MEMORY[0x1E0C809B0];
    *((_QWORD *)&v22 + 1) = 1107296256;
    *(_QWORD *)&v23 = sub_1A906FD4C;
    *((_QWORD *)&v23 + 1) = &block_descriptor_12_1;
    v18 = _Block_copy(&v22);
    swift_retain();
    swift_release();
    objc_msgSend(v16, sel_donateWithOptions_usingStream_, 0, v18);

    _Block_release(v18);
  }
  else
  {
    sub_1A91E44F8();
    v22 = 0u;
    v23 = 0u;
    v24 = 0;
    v19 = (void *)swift_allocError();
    *(_QWORD *)v20 = 4;
    *(_BYTE *)(v20 + 8) = 1;
    sub_1A90D6B28((uint64_t)&v22, v19, (uint64_t)v26, a5, v14, a1, a2);

    sub_1A90D2F0C((uint64_t)&v22);
  }
  swift_release();
  sub_1A9058034((uint64_t)v26);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1A905660C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  void (*v16)(_QWORD *, uint64_t, uint64_t);
  id v17;
  void (*v18)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  BOOL v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t (*v35)(_QWORD *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];
  _BYTE v39[72];
  __int128 v40[2];
  _OWORD v41[4];
  void *v42;

  v6 = v5;
  v37 = a3;
  v36 = a1;
  v10 = sub_1A93F7E18();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t (**)(_QWORD *, uint64_t))((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A9057F7C(v5, (uint64_t)v41);
  v14 = v42;
  *v13 = v42;
  v15 = *MEMORY[0x1E0DEF740];
  v16 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v11 + 104);
  v16(v13, v15, v10);
  v17 = v14;
  LOBYTE(v14) = sub_1A93F7E3C();
  v18 = *(void (**)(_QWORD *, uint64_t))(v11 + 8);
  v18(v13, v10);
  result = sub_1A9058034((uint64_t)v41);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  v35 = (uint64_t (*)(_QWORD *, uint64_t))v18;
  v20 = *(_QWORD *)(v6 + 8);
  sub_1A9057F7C(v6, (uint64_t)v41);
  sub_1A905DC3C(v36, (uint64_t)v40);
  sub_1A9057F7C((uint64_t)v41, (uint64_t)v39);
  sub_1A905DC3C((uint64_t)v40, (uint64_t)v38);
  v21 = swift_allocObject();
  v36 = a4;
  *(_QWORD *)(v21 + 16) = a4;
  *(_QWORD *)(v21 + 24) = a5;
  v22 = v41[3];
  *(_OWORD *)(v21 + 64) = v41[2];
  *(_OWORD *)(v21 + 80) = v22;
  *(_QWORD *)(v21 + 96) = v42;
  v23 = v41[1];
  *(_OWORD *)(v21 + 32) = v41[0];
  *(_OWORD *)(v21 + 48) = v23;
  sub_1A905D4AC(v40, v21 + 104);
  *(_QWORD *)(v21 + 144) = a2;
  v24 = v20;
  v25 = v37;
  *(_QWORD *)(v21 + 152) = v37;
  v26 = *(void **)(v24 + 80);
  *v13 = v26;
  v16(v13, v15, v10);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v27 = v26;
  v28 = sub_1A93F7E3C();
  result = v35(v13, v10);
  if ((v28 & 1) == 0)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v29 = *(_QWORD *)(v24 + 88);
  if (v29)
  {
    v30 = *(_QWORD *)(v24 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A9056990(v29, v30, v38, a2, v25, v36, a5);
    sub_1A908A160(v29);
    swift_release();
    swift_release();
  }
  else
  {
    v31 = *(unsigned __int8 *)(v24 + 16);
    if (os_feature_enabled_disable_homepod_station_donation())
      v32 = v31 == 2;
    else
      v32 = v31 != 1;
    v33 = swift_allocObject();
    swift_weakInit();
    v34 = (_QWORD *)swift_allocObject();
    v34[2] = v33;
    v34[3] = sub_1A90D6E00;
    v34[4] = v21;
    swift_retain();
    swift_retain();
    if (v32)
      sub_1A90D6ECC((uint64_t)sub_1A90D7090, (uint64_t)v34);
    else
      sub_1A91E29D0((uint64_t)sub_1A92D4CD8, (uint64_t)v34);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_1A9058034((uint64_t)v39);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9056990(unint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  BOOL v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  void (*v60)(void (*)(void *), uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _OWORD v73[4];
  uint64_t v74;
  _BYTE v75[64];
  void *v76;

  v8 = v7;
  v66 = a7;
  v65 = a6;
  v70 = a3;
  v69 = a2;
  v12 = sub_1A93F7E18();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = v8;
  sub_1A9057F7C(v8, (uint64_t)v75);
  v16 = v76;
  *v15 = v76;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v17 = v16;
  LOBYTE(v16) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  sub_1A9058034((uint64_t)v75);
  if ((v16 & 1) == 0)
    goto LABEL_43;
  v63 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_44;
  v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    v64 = a4;
    v67 = a5;
    if (v18)
    {
      v19 = a1 & 0xC000000000000001;
      v20 = 4;
      v21 = a1;
      while (1)
      {
        v22 = v19 ? (id)MEMORY[0x1AF4129DC](v20 - 4, a1) : *(id *)(a1 + 8 * v20);
        v23 = v22;
        a1 = v20 - 3;
        if (__OFADD__(v20 - 4, 1))
          break;
        a5 = v70[3];
        a4 = v70[4];
        __swift_project_boxed_opaque_existential_1(v70, a5);
        (*(void (**)(void *, uint64_t, unint64_t))(a4 + 8))(v23, a5, a4);

        ++v20;
        v24 = a1 == v18;
        a1 = v21;
        if (v24)
          goto LABEL_12;
      }
      __break(1u);
      goto LABEL_42;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    if (qword_1ED2A8778 != -1)
      swift_once();
    v25 = sub_1A93F7698();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED2A8758);
    sub_1A9057F7C(v68, (uint64_t)v73);
    swift_bridgeObjectRetain_n();
    v26 = sub_1A93F7674();
    v27 = sub_1A93F87B4();
    v28 = os_log_type_enabled(v26, v27);
    v29 = v69;
    if (v28)
    {
      v30 = swift_slowAlloc();
      v62 = swift_slowAlloc();
      v71 = v62;
      *(_DWORD *)v30 = 141558531;
      v72 = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v30 + 12) = 2081;
      v31 = *(void **)(*((_QWORD *)&v73[0] + 1) + 24);
      if (v31)
      {
        v32 = objc_msgSend(v31, sel_description);
        v33 = sub_1A93F8040();
        a4 = v34;

      }
      else
      {
        v33 = 0x6974636120726F66;
        a4 = 0xEF72657375206576;
      }
      v72 = sub_1A906436C(v33, a4, &v71);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A9058034((uint64_t)v73);
      *(_WORD *)(v30 + 22) = 2048;
      if (v63)
      {
        swift_bridgeObjectRetain();
        v35 = sub_1A93F8E5C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v35 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v29 = v69;
      swift_bridgeObjectRelease();
      v72 = v35;
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v26, v27, "Account %{private,mask.hash}s: Registered %ld podcast KVItems.", (uint8_t *)v30, 0x20u);
      a5 = v62;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](a5, -1, -1);
      MEMORY[0x1AF41411C](v30, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1A9058034((uint64_t)v73);

      swift_bridgeObjectRelease();
    }
    v63 = v29 >> 62;
    if (!(v29 >> 62))
    {
      v36 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v36)
        break;
      goto LABEL_25;
    }
    swift_bridgeObjectRetain();
    v29 = v69;
    v36 = sub_1A93F8E5C();
    if (!v36)
      break;
LABEL_25:
    v37 = v29 & 0xC000000000000001;
    v38 = 4;
    while (1)
    {
      v39 = v37 ? (id)MEMORY[0x1AF4129DC](v38 - 4, v29) : *(id *)(v29 + 8 * v38);
      v40 = v39;
      a1 = v38 - 3;
      if (__OFADD__(v38 - 4, 1))
        break;
      a5 = v70[3];
      a4 = v70[4];
      __swift_project_boxed_opaque_existential_1(v70, a5);
      (*(void (**)(void *, uint64_t, unint64_t))(a4 + 8))(v40, a5, a4);

      ++v38;
      v29 = v69;
      if (a1 == v36)
        goto LABEL_31;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    v18 = sub_1A93F8E5C();
  }
LABEL_31:
  swift_bridgeObjectRelease();
  sub_1A9057F7C(v68, (uint64_t)v73);
  swift_bridgeObjectRetain_n();
  v41 = sub_1A93F7674();
  v42 = sub_1A93F87B4();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = swift_slowAlloc();
    v44 = swift_slowAlloc();
    v71 = v44;
    *(_DWORD *)v43 = 141558531;
    v72 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v43 + 12) = 2081;
    v45 = *(void **)(*((_QWORD *)&v73[0] + 1) + 24);
    v46 = v64;
    if (v45)
    {
      v47 = objc_msgSend(v45, sel_description);
      v48 = sub_1A93F8040();
      v50 = v49;

    }
    else
    {
      v48 = 0x6974636120726F66;
      v50 = 0xEF72657375206576;
    }
    v72 = sub_1A906436C(v48, v50, &v71);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9058034((uint64_t)v73);
    *(_WORD *)(v43 + 22) = 2048;
    if (v63)
    {
      swift_bridgeObjectRetain();
      v52 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v52 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v51 = v67;
    swift_bridgeObjectRelease();
    v72 = v52;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v41, v42, "Account %{private,mask.hash}s: Registered %ld station KVItems.", (uint8_t *)v43, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v44, -1, -1);
    MEMORY[0x1AF41411C](v43, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A9058034((uint64_t)v73);

    swift_bridgeObjectRelease();
    v51 = v67;
    v46 = v64;
  }
  v53 = v70[3];
  v54 = v70[4];
  __swift_project_boxed_opaque_existential_1(v70, v53);
  sub_1A9057F7C(v68, (uint64_t)v73);
  v55 = swift_allocObject();
  v56 = v73[3];
  *(_OWORD *)(v55 + 48) = v73[2];
  *(_OWORD *)(v55 + 64) = v56;
  v57 = v74;
  v58 = v73[1];
  *(_OWORD *)(v55 + 16) = v73[0];
  *(_OWORD *)(v55 + 32) = v58;
  *(_QWORD *)(v55 + 80) = v57;
  *(_QWORD *)(v55 + 88) = v46;
  v59 = v65;
  *(_QWORD *)(v55 + 96) = v51;
  *(_QWORD *)(v55 + 104) = v59;
  *(_QWORD *)(v55 + 112) = v66;
  v60 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v54 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  v60(sub_1A90D5448, v55, v53, v54);
  return swift_release();
}

id sub_1A9057598(uint64_t a1)
{
  return sub_1A90575B8(a1);
}

id sub_1A90575B8(uint64_t a1)
{
  void *v1;
  id v3;
  id v4[2];

  v4[1] = *(id *)MEMORY[0x1E0C80C00];
  v4[0] = 0;
  if (objc_msgSend(v1, sel_registerItem_error_, a1, v4))
    return v4[0];
  v3 = v4[0];
  sub_1A93F7128();

  return (id)swift_willThrow();
}

void sub_1A9057660(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  int v19;
  _BOOL4 v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  dispatch_group_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  void *v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  void (*v61)(void);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD aBlock[9];
  _OWORD v68[4];
  uint64_t v69;
  _BYTE v70[40];
  void *v71;

  v3 = v2;
  v6 = sub_1A93F7D58();
  v64 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1A93F7DB8();
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F7E18();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A9057F7C(v3, (uint64_t)v70);
  v15 = v71;
  *v14 = v71;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF740], v11);
  v16 = v15;
  LOBYTE(v15) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  sub_1A9058034((uint64_t)v70);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  if ((sub_1A90D6D98() & 1) != 0)
  {
    if (qword_1ED2A8778 == -1)
    {
LABEL_4:
      v61 = a1;
      v17 = sub_1A93F7698();
      __swift_project_value_buffer(v17, (uint64_t)qword_1ED2A8758);
      sub_1A9057F7C(v3, (uint64_t)v68);
      sub_1A9057F7C(v3, (uint64_t)aBlock);
      v18 = sub_1A93F7674();
      v19 = sub_1A93F87B4();
      v20 = os_log_type_enabled(v18, (os_log_type_t)v19);
      v60 = a2;
      if (v20)
      {
        v59 = v19;
        v21 = swift_slowAlloc();
        v58 = swift_slowAlloc();
        v66 = v58;
        *(_DWORD *)v21 = 141558531;
        v65 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v21 + 12) = 2081;
        v22 = *(void **)(*((_QWORD *)&v68[0] + 1) + 24);
        if (v22)
        {
          v23 = objc_msgSend(v22, sel_description);
          v24 = sub_1A93F8040();
          v26 = v25;

        }
        else
        {
          v24 = 0x6974636120726F66;
          v26 = 0xEF72657375206576;
        }
        v65 = sub_1A906436C(v24, v26, &v66);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        sub_1A9058034((uint64_t)v68);
        *(_WORD *)(v21 + 22) = 2080;
        v37 = 0x80000001A944C7A0;
        v38 = 0xD000000000000011;
        if (LOBYTE(aBlock[0]) != 1)
        {
          v38 = 0xD000000000000013;
          v37 = 0x80000001A944C780;
        }
        if (LOBYTE(aBlock[0]))
          v39 = v38;
        else
          v39 = 0x20646F70656D6F48;
        if (LOBYTE(aBlock[0]))
          v40 = v37;
        else
          v40 = 0xEF7972616D697250;
        v65 = sub_1A906436C(v39, v40, &v66);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        sub_1A9058034((uint64_t)aBlock);
        _os_log_impl(&dword_1A904E000, v18, (os_log_type_t)v59, "Account %{private,mask.hash}s: Starting donation job with donation type: %s", (uint8_t *)v21, 0x20u);
        v41 = v58;
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v41, -1, -1);
        MEMORY[0x1AF41411C](v21, -1, -1);
      }
      else
      {
        sub_1A9058034((uint64_t)v68);
        sub_1A9058034((uint64_t)aBlock);
      }

      v42 = swift_allocObject();
      *(_QWORD *)(v42 + 16) = 0;
      v43 = dispatch_group_create();
      MEMORY[0x1E0C80A78](v43);
      *(&v57 - 4) = v44;
      *(&v57 - 3) = v3;
      *(&v57 - 2) = v42;
      sub_1A90D5AAC((void (*)(_QWORD, _QWORD))sub_1A90D6D8C, (uint64_t)(&v57 - 6));
      sub_1A9057F7C(v3, (uint64_t)v68);
      v45 = swift_allocObject();
      v46 = v68[3];
      *(_OWORD *)(v45 + 48) = v68[2];
      *(_OWORD *)(v45 + 64) = v46;
      v47 = v69;
      v48 = v68[1];
      *(_OWORD *)(v45 + 16) = v68[0];
      *(_OWORD *)(v45 + 32) = v48;
      *(_QWORD *)(v45 + 80) = v47;
      *(_QWORD *)(v45 + 88) = v42;
      v49 = v60;
      *(_QWORD *)(v45 + 96) = v61;
      *(_QWORD *)(v45 + 104) = v49;
      aBlock[4] = sub_1A90D5E5C;
      aBlock[5] = v45;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1A908A91C;
      aBlock[3] = &block_descriptor_55;
      v50 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      sub_1A93F7D88();
      v66 = MEMORY[0x1E0DEE9D8];
      sub_1A90A1130();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
      sub_1A9066D28();
      sub_1A93F8B5C();
      sub_1A93F87FC();

      _Block_release(v50);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v8, v6);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v10, v63);
      swift_release();
      swift_release();
      return;
    }
LABEL_37:
    swift_once();
    goto LABEL_4;
  }
  if (qword_1ED2A8778 != -1)
    swift_once();
  v27 = sub_1A93F7698();
  __swift_project_value_buffer(v27, (uint64_t)qword_1ED2A8758);
  sub_1A9057F7C(v3, (uint64_t)v68);
  sub_1A9057F7C(v3, (uint64_t)aBlock);
  v28 = sub_1A93F7674();
  v29 = sub_1A93F879C();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v66 = v31;
    *(_DWORD *)v30 = 141558531;
    v65 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v30 + 12) = 2081;
    v32 = *(void **)(*((_QWORD *)&v68[0] + 1) + 24);
    v61 = a1;
    if (v32)
    {
      v33 = objc_msgSend(v32, sel_description);
      v34 = sub_1A93F8040();
      v36 = v35;

    }
    else
    {
      v34 = 0x6974636120726F66;
      v36 = 0xEF72657375206576;
    }
    v65 = sub_1A906436C(v34, v36, &v66);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9058034((uint64_t)v68);
    *(_WORD *)(v30 + 22) = 2080;
    v51 = 0x80000001A944C7A0;
    v52 = 0xD000000000000011;
    if (LOBYTE(aBlock[0]) != 1)
    {
      v52 = 0xD000000000000013;
      v51 = 0x80000001A944C780;
    }
    if (LOBYTE(aBlock[0]))
      v53 = v52;
    else
      v53 = 0x20646F70656D6F48;
    if (LOBYTE(aBlock[0]))
      v54 = v51;
    else
      v54 = 0xEF7972616D697250;
    v65 = sub_1A906436C(v53, v54, &v66);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9058034((uint64_t)aBlock);
    _os_log_impl(&dword_1A904E000, v28, v29, "Account %{private,mask.hash}s: Invalid configuration for donationType: %s.", (uint8_t *)v30, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v31, -1, -1);
    MEMORY[0x1AF41411C](v30, -1, -1);

    a1 = v61;
  }
  else
  {
    sub_1A9058034((uint64_t)v68);
    sub_1A9058034((uint64_t)aBlock);

  }
  sub_1A91E44F8();
  v55 = (void *)swift_allocError();
  *(_QWORD *)v56 = 2;
  *(_BYTE *)(v56 + 8) = 1;
  a1();

}

uint64_t sub_1A9057F7C(uint64_t a1, uint64_t a2)
{
  _s11DonationJobVwcp(a2, a1);
  return a2;
}

uint64_t _s11DonationJobVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  id v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = a2 + 16;
  v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 16, v4, v6);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRetain();
  v10 = v9;
  return a1;
}

uint64_t sub_1A9058034(uint64_t a1)
{
  _s11DonationJobVwxx(a1);
  return a1;
}

void _s11DonationJobVwxx(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  swift_bridgeObjectRelease();

}

id AssetProcessingStep.receive(on:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  void *v16;

  v16 = a1;
  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a2);
  v12 = type metadata accessor for ReceiveOnAssetProcessingStep(0, a2, a3, v11);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&a4[*(int *)(v12 + 36)], v10, a2);
  v13 = v16;
  *(_QWORD *)a4 = v16;
  return v13;
}

uint64_t type metadata accessor for ReceiveOnAssetProcessingStep(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ReceiveOnAssetProcessingStep);
}

uint64_t Cache.get(_:or:)@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  void (*v20)(uint64_t);

  v19 = a3;
  v20 = a2;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 88);
  v8 = sub_1A93F8A90();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v19 - v13;
  Cache.subscript.getter(a1);
  v15 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v7) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a4, v14, v7);
  v16 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  v17 = v16(v14, v8);
  v20(v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v12, a4, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v7);
  sub_1A9058374((uint64_t)v12, a1);
  return v16(v12, v8);
}

uint64_t Cache.subscript.getter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = (_QWORD *)*v1;
  swift_beginAccess();
  MEMORY[0x1AF411C8C](a1, v1[2], v3[10], v3[11], v3[12]);
  return swift_endAccess();
}

uint64_t Cache.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  sub_1A9058374(a1, a2);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 80) - 8) + 8))(a2);
  v6 = sub_1A93F8A90();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
}

uint64_t sub_1A9058374(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = *v2;
  v6 = sub_1A93F8A90();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - v9;
  v11 = *(_QWORD *)(v5 + 80);
  MEMORY[0x1E0C80A78](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  swift_beginAccess();
  sub_1A93F7F5C();
  sub_1A93F7F80();
  return swift_endAccess();
}

uint64_t sub_1A9058494()
{
  sub_1A90584B4();
  return swift_deallocClassInstance();
}

uint64_t sub_1A90584B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  MEMORY[0x1AF41411C](*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 224)), -1, -1);
  v1 = sub_1A9052150();
  swift_release();
  v2 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 200);
  v3 = sub_1A93F8A90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  return v1;
}

uint64_t sub_1A905853C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1A93F92DC();
  sub_1A93F92E8();
  if (v1 == 1)
    sub_1A93F7FBC();
  else
    sub_1A93F930C();
  return sub_1A93F9324();
}

unint64_t destroy for PodcastState(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t static AdamID.empty.getter()
{
  return 0;
}

id AssetProcessingStep.subscribe(on:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  void *v16;

  v16 = a1;
  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a2);
  v12 = type metadata accessor for SubscribeOnAssetProcessingStep(0, a2, a3, v11);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&a4[*(int *)(v12 + 36)], v10, a2);
  v13 = v16;
  *(_QWORD *)a4 = v16;
  return v13;
}

uint64_t type metadata accessor for SubscribeOnAssetProcessingStep(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubscribeOnAssetProcessingStep);
}

ValueMetadata *type metadata accessor for AdamID()
{
  return &type metadata for AdamID;
}

ValueMetadata *type metadata accessor for Podcasts()
{
  return &type metadata for Podcasts;
}

uint64_t sub_1A90586C8@<X0>(uint64_t *a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[32];

  v4 = *a1;
  v5 = a1[2];
  v9[16] = a2;
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1A935E104(v6, (uint64_t (*)(uint64_t *, uint64_t))sub_1A92921B0, (uint64_t)v9);
  swift_bridgeObjectRelease();
  *a3 = v4;
  a3[1] = v7;
  a3[2] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1A9058748(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45[72];
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int16 v62;
  char v63;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4348);
  result = sub_1A93F8E8C();
  v33 = (_QWORD *)result;
  if (a2 < 1)
    v7 = 0;
  else
    v7 = *a1;
  v8 = 0;
  v31 = v4;
  v32 = result + 64;
  while (1)
  {
    v44 = v5;
    if (v7)
    {
      v34 = (v7 - 1) & v7;
      v35 = v8;
      v9 = __clz(__rbit64(v7)) | (v8 << 6);
    }
    else
    {
      v10 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_30;
      if (v10 >= a2)
        return (unint64_t)v33;
      v11 = a1[v10];
      v12 = v8 + 1;
      if (!v11)
      {
        v12 = v8 + 2;
        if (v8 + 2 >= a2)
          return (unint64_t)v33;
        v11 = a1[v12];
        if (!v11)
        {
          v12 = v8 + 3;
          if (v8 + 3 >= a2)
            return (unint64_t)v33;
          v11 = a1[v12];
          if (!v11)
          {
            v13 = v8 + 4;
            if (v8 + 4 >= a2)
              return (unint64_t)v33;
            v11 = a1[v13];
            if (!v11)
            {
              while (1)
              {
                v12 = v13 + 1;
                if (__OFADD__(v13, 1))
                  goto LABEL_31;
                if (v12 >= a2)
                  return (unint64_t)v33;
                v11 = a1[v12];
                ++v13;
                if (v11)
                  goto LABEL_24;
              }
            }
            v12 = v8 + 4;
          }
        }
      }
LABEL_24:
      v34 = (v11 - 1) & v11;
      v35 = v12;
      v9 = __clz(__rbit64(v11)) + (v12 << 6);
    }
    v14 = *(_QWORD *)(v4 + 56);
    v15 = *(_QWORD *)(v4 + 48) + 96 * v9;
    v36 = *(_BYTE *)(v15 + 8);
    v37 = *(_BYTE *)(v15 + 9);
    v38 = *(_BYTE *)(v15 + 10);
    v39 = *(_BYTE *)(v15 + 11);
    v40 = *(_BYTE *)(v15 + 12);
    v41 = *(_BYTE *)(v15 + 13);
    v18 = *(_QWORD *)(v15 + 16);
    v17 = *(_QWORD *)(v15 + 24);
    v19 = *(_QWORD *)(v15 + 32);
    v42 = *(_BYTE *)(v15 + 40);
    v20 = *(_QWORD *)(v15 + 48);
    v21 = *(_QWORD *)(v15 + 56);
    v22 = *(_QWORD *)(v15 + 64);
    v23 = *(_QWORD *)(v15 + 72);
    v24 = *(_QWORD *)(v15 + 80);
    v25 = *(_BYTE *)(v15 + 90);
    v26 = *(_WORD *)(v15 + 88);
    v27 = *(_QWORD *)(v14 + 8 * v9);
    v46 = *(_QWORD *)v15;
    v16 = v46;
    v47 = v36;
    v48 = v37;
    v49 = v38;
    v50 = v39;
    v51 = v40;
    v52 = v41;
    v53 = v18;
    v54 = v17;
    v55 = v19;
    v56 = v42;
    v57 = v20;
    v58 = v21;
    v59 = v22;
    v60 = v23;
    v61 = v24;
    v43 = v25;
    v63 = v25;
    v62 = v26;
    sub_1A93F92DC();
    swift_bridgeObjectRetain();
    sub_1A909F54C(v20, v21, v22, v23, v24);
    swift_bridgeObjectRetain();
    EpisodeStateModel.hash(into:)((uint64_t)v45);
    sub_1A93F9324();
    result = sub_1A93F8B74();
    *(_QWORD *)(v32 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v28 = v33[6] + 96 * result;
    *(_QWORD *)v28 = v16;
    *(_BYTE *)(v28 + 8) = v36;
    *(_BYTE *)(v28 + 9) = v37;
    *(_BYTE *)(v28 + 10) = v38;
    *(_BYTE *)(v28 + 11) = v39;
    *(_BYTE *)(v28 + 12) = v40;
    *(_BYTE *)(v28 + 13) = v41;
    *(_QWORD *)(v28 + 16) = v18;
    *(_QWORD *)(v28 + 24) = v17;
    *(_QWORD *)(v28 + 32) = v19;
    *(_BYTE *)(v28 + 40) = v42;
    *(_QWORD *)(v28 + 48) = v20;
    *(_QWORD *)(v28 + 56) = v21;
    *(_QWORD *)(v28 + 64) = v22;
    *(_QWORD *)(v28 + 72) = v23;
    *(_QWORD *)(v28 + 80) = v24;
    *(_BYTE *)(v28 + 90) = v43;
    *(_WORD *)(v28 + 88) = v26;
    *(_QWORD *)(v33[7] + 8 * result) = v27;
    ++v33[2];
    --v5;
    if (__OFSUB__(v44, 1))
      break;
    v4 = v31;
    v7 = v34;
    v8 = v35;
    if (v44 == 1)
      return (unint64_t)v33;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t _s18PodcastsFoundation13LibraryEntityO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6)
    {
      if (a1 != a4 || a2 != a5)
        return sub_1A93F90C0();
      return 1;
    }
    return 0;
  }
  if (a3 == 1)
  {
    if (a6 == 1)
    {
      if (a1 != a4 || a2 != a5)
        return sub_1A93F90C0();
      return 1;
    }
    return 0;
  }
  return a6 == 2 && a1 == a4;
}

void type metadata accessor for os_activity_scope_state_s(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1ED2A9468);
}

void type metadata accessor for OSLogType(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1ED2A93A0);
}

uint64_t dispatch thunk of Trace.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t AssetProcessingStep<>.uniquePipeline(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v12, v5, a2);
  swift_retain();
  return UniquePipeline.init(upstream:sharedCache:)((uint64_t)v12, a1, a2, a3, a4, a5);
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

uint64_t block_destroy_helper_35()
{
  return swift_release();
}

uint64_t block_destroy_helper_36()
{
  return swift_release();
}

uint64_t block_destroy_helper_37()
{
  return swift_release();
}

uint64_t block_destroy_helper_38()
{
  return swift_release();
}

uint64_t block_destroy_helper_39()
{
  return swift_release();
}

uint64_t block_destroy_helper_40()
{
  return swift_release();
}

uint64_t block_destroy_helper_41()
{
  return swift_release();
}

uint64_t block_destroy_helper_42()
{
  return swift_release();
}

uint64_t block_destroy_helper_43()
{
  return swift_release();
}

uint64_t block_destroy_helper_44()
{
  return swift_release();
}

uint64_t block_destroy_helper_45()
{
  return swift_release();
}

uint64_t block_destroy_helper_46()
{
  return swift_release();
}

uint64_t block_destroy_helper_47()
{
  return swift_release();
}

uint64_t block_destroy_helper_48()
{
  return swift_release();
}

uint64_t block_destroy_helper_49()
{
  return swift_release();
}

uint64_t block_destroy_helper_50()
{
  return swift_release();
}

uint64_t block_destroy_helper_51()
{
  return swift_release();
}

uint64_t block_destroy_helper_52()
{
  return swift_release();
}

uint64_t block_destroy_helper_53()
{
  return swift_release();
}

uint64_t block_destroy_helper_54()
{
  return swift_release();
}

uint64_t block_destroy_helper_55()
{
  return swift_release();
}

uint64_t block_destroy_helper_56()
{
  return swift_release();
}

uint64_t block_destroy_helper_57()
{
  return swift_release();
}

uint64_t block_destroy_helper_58()
{
  return swift_release();
}

uint64_t block_destroy_helper_59()
{
  return swift_release();
}

uint64_t block_destroy_helper_60()
{
  return swift_release();
}

uint64_t block_destroy_helper_61()
{
  return swift_release();
}

uint64_t block_destroy_helper_62()
{
  return swift_release();
}

uint64_t block_destroy_helper_63()
{
  return swift_release();
}

uint64_t block_destroy_helper_64()
{
  return swift_release();
}

uint64_t block_destroy_helper_65()
{
  return swift_release();
}

uint64_t block_destroy_helper_66()
{
  return swift_release();
}

uint64_t block_destroy_helper_67()
{
  return swift_release();
}

uint64_t block_destroy_helper_68()
{
  return swift_release();
}

uint64_t block_destroy_helper_69()
{
  return swift_release();
}

uint64_t block_destroy_helper_70()
{
  return swift_release();
}

uint64_t block_destroy_helper_71()
{
  return swift_release();
}

uint64_t block_destroy_helper_72()
{
  return swift_release();
}

uint64_t block_destroy_helper_73()
{
  return swift_release();
}

uint64_t block_destroy_helper_74()
{
  return swift_release();
}

uint64_t block_destroy_helper_75()
{
  return swift_release();
}

uint64_t block_destroy_helper_76()
{
  return swift_release();
}

uint64_t block_destroy_helper_77()
{
  return swift_release();
}

uint64_t block_destroy_helper_78()
{
  return swift_release();
}

uint64_t block_destroy_helper_79()
{
  return swift_release();
}

uint64_t block_destroy_helper_80()
{
  return swift_release();
}

uint64_t block_destroy_helper_81()
{
  return swift_release();
}

uint64_t block_destroy_helper_82()
{
  return swift_release();
}

uint64_t block_destroy_helper_83()
{
  return swift_release();
}

uint64_t block_destroy_helper_84()
{
  return swift_release();
}

uint64_t block_destroy_helper_85()
{
  return swift_release();
}

uint64_t block_destroy_helper_86()
{
  return swift_release();
}

uint64_t block_destroy_helper_87()
{
  return swift_release();
}

uint64_t block_destroy_helper_88()
{
  return swift_release();
}

uint64_t block_destroy_helper_89()
{
  return swift_release();
}

uint64_t block_destroy_helper_90()
{
  return swift_release();
}

uint64_t block_destroy_helper_91()
{
  return swift_release();
}

uint64_t block_destroy_helper_92()
{
  return swift_release();
}

uint64_t storeEnumTagSinglePayload for AbbreviatedTimeIntervalFormatter.Configuration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for EyebrowBuilder(uint64_t a1)
{
  return sub_1A9062BFC(a1, (uint64_t *)&unk_1ED2ACF88);
}

ValueMetadata *type metadata accessor for EyebrowBuilder.Style()
{
  return &type metadata for EyebrowBuilder.Style;
}

uint64_t sub_1A9058F54(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9058F78(a1, *(_QWORD **)(v1 + 40)) & 1;
}

uint64_t sub_1A9058F78(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v2 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a2 + 8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - v10;
  swift_getAtKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v11, v2);
  sub_1A93F867C();
  v12 = sub_1A93F8658();
  v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v8, v2);
  v13(v11, v2);
  return v12 & 1;
}

uint64_t storeEnumTagSinglePayload for EpisodeDownloadState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 125;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileFormat()
{
  return &type metadata for FileFormat;
}

BOOL AdamID.isEmpty.getter(uint64_t a1)
{
  return !a1 || a1 == 1000000000000;
}

uint64_t destroy for SignpostTrace.Interval(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1A93F762C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t LibraryEntity.typeName.getter(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3)
    return 0x65646F73697045;
  if (a3 == 1)
    return 2003789907;
  return 0x6C656E6E616843;
}

uint64_t MTEpisode.contentId.getter()
{
  void *v0;
  uint64_t v1;

  v1 = (uint64_t)objc_msgSend(v0, sel_storeTrackId);
  if (objc_msgSend((id)objc_opt_self(), sel_isEmpty_, v1))
    return 0;
  else
    return v1 & ~(v1 >> 63);
}

void sub_1A905920C(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t storeEnumTagSinglePayload for EpisodeListenNowReason(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

Swift::String __swiftcall EpisodeListenNowReason.stringDescriptionForPrototypeUpNext()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String result;

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
  {
    v1 = 0;
    v2 = (void *)0xE000000000000000;
  }
  else
  {
    sub_1A93F85B0();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    v1 = 0xD000000000000016;
    v2 = (void *)0x80000001A944DF30;
  }
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

void EpisodeListSettings.sectionContext.getter(char *a1@<X8>)
{
  uint64_t v1;
  BOOL v2;
  char v3;

  if (*(_BYTE *)(v1 + 24))
    v2 = 0;
  else
    v2 = *(_BYTE *)(v1 + 64) == 7;
  if (v2)
    v3 = 0;
  else
    v3 = 2;
  *a1 = v3;
}

uint64_t EyebrowBuilder.caption.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.showsEpisodeNumber.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 160);
}

uint64_t sub_1A9059350()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A9059360(_QWORD *a1)
{
  return sub_1A9059380(a1);
}

uint64_t sub_1A9059380(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9EA0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A90595EC();
  sub_1A93F93D8();
  v8[15] = 0;
  sub_1A93F9000();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A93F8FD0();
    v8[13] = 2;
    sub_1A93F8FD0();
    v8[12] = 3;
    sub_1A93F8FB8();
    v8[11] = 4;
    sub_1A93F8FB8();
    v8[10] = 5;
    sub_1A93F8FB8();
    v8[9] = 6;
    sub_1A93F8FB8();
    v8[8] = 7;
    sub_1A93F8FB8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A90595EC()
{
  unint64_t result;

  result = qword_1ED2A9D40;
  if (!qword_1ED2A9D40)
  {
    result = MEMORY[0x1AF414014](&unk_1A9422978, &type metadata for PlayerArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A9D40);
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastState()
{
  return &type metadata for PodcastState;
}

uint64_t _s18PodcastsFoundation11DisplayTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t type metadata accessor for AnyAssetSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyAssetSource);
}

ValueMetadata *_s18PodcastsFoundation32StateMachineChangeObserverActionVMa_0()
{
  return &type metadata for StateMachineChangeObserverAction;
}

uint64_t sub_1A90596A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v3 = *a1;
  v4 = *a2;
  v5 = *((unsigned __int8 *)a2 + 16);
  if (*((_BYTE *)a1 + 16) != 1)
    return (v3 == v4) & ~v5;
  if ((v5 & 1) == 0)
    return 0;
  v6 = a1[1];
  if (v3 == v4 && v6 == a2[1])
    return 1;
  else
    return sub_1A93F90C0();
}

uint64_t static NetworkTaskPriority.dispatchQueuePriority()@<X0>(char *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = qos_class_self();
  v3 = 3;
  switch((int)result)
  {
    case 9:
      v3 = 0;
      break;
    case 25:
      v3 = 2;
      break;
    case 33:
      break;
    default:
      v3 = 1;
      break;
  }
  *a1 = v3;
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1AF413FFC]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1AF413F6C](a1, v6, a5);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1A90598DC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *(_QWORD *)(a2[3] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[4] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(a2[2] - 8) + 8))((v7
                                                                                       + *(_QWORD *)(v6 + 64)
                                                                                       + *(unsigned __int8 *)(*(_QWORD *)(a2[2] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[2] - 8) + 80));
}

uint64_t sub_1A905995C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t destroy for AnyEpisodeBookmarkStateRule()
{
  return swift_release();
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1AF414008](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1A9059A3C(id *a1, uint64_t a2)
{

  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((unint64_t)a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_1A9059E14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1A9059F34(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;

  v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v3 = result & 0xFFFFFFFFFFFFLL;
  if (!v3)
    return result;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR___MTSearchTrie_rootNode);
  swift_bridgeObjectRetain();
  swift_retain();
  v5 = sub_1A93F8118();
  if (!v6)
  {
    v15 = v4;
LABEL_24:
    swift_bridgeObjectRelease();
    *(_BYTE *)(v15 + 16) = 1;
    return swift_release();
  }
  v7 = v5;
  v8 = v6;
  while (1)
  {
    v11 = (_QWORD *)(v4 + 24);
    swift_beginAccess();
    v12 = *(_QWORD *)(v4 + 24);
    if (*(_QWORD *)(v12 + 16))
    {
      v13 = sub_1A9067870(v7, v8);
      if ((v14 & 1) != 0)
      {
        v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
        swift_retain();
        goto LABEL_8;
      }
    }
    type metadata accessor for SearchTrie.Node();
    v15 = swift_allocObject();
    *(_BYTE *)(v15 + 16) = 0;
    *(_QWORD *)(v15 + 24) = MEMORY[0x1E0DEE9E0];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = (_QWORD *)*v11;
    v31 = (_QWORD *)*v11;
    *v11 = 0x8000000000000000;
    v19 = sub_1A9067870(v7, v8);
    v20 = v17[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v18;
    if (v17[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v26 = v31;
        if ((v18 & 1) == 0)
          goto LABEL_19;
      }
      else
      {
        sub_1A930B904();
        v26 = v31;
        if ((v23 & 1) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      sub_1A905A200(v22, isUniquelyReferenced_nonNull_native);
      v24 = sub_1A9067870(v7, v8);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_28;
      v19 = v24;
      v26 = v31;
      if ((v23 & 1) == 0)
      {
LABEL_19:
        v26[(v19 >> 6) + 8] |= 1 << v19;
        v27 = (uint64_t *)(v26[6] + 16 * v19);
        *v27 = v7;
        v27[1] = v8;
        *(_QWORD *)(v26[7] + 8 * v19) = v15;
        v28 = v26[2];
        v29 = __OFADD__(v28, 1);
        v30 = v28 + 1;
        if (v29)
          goto LABEL_27;
        v26[2] = v30;
        swift_bridgeObjectRetain();
        goto LABEL_7;
      }
    }
    v9 = v26[7];
    swift_release();
    *(_QWORD *)(v9 + 8 * v19) = v15;
LABEL_7:
    *v11 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
LABEL_8:
    swift_bridgeObjectRelease();
    swift_release();
    v7 = sub_1A93F8118();
    v8 = v10;
    v4 = v15;
    if (!v10)
      goto LABEL_24;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SearchTrie.Node()
{
  return objc_opt_self();
}

uint64_t sub_1A905A200(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;
  char v33;

  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BE0);
  v33 = a2;
  result = sub_1A93F8E80();
  v6 = result;
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = 0;
    v32 = (_QWORD *)(v4 + 64);
    v8 = 1 << *(_BYTE *)(v4 + 32);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 64);
    v31 = (unint64_t)(v8 + 63) >> 6;
    v11 = result + 64;
    while (1)
    {
      if (v10)
      {
        v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v18 = v17 | (v7 << 6);
      }
      else
      {
        v19 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v4 + 64;
        if (v19 >= v31)
          goto LABEL_33;
        v20 = v32[v19];
        ++v7;
        if (!v20)
        {
          v7 = v19 + 1;
          if (v19 + 1 >= v31)
            goto LABEL_33;
          v20 = v32[v7];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v31)
            {
LABEL_33:
              if ((v33 & 1) != 0)
              {
                v30 = 1 << *(_BYTE *)(v4 + 32);
                if (v30 >= 64)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v4 + 16) = 0;
              }
              break;
            }
            v20 = v32[v21];
            if (!v20)
            {
              while (1)
              {
                v7 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v7 >= v31)
                  goto LABEL_33;
                v20 = v32[v7];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v7 = v21;
          }
        }
LABEL_30:
        v10 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v7 << 6);
      }
      v26 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v18);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v18);
      if ((v33 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_1A93F92DC();
      sub_1A93F7FBC();
      result = sub_1A93F9324();
      v12 = -1 << *(_BYTE *)(v6 + 32);
      v13 = result & ~v12;
      v14 = v13 >> 6;
      if (((-1 << v13) & ~*(_QWORD *)(v11 + 8 * (v13 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v11 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v12) >> 6;
        do
        {
          if (++v14 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v24 = v14 == v23;
          if (v14 == v23)
            v14 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v14);
        }
        while (v25 == -1);
        v15 = __clz(__rbit64(~v25)) + (v14 << 6);
      }
      *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v15);
      *v16 = v28;
      v16[1] = v27;
      *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v15) = v29;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v2 = v6;
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t MTPodcastEpisodeLimit.allowsAutomaticDownloads.getter(void *a1)
{
  id v1;
  id v2;
  uint64_t result;

  v1 = a1;
  while (v1 == (id)0x100000001)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSettingsUserDefaults);
    v1 = objc_msgSend(v2, sel_episodeLimitForKey_, CFSTR("MTPodcastEpisodeLimitDefaultKey"));

  }
  if ((unint64_t)v1 < 0xA || v1 == (id)0xFFFFFFFFLL)
    return 1;
  if (v1 == (id)0x100000000)
    return 0;
  type metadata accessor for MTPodcastEpisodeLimit(0);
  result = sub_1A93F921C();
  __break(1u);
  return result;
}

uint64_t os_feature_enabled_serial_sort_auto_downloads()
{
  return _os_feature_enabled_impl();
}

os_log_t _MTLogCategoryMetrics()
{
  return os_log_create("com.apple.podcasts", "Metrics");
}

id jsonSerializableValueForValue(void *a1)
{
  id v1;
  void *v2;
  CFTypeID v3;
  __CFString *v4;

  v1 = a1;
  if (objc_msgSend(v1, "conformsToProtocol:", &unk_1EEB0D0E0))
  {
    objc_msgSend(v1, "im_jsonSerializableValue");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else if (v1)
  {
    v3 = CFGetTypeID(v1);
    v4 = (__CFString *)CFCopyTypeIDDescription(v3);
    if (-[__CFString length](v4, "length"))
    {
      jsonSerializableValueForCoreFoundationType(v1, v4);
      v2 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v2 = 0;
    }

  }
  else
  {
    v2 = 0;
  }

  return v2;
}

void sub_1A905D064(void *a1)
{
  objc_begin_catch(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)&_lock);
  objc_exception_rethrow();
}

void sub_1A905D084(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_1A905D274()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  _QWORD v6[4];

  v1 = (os_unfair_lock_s *)(v0[2] + 16);
  os_unfair_lock_lock(v1);
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 168);
  swift_beginAccess();
  sub_1A905E4E4(v2, (uint64_t)&v3);
  if ((unint64_t)v5 >= 2)
  {
    sub_1A905D4AC(&v3, (uint64_t)v6);
    v3 = 0uLL;
    v4 = 0;
    v5 = xmmword_1A9411140;
    swift_beginAccess();
    sub_1A905DBB4((uint64_t)&v3, v2);
    swift_endAccess();
    os_unfair_lock_unlock(v1);
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    sub_1A93F78B4();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  }
  else
  {
    sub_1A905E684((uint64_t)&v3);
    os_unfair_lock_unlock(v1);
  }
}

uint64_t RepublishingValueSubject.send(subscription:)(_QWORD *a1)
{
  _QWORD *v1;
  os_unfair_lock_s *v3;
  _QWORD **v4;
  _QWORD *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  __int128 v10[2];

  v3 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v3);
  sub_1A905DC3C((uint64_t)a1, (uint64_t)v10);
  v4 = (_QWORD **)((char *)v1 + *(_QWORD *)(*v1 + 144));
  swift_beginAccess();
  v5 = *v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v4 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_1A9118430(0, v5[2] + 1, 1, v5, &qword_1ED2A9718, (uint64_t *)&unk_1ED2AC480);
    *v4 = v5;
  }
  v8 = v5[2];
  v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    v5 = sub_1A9118430((_QWORD *)(v7 > 1), v8 + 1, 1, v5, &qword_1ED2A9718, (uint64_t *)&unk_1ED2AC480);
    *v4 = v5;
  }
  v5[2] = v8 + 1;
  sub_1A905D4AC(v10, (uint64_t)&v5[5 * v8 + 4]);
  swift_endAccess();
  os_unfair_lock_unlock(v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F78E4();
  return sub_1A93F7908();
}

uint64_t sub_1A905D4AC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1A905D4C4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  _BYTE v18[24];
  unint64_t v19;

  v2 = v1;
  v4 = *(_QWORD *)v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_1A93F8A90();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v18[-v8];
  v10 = (os_unfair_lock_s *)(*((_QWORD *)v1 + 2) + 16);
  os_unfair_lock_lock(v10);
  v11 = (uint64_t)&v2[*(_QWORD *)(*(_QWORD *)v2 + 168)];
  swift_beginAccess();
  sub_1A905E4E4(v11, (uint64_t)v18);
  v12 = v19;
  sub_1A905E684((uint64_t)v18);
  os_unfair_lock_unlock(v10);
  if (v12 < 2)
    return sub_1A93F78D8();
  v14 = *(_QWORD *)v2;
  if (v2[*(_QWORD *)(*(_QWORD *)v2 + 144)] == 1)
  {
    v15 = *(_QWORD *)(v4 + 112);
    v16 = *(_QWORD *)(v4 + 88);
LABEL_7:
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v15 + 32))(a1, &v2[*(_QWORD *)(v14 + 184)], v16, v15);
    return sub_1A93F78A8();
  }
  v15 = *(_QWORD *)(v4 + 112);
  v16 = *(_QWORD *)(v4 + 88);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 24))(&v2[*(_QWORD *)(v14 + 184)], v16, v15);
  v17 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v9, 1, AssociatedTypeWitness);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  if (v17 == 1)
  {
    v14 = *(_QWORD *)v2;
    goto LABEL_7;
  }
  return sub_1A93F78A8();
}

void sub_1A905D688()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];
  __int128 v5;

  v1 = (os_unfair_lock_s *)(v0[2] + 16);
  os_unfair_lock_lock(v1);
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 168);
  swift_beginAccess();
  sub_1A905E4E4(v2, (uint64_t)v4);
  v3 = v5;
  sub_1A905E684((uint64_t)v4);
  if (v3 >= 2)
  {
    memset(v4, 0, sizeof(v4));
    v5 = xmmword_1A9411140;
    swift_beginAccess();
    sub_1A905DBB4((uint64_t)v4, v2);
    swift_endAccess();
    os_unfair_lock_unlock(v1);
    sub_1A93F7890();
  }
  else
  {
    os_unfair_lock_unlock(v1);
  }
}

uint64_t sub_1A905D77C(uint64_t a1)
{
  return sub_1A905D79C(a1);
}

uint64_t sub_1A905D79C(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(os_unfair_lock_s **)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 168));
  v4 = (uint64_t)&v3[4];
  v5 = v3 + 24;
  os_unfair_lock_lock(v3 + 24);
  sub_1A9061A70(v4, a1, v1);
  os_unfair_lock_unlock(v5);
  return sub_1A93F7890();
}

uint64_t sub_1A905D824(_QWORD *a1)
{
  _QWORD *v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  _BYTE v8[24];
  uint64_t v9;

  v3 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v3);
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 168);
  swift_beginAccess();
  sub_1A905E4E4(v4, (uint64_t)v8);
  v5 = v9;
  sub_1A905E684((uint64_t)v8);
  if (v5)
  {
    os_unfair_lock_unlock(v3);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    return sub_1A93F78B4();
  }
  else
  {
    sub_1A905DC3C((uint64_t)a1, (uint64_t)v8);
    swift_beginAccess();
    sub_1A905DBB4((uint64_t)v8, v4);
    swift_endAccess();
    v7 = (_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 176));
    swift_beginAccess();
    *v7 = sub_1A93F78D8();
    os_unfair_lock_unlock(v3);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    return sub_1A93F7908();
  }
}

uint64_t sub_1A905D95C(uint64_t a1)
{
  return sub_1A905D97C(a1);
}

uint64_t sub_1A905D97C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v3 = sub_1A93F76D4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  if (*((_BYTE *)v1 + *(_QWORD *)(*v1 + 160)) == 1)
  {
    v8 = (uint64_t *)((char *)v1 + *(_QWORD *)(v7 + 128));
    v25 = a1;
    v9 = v8[3];
    v10 = v8[4];
    v11 = __swift_project_boxed_opaque_existential_1(v8, v9);
    v12 = (uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 136));
    v23 = *v12;
    v24 = v11;
    v22 = v12[1];
    v13 = *((unsigned __int8 *)v12 + 16);
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_1A93F8C70();
    v14 = (uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 144));
    v16 = *v14;
    v15 = v14[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v27 = v16;
    v28 = v15;
    sub_1A93F810C();
    sub_1A906335C((uint64_t)v6);
    v17 = sub_1A93F76BC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v26 = v17;
    sub_1A93F9060();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    sub_1A93F810C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 16))(v23, v22, v13, v27, v28, v9, v10);
    swift_bridgeObjectRelease();
    v7 = *v1;
  }
  v18 = *(os_unfair_lock_s **)((char *)v1 + *(_QWORD *)(v7 + 168));
  v19 = (uint64_t)&v18[4];
  v20 = v18 + 24;
  os_unfair_lock_lock(v18 + 24);
  sub_1A9062170(v19, (uint64_t)&v27, &qword_1ED2A90E8);
  os_unfair_lock_unlock(v20);
  if (!v29)
    return sub_1A905FD54((uint64_t)&v27, &qword_1ED2A90E8);
  __swift_project_boxed_opaque_existential_1(&v27, v29);
  sub_1A93F7908();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v27);
}

uint64_t sub_1A905DBB4(uint64_t a1, uint64_t a2)
{
  assignWithTake for SubscriptionStatus(a2, a1);
  return a2;
}

uint64_t assignWithTake for SubscriptionStatus(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
    __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t sub_1A905DC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1A905DC80(uint64_t a1)
{
  sub_1A905DCA0(a1);
}

void sub_1A905DCA0(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  os_unfair_lock_s *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  os_unfair_lock_s *v46;
  char *v47;
  os_unfair_lock_t v48;
  uint64_t *v49;
  uint64_t v50;
  char v51;
  _QWORD *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  os_unfair_lock_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;

  v2 = v1;
  v78 = a1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v80 = *(_QWORD **)v1;
  v4 = v80[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v74 = sub_1A93F78C0();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v72 = (char *)v65 - v6;
  v76 = sub_1A93F8A90();
  v75 = *(_QWORD *)(v76 - 8);
  v7 = MEMORY[0x1E0C80A78](v76);
  v9 = (char *)v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v69 = (char *)v65 - v11;
  v12 = *(_QWORD *)(v4 - 8);
  v13 = MEMORY[0x1E0C80A78](v10);
  v70 = (os_unfair_lock_t)((char *)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v68 = (char *)v65 - v15;
  v71 = v3;
  v16 = swift_getAssociatedTypeWitness();
  v17 = sub_1A93F8A90();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v65 - v20;
  v79 = v16;
  v81 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v19);
  v77 = (char *)v65 - v22;
  v23 = (os_unfair_lock_s *)(*((_QWORD *)v2 + 2) + 16);
  os_unfair_lock_lock(v23);
  v24 = (uint64_t)&v2[*(_QWORD *)(*(_QWORD *)v2 + 168)];
  swift_beginAccess();
  sub_1A905E4E4(v24, (uint64_t)&v86);
  if (v87 == 1)
  {
    v33 = v23;
    goto LABEL_7;
  }
  if (v87)
  {
    sub_1A905D4AC(&v86, (uint64_t)&v82);
    os_unfair_lock_unlock(v23);
    __swift_project_boxed_opaque_existential_1(&v82, v85);
    sub_1A93F7908();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v82);
    return;
  }
  v66 = AssociatedTypeWitness;
  v67 = v12;
  os_unfair_lock_unlock(v23);
  v25 = v23;
  v26 = v80;
  (*(void (**)(char *, _QWORD))(v80[14] + 24))(&v2[*(_QWORD *)(*(_QWORD *)v2 + 184)], v80[11]);
  v27 = v79;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v21, 1, v79) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    os_unfair_lock_lock(v25);
    v28 = &v2[*(_QWORD *)(*(_QWORD *)v2 + 160)];
    swift_beginAccess();
    v29 = v75;
    v30 = v28;
    v31 = v76;
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v9, v30, v76);
    v32 = v67;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v9, 1, v4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v31);
      v82 = 0;
      v83 = 0;
      v84 = 0;
      v85 = xmmword_1A9411140;
      swift_beginAccess();
      sub_1A905DBB4((uint64_t)&v82, v24);
      swift_endAccess();
      v33 = v25;
LABEL_7:
      os_unfair_lock_unlock(v33);
      return;
    }
    v48 = v70;
    (*(void (**)(os_unfair_lock_t, char *, uint64_t))(v32 + 32))(v70, v9, v4);
    v49 = (uint64_t *)&v2[*(_QWORD *)(*(_QWORD *)v2 + 176)];
    swift_beginAccess();
    v50 = *v49;
    sub_1A93F78E4();
    v51 = sub_1A93F78CC();
    v52 = v80;
    if ((v51 & 1) != 0)
      goto LABEL_29;
    sub_1A93F78E4();
    v53 = sub_1A93F78CC();
    v54 = sub_1A93F78E4();
    if ((v53 & 1) != 0)
    {
LABEL_28:
      *v49 = v54;
LABEL_29:
      swift_endAccess();
      os_unfair_lock_unlock(v25);
      v82 = v2;
      MEMORY[0x1AF414014](&unk_1A941DA30, v52);
      sub_1A93F7CD4();
      (*(void (**)(os_unfair_lock_t, uint64_t))(v32 + 8))(v48, v4);
      return;
    }
    v55 = v78;
    if ((sub_1A93F78CC() & 1) != 0)
    {
LABEL_19:
      v54 = sub_1A93F78E4();
      goto LABEL_28;
    }
    if (((v50 | v55) & 0x8000000000000000) == 0)
    {
      v54 = v50 + v55;
      if (!__OFADD__(v50, v55))
      {
        if ((v54 & 0x8000000000000000) == 0)
          goto LABEL_28;
        goto LABEL_35;
      }
      goto LABEL_19;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v70 = v25;
  v34 = v77;
  (*(void (**)(void))(v81 + 32))();
  v35 = v27;
  v36 = v26[15];
  sub_1A93F78A8();
  v37 = *(_QWORD *)v2;
  v38 = v66;
  if (v2[*(_QWORD *)(*(_QWORD *)v2 + 152)] != 1)
  {
LABEL_12:
    v45 = v35;
    v46 = v70;
    os_unfair_lock_lock(v70);
    v82 = 0;
    v83 = 0;
    v84 = 0;
    v85 = xmmword_1A9411140;
    swift_beginAccess();
    sub_1A905DBB4((uint64_t)&v82, v24);
    swift_endAccess();
    os_unfair_lock_unlock(v46);
    v47 = v72;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v72, 1, 1, v38);
    sub_1A93F7890();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v47, v74);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v34, v45);
    return;
  }
  v65[1] = v36;
  v39 = &v2[*(_QWORD *)(v37 + 160)];
  swift_beginAccess();
  v40 = v75;
  v41 = v69;
  v42 = v39;
  v43 = v76;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v69, v42, v76);
  v44 = v67;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v41, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v43);
    v35 = v79;
    v34 = v77;
    goto LABEL_12;
  }
  v56 = v68;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v68, v41, v4);
  os_unfair_lock_lock(v70);
  v57 = (uint64_t *)&v2[*(_QWORD *)(*(_QWORD *)v2 + 176)];
  swift_beginAccess();
  v58 = *v57;
  sub_1A93F78E4();
  v59 = sub_1A93F78CC();
  v60 = v81;
  v61 = v77;
  if ((v59 & 1) != 0)
  {
LABEL_32:
    swift_endAccess();
    os_unfair_lock_unlock(v70);
    v82 = v2;
    MEMORY[0x1AF414014](&unk_1A941DA30, v80);
    sub_1A93F7CD4();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v56, v4);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v79);
    return;
  }
  sub_1A93F78E4();
  v62 = sub_1A93F78CC();
  v63 = sub_1A93F78E4();
  if ((v62 & 1) != 0)
  {
LABEL_31:
    *v57 = v63;
    goto LABEL_32;
  }
  v64 = v78;
  if ((sub_1A93F78CC() & 1) != 0)
    goto LABEL_26;
  if ((v58 | v64) < 0)
    goto LABEL_34;
  v63 = v58 + v64;
  if (__OFADD__(v58, v64))
  {
LABEL_26:
    v63 = sub_1A93F78E4();
    goto LABEL_31;
  }
  if ((v63 & 0x8000000000000000) == 0)
    goto LABEL_31;
LABEL_36:
  __break(1u);
}

uint64_t sub_1A905E4E4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SubscriptionStatus(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for SubscriptionStatus(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v3;
    *(_QWORD *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t sub_1A905E57C()
{
  sub_1A905E59C();
  return swift_deallocClassInstance();
}

uint64_t *sub_1A905E59C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;

  v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 96) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 136));
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 160);
  v3 = sub_1A93F8A90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_1A905E684((uint64_t)v0 + *(_QWORD *)(*v0 + 168));
  v4 = (uint64_t)v0 + *(_QWORD *)(*v0 + 184);
  v5 = *(_QWORD *)(v1 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v4, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 192), v5);
  return v0;
}

uint64_t sub_1A905E684(uint64_t a1)
{
  destroy for SubscriptionStatus(a1);
  return a1;
}

uint64_t destroy for SubscriptionStatus(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
    return __swift_destroy_boxed_opaque_existential_0(a1);
  return a1;
}

uint64_t sub_1A905E6D0(uint64_t a1)
{
  return sub_1A9063198(a1);
}

void sub_1A905E6F0()
{
  InMemoryAssetCache.asset(at:)();
}

uint64_t sub_1A905E710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return DiskAssetCache<>.asset(at:)(a1, *(_QWORD *)(a2 - 8), a3);
}

uint64_t DiskAssetCache<>.asset(at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void (*v29)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v47[4];
  _BYTE *v48;
  _BYTE *v49;
  _BYTE *v50;
  _BYTE *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v55 = a3;
  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 88);
  v56 = sub_1A93F8A90();
  v52 = *(_QWORD *)(v56 - 8);
  v8 = MEMORY[0x1E0C80A78](v56);
  v49 = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x1E0C80A78](v8);
  v11 = *(_QWORD *)(v6 + 80);
  v57 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v51 = &v47[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x1E0C80A78](v12);
  v15 = MEMORY[0x1E0C80A78](v14);
  v48 = &v47[-v16];
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  MEMORY[0x1E0C80A78](v15);
  v18 = &v47[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v60 = sub_1A93F726C();
  v58 = *(_QWORD *)(v60 - 8);
  v19 = MEMORY[0x1E0C80A78](v60);
  v50 = &v47[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v19);
  v22 = &v47[-v21];
  FileBasedAssetLocation.fileURL(in:)(v11, a2, (uint64_t)&v47[-v21]);
  v23 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v59 = v22;
  sub_1A93F7224();
  v24 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v23, sel_contentsAtPath_, v24);

  if (!v25)
  {
    v48 = (_BYTE *)a2;
    InMemoryAssetCache.asset(at:)();
  }
  v26 = sub_1A93F72B4();
  v28 = v27;

  v29 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(a2 + 40);
  v56 = v26;
  v29(v26, v28, v11, a2);
  v30 = a2;
  v31 = v57;
  if (qword_1ED2AD108 != -1)
    swift_once();
  v32 = sub_1A93F7698();
  __swift_project_value_buffer(v32, (uint64_t)qword_1ED2AD0F0);
  v33 = v48;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v31 + 16))(v48, a1, v11);
  v34 = sub_1A93F7674();
  v35 = sub_1A93F8790();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc();
    v51 = v18;
    v37 = v33;
    v38 = (uint8_t *)v36;
    v39 = swift_slowAlloc();
    v62 = v39;
    *(_DWORD *)v38 = 136315138;
    v52 = v28;
    v40 = (*(uint64_t (**)(uint64_t))(v30 + 16))(v11);
    v61 = sub_1A906436C(v40, v41, &v62);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    v42 = v37;
    v18 = v51;
    (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v42, v11);
    _os_log_impl(&dword_1A904E000, v34, v35, "Cache hit for asset at %s", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v39, -1, -1);
    MEMORY[0x1AF41411C](v38, -1, -1);
    sub_1A905F180(v56, v52);

  }
  else
  {
    sub_1A905F180(v56, v28);

    (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v33, v11);
  }
  (*(void (**)(_BYTE *, uint64_t))(v58 + 8))(v59, v60);
  v44 = v53;
  v43 = v54;
  v45 = v55;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v53 + 32))(v55, v18, v54);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v43);
}

uint64_t sub_1A905F180(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void sub_1A905F1C4()
{
  InMemoryAssetCache.store(asset:at:)();
}

void InMemoryAssetCache.store(asset:at:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1A93F738C();
  v1 = MEMORY[0x1E0C80A78](v0);
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for InMemoryAssetCache.Record();
}

void sub_1A905F29C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v5, v6, v2);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v4);
  sub_1A93F7374();
  swift_allocObject();
  v10 = sub_1A9067250(v5, v9, v3);
  *(_QWORD *)(v8 - 160) = *(_QWORD *)(v8 - 192);
  *(_QWORD *)(v8 - 152) = v10;
  *(_QWORD *)(v8 - 144) = *(_QWORD *)(v8 - 184);
  *(_QWORD *)(v8 - 120) = v1;
  *(_QWORD *)(v8 - 112) = v2;
  *(_QWORD *)(v8 - 104) = *(_QWORD *)(v8 - 200);
  *(_QWORD *)(v8 - 96) = v4;
  *(_QWORD *)(v8 - 88) = v7;
  type metadata accessor for InMemoryAssetCache.SizedStore();
}

uint64_t sub_1A905F330()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A905F5EC((void (*)(uint64_t))sub_1A907AC68, v1 - 176, v0);
  return swift_release();
}

void InMemoryAssetCache.asset(at:)()
{
  type metadata accessor for InMemoryAssetCache.SizedStore();
}

void sub_1A905F3D0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A93F8A90();
  sub_1A905F5EC((void (*)(uint64_t))sub_1A907A69C, (uint64_t)&v1, v0);
}

void type metadata accessor for InMemoryAssetCache.SizedStore()
{
  JUMPOUT(0x1AF413F6CLL);
}

uint64_t sub_1A905F424@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = UniquePipeline.publisher.getter(a1);
  *a2 = result;
  return result;
}

uint64_t UniquePipeline.publisher.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;

  v2 = v1;
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = &v12[-v8];
  (*(void (**)(uint64_t, uint64_t))(v4 + 48))(v5, v4);
  v10 = *(_QWORD *)(v1 + *(int *)(a1 + 48));
  v13 = v5;
  v14 = v4;
  v15 = *(_QWORD *)(a1 + 32);
  v16 = v2;
  v17 = v9;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  sub_1A93F78FC();
  sub_1A93F7F5C();
  sub_1A905F5EC((void (*)(uint64_t))sub_1A9079938, (uint64_t)v12, v10);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  return v18;
}

void sub_1A905F5EC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;

  v4 = a3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)a3 + 16);
  v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  a1(v4);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1A905F678@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = SubscribeOnAssetProcessingStep.publisher.getter(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1A905F69C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = ReceiveOnAssetProcessingStep.publisher.getter(a1);
  *a2 = result;
  return result;
}

uint64_t ReceiveOnAssetProcessingStep.publisher.getter(uint64_t a1)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *AssociatedTypeWitness;
  uint64_t v9;
  char *v10;
  void *v11;
  void *AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43[5];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v34 = a1;
  AssociatedTypeWitness = (_QWORD *)swift_getAssociatedTypeWitness();
  v39 = *(AssociatedTypeWitness - 1);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v34 - v9;
  v11 = (void *)sub_1A9066C6C();
  v37 = v11;
  AssociatedConformanceWitness = (void *)swift_getAssociatedConformanceWitness();
  v36 = AssociatedConformanceWitness;
  v35 = (void *)sub_1A905FD90();
  v43[0] = AssociatedTypeWitness;
  v43[1] = v11;
  v43[2] = AssociatedConformanceWitness;
  v43[3] = v35;
  v13 = sub_1A93F7884();
  v42 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v34 - v14;
  v16 = MEMORY[0x1AF414014](MEMORY[0x1E0C95CB8], v13);
  v18 = type metadata accessor for EmitLifecycle(0, v13, v16, v17);
  v19 = *(_QWORD *)(v18 - 8);
  v40 = v18;
  v41 = v19;
  MEMORY[0x1E0C80A78](v18);
  v38 = (uint64_t)&v34 - v20;
  (*(void (**)(uint64_t, uint64_t))(v6 + 48))(v7, v6);
  v21 = *v1;
  v43[0] = v21;
  v22 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v5, 1, 1, v22);
  v23 = v21;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v5, &qword_1ED2A1C88);

  (*(void (**)(char *, _QWORD *))(v39 + 8))(v10, AssociatedTypeWitness);
  v24 = v34;
  v25 = MEMORY[0x1AF414014](&protocol conformance descriptor for ReceiveOnAssetProcessingStep<A>, v34);
  AssetProcessingStep.metadataTrace.getter(v24, v25, (uint64_t)v43);
  v26 = sub_1A93F8898();
  v28 = v27;
  v29 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
  v30 = v38;
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)((uint64_t)v43, (uint64_t)"QueueHop", 8, 2, 0, v26, v28, v29 & 1, v38, v13, v16);
  swift_bridgeObjectRelease();
  sub_1A905FD54((uint64_t)v43, &qword_1ED2AD0C0);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v13);
  v31 = v40;
  MEMORY[0x1AF414014](&protocol conformance descriptor for EmitLifecycle<A>, v40);
  v32 = sub_1A93F7B24();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v30, v31);
  return v32;
}

uint64_t sub_1A905F9F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = FallbackProcessingStep.publisher.getter(a1);
  *a2 = result;
  return result;
}

uint64_t SubscribeOnAssetProcessingStep.publisher.getter(uint64_t a1)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *AssociatedTypeWitness;
  uint64_t v9;
  char *v10;
  void *v11;
  void *AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43[5];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v34 = a1;
  AssociatedTypeWitness = (_QWORD *)swift_getAssociatedTypeWitness();
  v39 = *(AssociatedTypeWitness - 1);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v34 - v9;
  v11 = (void *)sub_1A9066C6C();
  v37 = v11;
  AssociatedConformanceWitness = (void *)swift_getAssociatedConformanceWitness();
  v36 = AssociatedConformanceWitness;
  v35 = (void *)sub_1A905FD90();
  v43[0] = AssociatedTypeWitness;
  v43[1] = v11;
  v43[2] = AssociatedConformanceWitness;
  v43[3] = v35;
  v13 = sub_1A93F7758();
  v42 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v34 - v14;
  v16 = MEMORY[0x1AF414014](MEMORY[0x1E0C957A0], v13);
  v18 = type metadata accessor for EmitLifecycle(0, v13, v16, v17);
  v19 = *(_QWORD *)(v18 - 8);
  v40 = v18;
  v41 = v19;
  MEMORY[0x1E0C80A78](v18);
  v38 = (uint64_t)&v34 - v20;
  (*(void (**)(uint64_t, uint64_t))(v6 + 48))(v7, v6);
  v21 = *v1;
  v43[0] = v21;
  v22 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v5, 1, 1, v22);
  v23 = v21;
  sub_1A93F7CBC();
  sub_1A905FD54((uint64_t)v5, &qword_1ED2A1C88);

  (*(void (**)(char *, _QWORD *))(v39 + 8))(v10, AssociatedTypeWitness);
  v24 = v34;
  v25 = MEMORY[0x1AF414014](&protocol conformance descriptor for SubscribeOnAssetProcessingStep<A>, v34);
  AssetProcessingStep.metadataTrace.getter(v24, v25, (uint64_t)v43);
  v26 = sub_1A93F8898();
  v28 = v27;
  v29 = static EmitLifecycle.defaultVerbosity.getter();
  v30 = v38;
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)((uint64_t)v43, (uint64_t)"SubscribeOnHop", 14, 2, 0, v26, v28, v29 & 1, v38, v13, v16);
  swift_bridgeObjectRelease();
  sub_1A905FD54((uint64_t)v43, &qword_1ED2AD0C0);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v13);
  v31 = v40;
  MEMORY[0x1AF414014](&protocol conformance descriptor for EmitLifecycle<A>, v40);
  v32 = sub_1A93F7B24();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v30, v31);
  return v32;
}

uint64_t sub_1A905FD54(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1A905FD90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2A1C90;
  if (!qword_1ED2A1C90)
  {
    v1 = sub_1A9072534(255, (unint64_t *)&qword_1ED2AD6C0);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEF7F8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2A1C90);
  }
  return result;
}

void AssetProcessingStep.fallback<A>(source:rethrow:)()
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  type metadata accessor for AssetSourceStep();
}

void sub_1A905FEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;

  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&a9 - v14;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v10, v9);
  AssetMetadata.fetch<A>(source:)(*(_QWORD *)(v13 - 136), v12, *(_QWORD *)(v13 - 168), v11, *(_QWORD *)(v13 - 160), (uint64_t)v15);
}

void sub_1A905FF10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 152) + 8))(v2, v4);
  v6 = MEMORY[0x1AF414014](&protocol conformance descriptor for AssetSourceStep<A, B>, v3);
  AssetProcessingStep.fallback<A>(to:rethrow:)(v0, v1, v3, v6, *(_QWORD *)(v5 - 128));
}

uint64_t sub_1A905FF58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

void AssetProcessingStep.fallback<A>(to:rethrow:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v17[2];

  v17[1] = a4;
  v10 = *(_QWORD *)(a3 - 8);
  v11 = MEMORY[0x1E0C80A78](a1);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v16 + 16))(v15, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, a3);
  FallbackProcessingStep.init(upstream:fallback:rethrow:)((uint64_t)v15, a2, a5);
}

void FallbackProcessingStep.init(upstream:fallback:rethrow:)(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for FallbackProcessingStep();
}

uint64_t sub_1A90600E8(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v4 + *(int *)(a1 + 52), v3, v1);
  *(_BYTE *)(v4 + *(int *)(a1 + 56)) = v2;
  return result;
}

void type metadata accessor for FallbackProcessingStep()
{
  JUMPOUT(0x1AF413F6CLL);
}

double sub_1A9060138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = sub_1A93F76D4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9062170(a1 + 40, (uint64_t)&v25, qword_1ED2A6060);
  if (!v26)
  {
    sub_1A905FD54((uint64_t)&v25, qword_1ED2A6060);
    v11 = (_QWORD *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 128));
    v12 = v11[4];
    v24 = v11[3];
    v13 = __swift_project_boxed_opaque_existential_1(v11, v24);
    v14 = (uint64_t *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 136));
    v22 = *v14;
    v23 = v13;
    v21 = v14[1];
    v20 = *((unsigned __int8 *)v14 + 16);
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_1A93F8C70();
    v15 = (uint64_t *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 144));
    v17 = *v15;
    v16 = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v27 = v17;
    v28 = v16;
    sub_1A93F810C();
    sub_1A906335C((uint64_t)v7);
    v18 = sub_1A93F76BC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_QWORD *)&v25 = v18;
    sub_1A93F9060();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    sub_1A93F810C();
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v12 + 16))(v22, v21, v20, v27, v28, v24, v12);
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(a1 + 24))
      goto LABEL_4;
    goto LABEL_3;
  }
  sub_1A905D4AC(&v25, (uint64_t)&v27);
  v8 = v29;
  v9 = v30;
  __swift_project_boxed_opaque_existential_1(&v27, v29);
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v9 + 8))(0x4C45434E4143, 0xE600000000000000, v8, v9);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v27);
  if (*(_QWORD *)(a1 + 24))
  {
LABEL_3:
    sub_1A905DC3C(a1, (uint64_t)&v27);
    __swift_project_boxed_opaque_existential_1(&v27, v29);
    sub_1A93F78B4();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v27);
  }
LABEL_4:
  sub_1A905FD54(a1, &qword_1ED2A90E8);
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 32) = 0;
  sub_1A905FD54(a1 + 40, qword_1ED2A6060);
  result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_QWORD *)(a1 + 72) = 0;
  return result;
}

uint64_t FallbackProcessingStep.publisher.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v65 = *(_QWORD *)(a1 - 8);
  v67 = *(_QWORD *)(v65 + 64);
  v2 = MEMORY[0x1E0C80A78](a1);
  v4 = *(_QWORD *)(v2 + 24);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = *(_QWORD *)(v62 + 64);
  v5 = MEMORY[0x1E0C80A78](v2);
  v61 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v5 + 32);
  v68 = *(_QWORD *)(v5 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v60 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v49 - v9;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v69 = type metadata accessor for EmitLifecycle(0, AssociatedTypeWitness, AssociatedConformanceWitness, v12);
  v66 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v70 = (uint64_t)&v49 - v13;
  v59 = *(_QWORD *)(a1 + 40);
  v52 = v4;
  v14 = swift_getAssociatedTypeWitness();
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v16 = swift_getAssociatedConformanceWitness();
  v71 = v14;
  v72 = v15;
  v73 = v16;
  v74 = MEMORY[0x1E0DEDB38];
  v17 = sub_1A93F7854();
  v18 = MEMORY[0x1AF414014](MEMORY[0x1E0C95BC8], v17);
  v20 = type metadata accessor for EmitLifecycle(255, v17, v18, v19);
  v55 = v20;
  v21 = v69;
  v22 = MEMORY[0x1AF414014](&protocol conformance descriptor for EmitLifecycle<A>, v69);
  v54 = v22;
  v53 = MEMORY[0x1AF414014](&protocol conformance descriptor for EmitLifecycle<A>, v20);
  v71 = v21;
  v72 = v20;
  v73 = v22;
  v74 = v53;
  v56 = sub_1A93F77F4();
  v58 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v51 = (char *)&v49 - v23;
  v50 = v7;
  v24 = v57;
  (*(void (**)(uint64_t, uint64_t))(v7 + 48))(v68, v7);
  v25 = MEMORY[0x1AF414014](&protocol conformance descriptor for FallbackProcessingStep<A, B>, a1);
  v26 = v24;
  AssetProcessingStep.metadataTrace.getter(a1, v25, (uint64_t)&v71);
  v27 = sub_1A93F9474();
  v29 = v28;
  v30 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)((uint64_t)&v71, (uint64_t)"FallbackPreferredSource", 23, 2, 0, v27, v29, v30 & 1, v70, AssociatedTypeWitness, AssociatedConformanceWitness);
  swift_bridgeObjectRelease();
  sub_1A9060D8C((uint64_t)&v71);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v10, AssociatedTypeWitness);
  v31 = *(int *)(a1 + 52);
  LODWORD(v60) = *(unsigned __int8 *)(v26 + *(int *)(a1 + 56));
  v33 = v61;
  v32 = v62;
  v34 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, v26 + v31, v52);
  v35 = v65;
  v36 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v63, v26, a1);
  v37 = (*(unsigned __int8 *)(v32 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v38 = v37 + v64;
  v39 = v35;
  v40 = (*(unsigned __int8 *)(v35 + 80) + v37 + v64 + 1) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v41 = (char *)swift_allocObject();
  *((_QWORD *)v41 + 2) = v68;
  *((_QWORD *)v41 + 3) = v34;
  v42 = v59;
  *((_QWORD *)v41 + 4) = v50;
  *((_QWORD *)v41 + 5) = v42;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v41[v37], v33, v34);
  v41[v38] = v60;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v41[v40], v36, a1);
  v43 = v51;
  v44 = v69;
  v45 = v70;
  sub_1A93F7BB4();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v45, v44);
  v46 = v56;
  MEMORY[0x1AF414014](MEMORY[0x1E0C959F8], v56);
  v47 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v43, v46);
  return v47;
}

uint64_t sub_1A90608B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v4 + 24) >= 0xFFFFFFFFuLL)
    __swift_destroy_boxed_opaque_existential_0(v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9060914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = (v5 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v9, AssociatedTypeWitness);
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))((v9 + *(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80), v6);
}

void CacheAssetProcessingStep.publisher.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  _QWORD v9[14];

  v9[6] = a2;
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) - 8);
  v9[0] = *(_QWORD *)(a1 + 32);
  v4 = v9[0];
  v9[4] = v3;
  MEMORY[0x1E0C80A78](a1);
  v9[3] = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[1] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v8 = *(_QWORD *)(a1 + 64);
  v9[9] = AssociatedTypeWitness;
  v9[10] = v4;
  v9[11] = AssociatedConformanceWitness;
  v9[12] = v8;
  type metadata accessor for Publishers.CachedAssetPublisher();
}

void sub_1A9060AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;

  *(_QWORD *)(v15 - 176) = a1;
  *(_QWORD *)(v15 - 152) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&a9 - v16;
  (*(void (**)(uint64_t, uint64_t))(v9 + 48))(v10, v9);
  Publisher.cache<A>(location:cache:overwrite:alwaysAttemptRefresh:)(v12 + v13[20], v12 + v13[19], *(unsigned __int8 *)(v12 + v13[21]), 0, v14, *(_QWORD *)(v15 - 192), v11, (uint64_t)v17);
}

uint64_t sub_1A9060B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 184) + 8))(v5, v4);
  v7 = MEMORY[0x1AF414014](&protocol conformance descriptor for CacheAssetProcessingStep<A, B, C>, v3);
  v8 = AssetProcessingStep.metadataTrace.getter(v3, v7, v6 - 120);
  (*(void (**)(_QWORD, uint64_t, uint64_t, double))(*(_QWORD *)(v6 - 160) + 16))(*(_QWORD *)(v6 - 168), v0, v1, v8);
  *(_QWORD *)(v6 - 136) = sub_1A93F8094();
  *(_QWORD *)(v6 - 128) = v9;
  sub_1A93F810C();
  v10 = *(_QWORD *)(v6 - 136);
  v11 = *(_QWORD *)(v6 - 128);
  v12 = *(_QWORD *)(v6 - 176);
  v13 = MEMORY[0x1AF414014](&protocol conformance descriptor for Publishers.CachedAssetPublisher<A, B>, v12);
  v14 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)(v6 - 120, (uint64_t)"Cache", 5, 2, 0, v10, v11, v14 & 1, *(_QWORD *)(v6 - 144), v12, v13);
  swift_bridgeObjectRelease();
  sub_1A9060D8C(v6 - 120);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 152) + 8))(v2, v12);
}

uint64_t static EmitLifecycle.defaultVerbosity.getter()
{
  return 0;
}

double AssetProcessingStep.metadataTrace.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  double result;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8650);
  if (swift_dynamicCast())
  {
    v7 = *((_QWORD *)&v11 + 1);
    v8 = v12;
    __swift_project_boxed_opaque_existential_1(&v10, *((uint64_t *)&v11 + 1));
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v10);
  }
  else
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    sub_1A90613A0((uint64_t)&v10);
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t CacheAssetProcessingStep.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 80));
}

uint64_t sub_1A9060D8C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD0C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AssetSourceStep.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

void Publisher.cache<A>(location:cache:overwrite:alwaysAttemptRefresh:)(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;

  v23 = a2;
  v27 = a7;
  v25 = a3;
  v26 = a4;
  v24 = a8;
  v11 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v18 = (char *)v22 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 16))(v20, v22[1], a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v23, a6);
  Publishers.CachedAssetPublisher.init(upstream:location:cache:overwrite:alwaysAttemptRefresh:)((uint64_t)v20, a5, v24);
}

void Publishers.CachedAssetPublisher.init(upstream:location:cache:overwrite:alwaysAttemptRefresh:)(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for Publishers.CachedAssetPublisher();
}

uint64_t sub_1A9060FC4(int *a1)
{
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t result;

  v8 = v6 + a1[13];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v8, v5, AssociatedTypeWitness);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v6 + a1[14], v4, v2);
  *(_BYTE *)(v6 + a1[15]) = v3;
  *(_BYTE *)(v6 + a1[16]) = v1;
  return result;
}

void type metadata accessor for Publishers.CachedAssetPublisher()
{
  JUMPOUT(0x1AF413F6CLL);
}

void AssetMetadata.fetch<A>(source:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v21 = a5;
  v12 = *(_QWORD *)(a3 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v13);
  v19 = (char *)&v20 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v6, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, a3);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a6, v19, a2);
  v22 = a2;
  v23 = a3;
  v24 = a4;
  v25 = v21;
  type metadata accessor for AssetSourceStep();
}

uint64_t sub_1A9061144(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2 + *(int *)(a1 + 52), v3, v1);
}

void **sub_1A906117C(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v11 = v4;
  v10(v8, v9, v5);
  return a1;
}

uint64_t sub_1A90611EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v12 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_1A906126C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for AnyEpisodeBookmarkStateRule(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void sub_1A9061308(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for AssetSourceStep();
}

uint64_t sub_1A9061360(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void type metadata accessor for AssetSourceStep()
{
  JUMPOUT(0x1AF413F6CLL);
}

uint64_t sub_1A90613A0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A46E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ReceiveOnAssetProcessingStep.metadata.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 40))(*(_QWORD *)(a1 + 16));
}

uint64_t FallbackProcessingStep.metadata.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 32) + 40))(*(_QWORD *)(a1 + 16));
}

void Publishers.CachedAssetPublisher.receive<A>(subscriber:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[7];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v16[4] = a1;
  v6 = a2[3];
  v16[6] = *(_QWORD *)(v6 - 8);
  v17 = a4;
  MEMORY[0x1E0C80A78](a1);
  v16[5] = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 40);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16[1] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16[2] = AssociatedTypeWitness;
  v11 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v16[0] = (char *)v16 - v12;
  v13 = a2[2];
  v14 = MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v14);
  v15 = a2[4];
  v18 = v13;
  v19 = v6;
  v20 = a3;
  v21 = v15;
  v16[3] = a3;
  v22 = v9;
  v23 = v17;
  _s20CachedAssetPublisherV5InnerCMa();
}

uint64_t sub_1A9061560(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  char *v16;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v1, *(_QWORD *)(v10 - 160), v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v4, v2);
  v12 = *(_QWORD *)(v10 - 192);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v10 - 184) + 16))(v12, v4 + v5[13], *(_QWORD *)(v10 - 176));
  v13 = *(_QWORD *)(v10 - 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 144) + 16))(v13, v4 + v5[14], v6);
  v14 = *(unsigned __int8 *)(v4 + v5[15]);
  v15 = *(unsigned __int8 *)(v4 + v5[16]);
  swift_allocObject();
  v16 = sub_1A9062F9C(v1, v8, v12, v13, v14, v15);
  *(_QWORD *)(v10 - 104) = a1;
  *(_QWORD *)(v10 - 96) = MEMORY[0x1AF414014](&unk_1A941DA88, a1);
  *(_QWORD *)(v10 - 128) = v16;
  sub_1A93F789C();
  return __swift_destroy_boxed_opaque_existential_0(v10 - 128);
}

void sub_1A9061664(uint64_t a1)
{
  sub_1A9061684(a1);
}

void sub_1A9061684(uint64_t a1)
{
  uint64_t *v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(os_unfair_lock_s **)((char *)v1 + *(_QWORD *)(*v1 + 168));
  v4 = (uint64_t)&v3[4];
  v5 = v3 + 24;
  os_unfair_lock_lock(v3 + 24);
  sub_1A9061768(v4, v1, a1);
  os_unfair_lock_unlock(v5);
  type metadata accessor for EmitLifecycle.LifecycleEmitting();
}

uint64_t sub_1A9061710(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[14];

  v3[3] = a1;
  v3[4] = MEMORY[0x1AF414014](&protocol conformance descriptor for EmitLifecycle<A>.LifecycleEmitting<A1>, a1);
  v3[0] = v1;
  swift_retain();
  sub_1A93F789C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
}

uint64_t sub_1A9061768(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  unsigned int v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v7 = sub_1A93F76D4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a2;
  if (*((_BYTE *)a2 + *(_QWORD *)(*a2 + 152)) == 1)
  {
    v12 = (uint64_t *)((char *)a2 + *(_QWORD *)(v11 + 128));
    v13 = v12[4];
    v34 = v12[3];
    v33 = __swift_project_boxed_opaque_existential_1(v12, v34);
    v14 = (uint64_t *)((char *)a2 + *(_QWORD *)(*a2 + 136));
    v37 = a3;
    v16 = *v14;
    v15 = v14[1];
    v35 = v3;
    v17 = *((unsigned __int8 *)v14 + 16);
    v38 = sub_1A93F8CA0();
    v39 = v18;
    v36 = a1;
    sub_1A93F810C();
    sub_1A906335C((uint64_t)v10);
    v19 = sub_1A93F76BC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v40 = v19;
    sub_1A93F9060();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    sub_1A93F810C();
    v20 = v15;
    a3 = v37;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v13 + 24))(&v38, v16, v20, v17, v38, v39, v34, v13);
    a1 = v36;
    swift_bridgeObjectRelease();
    sub_1A90667B8((uint64_t)&v38, a1 + 40);
  }
  else if (*((_BYTE *)a2 + *(_QWORD *)(v11 + 160)) == 1)
  {
    v21 = (uint64_t *)((char *)a2 + *(_QWORD *)(v11 + 128));
    v22 = v21[3];
    v23 = v21[4];
    v24 = __swift_project_boxed_opaque_existential_1(v21, v22);
    v25 = (uint64_t)a2 + *(_QWORD *)(*a2 + 136);
    v34 = *(_QWORD *)v25;
    v35 = v24;
    v33 = *(_QWORD **)(v25 + 8);
    v32 = *(unsigned __int8 *)(v25 + 16);
    v38 = 0;
    v39 = 0xE000000000000000;
    v36 = a1;
    sub_1A93F8C70();
    v26 = (uint64_t *)((char *)a2 + *(_QWORD *)(*a2 + 144));
    v37 = a3;
    v28 = *v26;
    v27 = v26[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v38 = v28;
    v39 = v27;
    sub_1A93F810C();
    sub_1A906335C((uint64_t)v10);
    v29 = sub_1A93F76BC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v40 = v29;
    sub_1A93F9060();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    sub_1A93F810C();
    (*(void (**)(uint64_t, _QWORD *, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v23 + 16))(v34, v33, v32, v38, v39, v22, v23);
    a1 = v36;
    a3 = v37;
    swift_bridgeObjectRelease();
  }
  sub_1A905FD54(a1, &qword_1ED2A90E8);
  return sub_1A905DC3C(a3, a1);
}

double sub_1A9061A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v6 = sub_1A93F76D4();
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  MEMORY[0x1E0C80A78](v6);
  v45 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v9 = sub_1A93F78C0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v41 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v41 - v11, a2, v9);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v12, 1, AssociatedTypeWitness);
  v48 = a1;
  v14 = a1 + 40;
  if (v13 == 1)
  {
    sub_1A9062170(a1 + 40, (uint64_t)&v49, qword_1ED2A6060);
    if (v50)
    {
      sub_1A905D4AC(&v49, (uint64_t)&v51);
      v15 = v53;
      v16 = v54;
      __swift_project_boxed_opaque_existential_1(&v51, v53);
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v16 + 8))(0x53534543435553, 0xE700000000000000, v15, v16);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v51);
    }
    else
    {
      sub_1A905FD54((uint64_t)&v49, qword_1ED2A6060);
      v19 = (_QWORD *)(a3 + *(_QWORD *)(*(_QWORD *)a3 + 128));
      v20 = v19[3];
      v21 = v19[4];
      __swift_project_boxed_opaque_existential_1(v19, v20);
      v22 = *(_QWORD *)(*(_QWORD *)a3 + 144);
      v23 = (uint64_t *)(a3 + *(_QWORD *)(*(_QWORD *)a3 + 136));
      v24 = *v23;
      v43 = v23[1];
      LODWORD(v44) = *((unsigned __int8 *)v23 + 16);
      v25 = (uint64_t *)(a3 + v22);
      v26 = v25[1];
      v51 = *v25;
      v52 = v26;
      swift_bridgeObjectRetain();
      sub_1A93F810C();
      v27 = v45;
      sub_1A906335C(v45);
      v28 = sub_1A93F76BC();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v27, v47);
      *(_QWORD *)&v49 = v28;
      sub_1A93F9060();
      sub_1A93F810C();
      swift_bridgeObjectRelease();
      sub_1A93F810C();
      (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 16))(v24, v43, v44, v51, v52, v20, v21);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1A9062170(a1 + 40, (uint64_t)&v49, qword_1ED2A6060);
    if (v50)
    {
      sub_1A905D4AC(&v49, (uint64_t)&v51);
      v17 = v53;
      v18 = v54;
      __swift_project_boxed_opaque_existential_1(&v51, v53);
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v18 + 8))(0x4552554C494146, 0xE700000000000000, v17, v18);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v51);
    }
    else
    {
      sub_1A905FD54((uint64_t)&v49, qword_1ED2A6060);
      v29 = (_QWORD *)(a3 + *(_QWORD *)(*(_QWORD *)a3 + 128));
      v30 = v29[3];
      v31 = v29[4];
      v44 = __swift_project_boxed_opaque_existential_1(v29, v30);
      v32 = *(_QWORD *)(*(_QWORD *)a3 + 144);
      v33 = (uint64_t *)(a3 + *(_QWORD *)(*(_QWORD *)a3 + 136));
      v34 = v33[1];
      v41 = *v33;
      v42 = v34;
      LODWORD(v43) = *((unsigned __int8 *)v33 + 16);
      v35 = (uint64_t *)(a3 + v32);
      v36 = v35[1];
      v51 = *v35;
      v52 = v36;
      swift_bridgeObjectRetain();
      sub_1A93F810C();
      v37 = v45;
      sub_1A906335C(v45);
      v38 = sub_1A93F76BC();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v37, v47);
      *(_QWORD *)&v49 = v38;
      sub_1A93F9060();
      sub_1A93F810C();
      swift_bridgeObjectRelease();
      sub_1A93F810C();
      (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 16))(v41, v42, v43, v51, v52, v30, v31);
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_1A905FD54(v14, qword_1ED2A6060);
  *(_OWORD *)v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  *(_QWORD *)(v14 + 32) = 0;
  v39 = v48;
  sub_1A905FD54(v48, &qword_1ED2A90E8);
  result = 0.0;
  *(_OWORD *)v39 = 0u;
  *(_OWORD *)(v39 + 16) = 0u;
  *(_QWORD *)(v39 + 32) = 0;
  return result;
}

uint64_t EmitLifecycle.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[40];

  sub_1A9062170(v4 + *(int *)(a2 + 36), (uint64_t)&v10, &qword_1ED2AD0C0);
  if (v12)
  {
    sub_1A905D4AC(&v10, (uint64_t)v13);
    v9 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)&v10 = *(_QWORD *)(a2 + 16);
    *((_QWORD *)&v10 + 1) = a3;
    v11 = v9;
    v12 = a4;
    type metadata accessor for EmitLifecycle.LifecycleEmitting();
  }
  sub_1A905FD54((uint64_t)&v10, &qword_1ED2AD0C0);
  return sub_1A93F7B0C();
}

uint64_t Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, unint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  int v24;
  _BYTE v25[40];

  v24 = a8;
  v23 = a6;
  HIDWORD(v22) = a4;
  MEMORY[0x1E0C80A78](a1);
  v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v19, v11, a10);
  sub_1A9062170(a1, (uint64_t)v25, &qword_1ED2AD0C0);
  swift_bridgeObjectRetain();
  return EmitLifecycle.init(upstream:trace:name:verbose:context:definesInterval:)((uint64_t)v19, (uint64_t)v25, a2, a3, SBYTE4(v22), v24, v23, a7, a9, a5, a10, a11);
}

uint64_t sub_1A9062170(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A90621B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 24);
  if (v9 < 0xFFFFFFFF)
  {
    v10 = *(_OWORD *)v8;
    v11 = *(_OWORD *)(v8 + 16);
    *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
    *(_OWORD *)v7 = v10;
    *(_OWORD *)(v7 + 16) = v11;
  }
  else
  {
    *(_QWORD *)(v7 + 24) = v9;
    *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
    (**(void (***)(unint64_t, unint64_t))(v9 - 8))(v7, v8);
  }
  v12 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_OWORD *)v13;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_OWORD *)v12 = v14;
  v15 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  *(_BYTE *)(v15 + 17) = *(_BYTE *)(v16 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A90622A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v7 + v11;
  v13 = (v7 + v11 + a1) & ~v11;
  v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v14, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(v8 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v19, v20, v8);
  v21 = *(_QWORD *)(v16 + 64);
  v22 = (_BYTE *)(v19 + v21);
  v23 = (_BYTE *)(v20 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  return a1;
}

uint64_t EmitLifecycle.init(upstream:trace:name:verbose:context:definesInterval:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  _QWORD *v25;

  v18 = *(_QWORD *)(a11 - 8);
  (*(void (**)(uint64_t))(v18 + 16))(a9);
  v20 = (int *)type metadata accessor for EmitLifecycle(0, a11, a12, v19);
  sub_1A9062170(a2, a9 + v20[9], &qword_1ED2AD0C0);
  v21 = a9 + v20[10];
  *(_QWORD *)v21 = a3;
  *(_QWORD *)(v21 + 8) = a4;
  *(_BYTE *)(v21 + 16) = a5;
  *(_BYTE *)(a9 + v20[12]) = a10;
  if (a8)
  {
    swift_bridgeObjectRetain();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    v22 = a7;
    v23 = a8;
  }
  else
  {
    v22 = 0;
    v23 = 0xE000000000000000;
  }
  sub_1A905FD54(a2, &qword_1ED2AD0C0);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(a1, a11);
  v25 = (_QWORD *)(a9 + v20[11]);
  *v25 = v22;
  v25[1] = v23;
  *(_BYTE *)(a9 + v20[13]) = a6 & 1;
  return result;
}

uint64_t type metadata accessor for EmitLifecycle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EmitLifecycle);
}

uint64_t sub_1A90624DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return EmitLifecycle.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t CombinedTrace.emit(event:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t result;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  result = *v5;
  v8 = *(_QWORD *)(*v5 + 16);
  if (v8)
  {
    v13 = result + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1A905DC3C(v13, (uint64_t)v16);
      v14 = v17;
      v15 = v18;
      __swift_project_boxed_opaque_existential_1(v16, v17);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(a1, a2, a3, a4, a5, v14, v15);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
      v13 += 40;
      --v8;
    }
    while (v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for LoggerTrace(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A93F7698();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((_BYTE *)v4 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t *initializeBufferWithCopyOfBuffer for SignpostTrace(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A93F762C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A93F75FC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t SignpostTrace.emit(event:context:)(const char *a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, unint64_t a5)
{
  NSObject *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  void (*v24)(NSObject *, char *, uint64_t);
  uint64_t v25;
  void (*v26)(NSObject *, char *, uint64_t);
  uint64_t result;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  NSObject *v33;
  os_signpost_id_t v34;
  void (*v35)(NSObject *, uint64_t);
  NSObject *v36;
  uint8_t *v37;
  os_signpost_id_t v38;
  void (*v39)(NSObject *, uint64_t);
  _BYTE v40[12];
  int v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  int v45;
  NSObject *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;

  v47 = (char *)a1;
  v45 = a3;
  v8 = sub_1A93F75FC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = &v40[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x1E0C80A78](v10);
  v46 = &v40[-v14];
  MEMORY[0x1E0C80A78](v13);
  v16 = &v40[-v15];
  v17 = sub_1A93F762C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = &v40[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v19);
  v24 = (void (*)(NSObject *, char *, uint64_t))&v40[-v22];
  if (a5)
  {
    v42 = a4;
    v21 = v23;
    (*(void (**)(_BYTE *, NSObject *, _BYTE *))(v18 + 16))(&v40[-v22], v5, v23);
    v25 = type metadata accessor for SignpostTrace(0);
    v26 = *(void (**)(NSObject *, char *, uint64_t))(v9 + 16);
    v26(v16, (char *)v5 + *(int *)(v25 + 20), v8);
    swift_bridgeObjectRetain_n();
    v12 = sub_1A93F7620();
    v41 = sub_1A93F894C();
    v5 = v12;
    result = sub_1A93F8A6C();
    if ((result & 1) == 0)
    {
LABEL_10:
      swift_bridgeObjectRelease_n();

      (*(void (**)(NSObject *, uint64_t))(v9 + 8))(v16, v8);
      return (*(uint64_t (**)(void (*)(NSObject *, char *, uint64_t), _BYTE *))(v18 + 8))(v24, v21);
    }
    v43 = v9;
    v44 = v21;
    if ((v45 & 1) == 0)
    {
      if (!v47)
      {
        swift_bridgeObjectRelease_n();
        __break(1u);
        goto LABEL_6;
      }
LABEL_17:
      v26(v46, (char *)v16, v8);
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v49 = v32;
      *(_DWORD *)v31 = 136315138;
      swift_bridgeObjectRetain();
      v48 = sub_1A906436C(v42, a5, &v49);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      v33 = v46;
      v34 = sub_1A93F75E4();
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v12, (os_signpost_type_t)v41, v34, v47, "%s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v32, -1, -1);
      MEMORY[0x1AF41411C](v31, -1, -1);

      v35 = *(void (**)(NSObject *, uint64_t))(v43 + 8);
      v35(v16, v8);
      (*(void (**)(void (*)(NSObject *, char *, uint64_t), _BYTE *))(v18 + 8))(v24, v44);
      return ((uint64_t (*)(NSObject *, uint64_t))v35)(v33, v8);
    }
    if ((unint64_t)v47 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v47 >> 11 == 27)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (v47 >> 16 <= 0x10)
      {
        v47 = &v50;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
LABEL_6:
  v28 = v23;
  (*(void (**)(_BYTE *, NSObject *, _BYTE *))(v18 + 16))(v21, v5, v23);
  v29 = type metadata accessor for SignpostTrace(0);
  v24 = *(void (**)(NSObject *, char *, uint64_t))(v9 + 16);
  v24(v12, (char *)v5 + *(int *)(v29 + 20), v8);
  v16 = sub_1A93F7620();
  v30 = v9;
  v9 = sub_1A93F894C();
  result = sub_1A93F8A6C();
  if ((result & 1) == 0)
  {

    (*(void (**)(NSObject *, uint64_t))(v30 + 8))(v12, v8);
    return (*(uint64_t (**)(_BYTE *, _BYTE *))(v18 + 8))(v21, v28);
  }
  v43 = v30;
  v44 = v28;
  if ((v45 & 1) == 0)
  {
    if (!v47)
    {
      __break(1u);
      goto LABEL_10;
    }
    goto LABEL_22;
  }
  if ((unint64_t)v47 >> 32)
    goto LABEL_27;
  if (v47 >> 11 == 27)
  {
LABEL_30:
    __break(1u);
    return result;
  }
  if (v47 >> 16 > 0x10)
    goto LABEL_28;
  v47 = &v51;
LABEL_22:
  v36 = v46;
  v24(v46, (char *)v12, v8);
  v37 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v37 = 0;
  v38 = sub_1A93F75E4();
  _os_signpost_emit_with_name_impl(&dword_1A904E000, v16, (os_signpost_type_t)v9, v38, v47, "", v37, 2u);
  MEMORY[0x1AF41411C](v37, -1, -1);

  v39 = *(void (**)(NSObject *, uint64_t))(v43 + 8);
  v39(v12, v8);
  (*(void (**)(_BYTE *, _BYTE *))(v18 + 8))(v21, v44);
  return ((uint64_t (*)(NSObject *, uint64_t))v39)(v36, v8);
}

uint64_t sub_1A9062BFC(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for SignpostTrace(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1ED2ACD80);
}

void sub_1A9062C44()
{
  type metadata accessor for EmitLifecycle.LifecycleEmitting();
}

uint64_t *sub_1A9062C9C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  swift_allocObject();
  return sub_1A9062D00(v7, v6, v5, v4, v3, v2, v1, v0, v8);
}

void type metadata accessor for EmitLifecycle.LifecycleEmitting()
{
  JUMPOUT(0x1AF413F6CLL);
}

uint64_t *sub_1A9062D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, int a8, unsigned __int8 a9)
{
  uint64_t *v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  _BYTE v29[40];
  uint64_t v30;
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[2];
  uint64_t v34;

  v28 = a8;
  v27 = a7;
  v25 = a6;
  v26 = a9;
  v15 = *v9;
  v16 = sub_1A93F76D4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F76C8();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))((uint64_t)v9 + qword_1ED2B8990, v19, v16);
  v34 = 0;
  memset(v33, 0, sizeof(v33));
  v32 = 0;
  memset(v31, 0, sizeof(v31));
  sub_1A9062F08((uint64_t)v33, (uint64_t)v29, &qword_1ED2A90E8);
  sub_1A9062F08((uint64_t)v31, (uint64_t)&v30, qword_1ED2A6060);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9650);
  v20 = swift_allocObject();
  *(_DWORD *)(v20 + 96) = 0;
  sub_1A9062170((uint64_t)v29, v20 + 16, &qword_1ED2A90E0);
  sub_1A905FD54((uint64_t)v29, &qword_1ED2A90E0);
  *(uint64_t *)((char *)v9 + *(_QWORD *)(*v9 + 168)) = v20;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v15 + 88) - 8) + 16))((uint64_t)v9 + *(_QWORD *)(*v9 + 120), a1);
  sub_1A905DC3C(a2, (uint64_t)v9 + *(_QWORD *)(*v9 + 128));
  v21 = (uint64_t)v9 + *(_QWORD *)(*v9 + 136);
  *(_QWORD *)v21 = a3;
  *(_QWORD *)(v21 + 8) = a4;
  *(_BYTE *)(v21 + 16) = a5;
  __swift_destroy_boxed_opaque_existential_0(a2);
  v22 = (uint64_t *)((char *)v9 + *(_QWORD *)(*v9 + 144));
  v23 = v27;
  *v22 = v25;
  v22[1] = v23;
  *((_BYTE *)v9 + *(_QWORD *)(*v9 + 152)) = v28;
  *((_BYTE *)v9 + *(_QWORD *)(*v9 + 160)) = v26;
  return v9;
}

uint64_t sub_1A9062F08(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for EpisodeTranscriptData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

void sub_1A9062F7C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  Publishers.CachedAssetPublisher.receive<A>(subscriber:)(a1, a4, a2, a3);
}

void _s20CachedAssetPublisherV5InnerCMa()
{
  JUMPOUT(0x1AF413F6CLL);
}

char *sub_1A9062F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;

  v27 = a5;
  v28 = a6;
  v25 = a3;
  v26 = a4;
  v23 = a1;
  v24 = a2;
  v7 = *(_QWORD **)v6;
  v8 = *(_QWORD *)(*(_QWORD *)v6 + 80);
  v9 = sub_1A93F8A90();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  *((_QWORD *)v6 + 2) = v13;
  v14 = &v6[v7[20]];
  v15 = *(_QWORD *)(v8 - 8);
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v16(v14, 1, 1, v8);
  v17 = &v6[*(_QWORD *)(*(_QWORD *)v6 + 168)];
  *(_OWORD *)v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  *((_QWORD *)v17 + 4) = 0;
  v18 = *(_QWORD *)(*(_QWORD *)v6 + 176);
  *(_QWORD *)&v6[v18] = sub_1A93F78D8();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7[12] - 8) + 32))(&v6[*(_QWORD *)(*(_QWORD *)v6 + 136)], v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v12, v24, v8);
  v16(v12, 0, 1, v8);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v14, v12, v9);
  swift_endAccess();
  v19 = &v6[*(_QWORD *)(*(_QWORD *)v6 + 184)];
  v20 = v7[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v19, v25, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(&v6[*(_QWORD *)(*(_QWORD *)v6 + 192)], v26, v20);
  v6[*(_QWORD *)(*(_QWORD *)v6 + 144)] = v27;
  v6[*(_QWORD *)(*(_QWORD *)v6 + 152)] = v28;
  return v6;
}

uint64_t sub_1A9063198(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v21 = a1;
  v2 = *v1;
  v3 = sub_1A93F76D4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t *)((char *)v1 + *(_QWORD *)(v2 + 128));
  v8 = v7[3];
  v9 = v7[4];
  v10 = __swift_project_boxed_opaque_existential_1(v7, v8);
  v11 = (uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 136));
  v19 = *v11;
  v20 = v10;
  v18 = v11[1];
  HIDWORD(v17) = *((unsigned __int8 *)v11 + 16);
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_1A93F8C70();
  v12 = (uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 144));
  v14 = *v12;
  v13 = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = v14;
  v24 = v13;
  sub_1A93F810C();
  sub_1A906335C((uint64_t)v6);
  v15 = sub_1A93F76BC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v22 = v15;
  sub_1A93F9060();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v9 + 16))(v19, v18, HIDWORD(v17), v23, v24, v8, v9);
  swift_bridgeObjectRelease();
  return sub_1A93F78A8();
}

uint64_t sub_1A906335C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_1ED2B8990;
  swift_beginAccess();
  v4 = sub_1A93F76D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UniquePipeline.init(upstream:sharedCache:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v15 = (char *)&v19 - v14;
  v16 = type metadata accessor for UniquePipeline(0, a3, a4, a5);
  *(_QWORD *)(a6 + *(int *)(v16 + 48)) = a2;
  v17 = *(_QWORD *)(a3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a6 + *(int *)(v16 + 44), a1, a3);
  (*(void (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, a3);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a6, v15, AssociatedTypeWitness);
}

uint64_t dispatch thunk of AssetProcessingStep.metadata.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t type metadata accessor for UniquePipeline(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UniquePipeline);
}

void AssetProcessingStep<>.cache<A>(_:format:overwrite:)(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(void);
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[16];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v12 = v11;
  v49 = a7;
  v50 = a8;
  v46 = a3;
  v41 = a2;
  v45 = a9;
  v47 = a1;
  v48 = a10;
  v38 = a11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v36 = sub_1A93F8A90();
  v35 = *(_QWORD *)(v36 - 8);
  v17 = MEMORY[0x1E0C80A78](v36);
  v37 = (uint64_t)&v35 - v18;
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v20 = MEMORY[0x1E0C80A78](v17);
  v43 = (char *)&v35 - v21;
  v22 = *(_QWORD *)(a5 - 8);
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v35 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v39 = v29;
  v30 = *(void (**)(void))(v29 + 16);
  v40 = (uint64_t)&v35 - v31;
  v30();
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v42 = v25;
  v32(v25, v47, a5);
  v52 = a4;
  v53 = a5;
  v47 = a5;
  v44 = a6;
  v54 = a6;
  v55 = v49;
  v56 = v50;
  v57 = v48;
  v58 = v38;
  v59 = v12;
  swift_getAssociatedTypeWitness();
  sub_1A93F8A90();
  v33 = v37;
  sub_1A92D5DDC((void (*)(char *, char *))sub_1A92D605C, (uint64_t)v51, MEMORY[0x1E0DEDCE8], AssociatedTypeWitness, v34, v37);
  ((void (*)(char *, uint64_t, uint64_t))v30)(v28, v12, a4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v33, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v44 + 40))(a4, v44);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v28, a4);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v36);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v28, a4);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v43, v33, AssociatedTypeWitness);
  }
  sub_1A9063990(v40, a4, v45);
}

uint64_t sub_1A9063834(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))((*(_QWORD *)(v5 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80), v3);
  return swift_release();
}

uint64_t sub_1A90638CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v12, v5);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

void sub_1A9063990(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for CacheAssetProcessingStep();
}

uint64_t sub_1A9063A14(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v6 + a1[20], v3, v2);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v6 + a1[19], v5, v1);
  *(_BYTE *)(v6 + a1[21]) = v4;
  return result;
}

void type metadata accessor for CacheAssetProcessingStep()
{
  JUMPOUT(0x1AF413F6CLL);
}

uint64_t SubscribeOnAssetProcessingStep.metadata.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 40))(*(_QWORD *)(a1 + 16));
}

uint64_t UniquePipeline.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t initializeBufferWithCopyOfBuffer for SignpostTrace.Interval(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_1A93F762C();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t LoggerTrace.start(interval:context:)@<X0>(unint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  _UNKNOWN **v38;

  v5 = v4;
  v10 = type metadata accessor for LoggerTrace(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v29 - v15;
  *((_QWORD *)&v37 + 1) = v14;
  v38 = &protocol witness table for LoggerTrace;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v36);
  sub_1A9064630(v5, (uint64_t)boxed_opaque_existential_1, type metadata accessor for LoggerTrace);
  sub_1A9064A04(a1, a2, (uint64_t)&v36, (uint64_t)&v32);
  if (*((_QWORD *)&v33 + 1))
  {
    *((_QWORD *)&v37 + 1) = &type metadata for LoggerTrace.ActivityInterval;
    v38 = &off_1E54F5288;
    v18 = swift_allocObject();
    *(_QWORD *)&v36 = v18;
    v19 = v33;
    *(_OWORD *)(v18 + 16) = v32;
    *(_OWORD *)(v18 + 32) = v19;
    *(_OWORD *)(v18 + 48) = v34;
    *(_QWORD *)(v18 + 64) = v35;
    sub_1A9064630(v5, (uint64_t)v16, type metadata accessor for LoggerTrace);
    sub_1A9064714((uint64_t)v16, type metadata accessor for LoggerTrace);
    sub_1A905D4AC(&v36, (uint64_t)a4);
    if (a3)
      goto LABEL_3;
LABEL_6:
    sub_1A905DC3C((uint64_t)a4, (uint64_t)&v32);
LABEL_7:
    v30 = 0;
    v31 = 0xE000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A6058);
    sub_1A93F8DE4();
    v20 = v30;
    v21 = v31;
    goto LABEL_8;
  }
  sub_1A905FD54((uint64_t)&v32, qword_1EEABE608);
  v36 = 0u;
  v37 = 0u;
  v38 = 0;
  sub_1A9064630(v5, (uint64_t)v16, type metadata accessor for LoggerTrace);
  sub_1A9064630((uint64_t)v16, (uint64_t)v13, type metadata accessor for LoggerTrace);
  v22 = sub_1A93F8CA0();
  v24 = v23;
  sub_1A9064714((uint64_t)v16, type metadata accessor for LoggerTrace);
  v25 = type metadata accessor for LoggerTrace.LogInterval(0);
  a4[3] = v25;
  a4[4] = (uint64_t)&off_1E54F5298;
  v26 = __swift_allocate_boxed_opaque_existential_1(a4);
  sub_1A935395C((uint64_t)v13, (uint64_t)v26);
  v27 = (uint64_t *)((char *)v26 + *(int *)(v25 + 20));
  *v27 = v22;
  v27[1] = v24;
  sub_1A905FD54((uint64_t)&v36, qword_1ED2A6060);
  if (!a3)
    goto LABEL_6;
LABEL_3:
  *(_QWORD *)&v32 = 0;
  *((_QWORD *)&v32 + 1) = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A6058);
  sub_1A93F8DE4();
  sub_1A93F810C();
  sub_1A93F810C();
  v21 = *((_QWORD *)&v32 + 1);
  v20 = v32;
  sub_1A905DC3C((uint64_t)a4, (uint64_t)&v32);
  if (!v21)
    goto LABEL_7;
LABEL_8:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v32);
  LoggerTrace.emit(event:context:)((uint64_t)"START INTERVAL", 14, 2, v20, v21);
  return swift_bridgeObjectRelease();
}

uint64_t LoggerTrace.emit(event:context:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  os_log_type_t v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a4;
  v45 = a1;
  v46 = a2;
  v8 = type metadata accessor for LoggerTrace(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v13 = (uint64_t *)((char *)&v41 - v12);
  v14 = sub_1A93F7698();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v41 - v19;
  if (a5)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v41 - v19, v5 + *(int *)(v8 + 20), v14);
    v21 = *(_BYTE *)(v5 + *(int *)(v8 + 24));
    sub_1A9064630(v5, (uint64_t)v13, type metadata accessor for LoggerTrace);
    swift_bridgeObjectRetain_n();
    v22 = sub_1A93F7674();
    if (os_log_type_enabled(v22, v21))
    {
      v23 = swift_slowAlloc();
      v42 = a3;
      v24 = v23;
      v41 = swift_slowAlloc();
      v48 = v41;
      *(_DWORD *)v24 = 136315650;
      v43 = v14;
      v25 = *v13;
      v26 = v13[1];
      swift_bridgeObjectRetain();
      v47 = sub_1A906436C(v25, v26, &v48);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A9064714((uint64_t)v13, type metadata accessor for LoggerTrace);
      *(_WORD *)(v24 + 12) = 2080;
      v27 = sub_1A93F8CA0();
      v47 = sub_1A906436C(v27, v28, &v48);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 22) = 2080;
      swift_bridgeObjectRetain();
      v47 = sub_1A906436C(v44, a5, &v48);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A904E000, v22, v21, "[%s] %s - %s", (uint8_t *)v24, 0x20u);
      v29 = v41;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v29, -1, -1);
      MEMORY[0x1AF41411C](v24, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v43);
    }
    sub_1A9064714((uint64_t)v13, type metadata accessor for LoggerTrace);

    swift_bridgeObjectRelease_n();
    v39 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
    v40 = v20;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v5 + *(int *)(v8 + 20), v14);
    v31 = *(_BYTE *)(v5 + *(int *)(v8 + 24));
    sub_1A9064630(v5, (uint64_t)v11, type metadata accessor for LoggerTrace);
    v32 = sub_1A93F7674();
    if (os_log_type_enabled(v32, v31))
    {
      v33 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v48 = v34;
      *(_DWORD *)v33 = 136315394;
      v43 = v14;
      v42 = a3;
      v35 = *v11;
      v36 = v11[1];
      swift_bridgeObjectRetain();
      v47 = sub_1A906436C(v35, v36, &v48);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A9064714((uint64_t)v11, type metadata accessor for LoggerTrace);
      *(_WORD *)(v33 + 12) = 2080;
      v37 = sub_1A93F8CA0();
      v47 = sub_1A906436C(v37, v38, &v48);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v32, v31, "[%s] %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v34, -1, -1);
      MEMORY[0x1AF41411C](v33, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v43);
    }
    sub_1A9064714((uint64_t)v11, type metadata accessor for LoggerTrace);

    v39 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
    v40 = v18;
  }
  return v39(v40, v14);
}

uint64_t sub_1A906436C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1A9064478(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1A906443C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1A906443C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1A906443C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1A9064478(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A93F8AB4();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1A9064798(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1A93F8D48();
  if (!v8)
  {
    sub_1A93F8E08();
    __break(1u);
LABEL_17:
    result = sub_1A93F8E98();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1A9064630(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for LoggerTrace(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1ED2ACCD8);
}

_QWORD *initializeWithCopy for LoggerTrace(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A93F7698();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1A9064714(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for LoggerTrace(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1A93F7698();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1A9064798(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1A906482C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A91105C4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1A91105C4(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1A906482C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1A90649A0(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1A93F8C7C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1A93F8E08();
      __break(1u);
LABEL_10:
      v2 = sub_1A93F8124();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1A93F8E98();
    __break(1u);
LABEL_14:
    result = sub_1A93F8E08();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1A90649A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC940);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

double sub_1A9064A04@<D0>(unint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  unint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  os_activity_scope_state_s v14;
  _BYTE v15[40];
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  sub_1A905DC3C(a3, (uint64_t)v15);
  v9 = sub_1A9064BF8(&dword_1A904E000, a1, a2, v8);
  if (v9)
  {
    v16 = v9;
    v14.opaque[0] = 0;
    v14.opaque[1] = 0;
    os_activity_scope_enter(v9, &v14);
    v10 = v14.opaque[0];
    v11 = v14.opaque[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9658);
    v12 = swift_allocObject();
    *(_DWORD *)(v12 + 36) = 0;
    *(_QWORD *)(v12 + 16) = v10;
    *(_QWORD *)(v12 + 24) = v11;
    *(_BYTE *)(v12 + 32) = 0;
    __swift_destroy_boxed_opaque_existential_0(a3);
    v17 = v12;
    sub_1A9064B74((uint64_t)v15, a4);
    sub_1A9064B1C((uint64_t)v15);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a3);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
    *(_QWORD *)(a4 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)a4 = 0u;
  }
  return result;
}

uint64_t sub_1A9064B1C(uint64_t a1)
{
  destroy for LoggerTrace.ActivityInterval(a1);
  return a1;
}

uint64_t destroy for LoggerTrace.ActivityInterval(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_1A9064B74(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for LoggerTrace.ActivityInterval(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for LoggerTrace.ActivityInterval(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

unint64_t sub_1A9064BF8@<X0>(void *dso@<X3>, unint64_t result@<X0>, char a3@<W2>, unint64_t a4@<X8>)
{
  unint64_t v5;
  NSObject *v6;
  void *v7;
  char *v8;
  unsigned int v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  char description[8];

  v5 = result;
  if ((a3 & 1) == 0)
  {
    if (result)
    {
      if (dso)
      {
        if (qword_1ED2A5E40 != -1)
          swift_once();
        v6 = qword_1ED2A47D0;
        v7 = dso;
        v8 = (char *)v5;
        return (unint64_t)_os_activity_create(v7, v8, v6, OS_ACTIVITY_FLAG_DEFAULT);
      }
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_23;
  }
  a4 = HIDWORD(result);
  if (HIDWORD(result))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result >> 11 == 27)
  {
    __break(1u);
    return result;
  }
  LODWORD(a4) = WORD1(result);
  if (WORD1(result) > 0x10u)
    goto LABEL_24;
  if ((result & 0xFFFFFF80) == 0)
  {
    if (result > 0xFF)
    {
      __break(1u);
      goto LABEL_32;
    }
    v9 = (result + 1);
    goto LABEL_13;
  }
LABEL_25:
  v14 = (result & 0x3F) << 8;
  v15 = (v14 | (result >> 6)) + 33217;
  v16 = (v14 | (result >> 6) & 0x3F) << 8;
  v17 = (((v16 | (result >> 12) & 0x3F) << 8) | (result >> 18)) - 2122219023;
  v18 = (v16 | (result >> 12)) + 8487393;
  if ((_DWORD)a4)
    v9 = v17;
  else
    v9 = v18;
  if (result < 0x800)
    v9 = v15;
LABEL_13:
  *(_QWORD *)description = (v9 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v9) & 0x38)) & 0x38));
  if (dso)
  {
    if (qword_1ED2A5E40 != -1)
      swift_once();
    v6 = qword_1ED2A47D0;
    v8 = description;
    v7 = dso;
    return (unint64_t)_os_activity_create(v7, v8, v6, OS_ACTIVITY_FLAG_DEFAULT);
  }
LABEL_18:
  if (qword_1EEAB6D30 != -1)
LABEL_32:
    swift_once();
  v10 = sub_1A93F7698();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEABA630);
  v11 = sub_1A93F7674();
  v12 = sub_1A93F879C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1A904E000, v11, v12, "FAILED TO CREATE OS_ACTIVITY", v13, 2u);
    MEMORY[0x1AF41411C](v13, -1, -1);
  }

  return 0;
}

uint64_t sub_1A9064E4C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    v5 = result;
    v6 = (_QWORD *)(a3 + 32);
    swift_bridgeObjectRetain();
    do
    {
      v7 = v6[3];
      v8 = v6[4];
      __swift_project_boxed_opaque_existential_1(v6, v7);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(v5, a2, v7, v8);
      v6 += 5;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall SignpostTrace.Interval.end(with:)(Swift::String_optional with)
{
  const char *v1;
  void *object;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  NSObject *v29;
  const char *v30;
  char v31;
  char v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  os_signpost_id_t v38;
  void (*v39)(char *, uint64_t);
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint8_t *v45;
  os_signpost_id_t v46;
  void (*v47)(NSObject *, uint64_t);
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t countAndFlagsBits;
  const char *v52;
  char *v53;
  uint64_t v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;

  object = with.value._object;
  countAndFlagsBits = with.value._countAndFlagsBits;
  v3 = (const char *)sub_1A93F7638();
  v54 = *((_QWORD *)v3 - 1);
  v55 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v48 - v7;
  v9 = sub_1A93F75FC();
  v10 = *(_QWORD *)(v9 - 8);
  v56 = v9;
  v57 = v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = ((char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x1E0C80A78](v11);
  v53 = (char *)&v48 - v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v48 - v16;
  v18 = sub_1A93F762C();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v48 - v23;
  v25 = 0;
  if (!object)
  {
LABEL_6:
    v27 = type metadata accessor for SignpostTrace.Interval(v25);
    (*(void (**)(char *, const char *, uint64_t))(v19 + 16))(v22, &v1[*(int *)(v27 + 24)], v18);
    v17 = (char *)*((unsigned __int8 *)v1 + 24);
    v24 = *(char **)v1;
    v28 = (const char *)*((_QWORD *)v1 + 1);
    v29 = sub_1A93F7620();
    sub_1A93F7644();
    LODWORD(v52) = sub_1A93F8934();
    if ((sub_1A93F8A6C() & 1) == 0)
    {

      (*(void (**)(NSObject *, uint64_t))(v57 + 8))(v13, v56);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
      return;
    }
    v50 = v19;
    if ((v17 & 1) == 0)
    {
      v19 = v54;
      v30 = v55;
      if (!v28)
      {
        __break(1u);
        goto LABEL_10;
      }
      goto LABEL_25;
    }
    v19 = v54;
    v30 = v55;
    if (!((unint64_t)v28 >> 32))
    {
      if (v28 >> 11 == 27)
      {
LABEL_36:
        __break(1u);
        return;
      }
      if (v28 >> 16 <= 0x10)
      {
        v28 = &v61;
LABEL_25:
        swift_retain();
        sub_1A93F7668();
        swift_release();
        if ((*(unsigned int (**)(char *, const char *))(v19 + 88))(v6, v30) == *MEMORY[0x1E0DF2190])
        {
          v40 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, const char *))(v19 + 8))(v6, v30);
          v40 = "";
        }
        v41 = v18;
        v42 = v56;
        v43 = v57;
        v44 = v53;
        (*(void (**)(char *, NSObject *, uint64_t))(v57 + 16))(v53, v13, v56);
        v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v45 = 0;
        v46 = sub_1A93F75E4();
        _os_signpost_emit_with_name_impl(&dword_1A904E000, v29, (os_signpost_type_t)v52, v46, v28, v40, v45, 2u);
        MEMORY[0x1AF41411C](v45, -1, -1);

        v47 = *(void (**)(NSObject *, uint64_t))(v43 + 8);
        v47(v13, v42);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v41);
        v47(v44, v42);
        return;
      }
      goto LABEL_34;
    }
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v26 = type metadata accessor for SignpostTrace.Interval(0);
  (*(void (**)(char *, const char *, uint64_t))(v19 + 16))(v24, &v1[*(int *)(v26 + 24)], v18);
  v22 = (char *)*((unsigned __int8 *)v1 + 24);
  v6 = *(char **)v1;
  v52 = (const char *)*((_QWORD *)v1 + 1);
  swift_bridgeObjectRetain_n();
  v13 = sub_1A93F7620();
  sub_1A93F7644();
  v49 = sub_1A93F8934();
  if ((sub_1A93F8A6C() & 1) == 0)
  {
LABEL_10:
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v57 + 8))(v17, v56);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
    return;
  }
  v50 = v19;
  v48 = v18;
  if ((v22 & 1) != 0)
  {
    v19 = v54;
    v1 = v55;
    if ((unint64_t)v52 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v52 >> 11 == 27)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      if (v52 >> 16 <= 0x10)
      {
        v52 = &v60;
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_33;
  }
  v19 = v54;
  v1 = v55;
  if (!v52)
  {
    v25 = swift_bridgeObjectRelease_n();
    __break(1u);
    goto LABEL_6;
  }
LABEL_17:
  swift_retain();
  sub_1A93F7668();
  swift_release();
  if ((*(unsigned int (**)(char *, const char *))(v19 + 88))(v8, v1) == *MEMORY[0x1E0DF2190])
  {
    v31 = 0;
    v32 = 0;
    v55 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, const char *))(v19 + 8))(v8, v1);
    v55 = "%s";
    v32 = 2;
    v31 = 1;
  }
  v33 = v56;
  v34 = v53;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v53, v17, v56);
  v35 = swift_slowAlloc();
  v36 = swift_slowAlloc();
  v59 = v36;
  *(_BYTE *)v35 = v32;
  *(_BYTE *)(v35 + 1) = v31;
  *(_WORD *)(v35 + 2) = 2080;
  swift_bridgeObjectRetain();
  v58 = sub_1A906436C(countAndFlagsBits, (unint64_t)object, &v59);
  sub_1A93F8AA8();
  swift_bridgeObjectRelease_n();
  v37 = v34;
  v38 = sub_1A93F75E4();
  _os_signpost_emit_with_name_impl(&dword_1A904E000, v13, (os_signpost_type_t)v49, v38, v52, v55, (uint8_t *)v35, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1AF41411C](v36, -1, -1);
  MEMORY[0x1AF41411C](v35, -1, -1);

  v39 = *(void (**)(char *, uint64_t))(v57 + 8);
  v39(v17, v33);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v24, v48);
  v39(v37, v33);
}

uint64_t CombinedTrace.start(interval:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  __int128 v26[2];
  uint64_t v27;

  v7 = a6;
  v8 = *v6;
  v9 = *(_QWORD *)(*v6 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v27 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1A9065660(0, v9, 0);
    v15 = v8 + 32;
    v10 = v27;
    do
    {
      sub_1A905DC3C(v15, (uint64_t)v23);
      v17 = v24;
      v16 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 24))(v26, a1, a2, a3, a4, a5, v17, v16);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A9065660(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v27;
      }
      v19 = *(_QWORD *)(v10 + 16);
      v18 = *(_QWORD *)(v10 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1A9065660(v18 > 1, v19 + 1, 1);
        v10 = v27;
      }
      *(_QWORD *)(v10 + 16) = v19 + 1;
      sub_1A905D4AC(v26, v10 + 40 * v19 + 32);
      v15 += 40;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    v7 = a6;
  }
  result = sub_1A906581C(v10);
  v7[3] = (uint64_t)&type metadata for CombinedTrace.Interval;
  v7[4] = (uint64_t)&off_1E54E84B0;
  *v7 = result;
  return result;
}

uint64_t sub_1A9065660(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A906567C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A906567C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C10);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A6058);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A906581C(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  __int128 v9[2];
  __int128 v10[2];

  v1 = (_QWORD *)result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 < 2)
    return (uint64_t)v1;
  v3 = 0;
  v4 = v2 >> 1;
  v5 = v2 - 1;
  v6 = 40 * v2 - 8;
  for (i = 4; ; i += 5)
  {
    if (v3 == v5)
      goto LABEL_4;
    v8 = v1[2];
    if (v3 >= v8)
      break;
    result = sub_1A905DC3C((uint64_t)&v1[i], (uint64_t)v10);
    if (v5 >= v8)
      goto LABEL_14;
    sub_1A905DC3C((uint64_t)v1 + v6, (uint64_t)v9);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A9398DD8(v1);
      v1 = (_QWORD *)result;
    }
    if (v3 >= v1[2])
      goto LABEL_15;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v1[i]);
    result = sub_1A905D4AC(v9, (uint64_t)&v1[i]);
    if (v5 >= v1[2])
      goto LABEL_16;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v1 + v6);
    result = sub_1A905D4AC(v10, (uint64_t)v1 + v6);
LABEL_4:
    ++v3;
    --v5;
    v6 -= 40;
    if (v4 == v3)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1A906594C@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_1;
  _BYTE v24[4];
  int v25;
  uint64_t v26;

  v9 = v7;
  v26 = a4;
  v25 = a3;
  v14 = sub_1A93F75FC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = &v24[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = sub_1A93F762C();
  MEMORY[0x1E0C80A78](v18);
  v20 = &v24[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t))(v21 + 16))(v20, v9);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v17, v9 + *(int *)(a6 + 20), v14);
  a7[3] = type metadata accessor for SignpostTrace.Interval(0);
  a7[4] = (uint64_t)&protocol witness table for SignpostTrace.Interval;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a7);
  swift_bridgeObjectRetain();
  return SignpostTrace.Interval.init(starting:domain:identifier:with:)(a1, a2, v25, (uint64_t)v20, (uint64_t)v17, v26, a5, (uint64_t)boxed_opaque_existential_1);
}

uint64_t type metadata accessor for SignpostTrace.Interval(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1ED2A5FB8);
}

uint64_t SignpostTrace.Interval.init(starting:domain:identifier:with:)@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  const char *v20;
  NSObject *v21;
  int v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint8_t *v25;
  uint64_t v26;
  os_signpost_id_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint8_t *v29;
  os_signpost_id_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  const char *v36;
  void (*v37)(char *, uint64_t, uint64_t);
  const char *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;

  v15 = a3;
  v16 = sub_1A93F75FC();
  v44 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v15;
  if (!a7)
  {
    v20 = a1;
    v21 = sub_1A93F7620();
    v22 = sub_1A93F8940();
    if ((sub_1A93F8A6C() & 1) == 0)
    {

      v23 = v44;
      a1 = v20;
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v18, a5, v16);
LABEL_23:
      sub_1A93F765C();
      swift_allocObject();
      v31 = sub_1A93F7650();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a5, v16);
      *(_QWORD *)(a8 + 8) = a1;
      *(_QWORD *)(a8 + 16) = a2;
      *(_BYTE *)(a8 + 24) = v43;
      *(_QWORD *)a8 = v31;
      v32 = a8 + *(int *)(type metadata accessor for SignpostTrace.Interval(0) + 24);
      v33 = sub_1A93F762C();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v32, a4, v33);
    }
    v41 = a4;
    v42 = a2;
    LODWORD(v40) = v22;
    if ((v43 & 1) != 0)
    {
      if ((unint64_t)v20 >> 32)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      if (v20 >> 11 == 27)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (v20 >> 16 > 0x10)
        goto LABEL_28;
      v39 = &v48;
    }
    else
    {
      if (!v20)
      {
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      v39 = v20;
    }
    v23 = v44;
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
    v28(v18, a5, v16);
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    v30 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v21, (os_signpost_type_t)v40, v30, v39, "", v29, 2u);
    MEMORY[0x1AF41411C](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v16);
    v24 = v28;
    a4 = v41;
    a1 = v20;
    goto LABEL_22;
  }
  v40 = a6;
  v42 = a2;
  swift_bridgeObjectRetain();
  v19 = sub_1A93F7620();
  LODWORD(v39) = sub_1A93F8940();
  if ((sub_1A93F8A6C() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    v23 = v44;
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
LABEL_22:
    a2 = v42;
    v24(v18, a5, v16);
    goto LABEL_23;
  }
  v41 = a4;
  v38 = a1;
  if ((v15 & 1) != 0)
  {
    if ((unint64_t)a1 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (a1 >> 11 == 27)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (a1 >> 16 <= 0x10)
      {
        v36 = &v47;
        goto LABEL_16;
      }
    }
    __break(1u);
    goto LABEL_26;
  }
  if (a1)
  {
    v36 = a1;
LABEL_16:
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
    v37(v18, a5, v16);
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v46 = v26;
    *(_DWORD *)v25 = 136315138;
    swift_bridgeObjectRetain();
    v45 = sub_1A906436C(v40, a7, &v46);
    sub_1A93F8AA8();
    v23 = v44;
    swift_bridgeObjectRelease_n();
    v27 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v19, (os_signpost_type_t)v39, v27, v36, "%s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v26, -1, -1);
    MEMORY[0x1AF41411C](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v16);
    v24 = v37;
    a1 = v38;
    a4 = v41;
    goto LABEL_22;
  }
LABEL_31:
  result = swift_bridgeObjectRelease_n();
  __break(1u);
  return result;
}

void sub_1A9065ED4()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(v0 + 48);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_1A9065F2C(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1A9065F2C(uint64_t a1)
{
  uint64_t v1;

  sub_1A9065F48(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1A9065F48(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  os_activity_scope_state_s v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
  {
    v9 = *(os_activity_scope_state_s *)a1;
    v7 = a2[3];
    v8 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v7);
    (*(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))("ACTIVITY_END", 12, 2, a3, a4, v7, v8);
    os_activity_scope_leave(&v9);
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 1;
  }
}

uint64_t sub_1A906601C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A9064E4C(a1, a2, *v2);
}

uint64_t sub_1A9066024(_QWORD *a1)
{
  return sub_1A905D824(a1);
}

uint64_t SignpostAndLogTrace(domain:level:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t result;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;

  v39 = a2;
  v40 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC900);
  MEMORY[0x1E0C80A78](v4);
  v38 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F75FC();
  v37 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7698();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A93F762C();
  v35 = *(_QWORD *)(v13 - 8);
  v36 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v34 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v33 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v18(v12, a1, v9);
  sub_1A93F7614();
  sub_1A93F7620();
  sub_1A93F75D8();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2ACA28);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1A9405950;
  v18(v12, a1, v9);
  v41 = 0;
  v42 = 0xE000000000000000;
  sub_1A93F8DE4();
  v21 = v41;
  v20 = v42;
  v22 = type metadata accessor for LoggerTrace(0);
  *(_QWORD *)(v19 + 56) = v22;
  *(_QWORD *)(v19 + 64) = &protocol witness table for LoggerTrace;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v19 + 32));
  *boxed_opaque_existential_1 = v21;
  boxed_opaque_existential_1[1] = v20;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)boxed_opaque_existential_1 + *(int *)(v22 + 20), v12, v9);
  *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v22 + 24)) = v39;
  v25 = v34;
  v24 = v35;
  v26 = v36;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v34, v17, v36);
  v28 = v37;
  v27 = (uint64_t)v38;
  v29 = v33;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v38, v8, v33);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v27, 0, 1, v29);
  *(_QWORD *)(v19 + 96) = type metadata accessor for SignpostTrace(0);
  *(_QWORD *)(v19 + 104) = &protocol witness table for SignpostTrace;
  v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v19 + 72));
  SignpostTrace.init(domain:identifier:)(v25, v27, (uint64_t)v30);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v29);
  result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v17, v26);
  v32 = v40;
  v40[3] = (uint64_t)&type metadata for CombinedTrace;
  v32[4] = (uint64_t)&protocol witness table for CombinedTrace;
  *v32 = v19;
  return result;
}

uint64_t SignpostTrace.init(domain:identifier:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t, char *, uint64_t);
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v27 = a1;
  v5 = sub_1A93F762C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC900);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F75FC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 16);
  v28 = a3;
  v17 = a3;
  v18 = v27;
  v16(v17, v27, v5);
  v29 = a2;
  sub_1A9066554(a2, (uint64_t)v11);
  v16((uint64_t)v8, v18, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1A93F7620();
    sub_1A93F75D8();
    v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    v19(v8, v5);
    sub_1A906659C((uint64_t)v11);
  }
  else
  {
    v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    v19(v8, v5);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  }
  v20 = type metadata accessor for SignpostTrace(0);
  v21 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v28 + *(int *)(v20 + 20), v15, v12);
  v30 = 0;
  v31 = 0xE000000000000000;
  sub_1A93F8DE4();
  v22 = v30;
  v23 = v31;
  sub_1A906659C(v29);
  v19(v18, v5);
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v25 = (_QWORD *)(v21 + *(int *)(v20 + 24));
  *v25 = v22;
  v25[1] = v23;
  return result;
}

uint64_t sub_1A9066554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A906659C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC900);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AssetSourceStep.publisher.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(a1 + 16);
  v11 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v5 + 24) = v11;
  *(_QWORD *)(v5 + 40) = *(_QWORD *)(a1 + 40);
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v5 + v4, (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9 = type metadata accessor for EmitLifecycle(0, AssociatedTypeWitness, AssociatedConformanceWitness, v8);
  MEMORY[0x1AF414014](&protocol conformance descriptor for EmitLifecycle<A>, v9);
  return sub_1A93F7AAC();
}

void sub_1A9066740()
{
  sub_1A9066760();
}

void sub_1A9066760()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168));
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 24;
  os_unfair_lock_lock(v1 + 24);
  sub_1A9060138(v2, v0);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1A90667B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A6060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_1A9066800(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *ObjectType;
  objc_super v22;
  uint64_t v23;
  _QWORD v24[5];

  v20 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = sub_1A93F885C();
  v18 = *(_QWORD *)(v5 - 8);
  v19 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F8808();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v9);
  v24[3] = type metadata accessor for FairPlayKeySessionProvider();
  v24[4] = &protocol witness table for FairPlayKeySessionProvider;
  v24[0] = a2;
  v10 = OBJC_IVAR___PFFairPlayKeyLoader_activeSessionStore;
  type metadata accessor for ActiveSessionStore();
  v11 = (_QWORD *)swift_allocObject();
  v12 = a3;
  v13 = MEMORY[0x1E0DEE9D8];
  v11[2] = sub_1A9067138(MEMORY[0x1E0DEE9D8]);
  v11[3] = 0;
  v11[4] = 0;
  v11[5] = 0;
  *(_QWORD *)&a3[v10] = v11;
  v14 = OBJC_IVAR___PFFairPlayKeyLoader_internalQueue;
  sub_1A9066C6C();
  sub_1A93F7D94();
  v23 = v13;
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v7, *MEMORY[0x1E0DEF8D0], v19);
  *(_QWORD *)&v12[v14] = sub_1A93F888C();
  v15 = &v12[OBJC_IVAR___PFFairPlayKeyLoader____lazy_storage___logPrefix];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  *(_QWORD *)&v12[OBJC_IVAR___PFFairPlayKeyLoader_metadataLoader] = v20;
  sub_1A905DC3C((uint64_t)v24, (uint64_t)&v12[OBJC_IVAR___PFFairPlayKeyLoader_fairPlayKeySessionProvider]);
  swift_unknownObjectRetain();

  v22.receiver = v12;
  v22.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v22, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  return v16;
}

uint64_t sub_1A9066A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD aBlock[5];
  uint64_t v15;

  v1 = sub_1A93F7D58();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v13 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F7DB8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9066C6C();
  v9 = (void *)sub_1A93F8868();
  aBlock[4] = sub_1A9097730;
  v15 = v0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_66;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CE8((unint64_t *)&qword_1ED2AD6F0, 255, v2, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D28();
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v8, v4, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A9066C6C()
{
  unint64_t result;

  result = qword_1ED2AD6C0;
  if (!qword_1ED2AD6C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2AD6C0);
  }
  return result;
}

uint64_t sub_1A9066CA8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1AF414014](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A9066CE8(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1AF414014](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A9066D28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2AD710;
  if (!qword_1ED2AD710)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED2AD700);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2AD710);
  }
  return result;
}

uint64_t sub_1A9066D74(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1AF414014](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A9066DB4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FairPlayKeySessionProvider()
{
  return objc_opt_self();
}

unint64_t sub_1A9066EB8()
{
  unint64_t result;

  result = qword_1ED2A48B0;
  if (!qword_1ED2A48B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2A48B0);
  }
  return result;
}

id MediaItemMetadataLoader.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  id v7;
  objc_class *v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  objc_super v13;
  uint64_t v14;

  v12 = sub_1A93F885C();
  v1 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F8808();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v6);
  v11 = OBJC_IVAR___MTMediaItemMetadataLoader_metadataLoadingQueue;
  v10[1] = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v7 = v0;
  sub_1A93F7D88();
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v12);
  *(_QWORD *)(v10[2] + v11) = sub_1A93F888C();

  v8 = (objc_class *)type metadata accessor for MediaItemMetadataLoader();
  v13.receiver = v7;
  v13.super_class = v8;
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t type metadata accessor for MediaItemMetadataLoader()
{
  return objc_opt_self();
}

unint64_t sub_1A9067138(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB77A8);
  v2 = (_QWORD *)sub_1A93F8E8C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = sub_1A9094640(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A9067250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v3 + 88) - 8) + 32))(v3 + *(_QWORD *)(*(_QWORD *)v3 + 120), a1);
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 128)) = a2;
  v6 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 136);
  v7 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a3, v7);
  return v3;
}

uint64_t type metadata accessor for ActiveSessionStore()
{
  return objc_opt_self();
}

uint64_t sub_1A90672F4()
{
  uint64_t v0;
  uint64_t inited;
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405960;
  v28 = OBJC_IVAR___MTSearchTrie_rootNode;
  v29 = v0;
  *(_QWORD *)(inited + 32) = *(_QWORD *)(v0 + OBJC_IVAR___MTSearchTrie_rootNode);
  v31 = inited;
  sub_1A93F8328();
  v2 = v31;
  swift_bridgeObjectRetain();
  swift_retain();
  result = sub_1A93F8118();
  if (!v4)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  v5 = result;
  v6 = v4;
  while (1)
  {
    v30 = MEMORY[0x1E0DEE9D8];
    if (v2 >> 62)
      break;
    v8 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_7;
LABEL_28:
    swift_bridgeObjectRelease();
    v22 = *(_QWORD *)(v29 + v28);
    swift_beginAccess();
    v23 = *(_QWORD *)(v22 + 24);
    if (*(_QWORD *)(v23 + 16) && (v24 = sub_1A9067870(v5, v6), (v25 & 1) != 0))
    {
      v26 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24);
      swift_retain();
      swift_bridgeObjectRelease();
      if ((*(_BYTE *)(v26 + 16) & 1) != 0)
      {
LABEL_37:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      v27 = swift_retain();
      MEMORY[0x1AF412004](v27);
      if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1A93F834C();
      sub_1A93F8394();
      sub_1A93F8328();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v2 = v30;
    result = sub_1A93F8118();
    v5 = result;
    v6 = v7;
    if (!v7)
      goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1A93F8E5C();
  result = swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_28;
LABEL_7:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v9 = 0;
    while (1)
    {
      result = MEMORY[0x1AF4129DC](v9, v2);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = result;
      swift_beginAccess();
      v12 = *(_QWORD *)(v11 + 24);
      if (*(_QWORD *)(v12 + 16) && (v13 = sub_1A9067870(v5, v6), (v14 & 1) != 0))
      {
        if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13) + 16) & 1) != 0)
          goto LABEL_36;
        v15 = swift_retain_n();
        MEMORY[0x1AF412004](v15);
        if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A93F834C();
        sub_1A93F8394();
        sub_1A93F8328();
        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v9;
      if (v10 == v8)
        goto LABEL_28;
    }
    __break(1u);
  }
  else
  {
    v16 = 0;
    while (1)
    {
      v17 = v16 + 1;
      if (__OFADD__(v16, 1))
        break;
      v18 = *(_QWORD *)(v2 + 8 * v16 + 32);
      result = swift_beginAccess();
      v19 = *(_QWORD *)(v18 + 24);
      if (*(_QWORD *)(v19 + 16))
      {
        result = sub_1A9067870(v5, v6);
        if ((v20 & 1) != 0)
        {
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * result) + 16) == 1)
          {
            swift_retain();
LABEL_36:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_37;
          }
          swift_retain_n();
          v21 = swift_retain();
          MEMORY[0x1AF412004](v21);
          if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A93F834C();
          sub_1A93F8394();
          sub_1A93F8328();
          swift_release();
          result = swift_release();
        }
      }
      ++v16;
      if (v17 == v8)
        goto LABEL_28;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9067718(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  _BYTE v10[72];

  sub_1A93F92DC();
  a3(v10, a1, a2);
  v7 = sub_1A93F9324();
  return a4(a1, a2, v7);
}

unint64_t sub_1A9067790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1A93F90C0() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1A93F90C0() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1A9067870(uint64_t a1, uint64_t a2)
{
  return sub_1A9067718(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA2A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A9067790);
}

void sub_1A9067884()
{
  sub_1A905D274();
}

void sub_1A9067E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t os_feature_enable_use_optimized_predicate()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_up_next_with_modified_date_score()
{
  return _os_feature_enabled_impl();
}

uint64_t sub_1A9067F64(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_1A93F7D58();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7DB8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_workQueue);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v2;
  sub_1A9068BA8(a1, v13 + 24);
  aBlock[4] = sub_1A908A948;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_13_1;
  v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1A9068AA0((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9068B40);
  sub_1A93F7D88();
  v16[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v5, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

void sub_1A906817C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v21;

  sub_1A9068BA8(a1, (uint64_t)&v16);
  v3 = v1;
  v4 = *(void **)(v1 + 16);
  v5 = *(void **)(v3 + 24);
  v3 += 16;
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_BYTE *)(v3 + 32);
  sub_1A9068BA8(a1, v3);
  sub_1A9068AA0((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9068B40);
  sub_1A9068AD8(v4, v5, v6, v7, v8);
  if (qword_1ED2A4890 != -1)
    swift_once();
  v9 = sub_1A93F7698();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A87A8);
  sub_1A9068AA0((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9068B40);
  swift_retain();
  sub_1A9068AA0((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9068B40);
  swift_retain();
  v10 = sub_1A93F7674();
  v11 = sub_1A93F87B4();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    *(_DWORD *)v12 = 141558531;
    v21 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v12 + 12) = 2081;
    type metadata accessor for FeedUpdateRequest();
    v13 = sub_1A93F7170();
    v21 = sub_1A906436C(v13, v14, &v15);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 2082;
    sub_1A9068BA8(a1, (uint64_t)&v19);
    __asm { BR              X11 }
  }
  swift_release_n();
  sub_1A9068AA0((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9068AD8);
  sub_1A9068AA0((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9068AD8);

  sub_1A9068BA8(a1, (uint64_t)&v17);
  __asm { BR              X11 }
}

uint64_t sub_1A9068AA0(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

void sub_1A9068AD8(void *a1, id a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  switch(a5 >> 5)
  {
    case 0:
      sub_1A905F180((uint64_t)a1, (unint64_t)a2);
      break;
    case 1:

      break;
    case 2:
      swift_bridgeObjectRelease();
      break;
    case 3:

      break;
    case 4:
      sub_1A9230268(a1, (uint64_t)a2, a3, a4, a5 & 1);
      break;
    default:
      return;
  }
}

id sub_1A9068B40(id result, id a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  id v5;

  switch(a5 >> 5)
  {
    case 0:
      result = (id)sub_1A90D8068((uint64_t)result, (unint64_t)a2);
      break;
    case 1:
      result = result;
      break;
    case 2:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 3:
      v5 = result;
      result = a2;
      break;
    case 4:
      result = sub_1A9230248(result, (uint64_t)a2, a3, a4, a5 & 1);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A9068BA8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_1A9068BC0()
{
  __int128 *v0;
  uint64_t v1;
  _BYTE v2[80];

  sub_1A9068BA8(v0, (uint64_t)&v1);
  sub_1A9068BA8(v0, (uint64_t)v2);
  __asm { BR              X11 }
}

uint64_t sub_1A9068C38()
{
  return 0x20737365636F7250;
}

dispatch_source_t MT_makeDispatchSourceTypeVfs(dispatch_queue_t queue)
{
  return dispatch_source_create(MEMORY[0x1E0C80DD8], 0, 0x7204uLL, queue);
}

uint64_t sub_1A9069170@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + *MEMORY[0x1E0DEC528]) - 8) + 16))(a2, v3);
}

uint64_t sub_1A90691CC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

ValueMetadata *type metadata accessor for EpisodeStateChanges()
{
  return &type metadata for EpisodeStateChanges;
}

uint64_t SubscriptionOffer.AppType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9069240 + 4 * byte_1A940C4AB[*v0]))(0x636973756DLL, 0xE500000000000000);
}

uint64_t sub_1A9069240()
{
  return 1937204590;
}

uint64_t sub_1A9069250()
{
  return 30324;
}

uint64_t sub_1A906925C()
{
  return 0x6C616E7265747865;
}

id sub_1A9069274(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  return *a2;
}

id sub_1A90692CC(uint64_t a1, uint64_t a2, char a3)
{
  void *v4;
  _BYTE *v5;
  void *v6;

  sub_1A9069320();
  v4 = (void *)swift_allocError();
  *v5 = a3;
  v6 = (void *)sub_1A93F711C();

  return v6;
}

unint64_t sub_1A9069320()
{
  unint64_t result;

  result = qword_1ED2A6350;
  if (!qword_1ED2A6350)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for FeedUpdaterError, &type metadata for FeedUpdaterError);
    atomic_store(result, (unint64_t *)&qword_1ED2A6350);
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeStateModel()
{
  return &type metadata for EpisodeStateModel;
}

uint64_t getEnumTagSinglePayload for PendingPlaybackMetadata(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t MediaStreamedAssetCache.init(sourceURL:cacheLocation:purgeability:)(uint64_t a1, uint64_t a2, int a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  int v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  unint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  _QWORD v53[4];
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t ObjectType;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v4 = v3;
  LODWORD(v66) = a3;
  v68 = a2;
  v74 = *MEMORY[0x1E0C80C00];
  ObjectType = swift_getObjectType();
  v54 = type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  MEMORY[0x1E0C80A78](v54);
  v57 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1A93F7E9C();
  v53[2] = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v59 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7EA8();
  v53[1] = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v53[0] = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F8088();
  v64 = *(_QWORD *)(v10 - 8);
  v65 = v10;
  MEMORY[0x1E0C80A78](v10);
  v63 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F726C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v55 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v56 = (char *)v53 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v53 - v21;
  MEMORY[0x1E0C80A78](v23);
  v67 = (char *)v53 - v24;
  v69 = v4;
  v25 = sub_1A93F7164();
  v27 = v26;
  v71 = a1;
  v72 = sub_1A93F7170();
  v73 = v28;
  sub_1A90828B0();
  sub_1A93F8B14();
  v30 = v29;
  swift_bridgeObjectRelease();
  if (v30)
  {
    swift_bridgeObjectRetain();
    sub_1A93F7248();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v31(v22, v71, v15);
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  v61 = v16;
  if (v32 == 1)
  {
    v33 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v34 = v67;
    v33(v67, v22, v15);
    sub_1A905FD54((uint64_t)v14, &qword_1ED2AD3D0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
    v35 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v34 = v67;
    v35(v67, v14, v15);
  }
  v36 = v15;
  v37 = v69;
  v38 = &v69[OBJC_IVAR___PFMediaStreamedAssetCache_sourceURL];
  v70 = v36;
  ((void (*)(char *, char *))v31)(&v69[OBJC_IVAR___PFMediaStreamedAssetCache_sourceURL], v34);
  v39 = sub_1A93F7164();
  v41 = v40;
  swift_bridgeObjectRelease();
  v42 = HIBYTE(v41) & 0xF;
  if ((v41 & 0x2000000000000000) == 0)
    v42 = v39 & 0xFFFFFFFFFFFFLL;
  v53[3] = v8;
  v58 = v38;
  if (v42)
  {
    swift_bridgeObjectRelease();
    v25 = sub_1A93F7164();
    v27 = v43;
  }
  v44 = (uint64_t *)&v37[OBJC_IVAR___PFMediaStreamedAssetCache_pathExtension];
  *v44 = v25;
  v44[1] = v27;
  v45 = &v37[OBJC_IVAR___PFMediaStreamedAssetCache_cacheLocation];
  v46 = v68;
  v47 = v70;
  v31(&v37[OBJC_IVAR___PFMediaStreamedAssetCache_cacheLocation], v68, v70);
  *(_DWORD *)&v37[OBJC_IVAR___PFMediaStreamedAssetCache_purgeability] = v66;
  sub_1A93F7170();
  v48 = v63;
  sub_1A93F807C();
  sub_1A93F804C();
  v50 = v49;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v48, v65);
  if (v50 >> 60 != 15)
  {
    sub_1A9066CA8(&qword_1ED2AD1E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9A18], MEMORY[0x1E0CA9A10]);
    sub_1A93F7E78();
    __asm { BR              X10 }
  }
  v51 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
  v51(v46, v47);
  v51(v71, v47);
  v51((uint64_t)v34, v47);
  v51((uint64_t)v58, v47);
  swift_bridgeObjectRelease();
  v51((uint64_t)v45, v47);

  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1A9069D94(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v6;
  void (*v7)(void *, unint64_t, void *, void *);
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;

  v6 = a2;
  v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v8 = v6;
    v6 = (void *)sub_1A93F72B4();
    v10 = v9;

  }
  else
  {
    swift_retain();
    v10 = 0xF000000000000000;
  }
  v11 = a3;
  v12 = a4;
  v7(v6, v10, a3, a4);

  sub_1A9069F9C((uint64_t)v6, v10);
  return swift_release();
}

uint64_t sub_1A9069F9C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1A905F180(a1, a2);
  return a1;
}

void _s18PodcastsFoundation14RSSFeedUpdaterC24didDownloadFeedWithError_4data4task12requestedUrl18useBackgroundFetchys0I0_pSg_0B04DataVSgSo16NSURLSessionTaskCSgAK3URLVSgSbtF_0(void *a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void (*v26)(char *, char *, uint64_t);
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  void *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD aBlock[7];

  v53 = a2;
  v54 = a3;
  v55 = a4;
  v7 = sub_1A93F7D58();
  v51 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F7DB8();
  v57 = *(_QWORD *)(v10 - 8);
  v58 = v10;
  MEMORY[0x1E0C80A78](v10);
  v56 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F726C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v45 - v20;
  sub_1A906A3F0(a5, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1A914149C((uint64_t)v14);
    if (qword_1ED2A4890 != -1)
      swift_once();
    v22 = sub_1A93F7698();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED2A87A8);
    v23 = sub_1A93F7674();
    v24 = sub_1A93F879C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1A904E000, v23, v24, "Tried to perform an RSS feed update without a URL.", v25, 2u);
      MEMORY[0x1AF41411C](v25, -1, -1);
    }

  }
  else
  {
    v46 = a1;
    v26 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v50 = v21;
    v26(v21, v14, v15);
    v27 = v52;
    v49 = *(_QWORD *)&v52[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_workQueue];
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
    v28 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v47 = v9;
    v48 = v7;
    v29 = (v17 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
    v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = v27;
    v26((char *)(v32 + v28), v19, v15);
    v33 = v46;
    *(_QWORD *)(v32 + v29) = v46;
    v34 = (uint64_t *)(v32 + v30);
    v36 = v53;
    v35 = v54;
    *v34 = v53;
    v34[1] = v35;
    v37 = v55;
    *(_QWORD *)(v32 + v31) = v55;
    aBlock[4] = sub_1A908B200;
    aBlock[5] = v32;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_93;
    v38 = _Block_copy(aBlock);
    v39 = v27;
    v40 = v33;
    sub_1A906A3DC(v36, v35);
    v41 = v37;
    v42 = v56;
    sub_1A93F7D88();
    v59 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
    v44 = v47;
    v43 = v48;
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v42, v44, v38);
    _Block_release(v38);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v44, v43);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v42, v58);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v50, v15);
    swift_release();
  }
}

uint64_t sub_1A906A3DC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1A90D8068(a1, a2);
  return a1;
}

uint64_t sub_1A906A3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1A906A438(uint64_t a1, unint64_t a2, int a3, void *a4)
{
  uint64_t v4;

  sub_1A906A444(a1, a2, a3, a4, *(void (**)(id, unint64_t, uint64_t))(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

void sub_1A906A444(uint64_t a1, unint64_t a2, int a3, id a4, void (*a5)(id, unint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v10;
  uint64_t v13;
  _BYTE *v14;
  id v15;

  if (a2 >> 60 == 15)
  {
    if (a4)
    {
      v10 = a4;
    }
    else
    {
      v13 = type metadata accessor for ForegroundSessionSource.SourceError(0, a7, a8, 0);
      MEMORY[0x1AF414014](&protocol conformance descriptor for ForegroundSessionSource<A>.SourceError, v13);
      v10 = (id)swift_allocError();
      *v14 = 1;
    }
    v15 = a4;
    a5(v10, 0, 1);

  }
  else
  {
    sub_1A90D8068(a1, a2);
    a5((id)a1, a2, 0);
    sub_1A9069F9C(a1, a2);
  }
}

void sub_1A906A528(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    sub_1A905F180((uint64_t)a1, a2);
}

uint64_t sub_1A906A534(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return sub_1A906A578(a1, a2, a3 & 1, *(uint64_t (**)(_QWORD *))(v3 + 16));
}

uint64_t sub_1A906A540(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD *);
  _QWORD v6[2];
  char v7;

  v4 = *(uint64_t (**)(_QWORD *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  v7 = a3 & 1;
  return v4(v6);
}

uint64_t sub_1A906A578(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(_QWORD *))
{
  _QWORD v5[2];
  char v6;

  v5[0] = a1;
  v5[1] = a2;
  v6 = a3 & 1;
  return a4(v5);
}

uint64_t destroy for EpisodeStateChanges()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t storeEnumTagSinglePayload for PlayerArtwork.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A906A630 + 4 * byte_1A94227FD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A906A664 + 4 * byte_1A94227F8[v4]))();
}

uint64_t sub_1A906A664(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A906A66C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A906A674);
  return result;
}

uint64_t sub_1A906A680(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A906A688);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A906A68C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A906A694(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_43(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_45(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_46(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_47(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_49(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_51(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_52(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_53(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_55(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_56(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_57(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_59(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_61(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_62(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_63(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_65(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_66(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_67(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_69(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_71(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_72(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_73(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_75(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_76(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_77(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_79(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_81(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_82(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_83(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_85(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_86(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_87(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_89(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_91(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_92(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

id FairPlayKeyLoading.receive(on:)(void *a1)
{
  uint64_t v1;
  objc_class *v3;
  char *v4;
  id v5;
  objc_super v7;

  v3 = (objc_class *)type metadata accessor for DispatchingFairPlayKeyLoading();
  v4 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v4[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance] = v1;
  *(_QWORD *)&v4[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_responseQueue] = a1;
  v7.receiver = v4;
  v7.super_class = v3;
  v5 = a1;
  swift_unknownObjectRetain();
  return objc_msgSendSuper2(&v7, sel_init);
}

id FairPlayInvalidationManager.init()()
{
  objc_class *ObjectType;
  id v1;
  uint64_t v2;
  id v3;

  ObjectType = (objc_class *)swift_getObjectType();
  v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FairPlayKeyLoader()), sel_init);
  type metadata accessor for CoreDataFairPlayEpisodeDataFetcher();
  v2 = swift_allocObject();
  v3 = sub_1A93BDACC(v1, v2, (char *)objc_allocWithZone(ObjectType));

  swift_release();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t type metadata accessor for FairPlayKeyLoader()
{
  return objc_opt_self();
}

id sub_1A906AF34(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char *v11;
  void *v12;
  char *v13;
  objc_class *v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  objc_class *v19;
  char *v20;
  id v21;
  id v22;
  char *v23;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  objc_class *ObjectType;
  objc_super v32;
  objc_super v33;
  _QWORD v34[5];
  objc_super v35;

  v29 = a2;
  v30 = a3;
  v28 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v27 = sub_1A93F885C();
  v5 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F8808();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v10);
  v26 = OBJC_IVAR___PFFairPlayValidationManager_internalQueue;
  v25 = sub_1A9066C6C();
  v11 = a4;
  sub_1A93F7D7C();
  v34[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v9, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D0], v27);
  v12 = (void *)sub_1A93F888C();
  *(_QWORD *)&a4[v26] = v12;
  v13 = &v11[OBJC_IVAR___PFFairPlayValidationManager____lazy_storage___logPrefix];
  v14 = (objc_class *)type metadata accessor for DispatchingFairPlayKeyLoading();
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v15 = (char *)objc_allocWithZone(v14);
  v16 = v28;
  *(_QWORD *)&v15[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance] = v28;
  *(_QWORD *)&v15[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_responseQueue] = v12;
  v35.receiver = v15;
  v35.super_class = v14;
  v17 = v12;
  v18 = v16;
  *(_QWORD *)&v11[OBJC_IVAR___PFFairPlayValidationManager_keyLoader] = objc_msgSendSuper2(&v35, sel_init);
  *(_QWORD *)&v11[OBJC_IVAR___PFFairPlayValidationManager_episodeRemovalManager] = v29;
  v34[3] = type metadata accessor for CoreDataFairPlayEpisodeDataFetcher();
  v34[4] = &off_1E54F44F0;
  v34[0] = v30;
  v19 = (objc_class *)type metadata accessor for DispatchingFairPlayEpisodeDataFetching();
  v20 = (char *)objc_allocWithZone(v19);
  sub_1A905DC3C((uint64_t)v34, (uint64_t)&v20[OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance]);
  *(_QWORD *)&v20[OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_responseQueue] = v17;
  v33.receiver = v20;
  v33.super_class = v19;
  v21 = v17;
  swift_unknownObjectRetain();
  swift_retain();
  v22 = objc_msgSendSuper2(&v33, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);

  v23 = &v11[OBJC_IVAR___PFFairPlayValidationManager_episodeFetcher];
  *((_QWORD *)v23 + 3) = v19;
  *((_QWORD *)v23 + 4) = &off_1E54ED678;
  *(_QWORD *)v23 = v22;

  v32.receiver = v11;
  v32.super_class = ObjectType;
  return objc_msgSendSuper2(&v32, sel_init);
}

uint64_t type metadata accessor for CoreDataFairPlayEpisodeDataFetcher()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DispatchingFairPlayKeyLoading()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DispatchingFairPlayEpisodeDataFetching()
{
  return objc_opt_self();
}

uint64_t LibraryEntity.description.getter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v5;

  if (a3)
  {
    if (a3 != 1)
    {
      v5 = 0x2D6C656E6E616843;
      sub_1A915997C();
      sub_1A93F8B38();
      sub_1A93F810C();
      swift_bridgeObjectRelease();
      return v5;
    }
    v3 = 0x2D776F6853;
  }
  else
  {
    v3 = 0x2D65646F73697045;
  }
  v5 = v3;
  sub_1A93F810C();
  return v5;
}

id static OS_os_log.downloads.getter()
{
  return sub_1A9069274(&qword_1ED2AC4B0, (id *)&qword_1ED2AC308);
}

void sub_1A906B39C()
{
  sub_1A905D688();
}

uint64_t Optional<A>.isEmpty.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;

  v1 = a1;
  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
  {
    v8 = sub_1A93F86C4();
    v2 = v7;
    v1 = v6;
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v8 & 1;
}

uint64_t sub_1A906B494(uint64_t a1)
{
  return sub_1A905D4C4(a1);
}

uint64_t Trace.start(interval:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(a5 + 24))(a1, a2, a3, 0, 0, a4, a5);
}

uint64_t sub_1A906B4D0()
{
  sub_1A906B4F0();
  return swift_deallocClassInstance();
}

uint64_t sub_1A906B4F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 88) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 136);
  v2 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1A906B554(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

uint64_t sub_1A906B650(unint64_t a1)
{
  uint64_t v1;

  if (a1 > 1)
    return 0;
  swift_retain();
  v1 = sub_1A906B6C4();
  swift_release();
  return v1;
}

uint64_t sub_1A906B6C4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD v3[6];

  (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD))(v0[8] + 8))(v3, v0[6], v0[2], v0[3]);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC800);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
  if ((swift_dynamicCast() & 1) != 0 && v3[5] != 1)
    return v3[4];
  v1 = v0[4];
  swift_bridgeObjectRetain();
  return v1;
}

double sub_1A906B76C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v4 = (void *)sub_1A93F8010();
  v5 = objc_msgSend(a1, sel_stringForKey_, v4);

  if (v5)
  {
    v6 = sub_1A93F8040();
    v8 = v7;

    *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];
    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v8;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t dispatch thunk of TraceInterval.end(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1A906B804@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A906B81C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1A906B81C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v9 = sub_1A93F726C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v8, v9);
  sub_1A905FD54((uint64_t)v8, &qword_1ED2AD3D0);
  v12 = type metadata accessor for ForegroundSessionSource.SourceError(0, a1, a2, v11);
  MEMORY[0x1AF414014](&protocol conformance descriptor for ForegroundSessionSource<A>.SourceError, v12);
  swift_allocError();
  *v13 = 0;
  return swift_willThrow();
}

Swift::Bool __swiftcall AssetCache.containsAny(of:)(Swift::OpaquePointer of)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  sub_1A906BA04(v3, v1, v2);
  swift_getAssociatedTypeWitness();
  v4 = sub_1A93F83D0();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v4);
  v5 = sub_1A93F8244();
  swift_release();
  return v5 & 1;
}

uint64_t (*sub_1A906BA04(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_1A906E1EC;
}

uint64_t static OS_os_log.libraryLoadingSignpost.getter()
{
  sub_1A906BB20();
  return sub_1A93F8A78();
}

unint64_t sub_1A906BB20()
{
  unint64_t result;

  result = qword_1ED2AD6D0;
  if (!qword_1ED2AD6D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2AD6D0);
  }
  return result;
}

_QWORD *CoreDataEpisodeAndShowStorage.init(context:)(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v17 = a1;
  v3 = sub_1A93F8988();
  v18 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A90F8);
  swift_allocObject();
  v6 = sub_1A93F798C();
  v19 = v6;
  sub_1A9066D74(&qword_1ED2A90F0, &qword_1ED2A90F8, MEMORY[0x1E0C95F48]);
  swift_retain();
  v19 = sub_1A93F7BF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8C68);
  sub_1A9066D74(&qword_1ED2A8C60, &qword_1ED2A8C68, MEMORY[0x1E0C95AA0]);
  v7 = sub_1A93F7B24();
  swift_release();
  swift_release();
  v2[2] = v6;
  v2[3] = v7;
  swift_allocObject();
  v8 = sub_1A93F798C();
  v19 = v8;
  swift_retain();
  v19 = sub_1A93F7BF0();
  v9 = sub_1A93F7B24();
  swift_release();
  swift_release();
  v2[4] = v8;
  v2[5] = v9;
  v2[6] = 0;
  v2[7] = 0;
  v10 = v17;
  v2[8] = v17;
  v2[9] = 0;
  v11 = (void *)objc_opt_self();
  v12 = v10;
  v13 = objc_msgSend(v11, sel_defaultCenter);
  sub_1A93F8994();

  sub_1A906C07C();
  swift_retain();
  v14 = sub_1A93F7D04();

  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v3);
  v2[9] = v14;
  swift_release();
  return v2;
}

_QWORD *Cache.init(invalidateOnAppBackground:)(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  __CFString *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  __CFString *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;

  v2 = v1;
  v4 = (_QWORD *)*v1;
  v5 = sub_1A93F8988();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v4[10];
  v10 = v4[11];
  v11 = v4[12];
  v12 = sub_1A93F7EB4();
  v2[3] = 0;
  v2[4] = 0;
  v2[2] = v12;
  if ((a1 & 1) != 0)
  {
    v13 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    v14 = CFSTR("MTApplicationDidEnterBackgroundNotification");
    sub_1A93F897C();
    v15 = swift_allocObject();
    swift_weakInit();
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = v9;
    v16[3] = v10;
    v16[4] = v11;
    v16[5] = v15;
    sub_1A906C07C();
    v17 = sub_1A93F7D04();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v2[3] = v17;
    swift_release();
  }
  v18 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v19 = CFSTR("MTApplicationDidReceiveMemoryWarningNotification");
  sub_1A93F897C();
  v20 = swift_allocObject();
  swift_weakInit();
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v9;
  v21[3] = v10;
  v21[4] = v11;
  v21[5] = v20;
  sub_1A906C07C();
  v22 = sub_1A93F7D04();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v2[4] = v22;
  swift_release();
  return v2;
}

unint64_t sub_1A906C07C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2A41D8;
  if (!qword_1ED2A41D8)
  {
    v1 = sub_1A93F8988();
    result = MEMORY[0x1AF414014](MEMORY[0x1E0CB1F20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2A41D8);
  }
  return result;
}

uint64_t sub_1A906C0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14[4];

  v5 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain_n();
  v7 = sub_1A906C1F0(v6);
  swift_bridgeObjectRelease();
  v14[0] = (uint64_t)v7;
  sub_1A906C710(v14);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v14[0] + 16);
  if (v8)
  {
    v9 = *(_QWORD *)(v14[0] + 8 * v8 + 24);
    swift_release();
    v10 = v9 + 1;
  }
  else
  {
    swift_release();
    v10 = 1;
  }
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v5;
  *v5 = 0x8000000000000000;
  sub_1A906C2E8(a1, a2, v10, isUniquelyReferenced_nonNull_native);
  *v5 = v13;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return v10;
}

_QWORD *sub_1A906C1F0(uint64_t a1)
{
  return sub_1A906C204(a1, (uint64_t *)&unk_1ED2A44B0, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1A90C18FC);
}

_QWORD *sub_1A906C204(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = (_QWORD *)swift_allocObject();
  v7 = _swift_stdlib_malloc_size(v6);
  v8 = v7 - 32;
  if (v7 < 32)
    v8 = v7 - 25;
  v6[2] = v3;
  v6[3] = 2 * (v8 >> 3);
  v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_1A9120240();
  if (v9 != v3)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v6;
}

uint64_t sub_1A906C2E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1A906C424(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1A930BE14();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_release();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1A906C460(result, a4 & 1);
  result = sub_1A906C424(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

unint64_t sub_1A906C428(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A93F92D0();
  return sub_1A9093584(a1, v2);
}

uint64_t sub_1A906C460(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  __int128 v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A96A0);
  result = sub_1A93F8E80();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v29 = -1 << v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v30 = 1 << *(_BYTE *)(v5 + 32);
    v31 = v3;
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v13)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v31;
                goto LABEL_40;
              }
              if (v30 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v29;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v13)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v20);
      v32 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_1A93F92D0();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v32;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A906C710(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A90BF3A8(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A906C778(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A906C778(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_1A93F9054();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_QWORD *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = *(_QWORD *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v79 + v82 + 8) = v83;
          *(_QWORD *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_1A91CFC24((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_1A9234330((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1A93F837C();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_QWORD *)(v10 + 8 * v9);
      v15 = *(_QWORD *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_QWORD *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_QWORD *)(v10 + 8 * v19);
              *(_QWORD *)(v10 + 8 * v19) = *(_QWORD *)(v10 + 8 * v18);
              *(_QWORD *)(v10 + 8 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        v23 = *(_QWORD *)(v10 + 8 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (v23 >= *v25)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1A9233E0C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_1A9233E0C((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_1A91CFC24((char *)(v10 + 8 * *(_QWORD *)v71), (char *)(v10 + 8 * *(_QWORD *)v74), v10 + 8 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AlbumStringBuilder()
{
  return objc_opt_self();
}

uint64_t static AlbumStringBuilder.albumString(podcastTitle:episodeNumber:seasonNumber:isSerialType:pubDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  return sub_1A90A18F8(a3, a4, a5, a6);
}

ValueMetadata *type metadata accessor for SubscriptionOffer.AppType()
{
  return &type metadata for SubscriptionOffer.AppType;
}

void sub_1A906CE44()
{
  JUMPOUT(0x1AF414014);
}

void sub_1A906CE54()
{
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A906CE64()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A93F76D4();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EpisodeBookmarkState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A906CF78 + 4 * byte_1A940ED45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A906CFAC + 4 * byte_1A940ED40[v4]))();
}

uint64_t sub_1A906CFAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A906CFB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A906CFBCLL);
  return result;
}

uint64_t sub_1A906CFC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A906CFD0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A906CFD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A906CFDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t EpisodeStateRepository.publisherForChanges(in:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[4];
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A3FF8);
  v17 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A3FC8);
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4008);
  v19 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *a1;
  v12 = *(_QWORD *)(*(_QWORD *)(v1
                              + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository_episodeStatePersistentHistoryTracker)
                  + 16);
  v20 = *(_QWORD *)(v1 + 24);
  v21 = v12;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4068);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4088);
  sub_1A9066D74(&qword_1ED2A4060, &qword_1ED2A4068, MEMORY[0x1E0C95D90]);
  sub_1A9066D74(&qword_1ED2A4080, &qword_1ED2A4088, MEMORY[0x1E0C95F48]);
  sub_1A93F7800();
  *(_BYTE *)(swift_allocObject() + 16) = v16;
  sub_1A9066D74(&qword_1ED2A3FF0, &qword_1ED2A3FF8, MEMORY[0x1E0C95A60]);
  sub_1A93F7B84();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v5, v3);
  sub_1A9066D74(&qword_1ED2A3FC0, &qword_1ED2A3FC8, MEMORY[0x1E0C95950]);
  sub_1A93F7C08();
  (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v8, v6);
  sub_1A9066D74(&qword_1ED2A4000, &qword_1ED2A4008, MEMORY[0x1E0C95AD0]);
  v13 = sub_1A93F7B24();
  (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v11, v9);
  return v13;
}

void sub_1A906D2B8(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_1A906D2C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1A93F7698();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1A93F7680();
}

BOOL sub_1A906D338(_QWORD *a1)
{
  if (*(_QWORD *)(*a1 + 16))
    return 1;
  if (*(_QWORD *)(a1[1] + 16))
    return 1;
  return *(_QWORD *)(a1[2] + 16) != 0;
}

uint64_t sub_1A906D374@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1A90586C8(a1, *(_BYTE *)(v2 + 16), a2);
}

ValueMetadata *type metadata accessor for EpisodeDownloadState()
{
  return &type metadata for EpisodeDownloadState;
}

unint64_t static ArtworkInfoConstants.episodeArtwork.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static ArtworkInfoConstants.uberArtwork.getter()
{
  return 0xD000000000000019;
}

unint64_t static ArtworkInfoConstants.showArtwork.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1A906D3E0()
{
  swift_getAssociatedTypeWitness();
  return sub_1A93F8004() & 1;
}

uint64_t destroy for SignpostTrace(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1A93F762C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t PlayerArtwork.template.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___IMPlayerArtwork_template);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t dispatch thunk of PlayerArtwork.asData()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t static Podcasts.areTranscriptsEnabled.getter()
{
  return sub_1A90A41E4(20);
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t NSUserDefaults.timestampPublisher(forKey:)(void *a1, void *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;

  v40[2] = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F8988();
  v41 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4058);
  v12 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  v43 = v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4788);
  v16 = *(_QWORD *)(v15 - 8);
  v45 = v15;
  v46 = v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5970);
  v50 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v44 = (char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5998);
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v21 = (char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v2;
  v22[3] = a1;
  v40[1] = a2;
  v22[4] = a2;
  v23 = (void *)objc_opt_self();
  v24 = v2;
  swift_bridgeObjectRetain_n();
  v40[0] = v24;
  v25 = objc_msgSend(v23, sel_defaultCenter);
  sub_1A93F8994();

  sub_1A9066C6C();
  v51 = (id)sub_1A93F8868();
  v26 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v7, 1, 1, v26);
  sub_1A9066CA8((unint64_t *)&qword_1ED2A41D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  sub_1A9066CA8((unint64_t *)&qword_1ED2A1C90, (uint64_t (*)(uint64_t))sub_1A9066C6C, MEMORY[0x1E0DEF7F8]);
  sub_1A93F7C80();
  sub_1A90C0C1C((uint64_t)v7);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v8);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_1A906E530;
  *(_QWORD *)(v27 + 24) = v22;
  sub_1A9066D74(&qword_1ED2A4050, &qword_1ED2A4058, MEMORY[0x1E0C95CB8]);
  swift_retain();
  v28 = v42;
  sub_1A93F7B84();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC938);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1A9405520;
  v30 = (void *)sub_1A93F8010();
  v31 = v40[0];
  objc_msgSend(v40[0], sel_doubleForKey_, v30);
  v33 = v32;

  *(_QWORD *)(v29 + 32) = v33;
  sub_1A9066D74(&qword_1ED2A59D0, &qword_1ED2A4788, MEMORY[0x1E0C95950]);
  v35 = v44;
  v34 = v45;
  sub_1A93F7C68();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v18, v34);
  sub_1A9066D74(&qword_1ED2A5968, &qword_1ED2A5970, MEMORY[0x1E0C95788]);
  v36 = v48;
  sub_1A93F7CE0();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v36);
  v37 = (void *)sub_1A906DA68();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v49);
  v51 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5A38);
  sub_1A9066D74(&qword_1ED2A5A30, &qword_1ED2A5A38, MEMORY[0x1E0C95D90]);
  v38 = sub_1A93F7B24();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v38;
}

uint64_t sub_1A906DA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A59C8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5940);
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5998);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9350);
  sub_1A9066D74(&qword_1ED2A5990, &qword_1ED2A5998, MEMORY[0x1E0C958E0]);
  sub_1A93F7B84();
  v13 = 0;
  v14 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5A58);
  swift_allocObject();
  sub_1A93F79EC();
  sub_1A9066D74(&qword_1ED2A59C0, &qword_1ED2A59C8, MEMORY[0x1E0C95950]);
  sub_1A9066D74(&qword_1ED2A5A50, &qword_1ED2A5A58, MEMORY[0x1E0C95FB0]);
  v7 = sub_1A93F7CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v13 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5A08);
  sub_1A9066D74(&qword_1ED2A5A00, &qword_1ED2A5A08, MEMORY[0x1E0C95C98]);
  v8 = sub_1A93F79F8();
  swift_release();
  v13 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5960);
  sub_1A9066D74(&qword_1ED2A5958, &qword_1ED2A5960, MEMORY[0x1E0C95768]);
  sub_1A93F7B30();
  swift_release();
  sub_1A9066D74(&qword_1ED2A5938, &qword_1ED2A5940, MEMORY[0x1E0C95708]);
  v9 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v4);
  return v9;
}

uint64_t sub_1A906DD20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A3FA8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A3F58);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A3F38);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A2890);
  sub_1A9066D74(&qword_1ED2A3F30, &qword_1ED2A3F38, MEMORY[0x1E0C95708]);
  sub_1A93F7B84();
  v13 = 0;
  v14 = 0;
  v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4098);
  swift_allocObject();
  sub_1A93F79EC();
  sub_1A9066D74(&qword_1ED2A3FA0, &qword_1ED2A3FA8, MEMORY[0x1E0C95950]);
  sub_1A9066D74(&qword_1ED2A4090, &qword_1ED2A4098, MEMORY[0x1E0C95FB0]);
  v8 = sub_1A93F7CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v13 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4038);
  sub_1A9066D74(&qword_1ED2A4030, &qword_1ED2A4038, MEMORY[0x1E0C95C98]);
  v9 = sub_1A93F79F8();
  swift_release();
  v13 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A3F68);
  sub_1A9066D74(&qword_1ED2A3F60, &qword_1ED2A3F68, MEMORY[0x1E0C95768]);
  sub_1A93F7B30();
  swift_release();
  sub_1A9066D74(&qword_1ED2A3F50, &qword_1ED2A3F58, MEMORY[0x1E0C95708]);
  v10 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10;
}

uint64_t getEnumTagSinglePayload for EpisodeStateModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 91))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1A906E018()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1A906E034()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A906E0C8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A906E0D0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  return sub_1A906E0E8(v3);
}

uint64_t sub_1A906E0E8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1A906E120()
{
  type metadata accessor for AssetSourceStep();
}

void sub_1A906E158(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  sub_1A90795B8(v1 + ((v2 + 48) & ~v2));
}

os_log_t _MTLogCategoryMediaRemote()
{
  return os_log_create("com.apple.podcasts", "MediaRemote");
}

uint64_t sub_1A906E1BC()
{
  swift_release();
  return swift_release();
}

uint64_t dispatch thunk of static EpisodeState.defaultState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1A906E1EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 24) + 40))() & 1;
}

uint64_t sub_1A906E228(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(unsigned __int8 *)(v2 + 56), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t getEnumTagSinglePayload for PlayButtonTimeFormatHelper(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 11))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 10);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

_QWORD *sub_1A906E298(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void sub_1A906E3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A906E410(a1, a2, *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16), (uint64_t)&unk_1E54EB258, (uint64_t)sub_1A9097F60, (uint64_t)&block_descriptor_51_0);
}

void sub_1A906E410(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v16;
  void *v17;
  id v18;
  _QWORD v19[6];

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = a4;
  v16[6] = a5;
  v16[7] = a3;
  v19[4] = a8;
  v19[5] = v16;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = sub_1A908A91C;
  v19[3] = a9;
  v17 = _Block_copy(v19);
  swift_retain();
  swift_retain();
  v18 = a3;
  swift_release();
  objc_msgSend(v18, sel_performBlock_, v17);
  _Block_release(v17);
}

double sub_1A906E4F8@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;
  double v4;

  (*(void (**)(double *__return_ptr))(v1 + 16))(&v4);
  result = v4;
  *a1 = v4;
  return result;
}

void sub_1A906E530(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(void **)(v1 + 16);
  v4 = (void *)sub_1A93F8010();
  objc_msgSend(v3, sel_doubleForKey_, v4);
  v6 = v5;

  *a1 = v6;
}

uint64_t static Logger.modernPlayback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A87A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A8780, a1);
}

uint64_t sub_1A906E5B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A906E5EC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    v3 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

uint64_t sub_1A906E638(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MediaStreamedAssetCache.StreamPhase(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1EEAB99E0);
}

void *sub_1A906E690(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1A93F726C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t AssetURLSessionProtocol.eraseToAnySession()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v3;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;

  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v9, v3, a1, v7);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return AnyAssetBackgroundSession.init<A>(session:)((uint64_t)v9, AssociatedTypeWitness, a1, a2, a3);
}

uint64_t sub_1A906E800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void **v8;
  void *v9;
  _QWORD *v10;
  _QWORD *v11;
  id v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v8;
  *v7 = *v8;
  v10 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
  v12 = v9;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t AnyAssetBackgroundSession.init<A>(session:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)()@<X8>)
{
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t result;

  v10 = *(_QWORD *)(a3 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a2;
  *((_QWORD *)v12 + 3) = a3;
  *((_QWORD *)v12 + 4) = a4;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 32))(&v12[v11], a1, a3);
  *a5 = sub_1A935AFDC;
  a5[1] = (uint64_t (*)())v12;
  return result;
}

uint64_t type metadata accessor for ShazamSignatureRequest()
{
  uint64_t result;

  result = qword_1ED2A56A8;
  if (!qword_1ED2A56A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for TTMLRequest()
{
  uint64_t result;

  result = qword_1ED2A5578;
  if (!qword_1ED2A5578)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static Logger.widget.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(qword_1ED2AC920, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2AC908, a1);
}

ValueMetadata *type metadata accessor for PendingPlaybackMetadata()
{
  return &type metadata for PendingPlaybackMetadata;
}

uint64_t sub_1A906E9D8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t storeEnumTagSinglePayload for DeferredLaunchTaskCoordinator._DeferredTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A906EA20(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;

  v3 = v2;
  v61 = a2;
  v60 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v4);
  v57 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A48A0);
  v47 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8C98);
  v51 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v45 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A8E08);
  v53 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v48 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8CA8);
  v56 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v49 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8F80);
  v59 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v54 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v2[OBJC_IVAR___PFDownloadConsistency_environment];
  v44 = &v2[OBJC_IVAR___PFDownloadConsistency_environment];
  v13 = (uint64_t)&v2[OBJC_IVAR___PFDownloadConsistency_identifier];
  swift_beginAccess();
  sub_1A905DC3C(v13, (uint64_t)&v62);
  v14 = *((_QWORD *)&v63 + 1);
  v15 = v64;
  __swift_project_boxed_opaque_existential_1(&v62, *((uint64_t *)&v63 + 1));
  v69 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 8))(v12, v14, v15);
  sub_1A905DC3C((uint64_t)v3 + OBJC_IVAR___PFDownloadConsistency_resolutionStrategy, (uint64_t)&v68);
  v16 = swift_allocObject();
  sub_1A905D4AC(&v68, v16 + 16);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1A9359F88;
  *(_QWORD *)(v17 + 24) = v16;
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9018);
  type metadata accessor for DownloadConsistency.IssueResolution(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9008);
  v18 = MEMORY[0x1E0C95D90];
  sub_1A9066D74(&qword_1ED2A9010, &qword_1ED2A9018, MEMORY[0x1E0C95D90]);
  sub_1A9066D74(&qword_1ED2A9000, &qword_1ED2A9008, v18);
  sub_1A93F7C5C();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v62);
  sub_1A9066D74(&qword_1ED2A8D48, &qword_1ED2A48A0, MEMORY[0x1E0C95B78]);
  v19 = v45;
  v20 = v46;
  sub_1A93F7C08();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v20);
  v21 = (uint64_t)v44;
  sub_1A90708E8((uint64_t)v44, (uint64_t)&v62);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v3;
  v23 = v65;
  *(_OWORD *)(v22 + 56) = v64;
  *(_OWORD *)(v22 + 72) = v23;
  *(_OWORD *)(v22 + 88) = v66;
  *(_QWORD *)(v22 + 104) = v67;
  v24 = v63;
  *(_OWORD *)(v22 + 24) = v62;
  *(_OWORD *)(v22 + 40) = v24;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_1A93D3480;
  *(_QWORD *)(v25 + 24) = v22;
  v26 = v3;
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9068);
  sub_1A9066D74(&qword_1ED2A8C90, &qword_1ED2A8C98, MEMORY[0x1E0C95AD0]);
  sub_1A9066D74(&qword_1ED2A9060, &qword_1ED2A9068, MEMORY[0x1E0C95D90]);
  v27 = v48;
  v28 = v50;
  sub_1A93F7C50();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v19, v28);
  sub_1A9066D74(&qword_1ED2A8E00, (uint64_t *)&unk_1ED2A8E08, MEMORY[0x1E0C95B78]);
  v29 = v49;
  v30 = v52;
  sub_1A93F7C08();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v30);
  *(_QWORD *)&v62 = *(_QWORD *)(v21 + 80);
  v31 = (void *)v62;
  v32 = sub_1A93F882C();
  v33 = (uint64_t)v57;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v57, 1, 1, v32);
  sub_1A9066C6C();
  sub_1A9066D74(&qword_1ED2A8CA0, &qword_1ED2A8CA8, MEMORY[0x1E0C95AD0]);
  sub_1A9066CA8((unint64_t *)&qword_1ED2A1C90, (uint64_t (*)(uint64_t))sub_1A9066C6C, MEMORY[0x1E0DEF7F8]);
  v34 = v31;
  v35 = v54;
  v36 = v55;
  sub_1A93F7C80();
  sub_1A905FD54(v33, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v29, v36);
  v37 = swift_allocObject();
  v38 = v60;
  v39 = v61;
  *(_QWORD *)(v37 + 16) = v60;
  *(_QWORD *)(v37 + 24) = v39;
  sub_1A90858C0(v38);
  sub_1A9066D74(&qword_1ED2A8F78, &qword_1ED2A8F80, MEMORY[0x1E0C95CB8]);
  v40 = v58;
  v41 = sub_1A93F7BA8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v35, v40);
  *(_QWORD *)&v26[OBJC_IVAR___PFDownloadConsistency_listener] = v41;
  return swift_release();
}

uint64_t PaginatedPublisher.eraseToAnyPaginatedPublisher()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AnyPaginatedPublisherPrivate(0, a1, v6, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  v8 = swift_allocObject();
  (*(void (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v8 + 144) - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)v8 + 160), v5);
  return v8;
}

uint64_t sub_1A906F214(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 144) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 160), a1);
  return v2;
}

uint64_t type metadata accessor for AnyPaginatedPublisherPrivate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyPaginatedPublisherPrivate);
}

uint64_t sub_1A906F274(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A906F2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

id static OS_os_log.episodeStatesSignpost.getter()
{
  return sub_1A9069274(&qword_1ED2A42C0, (id *)&qword_1ED2A42B0);
}

id sub_1A906F330(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t sub_1A906F368(uint64_t a1)
{
  return sub_1A906E228(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A90A8C6C);
}

uint64_t sub_1A906F374()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC490);
  sub_1A9066D74((unint64_t *)&qword_1ED2A9328, &qword_1ED2AC490, MEMORY[0x1E0DEAF38]);
  return sub_1A93F7860();
}

uint64_t sub_1A906F3FC(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD v12[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8E20);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9228);
  swift_allocObject();
  swift_retain();
  v9 = a1;
  v12[1] = sub_1A93F7A94();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8EA0);
  sub_1A9066D74((unint64_t *)&unk_1ED2A9218, &qword_1ED2A9228, MEMORY[0x1E0C96108]);
  sub_1A9066D74((unint64_t *)&unk_1ED2A8E90, &qword_1ED2A8EA0, MEMORY[0x1E0C95C10]);
  sub_1A93F7C50();
  swift_release();
  sub_1A9066D74(&qword_1ED2A8E18, &qword_1ED2A8E20, MEMORY[0x1E0C95B78]);
  v10 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v10;
}

uint64_t PlayButtonTimeFormatHelper.formatStyle.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1A906F5B8(uint64_t a1)
{
  return sub_1A9086564(a1);
}

uint64_t type metadata accessor for DownloadConsistency.Issue(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1ED2A6AF0);
}

uint64_t EpisodeMediaType.rawValue.getter(char a1)
{
  if (!a1)
    return 0x6F69647561;
  if (a1 == 1)
    return 0x6F65646976;
  return 0x6C616E7265747865;
}

uint64_t dispatch thunk of static EpisodeState.episodeStateDomain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t type metadata accessor for AccountsUtil()
{
  return objc_opt_self();
}

uint64_t _s18PodcastsFoundation12AccountsUtilC25userAllowsPersonalizationSbvgZ_0()
{
  id v0;
  id v1;
  char v3;
  __int128 v4;
  __int128 v5;
  _BYTE v6[24];
  uint64_t v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  v1 = objc_msgSend(v0, sel_ams_activeiTunesAccount);

  if (!v1)
    return 0;
  if (objc_msgSend(v1, sel_ams_accountFlagValueForAccountFlag_, *MEMORY[0x1E0CFD790]))
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    v4 = 0u;
    v5 = 0u;
  }
  sub_1A90A4E08((uint64_t)&v4, (uint64_t)v6);
  if (v7)
  {
    if ((swift_dynamicCast() & 1) != 0 && (v3 & 1) == 0)
      goto LABEL_16;
  }
  else
  {
    sub_1A90A593C((uint64_t)v6);
  }
  if (objc_msgSend(v1, sel_ams_accountFlagValueForAccountFlag_, *MEMORY[0x1E0CFD798]))
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    v4 = 0u;
    v5 = 0u;
  }
  sub_1A90A4E08((uint64_t)&v4, (uint64_t)v6);
  if (v7)
  {
    if ((swift_dynamicCast() & 1) != 0 && v3 == 1)
    {
LABEL_16:

      return 0;
    }
  }
  else
  {
    sub_1A90A593C((uint64_t)v6);
  }
  if (objc_msgSend(v1, sel_ams_accountFlagValueForAccountFlag_, *MEMORY[0x1E0CFD788]))
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();

  }
  else
  {

    v4 = 0u;
    v5 = 0u;
  }
  sub_1A90A4E08((uint64_t)&v4, (uint64_t)v6);
  if (v7)
  {
    if ((swift_dynamicCast() & 1) != 0 && (v3 & 1) != 0)
      return 0;
  }
  else
  {
    sub_1A90A593C((uint64_t)v6);
  }
  return 1;
}

uint64_t AssetSource.eraseToAnyAssetSource()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)(uint64_t a1)@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v13;

  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, v3, a1);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = swift_getAssociatedTypeWitness();
  return AnyAssetSource.init<A>(source:)((uint64_t)v8, AssociatedTypeWitness, v11, a1, a2, a3);
}

uint64_t AnyAssetSource.init<A>(source:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)(uint64_t a1)@<X8>)
{
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t result;

  v12 = *(_QWORD *)(a4 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = a2;
  *((_QWORD *)v14 + 3) = a3;
  *((_QWORD *)v14 + 4) = a4;
  *((_QWORD *)v14 + 5) = a5;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32))(&v14[v13], a1, a4);
  *a6 = sub_1A9079824;
  a6[1] = (uint64_t (*)(uint64_t))v14;
  return result;
}

uint64_t AssetCache.eraseToAnyAssetCache()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v13;

  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, v3, a1);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = swift_getAssociatedTypeWitness();
  return AnyAssetCache.init<A>(source:)((uint64_t)v8, AssociatedTypeWitness, v11, a1, a2, a3);
}

uint64_t AnyAssetCache.init<A>(source:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)()@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t (*v19)();
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t (*v27)();
  uint64_t result;
  uint64_t (**v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *);
  uint64_t (**v35)();
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v32 = a3;
  v33 = a1;
  v35 = a6;
  v10 = *(_QWORD *)(a4 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *(void (**)(char *))(v10 + 16);
  v34(v12);
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = (v13 + 48) & ~v13;
  v38 = v14 + v11;
  v39 = v14;
  v37 = v13 | 7;
  v15 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v15 + 2) = a2;
  *((_QWORD *)v15 + 3) = a3;
  *((_QWORD *)v15 + 4) = a4;
  *((_QWORD *)v15 + 5) = a5;
  v16 = a5;
  v30 = a5;
  v36 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v36((char *)v15 + v14, v12, a4);
  v18 = v33;
  v17 = (void (*)(char *, uint64_t, uint64_t))v34;
  ((void (*)(char *, uint64_t, uint64_t))v34)(v12, v33, a4);
  v19 = (uint64_t (*)())swift_allocObject();
  v20 = a2;
  v31 = a2;
  v21 = v32;
  *((_QWORD *)v19 + 2) = a2;
  *((_QWORD *)v19 + 3) = v21;
  *((_QWORD *)v19 + 4) = a4;
  *((_QWORD *)v19 + 5) = v16;
  v36((char *)v19 + v39, v12, a4);
  v22 = v18;
  v17(v12, v18, a4);
  v23 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v23 + 2) = v20;
  *((_QWORD *)v23 + 3) = v21;
  v24 = v30;
  *((_QWORD *)v23 + 4) = a4;
  *((_QWORD *)v23 + 5) = v24;
  v25 = v39;
  v26 = (void (*)(char *, uint64_t, uint64_t))v36;
  v36((char *)v23 + v39, v12, a4);
  v26(v12, v22, a4);
  v27 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v27 + 2) = v31;
  *((_QWORD *)v27 + 3) = v21;
  *((_QWORD *)v27 + 4) = a4;
  *((_QWORD *)v27 + 5) = v24;
  result = ((uint64_t (*)(char *, char *, uint64_t))v26)((char *)v27 + v25, v12, a4);
  v29 = v35;
  *v35 = sub_1A9390A1C;
  v29[1] = v15;
  v29[2] = sub_1A9390A58;
  v29[3] = v19;
  v29[4] = sub_1A9390A94;
  v29[5] = v23;
  v29[6] = sub_1A9390AD4;
  v29[7] = v27;
  return result;
}

uint64_t getEnumTagSinglePayload for BaseFeedResponse.ParsedResponseCache(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

void sub_1A906FD4C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_1A906FDC0(void *a1, void *a2)
{
  uint64_t v2;

  sub_1A906FDC8(a1, a2, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

void sub_1A906FDC8(void *a1, id a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;
  id v6;
  id v8;
  void *v9;
  id v10;
  id v11;

  if (a1)
  {
    type metadata accessor for LocalSnapshotBag();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    v6 = a1;
    a3(v5, 0);
    swift_release();
  }
  else
  {
    if (a2)
    {
      v8 = a2;
    }
    else
    {
      v9 = (void *)sub_1A93F8010();
      v8 = (id)AMSError();

    }
    v10 = a2;
    v11 = v8;
    a3((uint64_t)v8, 1);

  }
}

uint64_t type metadata accessor for LocalSnapshotBag()
{
  return objc_opt_self();
}

void sub_1A906FEDC()
{
  unint64_t v0;

  sub_1A9070064();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

void sub_1A906FFD0()
{
  unint64_t v0;

  sub_1A9070064();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

void sub_1A9070064()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED2A3EB0)
  {
    sub_1A93F75FC();
    v0 = sub_1A93F8A90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED2A3EB0);
  }
}

uint64_t AVAssetsInLibraryIssueIdentifier.startIdentifyingIssues(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD v58[5];
  uint64_t v59;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1A93F726C();
  MEMORY[0x1E0C80A78](v40);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9160);
  v41 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8F10);
  v44 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8D10);
  v49 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8E30);
  v13 = *(_QWORD *)(v12 - 8);
  v50 = v12;
  v51 = v13;
  MEMORY[0x1E0C80A78](v12);
  v43 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8BA8);
  v16 = *(_QWORD *)(v15 - 8);
  v52 = v15;
  v53 = v16;
  MEMORY[0x1E0C80A78](v15);
  v45 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8C88);
  v56 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v46 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A8BE0);
  v57 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v48 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend((id)objc_opt_self(), sel_libraryDirectory);
  sub_1A93F7200();

  sub_1A93F7A58();
  *(_QWORD *)&v58[0] = *(_QWORD *)(a1 + 80);
  v21 = *(void **)&v58[0];
  v22 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v4, 1, 1, v22);
  sub_1A9066C6C();
  sub_1A9066D74(&qword_1ED2A9158, &qword_1ED2A9160, MEMORY[0x1E0C960B0]);
  sub_1A905FD90();
  v23 = v21;
  sub_1A93F7C80();
  sub_1A90C0C1C((uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v5);
  sub_1A90708E8(a1, (uint64_t)v58);
  v24 = swift_allocObject();
  v25 = v58[3];
  *(_OWORD *)(v24 + 48) = v58[2];
  *(_OWORD *)(v24 + 64) = v25;
  *(_OWORD *)(v24 + 80) = v58[4];
  *(_QWORD *)(v24 + 96) = v59;
  v26 = v58[1];
  *(_OWORD *)(v24 + 16) = v58[0];
  *(_OWORD *)(v24 + 32) = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
  sub_1A9066D74(&qword_1ED2A8F08, &qword_1ED2A8F10, MEMORY[0x1E0C95CB8]);
  v27 = v42;
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v27);
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8EC0);
  sub_1A9066D74(&qword_1ED2A8D08, &qword_1ED2A8D10, MEMORY[0x1E0C95B48]);
  sub_1A9066D74(&qword_1ED2A8EB8, &qword_1ED2A8EC0, MEMORY[0x1E0C95C10]);
  v28 = v43;
  v29 = v47;
  sub_1A93F7C50();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v29);
  sub_1A9066D74(&qword_1ED2A8E28, &qword_1ED2A8E30, MEMORY[0x1E0C95B78]);
  v30 = v45;
  v31 = v50;
  sub_1A93F7B84();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v31);
  v32 = MEMORY[0x1E0C95950];
  sub_1A9066D74(&qword_1ED2A8BA0, &qword_1ED2A8BA8, MEMORY[0x1E0C95950]);
  v33 = v46;
  v34 = v52;
  sub_1A93F7C08();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v34);
  type metadata accessor for DownloadConsistency.Issue(0);
  sub_1A9066D74(&qword_1ED2A8C80, &qword_1ED2A8C88, MEMORY[0x1E0C95AD0]);
  v35 = v48;
  v36 = v54;
  sub_1A93F7B84();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v36);
  sub_1A9066D74(&qword_1ED2A8BD8, (uint64_t *)&unk_1ED2A8BE0, v32);
  v37 = v55;
  v38 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v35, v37);
  return v38;
}

ValueMetadata *type metadata accessor for AnyEpisodeDownloadStateRule()
{
  return &type metadata for AnyEpisodeDownloadStateRule;
}

ValueMetadata *type metadata accessor for PlayButtonTimeFormatHelper()
{
  return &type metadata for PlayButtonTimeFormatHelper;
}

BOOL static PlayButtonTimeFormatHelper.WidgetCountDownSizeRestrictingHelper.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t type metadata accessor for EpisodeStateController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EpisodeStateController);
}

uint64_t StorageChangeStream.receive<A>(subscriber:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for StorageChangeStream.StorageChange(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  return sub_1A93F78F0();
}

uint64_t type metadata accessor for StorageChangeStream.StorageChange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StorageChangeStream.StorageChange);
}

uint64_t EpisodeStateChanges.updated.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A90708E8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DownloadEnvironment(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for DownloadEnvironment(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  void *v6;
  id v7;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = v6;
  return a1;
}

uint64_t sub_1A907098C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v31;
  BOOL v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  os_log_type_t v50;
  NSObject *v51;
  uint8_t *v52;
  uint64_t result;
  unint64_t v54;
  uint64_t v55;
  uint64_t i;
  id v57;
  void *v58;
  Swift::OpaquePointer v59;
  _QWORD *v60;
  _QWORD *v61;
  __int128 v62;
  uint64_t v63;
  unint64_t v64;
  id v65;
  id v66;
  void *v67;
  uint64_t v68;
  char *v69;
  double v70;
  double v71;
  void (*v72)(char *, uint64_t);
  id v73;
  char *v74;
  char *v75;
  NSObject *v76;
  NSObject *v77;
  os_log_type_t v78;
  _BOOL4 v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  void *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  double v89;
  double v90;
  char *v91;
  uint64_t v92;
  char **v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  char v101;
  uint64_t v102;
  ValueMetadata *v103;
  unint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  NSObject *v110;
  NSObject *v111;
  os_log_type_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  char v122;
  uint64_t v123;
  ValueMetadata *v124;
  unint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  __int128 v130;
  uint64_t v131;
  char *v132;
  void (*v133)(char *, uint64_t);
  void (*v134)(char *, uint64_t, uint64_t);
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  id v139;
  char *v140;
  unint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  id v147;
  id v148;
  unint64_t aBlock;
  uint64_t v150;
  uint64_t (*v151)(uint64_t);
  ValueMetadata *v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;

  v128 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v129 = (char *)&v126 - v11;
  v145 = sub_1A93F738C();
  v144 = *(_QWORD *)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  v143 = (char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A93F7698();
  v14 = *(_QWORD **)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v132 = (char *)&v126 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v137 = (char *)&v126 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (unint64_t)&v126 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v126 - v22;
  swift_beginAccess();
  v24 = MEMORY[0x1AF41420C](a1 + 16);
  if (!v24)
  {
    if (qword_1ED2AC4B8 != -1)
      goto LABEL_117;
    goto LABEL_44;
  }
  v25 = (char *)v24;
  if (qword_1ED2AC4B8 != -1)
    goto LABEL_62;
  while (1)
  {
    v26 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A1E40);
    swift_beginAccess();
    v27 = (void (*)(char *, uint64_t, uint64_t))v14[2];
    v135 = v26;
    v134 = v27;
    v27(v23, v26, v13);
    v28 = sub_1A93F7674();
    v29 = sub_1A93F87B4();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_1A904E000, v28, v29, "Updating subscribed channels from server objects.", v30, 2u);
      MEMORY[0x1AF41411C](v30, -1, -1);
    }

    v133 = (void (*)(char *, uint64_t))v14[1];
    v133(v23, v13);
    v142 = v13;
    v136 = v25;
    v127 = v9;
    v126 = a4;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v23 = (char *)sub_1A93F8E5C();
    }
    else
    {
      v23 = *(char **)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v146 = a2;
    if (!v23)
      break;
    v140 = (char *)objc_opt_self();
    v139 = (id)objc_opt_self();
    a4 = 0;
    v141 = a2 & 0xC000000000000001;
    v131 = a2 & 0xFFFFFFFFFFFFFF8;
    *(_QWORD *)&v130 = a2 + 32;
    v138 = v23;
    while (1)
    {
      if (v141)
      {
        v31 = (id)MEMORY[0x1AF4129DC](a4, a2);
        v32 = __OFADD__(a4, 1);
        a4 = (uint64_t *)((char *)a4 + 1);
        if (v32)
          goto LABEL_59;
      }
      else
      {
        if ((unint64_t)a4 >= *(_QWORD *)(v131 + 16))
          goto LABEL_61;
        v31 = *(id *)(v130 + 8 * (_QWORD)a4);
        v32 = __OFADD__(a4, 1);
        a4 = (uint64_t *)((char *)a4 + 1);
        if (v32)
        {
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
      }
      v23 = (char *)v31;
      v33 = objc_msgSend(v139, sel_sharedInstance);
      v34 = objc_msgSend(v33, sel_privateQueueContext);

      v35 = objc_msgSend(v140, sel_createOrFindChannelFromFeedChannelItem_personalizedRequest_context_, v23, 1, v34);
      v36 = *(_QWORD *)&v23[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes];
      v37 = *(_QWORD *)(v36 + 152) ? *(_QWORD *)(v36 + 152) : MEMORY[0x1E0DEE9D8];
      v38 = *(_QWORD *)(v36 + 120) ? *(_QWORD *)(v36 + 120) : MEMORY[0x1E0DEE9D8];
      aBlock = v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A9136690(v38);
      a2 = aBlock;
      if (aBlock >> 62)
      {
        swift_bridgeObjectRetain();
        v9 = sub_1A93F8E5C();
      }
      else
      {
        v9 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      v147 = v23;
      v148 = v35;
      if (v9)
        break;
      v40 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_38:
      swift_bridgeObjectRelease_n();
      if (*((_QWORD *)v40 + 2))
      {
        v45 = v40[32];
        swift_bridgeObjectRelease();
        __asm { BR              X8 }
      }
      a2 = v146;
      v23 = v138;
      v46 = v148;
      swift_bridgeObjectRelease();
      objc_msgSend(v46, sel_setSubscriptionOfferAppType_, 0);

      if (a4 == (uint64_t *)v23)
        goto LABEL_42;
    }
    if (v9 >= 1)
    {
      v39 = 0;
      v25 = (char *)(a2 + 32);
      v40 = (char *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        if ((a2 & 0xC000000000000001) != 0)
        {
          v41 = MEMORY[0x1AF4129DC](v39++, a2);
          v14 = (_QWORD *)*(unsigned __int8 *)(v41 + 208);
          swift_unknownObjectRelease();
          if ((_DWORD)v14 != 4)
            goto LABEL_33;
        }
        else
        {
          v42 = *(_QWORD *)&v25[8 * v39++];
          v14 = (_QWORD *)*(unsigned __int8 *)(v42 + 208);
          if ((_DWORD)v14 != 4)
          {
LABEL_33:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v40 = sub_1A91188C0(0, *((_QWORD *)v40 + 2) + 1, 1, v40);
            v44 = *((_QWORD *)v40 + 2);
            v43 = *((_QWORD *)v40 + 3);
            v13 = v44 + 1;
            if (v44 >= v43 >> 1)
              v40 = sub_1A91188C0((char *)(v43 > 1), v44 + 1, 1, v40);
            *((_QWORD *)v40 + 2) = v13;
            v40[v44 + 32] = (char)v14;
          }
        }
        if (v39 == v9)
          goto LABEL_38;
      }
    }
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    swift_once();
  }
LABEL_42:
  swift_bridgeObjectRelease();
  v47 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v48 = objc_msgSend(v47, sel_privateQueueContext);

  sub_1A9072534(0, (unint64_t *)&unk_1ED2A4250);
  v54 = sub_1A93F89DC();

  aBlock = MEMORY[0x1E0DEE9D8];
  if (v54 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1A93F8E5C();
    v55 = result;
    if (result)
      goto LABEL_49;
  }
  else
  {
    v55 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v55)
    {
LABEL_49:
      if (v55 < 1)
      {
        __break(1u);
        return result;
      }
      for (i = 0; i != v55; ++i)
      {
        if ((v54 & 0xC000000000000001) != 0)
          v57 = (id)MEMORY[0x1AF4129DC](i, v54);
        else
          v57 = *(id *)(v54 + 8 * i + 32);
        v58 = v57;
        if (objc_msgSend(v57, sel_subscriptionActive, v126))
        {
          sub_1A93F8D60();
          sub_1A93F8D90();
          sub_1A93F8D9C();
          sub_1A93F8D6C();
        }
        else
        {

        }
      }
      v14 = 0;
      swift_bridgeObjectRelease();
      v59._rawValue = (void *)aBlock;
      goto LABEL_66;
    }
  }
  v14 = 0;
  swift_bridgeObjectRelease();
  v59._rawValue = (void *)MEMORY[0x1E0DEE9D8];
LABEL_66:
  v60 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v61 = v136;
  v140 = *(char **)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v136) + 0xC8);
  swift_retain();
  InterestRepository.unsafeFavoriteExistingEntitledChannelsIfNeeded(entitledChannels:)(v59);
  swift_release();
  swift_release();
  if (!v55)
  {

    return swift_bridgeObjectRelease();
  }
  v131 = (uint64_t)(v126 + 2);
  v63 = *v60 & *v61;
  v64 = v54 & 0xC000000000000001;
  v126 = &v150;
  v138 = *(char **)(v63 + 160);
  v13 = 4;
  *(_QWORD *)&v62 = 141558275;
  v130 = v62;
  v147 = (id)v54;
  v65 = 0;
  v128 = v55;
  v139 = (id)(v54 & 0xC000000000000001);
  while (1)
  {
    v20 = v13 - 4;
    v66 = v64 ? (id)MEMORY[0x1AF4129DC](v13 - 4, v54) : *(id *)(v54 + 8 * v13);
    v67 = v66;
    v68 = v13 - 3;
    if (__OFADD__(v20, 1))
      break;
    v69 = v143;
    sub_1A93F7380();
    sub_1A93F72D8();
    v71 = v70;
    v72 = *(void (**)(char *, uint64_t))(v144 + 8);
    v72(v69, v145);
    objc_msgSend(v67, sel_setLastPersonalizedRequestDate_, v71, v126);
    swift_bridgeObjectRetain();
    v73 = v67;
    v20 = sub_1A92C3218(a2, v73);
    swift_bridgeObjectRelease();

    if (v20 >> 62)
    {
      if (sub_1A93F8E5C())
      {
LABEL_76:
        v148 = v65;
        if ((v20 & 0xC000000000000001) != 0)
        {
          v74 = (char *)MEMORY[0x1AF4129DC](0, v20);
        }
        else
        {
          if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_116;
          v74 = (char *)*(id *)(v20 + 32);
        }
        v75 = v74;
        swift_bridgeObjectRelease();
        if (!objc_msgSend(v73, sel_subscriptionActive))
        {
          v134(v137, v135, v142);
          v76 = v73;
          v77 = sub_1A93F7674();
          v78 = sub_1A93F87B4();
          v79 = os_log_type_enabled(v77, v78);
          v141 = (unint64_t)v75;
          if (v79)
          {
            v80 = swift_slowAlloc();
            *(_DWORD *)v80 = v130;
            aBlock = 1752392040;
            sub_1A93F8AA8();
            *(_WORD *)(v80 + 12) = 2049;
            aBlock = (unint64_t)-[NSObject storeId](v76, sel_storeId);
            v75 = (char *)v141;
            sub_1A93F8AA8();

            _os_log_impl(&dword_1A904E000, v77, v78, "Setting channel %{private,mask.hash}lld to subscribed", (uint8_t *)v80, 0x16u);
            MEMORY[0x1AF41411C](v80, -1, -1);
          }
          else
          {

            v77 = v76;
          }
          v81 = (uint64_t)v129;

          v133(v137, v142);
          if (!*(_QWORD *)(*(_QWORD *)&v75[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes] + 88))
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 56))(v81, 1, 1, v145);
            goto LABEL_91;
          }
          if (qword_1ED2A93B0 != -1)
            swift_once();
          v82 = (void *)qword_1ED2A93A8;
          v83 = (void *)sub_1A93F8010();
          v84 = objc_msgSend(v82, sel_dateFromString_, v83);

          if (v84)
          {
            v85 = v127;
            sub_1A93F7368();

            v86 = 0;
          }
          else
          {
            v86 = 1;
            v85 = v127;
          }
          v87 = v144;
          v88 = v145;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 56))(v85, v86, 1, v145);
          sub_1A90A13C8(v85, v81);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v81, 1, v88) == 1)
          {
LABEL_91:
            sub_1A905FD54(v81, (uint64_t *)&unk_1ED2AD360);
            v89 = 0.0;
          }
          else
          {
            sub_1A93F72D8();
            v89 = v90;
            v72((char *)v81, v145);
          }
          v91 = v136;
          objc_msgSend(*(id *)&v138[(_QWORD)v136], sel_unsafeHandleSubscriptionChangeForChannel_subscriptionBecameActive_subscriptionEnabledDate_, v76, 1, v89);
          v92 = *(_QWORD *)&v140[(_QWORD)v91];
          swift_retain();
          v93 = &selRef_setHour_;
          v94 = (uint64_t)-[NSObject storeId](v76, sel_storeId);
          v152 = &type metadata for Podcasts;
          v95 = sub_1A90A4238();
          v153 = v95;
          LOBYTE(aBlock) = 39;
          v96 = sub_1A93F7500();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
          if ((v96 & 1) != 0)
          {
            v97 = *(void **)(*(_QWORD *)(v92 + 16) + 16);
            v98 = swift_allocObject();
            swift_weakInit();
            v99 = swift_allocObject();
            *(_QWORD *)(v99 + 16) = v98;
            *(_QWORD *)(v99 + 24) = v94 & ~(v94 >> 63);
            v153 = (unint64_t)sub_1A918CCBC;
            v154 = v99;
            aBlock = MEMORY[0x1E0C809B0];
            v150 = 1107296256;
            v151 = sub_1A908A91C;
            v152 = (ValueMetadata *)&block_descriptor_73;
            v100 = _Block_copy(&aBlock);
            swift_release();
            objc_msgSend(v97, sel_performBlock_, v100);
            _Block_release(v100);
            v152 = &type metadata for Podcasts;
            v153 = v95;
            LOBYTE(aBlock) = 44;
            v101 = sub_1A93F7500();
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
            if ((v101 & 1) != 0)
            {
              v102 = *(_QWORD *)(v92 + 24) + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
              swift_beginAccess();
              sub_1A905DC3C(v102, (uint64_t)&aBlock);
              v103 = v152;
              v104 = v153;
              __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v152);
              (*(void (**)(uint64_t, ValueMetadata *, unint64_t))(v104 + 280))(1, v103, v104);
              __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
            }
            swift_release();
            v55 = v128;
            v93 = &selRef_setHour_;
          }
          else
          {
            swift_release();
          }
          v105 = (void *)v141;
          v106 = (uint64_t)objc_msgSend(v76, v93[257]);
          aBlock = v106 & ~(v106 >> 63);
          sub_1A915997C();
          v107 = sub_1A93F8B38();
          v109 = v108;
          v14 = (_QWORD *)v131;
          swift_beginAccess();
          sub_1A9091D1C(&v155, v107, v109);
          swift_endAccess();

          swift_bridgeObjectRelease();
          a2 = v146;
          v65 = v148;
LABEL_109:
          v64 = (unint64_t)v139;
          goto LABEL_69;
        }

        v65 = v148;
        goto LABEL_69;
      }
    }
    else if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_76;
    }
    swift_bridgeObjectRelease();
    if ((objc_msgSend(v73, sel_subscriptionActive) & 1) != 0)
    {
      v134(v132, v135, v142);
      v110 = v73;
      v111 = sub_1A93F7674();
      v112 = sub_1A93F87B4();
      if (os_log_type_enabled(v111, v112))
      {
        v113 = swift_slowAlloc();
        *(_DWORD *)v113 = v130;
        *(_QWORD *)(v113 + 4) = 1752392040;
        *(_WORD *)(v113 + 12) = 2049;
        *(_QWORD *)(v113 + 14) = -[NSObject storeId](v110, sel_storeId);

        _os_log_impl(&dword_1A904E000, v111, v112, "Setting channel %{private,mask.hash}lld to not subscribed", (uint8_t *)v113, 0x16u);
        MEMORY[0x1AF41411C](v113, -1, -1);
      }
      else
      {

        v111 = v110;
      }

      v133(v132, v142);
      v114 = v136;
      objc_msgSend(*(id *)&v138[(_QWORD)v136], sel_unsafeHandleSubscriptionChangeForChannel_subscriptionBecameActive_subscriptionEnabledDate_, v110, 0, 0.0);
      v14 = *(_QWORD **)&v140[(_QWORD)v114];
      swift_retain();
      v115 = (uint64_t)-[NSObject storeId](v110, sel_storeId);
      v152 = &type metadata for Podcasts;
      v116 = sub_1A90A4238();
      v153 = v116;
      LOBYTE(aBlock) = 39;
      v117 = sub_1A93F7500();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
      if ((v117 & 1) == 0)
      {

        swift_release();
        a2 = v146;
        v64 = (unint64_t)v139;
        goto LABEL_69;
      }
      v148 = v65;
      v118 = *(void **)(v14[2] + 16);
      v119 = swift_allocObject();
      swift_weakInit();
      v120 = swift_allocObject();
      *(_QWORD *)(v120 + 16) = v119;
      *(_QWORD *)(v120 + 24) = v115 & ~(v115 >> 63);
      v153 = (unint64_t)sub_1A918CCC4;
      v154 = v120;
      aBlock = MEMORY[0x1E0C809B0];
      v150 = 1107296256;
      v151 = sub_1A908A91C;
      v152 = (ValueMetadata *)&block_descriptor_80;
      v121 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v118, sel_performBlock_, v121);
      _Block_release(v121);
      v152 = &type metadata for Podcasts;
      v153 = v116;
      LOBYTE(aBlock) = 44;
      v122 = sub_1A93F7500();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
      if ((v122 & 1) != 0)
      {
        v123 = v14[3] + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
        swift_beginAccess();
        sub_1A905DC3C(v123, (uint64_t)&aBlock);
        v124 = v152;
        v125 = v153;
        __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v152);
        (*(void (**)(uint64_t, ValueMetadata *, unint64_t))(v125 + 280))(1, v124, v125);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
      }

      swift_release();
      a2 = v146;
      v65 = v148;
      v55 = v128;
      goto LABEL_109;
    }

LABEL_69:
    ++v13;
    v54 = (unint64_t)v147;
    if (v68 == v55)
    {

      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  swift_once();
LABEL_44:
  v49 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  ((void (*)(unint64_t, uint64_t, uint64_t))v14[2])(v20, v49, v13);
  v50 = sub_1A93F879C();
  v51 = sub_1A93F7674();
  if (os_log_type_enabled(v51, v50))
  {
    v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v52 = 0;
    _os_log_impl(&dword_1A904E000, v51, v50, "Could not unwrap self in PurchaseController. Cannot update subscriptions.", v52, 2u);
    MEMORY[0x1AF41411C](v52, -1, -1);
  }

  return ((uint64_t (*)(unint64_t, uint64_t))v14[1])(v20, v13);
}

uint64_t sub_1A9071D2C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1A9071D70()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_1A93F738C();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1A9071E08()
{
  return swift_allocateGenericValueMetadata();
}

ValueMetadata *type metadata accessor for TranscriptModel()
{
  return &type metadata for TranscriptModel;
}

uint64_t sub_1A9071E20()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F726C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1A9071EB0()
{
  sub_1A93F92DC();
  sub_1A9071EEC();
  return sub_1A93F9324();
}

uint64_t sub_1A9071EEC()
{
  return sub_1A93F92E8();
}

uint64_t NSManagedObjectContext.performAndPublish<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A927E224(a1, a2, a3);
}

void sub_1A9071F3C()
{
  JUMPOUT(0x1AF414014);
}

void sub_1A9071F4C()
{
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A9071F5C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_1A93F8A90();
    if (v2 <= 0x3F)
    {
      result = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
          return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPodcastStateDataSource.State()
{
  return &type metadata for LibraryPodcastStateDataSource.State;
}

uint64_t type metadata accessor for FetchedResultsListPublisher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FetchedResultsListPublisher);
}

ValueMetadata *type metadata accessor for AnyEpisodePlayStateRule()
{
  return &type metadata for AnyEpisodePlayStateRule;
}

ValueMetadata *type metadata accessor for EpisodeStateIdentifier()
{
  return &type metadata for EpisodeStateIdentifier;
}

uint64_t sub_1A90720B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();

  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for AnyPaginatedPublisher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyPaginatedPublisher);
}

uint64_t EpisodeBookmarkState.isEpisodeBookmarked.getter(char a1)
{
  return a1 & 1;
}

uint64_t type metadata accessor for StorageChangeStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StorageChangeStream);
}

_QWORD *sub_1A907212C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t EpisodeStateChanges.inserted.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EpisodeStateChanges.deleted.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for DownloadConsistency.IssueResolution(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1ED2A6A60);
}

uint64_t storeEnumTagSinglePayload for EpisodeStateModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 90) = 0;
    *(_WORD *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 91) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 91) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t EpisodeStateModel.ids.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A9072200()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t dispatch thunk of static EpisodeState.state(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

id static OS_dispatch_queue.automaticAssetManagement.getter()
{
  return sub_1A906F330(&qword_1ED2A93D8, (id *)&qword_1ED2A93C8);
}

uint64_t Publisher.emitSignpostEvent(log:name:)(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v12 = sub_1A93F7770();
  v21 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a5;
  *(_QWORD *)(v15 + 24) = a6;
  *(_QWORD *)(v15 + 32) = a1;
  *(_QWORD *)(v15 + 40) = a2;
  *(_QWORD *)(v15 + 48) = a3;
  *(_BYTE *)(v15 + 56) = a4;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a5;
  *(_QWORD *)(v16 + 24) = a6;
  *(_QWORD *)(v16 + 32) = a1;
  *(_QWORD *)(v16 + 40) = a2;
  *(_QWORD *)(v16 + 48) = a3;
  *(_BYTE *)(v16 + 56) = a4;
  v17 = a1;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  MEMORY[0x1AF414014](MEMORY[0x1E0C957C0], v12);
  v18 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v12);
  return v18;
}

id sub_1A90723F4(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  char *v6;
  id v7;
  uint64_t v8;
  objc_super v10;

  v3 = OBJC_IVAR___MTSecureDownloadRenewalManager_analyticsChannel;
  v4 = objc_allocWithZone((Class)PFCoreAnalyticsChannel);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  v6 = &v5[OBJC_IVAR___MTSecureDownloadRenewalManager_bugReporter];
  v7 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  *((_QWORD *)v6 + 3) = sub_1A9072534(0, &qword_1ED2A9380);
  *((_QWORD *)v6 + 4) = &protocol witness table for PFAutoBugCaptureBugReporter;
  *(_QWORD *)v6 = v7;
  v8 = OBJC_IVAR___MTSecureDownloadRenewalManager_delegate;
  *(_QWORD *)&v5[OBJC_IVAR___MTSecureDownloadRenewalManager_delegate] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader] = 0;
  v5[OBJC_IVAR___MTSecureDownloadRenewalManager_removalLock] = 0;
  v5[OBJC_IVAR___MTSecureDownloadRenewalManager_renewalLock] = 0;
  *(_QWORD *)&v5[v8] = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)&v5[OBJC_IVAR___MTSecureDownloadRenewalManager_metadataLoader] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MediaItemMetadataLoader()), sel_init);

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for SecureDownloadRenewalManager();
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t sub_1A9072534(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for SecureDownloadRenewalManager()
{
  return objc_opt_self();
}

PodcastsFoundation::PlayButtonTimeFormatHelper_optional __swiftcall PlayButtonTimeFormatHelper.init(timeLeft:duration:)(Swift::Double_optional timeLeft, Swift::Double_optional duration)
{
  double v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v9;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  char v15;
  int v16;
  int v17;
  int v18;
  PodcastsFoundation::PlayButtonTimeFormatHelper_optional result;

  v5 = v4;
  if (!duration.is_nil)
  {
    v6 = *(_QWORD *)&timeLeft.is_nil;
    v7 = *(double *)&timeLeft.is_nil;
    if (*(double *)&timeLeft.is_nil >= 0.0 && (v3 & 1) == 0)
    {
      v9 = v2;
      if (v2 > 0.0)
      {
        if (*(double *)&timeLeft.is_nil <= 59.0 || v2 < 240.0)
        {
          v11 = 0;
          v12 = 0;
        }
        else
        {
          if (qword_1ED2AD260 != -1)
            swift_once();
          if (sub_1A93F7044() == 49 && v14 == 0xE100000000000000)
          {
            *(_QWORD *)&timeLeft.is_nil = swift_bridgeObjectRelease();
          }
          else
          {
            v15 = sub_1A93F90C0();
            *(_QWORD *)&timeLeft.is_nil = swift_bridgeObjectRelease();
            if ((v15 & 1) == 0)
            {
              if (v7 >= 4200.0)
                v17 = 5;
              else
                v17 = 4;
              if (v7 >= 3600.0)
                v18 = v17;
              else
                v18 = 2;
              if (v7 >= 600.0)
                v11 = v18;
              else
                v11 = 1;
              v12 = 1;
              goto LABEL_39;
            }
          }
          if (v7 >= 6000.0)
            v16 = 3;
          else
            v16 = 2;
          if (v7 >= 600.0)
            v11 = v16;
          else
            v11 = 1;
          v12 = 2;
        }
LABEL_39:
        timeLeft.value = 240.0;
        v13 = v12 | (v11 << 8) | ((v9 >= 240.0) << 16);
        goto LABEL_15;
      }
    }
  }
  v6 = 0;
  v13 = 0x20000;
LABEL_15:
  *(_QWORD *)v5 = v6;
  *(_WORD *)(v5 + 8) = v13;
  *(_BYTE *)(v5 + 10) = BYTE2(v13);
  result.value.timeLeft = timeLeft.value;
  result.value.formatStyle = timeLeft.is_nil;
  return result;
}

uint64_t getEnumTagSinglePayload for LibraryEntity(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t type metadata accessor for ForegroundSessionSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ForegroundSessionSource);
}

uint64_t dispatch thunk of EpisodeStateController.stateMachine(for:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v3 + 216))(a1, a2, a3 & 1);
}

uint64_t sub_1A90727FC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t (**v31)(uint64_t, char);
  void *v32;
  id v33;
  id v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _QWORD v39[2];
  uint64_t v40;
  void *v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD aBlock[6];

  v40 = a7;
  v41 = a4;
  v42 = a5;
  v11 = *a5;
  v12 = *MEMORY[0x1E0DEEDD8];
  v13 = sub_1A93F7D58();
  v47 = *(_QWORD *)(v13 - 8);
  v48 = v13;
  MEMORY[0x1E0C80A78](v13);
  v46 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F7DB8();
  v44 = *(_QWORD *)(v15 - 8);
  v45 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v43 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a6 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  v22 = qword_1ED2A93C0;
  swift_retain();
  if (v22 != -1)
    swift_once();
  v23 = v12 & v11;
  v39[1] = qword_1ED2A93B8;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), a3, a6);
  v24 = (*(unsigned __int8 *)(v18 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v25 = (v19 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = (char *)swift_allocObject();
  v28 = v40;
  *((_QWORD *)v27 + 2) = a6;
  *((_QWORD *)v27 + 3) = v28;
  *((_QWORD *)v27 + 4) = *(_QWORD *)(v23 + 104);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v27[v24], v20, a6);
  v30 = v41;
  v29 = v42;
  *(_QWORD *)&v27[v25] = v41;
  *(_QWORD *)&v27[v26] = v29;
  v31 = (uint64_t (**)(uint64_t, char))&v27[(v26 + 15) & 0xFFFFFFFFFFFFFFF8];
  *v31 = sub_1A908CDAC;
  v31[1] = (uint64_t (*)(uint64_t, char))v21;
  aBlock[4] = sub_1A908CD1C;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_5;
  v32 = _Block_copy(aBlock);
  v33 = v30;
  v34 = v29;
  v35 = v43;
  sub_1A93F7D88();
  v49 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  v36 = v46;
  v37 = v48;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v35, v36, v32);
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v37);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v45);
  return swift_release();
}

uint64_t dispatch thunk of EpisodeStateMachine.currentState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of EpisodeStateMachine.addStateTransitionObserver(_:action:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t EpisodeStateDomain.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7461745379616C70;
  if (*v0 != 1)
    v1 = 0x6B72616D6B6F6F62;
  if (*v0)
    return v1;
  else
    return 0x64616F6C6E776F64;
}

uint64_t getEnumTagSinglePayload for TranscriptModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t os_feature_enabled_red_sun()
{
  return 1;
}

uint64_t sub_1A9072C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  NSObject *v46;
  int v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  os_log_type_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  void *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  id v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t aBlock[6];
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v79 = a4;
  v78 = a3;
  v4 = sub_1A93F7D58();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7DB8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = result;
    v72 = v11;
    v73 = v9;
    v74 = v8;
    v75 = v7;
    v76 = v5;
    v77 = v4;
    sub_1A93F8040();
    v14 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
    v15 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v14, sel_initWithEntityName_, v15);

    v17 = objc_msgSend((id)objc_opt_self(), sel_predicateForNotHiddenPodcasts);
    objc_msgSend(v16, sel_setPredicate_, v17);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A48C8);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1A940BE60;
    v19 = sub_1A93F8040();
    v20 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v18 + 32) = v19;
    *(_QWORD *)(v18 + 40) = v21;
    v22 = sub_1A93F8040();
    *(_QWORD *)(v18 + 88) = v20;
    *(_QWORD *)(v18 + 64) = v22;
    *(_QWORD *)(v18 + 72) = v23;
    v24 = sub_1A93F8040();
    *(_QWORD *)(v18 + 120) = v20;
    *(_QWORD *)(v18 + 96) = v24;
    *(_QWORD *)(v18 + 104) = v25;
    v26 = sub_1A93F8040();
    *(_QWORD *)(v18 + 152) = v20;
    *(_QWORD *)(v18 + 128) = v26;
    *(_QWORD *)(v18 + 136) = v27;
    v28 = sub_1A93F8040();
    *(_QWORD *)(v18 + 184) = v20;
    *(_QWORD *)(v18 + 160) = v28;
    *(_QWORD *)(v18 + 168) = v29;
    v30 = (void *)sub_1A93F82F8();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setPropertiesToFetch_, v30);

    sub_1A93F8040();
    v31 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
    v32 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v33 = objc_msgSend(v31, sel_initWithEntityName_, v32);

    v34 = objc_msgSend((id)objc_opt_self(), sel_topLevelPlaylistsPredicate);
    objc_msgSend(v33, sel_setPredicate_, v34);

    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1A9405950;
    v36 = sub_1A93F8040();
    *(_QWORD *)(v35 + 56) = v20;
    *(_QWORD *)(v35 + 32) = v36;
    *(_QWORD *)(v35 + 40) = v37;
    v38 = sub_1A93F8040();
    *(_QWORD *)(v35 + 88) = v20;
    *(_QWORD *)(v35 + 64) = v38;
    *(_QWORD *)(v35 + 72) = v39;
    v40 = (void *)sub_1A93F82F8();
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_setPropertiesToFetch_, v40);

    v41 = MEMORY[0x1E0DEE9D8];
    v83 = MEMORY[0x1E0DEE9D8];
    v84 = MEMORY[0x1E0DEE9D8];
    sub_1A9072534(0, (unint64_t *)&qword_1ED2A4260);
    v71 = v16;
    v42 = sub_1A93F89DC();
    v70 = v33;
    v84 = v42;
    sub_1A9072534(0, &qword_1ED2A9388);
    v83 = sub_1A93F89DC();
    if (qword_1ED2A8778 != -1)
      swift_once();
    v43 = sub_1A93F7698();
    __swift_project_value_buffer(v43, (uint64_t)qword_1ED2A8758);
    v45 = v83;
    v44 = v84;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v46 = sub_1A93F7674();
    v47 = sub_1A93F87B4();
    if (os_log_type_enabled(v46, (os_log_type_t)v47))
    {
      v69 = v47;
      v48 = swift_slowAlloc();
      v68 = swift_slowAlloc();
      aBlock[0] = v68;
      *(_DWORD *)v48 = 141558787;
      v82 = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v48 + 12) = 2081;
      v49 = *(void **)(v13 + 24);
      if (v49)
      {
        v50 = objc_msgSend(v49, sel_description);
        v51 = sub_1A93F8040();
        v53 = v52;

      }
      else
      {
        v51 = 0x6974636120726F66;
        v53 = 0xEF72657375206576;
      }
      v82 = sub_1A906436C(v51, v53, aBlock);
      sub_1A93F8AA8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 22) = 2048;
      if (v44 >> 62)
      {
        swift_bridgeObjectRetain();
        v54 = sub_1A93F8E5C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v54 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v41 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      v82 = v54;
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 32) = 2048;
      if (v45 >> 62)
      {
        swift_bridgeObjectRetain();
        v55 = sub_1A93F8E5C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v55 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v56 = v69;
      swift_bridgeObjectRelease();
      v82 = v55;
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v46, v56, "Account %{private,mask.hash}s: Fetched %ld podcasts and %ld stations from DB.", (uint8_t *)v48, 0x2Au);
      v57 = v68;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v57, -1, -1);
      MEMORY[0x1AF41411C](v48, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_retain();
    v58 = swift_bridgeObjectRetain();
    v59 = sub_1A91E4690(v58, v13, (uint64_t (*)(void))sub_1A90A8E48);
    swift_bridgeObjectRelease();
    swift_release();
    swift_beginAccess();
    swift_retain();
    v60 = swift_bridgeObjectRetain();
    v61 = sub_1A91E4690(v60, v13, (uint64_t (*)(void))sub_1A90A9320);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    v62 = (_QWORD *)swift_allocObject();
    v63 = v79;
    v62[2] = v78;
    v62[3] = v63;
    v62[4] = v59;
    v62[5] = v61;
    aBlock[4] = (uint64_t)sub_1A90D6E98;
    aBlock[5] = (uint64_t)v62;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1A908A91C;
    aBlock[3] = (uint64_t)&block_descriptor_9_0;
    v64 = _Block_copy(aBlock);
    swift_retain();
    v65 = v72;
    sub_1A93F7D88();
    v80 = v41;
    sub_1A90A1130();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D28();
    v66 = v75;
    v67 = v77;
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v65, v66, v64);
    _Block_release(v64);

    (*(void (**)(char *, uint64_t))(v76 + 8))(v66, v67);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v65, v74);
    swift_release();
    return swift_release();
  }
  return result;
}

void PerformanceLoadable.init(log:signpostName:startMetadata:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v11;
  uint64_t v16;
  id v17;

  v11 = a4;
  v16 = type metadata accessor for PerformanceLoadable(0, a7, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 56))(a8 + *(int *)(v16 + 40), 1, 2, a7);
  *(_QWORD *)(a8 + 24) = a1;
  *(_QWORD *)a8 = a2;
  *(_QWORD *)(a8 + 8) = a3;
  *(_BYTE *)(a8 + 16) = v11;
  v17 = a1;
  sub_1A93F75D8();
  *(_QWORD *)(a8 + 32) = a5;
  *(_QWORD *)(a8 + 40) = a6;
  sub_1A90738E0(v16);

}

uint64_t type metadata accessor for PerformanceLoadable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PerformanceLoadable);
}

uint64_t sub_1A90738E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = sub_1A93F75FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(id *)(v1 + 24);
  sub_1A93F75D8();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v1 + *(int *)(a1 + 36), v6, v3);
  v8 = *(_QWORD *)(v1 + 40);
  if (v8)
  {
    v9 = *(_QWORD *)(v1 + 32);
    swift_bridgeObjectRetain();
    sub_1A93F8940();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1A9405520;
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 64) = sub_1A90A92DC();
    *(_QWORD *)(v10 + 32) = v9;
    *(_QWORD *)(v10 + 40) = v8;
    sub_1A93F75B4();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A93F8940();
    return sub_1A93F75C0();
  }
}

uint64_t sub_1A9073A5C(uint64_t *a1)
{
  uint64_t result;
  unint64_t v2;

  result = type metadata accessor for ProducerInner.State(319, a1[10], a1[11], a1[12]);
  if (v2 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1A9073AE0(uint64_t *a1)
{
  uint64_t result;
  unint64_t v2;

  result = type metadata accessor for ProducerInner.ActiveState(319, a1[2], a1[3], a1[4]);
  if (v2 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void sub_1A9073B3C(unint64_t a1)
{
  sub_1A90A7254(a1);
}

id sub_1A9073B74(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1;
  NSUserDefaults.lastAppUseDate.getter((uint64_t)v4);

  v6 = sub_1A93F738C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
  {
    v8 = (void *)sub_1A93F7314();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return v8;
}

uint64_t NSUserDefaults.lastAppUseDate.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  int v4;
  uint64_t v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  if (objc_msgSend(v1, sel_objectForKey_, CFSTR("MTLastAppUseDate")))
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_1A90A4E08((uint64_t)v7, (uint64_t)v8);
  if (v9)
  {
    v3 = sub_1A93F738C();
    v4 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, v4 ^ 1u, 1, v3);
  }
  else
  {
    sub_1A905FD54((uint64_t)v8, qword_1ED2AC800);
    v6 = sub_1A93F738C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 1, 1, v6);
  }
}

uint64_t sub_1A9073D34(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t (*a6)(), void *a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[32];

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1F50);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = &v27[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v17 = &v27[-v16];
  v18 = a3;
  swift_unknownObjectRetain();
  v19 = a1;
  v20 = a5;
  v21 = a7;
  sub_1A93F8B44();
  swift_unknownObjectRelease();
  if (v20)
  {
    sub_1A93F74E8();

    v22 = sub_1A93F74F4();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v17, 0, 1, v22);
  }
  else
  {
    v23 = sub_1A93F74F4();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v17, 1, 1, v23);
  }
  if (v21)
  {
    sub_1A93F74E8();

    v24 = sub_1A93F74F4();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v15, 0, 1, v24);
  }
  else
  {
    v25 = sub_1A93F74F4();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v15, 1, 1, v25);
  }
  sub_1A9073F10((uint64_t)v27, (uint64_t)v17, a6);

  sub_1A905FD54((uint64_t)v15, &qword_1ED2A1F50);
  sub_1A905FD54((uint64_t)v17, &qword_1ED2A1F50);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
}

void sub_1A9073F10(uint64_t a1, uint64_t a2, uint64_t (*a3)())
{
  id v4;
  _QWORD *v5;
  id v6;
  id v7;
  _BYTE v8[32];

  sub_1A906443C(a1, (uint64_t)v8);
  swift_dynamicCast();
  v4 = objc_msgSend(v7, sel_objectID);

  if ((unint64_t)a3 - 3 >= 2)
  {
    if (a3 == (uint64_t (*)())1 || a3 == (uint64_t (*)())2)
      goto LABEL_8;
    sub_1A93F8E14();
    __break(1u);
  }
  else
  {
    a3 = sub_1A9074050();
    if (*v5)
    {
      v6 = v4;
      sub_1A90A20D0(&v7, v6);
      ((void (*)(_BYTE *, _QWORD))a3)(v8, 0);

      return;
    }
  }
  ((void (*)(_BYTE *, _QWORD))a3)(v8, 0);
LABEL_8:

}

uint64_t (*sub_1A9074050())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *sub_1A9074094(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v29 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8B50);
  v4 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  v32 = v4;
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F885C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F8808();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v10);
  v12 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v12);
  v28 = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A93F7D88();
  v33 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v11, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF8D0], v6);
  v13 = (void *)sub_1A93F888C();
  v1[2] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 0;
  v1[3] = v14;
  v1[5] = 0;
  v1[7] = 0;
  swift_unknownObjectWeakInit();
  v15 = MEMORY[0x1E0DEE9E0];
  v1[8] = MEMORY[0x1E0DEE9E8];
  v1[9] = v15;
  v1[10] = v15;
  sub_1A93F8040();
  v16 = objc_msgSend((id)objc_opt_self(), sel_predicateForNotHiddenPodcasts);
  v17 = objc_msgSend(v29, sel_importContext);
  v18 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v19 = v13;
  v20 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v18, sel_initWithEntityName_, v20);

  objc_msgSend(v21, sel_setPredicate_, v16);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v22 = (void *)sub_1A93F82F8();
  objc_msgSend(v21, sel_setSortDescriptors_, v22);

  objc_msgSend(v21, sel_setFetchBatchSize_, 0x7FFFFFFFFFFFFFFFLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8610);
  swift_allocObject();
  *((_QWORD *)&v27 + 1) = sub_1A905920C;
  *(_QWORD *)&v27 = 0;
  v33 = sub_1A90C411C(0xD00000000000001DLL, 0x80000001A9407BF0, (uint64_t)v21, (uint64_t)v17, (uint64_t)v19, (uint64_t)sub_1A90A3488, 0, (uint64_t)sub_1A90A3D08, v27, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A7B78);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9358);
  sub_1A9066D74(&qword_1ED2A7B70, (uint64_t *)&unk_1ED2A7B78, (uint64_t)&protocol conformance descriptor for FetchedResultsListPublisher<A, B>);
  v23 = v30;
  sub_1A93F7B84();
  swift_release();
  sub_1A9066D74(&qword_1ED2A8B48, &qword_1ED2A8B50, MEMORY[0x1E0C95950]);
  v24 = v31;
  v25 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v24);
  v2[4] = v25;
  return v2;
}

uint64_t sub_1A907454C@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = sub_1A90745E8(v3);
    v7 = v6;
    v9 = v8;
    v11 = v10;
    result = swift_release();
  }
  else
  {
    v5 = 0;
    v7 = 0;
    v9 = 0;
    v11 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v11;
  return result;
}

_QWORD *sub_1A90745E8(void *a1)
{
  uint64_t v1;
  _DWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD *v12;
  id v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t i;
  _DWORD *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  NSObject *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  NSObject *v31;
  NSObject *v32;
  _QWORD *v33;
  _QWORD *result;
  uint64_t v35;
  char *v36;
  NSObject *v37;
  char **v38;
  os_log_type_t v39;
  char **v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  void *v71;
  _QWORD v72[2];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;

  v4 = sub_1A93F7698();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v76 = (char *)v72 - v9;
  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v11 = objc_msgSend(a1, sel_contextName);
  v12 = objc_msgSend(v10, sel_contextForName_, v11);

  v77 = v12;
  if (!v12)
  {
    if (qword_1ED2A42A8 != -1)
      swift_once();
    v26 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED2A4290);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v26, v4);
    v27 = a1;
    v28 = sub_1A93F7674();
    v29 = sub_1A93F879C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v77 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v30 = 138412290;
      v80 = (uint64_t)v27;
      v31 = v27;
      v75 = v4;
      v32 = v31;
      sub_1A93F8AA8();
      v33 = v77;
      *v77 = v27;

      v4 = v75;
      _os_log_impl(&dword_1A904E000, v28, v29, "History transaction with not contextName. We won't be able to fetch the objects corresponding to this change. Transaction: %@", v30, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v33, -1, -1);
      MEMORY[0x1AF41411C](v30, -1, -1);
    }
    else
    {

      v28 = v27;
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
  v13 = objc_msgSend(a1, sel_changes);
  if (!v13)
  {

    return 0;
  }
  v14 = v13;
  v73 = sub_1A9072534(0, (unint64_t *)&unk_1ED2A41F8);
  v15 = sub_1A93F8310();

  v81 = MEMORY[0x1E0DEE9D8];
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    v75 = v4;
    if (v16)
      goto LABEL_5;
LABEL_34:
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_60;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  v75 = v4;
  if (!v16)
    goto LABEL_34;
LABEL_5:
  v74 = v5;
  if (v16 < 1)
  {
    __break(1u);
LABEL_63:
    swift_once();
    goto LABEL_38;
  }
  for (i = 0; i != v16; ++i)
  {
    if ((v15 & 0xC000000000000001) != 0)
      v18 = (_DWORD *)MEMORY[0x1AF4129DC](i, v15);
    else
      v18 = *(id *)(v15 + 8 * i + 32);
    v2 = v18;
    v19 = objc_msgSend(v18, sel_changedObjectID);
    v1 = (uint64_t)objc_msgSend(v19, sel_entity);

    v20 = objc_msgSend((id)v1, sel_name);
    if (!v20)
    {
      sub_1A93F8040();
LABEL_8:

      swift_bridgeObjectRelease();
      continue;
    }
    v1 = sub_1A93F8040();
    v22 = v21;

    v23 = sub_1A93F8040();
    if (!v22)
      goto LABEL_8;
    if (v1 == v23 && v22 == v24)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v1 = sub_1A93F90C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v1 & 1) == 0)
      {

        continue;
      }
    }
    sub_1A93F8D60();
    sub_1A93F8D90();
    sub_1A93F8D9C();
    sub_1A93F8D6C();
  }
  swift_bridgeObjectRelease();
  v15 = v81;
  v5 = v74;
  v4 = v75;
  if ((v81 & 0x8000000000000000) == 0)
  {
LABEL_35:
    if ((v15 & 0x4000000000000000) != 0)
      goto LABEL_60;
    v35 = *(_QWORD *)(v15 + 16);
    if (v35)
      goto LABEL_37;
LABEL_61:
    swift_release();
    sub_1A90751A8(MEMORY[0x1E0DEE9D8]);
    return v77;
  }
LABEL_60:
  swift_retain();
  v35 = sub_1A93F8E5C();
  swift_release();
  if (!v35)
    goto LABEL_61;
LABEL_37:
  v74 = v35;
  if (qword_1ED2A42A8 != -1)
    goto LABEL_63;
LABEL_38:
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED2A4290);
  swift_beginAccess();
  v36 = v76;
  (*(void (**)(void))(v5 + 16))();
  swift_retain_n();
  v37 = sub_1A93F7674();
  v38 = (char **)v5;
  v39 = sub_1A93F8790();
  if (os_log_type_enabled(v37, v39))
  {
    v2 = (_DWORD *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v80 = v4;
    v40 = v38;
    *v2 = 136315138;
    v38 = (char **)(v2 + 3);
    v72[1] = v2 + 1;
    v41 = swift_retain();
    v1 = MEMORY[0x1AF412034](v41, v73);
    v43 = v42;
    swift_release();
    v79 = sub_1A906436C(v1, v43, &v80);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v37, v39, "processing transaction with episode changes: %s", (uint8_t *)v2, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v4, -1, -1);
    MEMORY[0x1AF41411C](v2, -1, -1);

    ((void (*)(char *, uint64_t))v40[1])(v76, v75);
  }
  else
  {

    swift_release_n();
    ((void (*)(char *, uint64_t))v38[1])(v36, v4);
  }
  v80 = MEMORY[0x1E0DEE9D8];
  v44 = v74;
  if (v74 < 1)
  {
    __break(1u);
  }
  else
  {
    v4 = v15 & 0xC000000000000001;
    swift_retain();
    v45 = 0;
    v38 = &selRef_isOTAPurchased;
    do
    {
      if (v4)
        v46 = (id)MEMORY[0x1AF4129DC](v45, v15);
      else
        v46 = *(id *)(v15 + 8 * v45 + 32);
      v47 = v46;
      if (objc_msgSend(v46, v38[510]))
      {

      }
      else
      {
        sub_1A93F8D60();
        sub_1A93F8D90();
        v38 = &selRef_isOTAPurchased;
        sub_1A93F8D9C();
        sub_1A93F8D6C();
      }
      ++v45;
    }
    while (v44 != v45);
    swift_release();
    v1 = v80;
    if ((v80 & 0x8000000000000000) == 0 && (v80 & 0x4000000000000000) == 0)
    {
      v48 = *(_QWORD *)(v80 + 16);
      if (v48)
        goto LABEL_53;
LABEL_66:
      swift_release();
      v53 = MEMORY[0x1E0DEE9D8];
LABEL_67:
      v54 = v53;
      v80 = v53;
      swift_retain();
      v55 = 0;
      do
      {
        if (v4)
          v56 = (id)MEMORY[0x1AF4129DC](v55, v15);
        else
          v56 = *(id *)(v15 + 8 * v55 + 32);
        v57 = v56;
        if (objc_msgSend(v56, v38[510]) == (id)1)
        {
          sub_1A93F8D60();
          sub_1A93F8D90();
          v38 = &selRef_isOTAPurchased;
          sub_1A93F8D9C();
          sub_1A93F8D6C();
        }
        else
        {

        }
        ++v55;
      }
      while (v44 != v55);
      swift_release();
      v58 = v80;
      v80 = MEMORY[0x1E0DEE9E0];
      if (v58 < 0 || (v58 & 0x4000000000000000) != 0)
        goto LABEL_86;
      v59 = *(_QWORD *)(v58 + 16);
      swift_retain();
      for (; v59; v59 = sub_1A93F8E5C())
      {
        v44 = v58 & 0xC000000000000001;
        v54 = 4;
        while (1)
        {
          v60 = v44 ? (id)MEMORY[0x1AF4129DC](v54 - 4, v58) : *(id *)(v58 + 8 * v54);
          v61 = v60;
          v38 = (char **)(v54 - 3);
          if (__OFADD__(v54 - 4, 1))
            break;
          v79 = (uint64_t)v60;
          sub_1A9299700(&v80, (id *)&v79);

          ++v54;
          if (v38 == (char **)v59)
          {
            swift_release_n();
            v54 = MEMORY[0x1E0DEE9D8];
            v44 = v74;
            v38 = &selRef_isOTAPurchased;
            goto LABEL_88;
          }
        }
        __break(1u);
LABEL_86:
        swift_retain();
      }
      swift_release_n();
LABEL_88:
      v62 = 0;
      v80 = v54;
      do
      {
        if (v4)
          v63 = (id)MEMORY[0x1AF4129DC](v62, v15);
        else
          v63 = *(id *)(v15 + 8 * v62 + 32);
        v64 = v63;
        if (objc_msgSend(v63, v38[510]) == (id)2)
        {
          sub_1A93F8D60();
          sub_1A93F8D90();
          v38 = &selRef_isOTAPurchased;
          sub_1A93F8D9C();
          sub_1A93F8D6C();
        }
        else
        {

        }
        ++v62;
      }
      while (v44 != v62);
      swift_release();
      v65 = v80;
      v80 = MEMORY[0x1E0DEE9D8];
      if (v65 < 0 || (v65 & 0x4000000000000000) != 0)
        goto LABEL_107;
      v66 = *(_QWORD *)(v65 + 16);
      swift_retain();
      for (; v66; v66 = sub_1A93F8E5C())
      {
        v67 = 4;
        while (1)
        {
          v68 = (v65 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1AF4129DC](v67 - 4, v65)
              : *(id *)(v65 + 8 * v67);
          v69 = v68;
          v70 = v67 - 3;
          if (__OFADD__(v67 - 4, 1))
            break;
          v79 = (uint64_t)v68;
          sub_1A9299CE0((id *)&v79, &v78);

          sub_1A9136CD8(v78);
          ++v67;
          if (v70 == v66)
            goto LABEL_105;
        }
        __break(1u);
LABEL_107:
        swift_retain();
      }
LABEL_105:
      swift_release_n();
      return v77;
    }
  }
  swift_bridgeObjectRetain();
  v48 = sub_1A93F8E5C();
  swift_release();
  if (!v48)
    goto LABEL_66;
LABEL_53:
  v80 = MEMORY[0x1E0DEE9D8];
  sub_1A93F8D84();
  if ((v48 & 0x8000000000000000) == 0)
  {
    v49 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v50 = (id)MEMORY[0x1AF4129DC](v49, v1);
      else
        v50 = *(id *)(v1 + 8 * v49 + 32);
      v51 = v50;
      ++v49;
      v52 = objc_msgSend(v50, sel_changedObjectID);

      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
    }
    while (v48 != v49);
    swift_release();
    v53 = MEMORY[0x1E0DEE9D8];
    v44 = v74;
    v38 = &selRef_isOTAPurchased;
    goto LABEL_67;
  }
  __break(1u);
  v71 = (void *)v80;
  swift_release();

  swift_bridgeObjectRelease();
  __break(1u);
  swift_release();

  result = (_QWORD *)swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

unint64_t sub_1A90751A8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4388);
  v2 = (_QWORD *)sub_1A93F8E8C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_1A912E44C((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A90752B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];

  v24 = a1;
  v25 = a3;
  v6 = sub_1A93F8A90();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - v11;
  v13 = sub_1A93F738C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = _s29SynchronizedEventSubscriptionCMa(0, a2, a3, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v3, v13);
  swift_allocObject();
  v19 = sub_1A9075498((uint64_t)v16);
  v20 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v12, v24, a2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, a2);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
  v21 = &v19[*(_QWORD *)(*(_QWORD *)v19 + 120)];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v21, v10, v6);
  swift_endAccess();
  v26[3] = v18;
  v26[4] = MEMORY[0x1AF414014](&unk_1A940569C, v18);
  v26[0] = v19;
  sub_1A93F789C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
}

uint64_t _s29SynchronizedEventSubscriptionCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s29SynchronizedEventSubscriptionCMn);
}

char *sub_1A9075498(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  NSObject *v17;
  os_signpost_type_t v18;
  uint8_t *v19;
  uint8_t *v20;
  os_signpost_id_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  v29 = *(_QWORD *)v1;
  v30 = a1;
  v3 = sub_1A93F75FC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  v10 = sub_1A93F762C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v1[qword_1ED2A94F0];
  if (qword_1ED2A8690 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A8678);
  sub_1A93F7620();
  sub_1A93F75D8();
  *(_QWORD *)&v2[qword_1ED2A9500] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v29 + 80) - 8) + 56))(&v2[*(_QWORD *)(*(_QWORD *)v2 + 120)], 1, 1);
  v28 = v11;
  v29 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v15, v10);
  v16 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v16(v9, v14, v3);
  v17 = sub_1A93F7620();
  v18 = sub_1A93F8940();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    v16(v7, v9, v3);
    v19 = (uint8_t *)swift_slowAlloc();
    v27 = v13;
    v20 = v19;
    *(_WORD *)v19 = 0;
    v21 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v17, v18, v21, "SynchronizedEventSubscription", "", v20, 2u);
    v22 = v20;
    v13 = v27;
    MEMORY[0x1AF41411C](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  else
  {

  }
  v16(v7, v9, v3);
  sub_1A93F765C();
  swift_allocObject();
  v23 = sub_1A93F7650();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v29);
  *(_QWORD *)&v2[qword_1ED2A94F8] = v23;
  v24 = v30;
  sub_1A9075768(v30);
  v25 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
  return v2;
}

void sub_1A9075768(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  id v39;
  id v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  char *v49;
  double v50;
  double v51;
  char *v52;
  double v53;
  double v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  int v65;
  uint64_t v66;
  id v67;
  id v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  os_log_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  os_log_t v92;
  uint64_t v93;
  NSObject *v94;
  os_signpost_type_t v95;
  char *v96;
  uint64_t v97;
  const char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_signpost_type_t v108;
  char *v109;
  uint64_t v110;
  const char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint8_t *v115;
  os_signpost_id_t v116;
  void (*v117)(char *, uint64_t);
  uint64_t v118;
  char *v119;
  uint8_t *v120;
  os_signpost_id_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  os_log_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;

  v149 = a1;
  v2 = *(_QWORD *)v1;
  v133 = sub_1A93F7638();
  v147 = *(_QWORD *)(v133 - 8);
  v3 = MEMORY[0x1E0C80A78](v133);
  v124 = (char *)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v123 = (char *)&v122 - v5;
  v6 = sub_1A93F75FC();
  v140 = *(_QWORD *)(v6 - 8);
  v141 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v136 = (char *)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v134 = (char *)&v122 - v10;
  MEMORY[0x1E0C80A78](v9);
  v132 = (char *)&v122 - v11;
  v145 = sub_1A93F762C();
  v152 = *(_QWORD *)(v145 - 8);
  v12 = MEMORY[0x1E0C80A78](v145);
  v138 = (os_log_t)((char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v137 = (char *)&v122 - v14;
  v16 = *(_QWORD *)(v2 + 80);
  v15 = *(_QWORD *)(v2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v128 = AssociatedTypeWitness;
  v130 = sub_1A93F78C0();
  v129 = *(_QWORD *)(v130 - 8);
  v18 = MEMORY[0x1E0C80A78](v130);
  v126 = (char *)&v122 - v19;
  v143 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v18);
  v127 = (char *)&v122 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_1A93F8A90();
  v146 = *(_QWORD *)(v142 - 8);
  v21 = MEMORY[0x1E0C80A78](v142);
  v135 = (char *)&v122 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v131 = (char *)&v122 - v23;
  v24 = sub_1A93F738C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  v27 = MEMORY[0x1E0C80A78](v24);
  v139 = (char *)&v122 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v27);
  v148 = (char *)&v122 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v122 - v31;
  MEMORY[0x1E0C80A78](v30);
  v34 = (char *)&v122 - v33;
  v150 = qword_1ED2A9500;
  objc_msgSend(*(id *)&v1[qword_1ED2A9500], sel_invalidate);
  sub_1A93F7380();
  v35 = swift_allocObject();
  v151 = v1;
  swift_weakInit();
  v36 = v149;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v32, v149, v24);
  v37 = (*(unsigned __int8 *)(v25 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v38 = (char *)swift_allocObject();
  v144 = v16;
  *((_QWORD *)v38 + 2) = v16;
  *((_QWORD *)v38 + 3) = v15;
  v125 = v15;
  *((_QWORD *)v38 + 4) = v35;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v38[v37], v32, v24);
  swift_retain();
  v39 = sub_1A9076504(v36, (uint64_t)v34, 0, (uint64_t)sub_1A9116CAC, (uint64_t)v38);
  if (v39)
  {
    v40 = objc_msgSend((id)objc_opt_self(), sel_currentRunLoop);
    objc_msgSend(v40, sel_addTimer_forMode_, v39, *MEMORY[0x1E0C99860]);
    swift_release();

  }
  else
  {
    swift_release();
  }
  v41 = *(void (**)(char *, uint64_t))(v25 + 8);
  v41(v34, v24);
  swift_release();
  v43 = v150;
  v42 = v151;
  v44 = *(void **)&v151[v150];
  *(_QWORD *)&v151[v150] = v39;

  v45 = *(void **)&v42[v43];
  v46 = v152;
  if (v45)
  {
    v47 = v45;
    v48 = objc_msgSend(v47, sel_fireDate);
    v49 = v148;
    sub_1A93F7368();

    sub_1A93F72D8();
    v51 = v50;
    v41(v49, v24);
    v52 = v139;
    sub_1A93F7380();
    sub_1A93F72D8();
    v54 = v53;
    v41(v52, v24);
    if (v51 > v54)
    {

      return;
    }
    if (qword_1ED2A8800 != -1)
      swift_once();
    v61 = sub_1A93F7698();
    __swift_project_value_buffer(v61, (uint64_t)qword_1ED2A87E8);
    v62 = (char *)v47;
    v63 = sub_1A93F7674();
    v64 = sub_1A93F879C();
    v65 = v64;
    if (os_log_type_enabled(v63, v64))
    {
      v66 = swift_slowAlloc();
      v149 = swift_slowAlloc();
      v154 = v149;
      *(_DWORD *)v66 = 136315394;
      v136 = (char *)(v66 + 4);
      v67 = objc_msgSend(v62, sel_fireDate);
      LODWORD(v139) = v65;
      v68 = v67;
      v138 = v63;
      v69 = v148;
      sub_1A93F7368();

      sub_1A9116D50();
      v70 = sub_1A93F9060();
      v72 = v71;
      v41(v69, v24);
      v153 = sub_1A906436C(v70, v72, &v154);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 12) = 2080;
      sub_1A93F7380();
      v73 = sub_1A93F9060();
      v75 = v74;
      v41(v69, v24);
      v153 = sub_1A906436C(v73, v75, &v154);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      v76 = v138;
      _os_log_impl(&dword_1A904E000, v138, (os_log_type_t)v139, "Scheduled a timer with a fire date (%s in the past! Current date: %s", (uint8_t *)v66, 0x16u);
      v77 = v149;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v77, -1, -1);
      v78 = v66;
      v42 = v151;
      MEMORY[0x1AF41411C](v78, -1, -1);

    }
    else
    {

    }
    v79 = v144;
    v80 = v145;
    v81 = v137;
    v82 = v142;
    v83 = v143;
    v151 = v62;
    objc_msgSend(v62, sel_invalidate);
    v84 = *(void **)&v42[v43];
    *(_QWORD *)&v42[v43] = 0;

    swift_beginAccess();
    v85 = v146;
    v86 = v131;
    (*(void (**)(void))(v146 + 16))();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v86, 1, v79))
    {
      (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v82);
    }
    else
    {
      v99 = v82;
      v100 = v127;
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v127, v86, v79);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v99);
      v101 = v126;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v126, 1, 1);
      sub_1A93F7890();
      (*(void (**)(char *, uint64_t))(v129 + 8))(v101, v130);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v100, v79);
    }
    v102 = v132;
    v103 = v80;
    v104 = v152;
    v105 = v147;
    if (qword_1ED2A8690 != -1)
      swift_once();
    v106 = __swift_project_value_buffer(v80, (uint64_t)qword_1ED2A8678);
    (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v81, v106, v80);
    swift_retain();
    v107 = sub_1A93F7620();
    sub_1A93F7644();
    v108 = sub_1A93F8934();
    if ((sub_1A93F8A6C() & 1) == 0)
    {

      swift_release();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v102, v141);
      (*(void (**)(char *, uint64_t))(v104 + 8))(v81, v80);
      return;
    }
    swift_retain();
    v109 = v123;
    sub_1A93F7668();
    swift_release();
    v110 = v133;
    if ((*(unsigned int (**)(char *, uint64_t))(v105 + 88))(v109, v133) == *MEMORY[0x1E0DF2190])
    {
      v111 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v105 + 8))(v109, v110);
      v111 = "";
    }
    v118 = v140;
    v112 = v141;
    v114 = v134;
    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v134, v102, v141);
    v119 = v102;
    v120 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v120 = 0;
    v121 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v107, v108, v121, "SynchronizedEventSubscription", v111, v120, 2u);
    MEMORY[0x1AF41411C](v120, -1, -1);

    swift_release();
    v117 = *(void (**)(char *, uint64_t))(v118 + 8);
    v117(v119, v112);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v137, v103);
  }
  else
  {
    v55 = &v42[*(_QWORD *)(*(_QWORD *)v42 + 120)];
    swift_beginAccess();
    v56 = v146;
    v57 = v135;
    v58 = v142;
    (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v135, v55, v142);
    v60 = v143;
    v59 = v144;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48))(v57, 1, v144))
    {
      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
    }
    else
    {
      v87 = v127;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v127, v57, v59);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
      v88 = v126;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v126, 1, 1);
      sub_1A93F7890();
      (*(void (**)(char *, uint64_t))(v129 + 8))(v88, v130);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v87, v59);
    }
    v89 = v145;
    v90 = v147;
    v91 = v136;
    v92 = v138;
    if (qword_1ED2A8690 != -1)
      swift_once();
    v93 = __swift_project_value_buffer(v89, (uint64_t)qword_1ED2A8678);
    (*(void (**)(os_log_t, uint64_t, uint64_t))(v46 + 16))(v92, v93, v89);
    swift_retain();
    v94 = sub_1A93F7620();
    sub_1A93F7644();
    v95 = sub_1A93F8934();
    if ((sub_1A93F8A6C() & 1) == 0)
    {
      swift_release();

      (*(void (**)(char *, uint64_t))(v140 + 8))(v91, v141);
      (*(void (**)(os_log_t, uint64_t))(v46 + 8))(v92, v89);
      return;
    }
    swift_retain();
    v96 = v124;
    sub_1A93F7668();
    swift_release();
    v97 = v133;
    if ((*(unsigned int (**)(char *, uint64_t))(v90 + 88))(v96, v133) == *MEMORY[0x1E0DF2190])
    {
      v98 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v90 + 8))(v96, v97);
      v98 = "";
    }
    v113 = v140;
    v112 = v141;
    v114 = v134;
    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v134, v91, v141);
    v115 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v115 = 0;
    v116 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v94, v95, v116, "SynchronizedEventSubscription", v98, v115, 2u);
    MEMORY[0x1AF41411C](v115, -1, -1);
    swift_release();

    v117 = *(void (**)(char *, uint64_t))(v113 + 8);
    v117(v91, v112);
    (*(void (**)(os_log_t, uint64_t))(v152 + 8))(v138, v89);
  }
  v117(v114, v112);
}

id sub_1A9076504(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void (*v29)(char *, uint64_t, uint64_t);
  id v30;
  unsigned int v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(unint64_t, _QWORD, uint64_t);
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  id result;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  uint64_t v72;
  void *v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD aBlock[7];

  v81 = a4;
  v82 = a5;
  LODWORD(v83) = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F74C4();
  v89 = *(_QWORD *)(v10 - 8);
  v90 = v10;
  MEMORY[0x1E0C80A78](v10);
  v87 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_1A93F7494();
  v84 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A93F6FFC();
  v80 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v85 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v75 - v17;
  v19 = sub_1A93F738C();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v77 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v75 - v23;
  sub_1A93F72D8();
  v26 = v25;
  v88 = a1;
  sub_1A93F72D8();
  v28 = v27;
  v78 = v20;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v91 = a2;
  v79 = v19;
  v29(v24, a2, v19);
  sub_1A907F8F8((uint64_t)v24, (char *)aBlock, v26, v28);
  v30 = 0;
  v31 = LOBYTE(aBlock[0]);
  if ((aBlock[0] & 0xFE) == 4)
    return v30;
  v75 = v9;
  v76 = v14;
  aBlock[4] = v81;
  aBlock[5] = v82;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9116D00;
  aBlock[3] = &block_descriptor;
  v32 = _Block_copy(aBlock);
  v33 = (void *)objc_opt_self();
  swift_retain();
  v83 = objc_msgSend(v33, sel_timerWithTimeInterval_repeats_block_, v83 & 1, v32, 1.0);
  _Block_release(v32);
  swift_release();
  sub_1A93F744C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A96D0);
  v34 = sub_1A93F747C();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = v18;
  v37 = *(_QWORD *)(v35 + 72);
  v38 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1A94055A0;
  v40 = v39 + v38;
  v41 = *(void (**)(unint64_t, _QWORD, uint64_t))(v35 + 104);
  v41(v40, *MEMORY[0x1E0CB1188], v34);
  v41(v40 + v37, *MEMORY[0x1E0CB1178], v34);
  v41(v40 + 2 * v37, *MEMORY[0x1E0CB1140], v34);
  sub_1A9132C44(v39);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1A93F7440();
  swift_bridgeObjectRelease();
  v42 = *(void (**)(char *, uint64_t))(v84 + 8);
  v43 = v86;
  v42(v13, v86);
  sub_1A93F744C();
  v44 = v87;
  sub_1A93F74B8();
  v45 = v85;
  sub_1A93F7434();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v44, v90);
  v42(v13, v43);
  v46 = v45;
  if (v31 < 2)
  {
    v49 = sub_1A93F6FCC();
    if ((v50 & 1) != 0)
      v51 = 0;
    else
      v51 = v49;
    v52 = sub_1A93F6FCC();
    if ((v53 & 1) != 0)
    {
      v54 = v76;
      v55 = (uint64_t)v75;
      v56 = v79;
      v30 = v83;
      if (v51 < 0)
        goto LABEL_31;
    }
    else
    {
      v54 = v76;
      v55 = (uint64_t)v75;
      v56 = v79;
      v30 = v83;
      if (v51 < v52)
      {
LABEL_31:
        sub_1A93F6FE4();
        sub_1A93F6FF0();
        sub_1A93F6FA8();
        v69 = v78;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v55, 1, v56) == 1)
        {
          v70 = *(void (**)(char *, uint64_t))(v80 + 8);
          v70(v45, v54);
          v70(v36, v54);
          sub_1A90AC3A4(v55);
        }
        else
        {
          v71 = v77;
          (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v77, v55, v56);
          v72 = v69;
          v73 = (void *)sub_1A93F7314();
          objc_msgSend(v30, sel_setFireDate_, v73);

          (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v56);
          v74 = *(void (**)(char *, uint64_t))(v80 + 8);
          v74(v46, v54);
          v74(v36, v54);
        }
        return v30;
      }
    }
    v62 = sub_1A93F6FCC();
    if ((v63 & 1) != 0)
      v64 = 0;
    else
      v64 = v62;
    result = (id)(v64 + 1);
    if (!__OFADD__(v64, 1))
    {
LABEL_30:
      sub_1A93F6FD8();
      goto LABEL_31;
    }
    __break(1u);
  }
  else
  {
    if (v31 != 2)
    {
      v47 = v76;

      v48 = *(void (**)(char *, uint64_t))(v80 + 8);
      v48(v45, v47);
      v48(v36, v47);
      return 0;
    }
    v57 = sub_1A93F6FCC();
    if ((v58 & 1) != 0)
      v59 = 0;
    else
      v59 = v57;
    v60 = sub_1A93F6FCC();
    v54 = v76;
    v56 = v79;
    v30 = v83;
    if ((v61 & 1) != 0)
    {
      v55 = (uint64_t)v75;
      if (v59 < 0)
      {
LABEL_29:
        sub_1A93F6FCC();
        goto LABEL_30;
      }
    }
    else
    {
      v55 = (uint64_t)v75;
      if (v59 < v60)
        goto LABEL_29;
    }
    v66 = sub_1A93F6FB4();
    if ((v67 & 1) != 0)
      v68 = 0;
    else
      v68 = v66;
    result = (id)(v68 + 1);
    if (!__OFADD__(v68, 1))
    {
      sub_1A93F6FC0();
      goto LABEL_29;
    }
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A9076B70(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = sub_1A93F8808();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1A93F885C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0DEE9E8];
  __swift_instantiateConcreteTypeFromMangledName(a1);
  swift_allocObject();
  v9 = sub_1A93F79EC();
  v1[3] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  v11 = MEMORY[0x1E0DEE9E0];
  v1[4] = v10;
  v1[5] = v11;
  sub_1A9066C6C();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF8D8], v5);
  sub_1A93F7D88();
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  sub_1A93F8B5C();
  v1[6] = sub_1A93F888C();
  v1[2] = v9;
  swift_retain();
  return v1;
}

uint64_t static FRPSectionInfo<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((sub_1A93F8004() & 1) == 0)
    return 0;
  type metadata accessor for FRPSectionInfo(0, a3, a4, a6);
  return sub_1A93F83DC();
}

uint64_t sub_1A9076EC0(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v5 = sub_1A93F7D58();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7DB8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v2 + OBJC_IVAR___MTDeviceCapacityMonitor_vfsSource))
  {
    v13 = (uint64_t *)(v2 + OBJC_IVAR___MTDeviceCapacityMonitor____capacityLevel);
    swift_beginAccess();
    v14 = *v13;
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    v15 = *(_QWORD *)(v14 + 16);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    swift_release();
    return a1(v15);
  }
  else
  {
    v23 = *(_QWORD *)(v2 + OBJC_IVAR___MTDeviceCapacityMonitor_diskAccessQueue);
    v17 = swift_allocObject();
    v22 = v6;
    v18 = v17;
    swift_unknownObjectWeakInit();
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = v18;
    v19[3] = a1;
    v19[4] = a2;
    aBlock[4] = sub_1A93F188C;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_52_1;
    v20 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_1A93F7D88();
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v12, v8, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1A907715C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1A914CD68();
  os_unfair_lock_unlock(v1);
  return swift_unknownObjectRelease();
}

void sub_1A90771CC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_unfair_lock_s **v8;
  os_unfair_lock_s *v9;
  os_unfair_lock_s *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = sub_1A93F8988();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (os_unfair_lock_s **)(v1 + OBJC_IVAR___MTDeviceCapacityMonitor__activeNotificationName);
  swift_beginAccess();
  v9 = *v8;
  v10 = *v8 + 6;
  swift_retain();
  os_unfair_lock_lock(v10);
  v11 = *(void **)&v9[4]._os_unfair_lock_opaque;
  v12 = v11;
  os_unfair_lock_unlock(v10);
  swift_release();
  if (!a1)
  {
    if (!v11)
      return;

LABEL_11:
    v19 = OBJC_IVAR___MTDeviceCapacityMonitor_activeObserver;
    if (*(_QWORD *)(v2 + OBJC_IVAR___MTDeviceCapacityMonitor_activeObserver))
    {
      swift_retain();
      sub_1A93F7938();
      swift_release();
    }
    if (a1)
    {
      v20 = (void *)objc_opt_self();
      v21 = a1;
      v22 = objc_msgSend(v20, sel_defaultCenter);
      v23 = v21;
      sub_1A93F897C();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_1A9066CA8((unint64_t *)&qword_1ED2A41D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
      v24 = sub_1A93F7D04();

      swift_release();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      *(_QWORD *)(v2 + v19) = v24;
      swift_release();
    }
    return;
  }
  if (!v11)
    goto LABEL_11;
  v13 = sub_1A93F8040();
  v15 = v14;
  if (v13 == sub_1A93F8040() && v15 == v16)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  v18 = sub_1A93F90C0();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
    goto LABEL_11;
}

uint64_t sub_1A9077424()
{
  char *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_unfair_lock_s **v9;
  os_unfair_lock_s *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v1 = sub_1A93F7D58();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v16[0] = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F7DB8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (os_unfair_lock_s **)&v0[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator__donationInProgress];
  swift_beginAccess();
  v10 = *v9;
  v11 = *v9 + 5;
  os_unfair_lock_lock(v11);
  LOBYTE(v10[4]._os_unfair_lock_opaque) = 0;
  os_unfair_lock_unlock(v11);
  swift_endAccess();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v0;
  aBlock[4] = sub_1A90D4080;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_9_7;
  v13 = _Block_copy(aBlock);
  v14 = v0;
  sub_1A93F7D88();
  v16[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v2, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v8, v4, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v16[0] + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_1A9077658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t);
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void (*v19)(_BYTE *, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _BYTE v28[24];

  v1 = sub_1A93F7698();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v7 = &v28[-v6];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v28[-v9];
  v11 = (uint64_t *)(*(_QWORD *)(v0 + OBJC_IVAR___MTPurchaseControllerWrapper_purchaseController)
                  + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0
                                                                    + OBJC_IVAR___MTPurchaseControllerWrapper_purchaseController))
                              + 0xA8));
  swift_beginAccess();
  v12 = *v11;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v12 + 20));
  v13 = *(unsigned __int8 *)(v12 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 20));
  swift_release();
  if (v13 == 1)
  {
    if (qword_1ED2AC4B8 != -1)
      swift_once();
    v14 = __swift_project_value_buffer(v1, (uint64_t)qword_1ED2A1E40);
    swift_beginAccess();
    v15 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 16);
    v15(v10, v14, v1);
    v16 = sub_1A93F7674();
    v17 = sub_1A93F87B4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1A904E000, v16, v17, "receivedEntitlementsNotification = true, force fetching latest channel updates", v18, 2u);
      MEMORY[0x1AF41411C](v18, -1, -1);
    }

    v19 = *(void (**)(_BYTE *, uint64_t))(v2 + 8);
    v19(v10, v1);
    v15(v7, v14, v1);
    v20 = sub_1A93F7674();
    v21 = sub_1A93F87B4();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1A904E000, v20, v21, "Force fetching latest channel updates", v22, 2u);
      MEMORY[0x1AF41411C](v22, -1, -1);
    }

    v19(v7, v1);
    return sub_1A90D08B4(0);
  }
  else
  {
    if (qword_1ED2AC4B8 != -1)
      swift_once();
    v24 = __swift_project_value_buffer(v1, (uint64_t)qword_1ED2A1E40);
    swift_beginAccess();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 16))(v4, v24, v1);
    v25 = sub_1A93F7674();
    v26 = sub_1A93F87B4();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1A904E000, v25, v26, "receivedEntitlementsNotification = false, not force fetching latest channel updates", v27, 2u);
      MEMORY[0x1AF41411C](v27, -1, -1);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  }
}

void sub_1A9077A14()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  _BOOL4 v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[7];
  BOOL v28;

  v1 = v0;
  v2 = sub_1A93F7D58();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v0[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator__donationInProgress];
  swift_beginAccess();
  v11 = *(_QWORD *)v10;
  LOBYTE(aBlock[0]) = 0;
  LOBYTE(v26) = 1;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 20));
  sub_1A917CD44((_BYTE *)(v11 + 16), aBlock, &v26, &v28);
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 20));
  v12 = v28;
  swift_release();
  if (v12)
  {
    if (qword_1ED2A8778 != -1)
      swift_once();
    v25 = v3;
    v13 = sub_1A93F7698();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A8758);
    v14 = sub_1A93F7674();
    v15 = sub_1A93F87B4();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1A904E000, v14, v15, "Starting donation to Siri KOA.", v16, 2u);
      MEMORY[0x1AF41411C](v16, -1, -1);
    }

    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v1;
    aBlock[4] = sub_1A90D5010;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_81;
    v18 = _Block_copy(aBlock);
    v19 = v1;
    sub_1A93F7D88();
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v9, v5, v18);
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_release();
  }
  else
  {
    if (qword_1ED2A8778 != -1)
      swift_once();
    v20 = sub_1A93F7698();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED2A8758);
    v21 = sub_1A93F7674();
    v22 = sub_1A93F87B4();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1A904E000, v21, v22, "Donation already in progress. Not starting new donation.", v23, 2u);
      MEMORY[0x1AF41411C](v23, -1, -1);
    }

  }
}

uint64_t sub_1A9077DD4(uint64_t a1)
{
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5[2];

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1A914CE94(v5);
  v2 = v5[0];
  v3 = v5[1];
  os_unfair_lock_unlock(v1);
  sub_1A908A304(v2, v3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t DeviceCapacityMonitor.addCapacityChangeObserver(options:callback:)(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  char v4;
  os_unfair_lock_s *v6;

  v4 = a1;
  if ((a1 & 1) != 0)
    a1 = sub_1A9076EC0(a2, a3);
  if ((v4 & 2) != 0)
  {
    v6 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR___MTDeviceCapacityMonitor__capacityChangeObservers);
    MEMORY[0x1E0C80A78](a1);
    swift_retain();
    os_unfair_lock_lock(v6 + 6);
    sub_1A918FD60((uint64_t)&v6[4], (uint64_t (*)(void))sub_1A93F0DDC);
    os_unfair_lock_unlock(v6 + 6);
    swift_release();
  }
  return 0;
}

void sub_1A9077F2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  void *v9;
  id v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[16];
  _QWORD v17[2];

  v2 = v1;
  v4 = sub_1A93F7E18();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (os_unfair_lock_s *)&v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(void **)(v2 + 16);
  *(_QWORD *)&v8->_os_unfair_lock_opaque = v9;
  (*(void (**)(os_unfair_lock_s *, _QWORD, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4, v6);
  v10 = v9;
  LOBYTE(v9) = sub_1A93F7E3C();
  v11 = (*(uint64_t (**)(os_unfair_lock_s *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) != 0)
  {
    MEMORY[0x1E0C80A78](v11);
    *(_QWORD *)&v16[-16] = v2;
    *(_QWORD *)&v16[-8] = a1;
    v13 = v12 + 4;
    os_unfair_lock_lock(v12 + 4);
    sub_1A914CCF8(v17);
    v14 = v17[0];
    v15 = v17[1];
    os_unfair_lock_unlock(v13);
    sub_1A908A304(v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
    os_unfair_lock_unlock(v8);
    __break(1u);
  }
}

uint64_t sub_1A9078070(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  _QWORD v16[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9798);
  MEMORY[0x1E0C80A78](v4);
  v6 = (void **)((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for FeedManagerBagConfiguration();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v16 - v11;
  sub_1A9062170(a1, (uint64_t)v6, &qword_1ED2A9798);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = *v6;
    v16[1] = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    swift_willThrowTypedImpl();

    if (qword_1ED2A7A38 != -1)
      swift_once();
    v14 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED2B8998);
    sub_1A908FAE0(v14, (uint64_t)v12);
  }
  else
  {
    sub_1A9078210((uint64_t)v6, (uint64_t)v9);
    sub_1A9078210((uint64_t)v9, (uint64_t)v12);
  }
  a2(v12);
  return sub_1A908FA3C((uint64_t)v12);
}

uint64_t sub_1A9078210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedManagerBagConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *RSSFeedUpdater.init(ctx:ingesterProvider:externalFeedDownloader:)(void *a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  void (*v14)(_QWORD);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  objc_class *v36;
  char *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v48[3];
  void (*v49)(char *, _QWORD, uint64_t);
  unsigned int v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  id v57;
  uint64_t v58;
  __int128 aBlock;
  uint64_t (*v60)(uint64_t);
  void *v61;
  void (*v62)();
  uint64_t v63;
  objc_super v64;

  v57 = a3;
  v58 = a2;
  v51 = a1;
  v4 = sub_1A93F8808();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1A93F885C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48[0] = OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_workQueue;
  v13 = sub_1A9066C6C();
  v14 = *(void (**)(_QWORD))(v10 + 104);
  v50 = *MEMORY[0x1E0DEF8D8];
  v54 = v9;
  v49 = (void (*)(char *, _QWORD, uint64_t))v14;
  v14(v12);
  v15 = v3;
  sub_1A93F7D88();
  *(_QWORD *)&aBlock = MEMORY[0x1E0DEE9D8];
  v16 = sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v5, MEMORY[0x1E0DEF828]);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  v18 = sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  v52 = v17;
  v53 = v16;
  v19 = v48[0];
  v48[1] = v4;
  v48[2] = v18;
  sub_1A93F8B5C();
  v55 = v13;
  v56 = v7;
  *(_QWORD *)&v3[v19] = sub_1A93F888C();
  v20 = OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_requests;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A7B60);
  swift_allocObject();
  *(_QWORD *)&v15[v20] = sub_1A90C7EDC();
  if (objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod))
  {
    if (qword_1EEAB6CD0 != -1)
      swift_once();
    v21 = &qword_1EEAB86A8;
  }
  else
  {
    if (qword_1ED2A7EB8 != -1)
      swift_once();
    v21 = &qword_1ED2A7EB0;
  }
  v22 = (void *)*v21;
  v23 = *(_QWORD *)(*v21 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentRSSUpdateLimit);
  v24 = v58;
  sub_1A905DC3C(v58, (uint64_t)&aBlock);
  v25 = *(void **)&v3[v19];
  type metadata accessor for RSSFeedUpdater.Queue();
  v26 = (_QWORD *)swift_allocObject();
  v27 = MEMORY[0x1E0DEE9E0];
  v28 = MEMORY[0x1E0DEE9D8];
  v26[13] = MEMORY[0x1E0DEE9D8];
  v26[14] = v27;
  v26[15] = 0;
  v26[16] = 0;
  v26[2] = 0x7565755164656546;
  v26[3] = 0xE900000000000065;
  v26[4] = v23;
  v29 = v51;
  v26[5] = v51;
  sub_1A905D4AC(&aBlock, (uint64_t)(v26 + 6));
  v30 = v57;
  v26[11] = v57;
  v26[12] = v25;
  *(_QWORD *)&v15[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_feedQueue] = v26;
  *(_QWORD *)&v15[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_ctx] = v29;
  sub_1A905DC3C(v24, (uint64_t)&v15[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_ingesterProvider]);
  *(_QWORD *)&v15[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_externalFeedDownloader] = v30;
  v49(v12, v50, v54);
  v31 = v29;
  swift_unknownObjectRetain_n();
  v32 = v25;
  v33 = v31;
  v34 = v32;
  v35 = v22;
  sub_1A93F7D88();
  *(_QWORD *)&aBlock = v28;
  sub_1A93F8B5C();
  *(_QWORD *)&v15[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_pendingRestorationQueue] = sub_1A93F888C();

  v36 = (objc_class *)type metadata accessor for RSSFeedUpdater();
  v64.receiver = v15;
  v64.super_class = v36;
  v37 = (char *)objc_msgSendSuper2(&v64, sel_init);
  objc_msgSend(v30, sel_setDelegate_, v37);
  dispatch_suspend(*(dispatch_object_t *)&v37[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_pendingRestorationQueue]);
  if (qword_1ED2A4890 != -1)
    swift_once();
  v38 = sub_1A93F7698();
  __swift_project_value_buffer(v38, (uint64_t)qword_1ED2A87A8);
  v39 = sub_1A93F7674();
  v40 = sub_1A93F87B4();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v41 = 0;
    _os_log_impl(&dword_1A904E000, v39, v40, "Restoring background download tasks.", v41, 2u);
    MEMORY[0x1AF41411C](v41, -1, -1);
  }

  v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v62 = sub_1A934FADC;
  v63 = v42;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v60 = sub_1A908A91C;
  v61 = &block_descriptor_67;
  v43 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v57, sel_restoreBackgroundDownloadTasksWithCompletion_, v43);

  _Block_release(v43);
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_0(v58);
  v44 = *(_QWORD *)&v37[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_feedQueue];
  v45 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v46 = *(_QWORD *)(v44 + 120);
  *(_QWORD *)(v44 + 120) = sub_1A9091614;
  *(_QWORD *)(v44 + 128) = v45;
  sub_1A9085818(v46);
  return v37;
}

void sub_1A9078858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  int *updated;
  id v10;
  void *v11;
  id v12;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1A93F726C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  aBlock[4] = sub_1A909EE48;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_31;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_performBlock_, v7);
  _Block_release(v7);
  v8 = v1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_request;
  updated = (int *)type metadata accessor for FeedUpdateRequest();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8 + updated[5], v2);
  v10 = objc_allocWithZone((Class)type metadata accessor for DownloadableURLOptions());
  sub_1A93F7170();
  v11 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v10, sel_init_nonAppInitiated_, v11, 1);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_externalFeedDownloader), sel_startDownloadTaskForFeedURL_userInitiated_useBackgroundFetch_, v12, *(unsigned __int8 *)(v8 + updated[9]), *(unsigned __int8 *)(v8 + updated[11]));

}

uint64_t type metadata accessor for DownloadableURLOptions()
{
  return objc_opt_self();
}

uint64_t sub_1A9078AA0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A93BF2AC(a1, *(uint64_t (**)(uint64_t, _QWORD))(v1 + 16));
}

uint64_t sub_1A9078AA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, _QWORD);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, _QWORD))(v1 + 16);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C48);
  return v3(a1, *(_QWORD *)(a1 + *(int *)(v4 + 48)));
}

void sub_1A9078AF4(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(*(_QWORD *)(v3 + 16) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A907B23C(a1, a2, v3 + v5, *(_QWORD *)(v3 + v6), *(_QWORD *)(v3 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned __int8 *)(v3 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), v3 + ((v6 + 39) & 0xFFFFFFFFFFFFFFF8), a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t Traceable.traced(by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _BYTE v9[40];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a4, v4, a2);
  sub_1A905DC3C(a1, (uint64_t)v9);
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a3 + 16))(v9, a2, a3);
}

uint64_t sub_1A9078BDC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;

  v29 = a3;
  v30 = a5;
  v31 = a2;
  v32 = a6;
  v8 = *(_QWORD *)(*(_QWORD *)(a4 - 8) + 64);
  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v28 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v15 = v9;
  v27 = v9;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17 = a4;
  v16((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v29, a4);
  v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v19 = (v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (*(unsigned __int8 *)(v15 + 80) + v19 + 8) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v21 = swift_allocObject();
  v22 = v30;
  *(_QWORD *)(v21 + 16) = v17;
  *(_QWORD *)(v21 + 24) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v21 + v18, v13, v10);
  v23 = v31;
  *(_QWORD *)(v21 + v19) = v31;
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v21 + v20, v28, v17);
  *(_QWORD *)(v21 + ((v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91D0);
  swift_allocObject();
  v24 = v23;
  swift_retain();
  v33 = sub_1A93F7A94();
  sub_1A9066D74(&qword_1ED2A91C8, &qword_1ED2A91D0, MEMORY[0x1E0C96108]);
  swift_retain();
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  return swift_release();
}

BOOL Optional<A>.containsVisibleText.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v4 = sub_1A93F6E34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    return 0;
  v13[0] = a1;
  v13[1] = a2;
  sub_1A93F6E10();
  sub_1A90828B0();
  v8 = sub_1A93F8AE4();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  return v11 != 0;
}

uint64_t sub_1A9078F14(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v6 = sub_1A93F7D58();
  v19[0] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7DB8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  v14 = qword_1ED2A93C0;
  swift_retain();
  if (v14 != -1)
    swift_once();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a3;
  v15[3] = sub_1A909CFCC;
  v15[4] = v13;
  aBlock[4] = sub_1A90CD2E8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_46_1;
  v16 = _Block_copy(aBlock);
  v17 = a3;
  sub_1A93F7D88();
  v19[1] = MEMORY[0x1E0DEE9D8];
  sub_1A90A1130();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v12, v8, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v19[0] + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

void sub_1A9079148(uint64_t a1, os_unfair_lock_s *a2, char *a3, uint64_t a4, char a5, _QWORD *a6)
{
  uint64_t *v10;
  os_unfair_lock_s *v11;

  v10 = (uint64_t *)&a2[4];
  v11 = a2 + 10;
  os_unfair_lock_lock(a2 + 10);
  sub_1A90791B8(v10, a3, a4, a5, a6);
  os_unfair_lock_unlock(v11);
}

uint64_t sub_1A90791B8(uint64_t *a1, char *a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  NSObject *v24;
  int v25;
  char v26;
  void (*v27)(_QWORD, _QWORD, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  os_signpost_id_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint8_t *v49;
  uint64_t v50;
  int v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  void (*v60)(_QWORD, _QWORD, _QWORD);
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v10 = sub_1A93F75FC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v47 - v15;
  v17 = sub_1A93F762C();
  result = MEMORY[0x1E0C80A78](v17);
  if (!*a1)
  {
    v59 = a5;
    v60 = (void (*)(_QWORD, _QWORD, _QWORD))v16;
    v57 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    v58 = v20;
    v55 = v11;
    if (qword_1ED2A86B0 != -1)
    {
      v46 = result;
      swift_once();
      result = v46;
    }
    v21 = result;
    v22 = __swift_project_value_buffer(result, (uint64_t)qword_1ED2A8698);
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
    v54 = v21;
    v23(v57, v22, v21);
    sub_1A93F7620();
    sub_1A93F75D8();
    sub_1A905DC3C((uint64_t)v59, (uint64_t)v62);
    v24 = sub_1A93F7620();
    v25 = sub_1A93F8940();
    v26 = sub_1A93F8A6C();
    v56 = a1;
    if ((v26 & 1) == 0)
    {
      v53 = v5;

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
      v29 = v55;
      v28 = v10;
      v27 = v60;
      (*(void (**)(char *, _QWORD, uint64_t))(v55 + 16))(v14, v60, v10);
LABEL_14:
      sub_1A93F765C();
      swift_allocObject();
      v41 = sub_1A93F7650();
      (*(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t))(v29 + 8))(v27, v28);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v54);
      v42 = v59[3];
      v43 = v59[4];
      __swift_project_boxed_opaque_existential_1(v59, v42);
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v42, v43);
      v44 = v56;
      *v56 = v41;
      v44[1] = result;
      v44[2] = v45;
      return result;
    }
    v52 = v24;
    v51 = v25;
    if ((a4 & 1) == 0)
    {
      v27 = v60;
      if (a2)
      {
        v53 = v5;
        v48 = a2;
        v28 = v10;
LABEL_13:
        v30 = v55;
        v60 = *(void (**)(_QWORD, _QWORD, _QWORD))(v55 + 16);
        v60(v14, v27, v28);
        v31 = (uint8_t *)swift_slowAlloc();
        v50 = swift_slowAlloc();
        v65 = v50;
        *(_DWORD *)v31 = 136315138;
        v49 = v31 + 4;
        v33 = v63;
        v32 = v64;
        __swift_project_boxed_opaque_existential_1(v62, v63);
        v34 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8);
        v35 = v32;
        v29 = v30;
        v36 = v34(v33, v35);
        v61 = sub_1A906436C(v36, v37, &v65);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
        v38 = sub_1A93F75E4();
        v39 = v52;
        _os_signpost_emit_with_name_impl(&dword_1A904E000, v52, (os_signpost_type_t)v51, v38, v48, "[identifier=%{name=identifier}s] ForegroundNetworkFetch", v31, 0xCu);
        v40 = v50;
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v40, -1, -1);
        MEMORY[0x1AF41411C](v31, -1, -1);

        (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v28);
        v60(v14, v27, v28);
        goto LABEL_14;
      }
LABEL_19:
      result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
      __break(1u);
      return result;
    }
    v27 = v60;
    if ((unint64_t)a2 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (a2 >> 11 == 27)
      {
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      if (a2 >> 16 <= 0x10)
      {
        v28 = v10;
        v48 = sub_1A910F87C();
        v53 = v5;
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

void sub_1A90795B8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  MEMORY[0x1E0C80A78](a1);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  type metadata accessor for AssetSourceStep();
}

uint64_t sub_1A907967C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t AssociatedConformanceWitness;
  char v19;

  v10 = v7 + *(int *)(a1 + 52);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v7, v5, v4);
  v11 = MEMORY[0x1AF414014](&protocol conformance descriptor for AssetSourceStep<A, B>, a1);
  v12 = AssetProcessingStep.metadataTrace.getter(a1, v11, v8 - 120);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v1 + 16))(v6, v10, v5, v12);
  swift_getDynamicType();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v6, v5);
  v13 = sub_1A93F9474();
  v15 = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 - 136) = v13;
  *(_QWORD *)(v8 - 128) = v15;
  sub_1A93F810C();
  v16 = *(_QWORD *)(v8 - 136);
  v17 = *(_QWORD *)(v8 - 128);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v19 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)(v8 - 120, (uint64_t)"FetchFromSource", 15, 2, 0, v16, v17, v19 & 1, *(_QWORD *)(v8 - 144), v2, AssociatedConformanceWitness);
  swift_bridgeObjectRelease();
  sub_1A9060D8C(v8 - 120);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 152) + 8))(v3, v2);
}

uint64_t sub_1A90797E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AnyAssetSource.fetch(asset:)();
  *a1 = result;
  return result;
}

uint64_t AnyAssetSource.fetch(asset:)()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t sub_1A9079824(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[4];
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1A9079844(a1, (uint64_t)v1 + ((v3 + 48) & ~v3), v1[2], v1[3], v2, v1[5]);
}

uint64_t sub_1A9079844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)&v15 - v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a6 + 40))(a1, a5, a6);
  swift_getAssociatedConformanceWitness();
  v13 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
  return v13;
}

uint64_t sub_1A9079938@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1A9079958(a1, v2[5], v2[6], v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1A9079958@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  unint64_t v51;
  _QWORD *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t AssociatedConformanceWitness;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  char *v95;
  char *v96;
  void (*v97)(char *, uint64_t, uint64_t);
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  _QWORD v106[3];
  uint64_t v107;
  uint64_t v108;
  __int128 v109[2];
  uint64_t v110;
  _QWORD v111[3];
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v99 = a6;
  v93 = a3;
  v103 = a2;
  v98 = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_1A93F8A90();
  v12 = *(_QWORD *)(v11 - 8);
  v82 = v11;
  v83 = v12;
  MEMORY[0x1E0C80A78](v11);
  v96 = (char *)&v81 - v13;
  v14 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v89 = v14;
  v15 = sub_1A93F7770();
  v91 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v90 = (char *)&v81 - v16;
  v101 = a4;
  v102 = a5;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v17 = sub_1A93F8A90();
  v18 = MEMORY[0x1AF414014](MEMORY[0x1E0C957C0], v15);
  v92 = v15;
  v87 = v18;
  v19 = sub_1A93F77DC();
  v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v21 = type metadata accessor for RepublishingValueSubject(255, v17, v20, MEMORY[0x1E0DEDB38]);
  v22 = MEMORY[0x1AF414014](MEMORY[0x1E0C95950], v19);
  v23 = MEMORY[0x1AF414014](&protocol conformance descriptor for RepublishingValueSubject<A, B>, v21);
  v111[0] = v19;
  v111[1] = v21;
  v111[2] = v22;
  v112 = v23;
  v24 = sub_1A93F7878();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95C98], v24);
  v25 = sub_1A93F7740();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95768], v25);
  v26 = sub_1A93F7734();
  v85 = *(_QWORD *)(v26 - 8);
  v86 = v26;
  v27 = MEMORY[0x1E0C80A78](v26);
  v84 = (uint64_t)&v81 - v28;
  v29 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v30 = *(_QWORD *)(v29 + 64);
  v31 = MEMORY[0x1E0C80A78](v27);
  v95 = (char *)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v81 - v32;
  v94 = a1;
  v34 = *a1;
  v35 = AssociatedTypeWitness;
  v36 = v103;
  v37 = sub_1A93F78FC();
  v38 = v99;
  MEMORY[0x1AF411C8C](v111, v36, v34, v35, v37);
  v97 = (void (*)(char *, uint64_t, uint64_t))v111[0];
  v100 = v37;
  if (v111[0])
  {
    v39 = type metadata accessor for UniquePipeline(0, v101, v102, v38);
    v94 = (_QWORD *)MEMORY[0x1AF414014](&protocol conformance descriptor for UniquePipeline<A>, v39);
    AssetProcessingStep.metadataTrace.getter(v39, (uint64_t)v94, (uint64_t)&v114);
    if (v115)
    {
      v93 = v39;
      sub_1A905D4AC(&v114, (uint64_t)v111);
      v117 = nullsub_1(v34, v35, v100, v38);
      v40 = v95;
      v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 16))(v95, v36, v35);
      MEMORY[0x1E0C80A78](v41);
      v42 = sub_1A93F7F38();
      swift_bridgeObjectRetain();
      MEMORY[0x1AF414014](MEMORY[0x1E0DE9ED0], v42);
      v43 = v96;
      sub_1A93F81FC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v40, v35);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v43, 1, v35) == 1)
      {
        (*(void (**)(char *, uint64_t))(v83 + 8))(v43, v82);
LABEL_10:
        v110 = 0;
        memset(v109, 0, sizeof(v109));
        sub_1A905FD54((uint64_t)v109, &qword_1ED2A46E8);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v111);
        v66 = v98;
        v75 = v100;
        v39 = v93;
LABEL_14:
        *(_QWORD *)&v109[0] = v97;
        v76 = AssetProcessingStep.metadataTrace.getter(v39, (uint64_t)v94, (uint64_t)&v114);
        v77 = MEMORY[0x1AF414014](MEMORY[0x1E0C95D90], v75, v76);
        v78 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
        Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)((uint64_t)&v114, (uint64_t)"FromUniquePipeline", 18, 2, 0, 0, 0, v78 & 1, (uint64_t)v111, v75, v77);
        sub_1A905FD54((uint64_t)&v114, &qword_1ED2AD0C0);
        v80 = type metadata accessor for EmitLifecycle(0, v75, v77, v79);
        MEMORY[0x1AF414014](&protocol conformance descriptor for EmitLifecycle<A>, v80);
        v64 = sub_1A93F7B24();
        swift_release();
        result = (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v80 - 8) + 8))(v111, v80);
        goto LABEL_15;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8650);
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_10;
      sub_1A905D4AC(v109, (uint64_t)&v114);
      v67 = v115;
      v68 = v116;
      __swift_project_boxed_opaque_existential_1(&v114, v115);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v68 + 8))(&v104, v67, v68);
      v39 = v93;
      if (v105)
      {
        sub_1A905D4AC(&v104, (uint64_t)v106);
        v69 = v112;
        v70 = v113;
        __swift_project_boxed_opaque_existential_1(v111, v112);
        v71 = v107;
        v72 = v108;
        __swift_project_boxed_opaque_existential_1(v106, v107);
        v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 8))(v71, v72);
        (*(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 16))("SwitchingToUniquePipelineTrace", 30, 2, v73, v74, v69, v70);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v106);
      }
      else
      {
        sub_1A905FD54((uint64_t)&v104, &qword_1ED2AD0C0);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v114);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v111);
    }
    else
    {
      sub_1A905FD54((uint64_t)&v114, &qword_1ED2AD0C0);
    }
    v66 = v98;
    v75 = v100;
    goto LABEL_14;
  }
  v44 = v101;
  v45 = v35;
  v81 = v35;
  v46 = v102;
  v47 = type metadata accessor for UniquePipeline(0, v101, v102, v38);
  v48 = v36;
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  v96 = *(char **)(v36 + *(int *)(v47 + 48));
  v97 = v49;
  v50 = v33;
  v49(v33, v48, v45);
  v51 = (*(unsigned __int8 *)(v29 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v52 = (_QWORD *)swift_allocObject();
  v52[2] = v44;
  v52[3] = v46;
  v53 = v96;
  v52[4] = v38;
  v52[5] = v53;
  v54 = (char *)v52 + v51;
  v55 = v50;
  v56 = v50;
  v57 = v81;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v54, v56, v81);
  v58 = swift_allocObject();
  *(_QWORD *)(v58 + 16) = sub_1A9055778;
  *(_QWORD *)(v58 + 24) = v52;
  v59 = swift_allocObject();
  *(_QWORD *)(v59 + 16) = sub_1A9055778;
  *(_QWORD *)(v59 + 24) = v52;
  swift_retain_n();
  swift_retain();
  v60 = v90;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  v61 = v84;
  v62 = v92;
  Publisher.replayingBufferedMulticast()(v92, v87, v84);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v60, v62);
  v63 = v86;
  MEMORY[0x1AF414014](MEMORY[0x1E0C95708], v86);
  v64 = sub_1A93F7B24();
  (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v61, v63);
  v97(v55, v103, v57);
  v111[0] = v64;
  sub_1A93F7F5C();
  swift_retain();
  sub_1A93F7F80();
  result = swift_release();
  v66 = v98;
LABEL_15:
  *v66 = v64;
  return result;
}

uint64_t type metadata accessor for RepublishingValueSubject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RepublishingValueSubject);
}

uint64_t Publisher.replayingBufferedMulticast()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v26 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_1A93F8A90();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  v9 = sub_1A93F77DC();
  v25 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  sub_1A93F7B84();
  swift_release();
  v13 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v15 = type metadata accessor for RepublishingValueSubject(0, v6, v13, AssociatedConformanceWitness);
  v24 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v8, 1, 1, AssociatedTypeWitness);
  RepublishingValueSubject.__allocating_init(_:)((uint64_t)v8);
  v16 = MEMORY[0x1AF414014](MEMORY[0x1E0C95950], v9);
  v17 = MEMORY[0x1AF414014](&protocol conformance descriptor for RepublishingValueSubject<A, B>, v15);
  v18 = sub_1A93F7CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v9);
  v30 = v17;
  v31 = v18;
  v27 = v9;
  v28 = v15;
  v29 = v16;
  v19 = sub_1A93F7878();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95C98], v19);
  v20 = sub_1A93F79F8();
  swift_release();
  v27 = v20;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  v22 = sub_1A93F7740();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95768], v22);
  sub_1A93F7B30();
  swift_release();
  return swift_release();
}

uint64_t RepublishingValueSubject.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  RepublishingValueSubject.init(_:)(a1);
  return v2;
}

uint64_t *RepublishingValueSubject.init(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  v1[2] = v4;
  *((_BYTE *)v1 + 24) = 1;
  v5 = (uint64_t)v1 + *(_QWORD *)(v3 + 120);
  v6 = sub_1A93F78C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (uint64_t)v1 + *(_QWORD *)(*v1 + 128);
  v8 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)v7 = sub_1A907A690();
  *(_BYTE *)(v7 + 8) = v9;
  *(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 144)) = MEMORY[0x1E0DEE9D8];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))((uint64_t)v1 + *(_QWORD *)(*v1 + 136), a1, v8);
  return v1;
}

uint64_t sub_1A907A690()
{
  return 0;
}

void sub_1A907A69C(uint64_t a1)
{
  uint64_t *v1;

  sub_1A907A6BC(a1, v1[7], v1[2], v1[3], v1[4]);
}

void sub_1A907A6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;

  v7 = sub_1A93F738C();
  MEMORY[0x1E0C80A78](v7);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(a5 + 16))(a3, a5);
  type metadata accessor for InMemoryAssetCache.Record();
}

uint64_t sub_1A907A7B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  MEMORY[0x1AF411C8C](v7, v1, v4, a1, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v4);
  v9 = *(_QWORD *)(v8 - 72);
  if (v9)
  {
    sub_1A93F7374();
    v10 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 136);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8 - 168) + 40))(v10, v5, *(_QWORD *)(v8 - 160));
    swift_endAccess();
    v11 = *(_QWORD *)(v3 - 8);
    v12 = *(_QWORD *)(v8 - 136);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v12, v9 + *(_QWORD *)(*(_QWORD *)v9 + 120), v3);
    swift_release();
    v13 = 0;
    v14 = v12;
  }
  else
  {
    v11 = *(_QWORD *)(v3 - 8);
    v13 = 1;
    v14 = *(_QWORD *)(v8 - 136);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v14, v13, 1, v3);
}

void sub_1A907A8A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1A907A8C4(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1A907A8B8(char a1)
{
  return a1 & 1;
}

void sub_1A907A8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[16];

  v16[3] = a2;
  v12 = sub_1A93F738C();
  v16[15] = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v16[4] = (char *)v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16[2] = (char *)v16 - v15;
  swift_getAssociatedTypeWitness();
  v16[9] = a3;
  v16[10] = a4;
  v16[11] = a5;
  v16[12] = a6;
  v16[13] = a7;
  type metadata accessor for InMemoryAssetCache.Record();
}

uint64_t sub_1A907A9A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  void (*v24)(_BYTE *, uint64_t);
  _BYTE v26[96];

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v5 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = &v26[-v9];
  v11 = *(int *)(v8 + 48);
  v12 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v3 - 184) = v12;
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16);
  v13(&v26[-v9], v1, v2);
  v14 = *(_QWORD *)(v1 + v11);
  *(_QWORD *)&v10[v11] = v14;
  v15 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 136);
  swift_beginAccess();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 72) + 16);
  v17 = *(_QWORD *)(v3 - 176);
  v16(v17, v15, v0);
  v18 = *(int *)(TupleTypeMetadata2 + 48);
  v19 = *(_QWORD *)(v3 - 168);
  v13(v7, v19, v2);
  v20 = *(_QWORD *)(v19 + v18);
  *(_QWORD *)&v7[v18] = v20;
  v21 = v20 + *(_QWORD *)(*(_QWORD *)v20 + 136);
  swift_beginAccess();
  v22 = *(_QWORD *)(v3 - 160);
  v16(v22, v21, v0);
  LOBYTE(v21) = sub_1A93F732C();
  v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 72) + 8);
  v23(v22, v0);
  v23(v17, v0);
  v24 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 184) + 8);
  v24(v7, v2);
  v24(v10, v2);
  return v21 & 1;
}

void type metadata accessor for InMemoryAssetCache.Record()
{
  JUMPOUT(0x1AF413F6CLL);
}

uint64_t sub_1A907AB44()
{
  return sub_1A907AB60();
}

uint64_t sub_1A907AB60()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  sub_1A93F78FC();
  sub_1A93F7F5C();
  sub_1A93F7F14();
  return swift_release();
}

void sub_1A907AC68(uint64_t a1)
{
  uint64_t *v1;

  sub_1A907AC84(a1, v1[2], v1[3], v1[4]);
}

void sub_1A907AC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD v5[4];
  uint64_t AssociatedTypeWitness;

  v5[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v5[3] = (char *)v5 - v4;
  sub_1A907ADEC();
}

void sub_1A907ADEC()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for InMemoryAssetCache.Record();
}

void sub_1A907B23C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  __int128 v69[2];

  v49 = a8;
  v53 = a7;
  v52 = a6;
  v51 = a5;
  v50 = a4;
  v55 = a3;
  v48 = a2;
  v63 = a9;
  v64 = a10;
  v65 = a11;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5620);
  v13 = MEMORY[0x1E0C80A78](v62);
  v61 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a10 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v13);
  v17 = sub_1A93F726C();
  v18 = *(_QWORD *)(v17 - 8);
  v45 = v17;
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5A80);
  v56 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v46 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5988);
  v59 = *(_QWORD *)(v22 - 8);
  v60 = v22;
  v23 = MEMORY[0x1E0C80A78](v22);
  v58 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v47 = (char *)&v45 - v25;
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v57 = a1;
  v26(v20, a1, v17);
  v27 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v64);
  v28 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v29 = (v19 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = (*(unsigned __int8 *)(v15 + 80) + v29 + 8) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v31 = swift_allocObject();
  v32 = v65;
  *(_QWORD *)(v31 + 16) = v27;
  *(_QWORD *)(v31 + 24) = v32;
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v31 + v28, v20, v45);
  v33 = v48;
  *(_QWORD *)(v31 + v29) = v48;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v31 + v30, (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v27);
  v34 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5980);
  sub_1A9066D74(&qword_1ED2A5978, &qword_1ED2A5980, MEMORY[0x1E0C957C0]);
  v35 = v46;
  sub_1A93F7AAC();
  v36 = v49;
  sub_1A905DC3C(v49, (uint64_t)v69);
  v37 = swift_allocObject();
  v38 = v50;
  v39 = v51;
  *(_QWORD *)(v37 + 16) = v50;
  *(_QWORD *)(v37 + 24) = v39;
  v40 = v52;
  *(_QWORD *)(v37 + 32) = v52;
  LOBYTE(v16) = v53;
  *(_BYTE *)(v37 + 40) = v53;
  sub_1A905D4AC(v69, v37 + 48);
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v38;
  *(_QWORD *)(v41 + 24) = v39;
  *(_QWORD *)(v41 + 32) = v40;
  *(_BYTE *)(v41 + 40) = v16;
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v38;
  *(_QWORD *)(v42 + 24) = v39;
  *(_QWORD *)(v42 + 32) = v40;
  *(_BYTE *)(v42 + 40) = v16;
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = v38;
  *(_QWORD *)(v43 + 24) = v39;
  *(_QWORD *)(v43 + 32) = v40;
  *(_BYTE *)(v43 + 40) = v16;
  sub_1A9066D74(&qword_1ED2A5A78, &qword_1ED2A5A80, MEMORY[0x1E0C96148]);
  swift_retain_n();
  v44 = v54;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v44);
  sub_1A905DC3C(v36, (uint64_t)v69);
  v67 = 0;
  v68 = 0xE000000000000000;
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  v67 = 60;
  v68 = 0xE100000000000000;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v65 + 24))(&v66, v64);
  __asm { BR              X10 }
}

uint64_t sub_1A907B72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F7188();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v1 - 168);
  v2 = *(_QWORD *)(v1 - 160);
  v5 = *(_QWORD *)(v1 - 248);
  v4 = *(_QWORD *)(v1 - 240);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v7 = *(_QWORD *)(v1 - 232);
  v6(v5, v0, v7);
  sub_1A907C394(v1 - 128, v1 - 168);
  v8 = *(_QWORD *)(v1 - 224);
  v6(v8, v5, v7);
  v9 = *(int **)(v1 - 216);
  sub_1A907C394(v1 - 168, v8 + v9[9]);
  v10 = v8 + v9[10];
  *(_QWORD *)v10 = "DOWNLOAD";
  *(_QWORD *)(v10 + 8) = 8;
  *(_BYTE *)(v10 + 16) = 2;
  *(_BYTE *)(v8 + v9[12]) = 0;
  *(_QWORD *)(v1 - 184) = v3;
  *(_QWORD *)(v1 - 176) = v2;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v1 - 184);
  v12 = *(_QWORD *)(v1 - 176);
  sub_1A905FD54(v1 - 168, &qword_1ED2AD0C0);
  v13 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v13(v5, v7);
  v14 = (_QWORD *)(v8 + v9[11]);
  *v14 = v11;
  v14[1] = v12;
  *(_BYTE *)(v8 + v9[13]) = 0;
  sub_1A907C3DC(v8, *(_QWORD *)(v1 - 208));
  sub_1A905FD54(v1 - 128, &qword_1ED2AD0C0);
  return ((uint64_t (*)(uint64_t, uint64_t))v13)(v0, v7);
}

uint64_t ForegroundSessionSource.fetch(asset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int v32;
  _UNKNOWN **v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, char *, uint64_t);
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  _UNKNOWN **v118;

  v106 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a2 + 16);
  v88 = sub_1A93F7A4C();
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v86 = (char *)&v83 - v9;
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9780);
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v89 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8918);
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v90 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8CF8);
  v96 = *(_QWORD *)(v98 - 8);
  MEMORY[0x1E0C80A78](v98);
  v111 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4798);
  v100 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v99 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = *(_QWORD *)(a2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = sub_1A9066D74(&qword_1ED2A59E8, &qword_1ED2A4798, MEMORY[0x1E0C95B78]);
  v101 = v13;
  v97 = AssociatedTypeWitness;
  v95 = v16;
  v17 = sub_1A93F783C();
  v103 = *(_QWORD *)(v17 - 8);
  v104 = v17;
  MEMORY[0x1E0C80A78](v17);
  v102 = (char *)&v83 - v18;
  v83 = sub_1A93F73E0();
  v19 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v21 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1A93F7698();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v24);
  v110 = (char *)&v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = v28;
  MEMORY[0x1E0C80A78](v27);
  v84 = *(_QWORD *)v107;
  v85 = v29;
  v30 = *(uint64_t **)(v29 + 16);
  v109 = a1;
  v107 = (void (*)(char *, uint64_t, uint64_t))v30;
  ((void (*)(char *, uint64_t, uint64_t))v30)((char *)&v83 - v31, a1, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8650);
  v32 = swift_dynamicCast();
  v105 = v7;
  if (v32)
  {
    v34 = *((_QWORD *)&v117 + 1);
    v33 = v118;
    __swift_project_boxed_opaque_existential_1(&v116, *((uint64_t *)&v117 + 1));
    ((void (*)(__int128 *__return_ptr, uint64_t, _UNKNOWN **))v33[1])(&v113, v34, v33);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v116);
    if (*((_QWORD *)&v114 + 1))
    {
      sub_1A905D4AC(&v113, (uint64_t)&v116);
      goto LABEL_8;
    }
  }
  else
  {
    v118 = 0;
    v116 = 0u;
    v117 = 0u;
    sub_1A905FD54((uint64_t)&v116, &qword_1ED2A46E8);
    v113 = 0u;
    v114 = 0u;
    v115 = 0;
  }
  if (qword_1ED2AD108 != -1)
    swift_once();
  v35 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED2AD0F0);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v26, v35, v22);
  v36 = sub_1A93F8784();
  sub_1A93F73D4();
  v37 = sub_1A93F73A4();
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v83);
  v40 = type metadata accessor for LoggerTrace(0);
  *((_QWORD *)&v117 + 1) = v40;
  v118 = &protocol witness table for LoggerTrace;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v116);
  *boxed_opaque_existential_1 = v37;
  boxed_opaque_existential_1[1] = v39;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))((char *)boxed_opaque_existential_1 + *(int *)(v40 + 20), v26, v22);
  *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v40 + 24)) = v36;
  sub_1A905FD54((uint64_t)&v113, &qword_1ED2AD0C0);
LABEL_8:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5B88);
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 24) = 0;
  *(_QWORD *)(v42 + 32) = 0;
  *(_QWORD *)(v42 + 16) = 0;
  *(_DWORD *)(v42 + 40) = 0;
  v43 = v109;
  v44 = v107;
  v107(v110, v109, v8);
  v45 = v86;
  v46 = sub_1A93F7A58();
  MEMORY[0x1E0C80A78](v46);
  v83 = sub_1A93F726C();
  v47 = v89;
  v48 = v88;
  sub_1A93F7A40();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v45, v48);
  *(_QWORD *)&v113 = v84;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9290);
  sub_1A9066D74(&qword_1ED2A9778, &qword_1ED2A9780, MEMORY[0x1E0C964C8]);
  sub_1A9066D74(&qword_1ED2A9288, &qword_1ED2A9290, MEMORY[0x1E0C96108]);
  v49 = v90;
  v50 = v92;
  sub_1A93F7B54();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v47, v50);
  sub_1A9066D74(&qword_1ED2A8910, &qword_1ED2A8918, MEMORY[0x1E0C95698]);
  v51 = v94;
  sub_1A93F7C14();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v49, v51);
  v52 = v110;
  v44(v110, v43, v8);
  sub_1A905DC3C((uint64_t)&v116, (uint64_t)&v113);
  v53 = v85;
  v54 = *(unsigned __int8 *)(v85 + 80);
  v55 = (v54 + 32) & ~v54;
  v93 = v54 | 7;
  v56 = (v108 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
  v57 = swift_allocObject();
  v58 = v112;
  *(_QWORD *)(v57 + 16) = v8;
  *(_QWORD *)(v57 + 24) = v58;
  v59 = v57 + v55;
  v60 = *(void (**)(uint64_t, char *, uint64_t))(v53 + 32);
  v60(v59, v52, v8);
  *(_QWORD *)(v57 + v56) = v42;
  v61 = v57 + ((v56 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v61 = "ForegroundNetworkFetch";
  *(_QWORD *)(v61 + 8) = 22;
  *(_BYTE *)(v61 + 16) = 2;
  sub_1A905D4AC(&v113, v57 + ((v56 + 39) & 0xFFFFFFFFFFFFFFF8));
  v62 = swift_allocObject();
  *(_QWORD *)(v62 + 16) = sub_1A9078AF4;
  *(_QWORD *)(v62 + 24) = v57;
  v94 = v42;
  swift_retain();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5620);
  sub_1A9066D74(&qword_1ED2A8CF0, &qword_1ED2A8CF8, MEMORY[0x1E0C95B08]);
  sub_1A9066D74(&qword_1ED2A5618, &qword_1ED2A5620, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  v63 = v99;
  v64 = v98;
  v65 = v111;
  sub_1A93F7C5C();
  swift_release();
  v66 = v64;
  v67 = v83;
  (*(void (**)(char *, uint64_t))(v96 + 8))(v65, v66);
  sub_1A905DC3C((uint64_t)&v116, (uint64_t)&v113);
  v68 = v52;
  v107(v52, v109, v8);
  v69 = (v54 + 72) & ~v54;
  v70 = swift_allocObject();
  v71 = v112;
  *(_QWORD *)(v70 + 16) = v8;
  *(_QWORD *)(v70 + 24) = v71;
  sub_1A905D4AC(&v113, v70 + 32);
  v60(v70 + v69, v68, v8);
  v72 = v102;
  v73 = v101;
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v63, v73);
  sub_1A905DC3C((uint64_t)&v116, (uint64_t)&v113);
  v74 = (uint64_t)v105;
  (*(void (**)(uint64_t, uint64_t))(v71 + 16))(v8, v71);
  v75 = *(_QWORD *)(v67 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v74, 1, v67) == 1)
  {
    sub_1A905FD54(v74, &qword_1ED2AD3D0);
    v76 = 0;
    v77 = 0;
  }
  else
  {
    v76 = sub_1A93F7224();
    v77 = v78;
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v67);
  }
  v79 = v104;
  v80 = MEMORY[0x1AF414014](MEMORY[0x1E0C95B48], v104);
  v81 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)((uint64_t)&v113, (uint64_t)"ForegroundDownload", 18, 2, 1, v76, v77, v81 & 1, v106, v79, v80);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A905FD54((uint64_t)&v113, &qword_1ED2AD0C0);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v72, v79);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v116);
}

uint64_t sub_1A907C394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A907C3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t EyebrowBuilder.__allocating_init(episode:style:explicitSymbol:abbreviatedPubDateConfig:hostingViewHasLimitedSpace:)(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _BYTE v26[24];
  uint64_t v27;
  uint64_t v28;

  v24 = a4;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD058);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  sub_1A905DC3C(a1, (uint64_t)v26);
  swift_storeEnumTagMultiPayload();
  v25 = (char)a2;
  sub_1A9062170(a5, (uint64_t)v14, &qword_1ED2AD058);
  v18 = v27;
  v19 = v28;
  v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
  v21 = sub_1A907C58C(v20, (uint64_t)v17, &v25, 1, a3, v24, (uint64_t)v14, 1, a6, v6, v18, v19);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  sub_1A905FD54(a5, &qword_1ED2AD058);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v21;
}

uint64_t sub_1A907C58C(uint64_t a1, uint64_t a2, _BYTE *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;

  v24 = a8;
  v22 = a6;
  v23 = a7;
  v21 = a5;
  v16 = *(_QWORD *)(a11 - 8);
  MEMORY[0x1E0C80A78](a10);
  v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, a11);
  return sub_1A907D168((uint64_t)v18, a2, a3, a4, v21, v22, v23, v24, a9, v19, a11, a12);
}

id DiskAssetCache<>.containsAsset(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v13;

  v4 = *v2;
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  FileBasedAssetLocation.fileURL(in:)(*(_QWORD *)(v4 + 80), a2, (uint64_t)v8);
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1A93F7224();
  v10 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_fileExistsAtPath_, v10);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

uint64_t EyebrowBuilder.init(episode:context:style:uppercase:explicitSymbol:abbreviatedPubDateConfig:showsSubscriptionBadge:hostingViewHasLimitedSpace:)(uint64_t a1, uint64_t a2, _BYTE *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, char a9)
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;

  v26 = a8;
  v24 = a6;
  v25 = a7;
  v16 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v17 = __swift_mutable_project_boxed_opaque_existential_1(a1, v16);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  v21 = sub_1A907D168((uint64_t)v19, a2, a3, a4, a5, v24, v25, v26, a9, v9, v16, v15);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v21;
}

uint64_t EyebrowBuilder.__deallocating_deinit()
{
  EyebrowBuilder.deinit();
  return swift_deallocClassInstance();
}

uint64_t EyebrowBuilder.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 168);
  sub_1A9064714(v0 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, type metadata accessor for EyebrowBuilder.ListContext);
  sub_1A905FD54(v0 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_abbreviatedPubDateConfig, &qword_1ED2AD058);
  return v0;
}

uint64_t sub_1A907C92C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  _QWORD *v22;
  char v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  int v71;
  uint64_t v72;
  char *v73;
  uint64_t *v74;
  int v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  unint64_t v80;
  char *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  char v85[24];
  char v86;
  _BYTE v87[24];
  uint64_t v88;
  uint64_t v89;

  v2 = v1;
  v84 = *v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD058);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v72 - v8;
  v83 = type metadata accessor for EyebrowBuilder.ListContext(0);
  v10 = MEMORY[0x1E0C80A78](v83);
  v81 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v72 - v12;
  v14 = *(_QWORD *)a1;
  LODWORD(v15) = *(unsigned __int8 *)(a1 + 8);
  v16 = v2[24];
  v17 = v2[25];
  v82 = v2 + 21;
  __swift_project_boxed_opaque_existential_1(v2 + 21, v16);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 72))(v16, v17) & 1) != 0)
  {
    swift_beginAccess();
    v18 = v2[15];
    v80 = v14;
    v79 = v15;
    if (v18)
    {
      v19 = v2[14];
      swift_bridgeObjectRetain();
      v20 = sub_1A907ECFC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v15 = v20[2];
      v21 = v20[3];
      if (v15 >= v21 >> 1)
        v20 = sub_1A907ECFC((_QWORD *)(v21 > 1), v15 + 1, 1, v20);
      v20[2] = v15 + 1;
      v22 = &v20[2 * v15];
      v22[4] = v19;
      v22[5] = v18;
      v14 = v80;
      LOBYTE(v15) = v79;
    }
    else
    {
      v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    if (v14 < 4)
      v23 = v15;
    else
      v23 = 0;
    if ((v23 & 1) == 0)
      goto LABEL_33;
    v73 = v7;
    sub_1A905DC3C((uint64_t)v82, (uint64_t)v87);
    swift_storeEnumTagMultiPayload();
    v85[0] = 1;
    v72 = OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase;
    LODWORD(v78) = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase);
    swift_beginAccess();
    v24 = v2[19];
    v77 = v2[18];
    sub_1A9062170((uint64_t)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_abbreviatedPubDateConfig, (uint64_t)v9, &qword_1ED2AD058);
    v25 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_showsSubscriptionBadge);
    v75 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_hostingViewHasLimitedSpace);
    v76 = v25;
    v26 = swift_allocObject();
    v27 = v88;
    v28 = v89;
    v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v87, v88);
    v74 = &v72;
    MEMORY[0x1E0C80A78](v29);
    v31 = (char *)&v72 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v32 + 16))(v31);
    swift_bridgeObjectRetain();
    v33 = sub_1A907D168(v31, v13, v85, v78, v77, v24, v9, v76, (_BYTE)v75, v26, v27, v28);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v87);
    swift_beginAccess();
    if (*(_BYTE *)(v33 + 160) == 1)
    {
      swift_beginAccess();
      v34 = *(_QWORD *)(v33 + 24);
      v7 = v73;
      if (v34)
      {
        v35 = *(_QWORD *)(v33 + 16);
        swift_beginAccess();
        *((_BYTE *)v2 + 160) = 1;
        swift_beginAccess();
        v36 = *(_BYTE *)(v33 + 161);
        swift_beginAccess();
        *((_BYTE *)v2 + 161) = v36;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_1A907ECFC(0, v20[2] + 1, 1, v20);
        v38 = v20[2];
        v37 = v20[3];
        if (v38 >= v37 >> 1)
          v20 = sub_1A907ECFC((_QWORD *)(v37 > 1), v38 + 1, 1, v20);
        v20[2] = v38 + 1;
        v39 = &v20[2 * v38];
        v39[4] = v35;
        v39[5] = v34;
        v40 = sub_1A907EEF8(*((_BYTE *)v2 + v72), v20);
        swift_bridgeObjectRelease();
LABEL_45:
        swift_release();
        return v40;
      }
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      v7 = v73;
    }
    v14 = v80;
    LOBYTE(v15) = v79;
  }
  swift_beginAccess();
  v41 = v2[15];
  if (v41)
  {
    v42 = v15;
    v43 = v14;
    v44 = v2[14];
    swift_bridgeObjectRetain();
    v20 = sub_1A907ECFC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v15 = v20[2];
    v45 = v20[3];
    if (v15 >= v45 >> 1)
      v20 = sub_1A907ECFC((_QWORD *)(v45 > 1), v15 + 1, 1, v20);
    v20[2] = v15 + 1;
    v46 = &v20[2 * v15];
    v46[4] = v44;
    v46[5] = v41;
    v14 = v43;
    LOBYTE(v15) = v42;
  }
  else
  {
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if (v14 < 4)
    v47 = v15;
  else
    v47 = 0;
  if ((v47 & 1) == 0)
  {
LABEL_33:
    if (v20[2])
    {
      v51 = v20[4];
      v50 = v20[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      v51 = 0;
      v50 = 0;
    }
    swift_bridgeObjectRelease();
    v40 = sub_1A9081A5C(v51, v50);
    swift_bridgeObjectRelease();
    return v40;
  }
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) != 1 || !v20[2])
  {
    sub_1A905DC3C((uint64_t)v82, (uint64_t)v87);
    swift_storeEnumTagMultiPayload();
    v86 = 1;
    v78 = OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase;
    LODWORD(v83) = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase);
    swift_beginAccess();
    v52 = v2[19];
    v82 = (uint64_t *)v2[18];
    sub_1A9062170((uint64_t)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_abbreviatedPubDateConfig, (uint64_t)v7, &qword_1ED2AD058);
    v53 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_showsSubscriptionBadge);
    v79 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_hostingViewHasLimitedSpace);
    LODWORD(v80) = v53;
    v54 = swift_allocObject();
    v56 = v88;
    v55 = v89;
    v57 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v87, v88);
    MEMORY[0x1E0C80A78](v57);
    v59 = (char *)&v72 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v60 + 16))(v59);
    swift_bridgeObjectRetain();
    LOBYTE(v71) = v79;
    v61 = sub_1A907D168(v59, v81, &v86, v83, v82, v52, v7, v80, v71, v54, v56, v55);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v87);
    swift_beginAccess();
    v62 = *(_QWORD *)(v61 + 24);
    if (v62)
    {
      v63 = *(_QWORD *)(v61 + 16);
      swift_beginAccess();
      v64 = *(_BYTE *)(v61 + 160);
      swift_beginAccess();
      *((_BYTE *)v2 + 160) = v64;
      swift_beginAccess();
      v65 = *(_BYTE *)(v61 + 161);
      swift_beginAccess();
      *((_BYTE *)v2 + 161) = v65;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1A907ECFC(0, v20[2] + 1, 1, v20);
      v66 = v78;
      v68 = v20[2];
      v67 = v20[3];
      if (v68 >= v67 >> 1)
        v20 = sub_1A907ECFC((_QWORD *)(v67 > 1), v68 + 1, 1, v20);
      v20[2] = v68 + 1;
      v69 = &v20[2 * v68];
      v69[4] = v63;
      v69[5] = v62;
    }
    else
    {
      v66 = v78;
    }
    v40 = sub_1A907EEF8(*((_BYTE *)v2 + v66), v20);
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  v48 = v20[4];
  v49 = v20[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = sub_1A9081A5C(v48, v49);
  swift_bridgeObjectRelease();
  return v40;
}

uint64_t sub_1A907D168(uint64_t a1, uint64_t a2, _BYTE *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v25[5];

  v25[3] = a11;
  v25[4] = a12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 32))(boxed_opaque_existential_1, a1, a11);
  LOBYTE(a1) = *a3;
  *(_OWORD *)(a10 + 32) = 0u;
  *(_OWORD *)(a10 + 48) = 0u;
  *(_OWORD *)(a10 + 64) = 0u;
  *(_OWORD *)(a10 + 80) = 0u;
  *(_OWORD *)(a10 + 96) = 0u;
  *(_OWORD *)(a10 + 112) = 0u;
  *(_OWORD *)(a10 + 128) = 0u;
  *(_WORD *)(a10 + 160) = 0;
  *(_OWORD *)(a10 + 16) = 0u;
  *(_OWORD *)(a10 + 144) = 0u;
  sub_1A905DC3C((uint64_t)v25, a10 + 168);
  sub_1A9064630(a2, a10 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, type metadata accessor for EyebrowBuilder.ListContext);
  *(_BYTE *)(a10 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) = a1;
  *(_BYTE *)(a10 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase) = a4;
  swift_beginAccess();
  *(_QWORD *)(a10 + 144) = a5;
  *(_QWORD *)(a10 + 152) = a6;
  swift_bridgeObjectRelease();
  sub_1A9062170(a7, a10 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_abbreviatedPubDateConfig, &qword_1ED2AD058);
  *(_BYTE *)(a10 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_showsSubscriptionBadge) = a8;
  *(_BYTE *)(a10 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_hostingViewHasLimitedSpace) = a9;
  sub_1A907DDB4();
  v20 = sub_1A907D31C();
  v22 = v21;
  sub_1A905FD54(a7, &qword_1ED2AD058);
  sub_1A9064714(a2, type metadata accessor for EyebrowBuilder.ListContext);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  swift_beginAccess();
  *(_QWORD *)(a10 + 16) = v20;
  *(_QWORD *)(a10 + 24) = v22;
  swift_bridgeObjectRelease();
  return a10;
}

uint64_t sub_1A907D31C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_signpost_type_t v33;
  char v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  os_signpost_id_t v42;
  void (*v43)(char *, uint64_t);
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  char *v52;
  os_signpost_type_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  const char *v58;
  char v59;
  char v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  unint64_t v69;
  os_signpost_type_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  const char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t inited;
  unint64_t v83;
  char *v84;
  uint8_t *v85;
  os_signpost_id_t v86;
  uint8_t *v87;
  uint8_t *v88;
  os_signpost_id_t v89;
  void (*v90)(char *, uint64_t);
  os_signpost_type_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  const char *v96;
  char *v97;
  uint8_t *v98;
  os_signpost_id_t v99;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  char v118;
  char v119;

  v1 = v0;
  v2 = sub_1A93F7638();
  v110 = *(_QWORD *)(v2 - 8);
  v111 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v106 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v102 = (char *)&v101 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v101 = (char *)&v101 - v8;
  MEMORY[0x1E0C80A78](v7);
  v103 = (char *)&v101 - v9;
  v114 = type metadata accessor for EyebrowBuilder.ListContext(0);
  v10 = MEMORY[0x1E0C80A78](v114);
  v108 = (uint64_t)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v101 - v12;
  v115 = sub_1A93F75FC();
  v14 = *(_QWORD *)(v115 - 8);
  v15 = MEMORY[0x1E0C80A78](v115);
  v17 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v105 = (char *)&v101 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v104 = (char *)&v101 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v101 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v101 - v26;
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v101 - v28;
  if (qword_1ED2AD0E8 != -1)
    swift_once();
  v107 = v24;
  v30 = sub_1A93F762C();
  v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED2AD0C8);
  sub_1A93F7620();
  sub_1A93F75D8();
  v113 = v31;
  v32 = sub_1A93F7620();
  v33 = sub_1A93F8940();
  v34 = sub_1A93F8A6C();
  v112 = v14;
  if ((v34 & 1) != 0)
  {
    v116 = v1;
    v35 = v17;
    v36 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v37 = v27;
    v38 = v27;
    v39 = v14;
    v40 = v115;
    v36(v37, v29, v115);
    v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v41 = 0;
    v42 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v32, v33, v42, "buildCaption", "", v41, 2u);
    MEMORY[0x1AF41411C](v41, -1, -1);

    v43 = *(void (**)(char *, uint64_t))(v39 + 8);
    v27 = v38;
    v43(v38, v40);
    v44 = v36;
    v17 = v35;
    v1 = v116;
  }
  else
  {

    v44 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v40 = v115;
  }
  v109 = v44;
  v44(v27, v29, v40);
  sub_1A93F765C();
  swift_allocObject();
  v45 = sub_1A93F7650();
  v46 = (char *)v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context;
  sub_1A9064630((uint64_t)v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, (uint64_t)v13, type metadata accessor for EyebrowBuilder.ListContext);
  v47 = swift_getEnumCaseMultiPayload() - 1;
  v116 = (_QWORD *)v45;
  switch(v47)
  {
    case 0:
    case 3:
      v48 = v1[24];
      v49 = v1[25];
      __swift_project_boxed_opaque_existential_1(v1 + 21, v48);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v49 + 40))(&v117, v48, v49);
      if ((v119 & 1) != 0)
        goto LABEL_15;
      v118 &= 1u;
      v50 = sub_1A907C92C((uint64_t)&v117);
      v51 = sub_1A93F7620();
      v52 = v107;
      sub_1A93F7644();
      v53 = sub_1A93F8934();
      if ((sub_1A93F8A6C() & 1) == 0)
        goto LABEL_42;
      v115 = v50;
      swift_retain();
      v54 = v103;
      sub_1A93F7668();
      swift_release();
      v56 = v110;
      v55 = v111;
      v57 = v29;
      if ((*(unsigned int (**)(char *, uint64_t))(v110 + 88))(v54, v111) == *MEMORY[0x1E0DF2190])
      {
        v58 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v56 + 8))(v54, v55);
        v58 = "";
      }
      v52 = v107;
      v109(v27, v107, v40);
      goto LABEL_32;
    case 1:
      v59 = v13[8];
      v60 = v13[9];
      v117 = *(_QWORD *)v13;
      v118 = v59;
      v119 = v60;
      sub_1A9360688((uint64_t)(v1 + 21));
      v50 = v61;
      v51 = sub_1A93F7620();
      v52 = v105;
      sub_1A93F7644();
      v53 = sub_1A93F8934();
      if ((sub_1A93F8A6C() & 1) == 0)
        goto LABEL_42;
      v115 = v50;
      swift_retain();
      v62 = v102;
      sub_1A93F7668();
      swift_release();
      v64 = v110;
      v63 = v111;
      if ((*(unsigned int (**)(char *, uint64_t))(v110 + 88))(v62, v111) == *MEMORY[0x1E0DF2190])
      {
        v57 = v29;
        v58 = "[Error] Interval already ended";
      }
      else
      {
        v84 = v62;
        v57 = v29;
        (*(void (**)(char *, uint64_t))(v64 + 8))(v84, v63);
        v58 = "";
      }
      v109(v27, v52, v40);
LABEL_32:
      v85 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v85 = 0;
      v86 = sub_1A93F75E4();
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v51, v53, v86, "buildCaption", v58, v85, 2u);
      v87 = v85;
      goto LABEL_35;
    case 6:
      swift_beginAccess();
      v50 = v1[4];
      swift_bridgeObjectRetain();
      v51 = sub_1A93F7620();
      v52 = v104;
      sub_1A93F7644();
      v70 = sub_1A93F8934();
      if ((sub_1A93F8A6C() & 1) == 0)
        goto LABEL_42;
      v115 = v50;
      v57 = v29;
      swift_retain();
      v71 = v101;
      sub_1A93F7668();
      swift_release();
      v73 = v110;
      v72 = v111;
      if ((*(unsigned int (**)(char *, uint64_t))(v110 + 88))(v71, v111) == *MEMORY[0x1E0DF2190])
      {
        v74 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v72);
        v74 = "";
      }
      v109(v27, v52, v40);
      v88 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v88 = 0;
      v89 = sub_1A93F75E4();
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v51, v70, v89, "buildCaption", v74, v88, 2u);
      v87 = v88;
LABEL_35:
      MEMORY[0x1AF41411C](v87, -1, -1);

      v90 = *(void (**)(char *, uint64_t))(v112 + 8);
      v90(v52, v40);
      v90(v27, v40);
      swift_release();
      v29 = v57;
      v50 = v115;
      break;
    default:
      sub_1A9064714((uint64_t)v13, type metadata accessor for EyebrowBuilder.ListContext);
LABEL_15:
      v65 = v1[24];
      v66 = v1[25];
      __swift_project_boxed_opaque_existential_1(v1 + 21, v65);
      v67 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v66 + 48))(v65, v66);
      if (v67)
      {
        if (v67 == 1)
          sub_1A9081C24();
        else
          v68 = sub_1A9360B74();
      }
      else
      {
        v68 = sub_1A9360CE0();
      }
      v75 = v68;
      v76 = v69;
      v77 = (uint64_t)v46;
      v78 = v108;
      sub_1A9064630(v77, v108, type metadata accessor for EyebrowBuilder.ListContext);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        v79 = v17;
        sub_1A905FD54(v78, &qword_1ED2ACF98);
        swift_beginAccess();
        v80 = v1[17];
        if (v80)
        {
          v81 = v1[16];
          if (v76)
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
            inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1A9405950;
            *(_QWORD *)(inited + 32) = v75;
            *(_QWORD *)(inited + 40) = v76;
            *(_QWORD *)(inited + 48) = v81;
            *(_QWORD *)(inited + 56) = v80;
            swift_bridgeObjectRetain();
            v75 = sub_1A907EEF8(0, (_QWORD *)inited);
            v76 = v83;
            swift_setDeallocating();
            swift_arrayDestroy();
          }
          else
          {
            swift_bridgeObjectRetain();
            v75 = v81;
            v76 = v80;
          }
          v40 = v115;
        }
        v17 = v79;
      }
      else
      {
        sub_1A9064714(v78, type metadata accessor for EyebrowBuilder.ListContext);
      }
      v50 = sub_1A9081A5C(v75, v76);
      swift_bridgeObjectRelease();
      v51 = sub_1A93F7620();
      sub_1A93F7644();
      v52 = v17;
      v91 = sub_1A93F8934();
      if ((sub_1A93F8A6C() & 1) != 0)
      {
        v115 = v50;
        swift_retain();
        v92 = v106;
        sub_1A93F7668();
        swift_release();
        v94 = v110;
        v93 = v111;
        if ((*(unsigned int (**)(char *, uint64_t))(v110 + 88))(v92, v111) == *MEMORY[0x1E0DF2190])
        {
          v95 = v29;
          v96 = "[Error] Interval already ended";
        }
        else
        {
          v97 = v92;
          v95 = v29;
          (*(void (**)(char *, uint64_t))(v94 + 8))(v97, v93);
          v96 = "";
        }
        v109(v27, v52, v40);
        v98 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v98 = 0;
        v99 = sub_1A93F75E4();
        _os_signpost_emit_with_name_impl(&dword_1A904E000, v51, v91, v99, "buildCaption", v96, v98, 2u);
        MEMORY[0x1AF41411C](v98, -1, -1);

        v90 = *(void (**)(char *, uint64_t))(v112 + 8);
        v90(v52, v40);
        v90(v27, v40);
        v29 = v95;
        v50 = v115;
      }
      else
      {
LABEL_42:

        v90 = *(void (**)(char *, uint64_t))(v112 + 8);
        v90(v52, v40);
      }
      swift_release();
      break;
  }
  v90(v29, v40);
  return v50;
}

uint64_t sub_1A907DDB4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_signpost_type_t v32;
  char v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  os_signpost_id_t v39;
  void (*v40)(char *, uint64_t);
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int EnumCaseMultiPayload;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  char v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  char v72;
  id v73;
  double *v74;
  int v75;
  double v76;
  double v77;
  double v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  unint64_t v85;
  unint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  double v90;
  char v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  unint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  id v125;
  uint64_t v126;
  char *v127;
  double v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  NSObject *v149;
  char *v150;
  os_signpost_type_t v151;
  uint64_t v152;
  const char *v153;
  void (*v154)(char *, uint64_t);
  char *v155;
  uint8_t *v156;
  os_signpost_id_t v157;
  double *v159;
  char *v160;
  char *v161;
  char *v162;
  void (*v163)(char *, char *, uint64_t);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  char v185;
  uint64_t v186;
  char v187;
  char v188;

  v1 = v0;
  v164 = sub_1A93F7638();
  v2 = *(_QWORD *)(v164 - 8);
  MEMORY[0x1E0C80A78](v164);
  v168 = (char *)&v159 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_1A93F738C();
  v178 = *(_QWORD *)(v172 - 8);
  MEMORY[0x1E0C80A78](v172);
  v160 = (char *)&v159 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  v6 = MEMORY[0x1E0C80A78](v5);
  v161 = (char *)&v159 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v162 = (char *)&v159 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  v10 = MEMORY[0x1E0C80A78](v9);
  v159 = (double *)((char *)&v159 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x1E0C80A78](v10);
  v165 = (uint64_t)&v159 - v13;
  MEMORY[0x1E0C80A78](v12);
  v166 = (uint64_t)&v159 - v14;
  v180 = type metadata accessor for EyebrowBuilder.ListContext(0);
  v15 = MEMORY[0x1E0C80A78](v180);
  v173 = (uint64_t)&v159 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v170 = (char *)&v159 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v159 - v19;
  v177 = sub_1A93F75FC();
  v21 = *(_QWORD *)(v177 - 8);
  v22 = MEMORY[0x1E0C80A78](v177);
  v175 = (char *)&v159 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v159 - v25;
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v159 - v27;
  if (qword_1ED2AD0E8 != -1)
    swift_once();
  v29 = sub_1A93F762C();
  v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1ED2AD0C8);
  sub_1A93F7620();
  sub_1A93F75D8();
  v31 = sub_1A93F7620();
  v32 = sub_1A93F8940();
  v33 = sub_1A93F8A6C();
  v179 = v26;
  v169 = v2;
  v176 = v21;
  v167 = v30;
  if ((v33 & 1) != 0)
  {
    v34 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    v35 = v26;
    v36 = v21;
    v37 = v177;
    v34(v35, v28, v177);
    v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v38 = 0;
    v39 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v31, v32, v39, "resolveEyebrowElements", "", v38, 2u);
    MEMORY[0x1AF41411C](v38, -1, -1);

    v40 = *(void (**)(char *, uint64_t))(v36 + 8);
    v26 = v179;
    v40(v179, v37);
    v41 = v34;
  }
  else
  {

    v41 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    v37 = v177;
  }
  v163 = v41;
  v41(v26, v28, v37);
  sub_1A93F765C();
  swift_allocObject();
  v171 = sub_1A93F7650();
  v42 = sub_1A90807C8(1);
  v44 = v43;
  swift_beginAccess();
  v1[8] = v42;
  v1[9] = v44;
  swift_bridgeObjectRelease();
  v45 = sub_1A9080FAC(1);
  v47 = v46;
  swift_beginAccess();
  v1[10] = v45;
  v1[11] = v47;
  swift_bridgeObjectRelease();
  v48 = (uint64_t)v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context;
  sub_1A9064630((uint64_t)v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, (uint64_t)v20, type metadata accessor for EyebrowBuilder.ListContext);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v174 = v28;
  v50 = (uint64_t)v170;
  if (EnumCaseMultiPayload != 3)
  {
    v69 = v1[24];
    v70 = v1[25];
    __swift_project_boxed_opaque_existential_1(v1 + 21, v69);
    v71 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v70 + 112))(v69, v70));
    v55 = v178;
    if ((v72 & 1) != 0)
    {
      v88 = v1[24];
      v89 = v1[25];
      __swift_project_boxed_opaque_existential_1(v1 + 21, v88);
      v90 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v89 + 80))(v88, v89));
      if ((v91 & 1) != 0)
      {
LABEL_34:
        sub_1A9064714((uint64_t)v20, type metadata accessor for EyebrowBuilder.ListContext);
        goto LABEL_41;
      }
      if (v90 <= 0.0)
        goto LABEL_32;
      v73 = objc_msgSend((id)objc_opt_self(), sel_prettyShortStringWithDuration_includeTimeRemainingPhrase_abbreviated_, 0, 0, v90);
      if (!v73)
        goto LABEL_32;
    }
    else if (v71 <= 0.0
           || (v73 = objc_msgSend((id)objc_opt_self(), sel_prettyShortStringWithDuration_includeTimeRemainingPhrase_abbreviated_, 1, 0, v71)) == 0)
    {
LABEL_32:
      v96 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_33:
      v100 = sub_1A907EEF8(0, v96);
      v102 = v101;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v1[16] = v100;
      v1[17] = v102;
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    v92 = v73;
    v93 = sub_1A93F8040();
    v95 = v94;

    v96 = sub_1A907ECFC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v98 = v96[2];
    v97 = v96[3];
    if (v98 >= v97 >> 1)
      v96 = sub_1A907ECFC((_QWORD *)(v97 > 1), v98 + 1, 1, v96);
    v96[2] = v98 + 1;
    v99 = &v96[2 * v98];
    v99[4] = v93;
    v99[5] = v95;
    v55 = v178;
    goto LABEL_33;
  }
  v51 = v166;
  sub_1A911612C((uint64_t)v20, v166);
  v52 = v165;
  sub_1A9062170(v51, v165, &qword_1ED2ACF98);
  v53 = type metadata accessor for EpisodePlayState();
  v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v52, 1, v53);
  v55 = v178;
  if (v54 == 1)
  {
LABEL_8:
    v56 = v1[24];
    v57 = v1[25];
    __swift_project_boxed_opaque_existential_1(v1 + 21, v56);
    v58 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v57 + 80))(v56, v57));
    if ((v59 & 1) != 0)
    {
      sub_1A905FD54(v51, &qword_1ED2ACF98);
    }
    else
    {
      if (v58 > 0.0
        && (v60 = objc_msgSend((id)objc_opt_self(), sel_prettyShortStringWithDuration_includeTimeRemainingPhrase_abbreviated_, 0, 0, v58)) != 0)
      {
        v61 = v60;
        v62 = sub_1A93F8040();
        v64 = v63;

        v65 = sub_1A907ECFC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
        v67 = v65[2];
        v66 = v65[3];
        if (v67 >= v66 >> 1)
          v65 = sub_1A907ECFC((_QWORD *)(v66 > 1), v67 + 1, 1, v65);
        v65[2] = v67 + 1;
        v68 = &v65[2 * v67];
        v68[4] = v62;
        v68[5] = v64;
        v37 = v177;
      }
      else
      {
        v65 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      v106 = sub_1A907EEF8(0, v65);
      v108 = v107;
      swift_bridgeObjectRelease();
      sub_1A905FD54(v51, &qword_1ED2ACF98);
      swift_beginAccess();
      v1[16] = v106;
      v1[17] = v108;
      swift_bridgeObjectRelease();
      v52 = v165;
    }
    sub_1A905FD54(v52, &qword_1ED2ACF98);
    goto LABEL_41;
  }
  v74 = v159;
  sub_1A9062170(v52, (uint64_t)v159, &qword_1ED2ACF98);
  v75 = swift_getEnumCaseMultiPayload();
  if (v75 && v75 != 3 && v75 != 1)
  {
    sub_1A9064714((uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
    goto LABEL_8;
  }
  v77 = *v74;
  v76 = v74[1];
  sub_1A905FD54(v52, &qword_1ED2ACF98);
  v78 = v76 - v77;
  if (v78 > 0.0
    && (v79 = objc_msgSend((id)objc_opt_self(), sel_prettyShortStringWithDuration_includeTimeRemainingPhrase_abbreviated_, 1, 0, v78)) != 0)
  {
    v80 = v79;
    v81 = sub_1A93F8040();
    v83 = v82;

    v84 = sub_1A907ECFC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v86 = v84[2];
    v85 = v84[3];
    if (v86 >= v85 >> 1)
      v84 = sub_1A907ECFC((_QWORD *)(v85 > 1), v86 + 1, 1, v84);
    v84[2] = v86 + 1;
    v87 = &v84[2 * v86];
    v87[4] = v81;
    v87[5] = v83;
  }
  else
  {
    v84 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v103 = sub_1A907EEF8(0, v84);
  v105 = v104;
  swift_bridgeObjectRelease();
  sub_1A905FD54(v166, &qword_1ED2ACF98);
  swift_beginAccess();
  v1[16] = v103;
  v1[17] = v105;
  swift_bridgeObjectRelease();
LABEL_41:
  v109 = v1[24];
  v110 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v109);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v110 + 40))(&v186, v109, v110);
  v183 = v186;
  v184 = v187;
  v185 = v188;
  v111 = sub_1A90800A8((uint64_t)(v1 + 21), (uint64_t)&v183);
  v113 = v112;
  swift_beginAccess();
  v1[4] = v111;
  v1[5] = v113;
  swift_bridgeObjectRelease();
  sub_1A9064630(v48, v50, type metadata accessor for EyebrowBuilder.ListContext);
  LODWORD(v111) = swift_getEnumCaseMultiPayload();
  v114 = v1[24];
  v115 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v114);
  v116 = *(void (**)(uint64_t, uint64_t))(v115 + 104);
  if ((_DWORD)v111 == 2)
  {
    v117 = (uint64_t)v162;
    v116(v114, v115);
    v118 = v172;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v117, 1, v172) == 1)
    {
      sub_1A905FD54(v117, (uint64_t *)&unk_1ED2AD360);
      v119 = 0;
      v120 = 0;
    }
    else
    {
      v124 = (void *)sub_1A93F7314();
      v125 = objc_msgSend(v124, sel_verboseDisplayStringWithoutTimeAndCurrentYear);

      v119 = sub_1A93F8040();
      v120 = v126;

      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v117, v118);
    }
    swift_beginAccess();
    v1[12] = v119;
    v1[13] = v120;
    swift_bridgeObjectRelease();
  }
  else
  {
    v121 = v114;
    v122 = (uint64_t)v161;
    v116(v121, v115);
    v123 = v172;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v122, 1, v172) == 1)
    {
      sub_1A905FD54(v122, (uint64_t *)&unk_1ED2AD360);
    }
    else
    {
      v127 = v160;
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v160, v122, v123);
      sub_1A93F72D8();
      v129 = _s18PodcastsFoundation32AbbreviatedTimeIntervalFormatterO6string4from13configurationSSSd_AC13ConfigurationVSgtFZ_0((uint64_t)v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_abbreviatedPubDateConfig, v128);
      v131 = v130;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v127, v123);
      swift_beginAccess();
      v1[12] = v129;
      v1[13] = v131;
      swift_bridgeObjectRelease();
    }
    sub_1A9064714(v50, type metadata accessor for EyebrowBuilder.ListContext);
  }
  v132 = v1[24];
  v133 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v132);
  v134 = sub_1A907FB2C(*((unsigned __int8 *)v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_hostingViewHasLimitedSpace), v132, v133);
  v136 = v135;
  swift_beginAccess();
  v1[6] = v134;
  v1[7] = v136;
  swift_bridgeObjectRelease();
  v137 = v173;
  sub_1A9064630(v48, v173, type metadata accessor for EyebrowBuilder.ListContext);
  v138 = swift_getEnumCaseMultiPayload();
  if (v138 != 4 && v138 != 1)
  {
    sub_1A9064714(v137, type metadata accessor for EyebrowBuilder.ListContext);
    goto LABEL_58;
  }
  v139 = v1[24];
  v140 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v139);
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v140 + 40))(&v181, v139, v140);
  if ((v182 & 0x100) != 0)
  {
LABEL_58:
    v147 = v169;
    v148 = v168;
    goto LABEL_59;
  }
  LOBYTE(v182) = v182 & 1;
  v141 = sub_1A90828F4((uint64_t)(v1 + 21), (uint64_t)&v181);
  v143 = v141;
  v144 = v142;
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase) == 1 && v142)
  {
    v181 = v141;
    v182 = v142;
    sub_1A90828B0();
    v143 = sub_1A93F8AD8();
    v146 = v145;
    swift_bridgeObjectRelease();
    v144 = v146;
  }
  v147 = v169;
  v148 = v168;
  swift_beginAccess();
  v1[14] = v143;
  v1[15] = v144;
  swift_bridgeObjectRelease();
LABEL_59:
  v149 = sub_1A93F7620();
  v150 = v175;
  sub_1A93F7644();
  v151 = sub_1A93F8934();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    swift_retain();
    sub_1A93F7668();
    swift_release();
    v152 = v164;
    if ((*(unsigned int (**)(char *, uint64_t))(v147 + 88))(v148, v164) == *MEMORY[0x1E0DF2190])
    {
      v153 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v147 + 8))(v148, v152);
      v153 = "";
    }
    v155 = v179;
    v163(v179, v150, v37);
    v156 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v156 = 0;
    v157 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v149, v151, v157, "resolveEyebrowElements", v153, v156, 2u);
    MEMORY[0x1AF41411C](v156, -1, -1);

    v154 = *(void (**)(char *, uint64_t))(v176 + 8);
    v154(v150, v37);
    v154(v155, v37);
  }
  else
  {

    v154 = *(void (**)(char *, uint64_t))(v176 + 8);
    v154(v150, v37);
  }
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v154)(v174, v37);
}

uint64_t type metadata accessor for EyebrowBuilder.ListContext(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1ED2ACEB0);
}

_QWORD *sub_1A907ECFC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A907EE08(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A907EE08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A907EEF8(char a1, _QWORD *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = a2[2];
  if (v3 < 2)
  {
    if (!v3)
      return 0;
    v4 = a2[4];
    if ((a1 & 1) != 0)
    {
      sub_1A90828B0();
      return sub_1A93F8AD8();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    return v4;
  }
  else
  {
    v4 = a2[4];
    v24 = a2 + 4;
    v5 = a2[5];
    swift_bridgeObjectRetain_n();
    result = swift_bridgeObjectRetain_n();
    v7 = 1;
    v25 = v3;
    while (v7 != v3)
    {
      if (v5)
      {
        v9 = &v24[2 * v7];
        v10 = *v9;
        v11 = v9[1];
        sub_1A90828B0();
        swift_bridgeObjectRetain_n();
        v12 = (_QWORD *)sub_1A93F8ACC();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_1A907ECFC(0, v12[2] + 1, 1, v12);
        v14 = v12[2];
        v13 = v12[3];
        v15 = v14 + 1;
        v26 = v7;
        if (v14 >= v13 >> 1)
          v12 = sub_1A907ECFC((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
        v12[2] = v15;
        v16 = &v12[2 * v14];
        v16[4] = v10;
        v16[5] = v11;
        v27 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1A908182C(0, v15, 0);
        v17 = v12 + 5;
        do
        {
          v18 = *(v17 - 1);
          v19 = *v17;
          if ((a1 & 1) != 0)
          {
            v18 = sub_1A93F8AD8();
            v19 = v20;
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          v22 = *(_QWORD *)(v27 + 16);
          v21 = *(_QWORD *)(v27 + 24);
          if (v22 >= v21 >> 1)
            sub_1A908182C(v21 > 1, v22 + 1, 1);
          v17 += 2;
          *(_QWORD *)(v27 + 16) = v22 + 1;
          v23 = v27 + 16 * v22;
          *(_QWORD *)(v23 + 32) = v18;
          *(_QWORD *)(v23 + 40) = v19;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease_n();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
        sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
        v4 = sub_1A93F7FE0();
        v5 = v8;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v3 = v25;
        v7 = v26;
      }
      if (++v7 == v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t _s18PodcastsFoundation32AbbreviatedTimeIntervalFormatterO6string4from13configurationSSSd_AC13ConfigurationVSgtFZ_0(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  double v15;
  _BYTE *v16;
  double v17;
  double v18;
  unsigned int v19;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  _BYTE v26[15];
  unsigned __int8 v27;

  v4 = sub_1A93F738C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD058);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v26[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A907FAE4(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1A93F7380();
    sub_1A93F7380();
    v14[*(int *)(v11 + 24)] = 6;
    sub_1A93D10DC((uint64_t)v10);
  }
  else
  {
    sub_1A93D163C((uint64_t)v10, (uint64_t)v14);
  }
  sub_1A93F72D8();
  if (v15 - a2 <= 0.0)
  {
    if (qword_1ED2A81F0 != -1)
      swift_once();
    v22 = (void *)qword_1ED2A81E0;
    sub_1A93F72CC();
    v23 = (void *)sub_1A93F7314();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    v24 = objc_msgSend(v22, sel_stringFromDate_, v23);

    v21 = sub_1A93F8040();
  }
  else
  {
    v16 = &v14[*(int *)(v11 + 20)];
    sub_1A93F72D8();
    v18 = v17;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v16, v4);
    sub_1A907F8F8((uint64_t)v7, (char *)&v27, v18, a2);
    v19 = v14[*(int *)(v11 + 24)];
    if (v19 == 6 || v27 >= v19)
      __asm { BR              X10 }
    if (qword_1ED2AD260 != -1)
      swift_once();
    v21 = sub_1A93F7044();
  }
  sub_1A907FAA8((uint64_t)v14);
  return v21;
}

uint64_t type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration()
{
  uint64_t result;

  result = qword_1ED2ACB40;
  if (!qword_1ED2ACB40)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A907F8F8(uint64_t a1@<X0>, char *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  id v8;
  double v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  unsigned int v16;
  uint64_t v17;

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D68]), sel_initWithTimeIntervalSinceReferenceDate_, a4);
  v9 = a3 - a4;
  if (a3 - a4 >= 60.0)
  {
    if (v9 >= 3600.0)
    {
      if (v9 >= 86400.0)
      {
        if (v9 >= 604800.0)
        {
          v15 = (void *)sub_1A93F7314();
          v16 = objc_msgSend(v8, sel_inSameYearAs_, v15);

          v17 = sub_1A93F738C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
          if (v16)
            v11 = 4;
          else
            v11 = 5;
        }
        else
        {
          v14 = sub_1A93F738C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);

          v11 = 3;
        }
      }
      else
      {
        v13 = sub_1A93F738C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);

        v11 = 2;
      }
    }
    else
    {
      v12 = sub_1A93F738C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);

      v11 = 1;
    }
  }
  else
  {
    v10 = sub_1A93F738C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);

    v11 = 0;
  }
  *a2 = v11;
}

uint64_t getEnumTagSinglePayload for AbbreviatedTimeIntervalFormatter.Configuration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A907FAA8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A907FAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A907FB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(_BYTE *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v37[12];
  int v38;
  _BYTE *v39;
  uint64_t v40;

  v6 = a1;
  v40 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v39 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1A93F738C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = &v37[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v17 = &v37[-v16];
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 24);
  if (v18(a2, a3))
  {
    v38 = sub_1A9361E60(v6 & 1, a2, a3);
    v19 = v3;
    (*(void (**)(uint64_t, uint64_t))(a3 + 104))(a2, a3);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_1A93F7380();
      sub_1A905FD54((uint64_t)v10, (uint64_t *)&unk_1ED2AD360);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v17, v10, v11);
    }
    sub_1A93F7380();
    sub_1A9066CA8(&qword_1ED2A5C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v21 = sub_1A93F7FEC();
    v22 = *(void (**)(_BYTE *, uint64_t))(v12 + 8);
    v22(v15, v11);
    v22(v17, v11);
    if ((v21 & 1) != 0)
    {
      if ((v38 & 1) != 0)
      {
        v23 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
        if (v24)
        {
          v25 = v23;
          v26 = v24;
          if (qword_1ED2AD260 == -1)
            goto LABEL_23;
          goto LABEL_34;
        }
      }
      if (qword_1ED2AD260 == -1)
        return sub_1A93F7044();
LABEL_33:
      swift_once();
      return sub_1A93F7044();
    }
    v27 = v18(a2, a3);
    v29 = v39;
    v28 = v40;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v40 + 16))(v39, v19, a2);
    if (v27 == 1)
    {
      v30 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
      (*(void (**)(_BYTE *, uint64_t))(v28 + 8))(v29, a2);
      if ((v30 & 1) != 0)
      {
        if ((v38 & 1) == 0 || (v31 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3), !v32))
        {
          if (qword_1ED2AD260 == -1)
            return sub_1A93F7044();
          goto LABEL_33;
        }
        v25 = v31;
        v26 = v32;
        if (qword_1ED2AD260 == -1)
          goto LABEL_23;
        goto LABEL_34;
      }
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v28 + 8))(v29, a2);
    }
    if ((v38 & 1) == 0 || (v33 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3), !v34))
    {
      if (qword_1ED2AD260 == -1)
        return sub_1A93F7044();
      goto LABEL_33;
    }
    v25 = v33;
    v26 = v34;
    if (qword_1ED2AD260 == -1)
    {
LABEL_23:
      sub_1A93F7044();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
      v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1A9405520;
      *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v35 + 64) = sub_1A90A92DC();
      *(_QWORD *)(v35 + 32) = v25;
      *(_QWORD *)(v35 + 40) = v26;
      v20 = sub_1A93F8070();
      swift_bridgeObjectRelease();
      return v20;
    }
LABEL_34:
    swift_once();
    goto LABEL_23;
  }
  return 0;
}

uint64_t sub_1A90800A8(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a2 + 9) & 1) == 0 && (*(_BYTE *)(a2 + 8) & 1) != 0)
    __asm { BR              X10 }
  if (qword_1ED2AD260 != -1)
    swift_once();
  return sub_1A93F7044();
}

uint64_t sub_1A90807C8(char a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;

  v3 = (_QWORD *)(v1 + 168);
  v4 = *(_QWORD *)(v1 + 192);
  v5 = *(_QWORD *)(v1 + 200);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 168), v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 96))(v4, v5);
  v7 = 0;
  if ((v8 & 1) == 0)
  {
    v9 = v6;
    if (v6 >= 1)
    {
      swift_beginAccess();
      *(_BYTE *)(v1 + 160) = 1;
      v10 = *(_QWORD *)(v1 + 192);
      v11 = *(_QWORD *)(v1 + 200);
      __swift_project_boxed_opaque_existential_1(v3, v10);
      v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(v10, v11);
      v13 = *(_QWORD *)(v1 + 192);
      v14 = *(_QWORD *)(v1 + 200);
      __swift_project_boxed_opaque_existential_1(v3, v13);
      (*(void (**)(uint64_t, uint64_t))(v14 + 56))(v13, v14);
      if (!v12)
      {
        if (*(_BYTE *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) == 1)
          sub_1A93F810C();
        if (qword_1ED2AD260 != -1)
          swift_once();
        sub_1A93F7044();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
        v51 = swift_allocObject();
        v52 = MEMORY[0x1E0DEDC60];
        *(_OWORD *)(v51 + 16) = xmmword_1A9405520;
        v53 = MEMORY[0x1E0DEDCD8];
        *(_QWORD *)(v51 + 56) = v52;
        *(_QWORD *)(v51 + 64) = v53;
        *(_QWORD *)(v51 + 32) = v9;
        v7 = sub_1A93F801C();
        goto LABEL_42;
      }
      if (v12 == 1 || (a1 & 1) != 0)
      {
        if (*(_BYTE *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) == 1)
          sub_1A93F810C();
        if (qword_1ED2AD260 != -1)
          swift_once();
        sub_1A93F7044();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
        v15 = swift_allocObject();
        v16 = MEMORY[0x1E0DEDC60];
        *(_OWORD *)(v15 + 16) = xmmword_1A9405520;
        v17 = MEMORY[0x1E0DEDCD8];
        *(_QWORD *)(v15 + 56) = v16;
        *(_QWORD *)(v15 + 64) = v17;
        *(_QWORD *)(v15 + 32) = v9;
        v7 = sub_1A93F801C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v18 = sub_1A9082418();
        if (v19)
        {
          v20 = v18;
          v21 = v19;
          sub_1A90828B0();
          swift_bridgeObjectRetain();
          v22 = (_QWORD *)sub_1A93F8ACC();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v22 = sub_1A907ECFC(0, v22[2] + 1, 1, v22);
          v24 = v22[2];
          v23 = v22[3];
          v25 = v24 + 1;
          if (v24 >= v23 >> 1)
            v22 = sub_1A907ECFC((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
          v22[2] = v25;
          v26 = &v22[2 * v24];
          v26[4] = v20;
          v26[5] = v21;
          v55 = MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          sub_1A908182C(0, v24 + 1, 0);
          v27 = v22 + 5;
          do
          {
            v29 = *(v27 - 1);
            v28 = *v27;
            v30 = *(_QWORD *)(v55 + 16);
            v31 = *(_QWORD *)(v55 + 24);
            swift_bridgeObjectRetain();
            if (v30 >= v31 >> 1)
              sub_1A908182C(v31 > 1, v30 + 1, 1);
            v27 += 2;
            *(_QWORD *)(v55 + 16) = v30 + 1;
            v32 = v55 + 16 * v30;
            *(_QWORD *)(v32 + 32) = v29;
            *(_QWORD *)(v32 + 40) = v28;
            --v25;
          }
          while (v25);
LABEL_35:
          swift_bridgeObjectRelease_n();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
          sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
          v7 = sub_1A93F7FE0();
          swift_bridgeObjectRelease();
LABEL_42:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        if (*(_BYTE *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) == 1)
          sub_1A93F810C();
        if (qword_1ED2AD260 != -1)
          swift_once();
        sub_1A93F7044();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
        v33 = swift_allocObject();
        v34 = MEMORY[0x1E0DEDC60];
        *(_OWORD *)(v33 + 16) = xmmword_1A9405520;
        v35 = MEMORY[0x1E0DEDCD8];
        *(_QWORD *)(v33 + 56) = v34;
        *(_QWORD *)(v33 + 64) = v35;
        *(_QWORD *)(v33 + 32) = v9;
        v7 = sub_1A93F801C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v36 = sub_1A9082418();
        if (v37)
        {
          v38 = v36;
          v39 = v37;
          sub_1A90828B0();
          swift_bridgeObjectRetain();
          v40 = (_QWORD *)sub_1A93F8ACC();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v40 = sub_1A907ECFC(0, v40[2] + 1, 1, v40);
          v42 = v40[2];
          v41 = v40[3];
          v43 = v42 + 1;
          if (v42 >= v41 >> 1)
            v40 = sub_1A907ECFC((_QWORD *)(v41 > 1), v42 + 1, 1, v40);
          v40[2] = v43;
          v44 = &v40[2 * v42];
          v44[4] = v38;
          v44[5] = v39;
          v56 = MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          sub_1A908182C(0, v42 + 1, 0);
          v45 = v40 + 5;
          do
          {
            v47 = *(v45 - 1);
            v46 = *v45;
            v48 = *(_QWORD *)(v56 + 16);
            v49 = *(_QWORD *)(v56 + 24);
            swift_bridgeObjectRetain();
            if (v48 >= v49 >> 1)
              sub_1A908182C(v49 > 1, v48 + 1, 1);
            v45 += 2;
            *(_QWORD *)(v56 + 16) = v48 + 1;
            v50 = v56 + 16 * v48;
            *(_QWORD *)(v50 + 32) = v47;
            *(_QWORD *)(v50 + 40) = v46;
            --v43;
          }
          while (v43);
          goto LABEL_35;
        }
      }
    }
  }
  return v7;
}

uint64_t sub_1A9080FAC(char a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;

  v3 = (_QWORD *)(v1 + 168);
  v4 = *(_QWORD *)(v1 + 192);
  v5 = *(_QWORD *)(v1 + 200);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 168), v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v4, v5);
  v7 = 0;
  if ((v8 & 1) == 0)
  {
    v9 = v6;
    if (v6 >= 1)
    {
      swift_beginAccess();
      *(_BYTE *)(v1 + 161) = 1;
      v10 = *(_QWORD *)(v1 + 192);
      v11 = *(_QWORD *)(v1 + 200);
      __swift_project_boxed_opaque_existential_1(v3, v10);
      v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(v10, v11);
      v13 = *(_QWORD *)(v1 + 192);
      v14 = *(_QWORD *)(v1 + 200);
      __swift_project_boxed_opaque_existential_1(v3, v13);
      (*(void (**)(uint64_t, uint64_t))(v14 + 56))(v13, v14);
      if (!v12)
      {
        if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) - 1 <= 1)
          sub_1A93F810C();
        if (qword_1ED2AD260 != -1)
          swift_once();
        sub_1A93F7044();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
        v51 = swift_allocObject();
        v52 = MEMORY[0x1E0DEDC60];
        *(_OWORD *)(v51 + 16) = xmmword_1A9405520;
        v53 = MEMORY[0x1E0DEDCD8];
        *(_QWORD *)(v51 + 56) = v52;
        *(_QWORD *)(v51 + 64) = v53;
        *(_QWORD *)(v51 + 32) = v9;
        v7 = sub_1A93F801C();
        goto LABEL_42;
      }
      if (v12 == 1 || (a1 & 1) != 0)
      {
        if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) - 1 <= 1)
          sub_1A93F810C();
        if (qword_1ED2AD260 != -1)
          swift_once();
        sub_1A93F7044();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
        v15 = swift_allocObject();
        v16 = MEMORY[0x1E0DEDC60];
        *(_OWORD *)(v15 + 16) = xmmword_1A9405520;
        v17 = MEMORY[0x1E0DEDCD8];
        *(_QWORD *)(v15 + 56) = v16;
        *(_QWORD *)(v15 + 64) = v17;
        *(_QWORD *)(v15 + 32) = v9;
        v7 = sub_1A93F801C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v18 = sub_1A9082418();
        if (v19)
        {
          v20 = v18;
          v21 = v19;
          sub_1A90828B0();
          swift_bridgeObjectRetain();
          v22 = (_QWORD *)sub_1A93F8ACC();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v22 = sub_1A907ECFC(0, v22[2] + 1, 1, v22);
          v24 = v22[2];
          v23 = v22[3];
          v25 = v24 + 1;
          if (v24 >= v23 >> 1)
            v22 = sub_1A907ECFC((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
          v22[2] = v25;
          v26 = &v22[2 * v24];
          v26[4] = v20;
          v26[5] = v21;
          v55 = MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          sub_1A908182C(0, v24 + 1, 0);
          v27 = v22 + 5;
          do
          {
            v29 = *(v27 - 1);
            v28 = *v27;
            v30 = *(_QWORD *)(v55 + 16);
            v31 = *(_QWORD *)(v55 + 24);
            swift_bridgeObjectRetain();
            if (v30 >= v31 >> 1)
              sub_1A908182C(v31 > 1, v30 + 1, 1);
            v27 += 2;
            *(_QWORD *)(v55 + 16) = v30 + 1;
            v32 = v55 + 16 * v30;
            *(_QWORD *)(v32 + 32) = v29;
            *(_QWORD *)(v32 + 40) = v28;
            --v25;
          }
          while (v25);
LABEL_35:
          swift_bridgeObjectRelease_n();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
          sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
          v7 = sub_1A93F7FE0();
          swift_bridgeObjectRelease();
LABEL_42:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) - 1 <= 1)
          sub_1A93F810C();
        if (qword_1ED2AD260 != -1)
          swift_once();
        sub_1A93F7044();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
        v33 = swift_allocObject();
        v34 = MEMORY[0x1E0DEDC60];
        *(_OWORD *)(v33 + 16) = xmmword_1A9405520;
        v35 = MEMORY[0x1E0DEDCD8];
        *(_QWORD *)(v33 + 56) = v34;
        *(_QWORD *)(v33 + 64) = v35;
        *(_QWORD *)(v33 + 32) = v9;
        v7 = sub_1A93F801C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v36 = sub_1A9082418();
        if (v37)
        {
          v38 = v36;
          v39 = v37;
          sub_1A90828B0();
          swift_bridgeObjectRetain();
          v40 = (_QWORD *)sub_1A93F8ACC();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v40 = sub_1A907ECFC(0, v40[2] + 1, 1, v40);
          v42 = v40[2];
          v41 = v40[3];
          v43 = v42 + 1;
          if (v42 >= v41 >> 1)
            v40 = sub_1A907ECFC((_QWORD *)(v41 > 1), v42 + 1, 1, v40);
          v40[2] = v43;
          v44 = &v40[2 * v42];
          v44[4] = v38;
          v44[5] = v39;
          v56 = MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          sub_1A908182C(0, v42 + 1, 0);
          v45 = v40 + 5;
          do
          {
            v47 = *(v45 - 1);
            v46 = *v45;
            v48 = *(_QWORD *)(v56 + 16);
            v49 = *(_QWORD *)(v56 + 24);
            swift_bridgeObjectRetain();
            if (v48 >= v49 >> 1)
              sub_1A908182C(v49 > 1, v48 + 1, 1);
            v45 += 2;
            *(_QWORD *)(v56 + 16) = v48 + 1;
            v50 = v56 + 16 * v48;
            *(_QWORD *)(v50 + 32) = v47;
            *(_QWORD *)(v50 + 40) = v46;
            --v43;
          }
          while (v43);
          goto LABEL_35;
        }
      }
    }
  }
  return v7;
}

uint64_t sub_1A9081798()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  sub_1A924D270(v0);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
  sub_1A90819B0();
  v1 = sub_1A93F7FE0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A908182C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A9081848(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A9081848(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

unint64_t sub_1A90819B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2AD3E0;
  if (!qword_1ED2AD3E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2AD3D8);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2AD3E0);
  }
  return result;
}

uint64_t sub_1A90819FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1A9081A30()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A9081A5C(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  if (a2)
  {
    v3 = a1;
    v9 = a1;
    v4 = a2;
    if ((*((_BYTE *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_showsSubscriptionBadge) & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    v4 = 0xE000000000000000;
    v9 = 0;
    if ((*((_BYTE *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_showsSubscriptionBadge) & 1) == 0)
    {
      v3 = 0;
      goto LABEL_14;
    }
    v3 = 0;
  }
  swift_beginAccess();
  if (!v2[7])
  {
LABEL_14:
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  if ((v4 & 0x2000000000000000) != 0)
    v5 = HIBYTE(v4) & 0xF;
  else
    v5 = v3 & 0xFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
    sub_1A93F810C();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v3 = v9;
LABEL_15:
  v6 = v2[24];
  v7 = v2[25];
  __swift_project_boxed_opaque_existential_1(v2 + 21, v6);
  LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 64))(v6, v7);
  swift_beginAccess();
  if ((v6 & 1) != 0 && v2[19])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A93F810C();
    swift_bridgeObjectRetain();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3;
}

void sub_1A9081C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1A9064630(v0 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1A9081CB8 + 4 * byte_1A942041B[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A9081CB8()
{
  _QWORD *v0;
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *v1;
  v3 = v0[24];
  v4 = v0[25];
  __swift_project_boxed_opaque_existential_1(v0 + 21, v3);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 72))(v3, v4) & 1) == 0)
    return sub_1A9081DB4(0);
  if (v2 != 2 && (v2 & 1) == 0)
  {
    result = sub_1A90807C8(0);
    if (v6)
      return result;
    return sub_1A9081DB4(0);
  }
  result = sub_1A9360FF8(0, 0);
  if (!v8)
  {
    result = sub_1A90807C8(0);
    if (!v9)
    {
      result = sub_1A9080FAC(0);
      if (!v10)
        return sub_1A9081DB4(0);
    }
  }
  return result;
}

uint64_t sub_1A9081DB4(char a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;

  v3 = v1[24];
  v4 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 48))(v3, v4);
  v6 = v1[24];
  v7 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 56))(v6, v7);
  if (!v5)
  {
    if (v8)
    {
      if (v8 == 1)
      {
        if (qword_1ED2AD260 == -1)
          return sub_1A93F7044();
      }
      else if (qword_1ED2AD260 == -1)
      {
        return sub_1A93F7044();
      }
    }
    else if (qword_1ED2AD260 == -1)
    {
      return sub_1A93F7044();
    }
    swift_once();
    return sub_1A93F7044();
  }
  if (v5 == 1 || (a1 & 1) != 0)
  {
    swift_beginAccess();
    v9 = v1[12];
    v10 = v1[13];
    swift_bridgeObjectRetain();
    v12 = sub_1A9082418();
    v13 = v11;
    if (v10)
    {
      if (!v11)
        return v9;
      sub_1A90828B0();
      swift_bridgeObjectRetain();
      v14 = (_QWORD *)sub_1A93F8ACC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1A907ECFC(0, v14[2] + 1, 1, v14);
      v16 = v14[2];
      v15 = v14[3];
      v17 = v16 + 1;
      if (v16 >= v15 >> 1)
        v14 = sub_1A907ECFC((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
      v14[2] = v17;
      v18 = &v14[2 * v16];
      v18[4] = v12;
      v18[5] = v13;
      v43 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1A908182C(0, v17, 0);
      v19 = v14 + 5;
      do
      {
        v21 = *(v19 - 1);
        v20 = *v19;
        v23 = *(_QWORD *)(v43 + 16);
        v22 = *(_QWORD *)(v43 + 24);
        swift_bridgeObjectRetain();
        if (v23 >= v22 >> 1)
          sub_1A908182C(v22 > 1, v23 + 1, 1);
        v19 += 2;
        *(_QWORD *)(v43 + 16) = v23 + 1;
        v24 = v43 + 16 * v23;
        *(_QWORD *)(v24 + 32) = v21;
        *(_QWORD *)(v24 + 40) = v20;
        --v17;
      }
      while (v17);
      goto LABEL_14;
    }
    if (v11)
      return v12;
    return sub_1A9082418();
  }
  if (qword_1ED2AD260 != -1)
    swift_once();
  v12 = sub_1A93F7044();
  v26 = sub_1A9082418();
  if (v27)
  {
    v28 = v26;
    v29 = v27;
    sub_1A90828B0();
    swift_bridgeObjectRetain();
    v30 = (_QWORD *)sub_1A93F8ACC();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v30 = sub_1A907ECFC(0, v30[2] + 1, 1, v30);
    v32 = v30[2];
    v31 = v30[3];
    v33 = v32 + 1;
    if (v32 >= v31 >> 1)
      v30 = sub_1A907ECFC((_QWORD *)(v31 > 1), v32 + 1, 1, v30);
    v30[2] = v33;
    v34 = &v30[2 * v32];
    v34[4] = v28;
    v34[5] = v29;
    v42 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1A908182C(0, v33, 0);
    v35 = v30 + 5;
    do
    {
      v37 = *(v35 - 1);
      v36 = *v35;
      v39 = *(_QWORD *)(v42 + 16);
      v38 = *(_QWORD *)(v42 + 24);
      swift_bridgeObjectRetain();
      if (v39 >= v38 >> 1)
        sub_1A908182C(v38 > 1, v39 + 1, 1);
      v35 += 2;
      *(_QWORD *)(v42 + 16) = v39 + 1;
      v40 = v42 + 16 * v39;
      *(_QWORD *)(v40 + 32) = v37;
      *(_QWORD *)(v40 + 40) = v36;
      --v33;
    }
    while (v33);
LABEL_14:
    swift_bridgeObjectRelease_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
    v12 = sub_1A93F7FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1A9082418()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0[24];
  v2 = v0[25];
  __swift_project_boxed_opaque_existential_1(v0 + 21, v1);
  LOBYTE(result) = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
  if (!(_BYTE)result)
    return result;
  if (result == 1)
  {
    if (qword_1ED2AD260 == -1)
      return sub_1A93F7044();
    goto LABEL_8;
  }
  if (qword_1ED2AD260 != -1)
LABEL_8:
    swift_once();
  return sub_1A93F7044();
}

void FileBasedAssetLocation.fileURL(in:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[4];
  _QWORD v12[2];

  v11[3] = a3;
  v5 = sub_1A93F7158();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F726C();
  v11[1] = *(_QWORD *)(v9 - 8);
  v11[2] = v9;
  MEMORY[0x1E0C80A78](v9);
  v12[0] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v12[1] = v10;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CAFD78], v5);
  sub_1A90828B0();
  sub_1A93F7260();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 24))(v12, a1, a2);
  __asm { BR              X10 }
}

uint64_t sub_1A9082690()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A93F71C4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 120) + 8))(v0, *(_QWORD *)(v1 - 112));
}

uint64_t sub_1A9082760(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD v14[2];

  v2 = sub_1A93F7158();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = a1[1];
  v12 = objc_msgSend((id)objc_opt_self(), sel_libraryDirectory);
  sub_1A93F7200();

  v14[0] = v10;
  v14[1] = v11;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CAFD78], v2);
  sub_1A90828B0();
  sub_1A93F7254();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A90828B0()
{
  unint64_t result;

  result = qword_1ED2AD370;
  if (!qword_1ED2AD370)
  {
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED2AD370);
  }
  return result;
}

unint64_t sub_1A90828F4(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a2 + 8) == 1)
    __asm { BR              X10 }
  sub_1A93F85B0();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  return 0xD000000000000016;
}

uint64_t EyebrowBuilder.captionPublisher<A>(playStatePublisher:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char *v28;
  int EnumCaseMultiPayload;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v5 = v4;
  v50 = a1;
  v62 = a4;
  v48 = type metadata accessor for EpisodePlayState();
  v49 = a2;
  v51 = a3;
  v8 = sub_1A93F77DC();
  v55 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v53 = (char *)&v44 - v9;
  v10 = MEMORY[0x1AF414014](MEMORY[0x1E0C95950], v8);
  v57 = v8;
  v47 = v10;
  v11 = sub_1A93F77B8();
  v54 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v52 = (char *)&v44 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A9058);
  v14 = MEMORY[0x1AF414014](MEMORY[0x1E0C958E0], v11);
  v56 = v11;
  v58 = v13;
  v46 = v14;
  v15 = sub_1A93F77DC();
  v60 = *(_QWORD *)(v15 - 8);
  v61 = v15;
  MEMORY[0x1E0C80A78](v15);
  v59 = (char *)&v44 - v16;
  v17 = type metadata accessor for EyebrowBuilder.ListContext(0);
  v45 = *(_QWORD *)(v17 - 8);
  v18 = *(_QWORD *)(v45 + 64);
  MEMORY[0x1E0C80A78](v17);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A60E8);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t)v5 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context;
  v23 = v5[24];
  v24 = v5[25];
  __swift_project_boxed_opaque_existential_1(v5 + 21, v23);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v24 + 40))(&v63, v23, v24);
  v25 = v63;
  v26 = v64;
  v27 = BYTE1(v64);
  v28 = &v21[*(int *)(v19 + 48)];
  sub_1A9064630(v22, (uint64_t)v21, type metadata accessor for EyebrowBuilder.ListContext);
  *(_QWORD *)v28 = v25;
  v28[8] = v26;
  v28[9] = v27;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    sub_1A9064630((uint64_t)v21, (uint64_t)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for EyebrowBuilder.ListContext);
    sub_1A905FD54((uint64_t)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1ED2ACF98);
  }
  else if (EnumCaseMultiPayload != 1 || (v27 & 1) != 0 || (v26 & 1) == 0 || v25)
  {
    EyebrowBuilder.captionPublisher.getter(v62);
    return sub_1A905FD54((uint64_t)v21, (uint64_t *)&unk_1ED2A60E8);
  }
  sub_1A9064714((uint64_t)v21, type metadata accessor for EyebrowBuilder.ListContext);
  sub_1A9064630(v22, (uint64_t)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for EyebrowBuilder.ListContext);
  v31 = (*(unsigned __int8 *)(v45 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  v32 = swift_allocObject();
  sub_1A93622F8((uint64_t)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v32 + v31);
  v33 = v53;
  sub_1A93F7B84();
  swift_release();
  sub_1A9066CA8(&qword_1ED2A2230, (uint64_t (*)(uint64_t))type metadata accessor for EpisodePlayState, (uint64_t)&protocol conformance descriptor for EpisodePlayState);
  v34 = v52;
  v35 = v57;
  sub_1A93F7CE0();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v35);
  swift_retain();
  v37 = v58;
  v36 = v59;
  v38 = v56;
  sub_1A93F7B84();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v34, v38);
  v39 = sub_1A9066D74(&qword_1ED2A9050, &qword_1ED2A9058, MEMORY[0x1E0C95D90]);
  v40 = v61;
  v41 = MEMORY[0x1AF414014](MEMORY[0x1E0C95950], v61);
  v63 = v37;
  v64 = v40;
  v65 = v39;
  v66 = v41;
  v42 = sub_1A93F77A0();
  v43 = v62;
  v62[3] = v42;
  v43[4] = MEMORY[0x1AF414014](MEMORY[0x1E0C95870]);
  __swift_allocate_boxed_opaque_existential_1(v43);
  MEMORY[0x1AF411A04](v40, v41, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v36, v40);
}

uint64_t EyebrowBuilder.captionPublisher.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t result;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;

  v2 = v1;
  v34 = a1;
  v28 = _s26SynchronizedEventPublisherVMa();
  MEMORY[0x1E0C80A78](v28);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F738C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8B78);
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8988);
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v29 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1[24];
  v16 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 104))(v15, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1A93F7380();
    sub_1A905FD54((uint64_t)v7, (uint64_t *)&unk_1ED2AD360);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v4, v11, v8);
  sub_1A9066CA8(&qword_1ED2A9480, (uint64_t (*)(uint64_t))_s26SynchronizedEventPublisherVMa, (uint64_t)&unk_1A94056D4);
  v17 = sub_1A93F7B24();
  sub_1A9064714((uint64_t)v4, (uint64_t (*)(_QWORD))_s26SynchronizedEventPublisherVMa);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v35 = v17;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8FF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
  v18 = MEMORY[0x1E0C95D90];
  sub_1A9066D74(&qword_1ED2A8FF0, &qword_1ED2A8FF8, MEMORY[0x1E0C95D90]);
  sub_1A93F7B84();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9728);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1A9405520;
  swift_beginAccess();
  v20 = v2[3];
  *(_QWORD *)(v19 + 32) = v2[2];
  *(_QWORD *)(v19 + 40) = v20;
  sub_1A9066D74(&qword_1ED2A8B70, &qword_1ED2A8B78, MEMORY[0x1E0C95950]);
  swift_bridgeObjectRetain();
  v21 = v29;
  v22 = v32;
  sub_1A93F7C68();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v22);
  sub_1A9066D74(&qword_1ED2A8980, &qword_1ED2A8988, MEMORY[0x1E0C95788]);
  v23 = v33;
  v24 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9058);
  v26 = v34;
  v34[3] = v25;
  result = sub_1A9066D74(&qword_1ED2A9050, &qword_1ED2A9058, v18);
  v26[4] = result;
  *v26 = v24;
  return result;
}

uint64_t _s26SynchronizedEventPublisherVMa()
{
  uint64_t result;

  result = qword_1ED2A9488;
  if (!qword_1ED2A9488)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static EpisodePlayState.state(for:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(_OWORD *, uint64_t, uint64_t, uint64_t);
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  char v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  if ((*(_BYTE *)(a1 + 11) & 1) != 0)
  {
    v10 = type metadata accessor for EpisodePlayState();
    v11 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a2;
    v13 = 1;
    return v11(v12, v13, 1, v10);
  }
  if (*(_BYTE *)(a1 + 12) == 1)
  {
    *a2 = *(_OWORD *)(a1 + 16);
    v14 = type metadata accessor for EpisodePlayState();
LABEL_10:
    swift_storeEnumTagMultiPayload();
    v11 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
    v12 = a2;
    v13 = 0;
    v10 = v14;
    return v11(v12, v13, 1, v10);
  }
  if (!*(_BYTE *)(a1 + 13))
  {
    v14 = type metadata accessor for EpisodePlayState();
    goto LABEL_10;
  }
  v15 = *(double *)(a1 + 32);
  v16 = *(_BYTE *)(a1 + 40);
  v17 = sub_1A93F738C();
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v9, 1, 1, v17);
  if (v15 > 0.0)
  {
    sub_1A93F72CC();
    sub_1A905FD54((uint64_t)v9, (uint64_t *)&unk_1ED2AD360);
    v18(v7, 0, 1, v17);
    sub_1A90A13C8((uint64_t)v7, (uint64_t)v9);
  }
  v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30) + 48);
  sub_1A90A13C8((uint64_t)v9, (uint64_t)a2);
  *((_BYTE *)a2 + v19) = v16;
  v20 = type metadata accessor for EpisodePlayState();
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 0, 1, v20);
}

uint64_t sub_1A90837D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v1 = v0[2];
  v2 = *(_QWORD *)(*v0 + 80);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for AnyEpisodeStateDataSource(0, v2, AssociatedConformanceWitness, v4);
  v6 = swift_bridgeObjectRetain();
  if (MEMORY[0x1AF4120D0](v6, v5))
  {
    v7 = 4;
    do
    {
      v8 = v7 - 4;
      v9 = sub_1A93F8388();
      sub_1A93F8340();
      if ((v9 & 1) != 0)
      {
        swift_retain();
        v10 = v7 - 3;
        if (__OFADD__(v8, 1))
          goto LABEL_9;
      }
      else
      {
        sub_1A93F8CB8();
        v10 = v7 - 3;
        if (__OFADD__(v8, 1))
        {
LABEL_9:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      sub_1A9055750();
      swift_release();
      ++v7;
    }
    while (v10 != MEMORY[0x1AF4120D0](v1, v5));
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A90838DC()
{
  uint64_t *v0;

  return sub_1A90838E8(v0[5], v0[2], v0[3], v0[4]);
}

uint64_t sub_1A90838E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, a3);
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a3);
}

uint64_t sub_1A9083998@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A90839AC(a1);
}

uint64_t sub_1A90839AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = sub_1A90839E0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1A90839E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char isUniquelyReferenced_nonNull_native;
  id v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  int v47;
  _BOOL4 v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[2];
  unsigned __int8 v61;
  uint64_t v62;

  v58 = a2;
  v7 = a4 & 1;
  v8 = sub_1A93F75FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v57 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1 + 24;
  swift_beginAccess();
  v56 = a1;
  v12 = *(_QWORD *)(a1 + 24);
  if (*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = v58;
    sub_1A9086E60(v58, a3, v7);
    v14 = sub_1A9083EC8(v13, a3, v7);
    if ((v15 & 1) != 0)
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v14);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1A9086E08(v58, a3, v7);
      return v16;
    }
    swift_bridgeObjectRelease();
    sub_1A9086E08(v58, a3, v7);
  }
  v54 = v4;
  v55 = v9;
  v59 = a3;
  v52 = v11;
  sub_1A93F8940();
  if (qword_1ED2A42C0 != -1)
    goto LABEL_20;
LABEL_6:
  swift_beginAccess();
  v17 = v56;
  v19 = *(_QWORD *)(v56 + qword_1ED2A2EC0);
  v18 = *(_QWORD *)(v56 + qword_1ED2A2EC0 + 8);
  v20 = *(unsigned __int8 *)(v56 + qword_1ED2A2EC0 + 16);
  v21 = (id)qword_1ED2A42B0;
  v22 = v57;
  sub_1A932C71C(v57);
  v50 = v18;
  v51 = v19;
  v49 = v20;
  sub_1A93F75C0();

  v55 = *(_QWORD *)(v55 + 8);
  ((void (*)(uint64_t, unint64_t))v55)(v22, v8);
  v23 = *(_QWORD *)(v17 + 16);
  v53 = v8;
  if (!(v23 >> 62))
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v24)
      goto LABEL_22;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v24 = sub_1A93F8E5C();
  if (v24)
  {
LABEL_8:
    v25 = v58;
    v26 = v7;
    v8 = v23 & 0xC000000000000001;
    v7 = 4;
    while (1)
    {
      v27 = v7 - 4;
      if (v8)
      {
        v28 = MEMORY[0x1AF4129DC](v7 - 4, v23);
        v29 = v7 - 3;
        if (__OFADD__(v27, 1))
          goto LABEL_19;
      }
      else
      {
        v28 = *(_QWORD *)(v23 + 8 * v7);
        swift_retain();
        v29 = v7 - 3;
        if (__OFADD__(v27, 1))
        {
LABEL_19:
          __break(1u);
LABEL_20:
          swift_once();
          goto LABEL_6;
        }
      }
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v28 + 64))(v60, v25, v59, v26);
      swift_release();
      v30 = v61;
      if (v61 <= 0xFDu)
      {
        v46 = v60[1];
        v45 = v60[0];
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      ++v7;
      if (v29 == v24)
      {
        swift_bridgeObjectRelease();
        v45 = 0;
        v46 = 0;
        v30 = 192;
LABEL_18:
        LODWORD(v7) = v26;
        goto LABEL_23;
      }
    }
  }
LABEL_22:
  swift_bridgeObjectRelease();
  v45 = 0;
  v46 = 0;
  v30 = 192;
LABEL_23:
  v47 = v7;
  v48 = v7 != 0;
  v31 = v7;
  v32 = v56;
  v33 = *(_QWORD *)(v56 + 32);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A2918);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 64) = MEMORY[0x1E0DEE9D8];
  v34 = objc_allocWithZone(MEMORY[0x1E0CB38E0]);
  v36 = v58;
  v35 = v59;
  sub_1A9086E60(v58, v59, v31);
  v37 = v45;
  v38 = v36;
  v39 = v46;
  sub_1A908850C(v45, v46, v30);
  swift_bridgeObjectRetain();
  v40 = objc_msgSend(v34, sel_init);
  *(_QWORD *)(v16 + 16) = v38;
  *(_QWORD *)(v16 + 24) = v35;
  *(_BYTE *)(v16 + 32) = v48;
  *(_QWORD *)(v16 + 40) = v37;
  *(_QWORD *)(v16 + 48) = v39;
  *(_BYTE *)(v16 + 56) = v30;
  *(_QWORD *)(v16 + 72) = v33;
  *(_QWORD *)(v16 + 80) = v40;
  swift_beginAccess();
  LOBYTE(v34) = v47;
  sub_1A9086E60(v38, v35, v47);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v62 = *(_QWORD *)(v32 + 24);
  *(_QWORD *)(v32 + 24) = 0x8000000000000000;
  sub_1A930F7F0(v16, v38, v35, (char)v34, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v32 + 24) = v62;
  swift_bridgeObjectRelease();
  sub_1A9086E08(v38, v35, (char)v34);
  swift_endAccess();
  sub_1A93F8934();
  v42 = (id)qword_1ED2A42B0;
  v43 = v57;
  sub_1A932C71C(v57);
  sub_1A93F75C0();

  ((void (*)(uint64_t, unint64_t))v55)(v43, v53);
  sub_1A9086E7C(v37, v39, v30);
  return v16;
}

unint64_t sub_1A9083EC8(uint64_t a1, uint64_t a2, char a3)
{
  char v6;
  uint64_t v7;

  v6 = a3 & 1;
  sub_1A93F92DC();
  sub_1A93F92E8();
  if ((a3 & 1) != 0)
    sub_1A93F7FBC();
  else
    sub_1A93F930C();
  v7 = sub_1A93F9324();
  return sub_1A9083F6C(a1, a2, v6, v7);
}

unint64_t sub_1A9083F6C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v11 = ~v6;
    v12 = *(_QWORD *)(v4 + 48);
    do
    {
      v13 = (uint64_t *)(v12 + 24 * v7);
      v14 = *v13;
      if (*((_BYTE *)v13 + 16) == 1)
      {
        if ((a3 & 1) != 0)
        {
          v15 = v14 == a1 && v13[1] == a2;
          if (v15 || (sub_1A93F90C0() & 1) != 0)
            return v7;
        }
      }
      else if ((a3 & 1) == 0 && v14 == a1)
      {
        return v7;
      }
      v7 = (v7 + 1) & v11;
    }
    while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

void AssetBackgroundSession.init(descriptor:jobLibrary:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  _QWORD v12[20];

  v12[4] = a1;
  v12[11] = a4;
  v7 = *(_QWORD *)(a3 - 8);
  v12[7] = *(_QWORD *)(v7 + 64);
  v12[8] = a2;
  v12[9] = v7;
  v8 = MEMORY[0x1E0C80A78](a4);
  v12[6] = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 16);
  v11(v8, a1);
  v12[5] = v11;
  AssetBackgroundSessionDescriptor.createJobCache(libraryPath:)(a2);
}

void sub_1A90840F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v1 - 160) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for DownloadTaskIdentifier(255, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v6 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v1 - 144) = v5;
  *(_QWORD *)(v1 - 136) = AssociatedTypeWitness;
  *(_QWORD *)(v1 - 128) = &protocol witness table for DownloadTaskIdentifier<A>;
  *(_QWORD *)(v1 - 120) = v6;
  *(_QWORD *)(v1 - 112) = MEMORY[0x1E0DEA978];
  type metadata accessor for DiskAssetCache();
}

void sub_1A90841BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t AssociatedConformanceWitness;

  *(_QWORD *)(v5 - 96) = MEMORY[0x1AF414014](&protocol conformance descriptor for DownloadTaskIdentifier<A>, v3);
  v7 = MEMORY[0x1AF414014](&protocol conformance descriptor for <> DiskAssetCache<A, B>, a1, v5 - 96);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v5 - 144) = a1;
  *(_QWORD *)(v5 - 136) = v7;
  *(_QWORD *)(v5 - 128) = AssociatedConformanceWitness;
  *(_QWORD *)(v5 - 120) = v4;
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v1;
  type metadata accessor for AssetBackgroundDelegate();
}

void sub_1A9084224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);

  *(_QWORD *)(v4 - 144) = *(_QWORD *)(v4 - 160);
  v5 = *(_QWORD *)(v4 - 192);
  v3(v5, *(_QWORD *)(v4 - 208), v0);
  v6 = *(_QWORD *)(v4 - 168);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 40) & ~v7;
  *(_QWORD *)(v4 - 232) = v8 + *(_QWORD *)(v4 - 184);
  *(_QWORD *)(v4 - 216) = v7 | 7;
  v9 = (char *)swift_allocObject();
  *((_QWORD *)v9 + 2) = v0;
  *((_QWORD *)v9 + 3) = v2;
  *((_QWORD *)v9 + 4) = v1;
  *(_QWORD *)(v4 - 240) = v1;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  *(_QWORD *)(v4 - 224) = v10;
  v10(&v9[v8], v5, v0);
  swift_retain();
  sub_1A90848B0(v4 - 144, (uint64_t)sub_1A915CF4C, (uint64_t)v9);
}

uint64_t sub_1A90842BC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;

  swift_release();
  swift_release();
  v9 = type metadata accessor for AssetBackgroundSession(0, v1, v4, v2);
  *(_QWORD *)(v7 - 184) = v9;
  *(_QWORD *)(*(_QWORD *)(v7 - 152) + *(int *)(v9 + 44)) = a1;
  v10 = (void *)objc_opt_self();
  v11 = a1;
  v12 = v6;
  AssetBackgroundSessionDescriptor.name.getter();
  v13 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v10, sel_backgroundSessionConfigurationWithIdentifier_, v13);

  v15 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 200))(v3, v12, v1);
  v16 = (*(_QWORD *)(v7 - 232) + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = v1;
  *((_QWORD *)v17 + 3) = v4;
  *((_QWORD *)v17 + 4) = *(_QWORD *)(v7 - 240);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 - 224))(&v17[v5], v15, v1);
  *(_QWORD *)&v17[v16] = v14;
  *(_QWORD *)&v17[(v16 + 15) & 0xFFFFFFFFFFFFFFF8] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9298);
  swift_allocObject();
  v18 = sub_1A93F7A94();
  v19 = sub_1A93F726C();
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(*(_QWORD *)(v7 - 176), v19);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 168) + 8))(v12, v1);
  v21 = *(_QWORD *)(v7 - 184);
  v22 = *(_QWORD *)(v7 - 152);
  *(_QWORD *)(v22 + *(int *)(v21 + 48)) = v18;
  *(_QWORD *)(v22 + *(int *)(v21 + 52)) = *(_QWORD *)(v7 - 160);
  return result;
}

void type metadata accessor for DiskAssetCache()
{
  JUMPOUT(0x1AF413F6CLL);
}

uint64_t AssetBackgroundSessionDescriptor.name.getter()
{
  swift_getDynamicType();
  swift_getMetatypeMetadata();
  return sub_1A93F8094();
}

uint64_t type metadata accessor for DownloadTaskIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadTaskIdentifier);
}

uint64_t type metadata accessor for AssetBackgroundSession(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AssetBackgroundSession);
}

void AssetBackgroundSessionDescriptor.createJobCache(libraryPath:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[5];
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _UNKNOWN **v20;
  uint64_t v21;
  uint64_t v22;

  v13[2] = a1;
  v1 = sub_1A93F885C();
  v16 = *(_QWORD *)(v1 - 8);
  v17 = v1;
  MEMORY[0x1E0C80A78](v1);
  v15 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A93F8808();
  MEMORY[0x1E0C80A78](v14);
  v13[4] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v4);
  v13[3] = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91A0);
  v13[1] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1A93F726C();
  MEMORY[0x1E0C80A78](v7);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10 = swift_getAssociatedConformanceWitness();
  v11 = type metadata accessor for DownloadTaskIdentifier(255, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v12 = swift_getAssociatedConformanceWitness();
  v18 = v11;
  v19 = AssociatedTypeWitness;
  v20 = &protocol witness table for DownloadTaskIdentifier<A>;
  v21 = v12;
  v22 = MEMORY[0x1E0DEA978];
  type metadata accessor for DiskAssetCache();
}

void sub_1A90846D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 192) = a1;
  AssetBackgroundSessionDescriptor.name.getter();
  sub_1A93F71AC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v6 - 120) = v3;
  *(_QWORD *)(v6 - 112) = v1;
  *(_QWORD *)(v6 - 104) = v5;
  *(_QWORD *)(v6 - 96) = v2;
  *(_QWORD *)(v6 - 88) = v4;
  type metadata accessor for InMemoryAssetCache();
}

void sub_1A9084714()
{
  sub_1A93F7A64();
  sub_1A9066D74(&qword_1ED2A9198, &qword_1ED2A91A0, MEMORY[0x1E0C960D0]);
  sub_1A9084DD0();
}

uint64_t sub_1A9084774(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 184) + 8))(v1, v3);
  sub_1A9066C6C();
  sub_1A93F7DA0();
  *(_QWORD *)(v4 - 120) = MEMORY[0x1E0DEE9D8];
  sub_1A9085ACC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v4 - 136) + 104))(*(_QWORD *)(v4 - 144), *MEMORY[0x1E0DEF8D0], *(_QWORD *)(v4 - 128));
  v6 = sub_1A93F888C();
  *(_BYTE *)(v4 - 120) = 0;
  return DiskAssetCache.__allocating_init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(v2, a1, v6, 2048);
}

void type metadata accessor for InMemoryAssetCache()
{
  JUMPOUT(0x1AF413F6CLL);
}

void type metadata accessor for AssetBackgroundDelegate()
{
  JUMPOUT(0x1AF413F6CLL);
}

void sub_1A90848B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  sub_1A90848F8(a1, a2, a3);
}

void sub_1A90848F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;

  swift_getObjectType();
  v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v8 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)v3;
  v9 = &v3[*(_QWORD *)(v8 + 0x88)];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v3[*(_QWORD *)((*v7 & *(_QWORD *)v3) + 0x80)];
  *(_QWORD *)v10 = a2;
  *((_QWORD *)v10 + 1) = a3;
  (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v8 + 80) - 8) + 16))(&v3[*(_QWORD *)((*v7 & *(_QWORD *)v3) + 0x90)], a1, *(_QWORD *)(v8 + 80));
  v11 = v3;
  swift_retain();
  type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
}

id sub_1A90849C8()
{
  objc_class *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  objc_super v5;

  swift_getTupleTypeMetadata2();
  sub_1A93F8370();
  *(_QWORD *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0x98)) = sub_1A93F7F20();
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  *(_QWORD *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0xA0)) = sub_1A9084C30(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0xA8)) = sub_1A9084AC8((uint64_t)v3);
  *(_QWORD *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0xB0)) = sub_1A91155D4(v3);
  *(_QWORD *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0xB8)) = dispatch_group_create();

  v5.receiver = v1;
  v5.super_class = v0;
  return objc_msgSendSuper2(&v5, sel_init);
}

unint64_t sub_1A9084AC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9370);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB77C0);
    v7 = (_QWORD *)sub_1A93F8E8C();
    v8 = (char *)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_1A9062170(v9, (uint64_t)v5, (uint64_t *)&unk_1ED2A9370);
      v11 = *v5;
      result = sub_1A906C428(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v7[6] + 8 * result) = v11;
      v15 = v7[7];
      v16 = sub_1A93F6D80();
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, v8, v16);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1A9084C30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C30);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB77C8);
  v6 = sub_1A93F8E8C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1A9062170(v12, (uint64_t)v5, &qword_1ED2A5C30);
    result = sub_1A912E3B4((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1A93F6D80();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord()
{
  JUMPOUT(0x1AF413F6CLL);
}

void sub_1A9084DD0()
{
  swift_allocObject();
  sub_1A9084E78();
}

uint64_t sub_1A9084E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7;

  v7 = a5();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a2, a3);
  return v7;
}

void sub_1A9084E78()
{
  sub_1A9085144();
}

void sub_1A9084ECC()
{
  type metadata accessor for InMemoryAssetCache.SizedStore();
}

_QWORD *sub_1A9084EF0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t *v7;

  v4 = sub_1A9084F88();
  swift_bridgeObjectRelease();
  v1[2] = v4;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC948);
  v5 = swift_allocObject();
  v1[3] = v5;
  *(_DWORD *)(v5 + 24) = 0;
  v6 = (os_unfair_lock_s *)(v5 + 24);
  *(_QWORD *)(v5 + 16) = 0;
  v7 = (uint64_t *)(v5 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_1A908504C(v7, v3, v1, v2, v0);
  os_unfair_lock_unlock(v6);
  return v1;
}

uint64_t sub_1A9084F88()
{
  type metadata accessor for os_unfair_lock_s(255);
  sub_1A93F8D3C();
  return sub_1A93F8D30();
}

void sub_1A9084FF4(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1ED2AD540);
}

uint64_t sub_1A908504C(uint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;

  v8 = (_QWORD *)*a3;
  swift_release();
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v8[10];
  v10[3] = v8[11];
  v10[4] = a4;
  v10[5] = v8[12];
  v10[6] = v8[13];
  v10[7] = a5;
  v10[8] = v8[14];
  v10[9] = v9;
  swift_retain();
  v11 = sub_1A93F7D04();
  swift_release();
  result = swift_release();
  *a1 = v11;
  return result;
}

void sub_1A9085144()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for InMemoryAssetCache.Record();
}

uint64_t sub_1A90851B4()
{
  uint64_t v0;

  swift_getTupleTypeMetadata2();
  sub_1A93F8370();
  sub_1A93F7F20();
  return v0;
}

uint64_t DiskAssetCache.__allocating_init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = swift_allocObject();
  v9 = v8 + qword_1ED2B8A10;
  v10 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a1, v10);
  v11 = v8 + qword_1ED2B8A18;
  *(_DWORD *)v11 = a4;
  *(_BYTE *)(v11 + 4) = BYTE4(a4) & 1;
  *(_QWORD *)(v8 + qword_1ED2ACE28) = a3;
  *(_QWORD *)(v8 + qword_1ED2ACE20) = a2;
  return v8;
}

uint64_t DiskAssetCache.init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = v4 + qword_1ED2B8A10;
  v10 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a1, v10);
  v11 = v4 + qword_1ED2B8A18;
  *(_DWORD *)v11 = a4;
  *(_BYTE *)(v11 + 4) = BYTE4(a4) & 1;
  *(_QWORD *)(v4 + qword_1ED2ACE28) = a3;
  *(_QWORD *)(v4 + qword_1ED2ACE20) = a2;
  return v4;
}

_QWORD *EpisodeStateController.init(dataSources:transitionRules:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2 = sub_1A90853A4(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

_QWORD *sub_1A90853A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD v29[2];
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v3 = v2;
  v34 = a2;
  v5 = (_QWORD *)*v2;
  v6 = sub_1A93F885C();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x1E0C80A78](v6);
  v31 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1A93F8808();
  MEMORY[0x1E0C80A78](v30);
  v29[1] = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v9);
  v10 = v5[10];
  v11 = v5[11];
  v35 = v5[12];
  type metadata accessor for EpisodeStateMachine(0, v10, v11, v35);
  sub_1A9087200();
  v2[3] = sub_1A93F7EB4();
  v29[0] = sub_1A9066C6C();
  v36 = 0;
  v37 = 0xE000000000000000;
  sub_1A93F8C70();
  sub_1A93F810C();
  sub_1A93F9474();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F9474();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F7D88();
  v36 = MEMORY[0x1E0DEE9D8];
  sub_1A9085ACC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9085B14();
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v31, *MEMORY[0x1E0DEF8D0], v33);
  v2[5] = sub_1A93F888C();
  v12 = (char *)v2 + qword_1ED2A2EC8;
  v13 = sub_1A93F75FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = (char *)v3 + qword_1ED2A2EC0;
  *(_QWORD *)v14 = "EpisodeStateController.stateMachine(for:).fault";
  *((_QWORD *)v14 + 1) = 47;
  v14[16] = 2;
  v3[2] = a1;
  v15 = v3;
  v3[4] = v34;
  v16 = v11;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = v10;
  v20 = type metadata accessor for AnyEpisodeStateDataSource(0, v10, AssociatedConformanceWitness, v19);
  v21 = swift_bridgeObjectRetain();
  if (MEMORY[0x1AF4120D0](v21, v20))
  {
    v22 = 4;
    do
    {
      v23 = v22 - 4;
      v24 = sub_1A93F8388();
      sub_1A93F8340();
      if ((v24 & 1) != 0)
      {
        swift_retain();
        v25 = v22 - 3;
        if (__OFADD__(v23, 1))
          goto LABEL_9;
      }
      else
      {
        sub_1A93F8CB8();
        v25 = v22 - 3;
        if (__OFADD__(v23, 1))
        {
LABEL_9:
          __break(1u);
          return v15;
        }
      }
      v26 = swift_allocObject();
      swift_weakInit();
      v27 = (_QWORD *)swift_allocObject();
      v27[2] = v18;
      v27[3] = v16;
      v27[4] = v35;
      v27[5] = v26;
      swift_retain();
      sub_1A90857C0((uint64_t)sub_1A906F5B8, (uint64_t)v27);
      swift_release();
      swift_release();
      ++v22;
    }
    while (v25 != MEMORY[0x1AF4120D0](a1, v20));
  }
  return v15;
}

uint64_t sub_1A90857C0(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t, uint64_t);
  void (*v5)(uint64_t, uint64_t);

  sub_1A90858D0();
  v5 = v4;
  swift_release();
  v5(a1, a2);
  sub_1A9085818(a1);
  return swift_release();
}

uint64_t sub_1A9085818(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1A9085828(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A9085834(a1, a2, v2[5], v2[2], v2[3], v2[4]);
}

uint64_t sub_1A9085834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);

  swift_projectBox();
  swift_beginAccess();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 40);
  sub_1A90858C0(a1);
  v10(a1, a2, a5, a6);
  return swift_endAccess();
}

uint64_t sub_1A90858C0(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1A90858D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_1A9085918(uint64_t a1, void (*a2)(unint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[2];
  uint64_t *v17;
  uint64_t v18;

  v16[1] = a4;
  v17 = a5;
  v16[0] = a3;
  v6 = sub_1A93F885C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F8808();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v10);
  v12 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_1A9066C6C();
  a2(v13, v14);
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v11, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF8D0], v6);
  result = sub_1A93F888C();
  *v17 = result;
  return result;
}

unint64_t sub_1A9085ACC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2AD3A0;
  if (!qword_1ED2AD3A0)
  {
    v1 = sub_1A93F8808();
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2AD3A0);
  }
  return result;
}

unint64_t sub_1A9085B14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2AD390;
  if (!qword_1ED2AD390)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED2AD380);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2AD390);
  }
  return result;
}

uint64_t EpisodeStateDataSourceProtocol.eraseToAnyEpisodeStateDataSource()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for AnyEpisodeStateDataSource(0, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a1);
  v12 = swift_allocObject();
  sub_1A9085C58((uint64_t)v8, a1, a2);
  return v12;
}

uint64_t *sub_1A9085C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;

  v7 = *v3;
  v8 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(v9, a1, a2);
  v10 = (_QWORD *)swift_allocObject();
  v11 = *(_QWORD *)(v7 + 80);
  v10[2] = v11;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = v8;
  v3[2] = (uint64_t)sub_1A90838DC;
  v3[3] = (uint64_t)v10;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v11;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = v8;
  v3[4] = (uint64_t)sub_1A938BF78;
  v3[5] = (uint64_t)v12;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v11;
  v13[3] = a2;
  v13[4] = a3;
  v13[5] = v8;
  v3[6] = (uint64_t)sub_1A9085828;
  v3[7] = (uint64_t)v13;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v11;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = v8;
  v3[8] = (uint64_t)sub_1A9086FA0;
  v3[9] = (uint64_t)v14;
  swift_retain_n();
  return v3;
}

uint64_t EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)()
{
  uint64_t v0;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A2918);
  sub_1A93F8874();
  type metadata accessor for ModernEpisodeDownloadStateMachine();
  v0 = swift_allocObject();
  sub_1A9085E10(v2);
  return v0;
}

{
  uint64_t v0;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A2918);
  sub_1A93F8874();
  type metadata accessor for ModernEpisodeDownloadStateMachine();
  v0 = swift_allocObject();
  sub_1A9085E10(v2);
  return v0;
}

uint64_t type metadata accessor for ModernEpisodeDownloadStateMachine()
{
  return objc_opt_self();
}

void sub_1A9085E10(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  unsigned int v4;
  void *v5;

  *(_QWORD *)(v1 + 16) = a1;
  swift_beginAccess();
  v3 = *(void **)(a1 + 80);
  swift_retain();
  objc_msgSend(v3, sel_lock);
  swift_beginAccess();
  v4 = *(unsigned __int8 *)(a1 + 56);
  v5 = *(void **)(a1 + 80);
  sub_1A908850C(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v4);
  objc_msgSend(v5, sel_unlock);
  __asm { BR              X12 }
}

uint64_t sub_1A9085ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  sub_1A9086E7C(v1, v2, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A40A0);
  swift_allocObject();
  *(_QWORD *)(v0 + 24) = sub_1A93F79EC();
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = *(void **)(v3 + 80);
  swift_retain();
  objc_msgSend(v8, *(SEL *)(v5 + 3416));
  sub_1A9086058(v0, (uint64_t)sub_1A932CCC0, v7, v3);
  objc_msgSend(*(id *)(v3 + 80), *(SEL *)(v6 + 3424));
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1A9085FE0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s18PodcastsFoundation26ModernEpisodeDownloadStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A9086040(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_1A9086040(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1A9086058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  _BYTE v13[24];
  _BYTE v14[8];
  uint64_t v15;
  uint64_t v16;

  swift_unknownObjectWeakInit();
  v15 = a2;
  v16 = a3;
  sub_1A9062170((uint64_t)v14, (uint64_t)v13, qword_1ED2A3988);
  v7 = (_QWORD *)(a4 + 64);
  swift_beginAccess();
  v8 = *(_QWORD **)(a4 + 64);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 64) = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v8 = sub_1A908617C(0, v8[2] + 1, 1, (unint64_t)v8);
    *v7 = v8;
  }
  v11 = v8[2];
  v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    v8 = sub_1A908617C((_QWORD *)(v10 > 1), v11 + 1, 1, (unint64_t)v8);
    *v7 = v8;
  }
  v8[2] = v11 + 1;
  sub_1A908651C((uint64_t)v13, (uint64_t)&v8[3 * v11 + 4]);
  swift_endAccess();
  return sub_1A905FD54((uint64_t)v14, qword_1ED2A3988);
}

_QWORD *sub_1A908617C(_QWORD *result, int64_t a2, char a3, unint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *(_QWORD *)(a4 + 24);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *(_QWORD *)(a4 + 16);
    if (v7 <= v8)
      v9 = *(_QWORD *)(a4 + 16);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4470);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = (unint64_t)(v10 + 4);
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if ((unint64_t)v10 < a4 || v12 >= a4 + 32 + 24 * v8)
        {
          __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A3988);
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v10 != (_QWORD *)a4)
        {
          __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A3988);
          swift_arrayInitWithTakeBackToFront();
        }
        *(_QWORD *)(a4 + 16) = 0;
        goto LABEL_24;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = MEMORY[0x1E0DEE9D8] + 32;
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A9086410(0, v8, v12, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A90862E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4])
          memmove(v13, a4 + 4, 24 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A911B380(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9086410(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A3988);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A908651C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A3988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9086564(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A90866D0(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A90865C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v2 = type metadata accessor for EpisodeStateMachine(0, v1, *(_QWORD *)(*(_QWORD *)v0 + 88), *(_QWORD *)(*(_QWORD *)v0 + 96));
  return Lockable.locked<A>(perform:)((void (*)(uint64_t))sub_1A9088034, v0, v2, v1, (uint64_t)&protocol witness table for EpisodeStateMachine<A, B>);
}

uint64_t sub_1A9086638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t **v3;
  uint64_t *v4;
  uint64_t v5;
  _QWORD v7[5];

  v4 = *v3;
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  v5 = type metadata accessor for EpisodeStateMachine(0, v4[10], v4[11], v4[12]);
  return Lockable.locked<A>(perform:)((void (*)(uint64_t))sub_1A90880A0, (uint64_t)v7, v5, MEMORY[0x1E0DEE9C0] + 8, (uint64_t)&protocol witness table for EpisodeStateMachine<A, B>);
}

uint64_t sub_1A90866B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A9086770(*(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), a1);
}

uint64_t sub_1A90866D0(uint64_t result)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = (char *)(swift_bridgeObjectRetain() + 48);
    do
    {
      v3 = *((_QWORD *)v2 - 2);
      v4 = *((_QWORD *)v2 - 1);
      v5 = *v2;
      v2 += 24;
      sub_1A9086E60(v3, v4, v5);
      sub_1A9087244(v3, v4, v5);
      sub_1A9086E08(v3, v4, v5);
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A9086770@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  _DWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  char *v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[5];
  BOOL v77;
  _QWORD v78[2];
  char v79;
  uint64_t v80;

  v69 = a5;
  v8 = a4 & 1;
  v9 = *a1;
  v10 = *(_QWORD *)(*a1 + 80);
  v61 = sub_1A93F8A90();
  v73 = *(_QWORD *)(v61 - 8);
  v11 = MEMORY[0x1E0C80A78](v61);
  v13 = (char *)v54 - v12;
  v75 = *(_QWORD *)(v10 - 8);
  v14 = MEMORY[0x1E0C80A78](v11);
  v62 = (char *)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v70 = (char *)v54 - v16;
  v67 = sub_1A93F75FC();
  v64 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v68 = (uint64_t)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = a1 + 3;
  swift_beginAccess();
  v66 = a1;
  v18 = a1[3];
  v78[0] = a2;
  v78[1] = a3;
  v71 = a3;
  v79 = v8;
  swift_bridgeObjectRetain();
  sub_1A9086E60(a2, a3, v8);
  v19 = *(_QWORD *)(v9 + 88);
  v20 = *(_QWORD *)(v9 + 96);
  v74 = v10;
  v21 = type metadata accessor for EpisodeStateMachine(0, v10, v19, v20);
  v22 = sub_1A9087200();
  MEMORY[0x1AF411C8C](v76, v78, v18, &type metadata for EpisodeStateIdentifier, v21, v22);
  v23 = v71;
  swift_bridgeObjectRelease();
  v65 = a2;
  result = sub_1A9086E08(a2, v23, v8);
  v25 = v76[0];
  if (!v76[0])
  {
    v59 = v20;
    v60 = v19;
    v57 = v22;
    v58 = v21;
    v72 = v8;
    sub_1A93F8940();
    if (qword_1ED2A42C0 != -1)
      goto LABEL_17;
    while (1)
    {
      swift_beginAccess();
      v26 = v66;
      v27 = *(_QWORD *)((char *)v66 + qword_1ED2A2EC0);
      v28 = *(_QWORD *)((char *)v66 + qword_1ED2A2EC0 + 8);
      v29 = *((unsigned __int8 *)v66 + qword_1ED2A2EC0 + 16);
      v30 = (id)qword_1ED2A42B0;
      v31 = v68;
      sub_1A9087098(v68);
      v56 = v27;
      v55 = v28;
      v54[1] = v29;
      sub_1A93F75C0();

      v64 = *(_QWORD *)(v64 + 8);
      ((void (*)(uint64_t, uint64_t))v64)(v31, v67);
      v32 = v74;
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v32, AssociatedConformanceWitness);
      v34 = v26;
      v35 = v26[2];
      v37 = type metadata accessor for AnyEpisodeStateDataSource(0, v32, AssociatedConformanceWitness, v36);
      v38 = swift_bridgeObjectRetain();
      v39 = MEMORY[0x1AF4120D0](v38, v37);
      v40 = v65;
      if (!v39)
        break;
      v41 = 4;
      v42 = v71;
      v43 = v61;
      while (1)
      {
        v44 = sub_1A93F8388();
        sub_1A93F8340();
        if ((v44 & 1) != 0)
          swift_retain();
        else
          sub_1A93F8CB8();
        v45 = v41 - 3;
        if (__OFADD__(v41 - 4, 1))
          break;
        sub_1A9086F7C(v40, v42, v72);
        swift_release();
        v46 = v75;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v13, 1, v74) != 1)
        {
          swift_bridgeObjectRelease();
          v47 = v70;
          v32 = v74;
          (*(void (**)(char *, uint64_t))(v46 + 8))(v70, v74);
          (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v47, v13, v32);
          v34 = v66;
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v73 + 8))(v13, v43);
        ++v41;
        if (v45 == MEMORY[0x1AF4120D0](v35, v37))
        {
          swift_bridgeObjectRelease();
          v32 = v74;
          v34 = v66;
          v47 = v70;
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_17:
      swift_once();
    }
    swift_bridgeObjectRelease();
    v47 = v70;
    v42 = v71;
LABEL_14:
    v48 = v72;
    v49 = v72 != 0;
    v50 = (uint64_t)v62;
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v62, v47, v32);
    v51 = v34[4];
    sub_1A9086E60(v40, v42, v48);
    swift_bridgeObjectRetain();
    v25 = EpisodeStateMachine.__allocating_init(identifier:initialState:rules:)(v40, v42, v48, v50, v51);
    v80 = v25;
    v76[3] = v40;
    v76[4] = v42;
    v77 = v49;
    swift_beginAccess();
    sub_1A9086E60(v40, v42, v48);
    sub_1A93F7F5C();
    swift_retain();
    sub_1A93F7F80();
    swift_endAccess();
    sub_1A93F8934();
    v52 = (id)qword_1ED2A42B0;
    v53 = v68;
    sub_1A9087098(v68);
    sub_1A93F75C0();

    ((void (*)(uint64_t, uint64_t))v64)(v53, v67);
    result = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v70, v32);
  }
  *v69 = v25;
  return result;
}

uint64_t getEnumTagSinglePayload for EpisodeDownloadState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7D && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 125);
  v3 = ((*(unsigned __int8 *)(a1 + 16) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7C)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_1A9086E08(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s18PodcastsFoundation22EpisodeStateIdentifierOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A9086E60(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_1A9086E60(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t type metadata accessor for EpisodeStateMachine(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EpisodeStateMachine);
}

uint64_t sub_1A9086E7C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t result;

  if (((a3 >> 6) & 1 | 2) == 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t destroy for EpisodeDownloadState(uint64_t a1)
{
  return sub_1A9086E7C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

uint64_t getEnumTagSinglePayload for TranscriptSource(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t type metadata accessor for AnyEpisodeStateDataSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyEpisodeStateDataSource);
}

uint64_t sub_1A9086F48()
{
  uint64_t v0;

  return sub_1A9086F7C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
}

uint64_t sub_1A9086F7C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 + 64))(a1, a2, a3 & 1);
}

uint64_t sub_1A9086FA0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;

  return sub_1A9086FB0(a1, a2, a3 & 1, v3[5], v3[2], v3[3], v3[4]);
}

uint64_t sub_1A9086FB0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v11 = a3 & 1;
  v12 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 56))(a1, a2, v11, a6, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, a6);
}

uint64_t sub_1A9087098@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC900);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v13[-v7];
  v9 = v1 + qword_1ED2A2EC8;
  swift_beginAccess();
  sub_1A9066554(v9, (uint64_t)v8);
  v10 = sub_1A93F75FC();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_1A906659C((uint64_t)v8);
  sub_1A908855C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1A908A030((uint64_t)v6, v9);
  return swift_endAccess();
}

unint64_t sub_1A9087200()
{
  unint64_t result;

  result = qword_1ED2A2F50;
  if (!qword_1ED2A2F50)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeStateIdentifier, &type metadata for EpisodeStateIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED2A2F50);
  }
  return result;
}

uint64_t sub_1A9087244(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t result;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v6 = a3 & 1;
  v7 = *(_QWORD *)(*v3 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1);
  v29 = v3[2];
  v12 = *(_QWORD *)(v10 + 88);
  v11 = *(_QWORD *)(v10 + 96);
  v23 = v7;
  v24 = v12;
  v25 = v11;
  v26 = a1;
  v27 = a2;
  v28 = v6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for AnyEpisodeStateDataSource(255, v7, AssociatedConformanceWitness, v14);
  v15 = sub_1A93F83D0();
  swift_bridgeObjectRetain();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v15);
  v16 = sub_1A93F81D8();
  swift_bridgeObjectRelease();
  sub_1A9087480();
  if (!MEMORY[0x1AF4120D0](v16, v7))
  {
LABEL_12:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v17 = 0;
  while (1)
  {
    v18 = sub_1A93F8388();
    sub_1A93F8340();
    if ((v18 & 1) != 0)
    {
      (*(void (**)(_BYTE *, unint64_t, uint64_t))(v8 + 16))(&v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], v16+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v17, v7);
      v19 = v17 + 1;
      if (__OFADD__(v17, 1))
        goto LABEL_11;
      goto LABEL_5;
    }
    result = sub_1A93F8CB8();
    if (v9 != 8)
      break;
    v29 = result;
    (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v8 + 16))(&v22[-16], &v29, v7);
    swift_unknownObjectRelease();
    v19 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
LABEL_5:
    v20 = sub_1A90874F4((uint64_t)&v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)]);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(&v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], v7);
    if ((v20 & 1) == 0)
    {
      ++v17;
      if (v19 != MEMORY[0x1AF4120D0](v16, v7))
        continue;
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9087480()
{
  uint64_t v0;
  uint64_t v2;

  type metadata accessor for EpisodeStateMachine(0, *(_QWORD *)(*(_QWORD *)v0 + 80), *(_QWORD *)(*(_QWORD *)v0 + 88), *(_QWORD *)(*(_QWORD *)v0 + 96));
  sub_1A93F8874();
  return v2;
}

uint64_t sub_1A90874F4(uint64_t a1)
{
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD v5[6];
  unsigned __int8 v6;

  v2 = *v1;
  v5[3] = a1;
  v3 = type metadata accessor for EpisodeStateMachine(0, v2[10], v2[11], v2[12]);
  Lockable.locked<A>(perform:)((void (*)(uint64_t))sub_1A908768C, (uint64_t)v5, v3, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for EpisodeStateMachine<A, B>);
  return v6;
}

uint64_t Lockable.locked<A>(perform:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  v8 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 8);
  objc_msgSend((id)v8(a3, a5), sel_lock);
  v9 = swift_unknownObjectRelease();
  a1(v9);
  objc_msgSend((id)v8(a3, a5), sel_unlock);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A9087628()
{
  sub_1A9087648();
  return swift_unknownObjectRetain();
}

uint64_t sub_1A9087648()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 136);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1A908768C@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1A90876A4(*(uint64_t **)(v1 + 16), *(char **)(v1 + 24), a1);
}

uint64_t sub_1A90876A4@<X0>(uint64_t *a1@<X0>, char *a2@<X1>, char *a3@<X8>)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t AssociatedConformanceWitness;
  char *v24;
  uint64_t (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t result;
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  void (*v77)(char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t *v88;
  void (*v89)(char *, char *, uint64_t);
  char *v90;
  char *v91;
  uint64_t DynamicType;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;

  v91 = a3;
  v5 = (_QWORD *)*a1;
  v79 = sub_1A93F7698();
  v85 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v78 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v5[11];
  v82 = sub_1A93F8A90();
  v81 = *(_QWORD *)(v82 - 8);
  v8 = MEMORY[0x1E0C80A78](v82);
  v87 = (char *)&v77 - v9;
  v10 = *(_QWORD *)(v7 - 8);
  v11 = MEMORY[0x1E0C80A78](v8);
  v84 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v86 = (char *)&v77 - v14;
  v15 = v5[10];
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v13);
  v83 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v77 - v19;
  v21 = v5[14];
  v88 = a1;
  v22 = (char *)a1 + v21;
  swift_beginAccess();
  v89 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v89(v20, v22, v15);
  v80 = v5[12];
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v24 = a2;
  LOBYTE(v5) = sub_1A93F8004();
  v25 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  v90 = v20;
  v26 = v20;
  v27 = v15;
  result = v25(v26, v15);
  if ((v5 & 1) != 0)
    goto LABEL_7;
  v77 = (void (*)(char *, uint64_t))v25;
  v29 = v88;
  v30 = *(uint64_t *)((char *)v29 + *(_QWORD *)(*v29 + 128));
  v31 = v24;
  v93 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v15, AssociatedConformanceWitness);
  v94 = v32;
  v33 = v87;
  MEMORY[0x1AF411C8C](&v93, v30, MEMORY[0x1E0DEA968], v7, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v33, 1, v7) == 1)
  {
    v34 = v31;
    v35 = v15;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v33, v82);
    v36 = (void (*)(char *, uint64_t, uint64_t))v89;
LABEL_6:
    v46 = (uint64_t)v90;
    v36(v90, v34, v35);
    sub_1A93A2CF8(v46);
    result = sub_1A93A30B0();
LABEL_7:
    v47 = 1;
    goto LABEL_8;
  }
  v37 = v7;
  v38 = v86;
  (*(void (**)(void))(v10 + 32))();
  v39 = *v29;
  v40 = v29;
  v41 = (uint64_t)v29 + *(_QWORD *)(*v29 + 112);
  swift_beginAccess();
  v42 = *(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v39 + 80) - 8) + 16);
  v35 = v27;
  v43 = v90;
  v42(v90, v41);
  v34 = v31;
  LOBYTE(v41) = (*(uint64_t (**)(char *, char *, uint64_t))(v80 + 24))(v43, (char *)v31, v37);
  v44 = v43;
  v45 = v35;
  v77(v44, v35);
  v36 = (void (*)(char *, uint64_t, uint64_t))v89;
  if ((v41 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v38, v37);
    goto LABEL_6;
  }
  v48 = v38;
  if (qword_1ED2A42A8 != -1)
    swift_once();
  v49 = v79;
  v50 = __swift_project_value_buffer(v79, (uint64_t)qword_1ED2A4290);
  swift_beginAccess();
  v51 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v78, v50, v49);
  v89(v83, (char *)v34, v45);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v84, v48, v37);
  swift_retain_n();
  v52 = sub_1A93F7674();
  v53 = sub_1A93F8790();
  LODWORD(v87) = v53;
  if (os_log_type_enabled(v52, v53))
  {
    v54 = swift_slowAlloc();
    v81 = v37;
    v55 = v54;
    v82 = swift_slowAlloc();
    v96 = v82;
    *(_DWORD *)v55 = 136315906;
    v56 = v40[3];
    v57 = *((_BYTE *)v40 + 32);
    v93 = v40[2];
    v94 = v56;
    v95 = v57;
    sub_1A9086E60(v93, v56, v57);
    v58 = sub_1A93F8094();
    v93 = sub_1A906436C(v58, v59, &v96);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2080;
    v60 = *v40;
    v61 = (uint64_t)v40 + *(_QWORD *)(*v40 + 112);
    swift_beginAccess();
    v62 = *(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v60 + 80) - 8) + 16);
    v80 = v10;
    v63 = v45;
    v64 = v90;
    v62(v90, v61);
    v65 = sub_1A93F8094();
    DynamicType = sub_1A906436C(v65, v66, &v96);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 22) = 2080;
    v67 = v83;
    v89(v64, v83, v63);
    v68 = sub_1A93F8094();
    DynamicType = sub_1A906436C(v68, v69, &v96);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    v77(v67, v63);
    *(_WORD *)(v55 + 32) = 2080;
    v70 = v84;
    v71 = v81;
    DynamicType = swift_getDynamicType();
    swift_getMetatypeMetadata();
    v72 = sub_1A93F8094();
    DynamicType = sub_1A906436C(v72, v73, &v96);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    v74 = *(void (**)(char *, uint64_t))(v80 + 8);
    v74(v70, v71);
    _os_log_impl(&dword_1A904E000, v52, (os_log_type_t)v87, "Denied state change for %s: %s -> %s, rule: %s", (uint8_t *)v55, 0x2Au);
    v75 = v82;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v75, -1, -1);
    MEMORY[0x1AF41411C](v55, -1, -1);

    (*(void (**)(char *, uint64_t))(v85 + 8))(v78, v79);
    result = ((uint64_t (*)(char *, uint64_t))v74)(v86, v71);
  }
  else
  {

    v76 = *(void (**)(char *, uint64_t))(v10 + 8);
    v76(v84, v37);
    v77(v83, v45);
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v51, v49);
    result = ((uint64_t (*)(char *, uint64_t))v76)(v48, v37);
  }
  v47 = 0;
LABEL_8:
  *v91 = v47;
  return result;
}

uint64_t sub_1A9087E78@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 112);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t EpisodeStateMachine.__allocating_init(identifier:initialState:rules:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  char v9;
  uint64_t v10;

  v9 = a3 & 1;
  v10 = swift_allocObject();
  EpisodeStateMachine.init(identifier:initialState:rules:)(a1, a2, v9, a4, a5);
  return v10;
}

uint64_t EpisodeStateMachine.init(identifier:initialState:rules:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = *(_QWORD *)(*(_QWORD *)v5 + 120);
  v12 = *(_QWORD *)(*(_QWORD *)v5 + 80);
  type metadata accessor for StateMachineChangeObserverAction(0, v12, *(_QWORD *)(*(_QWORD *)v5 + 88), *(_QWORD *)(*(_QWORD *)v5 + 96));
  *(_QWORD *)(v5 + v11) = sub_1A93F8370();
  v13 = *(_QWORD *)(*(_QWORD *)v5 + 136);
  *(_QWORD *)(v5 + v13) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38E0]), sel_init);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_BYTE *)(v5 + 32) = a3 & 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 112), a4, v12);
  *(_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 128)) = a5;
  return v5;
}

uint64_t type metadata accessor for StateMachineChangeObserverAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateMachineChangeObserverAction);
}

void sub_1A9088024(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = -64;
}

uint64_t sub_1A9088034@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 112);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_1A90880A0()
{
  uint64_t *v0;

  return sub_1A90880BC(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1A90880BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(*(_QWORD *)a4 + 80);
  v7 = *(_QWORD *)(*(_QWORD *)a4 + 88);
  v8 = *(_QWORD *)(*(_QWORD *)a4 + 96);
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  v14 = a2;
  v15 = a3;
  v9 = type metadata accessor for StateMachineChangeObserverAction(0, v6, v7, v8);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v12, v13, v9);
  swift_beginAccess();
  sub_1A93F83D0();
  sub_1A93F83AC();
  swift_endAccess();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
}

__n128 initializeWithTake for StateMachineChangeObserverAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;

  v3 = swift_unknownObjectWeakTakeInit();
  result = *(__n128 *)(a2 + 8);
  *(__n128 *)(v3 + 8) = result;
  return result;
}

uint64_t destroy for StateMachineChangeObserverAction()
{
  swift_unknownObjectWeakDestroy();
  return swift_release();
}

uint64_t initializeWithCopy for StateMachineChangeObserverAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_unknownObjectWeakCopyInit();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain();
  return a1;
}

void _s18PodcastsFoundation20EpisodeDownloadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A9088290()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  if (v0 >= 0x40)
  {
    swift_bridgeObjectRetain();
    sub_1A908850C(v2, v1, v0);
    sub_1A9086E7C(v5, v4, v3);
    sub_1A9086E7C(v2, v1, v0);
    v7 = 0;
  }
  else
  {
    if (v5 == v2 && v4 == v1)
      v7 = 1;
    else
      v7 = sub_1A93F90C0();
    sub_1A908850C(v2, v1, v0);
    sub_1A908850C(v5, v4, v3);
    sub_1A9086E7C(v5, v4, v3);
    sub_1A9086E7C(v2, v1, v0);
  }
  return v7 & 1;
}

uint64_t _s18PodcastsFoundation20EpisodeDownloadStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  sub_1A908850C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_1A908850C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t result;

  if (((a3 >> 6) & 1 | 2) == 2)
    return swift_bridgeObjectRetain();
  return result;
}

BOOL sub_1A9088528(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_1A9088540(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1A908854C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A908855C()
{
  id v0;

  if (qword_1ED2A42C0 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (id)qword_1ED2A42B0;
  swift_retain();
  return sub_1A93F75CC();
}

void sub_1A90885F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _QWORD v19[5];

  v0 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1E0C80A78](v0);
  v19[3] = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v19[4] = (char *)v19 - v3;
  MEMORY[0x1E0C80A78](v4);
  v19[2] = (char *)v19 - v5;
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v19[1] = (char *)v19 - v8;
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v19 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v19 - v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4480);
  *(_OWORD *)(swift_initStackObject() + 16) = xmmword_1A940BE60;
  swift_storeEnumTagMultiPayload();
  sub_1A90891E4((uint64_t)v17, (uint64_t)v14);
  v18 = (char *)sub_1A90887E4 + 4 * byte_1A94266D0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_1A90887E4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  int EnumCaseMultiPayload;

  sub_1A9089264(v0);
  v1[4] = 0x676E69646E6570;
  v1[5] = 0xE700000000000000;
  v1[6] = sub_1A93BFF44;
  v1[7] = 0;
  *v2 = 0;
  v2[1] = 0;
  swift_storeEnumTagMultiPayload();
  sub_1A90891E4((uint64_t)v2, v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((unint64_t (*)())((char *)sub_1A90888D8 + 4 * byte_1A94266D6[EnumCaseMultiPayload]))();
}

unint64_t sub_1A90888D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;

  sub_1A9089264(v3);
  v0[8] = 0x676E69646E6570;
  v0[9] = 0xE700000000000000;
  v0[10] = sub_1A93BFF48;
  v0[11] = 0;
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30) + 48);
  v5 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v1, 1, 1, v5);
  *(_BYTE *)(v1 + v4) = 0;
  swift_storeEnumTagMultiPayload();
  sub_1A90891E4(v1, v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((unint64_t (*)())((char *)sub_1A90889F0 + 4 * byte_1A94266DC[EnumCaseMultiPayload]))();
}

unint64_t sub_1A90889F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;

  sub_1A9089264(v2);
  v0[12] = 0x676E69646E6570;
  v0[13] = 0xE700000000000000;
  v0[14] = sub_1A93BFF4C;
  v0[15] = 0;
  *(_QWORD *)v1 = 0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_DWORD *)(v1 + 15) = 0;
  swift_storeEnumTagMultiPayload();
  sub_1A90891E4(v1, *(_QWORD *)(v3 - 304));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((unint64_t (*)())((char *)sub_1A9088AE0 + 4 * byte_1A94266E2[EnumCaseMultiPayload]))();
}

unint64_t sub_1A9088AE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;

  sub_1A9089264(v1);
  v0[16] = 0x676E69646E6570;
  v0[17] = 0xE700000000000000;
  v0[18] = sub_1A93BFF50;
  v0[19] = 0;
  v4 = *(_QWORD *)(v3 - 288);
  swift_storeEnumTagMultiPayload();
  sub_1A90891E4(v4, v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((unint64_t (*)())((char *)sub_1A9088BC8 + 4 * byte_1A94266E8[EnumCaseMultiPayload]))();
}

unint64_t sub_1A9088BC8()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t result;

  sub_1A9089264(v1);
  v0[20] = 0x676E69646E6570;
  v0[21] = 0xE700000000000000;
  v0[22] = sub_1A9123748;
  v0[23] = 0;
  result = sub_1A90C1B88((uint64_t)v0);
  qword_1ED2A3AB8 = result;
  return result;
}

void _s18PodcastsFoundation16EpisodePlayStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  _QWORD v20[5];
  uint64_t v21;

  v21 = sub_1A93F738C();
  v20[3] = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v20[0] = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C70);
  MEMORY[0x1E0C80A78](v5);
  v20[4] = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v7);
  v20[1] = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v20[2] = (char *)v20 - v10;
  v11 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A2240);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v20 + *(int *)(v17 + 48) - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90891E4(a1, (uint64_t)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A90891E4(a2, (uint64_t)v18);
  v19 = (char *)sub_1A9088E94 + 4 * byte_1A940BA32[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_1A9088E94()
{
  uint64_t v0;
  double *v1;
  double *v2;
  double v3;
  _BOOL8 v4;

  sub_1A90891E4(v0, (uint64_t)v1);
  v3 = v1[1];
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1A905FD54(v0, &qword_1ED2A2240);
    return 0;
  }
  if (*v1 != *v2)
  {
    sub_1A9089264(v0);
    return 0;
  }
  v4 = v3 == v2[1];
  sub_1A9089264(v0);
  return v4;
}

uint64_t sub_1A90891E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodePlayState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for EpisodePlayState()
{
  uint64_t result;

  result = qword_1ED2AC850;
  if (!qword_1ED2AC850)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A9089264(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EpisodePlayState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A90892A0(void *a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  a1;
  sub_1A9089B64();
}

void sub_1A90892D0()
{
  void *v0;
  void *v1;

}

uint64_t sub_1A90892EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v3 = *(void **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A9089390(v3, v4, v5, v6, (uint64_t)&v10);
    result = swift_release();
    v8 = v10;
    v9 = v11;
  }
  else
  {
    v9 = 0;
    v8 = 0uLL;
  }
  *(_OWORD *)a2 = v8;
  *(_QWORD *)(a2 + 16) = v9;
  return result;
}

uint64_t sub_1A9089390@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  __int128 v18;
  _QWORD aBlock[6];
  __int128 v20;
  uint64_t v21;

  v8 = qword_1ED2A2888;
  v9 = a1;
  if (v8 != -1)
    swift_once();
  v20 = xmmword_1ED2A2868;
  v21 = qword_1ED2A2878;
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v10;
  v11[3] = v9;
  v11[4] = a2;
  v11[5] = a3;
  v11[6] = a4;
  v11[7] = v9;
  v11[8] = &v20;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1A909BA04;
  *(_QWORD *)(v12 + 24) = v11;
  aBlock[4] = sub_1A91D7850;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_16_1;
  v13 = _Block_copy(aBlock);
  v14 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performBlockAndWait_, v13);

  _Block_release(v13);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v13 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v16 = v21;
    v18 = v20;
    result = swift_release();
    *(_OWORD *)a5 = v18;
    *(_QWORD *)(a5 + 16) = v16;
  }
  return result;
}

uint64_t sub_1A90895B0()
{
  sub_1A90895D4();
  return swift_deallocClassInstance();
}

uint64_t sub_1A90895D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A9068AD8(*(void **)(v0 + 16), *(id *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  sub_1A9091230(v0 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_request);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ingesterProvider);

  v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_signpostID;
  v2 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1A90896B4(uint64_t a1, uint64_t a2)
{
  return sub_1A90896CC(a1, a2);
}

uint64_t sub_1A90896CC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A9090A8C(a1, a2);
    return swift_release();
  }
  return result;
}

void FetchedResultsListPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  if (a7 >= 100)
    a7 = 100;
  sub_1A9089794(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1A908977C()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = *(_QWORD *)(v1 - 24);
}

void sub_1A9089794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  id v9;
  id v10;
  void *v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4180);
  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v10 = sub_1A9089944();
  objc_msgSend(v10, sel_setPredicate_, a5);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v11 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setSortDescriptors_, v11);

  objc_msgSend(v10, sel_setFetchBatchSize_, a7);
  type metadata accessor for FetchedResultsPublisherImplementation();
}

uint64_t sub_1A90898B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v5;
  swift_allocObject();
  *((_QWORD *)&v8 + 1) = sub_1A905920C;
  *(_QWORD *)&v8 = v1;
  result = sub_1A90899A4(v4, v12, v0, v13, v11, v10, v9, v3, v8, v6);
  *v14 = result;
  return result;
}

id sub_1A9089944()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void type metadata accessor for FetchedResultsPublisherImplementation()
{
  JUMPOUT(0x1AF413F6CLL);
}

uint64_t sub_1A90899A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v19;

  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(_QWORD *)(v10 + 112) = v19;
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)(v10 + 48) = a5;
  *(_QWORD *)(v10 + 56) = a6;
  *(_QWORD *)(v10 + 64) = a7;
  *(_QWORD *)(v10 + 72) = a8;
  *(_OWORD *)(v10 + 80) = a9;
  *(_QWORD *)(v10 + 96) = a10;
  return v10;
}

void sub_1A9089A5C(void *a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  a1;
  sub_1A9089AA8();
}

void sub_1A9089A8C()
{
  void *v0;
  void *v1;

}

void sub_1A9089AA8()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC900);
  MEMORY[0x1E0C80A78](v0);
  sub_1A908A078();
}

uint64_t sub_1A9089B10()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A90989F4();
  v1 = sub_1A93F75FC();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v0, 0, 1, v1);
  return sub_1A9089FD8(v0);
}

void sub_1A9089B64()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[16];
  __int128 v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC900);
  v3 = MEMORY[0x1E0C80A78](v2);
  v17 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v3);
  v20 = sub_1A93F75FC();
  v19 = *(_QWORD *)(v20 - 8);
  v5 = *(_QWORD *)(v19 + 64);
  v6 = MEMORY[0x1E0C80A78](v20);
  v16 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v18 = &v14[-v7];
  swift_allocObject();
  v8 = (char *)v0 + qword_1EEABE8F8;
  swift_beginAccess();
  v9 = v8[56];
  v21 = *(_QWORD *)v8;
  v15 = *(_OWORD *)(v8 + 8);
  v22 = v15;
  v23 = *(_OWORD *)(v8 + 24);
  v24 = *(_OWORD *)(v8 + 40);
  v25 = v9;
  v10 = v1[10];
  v11 = v1[11];
  v13 = v1[12];
  v12 = v1[13];
  v26 = v10;
  v27 = v11;
  v28 = v13;
  v29 = v12;
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Update();
}

uint64_t sub_1A9089CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;

  v8 = sub_1A93F8A90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 - 272, v7 - 336, v8);
  if (!*(_QWORD *)(v7 - 272))
    return swift_deallocUninitializedObject();
  v9 = *(_OWORD *)(v7 - 256);
  v3[1] = *(_OWORD *)(v7 - 272);
  v3[2] = v9;
  v3[3] = *(_OWORD *)(v7 - 240);
  *(_OWORD *)((char *)v3 + 57) = *(_OWORD *)(v7 - 231);
  v10 = v1 + qword_1ED2A3BE0;
  swift_beginAccess();
  sub_1A9066554(v10, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 - 352) + 48))(v6, 1, *(_QWORD *)(v7 - 344)) != 1)
  {
    v11 = *(_QWORD *)(v7 - 352);
    v12 = *(void (**)(void))(v11 + 32);
    *(_QWORD *)(v7 - 408) = v12;
    v13 = v11;
    v14 = *(_QWORD *)(v7 - 360);
    *(_QWORD *)(v7 - 416) = v0;
    v15 = v14;
    v12();
    *(_QWORD *)(v7 - 400) = *(_QWORD *)(v1 + qword_1EEABE8B0);
    v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v17 = v13;
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    v19 = *(_QWORD *)(v7 - 376);
    v20 = v15;
    v21 = *(_QWORD *)(v7 - 344);
    v18(v19, v20, v21);
    v22 = (*(unsigned __int8 *)(v17 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v23 = (char *)swift_allocObject();
    *((_QWORD *)v23 + 2) = v4;
    *((_QWORD *)v23 + 3) = v5;
    v24 = *(_QWORD *)(v7 - 416);
    *((_QWORD *)v23 + 4) = v2;
    *((_QWORD *)v23 + 5) = v24;
    *((_QWORD *)v23 + 6) = v16;
    *((_QWORD *)v23 + 7) = v3;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 - 408))(&v23[v22], v19, v21);
    *(_QWORD *)(v7 - 176) = sub_1A909B890;
    *(_QWORD *)(v7 - 168) = v23;
    *(_QWORD *)(v7 - 208) = MEMORY[0x1E0C809B0];
    *(_QWORD *)(v7 - 200) = 1107296256;
    *(_QWORD *)(v7 - 192) = sub_1A908A91C;
    *(_QWORD *)(v7 - 184) = &block_descriptor_45_2;
    v25 = _Block_copy((const void *)(v7 - 208));
    sub_1A908A18C((uint64_t *)(v7 - 336));
    swift_retain();
    swift_release();
    objc_msgSend(*(id *)(v7 - 400), sel_performBlock_, v25);
    _Block_release(v25);
    *(_OWORD *)(v7 - 167) = 0u;
    *(_OWORD *)(v7 - 192) = 0u;
    *(_OWORD *)(v7 - 176) = 0u;
    *(_OWORD *)(v7 - 208) = 0u;
    sub_1A908A078();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A905FD54(v6, &qword_1ED2AC900);
  return swift_release();
}

uint64_t sub_1A9089FD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_1ED2A3BE0;
  swift_beginAccess();
  sub_1A908A030(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1A908A030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1A908A078()
{
  swift_beginAccess();
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Update();
}

uint64_t sub_1A908A0F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = sub_1A93F8A90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v4, v2);
  return sub_1A908A160(v1);
}

uint64_t sub_1A908A160(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_1A908A18C(uint64_t *a1)
{
  sub_1A908A1C4(*a1);
  return a1;
}

uint64_t sub_1A908A1C4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1A908A1F0(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_1A93F8E8C();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_1A9094640(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1A908A304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v6 = sub_1A93F7E18();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v3 + 16);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v11 = v10;
  LOBYTE(v10) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    if (*(_QWORD *)(a1 + 16))
    {
      v12 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 24) + 16);
      os_unfair_lock_lock(v12);
      sub_1A914CCCC(&v20);
      v13 = v20;
      v14 = v21;
      os_unfair_lock_unlock(v12);
      if (v13)
      {
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a1, ObjectType, v14);
        swift_unknownObjectRelease();
      }
    }
    if (*(_QWORD *)(a2 + 16))
    {
      v16 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 24) + 16);
      os_unfair_lock_lock(v16);
      sub_1A914CCCC(&v20);
      v17 = v20;
      v18 = v21;
      os_unfair_lock_unlock(v16);
      if (v17)
      {
        v19 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 8))(a2, v19, v18);
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1A908A48C(uint64_t a1)
{
  return sub_1A9113768(a1, &qword_1ED2A4360, &qword_1ED2A40D0, (uint64_t (*)(uint64_t *, unint64_t))sub_1A905D4AC);
}

unint64_t sub_1A908A4A8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9680);
  v2 = sub_1A93F8E8C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A9062170(v6, (uint64_t)&v15, &qword_1ED2A92E8);
    v7 = v15;
    v8 = v16;
    result = sub_1A9094640(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1A908A5DC(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_OWORD *sub_1A908A5DC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1A908A5EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for FRPSectionInfo(255, a1, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB438]);
  v3 = sub_1A93F83D0();
  v6 = type metadata accessor for FRPOutput(0, v3, v4, v5);
  v7 = sub_1A93F83D0();
  return FRPOutput.map<A>(_:)((uint64_t)sub_1A908A75C, v6, v7, a2);
}

uint64_t FRPOutput.map<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t, double);
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v5 = v4;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13(v4, v10);
  v14 = *(_BYTE *)(v4 + *(int *)(a2 + 28));
  v15 = *(_QWORD *)(v5 + *(int *)(a2 + 32));
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4, v12, a3);
  result = type metadata accessor for FRPOutput(0, a3, v16, v17);
  *(_BYTE *)(a4 + *(int *)(result + 28)) = v14;
  *(_QWORD *)(a4 + *(int *)(result + 32)) = v15;
  return result;
}

uint64_t sub_1A908A75C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A908A768(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1A908A768@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  type metadata accessor for FRPSectionInfo(255, a1, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB438]);
  v3 = sub_1A93F83D0();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v3);
  sub_1A93F86DC();
  result = v5;
  if (!v5)
    result = sub_1A93F8370();
  *a2 = result;
  return result;
}

unint64_t sub_1A908A800(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_1A93F8E8C();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v6 = *(v5 - 3);
    v7 = *(v5 - 2);
    v9 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_1A9094640(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    v13 = (_QWORD *)(v3[7] + 16 * result);
    *v13 = v9;
    v13[1] = v8;
    v14 = v3[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v3[2] = v16;
    v5 += 4;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A908A91C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_1A908A948()
{
  uint64_t v0;

  sub_1A906817C((__int128 *)(v0 + 24));
}

uint64_t sub_1A908A970()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(sub_1A93F73E0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1A908ACCC(*(_QWORD **)(v0 + 48), v0 + v2, *(void (**)(uint64_t *))v3, *(_QWORD *)(v3 + 8));
}

uint64_t sub_1A908A9B8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t result;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t FunctionTypeMetadata1;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  char v32;
  int64_t v33;
  unint64_t v34;
  unint64_t v35;
  void (*v36)(uint64_t *);
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  v1 = *v0;
  v2 = *MEMORY[0x1E0DEEDD8];
  v3 = sub_1A93F7E18();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)((char *)v0 + qword_1EEABE8B8);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x1E0DEF740], v3, v5);
  v9 = v8;
  LOBYTE(v8) = sub_1A93F7E3C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v8 & 1) == 0)
    goto LABEL_26;
  v11 = (char *)v0 + qword_1EEABE8F0;
  v12 = *(uint64_t *)((char *)v0 + qword_1EEABE8F0);
  if (v12)
  {
    v13 = (uint64_t *)(v2 & v1);
    v14 = *((_QWORD *)v11 + 2);
    v15 = v11[8];
    v16 = (uint64_t *)((char *)v0 + qword_1EEABE8E8);
    swift_beginAccess();
    v17 = *v16;
    v18 = sub_1A93F73E0();
    v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    type metadata accessor for FRPSectionInfo(255, v13[10], v13[11], v13[13]);
    v20 = sub_1A93F83D0();
    type metadata accessor for FRPOutput(255, v20, v21, v22);
    FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
    v24 = sub_1A9066CA8((unint64_t *)&qword_1ED2A1F40, v19, MEMORY[0x1E0CB09C8]);
    v25 = nullsub_1(v17, v18, FunctionTypeMetadata1, v24);
    v26 = v25;
    v27 = v25 + 64;
    v28 = 1 << *(_BYTE *)(v25 + 32);
    v29 = -1;
    if (v28 < 64)
      v29 = ~(-1 << v28);
    v30 = v29 & *(_QWORD *)(v25 + 64);
    v31 = (unint64_t)(v28 + 63) >> 6;
    v32 = v15 & 1;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v33 = 0;
    while (1)
    {
      if (v30)
      {
        v34 = __clz(__rbit64(v30));
        v30 &= v30 - 1;
        v35 = v34 | (v33 << 6);
      }
      else
      {
        v37 = v33 + 1;
        if (__OFADD__(v33, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
        if (v37 >= v31)
          goto LABEL_23;
        v38 = *(_QWORD *)(v27 + 8 * v37);
        ++v33;
        if (!v38)
        {
          v33 = v37 + 1;
          if (v37 + 1 >= v31)
            goto LABEL_23;
          v38 = *(_QWORD *)(v27 + 8 * v33);
          if (!v38)
          {
            v33 = v37 + 2;
            if (v37 + 2 >= v31)
              goto LABEL_23;
            v38 = *(_QWORD *)(v27 + 8 * v33);
            if (!v38)
            {
              v39 = v37 + 3;
              if (v39 >= v31)
              {
LABEL_23:
                swift_release();
                return swift_bridgeObjectRelease();
              }
              v38 = *(_QWORD *)(v27 + 8 * v39);
              if (!v38)
              {
                while (1)
                {
                  v33 = v39 + 1;
                  if (__OFADD__(v39, 1))
                    break;
                  if (v33 >= v31)
                    goto LABEL_23;
                  v38 = *(_QWORD *)(v27 + 8 * v33);
                  ++v39;
                  if (v38)
                    goto LABEL_22;
                }
LABEL_25:
                __break(1u);
LABEL_26:
                __break(1u);
                break;
              }
              v33 = v39;
            }
          }
        }
LABEL_22:
        v30 = (v38 - 1) & v38;
        v35 = __clz(__rbit64(v38)) + (v33 << 6);
      }
      v36 = *(void (**)(uint64_t *))(*(_QWORD *)(v26 + 56) + 16 * v35);
      v40 = v12;
      v41 = v32;
      v42 = v14;
      swift_retain();
      v36(&v40);
      result = swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A908ACA8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_1A908ACCC(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  double v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t (*v30)();
  _QWORD *v31;

  v8 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *a1);
  v9 = sub_1A93F73E0();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v11 = MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9, v11);
  v14 = (_QWORD *)swift_allocObject();
  v15 = v8[10];
  v14[2] = v15;
  v16 = v8[11];
  v14[3] = v16;
  v14[4] = v8[12];
  v17 = v8[13];
  v14[5] = v17;
  v14[6] = a3;
  v14[7] = a4;
  v30 = sub_1A908ACA8;
  v31 = v14;
  swift_beginAccess();
  type metadata accessor for FRPSectionInfo(255, v15, v16, v17);
  v18 = sub_1A93F83D0();
  type metadata accessor for FRPOutput(255, v18, v19, v20);
  swift_getFunctionTypeMetadata1();
  sub_1A9066CA8((unint64_t *)&qword_1ED2A1F40, v10, MEMORY[0x1E0CB09C8]);
  sub_1A93F7F5C();
  swift_retain();
  sub_1A93F7F80();
  swift_endAccess();
  v21 = (char *)a1 + qword_1EEABE8F0;
  v22 = *(_QWORD *)((char *)a1 + qword_1EEABE8F0);
  v23 = *((_QWORD *)v21 + 1);
  v24 = *((_QWORD *)v21 + 2);
  result = swift_bridgeObjectRetain();
  if (v22)
  {
    v27 = v22;
    v28 = v23 & 1;
    v29 = v24;
    a3(&v27);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for FRPOutput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FRPOutput);
}

uint64_t sub_1A908AED8()
{
  uint64_t v0;

  return sub_1A908AEF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1A908AF60);
}

uint64_t sub_1A908AEF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;

  sub_1A93F79BC();
  LOBYTE(a3) = a3(a1);
  result = swift_bridgeObjectRelease();
  if ((a3 & 1) == 0)
    return sub_1A93F79B0();
  return result;
}

uint64_t sub_1A908AF60(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v30)
            return 1;
          v11 = *(_QWORD *)(v29 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_1A93F92DC();
    swift_bridgeObjectRetain();
    sub_1A93F7FBC();
    v18 = sub_1A93F9324();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_41;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1A93F90C0() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1A93F90C0() & 1) != 0)
          goto LABEL_7;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 5;
  if (v3 + 5 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
  return result;
}

void sub_1A908B200()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1A93F726C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A908B260(*(_QWORD *)(v0 + 16), v0 + v2, *(void **)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

void sub_1A908B260(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a6;
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A93F7170();
  v16 = sub_1A908BA5C(v14, v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    sub_1A908B4F0(a3, a4, a5, v29);
    swift_release();
  }
  else
  {
    v17 = v10;
    if (qword_1ED2A4890 != -1)
      swift_once();
    v18 = sub_1A93F7698();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED2A87A8);
    v19 = v11;
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v21 = v13;
    v20(v13, a2, v17);
    v22 = sub_1A93F7674();
    v23 = sub_1A93F879C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      *(_DWORD *)v24 = 141558275;
      v30 = 1752392040;
      v31 = v25;
      sub_1A93F8AA8();
      *(_WORD *)(v24 + 12) = 2081;
      v26 = sub_1A93F7170();
      v30 = sub_1A906436C(v26, v27, &v31);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v17);
      _os_log_impl(&dword_1A904E000, v22, v23, "Got a feed downloaded completion but the job does not exist in the queue for feedUrl: %{private,mask.hash}s. Cannot continue.", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v25, -1, -1);
      MEMORY[0x1AF41411C](v24, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v17);
    }

  }
}

void sub_1A908B4F0(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v21;
  _BYTE *v22;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  _QWORD *v32;
  void *v33;
  __int128 aBlock;
  uint64_t (*v35)(uint64_t);
  void *v36;
  void (*v37)();
  _QWORD *v38;

  v5 = v4;
  if (a1)
  {
    v8 = a1;
    if (qword_1ED2A4890 != -1)
      swift_once();
    v9 = sub_1A93F7698();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A87A8);
    v10 = a1;
    swift_retain();
    v11 = a1;
    swift_retain();
    v12 = sub_1A93F7674();
    v13 = sub_1A93F879C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      *(_DWORD *)v14 = 141558531;
      *(_QWORD *)&aBlock = v15;
      sub_1A93F8AA8();
      *(_WORD *)(v14 + 12) = 2081;
      type metadata accessor for FeedUpdateRequest();
      v16 = sub_1A93F7170();
      sub_1A906436C(v16, v17, (uint64_t *)&aBlock);
      sub_1A93F8AA8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 22) = 2080;
      swift_getErrorValue();
      v18 = sub_1A93F927C();
      sub_1A906436C(v18, v19, (uint64_t *)&aBlock);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v12, v13, "Job %{private,mask.hash}s: Error downloading feed: %s", (uint8_t *)v14, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v15, -1, -1);
      MEMORY[0x1AF41411C](v14, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    *(_QWORD *)&aBlock = a1;
    *((_QWORD *)&aBlock + 1) = a4;
    v35 = 0;
    v36 = 0;
    LOBYTE(v37) = 96;
    sub_1A9067F64(&aBlock);

  }
  else if (a3 >> 60 == 15)
  {
    sub_1A9069320();
    v21 = (void *)swift_allocError();
    *v22 = 9;
    *(_QWORD *)&aBlock = v21;
    *((_QWORD *)&aBlock + 1) = a4;
    v35 = 0;
    v36 = 0;
    LOBYTE(v37) = 96;
    sub_1A9067F64(&aBlock);

  }
  else
  {
    sub_1A90D8068(a2, a3);
    if (qword_1ED2A4890 != -1)
      swift_once();
    v24 = sub_1A93F7698();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED2A87A8);
    swift_retain_n();
    v25 = sub_1A93F7674();
    v26 = sub_1A93F87B4();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      *(_DWORD *)v27 = 141558275;
      *(_QWORD *)&aBlock = v28;
      sub_1A93F8AA8();
      *(_WORD *)(v27 + 12) = 2081;
      type metadata accessor for FeedUpdateRequest();
      v29 = sub_1A93F7170();
      sub_1A906436C(v29, v30, (uint64_t *)&aBlock);
      sub_1A93F8AA8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v25, v26, "Job %{private,mask.hash}s: Successfully downloaded feed.", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v28, -1, -1);
      MEMORY[0x1AF41411C](v27, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v31 = *(void **)(v4 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
    v32 = (_QWORD *)swift_allocObject();
    v32[2] = v5;
    v32[3] = a2;
    v32[4] = a3;
    v37 = sub_1A9236848;
    v38 = v32;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v35 = sub_1A908A91C;
    v36 = &block_descriptor_22_3;
    v33 = _Block_copy(&aBlock);
    swift_retain();
    sub_1A906A3DC(a2, a3);
    swift_release();
    objc_msgSend(v31, sel_performBlock_, v33);
    _Block_release(v33);
    sub_1A9069F9C(a2, a3);
  }
}

uint64_t sub_1A908BA5C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = sub_1A93F7E18();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v2 + 96);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v10 = v9;
  LOBYTE(v9) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_7;
  }
  swift_beginAccess();
  v11 = *(_QWORD *)(v2 + 112);
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1A9094640(a1, a2);
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v12);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1ED2A4890 != -1)
    goto LABEL_13;
LABEL_7:
  v15 = sub_1A93F7698();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED2A87A8);
  swift_bridgeObjectRetain_n();
  v16 = sub_1A93F7674();
  v17 = sub_1A93F879C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    *(_DWORD *)v18 = 141558275;
    v22 = 1752392040;
    v23 = v19;
    sub_1A93F8AA8();
    *(_WORD *)(v18 + 12) = 2081;
    swift_bridgeObjectRetain();
    v22 = sub_1A906436C(a1, a2, &v23);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v16, v17, "Job does not exist in the queue: %{private,mask.hash}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v19, -1, -1);
    MEMORY[0x1AF41411C](v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t sub_1A908BD18()
{
  uint64_t v0;

  return sub_1A908BD20(v0);
}

uint64_t sub_1A908BD20(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 264);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  if (!*(_BYTE *)(v1 + 16))
    *(_BYTE *)(v1 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 20));
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9110);
  sub_1A9066D74(&qword_1ED2A9100, &qword_1ED2A9110, MEMORY[0x1E0C95F40]);
  sub_1A93F7AA0();
  swift_release();
  swift_retain();
  sub_1A93F7AA0();
  return swift_release();
}

void sub_1A908BDD8()
{
  uint64_t v0;

  sub_1A908BDE8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

void sub_1A908BDE8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD **v14;
  _QWORD *v15;
  id v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;

  v7 = a1 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1AF41420C](v7);
  if (v8)
  {
    v9 = (_BYTE *)v8;
    if ((*(_BYTE *)(v8 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__timeoutScheduled) & 1) == 0)
    {
      if (qword_1ED2A7EA8 != -1)
        swift_once();
      v10 = sub_1A93F7698();
      __swift_project_value_buffer(v10, (uint64_t)qword_1ED2B89B0);
      v11 = sub_1A93F7674();
      v12 = sub_1A93F879C();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_1A904E000, v11, v12, "Launch task deferred without deferral timer. The task may never run.", v13, 2u);
        MEMORY[0x1AF41411C](v13, -1, -1);
      }

    }
    if (v9[OBJC_IVAR___PFDeferredLaunchTaskCoordinator__deferring] == 1)
    {
      v14 = (_QWORD **)&v9[OBJC_IVAR___PFDeferredLaunchTaskCoordinator__tasks];
      swift_beginAccess();
      v15 = *v14;
      swift_retain();
      v16 = a4;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v14 = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v15 = sub_1A90BF3DC(0, v15[2] + 1, 1, v15);
        *v14 = v15;
      }
      v19 = v15[2];
      v18 = v15[3];
      if (v19 >= v18 >> 1)
      {
        v15 = sub_1A90BF3DC((_QWORD *)(v18 > 1), v19 + 1, 1, v15);
        *v14 = v15;
      }
      v15[2] = v19 + 1;
      v20 = &v15[3 * v19];
      v20[4] = a2;
      v20[5] = a3;
      v20[6] = v16;
      swift_endAccess();
    }
    else
    {
      if (qword_1ED2A7EA8 != -1)
        swift_once();
      v21 = sub_1A93F7698();
      __swift_project_value_buffer(v21, (uint64_t)qword_1ED2B89B0);
      v22 = sub_1A93F7674();
      v23 = sub_1A93F8784();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_1A904E000, v22, v23, "Task deferred after launch tasks have already started. Scheduling it immediately.", v24, 2u);
        MEMORY[0x1AF41411C](v24, -1, -1);
      }

      sub_1A908C228(a2, a3, a4);
    }

  }
}

void sub_1A908C0A0()
{
  uint64_t v0;

  sub_1A908C0AC(*(void (**)(void))(v0 + 16));
}

void sub_1A908C0AC(void (*a1)(void))
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  os_log_type_t v6;
  uint8_t *v7;
  NSObject *oslog;

  if (qword_1ED2A7EA8 != -1)
    swift_once();
  v2 = sub_1A93F7698();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED2B89B0);
  v3 = sub_1A93F7674();
  v4 = sub_1A93F8790();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1A904E000, v3, v4, "Starting task.", v5, 2u);
    MEMORY[0x1AF41411C](v5, -1, -1);
  }

  a1();
  oslog = sub_1A93F7674();
  v6 = sub_1A93F8790();
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1A904E000, oslog, v6, "Finishing task.", v7, 2u);
    MEMORY[0x1AF41411C](v7, -1, -1);
  }

}

uint64_t sub_1A908C20C()
{
  uint64_t v0;

  return sub_1A908C220(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A908C214()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1A908C220(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_1A908C228(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  ObjectType = swift_getObjectType();
  v7 = sub_1A93F7D58();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v18[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F7DB8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = ObjectType;
  aBlock[4] = sub_1A908C0A0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_30_1;
  v16 = _Block_copy(aBlock);
  swift_retain();
  a3;
  sub_1A93F7D88();
  v18[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v8, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v18[0] + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_1A908C430()
{
  uint64_t v0;

  return sub_1A908C438(v0);
}

uint64_t sub_1A908C438(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1AF41420C](v1);
  if (result)
  {
    v3 = (void *)result;
    swift_unknownObjectRetain();

    swift_getObjectType();
    sub_1A93F8928();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1A908C4AC()
{
  uint64_t v0;

  sub_1A90A5078(v0);
}

void sub_1A908C4B4()
{
  uint64_t v0;

  sub_1A908C4BC(v0);
}

void sub_1A908C4BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  unsigned int v6;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1AF41420C](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSettingsUserDefaults);
    v5 = (void *)sub_1A93F8010();
    v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);

    if (v6)
    {
      sub_1A9243450();
    }
    else
    {
      sub_1A908C588();
      sub_1A908CD08();
    }

  }
}

void sub_1A908C588()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  unint64_t v10;
  id v11;
  id v12;
  void *v13;
  unint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  const char *v36;

  v4 = sub_1A93F7E18();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1ED2A56D0 != -1)
    swift_once();
  v8 = (void *)qword_1ED2A56C0;
  *v7 = qword_1ED2A56C0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v9 = v8;
  v10 = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  v11 = (id)objc_opt_self();
  v12 = objc_msgSend(v11, sel__applePodcastsFoundationSharedUserDefaults);
  v13 = (void *)sub_1A93F8010();
  v1 = objc_msgSend(v12, sel_stringForKey_, v13);

  if (v1)
  {
    v3 = sub_1A93F8040();
    v2 = v14;
  }
  else
  {
    v3 = 0;
    v2 = 0;
  }
  v15 = objc_msgSend(v11, sel__applePodcastsFoundationSharedUserDefaults);
  v36 = "kMTDeviceIdentifierKey";
  v16 = (void *)sub_1A93F8010();
  v7 = objc_msgSend(v15, sel_stringForKey_, v16);

  if (v7)
  {
    v17 = sub_1A93F8040();
    v10 = v18;
    if (!v2)
      goto LABEL_18;
  }
  else
  {
    v17 = 0;
    v10 = 0;
    if (!v2)
      goto LABEL_18;
  }
  v19 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v19 = v3 & 0xFFFFFFFFFFFFLL;
  if (v19)
  {
    v34 = v17;
    v35 = v11;
    sub_1A93F87B4();
    if (qword_1ED2A4300 == -1)
    {
LABEL_15:
      swift_beginAccess();
      v20 = (void *)qword_1ED2A42F0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1A9405520;
      *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v21 + 64) = sub_1A90A92DC();
      *(_QWORD *)(v21 + 32) = v3;
      *(_QWORD *)(v21 + 40) = v2;
      v22 = v20;
      sub_1A93F75A8();

      swift_bridgeObjectRelease();
      v23 = qword_1ED2A78C8;
      v24 = *(id *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store);
      if (v23 != -1)
        swift_once();
      objc_msgSend(v24, sel_setIdentifier_forKey_, v1, qword_1ED2A78B8);

      v11 = v35;
      v25 = objc_msgSend(v35, sel__applePodcastsFoundationSharedUserDefaults);
      v1 = (id)sub_1A93F8010();
      objc_msgSend(v25, sel_setURL_forKey_, 0, v1);

      v17 = v34;
LABEL_18:

      if (!v10)
        goto LABEL_30;
      goto LABEL_19;
    }
LABEL_32:
    swift_once();
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();

  if (!v10)
    goto LABEL_30;
LABEL_19:
  v26 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v26 = v17 & 0xFFFFFFFFFFFFLL;
  if (v26)
  {
    sub_1A93F87B4();
    if (qword_1ED2A4300 != -1)
      swift_once();
    swift_beginAccess();
    v27 = (void *)qword_1ED2A42F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1A9405520;
    *(_QWORD *)(v28 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v28 + 64) = sub_1A90A92DC();
    *(_QWORD *)(v28 + 32) = v17;
    *(_QWORD *)(v28 + 40) = v10;
    v29 = v27;
    sub_1A93F75A8();

    swift_bridgeObjectRelease();
    v30 = qword_1ED2A78B0;
    v31 = *(id *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store);
    if (v30 != -1)
      swift_once();
    objc_msgSend(v31, sel_setIdentifier_forKey_, v7, qword_1ED2A78A8);

    v32 = objc_msgSend(v11, sel__applePodcastsFoundationSharedUserDefaults);
    v7 = (_QWORD *)sub_1A93F8010();
    objc_msgSend(v32, sel_setURL_forKey_, 0, v7);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_30:

}

uint64_t sub_1A908CAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v4 = sub_1A93F7D58();
  v15 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F7DB8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A56D0 != -1)
    swift_once();
  v14[1] = qword_1ED2A56C0;
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = a1;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = a2;
  v12 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v16 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_1A908CD08()
{
  return sub_1A908CAE8((uint64_t)sub_1A908C4AC, (uint64_t)&block_descriptor_35);
}

void sub_1A908CD1C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  void (*v3)(id, _QWORD);
  id v4;

  v1 = (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  v2 = (v1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v3 = *(void (**)(id, _QWORD))(v0 + ((v2 + 15) & 0xFFFFFFFFFFFFFFF8));
  v4 = (id)(*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 24) + 48))(*(_QWORD *)(v0 + v1), *(_QWORD *)(v0 + v2));
  v3(v4, 0);

}

uint64_t sub_1A908CDAC(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1A9373B40(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

int8x16_t *sub_1A908CDBC()
{
  int8x16_t *v0;

  return sub_1A908CDC4(v0);
}

int8x16_t *sub_1A908CDC4(int8x16_t *result)
{
  int8x16_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = vorrq_s8(result[1], result[2]);
  if (*(_QWORD *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) || result[3].u8[0] != 160)
  {
    __break(1u);
  }
  else
  {
    FeedUpdateType.beginInterval(for:)((uint64_t)result->i64 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_signpostID);
    v2 = 1uLL;
    v3 = 0;
    v4 = 0;
    v5 = -96;
    return (int8x16_t *)sub_1A9067F64(&v2);
  }
  return result;
}

uint64_t FeedUpdateType.beginInterval(for:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  NSObject *v12;
  os_signpost_type_t v13;
  uint64_t result;
  void (*v15)(_BYTE *, uint64_t, uint64_t);
  uint8_t *v16;
  os_signpost_id_t v17;
  _BYTE v18[16];

  v3 = sub_1A93F75FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *v1;
  if (qword_1ED2A8670 != -1)
    swift_once();
  v8 = sub_1A93F762C();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A8658);
  v18[15] = v7;
  v9 = sub_1A908D440();
  v11 = v10;
  v12 = sub_1A93F7620();
  v13 = sub_1A93F8940();
  result = sub_1A93F8A6C();
  if ((result & 1) == 0)
    goto LABEL_7;
  if ((v11 & 1) == 0)
  {
    if (!v9)
    {
      __break(1u);
LABEL_7:

      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
LABEL_13:
      sub_1A93F765C();
      swift_allocObject();
      sub_1A93F7650();
      return swift_release();
    }
LABEL_12:
    v15 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16);
    v15(v6, a1, v3);
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    v17 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v12, v13, v17, (const char *)v9, "Begin Update", v16, 2u);
    MEMORY[0x1AF41411C](v16, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    v15(v6, a1, v3);
    goto LABEL_13;
  }
  if (HIDWORD(v9))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v9 >> 11 != 27)
  {
    if (WORD1(v9) <= 0x10u)
    {
      v9 = (unint64_t)sub_1A910F87C();
      goto LABEL_12;
    }
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t FeedUpdateType.endInterval(for:success:)(uint64_t a1, int a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  NSObject *v21;
  uint64_t result;
  char v23;
  char v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  os_signpost_id_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  const char *v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v38 = a2;
  v4 = sub_1A93F7638();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F75FC();
  v9 = MEMORY[0x1E0C80A78](v8);
  v39 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v33 - v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = *v2;
  v40 = v15;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v36((char *)&v33 - v16, a1, v8);
  sub_1A93F765C();
  swift_allocObject();
  sub_1A93F7650();
  if (qword_1ED2A8670 != -1)
    swift_once();
  v17 = sub_1A93F762C();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED2A8658);
  LOBYTE(v42) = v14;
  v18 = sub_1A908D440();
  v20 = v19;
  v21 = sub_1A93F7620();
  sub_1A93F7644();
  v37 = sub_1A93F8934();
  result = sub_1A93F8A6C();
  if ((result & 1) == 0)
    goto LABEL_7;
  if ((v20 & 1) == 0)
  {
    if (!v18)
    {
      __break(1u);
LABEL_7:

      (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v8);
      return swift_release();
    }
    goto LABEL_12;
  }
  if (HIDWORD(v18))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v18 >> 11 == 27)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  if (WORD1(v18) > 0x10u)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v18 = (unint64_t)sub_1A910F87C();
LABEL_12:
  swift_retain();
  sub_1A93F7668();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == *MEMORY[0x1E0DF2190])
  {
    v23 = 0;
    v24 = 0;
    v34 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v34 = "Status: %s";
    v24 = 2;
    v23 = 1;
  }
  v25 = v13;
  v35 = v13;
  v26 = v39;
  v36(v39, (uint64_t)v25, v8);
  v27 = swift_slowAlloc();
  v28 = swift_slowAlloc();
  v42 = v28;
  *(_BYTE *)v27 = v24;
  *(_BYTE *)(v27 + 1) = v23;
  *(_WORD *)(v27 + 2) = 2080;
  if ((v38 & 1) != 0)
    v29 = 0x6673736563637553;
  else
    v29 = 0x64656C696146;
  if ((v38 & 1) != 0)
    v30 = 0xEA00000000006C75;
  else
    v30 = 0xE600000000000000;
  v41 = sub_1A906436C(v29, v30, &v42);
  sub_1A93F8AA8();
  swift_bridgeObjectRelease();
  v31 = sub_1A93F75E4();
  _os_signpost_emit_with_name_impl(&dword_1A904E000, v21, (os_signpost_type_t)v37, v31, (const char *)v18, v34, (uint8_t *)v27, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1AF41411C](v28, -1, -1);
  MEMORY[0x1AF41411C](v27, -1, -1);

  v32 = *(void (**)(char *, uint64_t))(v40 + 8);
  v32(v35, v8);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v32)(v26, v8);
}

uint64_t sub_1A908D440()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1A908D468 + 4 * aV[*v0]))("Delta Feed Update", 17);
}

const char *sub_1A908D468()
{
  return "Boostrap Update";
}

const char *sub_1A908D47C()
{
  return "RSS Update";
}

const char *sub_1A908D490()
{
  return "Batch Update";
}

const char *sub_1A908D4A4()
{
  return "Delta Show Request";
}

const char *sub_1A908D58C()
{
  return "Delta Partial Success Context Perform";
}

const char *sub_1A908D5B4()
{
  return "Delta Prepare for Initial Sync Request";
}

void sub_1A908D5C8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  unsigned __int8 v4;

  v1 = *(os_unfair_lock_s **)(v0 + 264);
  v2 = v1 + 4;
  v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1A908D648(v2, &v4);
  os_unfair_lock_unlock(v3);
  if (v4 - 2 < 2)
    sub_1A908D654();
}

_BYTE *sub_1A908D648@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A908D654()
{
  return sub_1A93590C8(0, (uint64_t)sub_1A908BD18, (uint64_t)&block_descriptor_49_1);
}

uint64_t sub_1A908D66C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v2);
  v26 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1A93F8850();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8B40);
  v24 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8C58);
  v27 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8E58);
  v30 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 96);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 64), v13);
  (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(v14 + 16))(v34, v13, v14);
  v32 = v34[0];
  v33 = v34[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A6D20);
  sub_1A9066D74(&qword_1ED2A6D18, &qword_1ED2A6D20, (uint64_t)&protocol conformance descriptor for StorageChangeStream<A>);
  sub_1A93F7B84();
  swift_release();
  swift_release();
  v34[0] = *(id *)(v0 + 200);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9110);
  sub_1A9066D74(&qword_1ED2A8B38, &qword_1ED2A8B40, MEMORY[0x1E0C95950]);
  sub_1A9066D74(&qword_1ED2A9108, &qword_1ED2A9110, MEMORY[0x1E0C95F48]);
  sub_1A93F7BC0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  sub_1A93F8844();
  v34[0] = *(id *)(v0 + 16);
  v15 = v34[0];
  v16 = sub_1A93F882C();
  v17 = (uint64_t)v26;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v26, 1, 1, v16);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1ED2A8C50, &qword_1ED2A8C58, MEMORY[0x1E0C95A60]);
  sub_1A905FD90();
  v18 = v15;
  v19 = v25;
  sub_1A93F7C8C();
  sub_1A905FD54(v17, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v31);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v19);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_1A935A054;
  *(_QWORD *)(v20 + 24) = v0;
  sub_1A9066D74(&qword_1ED2A8E50, &qword_1ED2A8E58, MEMORY[0x1E0C95BB0]);
  swift_retain();
  v21 = v28;
  v22 = sub_1A93F7D04();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v21);
  *(_QWORD *)(v1 + 224) = v22;
  return swift_release();
}

uint64_t sub_1A908DA9C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54[3];

  v1 = (_QWORD *)v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v2);
  v44 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1A93F8850();
  v49 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v41 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8B40);
  v6 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  v39 = v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8B98);
  v37 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8CE8);
  v45 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8E68);
  v15 = *(_QWORD *)(v14 - 8);
  v46 = v14;
  v47 = v15;
  MEMORY[0x1E0C80A78](v14);
  v40 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8948);
  v50 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v43 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54[0] = *(id *)(v0 + 208);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9148);
  sub_1A9066D74(&qword_1ED2A9140, &qword_1ED2A9148, MEMORY[0x1E0C95FB8]);
  v36[1] = MEMORY[0x1E0DEE9C0] + 8;
  sub_1A93F7B84();
  swift_release();
  v18 = *(_QWORD *)(v0 + 88);
  v19 = *(_QWORD *)(v0 + 96);
  __swift_project_boxed_opaque_existential_1(v1 + 8, v1[11]);
  (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(v19 + 8))(v54, v18, v19);
  v52 = v54[0];
  v53 = v54[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A6D20);
  sub_1A9066D74(&qword_1ED2A6D18, &qword_1ED2A6D20, (uint64_t)&protocol conformance descriptor for StorageChangeStream<A>);
  sub_1A93F7B84();
  swift_release();
  swift_release();
  v54[0] = *(id *)(v0 + 192);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9110);
  v20 = MEMORY[0x1E0C95950];
  sub_1A9066D74(&qword_1ED2A8B90, &qword_1ED2A8B98, MEMORY[0x1E0C95950]);
  sub_1A9066D74(&qword_1ED2A8B38, &qword_1ED2A8B40, v20);
  sub_1A9066D74(&qword_1ED2A9108, &qword_1ED2A9110, MEMORY[0x1E0C95F48]);
  v21 = v38;
  sub_1A93F7BD8();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v21);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v9);
  v22 = v41;
  sub_1A93F8844();
  v54[0] = *(id *)(v0 + 16);
  v23 = v54[0];
  v24 = sub_1A93F882C();
  v25 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v44, 1, 1, v24);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1ED2A8CE0, &qword_1ED2A8CE8, MEMORY[0x1E0C95AE0]);
  sub_1A905FD90();
  v26 = v23;
  v27 = v40;
  v28 = v22;
  v29 = v42;
  sub_1A93F7C8C();
  sub_1A905FD54(v25, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v51);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v29);
  sub_1A9066D74(&qword_1ED2A8E60, &qword_1ED2A8E68, MEMORY[0x1E0C95BB0]);
  swift_retain();
  v30 = v43;
  v31 = v46;
  sub_1A93F7B30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v31);
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_1A935A050;
  *(_QWORD *)(v32 + 24) = v0;
  sub_1A9066D74(&qword_1ED2A8940, &qword_1ED2A8948, MEMORY[0x1E0C95708]);
  swift_retain();
  v33 = v48;
  v34 = sub_1A93F7D04();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v33);
  v1[27] = v34;
  return swift_release();
}

uint64_t sub_1A908E088@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

uint64_t sub_1A908E0B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

uint64_t sub_1A908E0E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_beginAccess();
  *(_QWORD *)(v3 + 48) = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A908E13C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_beginAccess();
  *(_QWORD *)(v3 + 56) = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A908E1B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A908E1C4(a1);
}

uint64_t sub_1A908E1C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A9093270(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32), a1);
}

uint64_t sub_1A908E1E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[7];
  uint64_t v11;
  _OWORD v12[4];
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A90C5800();
  result = sub_1A93F8628();
  v11 = result;
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      v5 = *(_OWORD *)(v4 + 48);
      v12[2] = *(_OWORD *)(v4 + 32);
      v12[3] = v5;
      v13 = *(_QWORD *)(v4 + 64);
      v6 = *(_OWORD *)(v4 + 16);
      v12[0] = *(_OWORD *)v4;
      v12[1] = v6;
      sub_1A908E2B0(v12);
      sub_1A908E30C((uint64_t)v10, (uint64_t)v12);
      v7 = v10[4];
      v8 = v10[5];
      v9 = v10[6];
      swift_bridgeObjectRelease();
      sub_1A9094668(v7, v8, v9);
      v4 += 72;
      --v2;
    }
    while (v2);
    return v11;
  }
  return result;
}

_QWORD *sub_1A908E2B0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1[4];
  v3 = a1[5];
  v4 = a1[6];
  swift_bridgeObjectRetain();
  sub_1A9094654(v2, v3, v4);
  return a1;
}

uint64_t sub_1A908E30C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  int v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  __int128 v40;
  __int128 v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[16];
  uint64_t v52;
  _BYTE v53[40];
  char v54[16];
  uint64_t v55;
  char v56[16];
  uint64_t v57;
  char v58[8];
  uint64_t v59;
  unint64_t v60;
  unsigned __int8 v61;
  uint64_t v62;
  char v63[8];
  unint64_t v64;

  v3 = v2;
  v6 = *v2;
  sub_1A93F92DC();
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(unsigned __int8 *)(a2 + 24);
  swift_bridgeObjectRetain();
  v48 = v8;
  v49 = v7;
  sub_1A93F7FBC();
  v46 = v10;
  sub_1A93F92F4();
  if (v10 != 1)
    sub_1A93F930C();
  sub_1A9094604(a2 + 32, (uint64_t)v53);
  sub_1A9094604((uint64_t)v53, (uint64_t)v63);
  v43 = a2;
  v44 = a1;
  v42 = v3;
  if (v64 > 2)
  {
    sub_1A93F92E8();
    sub_1A93F92F4();
    sub_1A93F7FBC();
    sub_1A93F92F4();
    sub_1A93F930C();
  }
  else
  {
    sub_1A93F92E8();
  }
  v11 = sub_1A93F9324();
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = v11 & ~v12;
  v14 = v6 + 56;
  if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v45 = v9;
    v47 = ~v12;
    v15 = *(_QWORD *)(v6 + 48);
    do
    {
      v16 = v15 + 72 * v13;
      v17 = *(_QWORD *)(v16 + 16);
      v18 = *(_BYTE *)(v16 + 24);
      v19 = *(_QWORD *)(v16 + 32);
      v20 = *(_QWORD *)(v16 + 40);
      v21 = *(_QWORD *)(v16 + 48);
      v22 = *(_QWORD *)(v16 + 56);
      v23 = *(_QWORD *)(v16 + 64);
      v24 = *(_QWORD *)v16 == v49 && *(_QWORD *)(v16 + 8) == v48;
      if (!v24 && (sub_1A93F90C0() & 1) == 0)
        goto LABEL_9;
      if ((v18 & 1) != 0)
      {
        if (!v46)
          goto LABEL_9;
      }
      else
      {
        v25 = v46;
        if (v17 != v45)
          v25 = 1;
        if ((v25 & 1) != 0)
          goto LABEL_9;
      }
      if (v21)
      {
        if (v21 == 1)
        {
          sub_1A9094604((uint64_t)v53, (uint64_t)v56);
          if (v57 == 1)
            goto LABEL_37;
        }
        else if (v21 == 2)
        {
          sub_1A9094604((uint64_t)v53, (uint64_t)v51);
          if (v52 == 2)
            goto LABEL_37;
        }
        else
        {
          sub_1A9094604((uint64_t)v53, (uint64_t)v58);
          if (v60 >= 3 && ((v19 & 1) == 0) != v58[0])
          {
            v26 = v61;
            v27 = v62;
            v28 = v20 == v59 && v21 == v60;
            if ((v28 || (sub_1A93F90C0() & 1) != 0) && ((v22 ^ v26) & 1) == 0 && v23 == v27)
            {
LABEL_37:
              swift_bridgeObjectRelease();
              sub_1A9273E3C((_QWORD *)v43);
              v29 = *(_QWORD *)(*v42 + 48) + 72 * v13;
              v30 = *(_QWORD *)(v29 + 8);
              v31 = *(_QWORD *)(v29 + 16);
              v32 = *(_BYTE *)(v29 + 24);
              v33 = *(_QWORD *)(v29 + 32);
              v34 = *(_QWORD *)(v29 + 40);
              v35 = *(_QWORD *)(v29 + 48);
              v36 = *(_QWORD *)(v29 + 56);
              v37 = *(_QWORD *)(v29 + 64);
              *(_QWORD *)v44 = *(_QWORD *)v29;
              *(_QWORD *)(v44 + 8) = v30;
              *(_QWORD *)(v44 + 16) = v31;
              *(_BYTE *)(v44 + 24) = v32;
              *(_QWORD *)(v44 + 32) = v33;
              *(_QWORD *)(v44 + 40) = v34;
              *(_QWORD *)(v44 + 48) = v35;
              *(_QWORD *)(v44 + 56) = v36;
              *(_QWORD *)(v44 + 64) = v37;
              swift_bridgeObjectRetain();
              sub_1A9094654(v33, v34, v35);
              return 0;
            }
          }
        }
      }
      else
      {
        sub_1A9094604((uint64_t)v53, (uint64_t)v54);
        if (!v55)
          goto LABEL_37;
      }
LABEL_9:
      v13 = (v13 + 1) & v47;
    }
    while (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v50 = *v42;
  *v42 = 0x8000000000000000;
  sub_1A908E2B0((_QWORD *)v43);
  sub_1A908E6F0(v43, v13, isUniquelyReferenced_nonNull_native);
  *v42 = v50;
  swift_bridgeObjectRelease();
  v40 = *(_OWORD *)(v43 + 48);
  *(_OWORD *)(v44 + 32) = *(_OWORD *)(v43 + 32);
  *(_OWORD *)(v44 + 48) = v40;
  *(_QWORD *)(v44 + 64) = *(_QWORD *)(v43 + 64);
  v41 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)v44 = *(_OWORD *)v43;
  *(_OWORD *)(v44 + 16) = v41;
  return 1;
}

uint64_t sub_1A908E6F0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  int v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[16];
  uint64_t v43;
  _BYTE v44[40];
  _BYTE v45[16];
  uint64_t v46;
  _BYTE v47[16];
  uint64_t v48;
  _BYTE v49[8];
  uint64_t v50;
  unint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  _BYTE v54[8];
  unint64_t v55;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v36 = result;
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_45;
  if ((a3 & 1) != 0)
  {
    sub_1A91C4EF4();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1A9237E60();
      goto LABEL_45;
    }
    sub_1A9239854();
  }
  v8 = *v3;
  sub_1A93F92DC();
  v9 = *(_QWORD *)(v5 + 16);
  v10 = *(unsigned __int8 *)(v5 + 24);
  v40 = *(_QWORD *)(v5 + 8);
  v41 = *(_QWORD *)v5;
  sub_1A93F7FBC();
  v38 = v10;
  sub_1A93F92F4();
  if (v10 != 1)
    sub_1A93F930C();
  sub_1A9094604(v5 + 32, (uint64_t)v44);
  sub_1A9094604((uint64_t)v44, (uint64_t)v54);
  if (v55 > 2)
  {
    sub_1A93F92E8();
    sub_1A93F92F4();
    sub_1A93F7FBC();
    sub_1A93F92F4();
    sub_1A93F930C();
  }
  else
  {
    sub_1A93F92E8();
  }
  result = sub_1A93F9324();
  v11 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v11;
  v12 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v37 = v9;
    v39 = ~v11;
    v13 = *(_QWORD *)(v8 + 48);
    do
    {
      v14 = v13 + 72 * a2;
      result = *(_QWORD *)v14;
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_BYTE *)(v14 + 24);
      v17 = *(_QWORD *)(v14 + 32);
      v18 = *(_QWORD *)(v14 + 40);
      v19 = *(_QWORD *)(v14 + 48);
      v20 = *(_QWORD *)(v14 + 56);
      v21 = *(_QWORD *)(v14 + 64);
      if (*(_QWORD *)v14 != v41 || *(_QWORD *)(v14 + 8) != v40)
      {
        result = sub_1A93F90C0();
        if ((result & 1) == 0)
          goto LABEL_16;
      }
      if ((v16 & 1) != 0)
      {
        if (!v38)
          goto LABEL_16;
      }
      else
      {
        v23 = v38;
        if (v15 != v37)
          v23 = 1;
        if ((v23 & 1) != 0)
          goto LABEL_16;
      }
      if (v19)
      {
        if (v19 == 1)
        {
          result = sub_1A9094604((uint64_t)v44, (uint64_t)v47);
          if (v48 == 1)
            goto LABEL_44;
        }
        else if (v19 == 2)
        {
          result = sub_1A9094604((uint64_t)v44, (uint64_t)v42);
          if (v43 == 2)
            goto LABEL_44;
        }
        else
        {
          result = sub_1A9094604((uint64_t)v44, (uint64_t)v49);
          if (v51 >= 3 && ((v17 & 1) == 0) != v49[0])
          {
            v24 = v52;
            v25 = v53;
            v26 = v18 == v50 && v19 == v51;
            if (v26 || (result = sub_1A93F90C0(), (result & 1) != 0))
            {
              if (((v20 ^ v24) & 1) == 0 && v21 == v25)
              {
LABEL_44:
                result = sub_1A93F924C();
                __break(1u);
                break;
              }
            }
          }
        }
      }
      else
      {
        result = sub_1A9094604((uint64_t)v44, (uint64_t)v45);
        if (!v46)
          goto LABEL_44;
      }
LABEL_16:
      a2 = (a2 + 1) & v39;
    }
    while (((*(_QWORD *)(v12 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_45:
  v27 = *v35;
  *(_QWORD *)(*v35 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v28 = *(_QWORD *)(v27 + 48) + 72 * a2;
  *(_OWORD *)v28 = *(_OWORD *)v36;
  v29 = *(_OWORD *)(v36 + 16);
  v30 = *(_OWORD *)(v36 + 32);
  v31 = *(_OWORD *)(v36 + 48);
  *(_QWORD *)(v28 + 64) = *(_QWORD *)(v36 + 64);
  *(_OWORD *)(v28 + 32) = v30;
  *(_OWORD *)(v28 + 48) = v31;
  *(_OWORD *)(v28 + 16) = v29;
  v32 = *(_QWORD *)(v27 + 16);
  v33 = __OFADD__(v32, 1);
  v34 = v32 + 1;
  if (v33)
    __break(1u);
  else
    *(_QWORD *)(v27 + 16) = v34;
  return result;
}

uint64_t sub_1A908EA88@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A908EA9C(a1);
}

uint64_t sub_1A908EA9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A908EAB8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD **)(v1 + 40), a1);
}

uint64_t sub_1A908EAB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  id v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;

  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 32);
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1A9094640(a2, a3);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v15 = *(_QWORD *)(a1 + 40);
    type metadata accessor for PodcastStateMachine();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 88) = MEMORY[0x1E0DEE9D8];
    v16 = objc_allocWithZone(MEMORY[0x1E0CB38E0]);
    swift_bridgeObjectRetain();
    sub_1A9093D2C(a4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094654);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v13 + 104) = objc_msgSend(v16, sel_init);
    *(_QWORD *)(v13 + 16) = 0;
    *(_BYTE *)(v13 + 24) = 1;
    *(_QWORD *)(v13 + 32) = a2;
    *(_QWORD *)(v13 + 40) = a3;
    sub_1A9094604((uint64_t)a4, v13 + 48);
    *(_QWORD *)(v13 + 96) = v15;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(a1 + 32) = 0x8000000000000000;
    sub_1A908ECA4(v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(a1 + 32) = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_endAccess();
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
  swift_retain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
LABEL_6:
  *a5 = v13;
  return result;
}

uint64_t sub_1A908ECA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A930D7D8(a1, a2, a3, a4, &qword_1ED2A4368);
}

_QWORD *StoreFeedUpdater.init(bagConfiguration:ctx:ingesterProvider:)(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  id v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (**v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[5];

  v4 = v3;
  v43 = a1;
  v44 = a3;
  v41 = a2;
  v42 = type metadata accessor for FeedManagerBagConfiguration();
  MEMORY[0x1E0C80A78](v42);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F8808();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1A93F885C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9066C6C();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF8D8], v10);
  sub_1A93F7D88();
  v45[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v8, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  sub_1A93F8B5C();
  v3[2] = sub_1A93F888C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A7B68);
  swift_allocObject();
  v3[4] = sub_1A9076B70(&qword_1ED2A9128);
  v14 = MEMORY[0x1E0DEE9E0];
  v3[7] = MEMORY[0x1E0DEE9E0];
  v3[8] = v14;
  if (objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod))
  {
    if (qword_1EEAB6CD0 != -1)
      swift_once();
    v15 = &qword_1EEAB86A8;
  }
  else
  {
    if (qword_1ED2A7EB8 != -1)
      swift_once();
    v15 = &qword_1ED2A7EB0;
  }
  v16 = (void *)*v15;
  v17 = *(_QWORD *)(*v15 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentDeltaUpdateLimit);
  v18 = v43;
  sub_1A9064630(v43, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedManagerBagConfiguration);
  sub_1A905DC3C(v44, (uint64_t)v45);
  v19 = (void *)v4[2];
  type metadata accessor for StoreFeedUpdater.Queue(0);
  swift_allocObject();
  v20 = v16;
  v21 = v41;
  v22 = v19;
  v23 = sub_1A908F1A0(0x65755161746C6544, 0xEA00000000006575, v17, (uint64_t)v6, v21, (uint64_t)v45, v22);

  v4[5] = v23;
  v41 = *(id *)&v20[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentBootstrapUpdateLimit];
  v24 = (uint64_t)v6;
  sub_1A9064630(v18, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedManagerBagConfiguration);
  v25 = v44;
  sub_1A905DC3C(v44, (uint64_t)v45);
  swift_allocObject();
  v26 = v21;
  v27 = v22;
  v28 = sub_1A908F1A0(0x61727473746F6F42, 0xEE00657565755170, (uint64_t)v41, v24, v26, (uint64_t)v45, v27);

  __swift_destroy_boxed_opaque_existential_0(v25);
  v4[6] = v28;
  v29 = v42;
  *((_BYTE *)v4 + 72) = *(_BYTE *)(v18 + *(int *)(v42 + 20));
  v30 = *(_QWORD *)(v18 + *(int *)(v29 + 28));
  swift_bridgeObjectRetain();
  sub_1A9064714(v18, (uint64_t (*)(_QWORD))type metadata accessor for FeedManagerBagConfiguration);
  v4[10] = v30;
  v4[3] = v26;
  v31 = v4[5];
  v32 = swift_allocObject();
  swift_weakInit();
  v33 = (uint64_t (**)(uint64_t, uint64_t))(v31
                                                  + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_completionCallback);
  v34 = *(_QWORD *)(v31 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_completionCallback);
  *v33 = sub_1A91C0224;
  v33[1] = (uint64_t (*)(uint64_t, uint64_t))v32;
  sub_1A9085818(v34);
  v35 = v4[6];
  v36 = swift_allocObject();
  swift_weakInit();
  v37 = (uint64_t (**)(uint64_t, uint64_t))(v35
                                                  + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_completionCallback);
  v38 = *(_QWORD *)(v35 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_completionCallback);
  *v37 = sub_1A91C0224;
  v37[1] = (uint64_t (*)(uint64_t, uint64_t))v36;
  sub_1A9085818(v38);
  return v4;
}

_QWORD *sub_1A908F1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7)
{
  _QWORD *v7;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  id v15;
  id v16;
  char *v17;
  char *v18;

  v12 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)((char *)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_pendingQueue) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)((char *)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_runningQueue) = v12;
  *(_QWORD *)((char *)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_jobs) = MEMORY[0x1E0DEE9E0];
  v13 = (_QWORD *)((char *)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_completionCallback);
  *v13 = 0;
  v13[1] = 0;
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  sub_1A9064630(a4, (uint64_t)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_bagConfiguration, (uint64_t (*)(_QWORD))type metadata accessor for FeedManagerBagConfiguration);
  *(_QWORD *)((char *)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_ctx) = a5;
  sub_1A905DC3C(a6, (uint64_t)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_ingesterProvider);
  *(_QWORD *)((char *)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_queue) = a7;
  v14 = objc_allocWithZone((Class)type metadata accessor for MediaRequestController());
  v15 = a5;
  v16 = a7;
  v17 = (char *)objc_msgSend(v14, sel_init);
  *(_QWORD *)((char *)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_mediaRequestController) = v17;
  v18 = &v17[OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy];
  swift_beginAccess();
  *(_QWORD *)v18 = 1;
  objc_msgSend(v17, sel_setPersonalizeRequests_, 0);
  __swift_destroy_boxed_opaque_existential_0(a6);
  sub_1A9064714(a4, (uint64_t (*)(_QWORD))type metadata accessor for FeedManagerBagConfiguration);
  return v7;
}

uint64_t type metadata accessor for MediaRequestController()
{
  return objc_opt_self();
}

uint64_t sub_1A908F3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  unsigned __int8 v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t result;
  _BYTE v35[12];
  unsigned int v36;
  _BYTE *v37;
  _BYTE *v38;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v38 = &v35[-v8];
  v9 = (int *)type metadata accessor for FeedManagerBagConfiguration();
  MEMORY[0x1E0C80A78](v9);
  v37 = &v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v35[-v12];
  MEMORY[0x1E0C80A78](v14);
  v16 = &v35[-v15];
  MEMORY[0x1E0C80A78](v17);
  v19 = &v35[-v18];
  MEMORY[0x1E0C80A78](v20);
  v22 = &v35[-v21];
  if (qword_1ED2A7A38 != -1)
    swift_once();
  v23 = __swift_project_value_buffer((uint64_t)v9, (uint64_t)qword_1ED2B8998);
  sub_1A908FAE0(v23, (uint64_t)v22);
  if (qword_1ED2A95D8 != -1)
    swift_once();
  sub_1A90D1FF8(qword_1ED2A95C8, (uint64_t)v6);
  sub_1A908FAE0((uint64_t)v22, (uint64_t)v19);
  v24 = sub_1A93F726C();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v25 + 48))(v6, 1, v24) == 1)
  {
    sub_1A9062170((uint64_t)v19, (uint64_t)v38, &qword_1ED2AD3D0);
    sub_1A908FA3C((uint64_t)v19);
    sub_1A905FD54((uint64_t)v6, &qword_1ED2AD3D0);
  }
  else
  {
    sub_1A908FA3C((uint64_t)v19);
    v26 = v38;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v25 + 32))(v38, v6, v24);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v24);
  }
  if (qword_1ED2A9600 != -1)
    swift_once();
  v27 = objc_msgSend(*(id *)(a1 + 16), sel_BOOLForKey_, qword_1ED2A95F0);
  v28 = objc_msgSend(v27, sel_unsafeSnapshotSyncValue);

  if (v28)
  {
    v36 = objc_msgSend(v28, sel_BOOLValue);

    sub_1A908FAE0((uint64_t)v22, (uint64_t)v16);
  }
  else
  {
    sub_1A908FAE0((uint64_t)v22, (uint64_t)v16);
    v36 = v16[v9[5]];
  }
  sub_1A908FA3C((uint64_t)v16);
  if (qword_1ED2A95E8 != -1)
    swift_once();
  v29 = objc_msgSend(*(id *)(a1 + 16), sel_BOOLForKey_, qword_1ED2A95E0);
  v30 = objc_msgSend(v29, sel_unsafeSnapshotSyncValue);

  if (v30)
  {
    v31 = objc_msgSend(v30, (SEL)&selRef__lastDatePlayedIfNotFutureDate_podcast_);

    sub_1A908FAE0((uint64_t)v22, (uint64_t)v13);
  }
  else
  {
    sub_1A908FAE0((uint64_t)v22, (uint64_t)v13);
    v31 = v13[v9[6]];
  }
  sub_1A908FA3C((uint64_t)v13);
  if (qword_1ED2A95C0 != -1)
    swift_once();
  v32 = sub_1A90D1F68(qword_1ED2A95B8);
  swift_release();
  v33 = v37;
  sub_1A9078210((uint64_t)v22, (uint64_t)v37);
  if (!v32)
  {
    v32 = *(_QWORD *)&v33[v9[7]];
    swift_bridgeObjectRetain();
  }
  sub_1A908FA3C((uint64_t)v33);
  result = sub_1A908F9F4((uint64_t)v38, a2);
  *(_BYTE *)(a2 + v9[5]) = v36;
  *(_BYTE *)(a2 + v9[6]) = v31;
  *(_QWORD *)(a2 + v9[7]) = v32;
  return result;
}

uint64_t FeedUpdateRequest.init(feedUrl:cloudSyncFeedUrl:podcastStoreId:triggerBy:userInitiated:forceBootstrap:useBackgroundFetch:source:isSubscribing:feedDownloadedHook:preProcessFeedHook:postProcessFeedHook:completion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int *updated;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  void (**v35)(void *, char);
  _QWORD *v36;

  updated = (int *)type metadata accessor for FeedUpdateRequest();
  v26 = updated[18];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2ABD80);
  v27 = swift_allocObject();
  *(_DWORD *)(v27 + 24) = 0;
  *(_QWORD *)(v27 + 16) = 0;
  *(_QWORD *)(a9 + v26) = v27;
  sub_1A93F73D4();
  v28 = a9 + updated[5];
  v29 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v28, a1, v29);
  result = sub_1A908F9F4(a2, a9 + updated[6]);
  *(_QWORD *)(a9 + updated[7]) = a3;
  v31 = (_QWORD *)(a9 + updated[8]);
  *v31 = a4;
  v31[1] = a5;
  *(_BYTE *)(a9 + updated[9]) = a6;
  *(_BYTE *)(a9 + updated[10]) = a7;
  *(_BYTE *)(a9 + updated[11]) = a8;
  *(_QWORD *)(a9 + updated[12]) = a10;
  *(_BYTE *)(a9 + updated[13]) = a11;
  v32 = (_QWORD *)(a9 + updated[14]);
  *v32 = a12;
  v32[1] = a13;
  v33 = (_QWORD *)(a9 + updated[15]);
  *v33 = a14;
  v33[1] = a15;
  v34 = (_QWORD *)(a9 + updated[16]);
  *v34 = a16;
  v34[1] = a17;
  if (a18)
  {
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = a18;
    *(_QWORD *)(result + 24) = a19;
    v35 = (void (**)(void *, char))(a9 + updated[17]);
    *v35 = sub_1A923C100;
    v35[1] = (void (*)(void *, char))result;
  }
  else
  {
    v36 = (_QWORD *)(a9 + updated[17]);
    *v36 = 0;
    v36[1] = 0;
  }
  return result;
}

uint64_t sub_1A908F9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A908FA3C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedManagerBagConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for FeedManagerBagConfiguration(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1A93F726C();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A908FAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedManagerBagConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FeedManagerBagConfiguration()
{
  uint64_t result;

  result = qword_1ED2A7A40;
  if (!qword_1ED2A7A40)
    return swift_getSingletonMetadata();
  return result;
}

char *initializeWithCopy for FeedManagerBagConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v9] = a2[v9];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A908FC34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *updated;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  char v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  _QWORD v58[4];
  char v59;

  v3 = (void *)a2;
  v54 = a1;
  sub_1A9090A3C(a2, (uint64_t)&v57);
  v52 = v57;
  updated = (void *)type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1E0C80A78](updated);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v49 - v8;
  v10 = sub_1A93F7E18();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = v2;
  v15 = *(void **)(v2 + OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_workQueue);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v11 + 104))(v14, *MEMORY[0x1E0DEF740], v10, v12);
  v16 = v15;
  v17 = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v14, v10);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  sub_1A9090A3C((uint64_t)v3, (uint64_t)v58);
  if ((v59 & 1) != 0)
  {
    v15 = v3;
    v3 = (void *)v58[0];
    v18 = v52;
    if (qword_1ED2A4890 == -1)
    {
LABEL_4:
      v19 = sub_1A93F7698();
      __swift_project_value_buffer(v19, (uint64_t)qword_1ED2A87A8);
      sub_1A90913C0(v54, (uint64_t)v6);
      v20 = sub_1A93F7674();
      v21 = sub_1A93F87B4();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc();
        v51 = v3;
        v23 = v22;
        v24 = swift_slowAlloc();
        *(_DWORD *)v23 = 141558275;
        v55 = 1752392040;
        v56 = v24;
        sub_1A93F8AA8();
        *(_WORD *)(v23 + 12) = 2081;
        v25 = sub_1A93F7170();
        v55 = sub_1A906436C(v25, v26, &v56);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        sub_1A9091230((uint64_t)v6);
        _os_log_impl(&dword_1A904E000, v20, v21, "Update %{private,mask.hash}s failed", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v24, -1, -1);
        v27 = v23;
        v3 = v51;
        MEMORY[0x1AF41411C](v27, -1, -1);
      }
      else
      {
        sub_1A9091230((uint64_t)v6);
      }

      v42 = sub_1A93F7170();
      v44 = v43;
      v45 = v52;
      sub_1A9090184(v42, v44, v3, 1);
      sub_1A935208C((uint64_t)v15);
      sub_1A935208C((uint64_t)v15);
      return swift_bridgeObjectRelease();
    }
LABEL_16:
    swift_once();
    goto LABEL_4;
  }
  v29 = v58[0];
  v28 = v58[1];
  v30 = v58[2];
  v31 = v58[3];
  if (qword_1ED2A4890 != -1)
    swift_once();
  v32 = sub_1A93F7698();
  __swift_project_value_buffer(v32, (uint64_t)qword_1ED2A87A8);
  sub_1A90913C0(v54, (uint64_t)v9);
  v33 = sub_1A93F7674();
  v34 = sub_1A93F87B4();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc();
    v52 = updated;
    v36 = v35;
    v37 = swift_slowAlloc();
    v50 = v31;
    v38 = v37;
    *(_DWORD *)v36 = 141558275;
    v55 = 1752392040;
    v56 = v37;
    v51 = (void *)v30;
    sub_1A93F8AA8();
    *(_WORD *)(v36 + 12) = 2081;
    v39 = sub_1A93F7170();
    v55 = sub_1A906436C(v39, v40, &v56);
    v30 = (uint64_t)v51;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9091230((uint64_t)v9);
    _os_log_impl(&dword_1A904E000, v33, v34, "Update %{private,mask.hash}s completed", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    v41 = v38;
    v31 = v50;
    MEMORY[0x1AF41411C](v41, -1, -1);
    MEMORY[0x1AF41411C](v36, -1, -1);
  }
  else
  {
    sub_1A9091230((uint64_t)v9);
  }

  sub_1A9351B18(v29, v28, v30, v31, v54);
  v46 = sub_1A93F7170();
  sub_1A9090184(v46, v47, 0, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9090184(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  os_unfair_lock_s *v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD aBlock[7];
  _QWORD v28[2];

  v9 = sub_1A93F7D58();
  v24 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F7DB8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[0] = a1;
  v28[1] = a2;
  v16 = *(os_unfair_lock_s **)(v4 + 32);
  v25 = v4;
  v26 = v28;
  v17 = v16 + 4;
  os_unfair_lock_lock(v16 + 4);
  sub_1A91713CC((_QWORD *(*)(uint64_t *__return_ptr))sub_1A93520C0, aBlock);
  os_unfair_lock_unlock(v17);
  v18 = aBlock[0];
  sub_1A9066C6C();
  v19 = (void *)sub_1A93F8868();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v18;
  *(_QWORD *)(v20 + 24) = a3;
  LOBYTE(v17) = a4 & 1;
  *(_BYTE *)(v20 + 32) = a4 & 1;
  aBlock[4] = sub_1A9098DA8;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_58_1;
  v21 = _Block_copy(aBlock);
  sub_1A90903E4(a3, (char)v17);
  swift_release();
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v15, v11, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

id sub_1A90903E4(id result, char a2)
{
  if ((a2 & 1) != 0)
    return result;
  return result;
}

uint64_t sub_1A90903F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1A9067718(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A9067790);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A930B3D0();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1A9091124(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1A90904CC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A93F92DC();
        swift_bridgeObjectRetain();
        sub_1A93F7FBC();
        v9 = sub_1A93F9324();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1A90906A0(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v8 = v4;
  v9 = sub_1A93F7D58();
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A93F7DB8();
  v12 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v15 = swift_bridgeObjectRetain();
  v16 = a1(v15);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v8;
  aBlock[4] = a3;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = a4;
  v18 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v14, v11, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  return swift_release();
}

uint64_t sub_1A90908A4(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_1A93F8628();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1A9091D1C(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A9090A3C(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1A9090A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;

  v3 = v2;
  v6 = sub_1A93F7E18();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v3 + 96);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v7 + 104))(v10, *MEMORY[0x1E0DEF740], v6, v8);
  v12 = v11;
  LOBYTE(v11) = sub_1A93F7E3C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v11 & 1) != 0)
  {
    type metadata accessor for FeedUpdateRequest();
    v14 = sub_1A93F7170();
    v16 = v15;
    swift_beginAccess();
    sub_1A9091110(v14, v16);
    swift_endAccess();
    swift_bridgeObjectRelease();
    v17 = swift_release();
    v18 = *(void (**)(uint64_t, uint64_t))(v3 + 120);
    if (v18)
    {
      swift_retain();
      v18(a1, a2);
      v17 = sub_1A9085818((uint64_t)v18);
    }
    return sub_1A9090BE8(v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A9090BE8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t updated;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t result;
  _QWORD *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48[5];

  v1 = v0;
  updated = type metadata accessor for FeedUpdateRequest();
  v3 = *(_QWORD *)(updated - 8);
  MEMORY[0x1E0C80A78](updated);
  v5 = &v42[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v42[-v7];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v42[-v10];
  v12 = sub_1A93F7E18();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = &v42[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = (void *)v1[12];
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v13 + 104))(v16, *MEMORY[0x1E0DEF740], v12, v14);
  v46 = v17;
  LOBYTE(v17) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v16, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  result = swift_beginAccess();
  if (*(_QWORD *)(v1[14] + 16) >= v1[4])
    return result;
  v19 = v1 + 13;
  result = swift_beginAccess();
  if (!*(_QWORD *)(v1[13] + 16))
    return result;
  swift_beginAccess();
  if (!*(_QWORD *)(*v19 + 16))
    goto LABEL_12;
  sub_1A90913C0(*v19 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t)v11);
  sub_1A917424C(0, 1);
  swift_endAccess();
  if (qword_1ED2A4890 != -1)
LABEL_13:
    swift_once();
  v20 = sub_1A93F7698();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED2A87A8);
  sub_1A90913C0((uint64_t)v11, (uint64_t)v8);
  swift_retain();
  v21 = sub_1A93F7674();
  v22 = sub_1A93F87B4();
  v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = swift_slowAlloc();
    v45 = updated;
    v25 = v24;
    v44 = swift_slowAlloc();
    v48[0] = v44;
    *(_DWORD *)v25 = 136315651;
    v43 = v23;
    v26 = v1[2];
    v27 = v1[3];
    swift_bridgeObjectRetain();
    v47 = sub_1A906436C(v26, v27, v48);
    sub_1A93F8AA8();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2160;
    v47 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v25 + 22) = 2081;
    v28 = sub_1A93F7170();
    v47 = sub_1A906436C(v28, v29, v48);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9091230((uint64_t)v8);
    _os_log_impl(&dword_1A904E000, v21, (os_log_type_t)v43, "%s: starting %{private,mask.hash}s", (uint8_t *)v25, 0x20u);
    v30 = v44;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v30, -1, -1);
    MEMORY[0x1AF41411C](v25, -1, -1);
  }
  else
  {
    swift_release();
    sub_1A9091230((uint64_t)v8);
  }

  sub_1A90913C0((uint64_t)v11, (uint64_t)v5);
  v31 = (void *)v1[5];
  sub_1A905DC3C((uint64_t)(v1 + 6), (uint64_t)v48);
  v32 = v1[11];
  v33 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for RSSFeedUpdaterJob();
  swift_allocObject();
  v34 = v46;
  v35 = v31;
  swift_unknownObjectRetain();
  v36 = sub_1A9091880((uint64_t)v5, v35, (uint64_t)v48, v32, v34, (uint64_t)sub_1A90896B4, v33);

  swift_unknownObjectRelease();
  swift_release();
  v37 = sub_1A93F7170();
  v39 = v38;
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v47 = v1[14];
  v1[14] = 0x8000000000000000;
  sub_1A9091688(v36, v37, v39, isUniquelyReferenced_nonNull_native);
  v1[14] = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v41 = sub_1A9091AC4();
  sub_1A9090BE8(v41);
  swift_release();
  return sub_1A9091230((uint64_t)v11);
}

uint64_t sub_1A9091110(uint64_t a1, uint64_t a2)
{
  return sub_1A913102C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1A9091124, (void (*)(void))sub_1A930B588);
}

void sub_1A9091128(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t updated;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, _QWORD);
  uint64_t v16;

  updated = type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1E0C80A78](updated);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = (uint64_t *)&v10[*(int *)(v7 + 68)];
    v13 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v14 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1A90913C0(v13, (uint64_t)v10);
      v15 = (void (*)(uint64_t, _QWORD))*v12;
      sub_1A90858C0(*v12);
      sub_1A9091230((uint64_t)v10);
      if (v15)
      {
        v15(a2, a3 & 1);
        sub_1A9085818((uint64_t)v15);
      }
      v13 += v14;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A9091230(uint64_t a1)
{
  uint64_t updated;

  updated = type metadata accessor for FeedUpdateRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t type metadata accessor for FeedUpdateRequest()
{
  uint64_t result;

  result = qword_1ED2A6868;
  if (!qword_1ED2A6868)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t destroy for FeedUpdateRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  v4 = sub_1A93F73E0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v9 = a1 + a2[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    v8(v9, v6);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[14]))
    swift_release();
  if (*(_QWORD *)(a1 + a2[15]))
    swift_release();
  if (*(_QWORD *)(a1 + a2[16]))
    swift_release();
  if (*(_QWORD *)(a1 + a2[17]))
    swift_release();
  return swift_release();
}

uint64_t sub_1A90913C0(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for FeedUpdateRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t initializeWithCopy for FeedUpdateRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;

  v6 = sub_1A93F73E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v17 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v22 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  v23 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v24 = (_QWORD *)(a1 + v23);
  v25 = a2 + v23;
  v26 = *(_QWORD *)(a2 + v23);
  swift_bridgeObjectRetain();
  if (v26)
  {
    v27 = *(_QWORD *)(v25 + 8);
    *v24 = v26;
    v24[1] = v27;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
  }
  v28 = a3[15];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  if (*v30)
  {
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  v32 = a3[16];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  if (*v34)
  {
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
  }
  v36 = a3[17];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (_QWORD *)(a2 + v36);
  if (*v38)
  {
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v37 = *(_OWORD *)v38;
  }
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  swift_retain();
  return a1;
}

void sub_1A9091614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A909161C(a1, a2, v2);
}

void sub_1A909161C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1AF41420C](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_1A908FC34(a1, a2);

  }
}

uint64_t sub_1A9091688(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A930D7D8(a1, a2, a3, a4, &qword_1EEABDBC0);
}

uint64_t sub_1A9091694(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v9 > *(_QWORD *)(v6 + 24) >> 1)
    v6 = a3();
  v13 = *(_QWORD *)(a4(0) - 8);
  v14 = v6 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v15 * a1;
  v17 = v14 + v15 * a1;
  result = swift_arrayDestroy();
  if (!v9)
    goto LABEL_22;
  v19 = *(_QWORD *)(v6 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_28;
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (v16 < v15 * a2 || v17 >= v14 + v15 * a2 + v20 * v15)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != v15 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v22 = *(_QWORD *)(v6 + 16);
    v23 = __OFADD__(v22, v10);
    v24 = v22 - v9;
    if (!v23)
    {
      *(_QWORD *)(v6 + 16) = v24;
LABEL_22:
      *v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RSSFeedUpdaterJob()
{
  uint64_t result;

  result = qword_1EEABB538;
  if (!qword_1EEABB538)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A9091880(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  _OWORD *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char *v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v8 = v7;
  v32 = a6;
  v37 = sub_1A93F75FC();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v33 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A93F73E0();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_BYTE *)(v8 + 48) = -96;
  v20 = (_QWORD *)(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_feedUniquenessHash);
  *v20 = 0;
  v20[1] = 0;
  v36 = a1;
  sub_1A90913C0(a1, v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_request);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx) = a2;
  v34 = a3;
  sub_1A905DC3C(a3, v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ingesterProvider);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_externalFeedDownloader) = a4;
  *(_QWORD *)(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_workQueue) = a5;
  v21 = (_QWORD *)(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_completion);
  *v21 = v32;
  v21[1] = a7;
  v22 = (_OWORD *)(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData);
  *v22 = 0u;
  v22[1] = 0u;
  v23 = a2;
  swift_unknownObjectRetain();
  v24 = a5;
  swift_retain();
  sub_1A93F73D4();
  v25 = sub_1A93F73A4();
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v28 = (uint64_t *)(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_updaterJobUUID);
  *v28 = v25;
  v28[1] = v27;
  if (qword_1ED2A8670 != -1)
    swift_once();
  v29 = sub_1A93F762C();
  __swift_project_value_buffer(v29, (uint64_t)qword_1ED2A8658);
  sub_1A93F7620();
  v30 = v33;
  sub_1A93F75D8();
  __swift_destroy_boxed_opaque_existential_0(v34);
  sub_1A9091230(v36);
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_signpostID, v30, v37);
  return v8;
}

uint64_t sub_1A9091AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1A93F7D58();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F7DB8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_workQueue);
  aBlock[4] = sub_1A908CDBC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_16_0;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v13[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v3, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_1A9091CA0(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;
  id v4;

  v2 = objc_msgSend(*(id *)(v1 + 16), sel_BOOLForKey_, a1);
  v3 = objc_msgSend(v2, sel_unsafeSnapshotSyncValue);

  if (!v3)
    return 2;
  v4 = objc_msgSend(v3, sel_BOOLValue);

  return (uint64_t)v4;
}

uint64_t sub_1A9091D1C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1A93F92DC();
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  v8 = sub_1A93F9324();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1A93F90C0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1A93F90C0() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1A9091EC8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1A9091EC8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1A9092698();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1A9238084();
      goto LABEL_22;
    }
    sub_1A90BF608();
  }
  v11 = *v4;
  sub_1A93F92DC();
  sub_1A93F7FBC();
  result = sub_1A93F9324();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1A93F90C0(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1A93F924C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1A93F90C0();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1A9092060(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1A9094604(a3, a4[7] + 40 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_1A90920C8(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_1A93F92DC();
  sub_1A93F930C();
  v6 = sub_1A93F9324();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_1A90921E4(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_QWORD *)(v9 + 8 * v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v9 + 8 * v8) != a2);
  }
  result = 0;
  a2 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1A90921E4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1A9092974();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1A9237768();
      goto LABEL_14;
    }
    sub_1A90BF8B4();
  }
  v8 = *v3;
  sub_1A93F92DC();
  sub_1A93F930C();
  result = sub_1A93F9324();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_1A93F924C();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1A9092330(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  int64_t v47;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4358);
  v45 = a2;
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v43 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v41 = v3;
  v42 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  v44 = v5;
  while (1)
  {
    if (v10)
    {
      v46 = (v10 - 1) & v10;
      v47 = v13;
      v20 = __clz(__rbit64(v10)) | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v42)
      break;
    v22 = v43;
    v23 = v43[v21];
    v24 = v13 + 1;
    if (!v23)
    {
      v24 = v13 + 2;
      if (v13 + 2 >= v42)
        goto LABEL_33;
      v23 = v43[v24];
      if (!v23)
      {
        v25 = v13 + 3;
        if (v13 + 3 >= v42)
        {
LABEL_33:
          swift_release();
          v3 = v41;
          if ((v45 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = v43[v25];
        if (!v23)
        {
          while (1)
          {
            v24 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v24 >= v42)
              goto LABEL_33;
            v23 = v43[v24];
            ++v25;
            if (v23)
              goto LABEL_30;
          }
        }
        v24 = v13 + 3;
      }
    }
LABEL_30:
    v46 = (v23 - 1) & v23;
    v47 = v24;
    v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    v30 = *(_QWORD *)(v5 + 56);
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v32 = *v31;
    v33 = v31[1];
    v34 = (uint64_t *)(v30 + 40 * v20);
    v35 = *v34;
    v36 = v34[1];
    v37 = v34[2];
    v38 = v34[3];
    v39 = v34[4];
    if ((v45 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1A9094654(v35, v36, v37);
    }
    sub_1A93F92DC();
    sub_1A93F7FBC();
    result = sub_1A93F9324();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v33;
    v19 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 40 * v17);
    *v19 = v35;
    v19[1] = v36;
    v19[2] = v37;
    v19[3] = v38;
    v19[4] = v39;
    ++*(_QWORD *)(v7 + 16);
    v5 = v44;
    v10 = v46;
    v13 = v47;
  }
  swift_release();
  v3 = v41;
  v22 = v43;
  if ((v45 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v40 = 1 << *(_BYTE *)(v5 + 32);
  if (v40 >= 64)
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v40;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A9092698()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4328);
  v3 = sub_1A93F8C34();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1A93F92DC();
      sub_1A93F7FBC();
      result = sub_1A93F9324();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A9092974()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A5B50);
  result = sub_1A93F8C34();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_1A93F92DC();
      sub_1A93F930C();
      result = sub_1A93F9324();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A9092C1C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];
  _BYTE v34[16];
  uint64_t v35;
  _QWORD v36[10];

  v29 = *(_QWORD *)(result + 16);
  if (v29)
  {
    v36[5] = 0;
    v36[6] = 0;
    v36[8] = 0;
    v36[9] = 0;
    v36[7] = 2;
    v2 = *(_QWORD *)(v1 + 16);
    v3 = *(_QWORD *)(v2 + 16);
    v28 = result + 32;
    v25 = result;
    v4 = swift_bridgeObjectRetain();
    v5 = 0;
    v26 = (uint64_t *)(v2 + 40);
    v27 = v3;
    do
    {
      v31 = *(_QWORD *)(v28 + 8 * v5);
      if (v3)
      {
        v30 = v5;
        swift_bridgeObjectRetain();
        v6 = v26;
        v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          v9 = *v6;
          ObjectType = swift_getObjectType();
          v11 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v9 + 40);
          swift_unknownObjectRetain();
          v11(v33, v31, ObjectType, v9);
          v12 = v33[0];
          v13 = v33[1];
          v15 = v33[2];
          v14 = v33[3];
          v16 = v33[4];
          swift_unknownObjectRelease();
          sub_1A9093CE4((uint64_t)v33, (uint64_t)v34);
          if (v35 != 3)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v7 = sub_1A9093D60(0, v7[2] + 1, 1, v7);
            v17 = v7;
            v18 = v7[2];
            v19 = v17;
            v20 = v17[3];
            if (v18 >= v20 >> 1)
              v19 = sub_1A9093D60((_QWORD *)(v20 > 1), v18 + 1, 1, v19);
            v19[2] = v18 + 1;
            v8 = &v19[5 * v18];
            v7 = v19;
            v8[4] = v12;
            v8[5] = v13;
            v8[6] = v15;
            v8[7] = v14;
            v8[8] = v16;
          }
          v6 += 2;
          --v3;
        }
        while (v3);
        v4 = swift_bridgeObjectRelease();
        v3 = v27;
        v5 = v30;
      }
      else
      {
        v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      MEMORY[0x1E0C80A78](v4);
      type metadata accessor for PodcastStateMachine();
      sub_1A93F8874();
      v21 = v32;
      v22 = v7[2];
      if (v22)
      {
        v23 = (uint64_t)(v7 + 4);
        swift_beginAccess();
        do
        {
          sub_1A9094604(v23, (uint64_t)v36);
          v24 = *(void **)(v21 + 104);
          sub_1A9093D2C(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094654);
          objc_msgSend(v24, sel_lock, v25);
          sub_1A9093E64(v21, v36, &v32);
          objc_msgSend(*(id *)(v21 + 104), sel_unlock);
          sub_1A9093D2C(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094668);
          if (v32 == 1)
            break;
          v23 += 40;
          --v22;
        }
        while (v22);
      }
      swift_release();
      v4 = swift_bridgeObjectRelease();
      ++v5;
    }
    while (v5 != v29);
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_1A9092F68@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  double result;
  __int128 v6;
  _OWORD v7[2];
  uint64_t v8;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 24) + 16);
  os_unfair_lock_lock(v3);
  sub_1A914CD9C((uint64_t)v7);
  os_unfair_lock_unlock(v3);
  v4 = v8;
  result = *(double *)v7;
  v6 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v4;
  return result;
}

double sub_1A9092FE0@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double sub_1A9092FF0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  double result;
  __int128 v6;
  _OWORD v7[2];
  uint64_t v8;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_lock)
                          + 16);
  os_unfair_lock_lock(v3);
  sub_1A93C1930((uint64_t)v7);
  os_unfair_lock_unlock(v3);
  v4 = v8;
  result = *(double *)v7;
  v6 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v4;
  return result;
}

BOOL sub_1A9093070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_1A93F92DC();
  sub_1A93F930C();
  v4 = sub_1A93F9324();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

__n128 sub_1A909315C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  _OWORD v8[2];
  uint64_t v9;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 24) + 16);
  os_unfair_lock_lock(v3);
  sub_1A914CAB0((uint64_t *)v8);
  v6 = (__n128)v8[1];
  v7 = v8[0];
  v4 = v9;
  os_unfair_lock_unlock(v3);
  result = v6;
  *(_OWORD *)a1 = v7;
  *(__n128 *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v4;
  return result;
}

__n128 sub_1A90931E4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  _OWORD v8[2];
  uint64_t v9;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 24) + 16);
  os_unfair_lock_lock(v3);
  sub_1A914CAC8((uint64_t *)v8);
  v6 = (__n128)v8[1];
  v7 = v8[0];
  v4 = v9;
  os_unfair_lock_unlock(v3);
  result = v6;
  *(_OWORD *)a1 = v7;
  *(__n128 *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v4;
  return result;
}

uint64_t sub_1A9093270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;

  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 24);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_1A9093570(a2), (v10 & 1) != 0))
  {
    *a4 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
    return swift_retain();
  }
  else
  {
    v12 = *(_QWORD *)(a1 + 40);
    type metadata accessor for PodcastStateMachine();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 88) = MEMORY[0x1E0DEE9D8];
    v14 = objc_allocWithZone(MEMORY[0x1E0CB38E0]);
    sub_1A9093D2C(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094654);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v13 + 104) = objc_msgSend(v14, sel_init);
    *(_QWORD *)(v13 + 16) = a2;
    *(_BYTE *)(v13 + 24) = 0;
    *(_QWORD *)(v13 + 32) = 0;
    *(_QWORD *)(v13 + 40) = 0;
    sub_1A9094604((uint64_t)a3, v13 + 48);
    *(_QWORD *)(v13 + 96) = v12;
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 24) = 0x8000000000000000;
    sub_1A90933F0(v13, a2, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(a1 + 24) = v16;
    swift_bridgeObjectRelease();
    result = swift_endAccess();
    *a4 = v13;
  }
  return result;
}

uint64_t sub_1A90933F0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1A930EAB8(a1, a2, a3, &qword_1ED2A47A8);
}

uint64_t sub_1A90933FC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  uint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1A9093570(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_1A914CD10(a1, v16[7] + 40 * v10);
      return sub_1A9092060(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A9307608();
      goto LABEL_7;
    }
    sub_1A9093620(v13, a3 & 1);
    v18 = sub_1A9093570(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_1A914CD10(a1, v16[7] + 40 * v10);
      return sub_1A9092060(v10, a2, a1, v16);
    }
  }
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A909350C(uint64_t a1, void (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;

  sub_1A93F92DC();
  a2(a1);
  v5 = sub_1A93F9324();
  return a3(a1, v5);
}

uint64_t sub_1A9093570(uint64_t a1)
{
  return sub_1A909350C(a1, (void (*)(uint64_t))MEMORY[0x1E0DEDF30], (uint64_t (*)(uint64_t, uint64_t))sub_1A9093584);
}

unint64_t sub_1A9093584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1A9093620(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;
  int64_t v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BD8);
  v40 = a2;
  result = sub_1A93F8E80();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v38 = (_QWORD *)(v5 + 64);
    v39 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v41 = v8;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v38;
        if (v20 >= v37)
          goto LABEL_33;
        v21 = v38[v20];
        v22 = v8 + 1;
        if (!v21)
        {
          v22 = v20 + 1;
          if (v20 + 1 >= v37)
            goto LABEL_33;
          v21 = v38[v22];
          if (!v21)
          {
            v23 = v20 + 2;
            if (v23 >= v37)
            {
LABEL_33:
              if ((v40 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v36 = 1 << *(_BYTE *)(v5 + 32);
              if (v36 >= 64)
                bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v38 = -1 << v36;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v38[v23];
            if (!v21)
            {
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v22 >= v37)
                  goto LABEL_33;
                v21 = v38[v22];
                ++v23;
                if (v21)
                  goto LABEL_30;
              }
            }
            v22 = v23;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v41 = v22;
        v19 = __clz(__rbit64(v21)) + (v22 << 6);
      }
      v28 = *(_QWORD *)(v5 + 56);
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v30 = (uint64_t *)(v28 + 40 * v19);
      v31 = *v30;
      v32 = v30[1];
      v33 = v30[2];
      v34 = v30[3];
      v35 = v30[4];
      if ((v40 & 1) == 0)
        sub_1A9094654(v31, v32, v33);
      sub_1A93F92DC();
      sub_1A93F930C();
      result = sub_1A93F9324();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v15 == v25;
          if (v15 == v25)
            v15 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v27 == -1);
        v16 = __clz(__rbit64(~v27)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v29;
      v17 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 40 * v16);
      *v17 = v31;
      v17[1] = v32;
      v17[2] = v33;
      v17[3] = v34;
      v17[4] = v35;
      ++*(_QWORD *)(v7 + 16);
      v5 = v39;
      v8 = v41;
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A909393C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];
  _BYTE v37[16];
  uint64_t v38;
  _QWORD v39[10];

  v30 = *(_QWORD *)(result + 16);
  if (v30)
  {
    v39[5] = 0;
    v39[6] = 0;
    v39[8] = 0;
    v39[9] = 0;
    v39[7] = 2;
    v2 = *(_QWORD *)(v1 + 16);
    v3 = *(_QWORD *)(v2 + 16);
    v29 = result + 32;
    v26 = result;
    swift_bridgeObjectRetain();
    v4 = 0;
    v5 = 0;
    v27 = (uint64_t *)(v2 + 40);
    v28 = v3;
    do
    {
      v6 = (uint64_t *)(v29 + 16 * v4);
      v33 = *v6;
      v34 = v6[1];
      v7 = swift_bridgeObjectRetain();
      if (v3)
      {
        v31 = v5;
        v32 = v4;
        swift_bridgeObjectRetain();
        v8 = v27;
        v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          v11 = *v8;
          ObjectType = swift_getObjectType();
          v13 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 48);
          swift_unknownObjectRetain();
          v13(v36, v33, v34, ObjectType, v11);
          v14 = v36[0];
          v15 = v36[1];
          v16 = v36[2];
          v17 = v36[3];
          v18 = v36[4];
          swift_unknownObjectRelease();
          sub_1A9093CE4((uint64_t)v36, (uint64_t)v37);
          if (v38 != 3)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v9 = sub_1A9093D60(0, v9[2] + 1, 1, v9);
            v20 = v9[2];
            v19 = v9[3];
            if (v20 >= v19 >> 1)
              v9 = sub_1A9093D60((_QWORD *)(v19 > 1), v20 + 1, 1, v9);
            v9[2] = v20 + 1;
            v10 = &v9[5 * v20];
            v10[4] = v14;
            v10[5] = v15;
            v10[6] = v16;
            v10[7] = v17;
            v10[8] = v18;
          }
          v8 += 2;
          --v3;
        }
        while (v3);
        v7 = swift_bridgeObjectRelease();
        v3 = v28;
        v4 = v32;
        v21 = v9;
        v5 = v31;
      }
      else
      {
        v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      MEMORY[0x1E0C80A78](v7);
      type metadata accessor for PodcastStateMachine();
      sub_1A93F8874();
      v22 = v35;
      v23 = v21[2];
      if (v23)
      {
        v24 = (uint64_t)(v21 + 4);
        swift_beginAccess();
        do
        {
          sub_1A9094604(v24, (uint64_t)v39);
          v25 = *(void **)(v22 + 104);
          sub_1A9093D2C(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094654);
          objc_msgSend(v25, sel_lock, v26);
          sub_1A9093E64(v22, v39, &v35);
          objc_msgSend(*(id *)(v22 + 104), sel_unlock);
          sub_1A9093D2C(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094668);
          if (v35 == 1)
            break;
          v24 += 40;
          --v23;
        }
        while (v23);
      }
      swift_release();
      swift_bridgeObjectRelease();
      ++v4;
      swift_bridgeObjectRelease();
    }
    while (v4 != v30);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A9093CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A1F58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1A9093D2C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4]);
  return a1;
}

_QWORD *sub_1A9093D60(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A9117F84(a1, a2, a3, a4, &qword_1ED2A4448);
}

uint64_t sub_1A9093D74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A9093E64@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(__int128 *, _QWORD *, uint64_t, uint64_t);
  char v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  NSObject *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  os_log_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  os_log_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t DynamicType;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[8];
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78[8];
  uint64_t v79;
  unint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  _BYTE *v86;

  v7 = sub_1A93F7698();
  MEMORY[0x1E0C80A78](v7);
  v9 = *(_QWORD *)(a1 + 64);
  v86 = a3;
  v63 = v10;
  v64 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v11;
  switch(v9)
  {
    case 0:
      result = sub_1A9094604((uint64_t)a2, (uint64_t)v78);
      if (v80)
        break;
      goto LABEL_18;
    case 1:
      result = sub_1A9094604((uint64_t)a2, (uint64_t)v78);
      if (v80 == 1)
        goto LABEL_18;
      break;
    case 2:
      result = sub_1A9094604((uint64_t)a2, (uint64_t)v78);
      if (v80 != 2)
        break;
LABEL_18:
      *v86 = 1;
      return result;
    default:
      v14 = *(_QWORD *)(a1 + 72);
      v65 = *(_QWORD *)(a1 + 80);
      v16 = *(_QWORD *)(a1 + 48);
      v15 = *(_QWORD *)(a1 + 56);
      result = sub_1A9094604((uint64_t)a2, (uint64_t)v78);
      if (v80 >= 3 && ((v16 & 1) == 0) != v78[0])
      {
        v17 = v81;
        v18 = v82;
        if (v9 != v80 || v15 != v79)
        {
          LODWORD(v61) = v81;
          result = sub_1A93F90C0();
          if ((result & 1) == 0)
            break;
          v17 = (int)v61;
        }
        if (((v14 ^ v17) & 1) == 0 && v65 == v18)
          goto LABEL_18;
      }
      break;
  }
  v19 = *(_QWORD *)(a1 + 96);
  sub_1A9094604((uint64_t)a2, (uint64_t)&v76);
  v20 = 0xE700000000000000;
  v21 = 0x6E776F6E6B6E75;
  v22 = 0xE500000000000000;
  v23 = 0x6465646461;
  if (v77 == 1)
  {
    v23 = 0x676E69646461;
    v22 = 0xE600000000000000;
  }
  if (v77 != 2)
  {
    v21 = v23;
    v20 = v22;
  }
  if (v77)
    v24 = v21;
  else
    v24 = 0x656C6261646461;
  if (v77)
    v25 = v20;
  else
    v25 = 0xE700000000000000;
  if (*(_QWORD *)(v19 + 16) && (v26 = sub_1A9094640(v24, v25), (v27 & 1) != 0))
  {
    sub_1A905DC3C(*(_QWORD *)(v19 + 56) + 40 * v26, (uint64_t)&v83);
  }
  else
  {
    v85 = 0;
    v83 = 0u;
    v84 = 0u;
  }
  v65 = v3;
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v84 + 1))
  {
    sub_1A934DE10((uint64_t)&v83);
    goto LABEL_37;
  }
  sub_1A9094604((uint64_t)&v83, (uint64_t)v73);
  v28 = v74;
  v29 = v75;
  __swift_project_boxed_opaque_existential_1(v73, v74);
  sub_1A9094604(a1 + 48, (uint64_t)&v83);
  v30 = *(uint64_t (**)(__int128 *, _QWORD *, uint64_t, uint64_t))(v29 + 8);
  sub_1A9093D2C(&v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094654);
  v31 = v30(&v83, a2, v28, v29);
  sub_1A9093D2C(&v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094668);
  if ((v31 & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v73);
LABEL_37:
    v32 = *(_QWORD *)(a1 + 48);
    v33 = *(_QWORD *)(a1 + 56);
    v34 = *(_QWORD *)(a1 + 64);
    sub_1A9094604((uint64_t)a2, a1 + 48);
    sub_1A9093D2C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094654);
    sub_1A9094668(v32, v33, v34);
    result = sub_1A9066A90();
    *v86 = 1;
    return result;
  }
  if (qword_1EEAB6E30 != -1)
    swift_once();
  v35 = v12;
  v36 = __swift_project_value_buffer(v12, (uint64_t)qword_1EEABA820);
  swift_beginAccess();
  v38 = v63;
  v37 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v64, v36, v35);
  sub_1A905DC3C((uint64_t)v73, (uint64_t)v72);
  swift_retain_n();
  sub_1A9093D2C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094654);
  swift_retain();
  sub_1A9093D2C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094654);
  v39 = sub_1A93F7674();
  v40 = sub_1A93F8790();
  if (!os_log_type_enabled(v39, (os_log_type_t)v40))
  {
    swift_release_n();
    sub_1A9093D2C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094668);
    sub_1A9093D2C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094668);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v72);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v35);
LABEL_47:
    *v86 = 0;
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v73);
  }
  v60 = v40;
  v61 = v39;
  v41 = swift_slowAlloc();
  v42 = swift_slowAlloc();
  v71 = v42;
  *(_DWORD *)v41 = 136315906;
  v43 = *(_BYTE *)(a1 + 24);
  v62 = v35;
  v59 = v42;
  if ((v43 & 1) == 0)
  {
    DynamicType = *(_QWORD *)(a1 + 16);
    sub_1A915997C();
    v45 = sub_1A93F8B38();
    v44 = v46;
    goto LABEL_46;
  }
  v44 = *(_QWORD *)(a1 + 40);
  if (v44)
  {
    v45 = *(_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
LABEL_46:
    DynamicType = sub_1A906436C(v45, v44, &v71);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v41 + 12) = 2080;
    v47 = *(_QWORD *)(a1 + 56);
    v48 = *(_QWORD *)(a1 + 64);
    v49 = *(_QWORD *)(a1 + 72);
    v50 = *(_QWORD *)(a1 + 80);
    DynamicType = *(_QWORD *)(a1 + 48);
    v67 = v47;
    v68 = v48;
    v69 = v49;
    v70 = v50;
    sub_1A9094654(DynamicType, v47, v48);
    v51 = sub_1A93F8094();
    DynamicType = sub_1A906436C(v51, v52, &v71);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v41 + 22) = 2080;
    sub_1A9094604((uint64_t)a2, (uint64_t)&DynamicType);
    sub_1A9093D2C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094654);
    v53 = sub_1A93F8094();
    DynamicType = sub_1A906436C(v53, v54, &v71);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9093D2C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094668);
    sub_1A9093D2C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094668);
    *(_WORD *)(v41 + 32) = 2080;
    __swift_project_boxed_opaque_existential_1(v72, v72[3]);
    DynamicType = swift_getDynamicType();
    v67 = v72[4];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE540);
    v55 = sub_1A93F8094();
    DynamicType = sub_1A906436C(v55, v56, &v71);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v72);
    v57 = v61;
    _os_log_impl(&dword_1A904E000, v61, (os_log_type_t)v60, "Denied state change for %s: %s -> %s, rule: %s", (uint8_t *)v41, 0x2Au);
    v58 = v59;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v58, -1, -1);
    MEMORY[0x1AF41411C](v41, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v64, v62);
    goto LABEL_47;
  }
  sub_1A9093D2C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9094668);
  swift_release_n();
  result = sub_1A93F8E14();
  __break(1u);
  return result;
}

uint64_t sub_1A9094604(uint64_t a1, uint64_t a2)
{
  __swift_memcpy40_8(a2, a1);
  return a2;
}

uint64_t sub_1A9094640(uint64_t a1, uint64_t a2)
{
  return sub_1A9067718(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A9067790);
}

uint64_t sub_1A9094654(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a3 >= 3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1A9094668(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a3 >= 3)
    return swift_bridgeObjectRelease();
  return result;
}

BOOL sub_1A909467C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v7[16];
  uint64_t v8;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE v11[16];
  unint64_t v12;

  sub_1A9094604(a1, (uint64_t)v7);
  v4 = v8;
  sub_1A9094604(a2, (uint64_t)v11);
  if (v12 < 3)
    return 0;
  sub_1A9094604(a1, (uint64_t)v9);
  return v10 == 2 || v4 != 2;
}

uint64_t sub_1A90946F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

double sub_1A90947FC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  double result;
  __int128 v6;
  _OWORD v7[2];
  uint64_t v8;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 24) + 16);
  os_unfair_lock_lock(v3);
  sub_1A914CD9C((uint64_t)v7);
  os_unfair_lock_unlock(v3);
  v4 = v8;
  result = *(double *)v7;
  v6 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v4;
  return result;
}

void sub_1A9094878(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[3] = 0;
  a1[4] = 0;
  a1[2] = 3;
}

void sub_1A90962F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A9096460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A90968C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_log_t _MTLogCategoryDatabase()
{
  return os_log_create("com.apple.podcasts", "Database");
}

void sub_1A9096EF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A9096FD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t os_feature_enabled_bag_snapshot_overlay()
{
  return _os_feature_enabled_impl();
}

os_log_t _MTLogCategoryBag()
{
  return os_log_create("com.apple.podcasts", "Bag");
}

uint64_t sub_1A9097730()
{
  uint64_t v0;

  return sub_1A9097738(v0);
}

uint64_t sub_1A9097738(uint64_t a1)
{
  uint64_t v2;

  swift_beginAccess();
  objc_msgSend(*(id *)(a1 + 104), sel_lock);
  sub_1A9097804(a1);
  objc_msgSend(*(id *)(a1 + 104), sel_unlock);
  type metadata accessor for PodcastStateMachine();
  sub_1A9066CE8(qword_1ED2A6C10, v2, (uint64_t (*)(uint64_t))type metadata accessor for PodcastStateMachine, (uint64_t)&protocol conformance descriptor for PodcastStateMachine);
  sub_1A93F7950();
  sub_1A93F7A10();
  return swift_release();
}

uint64_t type metadata accessor for PodcastStateMachine()
{
  return objc_opt_self();
}

uint64_t sub_1A9097804(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _BYTE v18[24];
  _BYTE v19[8];
  void (*v20)(uint64_t);
  uint64_t v21;

  v2 = (uint64_t *)(a1 + 88);
  swift_beginAccess();
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
  {
    swift_bridgeObjectRetain();
    v10 = MEMORY[0x1E0DEE9D8];
LABEL_19:
    swift_bridgeObjectRelease();
    *v2 = v10;
    return swift_bridgeObjectRelease();
  }
  v5 = v3 + 32;
  swift_bridgeObjectRetain();
  do
  {
    sub_1A9261218(v5, (uint64_t)v19);
    v6 = MEMORY[0x1AF41420C](v19);
    swift_unknownObjectRelease();
    if (v6)
    {
      v7 = v20;
      swift_retain();
      v7(a1);
      swift_release();
    }
    sub_1A926128C((uint64_t)v19);
    v5 += 24;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  v8 = *v2;
  v9 = *(_QWORD *)(*v2 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  v21 = MEMORY[0x1E0DEE9D8];
  result = swift_bridgeObjectRetain();
  if (!v9)
    goto LABEL_19;
  v12 = 0;
  v13 = v8 + 32;
  while (v12 < *(_QWORD *)(v8 + 16))
  {
    sub_1A9261218(v13, (uint64_t)v19);
    v14 = MEMORY[0x1AF41420C](v19);
    swift_unknownObjectRelease();
    if (v14)
    {
      sub_1A9261254((uint64_t)v19, (uint64_t)v18);
      v15 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A929E8C8(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v21;
      }
      v17 = *(_QWORD *)(v15 + 16);
      v16 = *(_QWORD *)(v15 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1A929E8C8(v16 > 1, v17 + 1, 1);
        v15 = v21;
      }
      *(_QWORD *)(v15 + 16) = v17 + 1;
      result = sub_1A9261254((uint64_t)v18, v15 + 24 * v17 + 32);
    }
    else
    {
      result = sub_1A926128C((uint64_t)v19);
    }
    ++v12;
    v13 += 24;
    if (v9 == v12)
    {
      v10 = v21;
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9097E6C(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(_BYTE *))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD v18[8];

  v18[1] = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v13 = sub_1A93F9390();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v18 - v15;
  v18[4] = a6;
  v18[5] = a3;
  v18[6] = a4;
  v18[7] = a5;
  sub_1A927DB40(a7, (uint64_t)v18 - v15);
  a1(v16);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1A9097F60()
{
  return sub_1A927EBB4((void (*)(_BYTE *))sub_1A927EACC);
}

void sub_1A909835C()
{
  uint64_t v0;

  sub_1A9098368(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1A9098368(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  NSObject *v28;
  id v29;
  NSObject *v30;
  id v31;
  os_log_type_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v40 = *a1;
  v6 = *MEMORY[0x1E0DEEDD8];
  v41 = sub_1A93F75FC();
  MEMORY[0x1E0C80A78](v41);
  MEMORY[0x1E0C80A78](v7);
  if (qword_1ED2A4318 != -1)
    swift_once();
  swift_beginAccess();
  v8 = (id)qword_1ED2A4308;
  v9 = a1;
  sub_1A93F75CC();
  sub_1A93F8940();
  v10 = (void *)qword_1ED2A4308;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 64) = sub_1A90A92DC();
  *(_QWORD *)(v11 + 32) = a2;
  *(_QWORD *)(v11 + 40) = a3;
  v12 = v10;
  swift_bridgeObjectRetain();
  sub_1A93F75B4();

  swift_bridgeObjectRelease();
  v13 = *(Class *)((char *)&v9->isa + qword_1EEABE8D8);
  *(_QWORD *)&v42 = 0;
  if (objc_msgSend(v13, sel_performFetch_, &v42))
  {
    v14 = (id)v42;
    v15 = objc_msgSend(v13, sel_fetchedObjects);
    if (v15)
    {
      v16 = v15;
      v17 = *(_QWORD *)((v6 & v40) + 0x60);
      v18 = sub_1A93F8310();

    }
    else
    {
      v17 = *(_QWORD *)((v6 & v40) + 0x60);
      v18 = sub_1A93F8370();
    }
    v19 = MEMORY[0x1AF4120B8](v18, v17);
    swift_bridgeObjectRelease();
    sub_1A93F8934();
    v20 = (void *)qword_1ED2A4308;
    v21 = swift_allocObject();
    v22 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v21 + 16) = xmmword_1A9405520;
    v23 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v21 + 56) = v22;
    *(_QWORD *)(v21 + 64) = v23;
    *(_QWORD *)(v21 + 32) = v19;
    v24 = v20;
    sub_1A93F75B4();

    swift_bridgeObjectRelease();
    sub_1A9098D18();
  }
  v25 = (id)v42;
  v26 = (void *)sub_1A93F7128();

  swift_willThrow();
  if (qword_1ED2A3F00 != -1)
    goto LABEL_12;
  while (1)
  {
    v27 = sub_1A93F7698();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED2A3EE0);
    v28 = v9;
    v29 = v26;
    v30 = v28;
    v31 = v26;
    v9 = sub_1A93F7674();
    v32 = sub_1A93F87A8();
    if (os_log_type_enabled(v9, v32))
    {
      v33 = swift_slowAlloc();
      v34 = (_QWORD *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      *(_QWORD *)&v42 = v35;
      *(_DWORD *)v33 = 138412546;
      v36 = objc_msgSend(v13, sel_fetchRequest);
      sub_1A93F8AA8();
      *v34 = v36;

      *(_WORD *)(v33 + 12) = 2080;
      v37 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
      v38 = sub_1A93F8094();
      sub_1A906436C(v38, v39, (uint64_t *)&v42);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v9, v32, "Failed to start FetchedResultsPublisher FRC: request: %@\nerror: %s", (uint8_t *)v33, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v34, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v35, -1, -1);
      MEMORY[0x1AF41411C](v33, -1, -1);

      __break(1u);
      JUMPOUT(0x1A90989B0);
    }

    __break(1u);
LABEL_12:
    swift_once();
  }
}

uint64_t sub_1A90989F4()
{
  void *v0;
  id v1;
  char *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  if (qword_1ED2A4318 != -1)
    swift_once();
  swift_beginAccess();
  v1 = (id)qword_1ED2A4308;
  v2 = v0;
  sub_1A93F75CC();
  sub_1A93F8940();
  v3 = (void *)qword_1ED2A4308;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1A9405520;
  v6 = *(_QWORD *)&v2[qword_1EEABE8A0];
  v5 = *(_QWORD *)&v2[qword_1EEABE8A0 + 8];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1A90A92DC();
  *(_QWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 40) = v5;
  v7 = v3;
  swift_bridgeObjectRetain();
  sub_1A93F75B4();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9098B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v7 = a5[2];
  v8 = a5[3];
  v9 = __OFADD__(v7, v8);
  v10 = v7 + v8;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    v5 = a5;
    v11 = a5[4];
    v6 = v10 - v11;
    if (!__OFSUB__(v10, v11))
    {
      sub_1A93F8934();
      if (qword_1ED2A4318 == -1)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_10:
  swift_once();
LABEL_4:
  swift_beginAccess();
  v12 = (void *)qword_1ED2A4308;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1A9405760;
  v14 = MEMORY[0x1E0DEAFD8];
  v15 = *((_BYTE *)v5 + 56);
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v13 + 64) = v14;
  *(_BYTE *)(v13 + 32) = v15;
  v16 = v5[1];
  if ((v16 & 0xC000000000000001) != 0)
  {
    v17 = v12;
    v18 = sub_1A93F8BBC();
  }
  else
  {
    v18 = *(_QWORD *)(v16 + 16);
    v19 = v12;
  }
  v20 = MEMORY[0x1E0DEB418];
  v21 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v13 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v13 + 104) = v21;
  *(_QWORD *)(v13 + 72) = v18;
  v22 = v5[6];
  *(_QWORD *)(v13 + 136) = v20;
  *(_QWORD *)(v13 + 144) = v21;
  *(_QWORD *)(v13 + 112) = v22;
  *(_QWORD *)(v13 + 176) = v20;
  *(_QWORD *)(v13 + 184) = v21;
  *(_QWORD *)(v13 + 152) = v6;
  sub_1A93F75B4();

  return swift_bridgeObjectRelease();
}

void sub_1A9098D18()
{
  swift_beginAccess();
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Paging();
}

uint64_t sub_1A9098D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = type metadata accessor for Synchronized(0, a1, a3, a4);
  sub_1A9098DB4(v4 - 40, v5);
  return swift_endAccess();
}

void sub_1A9098DA8()
{
  uint64_t v0;

  sub_1A9091128(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

void sub_1A9098DB4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD v4[6];

  v3 = *v2;
  v4[2] = *(_QWORD *)(a2 + 16);
  v4[3] = a1;
  sub_1A905F5EC((void (*)(uint64_t))sub_1A917CE84, (uint64_t)v4, v3);
}

uint64_t sub_1A9098E00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1A9098E20(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1A9098E40()
{
  return sub_1A93F7B0C();
}

void sub_1A9098E70()
{
  FetchedResultsListPublisher.receive<A>(subscriber:)();
}

void FetchedResultsListPublisher.receive<A>(subscriber:)()
{
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
}

void sub_1A9098ED4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1A93F83D0();
  type metadata accessor for FRPOutput(255, v2, v3, v4);
  MEMORY[0x1AF414014](&unk_1A9420F14, a1);
  v5 = sub_1A93F77DC();
  MEMORY[0x1E0C80A78](v5);
  sub_1A9098FF4();
}

uint64_t sub_1A9098F50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  *(_QWORD *)(v6 - 112) = a1;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v3;
  v7[3] = v1;
  v8 = *(_QWORD *)(v6 - 128);
  v7[4] = *(_QWORD *)(v6 - 136);
  v7[5] = v8;
  sub_1A93F7B84();
  swift_release();

  sub_1A93F77D0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v5, v4);
}

void sub_1A9098FF4()
{
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
}

uint64_t sub_1A9099024(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_1A9383D40((uint64_t)sub_1A936A3C0, v2, v1, a1);
  return v4;
}

void sub_1A909905C()
{
  void *v0;
  id v1;

  v1 = v0;
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Paging();
}

void sub_1A9099100(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _OWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  id v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  objc_class *ObjCClassFromMetadata;
  id v50;
  id v51;
  id v52;

  *(_QWORD *)(v25 + v24) = sub_1A917CD6C(v32 - 112, a1);
  v33 = qword_1EEABE8E8;
  sub_1A93F73E0();
  v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  type metadata accessor for FRPSectionInfo(255, v29, v30, v27);
  v35 = sub_1A93F83D0();
  type metadata accessor for FRPOutput(255, v35, v36, v37);
  swift_getFunctionTypeMetadata1();
  sub_1A9066CA8((unint64_t *)&qword_1ED2A1F40, v34, MEMORY[0x1E0CB09C8]);
  *(_QWORD *)&v28[v33] = sub_1A93F7EB4();
  v38 = &v28[qword_1EEABE8F0];
  *v38 = 0;
  v38[1] = 0;
  v38[2] = 0;
  v39 = &v28[qword_1EEABE8F8];
  *v39 = 0u;
  v39[1] = 0u;
  v39[2] = 0u;
  *(_OWORD *)((char *)v39 + 41) = 0u;
  v40 = &v28[qword_1ED2A3BE0];
  v41 = sub_1A93F75FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
  *(_QWORD *)&v28[qword_1ED2A3BB8] = 0;
  v42 = qword_1ED2A3BB0;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
  sub_1A93F8A90();
  sub_1A90A318C((unint64_t *)&unk_1ED2A41C0, MEMORY[0x1E0DEFCF8]);
  *(_QWORD *)&v28[v42] = sub_1A93F7EB4();
  v43 = qword_1ED2A3BD8;
  sub_1A93F8A90();
  *(_QWORD *)&v28[v43] = sub_1A93F7EB4();
  v28[qword_1ED2A3BA0] = 0;
  *(_QWORD *)&v28[qword_1ED2A3BC8] = 0;
  v44 = &v28[qword_1EEABE8A0];
  *v44 = v26;
  v44[1] = a18;
  swift_bridgeObjectRetain();
  v45 = objc_msgSend(a10, sel_fetchBatchSize);
  *(_QWORD *)&v28[qword_1EEABE8A8] = v45;
  *(_QWORD *)&v28[qword_1EEABE8B0] = v31;
  *(_QWORD *)&v28[qword_1EEABE8B8] = a11;
  v46 = &v28[qword_1EEABE8C0];
  *v46 = a12;
  v46[1] = a20;
  v47 = &v28[qword_1EEABE8C8];
  *v47 = a15;
  v47[1] = a19;
  v48 = &v28[qword_1EEABE8D0];
  *v48 = a13;
  v48[1] = a14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A4208);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v50 = v31;
  a11;
  swift_retain();
  swift_retain();
  swift_retain();
  v51 = a10;
  v52 = objc_allocWithZone(ObjCClassFromMetadata);
  *(_QWORD *)&v28[qword_1EEABE8D8] = sub_1A9099508(v51, v50, 0, 0, 0, 0);

  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
}

char *sub_1A90993E8(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t aBlock,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void *v50;
  char *v51;
  _QWORD *v52;
  void *v53;
  char *v54;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  _QWORD v59[24];

  *(_QWORD *)(v48 - 128) = v47;
  *(_QWORD *)(v48 - 120) = a1;
  v49 = (char *)objc_msgSendSuper2((objc_super *)(v48 - 128), sel_init);
  v50 = *(void **)&v49[*(_QWORD *)(v44 + 2264)];
  v51 = v49;
  objc_msgSend(v50, sel_setDelegate_, v51);
  v52 = (_QWORD *)swift_allocObject();
  v52[2] = v51;
  v52[3] = v56;
  v52[4] = v58;
  v59[4] = sub_1A909835C;
  v59[5] = v52;
  v59[0] = MEMORY[0x1E0C809B0];
  v59[1] = 1107296256;
  v59[2] = sub_1A908A91C;
  v59[3] = &block_descriptor_25_7;
  v53 = _Block_copy(v59);
  v54 = v51;
  swift_release();
  objc_msgSend(v45, sel_performBlock_, v53);

  swift_release();
  swift_release();
  swift_release();
  _Block_release(v53);
  return v54;
}

id sub_1A9099508(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  void *v11;
  void *v12;
  id v13;

  v7 = v6;
  if (!a4)
  {
    v11 = 0;
    if (a6)
      goto LABEL_3;
LABEL_5:
    v12 = 0;
    goto LABEL_6;
  }
  v11 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  if (!a6)
    goto LABEL_5;
LABEL_3:
  v12 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
LABEL_6:
  v13 = objc_msgSend(v7, sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, a1, a2, v11, v12);

  return v13;
}

uint64_t Synchronized.init(wrappedValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A917CD6C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

void sub_1A9099618(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  NSObject *v26;
  int v27;
  char v28;
  char *v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  os_signpost_id_t v35;
  void (*v36)(char *, char *, uint64_t);
  id v37;
  uint64_t v38;
  void *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  BOOL v52;
  _QWORD v53[4];
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t aBlock;
  uint64_t v86;

  v2 = v1;
  v71 = a1;
  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  v58 = sub_1A93F7638();
  v4 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v65 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1A93F7D58();
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v55 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1A93F7DB8();
  v53[3] = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v53[2] = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = *(_QWORD *)(v3 + 88);
  v82 = sub_1A93F8A90();
  v81 = sub_1A93F8A90();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v79 = (char *)v53 - v8;
  v75 = v3;
  v72 = *(_QWORD *)(v3 + 80);
  v83 = sub_1A93F8A90();
  v78 = sub_1A93F8A90();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v76 = (char *)v53 - v9;
  v10 = sub_1A93F75FC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v69 = (char *)v53 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v53 - v17;
  v19 = sub_1A93F762C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A5890 != -1)
    swift_once();
  v23 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED2A5870);
  v62 = v20;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v63 = v19;
  v24(v22, v23, v19);
  sub_1A93F7620();
  sub_1A93F75D8();
  v25 = v2;
  v26 = sub_1A93F7620();
  v27 = sub_1A93F8940();
  v28 = sub_1A93F8A6C();
  v67 = v10;
  v66 = v4;
  v64 = v13;
  v61 = v22;
  if ((v28 & 1) != 0)
  {
    v68 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v73 = v27;
    v29 = v69;
    v68(v69, v18, v10);
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    *(_DWORD *)v30 = 136315138;
    v86 = v31;
    v74 = v11;
    v32 = *(_QWORD *)&v25[qword_1EEABE8A0];
    v33 = *(_QWORD *)&v25[qword_1EEABE8A0 + 8];
    swift_bridgeObjectRetain();
    v34 = v32;
    v10 = v67;
    aBlock = sub_1A906436C(v34, v33, &v86);
    sub_1A93F8AA8();

    v11 = v74;
    swift_bridgeObjectRelease();
    v35 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v26, (os_signpost_type_t)v73, v35, "FRP.RegenerateResults", "Identifier: %s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v31, -1, -1);
    MEMORY[0x1AF41411C](v30, -1, -1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v29, v10);
    v36 = v68;
  }
  else
  {

    v36 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v29 = v69;
  }
  v68 = v36;
  v36(v29, v18, v10);
  sub_1A93F765C();
  swift_allocObject();
  v60 = sub_1A93F7650();
  v59 = *(void (**)(char *, uint64_t))(v11 + 8);
  v59(v18, v10);
  v37 = objc_msgSend(*(id *)&v25[qword_1EEABE8D8], sel_sections);
  v38 = MEMORY[0x1E0DEE9D8];
  v84 = v25;
  if (!v37)
  {
    v43 = MEMORY[0x1E0DEE9D8];
    v48 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v48)
      goto LABEL_23;
    goto LABEL_26;
  }
  v39 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4218);
  v40 = sub_1A93F8310();

  if (v40 >> 62)
  {
    swift_bridgeObjectRetain();
    v41 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v41)
      goto LABEL_9;
  }
  else
  {
    v41 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v41)
    {
LABEL_9:
      v86 = v38;
      sub_1A929E608(0, v41 & ~(v41 >> 63), 0);
      if (v41 < 0)
        goto LABEL_27;
      v42 = 0;
      v43 = v86;
      do
      {
        if ((v40 & 0xC000000000000001) != 0)
        {
          v44 = (void *)MEMORY[0x1AF4129DC](v42, v40);
        }
        else
        {
          v44 = *(void **)(v40 + 8 * v42 + 32);
          swift_unknownObjectRetain();
        }
        v45 = objc_msgSend(v44, sel_numberOfObjects);
        swift_unknownObjectRelease();
        v86 = v43;
        v47 = *(_QWORD *)(v43 + 16);
        v46 = *(_QWORD *)(v43 + 24);
        if (v47 >= v46 >> 1)
        {
          sub_1A929E608(v46 > 1, v47 + 1, 1);
          v43 = v86;
        }
        ++v42;
        *(_QWORD *)(v43 + 16) = v47 + 1;
        *(_QWORD *)(v43 + 8 * v47 + 32) = v45;
      }
      while (v41 != v42);
      swift_bridgeObjectRelease();
LABEL_22:
      v48 = *(_QWORD *)(v43 + 16);
      if (v48)
      {
LABEL_23:
        v49 = 0;
        v50 = (uint64_t *)(v43 + 32);
        while (1)
        {
          v51 = *v50++;
          v52 = __OFADD__(v49, v51);
          v49 += v51;
          if (v52)
            break;
          if (!--v48)
            goto LABEL_26;
        }
LABEL_27:
        __break(1u);
        JUMPOUT(0x1A909AD34);
      }
LABEL_26:
      sub_1A909B300();
    }
  }
  swift_bridgeObjectRelease();
  v43 = MEMORY[0x1E0DEE9D8];
  goto LABEL_22;
}

uint64_t type metadata accessor for FRPSectionInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FRPSectionInfo);
}

void type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Update()
{
  JUMPOUT(0x1AF413F6CLL);
}

uint64_t Array.groupBy<A>(keyForValue:)(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char v46;
  uint64_t (*v47)(char *, unint64_t, uint64_t);
  uint64_t result;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t TupleTypeMetadata2;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *);
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v67 = a6;
  v70 = a1;
  v71 = a2;
  v9 = sub_1A93F83D0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v61 = (char *)&v60 - v11;
  v12 = *(_QWORD *)(a5 - 8);
  v13 = MEMORY[0x1E0C80A78](v10);
  v68 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v60 - v15;
  v74 = sub_1A93F8A90();
  v17 = *(_QWORD *)(v74 - 8);
  v18 = MEMORY[0x1E0C80A78](v74);
  v20 = (char *)&v60 - v19;
  v21 = *(_QWORD *)(a4 - 8);
  v22 = MEMORY[0x1E0C80A78](v18);
  v66 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v75 = (char *)&v60 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v76 = (char *)&v60 - v27;
  v60 = v28;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v60 - v29;
  v62 = a3;
  v80 = a3;
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v9);
  v72 = v9;
  sub_1A93F86DC();
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v77 = a4;
  if (v31(v20, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v74);
    swift_getTupleTypeMetadata2();
    return sub_1A93F8370();
  }
  v69 = v21;
  v33 = v77;
  v64 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v64(v30, v20, v77);
  v34 = TupleTypeMetadata2;
  v80 = sub_1A93F7EC0();
  v65 = v30;
  v70(v30);
  v35 = sub_1A93F7EC0();
  v79 = v35;
  v36 = v62;
  v37 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1AF4120D0](v37, v33))
  {
    v57 = v34;
    v55 = v16;
    v56 = a5;
    swift_bridgeObjectRelease();
    v45 = v65;
LABEL_15:
    v58 = *(int *)(v57 + 48);
    v59 = v61;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v61, v55, v56);
    *(_QWORD *)&v59[v58] = v35;
    sub_1A93F83D0();
    sub_1A93F83AC();
    swift_getTupleTypeMetadata2();
    v32 = sub_1A93F8DD8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v55, v56);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v45, v77);
    return v32;
  }
  v38 = 0;
  v39 = v69;
  while (1)
  {
    v46 = sub_1A93F8388();
    sub_1A93F8340();
    if ((v46 & 1) != 0)
    {
      v47 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v39 + 16);
      result = v47(v76, v36+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v38, v77);
    }
    else
    {
      result = sub_1A93F8CB8();
      if (v60 != 8)
        goto LABEL_18;
      v78 = result;
      v47 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v39 + 16);
      v47(v76, (unint64_t)&v78, v77);
      result = swift_unknownObjectRelease();
    }
    v49 = v68;
    if (__OFADD__(v38, 1))
      break;
    v73 = (void (*)(char *, char *, uint64_t))v47;
    v74 = v38 + 1;
    v50 = v75;
    v64(v75, v76, v77);
    v70(v50);
    if ((sub_1A93F8004() & 1) == 0)
    {
      v51 = v79;
      v52 = *(int *)(TupleTypeMetadata2 + 48);
      v53 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      v54 = v61;
      v53(v61, v16, a5);
      *(_QWORD *)&v54[v52] = v51;
      v36 = v62;
      sub_1A93F83D0();
      sub_1A93F83AC();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v16, a5);
      v53(v16, v49, a5);
      v79 = sub_1A93F8370();
    }
    v40 = v36;
    v41 = v75;
    v42 = v77;
    v73(v66, v75, v77);
    sub_1A93F83AC();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v49, a5);
    v39 = v69;
    v43 = v41;
    v36 = v40;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v43, v42);
    v44 = MEMORY[0x1AF4120D0](v40, v42);
    ++v38;
    v45 = v65;
    if (v74 == v44)
    {
      v55 = v16;
      v56 = a5;
      swift_bridgeObjectRelease();
      v35 = v79;
      v57 = TupleTypeMetadata2;
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

void sub_1A909B300()
{
  swift_beginAccess();
  swift_retain();
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Paging();
}

uint64_t sub_1A909B368(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  Synchronized.wrappedValue.getter(v1, a1);
  swift_release();
  return v3;
}

uint64_t type metadata accessor for Synchronized(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Synchronized);
}

void type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Paging()
{
  JUMPOUT(0x1AF413F6CLL);
}

void sub_1A909B3B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *oslog;
  uint64_t v11;

  v3 = v2;
  if (qword_1ED2A3F00 != -1)
    swift_once();
  v6 = sub_1A93F7698();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A3EE0);
  sub_1A909B7BC(v2);
  sub_1A909B7BC(v2);
  sub_1A909B7BC(v2);
  sub_1A909B7BC(v2);
  sub_1A909B7BC(v2);
  sub_1A909B7BC(v2);
  sub_1A909B7BC(v2);
  sub_1A909B7BC(v2);
  sub_1A909B7BC(v2);
  sub_1A909B7BC(v2);
  sub_1A909B7BC(v2);
  swift_bridgeObjectRetain();
  sub_1A909B7BC(v2);
  swift_bridgeObjectRetain();
  oslog = sub_1A93F7674();
  v7 = sub_1A93F8790();
  if (os_log_type_enabled(oslog, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v11 = v9;
    *(_DWORD *)v8 = 136316674;
    swift_bridgeObjectRetain();
    sub_1A906436C(a1, a2, &v11);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 1024;
    sub_1A909B78C(v3);
    sub_1A93F8AA8();
    sub_1A909B78C(v3);
    *(_WORD *)(v8 + 18) = 2048;
    sub_1A909B78C(v3);
    sub_1A93F8AA8();
    sub_1A909B78C(v3);
    *(_WORD *)(v8 + 28) = 2048;
    sub_1A909B78C(v3);
    sub_1A93F8AA8();
    sub_1A909B78C(v3);
    *(_WORD *)(v8 + 38) = 2048;
    sub_1A909B78C(v3);
    sub_1A93F8AA8();
    sub_1A909B78C(v3);
    *(_WORD *)(v8 + 48) = 2048;
    if ((*(_QWORD *)(v3 + 8) & 0xC000000000000001) != 0)
      sub_1A93F8BBC();
    sub_1A909B78C(v3);
    sub_1A93F8AA8();
    sub_1A909B78C(v3);
    *(_WORD *)(v8 + 58) = 2048;
    sub_1A909B78C(v3);
    sub_1A93F8AA8();
    sub_1A909B78C(v3);
    _os_log_impl(&dword_1A904E000, oslog, v7, "FetchedResultsPublisher (%s):\nUpdate Stats\n    Update pushed: %{BOOL}d\n    Added to cache: %ld\n    Items updated: %ld\n    Items removed: %ld\n    Total paged items: %ld\n    Total items in DB: %ld", (uint8_t *)v8, 0x44u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v9, -1, -1);
    MEMORY[0x1AF41411C](v8, -1, -1);

  }
  else
  {
    sub_1A909B78C(v2);
    sub_1A909B78C(v2);
    sub_1A909B78C(v2);
    sub_1A909B78C(v2);
    sub_1A909B78C(v2);
    sub_1A909B78C(v2);
    swift_bridgeObjectRelease_n();
    sub_1A909B78C(v2);
    sub_1A909B78C(v2);
    sub_1A909B78C(v2);
    sub_1A909B78C(v2);
    sub_1A909B78C(v2);
    sub_1A909B78C(v2);

  }
}

uint64_t sub_1A909B78C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A909B7BC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void Synchronized.modify(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v4[6];

  v4[2] = a4;
  v4[3] = a1;
  v4[4] = a2;
  sub_1A905F5EC((void (*)(uint64_t))sub_1A917CD70, (uint64_t)v4, a3);
}

void sub_1A909B890()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F75FC() - 8) + 80);
  sub_1A909B8F0(*(_QWORD *)(v0 + 48), *(_OWORD **)(v0 + 56), v0 + ((v1 + 64) & ~v1));
}

void sub_1A909B8F0(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  __int128 v8;
  _OWORD v9[2];
  _OWORD v10[2];

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1AF41420C](v5);
  if (v6)
  {
    v7 = (void *)v6;
    swift_beginAccess();
    sub_1A9099618((uint64_t)(a2 + 1));
    swift_endAccess();
    swift_beginAccess();
    v8 = a2[2];
    v9[0] = a2[1];
    v9[1] = v8;
    v10[0] = a2[3];
    *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)a2 + 57);
    sub_1A909B7BC((uint64_t)v9);
    sub_1A9098B64((uint64_t)"FetchedResultsPublisher FRC Update", 34, 2, a3, v9);
    sub_1A909B78C((uint64_t)v9);

  }
}

uint64_t sub_1A909B9FC()
{
  _QWORD *v0;

  return sub_1A90A9A94(v0);
}

uint64_t sub_1A909BA04()
{
  uint64_t v0;

  return sub_1A909BA18(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(_QWORD **)(v0 + 64));
}

uint64_t sub_1A909BA18(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6, _QWORD *a7)
{
  uint64_t result;
  id v13;
  _QWORD *v14;
  uint64_t v15;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = a6;
    v14 = sub_1A909BAF4(a3, v13);

    v15 = sub_1A909BD80(a4);
    swift_release();
    *a7 = v14;
    a7[1] = v15;
    a7[2] = a5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1A909BAF4(unint64_t a1, void *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64x2_t v8;
  int16x8_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int v24;
  int v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  _QWORD v30[2];
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  unsigned __int16 v37;
  unsigned __int8 v38;
  void *v39;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1A93F8E5C())
  {
    v22 = v3 & 0xC000000000000001;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v6 = 4;
    v20 = v4;
    v21 = v3;
    while (1)
    {
      v10 = v22 ? (id)MEMORY[0x1AF4129DC](v6 - 4, v3) : *(id *)(v3 + 8 * v6);
      v11 = v10;
      v12 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v39 = v10;
      sub_1A929A268(&v39, a2, (uint64_t)v30);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v5;
      }

      v13 = v30[0];
      if (v30[0])
      {
        v14 = v30[1];
        v26 = v31;
        v15 = v32;
        v16 = v33;
        v28 = v35;
        v29 = v34;
        v24 = v37;
        v27 = v36;
        v25 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1A911855C(0, v5[2] + 1, 1, v5);
        v18 = v5[2];
        v17 = v5[3];
        if (v18 >= v17 >> 1)
          v5 = sub_1A911855C((_QWORD *)(v17 > 1), v18 + 1, 1, v5);
        v5[2] = v18 + 1;
        v7 = &v5[12 * v18];
        v7[4] = v13;
        *((_BYTE *)v7 + 40) = v14 & 1;
        v8 = (uint64x2_t)vdupq_n_s64(v14);
        v9 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_1A9406780), (int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_1A9406770));
        *(int8x8_t *)v9.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v9), (int8x8_t)0x1000100010001);
        *(_DWORD *)((char *)v7 + 41) = vmovn_s16(v9).u32[0];
        *((_BYTE *)v7 + 45) = BYTE5(v14) & 1;
        *((_OWORD *)v7 + 3) = v26;
        v7[8] = v15;
        *((_BYTE *)v7 + 72) = v16 & 1;
        *((_OWORD *)v7 + 5) = v29;
        *((_OWORD *)v7 + 6) = v28;
        v7[14] = v27;
        *((_BYTE *)v7 + 122) = (v24 | (v25 << 16)) >> 16;
        *((_WORD *)v7 + 60) = v24;
        v4 = v20;
        v3 = v21;
      }
      ++v6;
      if (v12 == v4)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A909BD80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1A929B1F8(a1, (void (*)(_QWORD *__return_ptr, id *, uint64_t *))sub_1A929B518);
  if (*(_QWORD *)(v1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4348);
    v2 = sub_1A93F8E8C();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v5 = v2;
  v3 = swift_bridgeObjectRetain();
  sub_1A909BE4C(v3, 1, &v5);
  swift_bridgeObjectRelease();
  return v5;
}

void sub_1A909BE4C(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  unint64_t v52;
  __int128 v53;
  _BYTE v54[27];
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _BYTE v59[27];
  uint64_t v60;

  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v40 = v3;
  if (!v3)
  {
LABEL_28:
    swift_bridgeObjectRelease_n();
    return;
  }
  v51 = 0;
  v52 = 0;
  while (1)
  {
    if (v52 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      sub_1A93F9258();
      __break(1u);
      goto LABEL_33;
    }
    v60 = *(_QWORD *)(a1 + v51 + 128);
    v4 = *(unsigned __int16 *)(a1 + v51 + 120) | (*(unsigned __int8 *)(a1 + v51 + 122) << 16);
    v49 = *(unsigned __int8 *)(a1 + v51 + 72);
    v5 = *(unsigned __int8 *)(a1 + v51 + 45);
    v6 = *(unsigned __int8 *)(a1 + v51 + 44);
    v43 = *(unsigned __int8 *)(a1 + v51 + 43);
    v44 = *(unsigned __int8 *)(a1 + v51 + 42);
    v47 = *(unsigned __int8 *)(a1 + v51 + 41);
    v48 = *(unsigned __int8 *)(a1 + v51 + 40);
    v7 = *(_QWORD *)(a1 + v51 + 32);
    v9 = *(_QWORD *)(a1 + v51 + 104);
    v8 = *(_QWORD *)(a1 + v51 + 112);
    v10 = *(_QWORD *)(a1 + v51 + 88);
    v11 = *(_QWORD *)(a1 + v51 + 96);
    v12 = *(_QWORD *)(a1 + v51 + 80);
    v13 = *(_QWORD *)(a1 + v51 + 48);
    v45 = *(_QWORD *)(a1 + v51 + 56);
    v46 = *(_QWORD *)(a1 + v51 + 64);
    swift_bridgeObjectRetain();
    sub_1A909F54C(v12, v10, v11, v9, v8);
    swift_bridgeObjectRetain();
    if (!v7)
      goto LABEL_28;
    v14 = 0x10000000000;
    if (!v5)
      v14 = 0;
    v15 = 0x100000000;
    if (!v6)
      v15 = 0;
    v16 = v15 | v14;
    v17 = 0x1000000;
    if (!v43)
      v17 = 0;
    v18 = 0x10000;
    if (!v44)
      v18 = 0;
    v19 = v16 | v17 | v18;
    v20 = 256;
    if (!v47)
      v20 = 0;
    *(_QWORD *)&v55 = v7;
    *((_QWORD *)&v55 + 1) = v19 | v20 | v48;
    *(_QWORD *)&v56 = v13;
    *((_QWORD *)&v56 + 1) = v45;
    *(_QWORD *)&v57 = v46;
    *((_QWORD *)&v57 + 1) = v49;
    *(_QWORD *)&v58 = v12;
    *((_QWORD *)&v58 + 1) = v10;
    *(_QWORD *)v59 = v11;
    *(_QWORD *)&v59[8] = v9;
    v53 = v58;
    *(_QWORD *)&v59[16] = v8;
    *(_WORD *)&v59[24] = v4;
    v59[26] = BYTE2(v4);
    *(_OWORD *)v54 = *(_OWORD *)v59;
    *(_OWORD *)&v54[11] = *(_OWORD *)&v59[11];
    v21 = (_QWORD *)*a3;
    v23 = sub_1A912E7A4(&v55);
    v24 = v21[2];
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
      goto LABEL_30;
    v27 = v22;
    if (v21[3] < v26)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v22 & 1) != 0)
        goto LABEL_26;
    }
    else
    {
      sub_1A930A1BC();
      if ((v27 & 1) != 0)
        goto LABEL_26;
    }
LABEL_22:
    v30 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    v31 = (_OWORD *)(v30[6] + 96 * v23);
    v32 = v58;
    v33 = *(_OWORD *)v59;
    v34 = v56;
    v31[2] = v57;
    v31[3] = v32;
    v31[4] = v33;
    *(_OWORD *)((char *)v31 + 75) = *(_OWORD *)&v59[11];
    *v31 = v55;
    v31[1] = v34;
    *(_QWORD *)(v30[7] + 8 * v23) = v60;
    v35 = v30[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_31;
    v30[2] = v37;
    v51 += 104;
    ++v52;
    a2 = 1;
    if (v40 == v52)
      goto LABEL_28;
  }
  sub_1A930413C(v26, a2 & 1);
  v28 = sub_1A912E7A4(&v55);
  if ((v27 & 1) != (v29 & 1))
    goto LABEL_32;
  v23 = v28;
  if ((v27 & 1) == 0)
    goto LABEL_22;
LABEL_26:
  v38 = (void *)swift_allocError();
  swift_willThrow();
  v39 = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A909F000(v53, *((uint64_t *)&v53 + 1), v54[0], *(uint64_t *)&v54[8], *(uint64_t *)&v54[16]);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_33:
  sub_1A93F8C70();
  sub_1A93F810C();
  sub_1A93F8DE4();
  sub_1A93F810C();
  sub_1A93F8E14();
  __break(1u);
}

uint64_t sub_1A909C2C0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1A93F762C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A909C324(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1A909C324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  const char *v23;
  uint64_t v24;
  uint8_t *v25;
  os_signpost_id_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  double v52;
  char *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[3];
  uint64_t v64;

  v57 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v5);
  v55 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F738C();
  v60 = *(_QWORD *)(v7 - 8);
  v61 = v7;
  MEMORY[0x1E0C80A78](v7);
  v54 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v59 = (char *)&v54 - v10;
  v11 = sub_1A93F7638();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F75FC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v54 - v20;
  v58 = a3 + 16;
  v22 = sub_1A93F7620();
  sub_1A93F7644();
  v56 = sub_1A93F8934();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    swift_retain();
    sub_1A93F7668();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v14, v11) == *MEMORY[0x1E0DF2190])
    {
      v23 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v23 = "";
    }
    v24 = v58;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    v26 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v22, (os_signpost_type_t)v56, v26, "Ping", v23, v25, 2u);
    MEMORY[0x1AF41411C](v25, -1, -1);

    v27 = *(void (**)(char *, uint64_t))(v16 + 8);
    v27(v21, v15);
    v27(v18, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    v24 = v58;
  }
  v28 = v59;
  sub_1A93F7374();
  swift_beginAccess();
  v29 = MEMORY[0x1AF41420C](v24);
  v31 = v60;
  v30 = v61;
  if (v29)
  {
    v32 = (_BYTE *)v29;
    v33 = OBJC_IVAR___PFManagedObjectContextMonitor_lock;
    v34 = *(os_unfair_lock_s **)(v29 + OBJC_IVAR___PFManagedObjectContextMonitor_lock);
    swift_retain();
    os_unfair_lock_lock(v34 + 4);
    swift_release();
    v35 = *(_QWORD *)&v32[OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer];
    if (v35 && v35 == v57)
    {
      v36 = v57 + OBJC_IVAR____TtC18PodcastsFoundationP33_ACA32E4676063C24D8CDAE723F3FF8C510MultiTimer_startDate;
      swift_beginAccess();
      v37 = v55;
      sub_1A90A1CA8(v36, v55);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v37, 1, v30) != 1)
      {
        v51 = v54;
        (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v54, v37, v30);
        sub_1A93F72FC();
        sub_1A909C998(v52);
        v32[OBJC_IVAR___PFManagedObjectContextMonitor_status] = 1;
        sub_1A909CD7C();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v51, v30);
        goto LABEL_22;
      }
      sub_1A90AC3A4(v37);
      if (qword_1ED2AC9E0 != -1)
        swift_once();
      v38 = sub_1A93F7698();
      __swift_project_value_buffer(v38, (uint64_t)qword_1ED2AD000);
      v39 = v32;
      v40 = sub_1A93F7674();
      v41 = sub_1A93F879C();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        v43 = swift_slowAlloc();
        v64 = v43;
        *(_DWORD *)v42 = 136446210;
        v44 = sub_1A93F8CA0();
        v62 = sub_1A906436C(v44, v45, &v64);
        v28 = v59;
        v31 = v60;
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        v46 = "%{public}s - Timer was never started. Be sure the timer is always started before scheduling the block.";
LABEL_19:
        _os_log_impl(&dword_1A904E000, v40, v41, v46, v42, 0xCu);
        swift_arrayDestroy();
        v50 = v43;
        v30 = v61;
        MEMORY[0x1AF41411C](v50, -1, -1);
        MEMORY[0x1AF41411C](v42, -1, -1);

LABEL_22:
        os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)&v32[v33] + 16));

        return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v28, v30);
      }
    }
    else
    {
      if (qword_1ED2AC9E0 != -1)
        swift_once();
      v47 = sub_1A93F7698();
      __swift_project_value_buffer(v47, (uint64_t)qword_1ED2AD000);
      v39 = v32;
      v40 = sub_1A93F7674();
      v41 = sub_1A93F879C();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        v43 = swift_slowAlloc();
        v63[0] = v43;
        *(_DWORD *)v42 = 136446210;
        v48 = sub_1A93F8CA0();
        v64 = sub_1A906436C(v48, v49, v63);
        v28 = v59;
        v31 = v60;
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        v46 = "%{public}s - ManagedObjectContextMonitor switched to a new multitimer ";
        goto LABEL_19;
      }
    }

    goto LABEL_22;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v28, v30);
}

void sub_1A909C998(double a1)
{
  char *v1;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(*(_QWORD *)&v1[OBJC_IVAR___PFManagedObjectContextMonitor_lock]
                                                     + 16));
  if (v1[OBJC_IVAR___PFManagedObjectContextMonitor_status])
  {
    if (v1[OBJC_IVAR___PFManagedObjectContextMonitor_status] == 1)
    {
      if (a1 > 0.1)
      {
        if (qword_1ED2AC9E0 != -1)
          swift_once();
        v3 = sub_1A93F7698();
        __swift_project_value_buffer(v3, (uint64_t)qword_1ED2AD000);
        v18 = v1;
        v4 = sub_1A93F7674();
        v5 = sub_1A93F8784();
        if (os_log_type_enabled(v4, v5))
        {
          v6 = swift_slowAlloc();
          v7 = swift_slowAlloc();
          v19 = v7;
          *(_DWORD *)v6 = 136446466;
          v8 = sub_1A93F8CA0();
          sub_1A906436C(v8, v9, &v19);
          sub_1A93F8AA8();

          swift_bridgeObjectRelease();
          *(_WORD *)(v6 + 12) = 2050;
          sub_1A93F8AA8();
          _os_log_impl(&dword_1A904E000, v4, v5, "%{public}s - Ping end after %{public}fs", (uint8_t *)v6, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v7, -1, -1);
          MEMORY[0x1AF41411C](v6, -1, -1);

        }
        else
        {

        }
      }
    }
    else
    {
      if (qword_1ED2AC9E0 != -1)
        swift_once();
      v10 = sub_1A93F7698();
      __swift_project_value_buffer(v10, (uint64_t)qword_1ED2AD000);
      v11 = v1;
      v12 = sub_1A93F7674();
      v13 = sub_1A93F879C();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = swift_slowAlloc();
        v15 = swift_slowAlloc();
        v19 = v15;
        *(_DWORD *)v14 = 136446466;
        v16 = sub_1A93F8CA0();
        sub_1A906436C(v16, v17, &v19);
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2050;
        sub_1A93F8AA8();
        _os_log_impl(&dword_1A904E000, v12, v13, "[CD HANG] [RESOLVED] %{public}s is no longer hanging after %{public}fs.", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v15, -1, -1);
        MEMORY[0x1AF41411C](v14, -1, -1);

      }
      else
      {

      }
      sub_1A9398EA4(a1);
    }
  }
}

uint64_t sub_1A909CD7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t i;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(*(_QWORD *)(v0 + OBJC_IVAR___PFManagedObjectContextMonitor_lock)
                                                     + 16));
  v1 = OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer);
  if (!v2)
    goto LABEL_13;
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 48);
  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    result = swift_retain();
    if (v4)
      goto LABEL_4;
LABEL_12:
    swift_bridgeObjectRelease_n();
    swift_getObjectType();
    sub_1A93F891C();
    swift_release();
LABEL_13:
    *(_QWORD *)(v0 + v1) = 0;
    result = swift_release();
    *(_BYTE *)(v0 + OBJC_IVAR___PFManagedObjectContextMonitor_loggedFault) = 0;
    return result;
  }
  swift_bridgeObjectRetain_n();
  swift_retain();
  result = sub_1A93F8E5C();
  v4 = result;
  if (!result)
    goto LABEL_12;
LABEL_4:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        MEMORY[0x1AF4129DC](i, v3);
      else
        swift_retain();
      sub_1A93F7E00();
      swift_release();
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_1A909CEE8()
{
  uint64_t v0;

  sub_1A909FC60(v0);
}

void sub_1A909CEF0()
{
  uint64_t v0;

  sub_1A909CEFC(*(void (**)(void *, _QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(id *)(v0 + 40));
}

void sub_1A909CEFC(void (*a1)(void *, _QWORD), int a2, int a3, id a4)
{
  unint64_t v5;
  void *v6;

  objc_msgSend(a4, sel_setResultType_, 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9430);
  v5 = sub_1A93F89DC();
  v6 = (void *)sub_1A909D004(v5);
  swift_bridgeObjectRelease();
  if (!v6)
    v6 = (void *)MEMORY[0x1E0DEE9D8];
  a1(v6, 0);
  sub_1A909CFC0(v6, 0);
}

void sub_1A909CFC0(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_1A909CFCC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_1A909D004(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    v3 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1A909D1F8(0, v3 & ~(v3 >> 63), 0);
  v4 = v12;
  if (!v2)
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      return v4;
LABEL_7:
    for (i = 4; ; ++i)
    {
      v6 = i - 4;
      if ((a1 & 0xC000000000000001) != 0)
      {
        MEMORY[0x1AF4129DC](i - 4, a1);
        v7 = i - 3;
        if (__OFADD__(v6, 1))
          goto LABEL_22;
      }
      else
      {
        swift_unknownObjectRetain();
        v7 = i - 3;
        if (__OFADD__(v6, 1))
        {
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9430);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92B0);
      if (!swift_dynamicCast())
      {
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A909D1F8(0, *(_QWORD *)(v4 + 16) + 1, 1);
        v4 = v12;
      }
      v9 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1A909D1F8(v8 > 1, v9 + 1, 1);
        v4 = v12;
      }
      *(_QWORD *)(v4 + 16) = v9 + 1;
      *(_QWORD *)(v4 + 8 * v9 + 32) = v11;
      if (v7 == v2)
        return v4;
    }
  }
  swift_bridgeObjectRetain();
  v2 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (v2)
    goto LABEL_7;
  return v4;
}

uint64_t sub_1A909D1F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A909D224(a1, a2, a3, (_QWORD *)*v3, &qword_1ED2A9720, &qword_1ED2A92B0);
  *v3 = result;
  return result;
}

uint64_t sub_1A909D224(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A909D3B0()
{
  uint64_t v0;

  return sub_1A909D3C4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1A909D3C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  void *v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64x2_t v52;
  int16x8_t v53;
  __int128 v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  id v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  char *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint8_t *v101;
  uint64_t v102;
  uint64_t (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  uint8_t *v105;
  id v106;
  __int128 v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  unint64_t v118;
  __int128 v119;
  uint64_t v120;
  char v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  __int16 v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;

  v113 = a5;
  v116 = a4;
  v7 = sub_1A93F7698();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v112 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint8_t *)&v101 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v101 - v14;
  v16 = sub_1A93F75FC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  v115 = result;
  if (result)
  {
    v106 = v15;
    v105 = v12;
    *(_QWORD *)&v110 = v8;
    *(_QWORD *)&v109 = v7;
    sub_1A93F8940();
    if (qword_1ED2A42C0 != -1)
      swift_once();
    swift_beginAccess();
    v21 = (id)qword_1ED2A42B0;
    v22 = v115;
    sub_1A909E378((uint64_t)v19);
    v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
    v24 = swift_allocObject();
    v114 = v19;
    v25 = (_QWORD *)v24;
    v107 = xmmword_1A9405520;
    *(_OWORD *)(v24 + 16) = xmmword_1A9405520;
    v117 = a2;
    v118 = a3;
    LOBYTE(v119) = v116 & 1;
    v108 = a2;
    *(_QWORD *)&v111 = a3;
    sub_1A9086E60(a2, a3, v116 & 1);
    v26 = sub_1A93F8094();
    v28 = v27;
    v25[7] = MEMORY[0x1E0DEA968];
    v29 = sub_1A90A92DC();
    v25[8] = v29;
    v25[4] = v26;
    v25[5] = v28;
    sub_1A93F75B4();

    v30 = (uint64_t)v114;
    swift_bridgeObjectRelease();
    v31 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v31(v30, v16);
    v32 = *(void **)(v22 + 16);
    sub_1A909E53C();
    v33 = v32;
    v34 = sub_1A93F89DC();
    v113 = v23;
    v112 = (char *)v29;

    if (v34 >> 62)
    {
      swift_bridgeObjectRetain();
      v35 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v36 = v111;
    v37 = v105;
    v38 = v106;
    v104 = v16;
    if (v35)
    {
      if ((v34 & 0xC000000000000001) != 0)
      {
        v39 = (id)MEMORY[0x1AF4129DC](0, v34);
        goto LABEL_10;
      }
      if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v39 = *(id *)(v34 + 32);
LABEL_10:
        v40 = v39;
        swift_bridgeObjectRelease();
        v41 = v40;
        v42 = MTEpisode.allEpisodeStateIdentifiers.getter();
        sub_1A909F660(v41, v42, (uint64_t)&v117);
        v43 = v117;
        if (v117)
        {
          v44 = v125;
          v103 = (uint64_t (*)(uint64_t, uint64_t))v31;
          v45 = v126;
          v46 = v124;
          v111 = v123;
          v110 = v122;
          v47 = v121;
          v48 = v120;
          v109 = v119;
          v49 = v36;
          v50 = v118;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4450);
          v51 = swift_allocObject();
          *(_OWORD *)(v51 + 16) = v107;
          *(_QWORD *)(v51 + 32) = v43;
          v52 = (uint64x2_t)vdupq_n_s64(v50);
          *(_BYTE *)(v51 + 40) = v50 & 1;
          v53 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v52, (uint64x2_t)xmmword_1A9406780), (int32x4_t)vshlq_u64(v52, (uint64x2_t)xmmword_1A9406770));
          *(int8x8_t *)v53.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v53), (int8x8_t)0x1000100010001);
          *(_DWORD *)(v51 + 41) = vmovn_s16(v53).u32[0];
          *(_BYTE *)(v51 + 45) = BYTE5(v50) & 1;
          *(_OWORD *)(v51 + 48) = v109;
          *(_QWORD *)(v51 + 64) = v48;
          *(_BYTE *)(v51 + 72) = v47 & 1;
          v54 = v111;
          *(_OWORD *)(v51 + 80) = v110;
          *(_OWORD *)(v51 + 96) = v54;
          *(_QWORD *)(v51 + 112) = v46;
          *(_BYTE *)(v51 + 122) = v45;
          *(_WORD *)(v51 + 120) = v44;
          v55 = MEMORY[0x1E0DEE9D8];
          v56 = sub_1A909E634(MEMORY[0x1E0DEE9D8]);
          v117 = v51;
          v118 = v56;
          *(_QWORD *)&v119 = v55;
          swift_retain();
          sub_1A93F7974();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_1A93F8934();
          v57 = (id)qword_1ED2A42B0;
          sub_1A909E378(v30);
          v58 = swift_allocObject();
          *(_OWORD *)(v58 + 16) = v107;
          v117 = v108;
          v118 = v49;
          LOBYTE(v119) = v116 & 1;
          sub_1A9086E60(v108, v49, v116 & 1);
          v59 = sub_1A93F8094();
          v60 = v112;
          *(_QWORD *)(v58 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v58 + 64) = v60;
          *(_QWORD *)(v58 + 32) = v59;
          *(_QWORD *)(v58 + 40) = v61;
          sub_1A93F75B4();

          swift_release();
          swift_bridgeObjectRelease();
          return v103(v30, v104);
        }
        if (qword_1ED2A42A8 != -1)
          swift_once();
        v74 = v109;
        v75 = __swift_project_value_buffer(v109, (uint64_t)qword_1ED2A4290);
        swift_beginAccess();
        v76 = v110;
        (*(void (**)(uint8_t *, uint64_t, uint64_t))(v110 + 16))(v37, v75, v74);
        v106 = v41;
        v77 = sub_1A93F7674();
        v78 = sub_1A93F879C();
        if (os_log_type_enabled(v77, v78))
        {
          v79 = (uint8_t *)swift_slowAlloc();
          v102 = swift_slowAlloc();
          v127 = v102;
          v103 = (uint64_t (*)(uint64_t, uint64_t))v31;
          *(_DWORD *)v79 = 136380675;
          v101 = v79 + 4;
          v80 = v106;
          v81 = objc_msgSend(v80, sel_description);
          v82 = sub_1A93F8040();
          v84 = v83;

          v130 = sub_1A906436C(v82, v84, &v127);
          v31 = (void (*)(uint64_t, uint64_t))v103;
          sub_1A93F8AA8();

          v36 = v111;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A904E000, v77, v78, "Can't create an EpisodeStateModel for MTEpisode: %{private}s", v79, 0xCu);
          v85 = v102;
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v85, -1, -1);
          MEMORY[0x1AF41411C](v79, -1, -1);

          (*(void (**)(uint8_t *, uint64_t))(v110 + 8))(v105, v74);
        }
        else
        {

          v94 = v106;
          (*(void (**)(uint8_t *, uint64_t))(v76 + 8))(v37, v74);
        }
        v95 = MEMORY[0x1E0DEA968];
        v96 = v112;
        sub_1A93F8934();
        v97 = (id)qword_1ED2A42B0;
        sub_1A909E378(v30);
        v98 = swift_allocObject();
        *(_OWORD *)(v98 + 16) = v107;
        v127 = v108;
        v128 = v36;
        v129 = v116 & 1;
        sub_1A9086E60(v108, v36, v116 & 1);
        v99 = sub_1A93F8094();
        *(_QWORD *)(v98 + 56) = v95;
        *(_QWORD *)(v98 + 64) = v96;
        *(_QWORD *)(v98 + 32) = v99;
        *(_QWORD *)(v98 + 40) = v100;
        sub_1A93F75B4();

        swift_release();
        swift_bridgeObjectRelease();
        v93 = v30;
        return ((uint64_t (*)(uint64_t, uint64_t))v31)(v93, v104);
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_1ED2A42A8 == -1)
      {
LABEL_13:
        v62 = v109;
        v63 = __swift_project_value_buffer(v109, (uint64_t)qword_1ED2A4290);
        swift_beginAccess();
        v64 = v110;
        (*(void (**)(id, uint64_t, uint64_t))(v110 + 16))(v38, v63, v62);
        v65 = v116 & 1;
        v66 = v108;
        sub_1A9086E60(v108, v36, v116 & 1);
        sub_1A9086E60(v66, v36, v65);
        v67 = sub_1A93F7674();
        v68 = sub_1A93F879C();
        if (os_log_type_enabled(v67, v68))
        {
          v69 = (uint8_t *)swift_slowAlloc();
          v70 = swift_slowAlloc();
          v103 = (uint64_t (*)(uint64_t, uint64_t))v31;
          *(_DWORD *)v69 = 136380675;
          v130 = v70;
          v105 = v69 + 4;
          v127 = v66;
          v128 = v111;
          v129 = v65;
          sub_1A9086E60(v66, v111, v65);
          v71 = sub_1A93F8094();
          v127 = sub_1A906436C(v71, v72, &v130);
          v31 = (void (*)(uint64_t, uint64_t))v103;
          sub_1A93F8AA8();
          swift_bridgeObjectRelease();
          sub_1A9086E08(v66, v111, v65);
          sub_1A9086E08(v66, v111, v65);
          _os_log_impl(&dword_1A904E000, v67, v68, "Can't fetch any episode for identifier: %{private}s", v69, 0xCu);
          swift_arrayDestroy();
          v73 = v70;
          v36 = v111;
          MEMORY[0x1AF41411C](v73, -1, -1);
          MEMORY[0x1AF41411C](v69, -1, -1);

          (*(void (**)(id, uint64_t))(v64 + 8))(v106, v62);
        }
        else
        {
          sub_1A9086E08(v66, v36, v65);
          sub_1A9086E08(v66, v36, v65);

          (*(void (**)(id, uint64_t))(v64 + 8))(v38, v62);
        }
        v86 = MEMORY[0x1E0DEA968];
        v87 = v112;
        sub_1A93F8934();
        v88 = (id)qword_1ED2A42B0;
        v89 = (uint64_t)v114;
        sub_1A909E378((uint64_t)v114);
        v90 = swift_allocObject();
        *(_OWORD *)(v90 + 16) = v107;
        v127 = v66;
        v128 = v36;
        v129 = v116 & 1;
        sub_1A9086E60(v66, v36, v116 & 1);
        v91 = sub_1A93F8094();
        *(_QWORD *)(v90 + 56) = v86;
        *(_QWORD *)(v90 + 64) = v87;
        *(_QWORD *)(v90 + 32) = v91;
        *(_QWORD *)(v90 + 40) = v92;
        sub_1A93F75B4();
        swift_release();

        swift_bridgeObjectRelease();
        v93 = v89;
        return ((uint64_t (*)(uint64_t, uint64_t))v31)(v93, v104);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1A909E378@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC900);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - v7;
  v9 = v1 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository____lazy_storage___signpostID;
  swift_beginAccess();
  sub_1A9066554(v9, (uint64_t)v8);
  v10 = sub_1A93F75FC();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_1A906659C((uint64_t)v8);
  if (qword_1ED2A42C0 != -1)
    swift_once();
  swift_beginAccess();
  v12 = (id)qword_1ED2A42B0;
  swift_retain();
  sub_1A93F75CC();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess();
  sub_1A908A030((uint64_t)v5, v9);
  return swift_endAccess();
}

unint64_t sub_1A909E53C()
{
  unint64_t result;

  result = qword_1ED2A1CA0;
  if (!qword_1ED2A1CA0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2A1CA0);
  }
  return result;
}

uint64_t MTEpisode.allEpisodeStateIdentifiers.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_uuid);
  if (v2)
  {
    v3 = v2;
    v4 = sub_1A93F8040();
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = (uint64_t)objc_msgSend(v1, sel_storeTrackId);
  v8 = objc_msgSend((id)objc_opt_self(), sel_isEmpty_, v7);
  if ((_DWORD)v8)
    v9 = 0;
  else
    v9 = v7 & ~(v7 >> 63);
  v10 = sub_1A93A3638(v4, v6, v9, (unint64_t)v8);
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1A909E634(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int16 v20;
  uint64_t v21;
  unint64_t result;
  char v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[27];

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4348);
  v2 = sub_1A93F8E8C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v30 = v2 + 64;
  swift_retain();
  v5 = (_QWORD *)(a1 + 128);
  while (1)
  {
    v6 = *((_BYTE *)v5 - 88);
    v7 = *((_BYTE *)v5 - 87);
    v8 = *((_BYTE *)v5 - 86);
    v9 = *((_BYTE *)v5 - 85);
    v10 = *((_BYTE *)v5 - 84);
    v11 = *((_BYTE *)v5 - 83);
    v12 = *(v5 - 8);
    v13 = *((_BYTE *)v5 - 56);
    v14 = *(v5 - 6);
    v15 = *(v5 - 5);
    v16 = *(v5 - 4);
    v17 = *(v5 - 3);
    v18 = *(v5 - 2);
    v19 = *((_BYTE *)v5 - 6);
    v20 = *((_WORD *)v5 - 4);
    v21 = *v5;
    *(_QWORD *)&v31 = *(v5 - 12);
    BYTE8(v31) = v6;
    BYTE9(v31) = v7;
    BYTE10(v31) = v8;
    BYTE11(v31) = v9;
    BYTE12(v31) = v10;
    BYTE13(v31) = v11;
    v32 = *((_OWORD *)v5 - 5);
    *(_QWORD *)&v33 = v12;
    BYTE8(v33) = v13;
    *(_QWORD *)&v34 = v14;
    *((_QWORD *)&v34 + 1) = v15;
    *(_QWORD *)v35 = v16;
    *(_QWORD *)&v35[8] = v17;
    *(_QWORD *)&v35[16] = v18;
    v35[26] = v19;
    *(_WORD *)&v35[24] = v20;
    swift_bridgeObjectRetain();
    sub_1A909F54C(v14, v15, v16, v17, v18);
    swift_bridgeObjectRetain();
    result = sub_1A912E7A4(&v31);
    if ((v23 & 1) != 0)
      break;
    *(_QWORD *)(v30 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v24 = (_OWORD *)(v3[6] + 96 * result);
    v25 = v34;
    v24[2] = v33;
    v24[3] = v25;
    v24[4] = *(_OWORD *)v35;
    *(_OWORD *)((char *)v24 + 75) = *(_OWORD *)&v35[11];
    v26 = v32;
    *v24 = v31;
    v24[1] = v26;
    *(_QWORD *)(v3[7] + 8 * result) = v21;
    v27 = v3[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_11;
    v3[2] = v29;
    v5 += 13;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A909E810()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4320);
  v3 = sub_1A93F8C34();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v32 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v31 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v15 >= v31)
          goto LABEL_36;
        v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v31)
            goto LABEL_36;
          v16 = v32[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v31)
              goto LABEL_36;
            v16 = v32[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_36:
                swift_release();
                v1 = v0;
                v30 = 1 << *(_BYTE *)(v2 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_42;
                  if (v10 >= v31)
                    goto LABEL_36;
                  v16 = v32[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = *(_QWORD *)(v2 + 48) + 24 * v14;
      v20 = *(_QWORD *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = *(unsigned __int8 *)(v19 + 16);
      sub_1A93F92DC();
      sub_1A93F92E8();
      if (v22 == 1)
        sub_1A93F7FBC();
      else
        sub_1A93F930C();
      result = sub_1A93F9324();
      v23 = -1 << *(_BYTE *)(v4 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
      *(_QWORD *)v12 = v20;
      *(_QWORD *)(v12 + 8) = v21;
      *(_BYTE *)(v12 + 16) = v22;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A909EB48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4320);
  v3 = sub_1A93F8C34();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_38:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v29 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v30 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v30)
      goto LABEL_36;
    v16 = *(_QWORD *)(v29 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v30)
        goto LABEL_36;
      v16 = *(_QWORD *)(v29 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v30)
          goto LABEL_36;
        v16 = *(_QWORD *)(v29 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v2 + 48) + 24 * v14;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(unsigned __int8 *)(v18 + 16);
    sub_1A93F92DC();
    sub_1A93F92E8();
    if (v21 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1A93F7FBC();
    }
    else
    {
      sub_1A93F930C();
    }
    result = sub_1A93F9324();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v8 + 8 * v24);
      }
      while (v28 == -1);
      v11 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
    *(_QWORD *)v12 = v19;
    *(_QWORD *)(v12 + 8) = v20;
    *(_BYTE *)(v12 + 16) = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v30)
  {
LABEL_36:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_38;
  }
  v16 = *(_QWORD *)(v29 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v16 = *(_QWORD *)(v29 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

id sub_1A909EE48()
{
  uint64_t v0;

  return sub_1A909EE50(v0);
}

id sub_1A909EE50(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  type metadata accessor for FeedUpdateRequest();
  sub_1A93F7170();
  v2 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_podcastForFeedUrl_, v2);

  if (v3)
  {
    objc_msgSend((id)objc_opt_self(), sel_timeIntervalSinceReferenceDate);
    objc_msgSend(v3, sel_setLastFetchedDate_);

  }
  return objc_msgSend(v1, sel_saveInCurrentBlock);
}

void sub_1A909EFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A909F000(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    sub_1A909F1A0(result, a2, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

double PodcastStateModel.init(podcast:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  unsigned __int16 v15;
  unsigned int v16;
  unsigned int v17;
  double result;
  __int16 v19;

  if (!a1)
    goto LABEL_10;
  v3 = a1;
  v4 = objc_msgSend(v3, sel_uuid);
  if (!v4)
  {
LABEL_9:

LABEL_10:
    result = 0.0;
    *(_OWORD *)(a2 + 27) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  v5 = v4;
  v6 = sub_1A93F8040();
  v8 = v7;

  v9 = MTPodcast.identifier.getter();
  if (v11 == 0xFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v12 = v9;
  v13 = v10;
  v14 = v11;
  v15 = (unsigned __int16)objc_msgSend(v3, sel_hidden);
  v16 = objc_msgSend(v3, sel_subscribed);
  v17 = objc_msgSend(v3, sel_isImplicitlyFollowed);

  if (v16)
    v19 = 256;
  else
    v19 = 0;
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v14;
  *(_QWORD *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v8;
  *(_BYTE *)(a2 + 42) = v17 != 0;
  *(_WORD *)(a2 + 40) = v19 | v15;
  return result;
}

uint64_t destroy for EpisodeStateModel(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80))
  {
    sub_1A909F1A0(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A909F1A0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 - 1 <= 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t MTPodcast.identifier.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  id v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v1 = objc_msgSend(v0, sel_uuid);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1A93F8040();

    if ((objc_msgSend((id)objc_opt_self(), sel_isEmpty_, objc_msgSend(v0, sel_storeCollectionId)) & 1) != 0)
      return v3;
    v4 = (unint64_t)objc_msgSend(v0, sel_storeCollectionId);
    if ((v4 & 0x8000000000000000) != 0)
      return v3;
    v5 = v4;
    if (!v4 || v4 == 1000000000000)
      return v3;
    else
      swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED2A3F00 != -1)
      swift_once();
    v6 = sub_1A93F7698();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A3EE0);
    v7 = v0;
    v8 = sub_1A93F7674();
    v9 = sub_1A93F879C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = 0x3E7974706D653CLL;
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v25 = v12;
      *(_DWORD *)v11 = 136381187;
      v13 = objc_msgSend(v7, sel_title);
      if (v13)
      {
        v14 = v13;
        v15 = sub_1A93F8040();
        v17 = v16;

      }
      else
      {
        v17 = 0xE700000000000000;
        v15 = 0x3E7974706D653CLL;
      }
      v24 = sub_1A906436C(v15, v17, &v25);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2049;
      v18 = objc_msgSend(v7, sel_storeCollectionId, v24);

      sub_1A93F8AA8();
      *(_WORD *)(v11 + 22) = 2081;
      v19 = objc_msgSend(v7, sel_feedURL, v18);
      if (v19)
      {
        v20 = v19;
        v10 = sub_1A93F8040();
        v22 = v21;

      }
      else
      {
        v22 = 0xE700000000000000;
      }
      sub_1A906436C(v10, v22, &v25);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v8, v9, "MTPodcast with nil UUID, this doesn't make much sense. Podcast title %{private}s, adamID %{private}lld, feedURL %{private}s", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v12, -1, -1);
      MEMORY[0x1AF41411C](v11, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  return v5;
}

uint64_t sub_1A909F54C(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    sub_1A909F644(result, a2, a3);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t initializeWithCopy for EpisodeStateModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 48);
    v6 = *(_QWORD *)(a2 + 56);
    v7 = *(_BYTE *)(a2 + 64);
    sub_1A909F644(v5, v6, v7);
    *(_QWORD *)(a1 + 48) = v5;
    *(_QWORD *)(a1 + 56) = v6;
    *(_BYTE *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v4;
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    *(_WORD *)(a1 + 89) = *(_WORD *)(a2 + 89);
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
  }
  return a1;
}

uint64_t sub_1A909F644(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 - 1 <= 1)
    return swift_bridgeObjectRetain();
  return result;
}

void sub_1A909F660(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X8>)
{
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  id v9;
  void *v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  float v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  __int16 v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[2];
  uint64_t v31;
  __int16 v32;
  char v33;

  if (*(_QWORD *)(a2 + 16))
  {
    v6 = objc_msgSend(a1, sel_isDownloaded);
    v7 = objc_msgSend(a1, sel_isFromITunesSync);
    v8 = objc_msgSend(a1, sel_isBookmarked);
    v9 = objc_msgSend(a1, sel_podcast);
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, sel_hidden);

      if (v11)
        v12 = 0x1000000;
      else
        v12 = 0;
    }
    else
    {
      v12 = 0;
    }
    if ((objc_msgSend(a1, sel_isPartiallyPlayed) & 1) != 0)
    {
      v13 = 0x100000000;
    }
    else
    {
      v13 = 0x100000000;
      if ((objc_msgSend(a1, sel_isPartiallyPlayedBackCatalogItem) & 1) == 0
        && !objc_msgSend(a1, sel_isPlayheadPartiallyPlayed))
      {
        v13 = 0;
      }
    }
    if (objc_msgSend(a1, sel_isPlayed))
    {
      if (objc_msgSend(a1, sel_isBackCatalogItem))
        v14 = 0;
      else
        v14 = 0x10000000000;
    }
    else
    {
      v14 = 0;
    }
    objc_msgSend(a1, sel_playhead);
    v16 = v15;
    objc_msgSend(a1, sel_duration);
    v18 = v17;
    objc_msgSend(a1, sel_lastDatePlayed);
    v20 = v19;
    v21 = sub_1A909F8C0(a1);
    PodcastStateModel.init(podcast:)(objc_msgSend(a1, sel_podcast), (uint64_t)v30);

    v22 = v31;
    v23 = v32;
    v24 = v33;
    v25 = 256;
    if (!v7)
      v25 = 0;
    v26 = v25 | v6;
    v27 = 0x10000;
    if (!v8)
      v27 = 0;
    v28 = v30[0];
    v29 = v30[1];
    *(_QWORD *)a3 = a2;
    *(_QWORD *)(a3 + 8) = v26 | v27 | v12 | v13 | v14;
    *(double *)(a3 + 16) = v16;
    *(_QWORD *)(a3 + 24) = v18;
    *(_QWORD *)(a3 + 32) = v20;
    *(_QWORD *)(a3 + 40) = v21 & 1;
    *(_OWORD *)(a3 + 48) = v28;
    *(_OWORD *)(a3 + 64) = v29;
    *(_QWORD *)(a3 + 80) = v22;
    *(_BYTE *)(a3 + 90) = v24;
    *(_WORD *)(a3 + 88) = v23;
  }
  else
  {
    swift_bridgeObjectRelease();

    *(_OWORD *)(a3 + 75) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
}

id sub_1A909F8C0(void *a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v2 = objc_msgSend(a1, sel_podcast);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = objc_msgSend(v2, sel_uuid);
  if (v4)
  {
    v5 = v4;
    if (objc_msgSend(a1, sel_isDownloaded)
      && objc_msgSend(v3, sel_deletePlayedEpisodesResolvedValue))
    {
      v6 = objc_msgSend((id)objc_opt_self(), sel_predicateForRecentlyPlayedEpisodesToBeDeletedOnPodcastUuid_deletePlayedEpisodes_, v5, 1);

      v7 = objc_msgSend(v6, sel_evaluateWithObject_, a1);
      v5 = v3;
      v3 = v6;
    }
    else
    {
      v7 = 0;
    }

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

uint64_t ManagedObjectContextMonitor.init(context:label:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)(void *a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  const char *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t result;
  _QWORD v22[2];

  v14 = sub_1A93F7698();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 1)
  {
    v17 = "ImportContext";
    v18 = 13;
LABEL_5:
    sub_1A93F7680();
    v19 = objc_allocWithZone((Class)type metadata accessor for ManagedObjectContextMonitor(0));
    v20 = ManagedObjectContextMonitor.init(context:label:sentryLogger:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)(a1, (uint64_t)v17, v18, 2, (uint64_t)v16, a3, a4, a5, a6, a7);
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return (uint64_t)v20;
  }
  if (!a2)
  {
    v17 = "PrivateContext";
    v18 = 14;
    goto LABEL_5;
  }
  v22[1] = a2;
  result = sub_1A93F921C();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ManagedObjectContextMonitor(uint64_t a1)
{
  return sub_1A9062BFC(a1, (uint64_t *)&unk_1ED2AD040);
}

void sub_1A909FC60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1AF41420C](v1);
  if (v2)
  {
    v3 = (void *)v2;
    if (!*(_QWORD *)(v2 + OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer))
      sub_1A909FCC0();

  }
}

void sub_1A909FCC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  NSObject *v19;
  os_signpost_type_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint8_t *v22;
  os_signpost_id_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_unfair_lock_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  _QWORD aBlock[15];

  v1 = v0;
  aBlock[13] = *MEMORY[0x1E0C80C00];
  ObjectType = swift_getObjectType();
  v3 = sub_1A93F762C();
  v44 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v44 + 64);
  MEMORY[0x1E0C80A78](v3);
  v43 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F75FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - v10;
  v12 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + OBJC_IVAR___PFManagedObjectContextMonitor_lock) + 16);
  os_unfair_lock_lock(v12);
  if (*(_BYTE *)(v1 + OBJC_IVAR___PFManagedObjectContextMonitor_status) == 1
    && (v13 = OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer,
        !*(_QWORD *)(v1 + OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer)))
  {
    v37 = v4;
    v39 = v3;
    v40 = ObjectType;
    v41 = v12;
    if (qword_1ED2ACFD0 != -1)
      swift_once();
    v14 = (void *)qword_1ED2ACFC0;
    v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MultiTimer(0);
    swift_allocObject();
    v16 = v14;
    v17 = sub_1A90A089C(v16, (uint64_t)sub_1A93990CC, v15);

    swift_release();
    *(_QWORD *)(v1 + v13) = v17;
    v42 = v17;
    swift_retain();
    swift_release();
    v18 = v1 + OBJC_IVAR___PFManagedObjectContextMonitor_signpost;
    sub_1A93F75F0();
    v38 = v18;
    v19 = sub_1A93F7620();
    v20 = sub_1A93F8940();
    if ((sub_1A93F8A6C() & 1) != 0)
    {
      v21 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v21(v8, v11, v5);
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      v23 = sub_1A93F75E4();
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v19, v20, v23, "Ping", "", v22, 2u);
      MEMORY[0x1AF41411C](v22, -1, -1);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {

      v21 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    }
    v24 = v37;
    v21(v8, v11, v5);
    sub_1A93F765C();
    swift_allocObject();
    v37 = sub_1A93F7650();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC938);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A94055A0;
    *(_QWORD *)(inited + 32) = *(_QWORD *)(v1 + OBJC_IVAR___PFManagedObjectContextMonitor_shortHangDuration);
    *(_QWORD *)(inited + 40) = *(_QWORD *)(v1 + OBJC_IVAR___PFManagedObjectContextMonitor_severeHangDuration);
    *(_QWORD *)(inited + 48) = *(_QWORD *)(v1 + OBJC_IVAR___PFManagedObjectContextMonitor_criticalHangDuration);
    sub_1A90A0A28((_QWORD *)inited, *(double *)(v1 + OBJC_IVAR___PFManagedObjectContextMonitor_criticalHangRepeatInterval));
    swift_setDeallocating();
    v36 = *(id *)(v1 + OBJC_IVAR___PFManagedObjectContextMonitor_context);
    v26 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v28 = v43;
    v27 = v44;
    v29 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, v38, v39);
    v30 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    v31 = (v24 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
    v34 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v34 + v30, v28, v29);
    *(_QWORD *)(v34 + v31) = v37;
    *(_QWORD *)(v34 + v32) = v26;
    *(_QWORD *)(v34 + v33) = v42;
    *(_QWORD *)(v34 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8)) = v40;
    aBlock[4] = sub_1A909C2C0;
    aBlock[5] = v34;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_28_0;
    v35 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v36, sel_performBlock_, v35);
    _Block_release(v35);
    swift_release();
    swift_release();
    os_unfair_lock_unlock(v41);
  }
  else
  {
    os_unfair_lock_unlock(v12);
  }
}

id ManagedObjectContextMonitor.init(context:label:sentryLogger:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10)
{
  _BYTE *v10;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  objc_class *v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t aBlock;
  uint64_t v64;
  uint64_t (*v65)(uint64_t);
  void *v66;
  void *v67;
  uint64_t v68;
  objc_super v69;

  v61 = a5;
  v58 = sub_1A93F7D58();
  v54 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v57 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1A93F7DB8();
  v53 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v55 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1A93F7698();
  v59 = *(_QWORD *)(v22 - 8);
  v60 = v22;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1A93F762C();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v26 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1A93F88A4();
  v49 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v48 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = OBJC_IVAR___PFManagedObjectContextMonitor_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v31 = swift_allocObject();
  *(_DWORD *)(v31 + 16) = 0;
  *(_QWORD *)&v10[v30] = v31;
  v10[OBJC_IVAR___PFManagedObjectContextMonitor_status] = 0;
  *(_QWORD *)&v10[OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer] = 0;
  v10[OBJC_IVAR___PFManagedObjectContextMonitor_loggedFault] = 0;
  *(_QWORD *)&v10[OBJC_IVAR___PFManagedObjectContextMonitor_context] = a1;
  v32 = &v10[OBJC_IVAR___PFManagedObjectContextMonitor_label];
  *(_QWORD *)v32 = a2;
  *((_QWORD *)v32 + 1) = a3;
  v32[16] = a4;
  *(double *)&v10[OBJC_IVAR___PFManagedObjectContextMonitor_pingInterval] = a6;
  *(double *)&v10[OBJC_IVAR___PFManagedObjectContextMonitor_shortHangDuration] = a7;
  *(double *)&v10[OBJC_IVAR___PFManagedObjectContextMonitor_severeHangDuration] = a8;
  *(double *)&v10[OBJC_IVAR___PFManagedObjectContextMonitor_criticalHangDuration] = a9;
  *(double *)&v10[OBJC_IVAR___PFManagedObjectContextMonitor_criticalHangRepeatInterval] = a10;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC930);
  v33 = qword_1ED2ACFD0;
  v34 = v10;
  v52 = a1;
  if (v33 != -1)
    swift_once();
  aBlock = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8(&qword_1ED2AD190, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938], MEMORY[0x1E0DEF948]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD178);
  sub_1A9066DB4((unint64_t *)&unk_1ED2AD180, &qword_1ED2AD178);
  sub_1A93F8B5C();
  v35 = sub_1A93F88B0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v29, v27);
  *(_QWORD *)&v34[OBJC_IVAR___PFManagedObjectContextMonitor_pingTimer] = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v24, v61, v60);
  sub_1A93F7614();
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v34[OBJC_IVAR___PFManagedObjectContextMonitor_signpost], v26, v51);

  v36 = (objc_class *)type metadata accessor for ManagedObjectContextMonitor(0);
  v69.receiver = v34;
  v69.super_class = v36;
  v37 = objc_msgSendSuper2(&v69, sel_init);
  swift_getObjectType();
  v38 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v67 = sub_1A909CEE8;
  v68 = v38;
  aBlock = MEMORY[0x1E0C809B0];
  v64 = 1107296256;
  v65 = sub_1A908A91C;
  v66 = &block_descriptor_78;
  v39 = _Block_copy(&aBlock);
  v40 = v37;
  swift_unknownObjectRetain();
  swift_retain();
  v41 = v55;
  sub_1A90A1090();
  v42 = v57;
  sub_1A90A1094();
  sub_1A93F88F8();
  _Block_release(v39);
  swift_unknownObjectRelease();
  v54 = *(_QWORD *)(v54 + 8);
  v43 = v58;
  ((void (*)(char *, uint64_t))v54)(v42, v58);
  v53 = *(_QWORD *)(v53 + 8);
  v44 = v56;
  ((void (*)(char *, uint64_t))v53)(v41, v56);
  swift_release();
  swift_release();
  v51 = qword_1ED2ACFC0;
  v45 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v67 = sub_1A908C430;
  v68 = v45;
  aBlock = MEMORY[0x1E0C809B0];
  v64 = 1107296256;
  v65 = sub_1A908A91C;
  v66 = &block_descriptor_4_1;
  v46 = _Block_copy(&aBlock);
  swift_retain();
  sub_1A93F7D88();
  v62 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v41, v42, v46);

  _Block_release(v46);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v61, v60);
  ((void (*)(char *, uint64_t))v54)(v42, v43);
  ((void (*)(char *, uint64_t))v53)(v41, v44);
  swift_release();
  swift_release();
  return v40;
}

uint64_t type metadata accessor for MultiTimer(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1ED2ACBB0);
}

_QWORD *sub_1A90A089C(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _QWORD v19[2];

  v4 = v3;
  v8 = sub_1A93F88A4();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938];
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0DEE9D8];
  v4[6] = MEMORY[0x1E0DEE9D8];
  v14 = (char *)v4 + OBJC_IVAR____TtC18PodcastsFoundationP33_ACA32E4676063C24D8CDAE723F3FF8C510MultiTimer_startDate;
  v15 = sub_1A93F738C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v4[2] = a1;
  v4[4] = a2;
  v4[5] = a3;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC930);
  v19[1] = v13;
  sub_1A9066CA8(&qword_1ED2AD190, v9, MEMORY[0x1E0DEF948]);
  v16 = a1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD178);
  sub_1A9066DB4((unint64_t *)&unk_1ED2AD180, &qword_1ED2AD178);
  sub_1A93F8B5C();
  v17 = sub_1A93F88B0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
  v4[3] = v17;
  return v4;
}

uint64_t sub_1A90A0A28(_QWORD *a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  char *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  char *v50;
  _QWORD v51[2];
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t aBlock;
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  void *v68;
  uint64_t (*v69)();
  uint64_t v70;

  v3 = v2;
  v59 = a1;
  v61 = sub_1A93F7D58();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v60 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1A93F7DB8();
  v6 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v52 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7D40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = sub_1A93F7DE8();
  v12 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v14 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v51 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v51 - v22;
  sub_1A93F7374();
  v24 = sub_1A93F738C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
  sub_1A90A13C8((uint64_t)v23, (uint64_t)v20);
  v25 = v3 + OBJC_IVAR____TtC18PodcastsFoundationP33_ACA32E4676063C24D8CDAE723F3FF8C510MultiTimer_startDate;
  swift_beginAccess();
  v26 = v25;
  v27 = v17;
  v28 = v59;
  sub_1A90A1380((uint64_t)v20, v26);
  swift_endAccess();
  sub_1A93F7DDC();
  v29 = v28[2];
  v62 = v3;
  v53 = v6;
  if (v29)
  {
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A90A1178(v28);
      v28 = (_QWORD *)result;
    }
    v3 = v62;
    v31 = v28[2];
    if (!v31)
    {
      __break(1u);
      return result;
    }
    v32 = v31 - 1;
    v33 = v28[v32 + 4];
    v28[2] = v32;
    v34 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType();
    v36 = v27;
    v37.n128_u64[0] = v33;
  }
  else
  {
    v34 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType();
    swift_bridgeObjectRetain();
    v36 = v27;
    v37.n128_f64[0] = a2;
  }
  MEMORY[0x1AF411B48](v36, v37);
  *v11 = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF480], v8);
  v51[1] = v34;
  MEMORY[0x1AF41270C](v14, v11, ObjectType, a2);
  v59 = v27;
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  v58 = *(void (**)(char *, uint64_t))(v12 + 8);
  v58(v14, v63);
  v38 = v54;
  v39 = v55;
  v57 = v28[2];
  if (v57)
  {
    v56 = *(_QWORD *)(v3 + 16);
    swift_bridgeObjectRetain();
    v40 = 0;
    v41 = v62;
    do
    {
      v42 = v28;
      v43 = *(double *)&v28[v40 + 4];
      v44 = swift_allocObject();
      swift_weakInit();
      v69 = sub_1A9398E8C;
      v70 = v44;
      aBlock = MEMORY[0x1E0C809B0];
      v66 = 1107296256;
      v67 = sub_1A908A91C;
      v68 = &block_descriptor_10_6;
      _Block_copy(&aBlock);
      v64 = MEMORY[0x1E0DEE9D8];
      sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
      sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
      sub_1A93F8B5C();
      sub_1A93F7E0C();
      swift_allocObject();
      sub_1A93F7DF4();
      swift_release();
      swift_release();
      MEMORY[0x1AF411B48](v59, v43);
      sub_1A93F8820();
      v58(v14, v63);
      swift_beginAccess();
      v45 = swift_retain();
      MEMORY[0x1AF412004](v45);
      if (*(_QWORD *)((*(_QWORD *)(v41 + 48) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v41 + 48) & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
        sub_1A93F834C();
      ++v40;
      sub_1A93F8394();
      sub_1A93F8328();
      swift_endAccess();
      swift_release();
      v28 = v42;
    }
    while (v57 != v40);
    swift_bridgeObjectRelease();
    v38 = v54;
    v39 = v55;
  }
  swift_bridgeObjectRelease();
  v46 = v38;
  swift_getObjectType();
  v47 = swift_allocObject();
  swift_weakInit();
  v69 = sub_1A9398E8C;
  v70 = v47;
  aBlock = MEMORY[0x1E0C809B0];
  v66 = 1107296256;
  v67 = sub_1A908A91C;
  v68 = &block_descriptor_14_1;
  v48 = _Block_copy(&aBlock);
  swift_retain();
  v49 = v52;
  sub_1A90A1090();
  v50 = v60;
  sub_1A90A1094();
  sub_1A93F88F8();
  _Block_release(v48);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v50, v61);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v49, v46);
  swift_release();
  swift_release();
  sub_1A93F8928();
  return ((uint64_t (*)(_QWORD *, uint64_t))v58)(v59, v63);
}

uint64_t sub_1A90A1094()
{
  sub_1A93F7D58();
  sub_1A90A1130();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  return sub_1A93F8B5C();
}

unint64_t sub_1A90A1130()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2AD6F0;
  if (!qword_1ED2AD6F0)
  {
    v1 = sub_1A93F7D58();
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2AD6F0);
  }
  return result;
}

_QWORD *sub_1A90A1178(_QWORD *a1)
{
  return sub_1A90A118C(0, a1[2], 0, a1);
}

_QWORD *sub_1A90A118C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC938);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A90A1298(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1A90A1298(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A90A1380(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90A13C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90A1410(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t, double);
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  unint64_t v41;
  void *v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;

  v49 = a1;
  v50 = (char *)a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v47 = (unint64_t)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v48 = (unint64_t)&v44 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v44 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v44 - v11;
  v13 = sub_1A93F738C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v44 - v18;
  v20 = *(void (**)(char *, char *, uint64_t, double))(v14 + 16);
  v20((char *)&v44 - v18, v49, v13, v17);
  sub_1A90A1CA8((uint64_t)v50, (uint64_t)v12);
  v49 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(char *, char *, uint64_t))v20)(v49, v19, v13);
  v50 = v9;
  sub_1A90A1CA8((uint64_t)v12, (uint64_t)v9);
  v21 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v22 = (v15 + *(unsigned __int8 *)(v3 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v23 + v21, v19, v13);
  v44 = v23;
  sub_1A90A13C8((uint64_t)v12, v23 + v22);
  v24 = *(_QWORD *)(v46 + OBJC_IVAR___PFCompoundSchedule_type);
  if (v24 == 1)
  {
    v25 = *(_QWORD *)(v46 + OBJC_IVAR___PFCompoundSchedule_children);
    if (v25 >> 62)
      goto LABEL_34;
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v26)
      goto LABEL_35;
    goto LABEL_4;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v49, v13);
    sub_1A90AC3A4((uint64_t)v50);
    v51 = v24;
    result = sub_1A93F921C();
    __break(1u);
    return result;
  }
  v25 = *(_QWORD *)(v46 + OBJC_IVAR___PFCompoundSchedule_children);
  if (v25 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v35 = sub_1A93F8E5C();
    if (v35)
      goto LABEL_19;
LABEL_37:
    v34 = 1;
    goto LABEL_38;
  }
  v35 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v35)
    goto LABEL_37;
LABEL_19:
  v46 = v13;
  v47 = v25 & 0xC000000000000001;
  v36 = 4;
  v45 = v14;
  while (1)
  {
    v37 = v36 - 4;
    if (!v47)
      break;
    v38 = (void *)MEMORY[0x1AF4129DC](v36 - 4, v25);
    v39 = v36 - 3;
    if (__OFADD__(v37, 1))
      goto LABEL_32;
LABEL_25:
    v40 = (void *)sub_1A93F7314();
    v41 = v48;
    sub_1A90A1CA8((uint64_t)v50, v48);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v41, 1, v13) == 1)
    {
      v42 = 0;
    }
    else
    {
      v42 = (void *)sub_1A93F7314();
      (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v41, v13);
    }
    v34 = (uint64_t)objc_msgSend(v38, sel_shouldExecuteOn_previousExecution_, v40, v42);
    swift_unknownObjectRelease();

    if (!(_DWORD)v34)
    {
      v14 = v45;
      v13 = v46;
      goto LABEL_38;
    }
    ++v36;
    v14 = v45;
    v13 = v46;
    if (v39 == v35)
      goto LABEL_38;
  }
  v38 = *(void **)(v25 + 8 * v36);
  swift_unknownObjectRetain();
  v39 = v36 - 3;
  if (!__OFADD__(v37, 1))
    goto LABEL_25;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  swift_bridgeObjectRetain_n();
  v26 = sub_1A93F8E5C();
  if (!v26)
  {
LABEL_35:
    v34 = 0;
    goto LABEL_38;
  }
LABEL_4:
  v48 = v25 & 0xC000000000000001;
  v27 = 4;
  do
  {
    v28 = v27 - 4;
    if (v48)
    {
      v29 = (void *)MEMORY[0x1AF4129DC](v27 - 4, v25);
      v30 = v27 - 3;
      if (__OFADD__(v28, 1))
        goto LABEL_33;
    }
    else
    {
      v29 = *(void **)(v25 + 8 * v27);
      swift_unknownObjectRetain();
      v30 = v27 - 3;
      if (__OFADD__(v28, 1))
        goto LABEL_33;
    }
    v31 = (void *)sub_1A93F7314();
    v32 = v47;
    sub_1A90A1CA8((uint64_t)v50, v47);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v32, 1, v13) == 1)
    {
      v33 = 0;
    }
    else
    {
      v33 = (void *)sub_1A93F7314();
      (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v32, v13);
    }
    v34 = (uint64_t)objc_msgSend(v29, sel_shouldExecuteOn_previousExecution_, v31, v33);
    swift_unknownObjectRelease();

    if ((v34 & 1) != 0)
      break;
    ++v27;
  }
  while (v30 != v26);
LABEL_38:
  swift_release();
  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v49, v13);
  sub_1A90AC3A4((uint64_t)v50);
  return v34;
}

uint64_t sub_1A90A18F8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v8);
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v11 = (char *)&v27 - v10;
  if ((a3 & 1) != 0)
  {
    if (a2 > 0)
    {
      if (a1 >= 1)
      {
        if (qword_1ED2AD260 != -1)
          swift_once();
        sub_1A93F7044();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
        v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_1A9405950;
        v13 = MEMORY[0x1E0DEDC60];
        v14 = MEMORY[0x1E0DEDCD8];
        *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEDC60];
        *(_QWORD *)(v12 + 64) = v14;
        *(_QWORD *)(v12 + 32) = a2;
        *(_QWORD *)(v12 + 96) = v13;
        *(_QWORD *)(v12 + 104) = v14;
        *(_QWORD *)(v12 + 72) = a1;
        v15 = sub_1A93F801C();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      if (qword_1ED2AD260 != -1)
        swift_once();
      sub_1A93F7044();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
      v23 = swift_allocObject();
      v24 = MEMORY[0x1E0DEDC60];
      *(_OWORD *)(v23 + 16) = xmmword_1A9405520;
      v25 = MEMORY[0x1E0DEDCD8];
      *(_QWORD *)(v23 + 56) = v24;
      *(_QWORD *)(v23 + 64) = v25;
      *(_QWORD *)(v23 + 32) = a2;
LABEL_17:
      v15 = sub_1A93F801C();
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      return v15;
    }
    if (a1 > 0)
    {
      if (qword_1ED2AD260 != -1)
        swift_once();
      sub_1A93F7044();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
      v16 = swift_allocObject();
      v17 = MEMORY[0x1E0DEDC60];
      *(_OWORD *)(v16 + 16) = xmmword_1A9405520;
      v18 = MEMORY[0x1E0DEDCD8];
      *(_QWORD *)(v16 + 56) = v17;
      *(_QWORD *)(v16 + 64) = v18;
      *(_QWORD *)(v16 + 32) = a1;
      goto LABEL_17;
    }
  }
  sub_1A90A1CA8(a4, (uint64_t)&v27 - v10);
  v19 = sub_1A93F738C();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19) == 1)
  {
    sub_1A90AC3A4((uint64_t)v11);
    return 0;
  }
  else
  {
    v21 = (void *)sub_1A93F7314();
    v22 = objc_msgSend(v21, sel_verboseDisplayStringWithoutTime);

    v15 = sub_1A93F8040();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
  }
  return v15;
}

uint64_t sub_1A90A1CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for LibraryPodcastStateDataSource.State(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1A90A1D38@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t TupleTypeMetadata3;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  id v55;

  v54 = a3;
  v47 = *(_QWORD *)(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v3) + 0x58) - 8);
  MEMORY[0x1E0C80A78](a1);
  v45 = (char *)&v44 - v6;
  v8 = *(_QWORD *)(v7 + 80);
  v48 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v9);
  v53 = (char *)&v44 - v10;
  v50 = v11;
  v12 = sub_1A93F8A90();
  v51 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  MEMORY[0x1E0C80A78](v12);
  v46 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v44 - v15;
  v17 = sub_1A93F8A90();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v44 - v23;
  v25 = objc_msgSend(a1, sel_objectID, v22);
  sub_1A90A20D0(&v55, v25);

  v26 = a2;
  v27 = v8;
  v28 = (uint64_t)a1;
  v29 = v48;
  sub_1A90A2510((uint64_t)v24, (uint64_t)v16, v49, v25, v26, v28);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v24, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v20, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v52);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
LABEL_5:
    sub_1A9072534(255, (unint64_t *)&qword_1ED2A41B8);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata3 - 8) + 56))(v54, 1, 1, TupleTypeMetadata3);
  }
  v30 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  v30(v53, v20, v8);
  v32 = v51;
  v31 = v52;
  v33 = v46;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v46, v16, v52);
  v34 = v47;
  v35 = v50;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v33, 1, v50) == 1)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v53, v27);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v31);
    goto LABEL_5;
  }
  v38 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v39 = v45;
  v38(v45, v33, v35);
  sub_1A9072534(255, (unint64_t *)&qword_1ED2A41B8);
  v40 = swift_getTupleTypeMetadata3();
  v41 = v54;
  v42 = &v54[*(int *)(v40 + 48)];
  v43 = *(int *)(v40 + 64);
  v30(v54, v53, v27);
  v38(v42, v39, v35);
  *(_QWORD *)&v41[v43] = v25;
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v41, 0, 1, v40);
}

uint64_t sub_1A90A20D0(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1A93F8BC8();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1A93F8BBC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1A9329014(v7, result + 1, &qword_1ED2A4340, (unint64_t *)&qword_1ED2A41B8, 0x1E0C97B90, (void (*)(unint64_t))sub_1A90A3870);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1A90A3870(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1A93293C8((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1A93F8A30();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1A93F8A3C();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1A93F8A3C();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1A90A238C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

void sub_1A90A238C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1A90A3870(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1A92385FC();
      goto LABEL_14;
    }
    sub_1A90A3AF0(v8);
  }
  v9 = *v3;
  v10 = sub_1A93F8A30();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1A93F8A3C();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1A93F924C();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1A93F8A3C();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1A90A2510(uint64_t a1, uint64_t a2, _QWORD *a3, void *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  int v42;
  uint64_t result;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t (*v56)(uint64_t);
  char *v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  uint64_t *v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t *v91;
  char *v92;
  char *v93;
  void (*v94)(char *, uint64_t, char *);
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t (*v98)(char *, uint64_t, uint64_t);
  int v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  int v104;
  uint64_t v105;
  char *v106;
  char *v107;
  void (*v108)(char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  _QWORD *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t TupleTypeMetadata2;
  uint64_t v128;
  uint64_t (*v129)(uint64_t, uint64_t, char *);
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t *v147;
  uint64_t v148;
  char *v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;

  v140 = a6;
  v147 = a5;
  v144 = a2;
  v145 = a1;
  v8 = *MEMORY[0x1E0DEEDD8] & *a3;
  v124 = *(_QWORD *)(*(_QWORD *)(v8 + 0x58) - 8);
  MEMORY[0x1E0C80A78](a1);
  v122 = (char *)&v121 - v9;
  v142 = v10;
  v11 = sub_1A93F8A90();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v123 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v125 = (char *)&v121 - v12;
  v130 = sub_1A93F8A90();
  v129 = *(uint64_t (**)(uint64_t, uint64_t, char *))(v130 - 8);
  v13 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v130);
  v139 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v13);
  v146 = (char *)&v121 - v16;
  v148 = *(_QWORD *)(v11 - 8);
  v17 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v15);
  v126 = (char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v17);
  v128 = (uint64_t)&v121 - v20;
  MEMORY[0x1E0C80A78](v19);
  v132 = (char *)&v121 - v21;
  v141 = v8;
  v143 = *(void **)(v8 + 80);
  v22 = sub_1A93F8A90();
  v134 = sub_1A93F8A90();
  v133 = *(_QWORD *)(v134 - 8);
  v23 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v134);
  v136 = (char *)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v23);
  v27 = (char *)&v121 - v26;
  v28 = *(_QWORD *)(v22 - 8);
  v29 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v25);
  v149 = (char *)&v121 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v29);
  v131 = (char *)&v121 - v32;
  MEMORY[0x1E0C80A78](v31);
  v34 = (char *)&v121 - v33;
  v35 = a3;
  v36 = (_QWORD *)((char *)a3 + qword_1ED2A3BB0);
  swift_beginAccess();
  v37 = *v36;
  v150 = a4;
  v38 = sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
  v39 = sub_1A90A318C((unint64_t *)&unk_1ED2A41C0, MEMORY[0x1E0DEFCF8]);
  swift_bridgeObjectRetain();
  v40 = a4;
  MEMORY[0x1AF411C8C](&v150, v37, v38, v22, v39);

  v41 = v22;
  swift_bridgeObjectRelease();
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v27, 1, v22);
  v138 = v28;
  v137 = v38;
  if (v42 == 1)
  {
    v135 = v39;
    result = (*(uint64_t (**)(char *, uint64_t))(v133 + 8))(v27, v134);
    goto LABEL_5;
  }
  v133 = *(_QWORD *)(v28 + 32);
  ((void (*)(char *, char *, uint64_t))v133)(v34, v27, v22);
  v44 = (_QWORD *)((char *)v35 + qword_1ED2A3BD8);
  swift_beginAccess();
  v45 = *v44;
  v150 = v40;
  v46 = (char *)v40;
  swift_bridgeObjectRetain();
  v134 = v41;
  v47 = v146;
  MEMORY[0x1AF411C8C](&v150, v45, v38, v11, v39);

  swift_bridgeObjectRelease();
  v48 = v148;
  v49 = (uint64_t)v34;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 48))(v47, 1, v11) != 1)
  {
    v71 = v134;
    v72 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    v73 = v132;
    v72(v132, v146, v11);
    v74 = v147;
    v75 = *v147;
    swift_bridgeObjectRetain();
    v149 = v46;
    v76 = sub_1A90A3300(v46, v75);
    result = swift_bridgeObjectRelease();
    if ((v76 & 1) == 0)
    {
      ((void (*)(uint64_t, uint64_t, uint64_t))v133)(v145, v49, v71);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v72)(v144, v73, v11);
    }
    v135 = v39;
    v146 = (char *)v11;
    v129 = (uint64_t (*)(uint64_t, uint64_t, char *))v72;
    v130 = v49;
    v77 = v74[3];
    v53 = __OFADD__(v77, 1);
    v78 = v77 + 1;
    if (v53)
      goto LABEL_24;
    v74[3] = v78;
    v79 = v131;
    v80 = (*(uint64_t (**)(uint64_t))((char *)v35 + qword_1EEABE8C0))(v140);
    *(double *)&v81 = MEMORY[0x1E0C80A78](v80);
    v82 = v142;
    v83 = v143;
    *(&v121 - 6) = v143;
    *(&v121 - 5) = (_QWORD *)v82;
    v85 = *(_QWORD *)(v141 + 96);
    v84 = *(_QWORD *)(v141 + 104);
    *(&v121 - 4) = (_QWORD *)v85;
    *(&v121 - 3) = (_QWORD *)v84;
    *((_OWORD *)&v121 - 1) = v81;
    v86 = v35;
    v87 = v128;
    sub_1A92D5DDC((void (*)(char *, char *))sub_1A936A50C, (uint64_t)(&v121 - 8), MEMORY[0x1E0DEDCE8], v82, v88, v128);
    v89 = (uint64_t)v79;
    v90 = v86;
    if ((sub_1A90A3AFC(v130, v89) & 1) != 0)
    {
      v150 = v83;
      v151 = v82;
      v152 = v85;
      v153 = v84;
      type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Update();
    }
    v91 = v147;
    v141 = v84;
    v140 = v85;
    v92 = v125;
    v93 = &v125[*(int *)(TupleTypeMetadata2 + 48)];
    v94 = *(void (**)(char *, uint64_t, char *))(v148 + 16);
    v95 = v87;
    v96 = v146;
    v94(v125, v95, v146);
    v94(v93, (uint64_t)v132, v96);
    v97 = v124;
    v98 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v124 + 48);
    v99 = v98(v92, 1, v82);
    v121 = v90;
    if (v99 == 1)
    {
      v100 = v98(v93, 1, v82);
      v101 = v134;
      v102 = v141;
      if (v100 == 1)
      {
        v96 = v146;
        result = (*(uint64_t (**)(char *, char *))(v148 + 8))(v92, v146);
        v103 = v149;
        goto LABEL_20;
      }
    }
    else
    {
      v94(v126, (uint64_t)v92, v96);
      v104 = v98(v93, 1, v82);
      v102 = v141;
      if (v104 != 1)
      {
        v106 = v122;
        (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v122, v93, v82);
        v107 = v126;
        LODWORD(TupleTypeMetadata2) = sub_1A93F8004();
        v108 = *(void (**)(char *, uint64_t))(v97 + 8);
        v108(v106, v82);
        v108(v107, v82);
        result = (*(uint64_t (**)(char *, char *))(v148 + 8))(v92, v96);
        v101 = v134;
        v103 = v149;
        v105 = v140;
        if ((TupleTypeMetadata2 & 1) != 0)
        {
LABEL_20:
          v109 = v91[4];
          v53 = __OFADD__(v109, 1);
          v110 = v109 + 1;
          if (!v53)
          {
            v111 = v91;
            v112 = v96;
            v111[4] = v110;
            v113 = v138;
            v114 = v136;
            (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v136, v131, v101);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v114, 0, 1, v101);
            v154 = v103;
            swift_beginAccess();
            sub_1A93F7F5C();
            v115 = v101;
            v116 = v103;
            sub_1A93F7F80();
            swift_endAccess();
            v117 = v148;
            v118 = v139;
            v119 = v128;
            (*(void (**)(char *, uint64_t, char *))(v148 + 16))(v139, v128, v112);
            (*(void (**)(char *, _QWORD, uint64_t, char *))(v117 + 56))(v118, 0, 1, v112);
            v154 = v116;
            swift_beginAccess();
            sub_1A93F7F5C();
            v120 = v116;
            sub_1A93F7F80();
            swift_endAccess();
            (*(void (**)(char *, char *))(v117 + 8))(v132, v112);
            (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v130, v115);
            ((void (*)(uint64_t, char *, uint64_t))v133)(v145, v131, v115);
            return v129(v144, v119, v112);
          }
          goto LABEL_25;
        }
LABEL_22:
        v150 = v143;
        v151 = v142;
        v152 = v105;
        v153 = v102;
        type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Update();
      }
      (*(void (**)(char *, uint64_t))(v97 + 8))(v126, v82);
    }
    (*(void (**)(char *, uint64_t))(v123 + 8))(v92, TupleTypeMetadata2);
    v105 = v140;
    goto LABEL_22;
  }
  v135 = v39;
  v41 = v134;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v34, v134);
  result = (*((uint64_t (**)(char *, uint64_t))v129 + 1))(v146, v130);
LABEL_5:
  v50 = (char *)v11;
  v51 = v28;
  v52 = v147[2];
  v53 = __OFADD__(v52, 1);
  v54 = v52 + 1;
  v55 = v143;
  if (v53)
  {
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  v147[2] = v54;
  v56 = *(uint64_t (**)(uint64_t))((char *)v35 + qword_1EEABE8C0);
  v57 = v149;
  v146 = v50;
  v58 = v56(v140);
  *(double *)&v59 = MEMORY[0x1E0C80A78](v58);
  v61 = v141;
  v60 = v142;
  *(&v121 - 6) = v55;
  *(&v121 - 5) = (_QWORD *)v60;
  *((_OWORD *)&v121 - 2) = *(_OWORD *)(v61 + 96);
  *((_OWORD *)&v121 - 1) = v59;
  v62 = v144;
  v63 = v41;
  sub_1A92D5DDC((void (*)(char *, char *))sub_1A936A1BC, (uint64_t)(&v121 - 8), MEMORY[0x1E0DEDCE8], v60, v64, v144);
  v65 = v136;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v136, v57, v41);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v65, 0, 1, v41);
  v154 = (char *)v40;
  swift_beginAccess();
  sub_1A93F7F5C();
  v66 = (char *)v40;
  sub_1A93F7F80();
  swift_endAccess();
  v67 = v148;
  v68 = v139;
  v69 = v146;
  (*(void (**)(char *, uint64_t, char *))(v148 + 16))(v139, v62, v146);
  (*(void (**)(char *, _QWORD, uint64_t, char *))(v67 + 56))(v68, 0, 1, v69);
  v154 = v66;
  swift_beginAccess();
  sub_1A93F7F5C();
  v70 = v66;
  sub_1A93F7F80();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v138 + 32))(v145, v149, v63);
}

uint64_t sub_1A90A318C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1A9072534(255, (unint64_t *)&qword_1ED2A41B8);
    result = MEMORY[0x1AF414014](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LibraryPodcastStateDataSource.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t initializeWithCopy for LibraryPodcastStateDataSource.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v5 >= 3)
  {
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v5;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  }
  return a1;
}

unint64_t destroy for LibraryPodcastStateDataSource.State(uint64_t a1)
{
  unint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 48);
  if (result >= 3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A90A3300(void *a1, uint64_t a2)
{
  id v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  id v15;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v3 = a1;
    v4 = sub_1A93F8BEC();

    return v4 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v6 = sub_1A93F8A30(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        v9 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    v12 = 0;
    return v12 & 1;
  }
  sub_1A90A344C();
  v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v8);
  v11 = sub_1A93F8A3C();

  if ((v11 & 1) == 0)
  {
    v13 = ~v7;
    v14 = (v8 + 1) & v13;
    if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      do
      {
        v15 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
        v12 = sub_1A93F8A3C();

        if ((v12 & 1) != 0)
          break;
        v14 = (v14 + 1) & v13;
      }
      while (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  v12 = 1;
  return v12 & 1;
}

unint64_t sub_1A90A344C()
{
  unint64_t result;

  result = qword_1ED2A41B8;
  if (!qword_1ED2A41B8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2A41B8);
  }
  return result;
}

void sub_1A90A3488(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;

  v3 = a1;
  v4 = objc_msgSend(v3, sel_uuid);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1A93F8040();
    v8 = v7;

    v9 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v10 = objc_msgSend(v9, sel_isEmpty_, objc_msgSend(v3, sel_storeCollectionId));
    if ((v10 & 1) != 0)
    {
      v11 = 0;
    }
    else
    {
      v16 = (uint64_t)objc_msgSend(v3, sel_storeCollectionId);
      v11 = v16 & ~(v16 >> 63);
    }
    v17 = objc_msgSend(v3, sel_isPastAutodownloadOrEpisodeLimitDark);
    v15 = objc_msgSend(v3, sel_episodeLimit);
    v18 = objc_msgSend(v3, sel_subscribed);

    v13 = v18;
    v14 = v17;
    v12 = v10;
  }
  else
  {

    v8 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v6 = 0;
    v14 = 0;
    v15 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
  a2[2] = v11;
  a2[3] = v12;
  a2[4] = v13;
  a2[5] = v6;
  a2[6] = v8;
  a2[7] = v14;
  a2[8] = (uint64_t)v15;
}

uint64_t sub_1A90A35D8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1A93F8C34();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_1A93F8A30();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1A90A3870(uint64_t a1)
{
  return sub_1A90A35D8(a1, &qword_1ED2A4340);
}

uint64_t sub_1A90A387C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1A93F8C34();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_1A93F8A30();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A90A3AF0(uint64_t a1)
{
  return sub_1A90A387C(a1, &qword_1ED2A4340);
}

uint64_t sub_1A90A3AFC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  char v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v26;
  char *v27;

  v5 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x50);
  v6 = *(_QWORD **)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v27 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v26 = (char *)&v26 - v9;
  v10 = sub_1A93F8A90();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v14 = (char *)&v26 - v13;
  v15 = (char *)&v26 + *(int *)(v12 + 48) - v13;
  v16 = *(_QWORD *)(v10 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v17((char *)&v26 - v13, a1, v10);
  v17(v15, a2, v10);
  v18 = (uint64_t (*)(char *, uint64_t, uint64_t))v6[6];
  LODWORD(a2) = v18(v14, 1, v5);
  v19 = v18(v15, 1, v5);
  if ((_DWORD)a2 != 1)
  {
    if (v19 != 1)
    {
      v21 = (void (*)(char *, char *, uint64_t))v6[4];
      v22 = v26;
      v21(v26, v14, v5);
      v23 = v27;
      v21(v27, v15, v5);
      v20 = (*(uint64_t (**)(char *, char *))((char *)v2 + qword_1EEABE8C8))(v22, v23);
      v24 = (void (*)(char *, uint64_t))v6[1];
      v24(v23, v5);
      v24(v22, v5);
      return v20 & 1;
    }
    ((void (*)(char *, uint64_t))v6[1])(v14, v5);
    goto LABEL_7;
  }
  if (v19 != 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v15, v10);
LABEL_7:
    v20 = 1;
    return v20 & 1;
  }
  v20 = 0;
  return v20 & 1;
}

BOOL sub_1A90A3D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _BOOL8 result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v16 = *(_QWORD *)(a2 + 56);
  v17 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a1 + 64);
  if ((*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8)) && (sub_1A93F90C0() & 1) == 0)
    return 1;
  if ((v3 & 1) != 0)
  {
    if (!v8)
      return 1;
  }
  else
  {
    if (v2 == v7)
      v12 = v8;
    else
      v12 = 1;
    if ((v12 & 1) != 0)
      return 1;
  }
  switch(v6)
  {
    case 0:
      return v11 != 0;
    case 1:
      return v11 != 1;
    case 2:
      return v11 != 2;
  }
  if (v11 < 3 || ((((v5 & 1) == 0) ^ v10) & 1) == 0)
    return 1;
  if (v4 == v9 && v6 == v11)
    return ((v17 ^ v16) & 1) != 0 || v15 != v14;
  if ((sub_1A93F90C0() & 1) == 0)
    return 1;
  if (((v17 ^ v16) & 1) != 0)
    return 1;
  result = 0;
  if (v15 != v14)
    return 1;
  return result;
}

uint64_t sub_1A90A3E74@<X0>(unint64_t *a1@<X8>)
{
  uint64_t result;
  unint64_t v3;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = sub_1A90A4458();
    result = swift_release();
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  *a1 = v3;
  return result;
}

uint64_t _s18PodcastsFoundation25FairPlayRolloutControllerC9isEnabledSbyF_0()
{
  unint64_t v0;
  char v1;
  unsigned __int8 v2;
  id v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17[3];
  ValueMetadata *v18;
  unint64_t v19;

  v18 = &type metadata for Podcasts;
  v0 = sub_1A90A4238();
  v19 = v0;
  LOBYTE(v17[0]) = 23;
  v1 = sub_1A93F7500();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  if ((v1 & 1) != 0)
  {
    v18 = &type metadata for Podcasts;
    v19 = v0;
    LOBYTE(v17[0]) = 9;
    v2 = sub_1A93F7500();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  }
  else
  {
    v2 = 0;
  }
  v3 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  v4 = sub_1A90A4348();
  if (v4 == 2)
  {
    v5 = qword_1EEAB8A98;
    v6 = unk_1EEAB8AA0;
    swift_bridgeObjectRetain();
    v7 = sub_1A90A427C(v5, v6, 1);

    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = v4;

    v7 = v8 & 1;
  }
  if (qword_1ED2A8890 != -1)
    swift_once();
  v9 = sub_1A93F7698();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A8878);
  v10 = sub_1A93F7674();
  v11 = sub_1A93F8790();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v17[0] = v13;
    *(_DWORD *)v12 = 136315906;
    sub_1A906436C(0xD00000000000002FLL, 0x80000001A944F560, v17);
    sub_1A93F8AA8();
    *(_WORD *)(v12 + 12) = 2080;
    if ((v2 & v7 & 1) != 0)
      v14 = 0;
    else
      v14 = 542396238;
    if ((v2 & v7 & 1) != 0)
      v15 = 0xE000000000000000;
    else
      v15 = 0xE400000000000000;
    sub_1A906436C(v14, v15, v17);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 1024;
    sub_1A93F8AA8();
    *(_WORD *)(v12 + 28) = 1024;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v10, v11, "%s FairPlay V2 is %srolled out, local feature enabled %{BOOL}d, rollback enabled %{BOOL}d.", (uint8_t *)v12, 0x22u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v13, -1, -1);
    MEMORY[0x1AF41411C](v12, -1, -1);
  }

  return v2 & v7 & 1;
}

uint64_t sub_1A90A41E4(char a1)
{
  char v2;
  _BYTE v4[24];
  ValueMetadata *v5;
  unint64_t v6;

  v5 = &type metadata for Podcasts;
  v6 = sub_1A90A4238();
  v4[0] = a1;
  v2 = sub_1A93F7500();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  return v2 & 1;
}

unint64_t sub_1A90A4238()
{
  unint64_t result;

  result = qword_1ED2AC848;
  if (!qword_1ED2AC848)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for Podcasts, &type metadata for Podcasts);
    atomic_store(result, (unint64_t *)&qword_1ED2AC848);
  }
  return result;
}

uint64_t sub_1A90A427C(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v5;
  id v6;
  char v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v5 = (void *)sub_1A93F8010();
  v6 = objc_msgSend(v3, sel_objectForKey_, v5);

  if (v6)
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_1A90A4E08((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    if ((swift_dynamicCast() & 1) != 0)
      a3 = v8;
  }
  else
  {
    sub_1A90A593C((uint64_t)v10);
  }
  return a3 & 1;
}

uint64_t sub_1A90A4348()
{
  void *v0;
  void *v1;
  id v2;
  unsigned __int8 v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  if (!objc_msgSend((id)objc_opt_self(), sel_isRunningOnInternalOS))
    return 2;
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1A90A4E08((uint64_t)v5, (uint64_t)v6);
  if (!v7)
  {
    sub_1A90A593C((uint64_t)v6);
    return 2;
  }
  if (swift_dynamicCast())
    return v4;
  else
    return 2;
}

unint64_t sub_1A90A4458()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _QWORD *v32;
  NSObject *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  _QWORD *v50;
  void *v51;
  id v52;
  uint64_t v54;
  uint64_t v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  void *v67;
  NSObject *v68;
  NSObject *v69;
  _QWORD *v70;
  uint64_t v71;
  _BYTE v72[12];
  int v73;
  _QWORD *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  unint64_t v80;
  _OWORD v81[2];
  id v82[5];

  v82[4] = *(id *)MEMORY[0x1E0C80C00];
  v1 = sub_1A93F7698();
  v79 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v72[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v6 = &v72[-v5];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v72[-v8];
  v10 = sub_1A93F7E18();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v72[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = objc_msgSend((id)objc_opt_self(), sel_fetchHistoryAfterToken_, v0[5]);
  v15 = (void *)v0[4];
  v82[0] = 0;
  v78 = v14;
  v16 = objc_msgSend(v15, sel_executeRequest_error_);
  v17 = v82[0];
  if (!v16)
  {
    v22 = v1;
    v23 = v82[0];
    v24 = (void *)sub_1A93F7128();

    v1 = v22;
    swift_willThrow();

LABEL_7:
    v26 = v79;
    if (qword_1ED2A42A8 != -1)
      swift_once();
    v27 = __swift_project_value_buffer(v1, (uint64_t)qword_1ED2A4290);
    swift_beginAccess();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v26 + 16))(v3, v27, v1);
    v28 = v78;
    v29 = sub_1A93F7674();
    v30 = sub_1A93F879C();
    if (os_log_type_enabled(v29, v30))
    {
      v77 = v1;
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v31 = 138412290;
      *(_QWORD *)&v81[0] = v28;
      v33 = v28;
      sub_1A93F8AA8();
      *v32 = v28;

      v1 = v77;
      v26 = v79;
      _os_log_impl(&dword_1A904E000, v29, v30, "Cannot execute fetchHistoryRequest: %@", v31, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v32, -1, -1);
      MEMORY[0x1AF41411C](v31, -1, -1);
    }
    else
    {

      v29 = v28;
    }

    (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v3, v1);
    goto LABEL_32;
  }
  v18 = v16;
  objc_opt_self();
  v19 = swift_dynamicCastObjCClass();
  if (!v19)
  {
    v25 = v17;

    goto LABEL_7;
  }
  v20 = (void *)v19;
  v21 = v17;
  v76 = v20;
  if (objc_msgSend(v20, sel_result))
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v81, 0, sizeof(v81));
  }
  sub_1A90A4E08((uint64_t)v81, (uint64_t)v82);
  if (!v82[3])
  {
    sub_1A905FD54((uint64_t)v82, qword_1ED2AC800);
    goto LABEL_26;
  }
  v34 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4150);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_26:
    v44 = v79;
    if (qword_1ED2A42A8 != -1)
      swift_once();
    v45 = __swift_project_value_buffer(v1, (uint64_t)qword_1ED2A4290);
    swift_beginAccess();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v44 + 16))(v6, v45, v1);
    v28 = v18;
    v46 = sub_1A93F7674();
    v47 = sub_1A93F879C();
    v48 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      v49 = swift_slowAlloc();
      v50 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v49 = 138412546;
      LODWORD(v77) = v48;
      v51 = v76;
      *(_QWORD *)&v81[0] = v76;
      v28 = v28;
      sub_1A93F8AA8();
      *v50 = v51;

      *(_WORD *)(v49 + 12) = 2048;
      v52 = objc_msgSend(v51, sel_resultType);

      *(_QWORD *)&v81[0] = v52;
      sub_1A93F8AA8();

      _os_log_impl(&dword_1A904E000, v46, (os_log_type_t)v77, "NSPersistentHistoryResult.result does not contain an array of transactions: HistoryResult: %@; resultType %ld",
        (uint8_t *)v49,
        0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v50, -1, -1);
      MEMORY[0x1AF41411C](v49, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v79 + 8))(v6, v1);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v44 + 8))(v6, v1);
    }
    goto LABEL_31;
  }
  v35 = v80;
  if (!(v80 >> 62))
  {
    v36 = *(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v36)
      goto LABEL_18;
LABEL_35:
    swift_bridgeObjectRelease();
    if (qword_1ED2A42A8 == -1)
      goto LABEL_36;
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  v36 = sub_1A93F8E5C();
  if (!v36)
    goto LABEL_35;
LABEL_18:
  v37 = v36 - 1;
  if (__OFSUB__(v36, 1))
  {
    __break(1u);
  }
  else if ((v35 & 0xC000000000000001) == 0)
  {
    if ((v37 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v37 < *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v38 = *(id *)(v35 + 8 * v37 + 32);
      goto LABEL_23;
    }
    __break(1u);
    goto LABEL_43;
  }
  v38 = (id)MEMORY[0x1AF4129DC](v37, v35);
LABEL_23:
  v39 = v38;
  swift_bridgeObjectRelease();
  v40 = (void *)v0[3];
  *v13 = v40;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v41 = v40;
  LOBYTE(v40) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v40 & 1) == 0)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    swift_once();
LABEL_36:
    v54 = __swift_project_value_buffer(v34, (uint64_t)qword_1ED2A4290);
    swift_beginAccess();
    v55 = v79;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v79 + 16))(v9, v54, v34);
    v56 = v18;
    swift_bridgeObjectRetain();
    v28 = v56;
    v57 = sub_1A93F7674();
    v58 = sub_1A93F879C();
    v59 = v58;
    if (os_log_type_enabled(v57, v58))
    {
      v60 = swift_slowAlloc();
      v74 = (_QWORD *)swift_slowAlloc();
      v75 = swift_slowAlloc();
      *(_QWORD *)&v81[0] = v75;
      *(_DWORD *)v60 = 136315394;
      v61 = sub_1A9072534(0, (unint64_t *)&unk_1ED2A4220);
      v77 = v34;
      v62 = v61;
      v63 = swift_bridgeObjectRetain();
      v64 = MEMORY[0x1AF412034](v63, v62);
      v73 = v59;
      v66 = v65;
      swift_bridgeObjectRelease();
      v80 = sub_1A906436C(v64, v66, (uint64_t *)v81);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 12) = 2112;
      v67 = v76;
      v80 = (unint64_t)v76;
      v68 = v28;
      v69 = v28;
      sub_1A93F8AA8();
      v70 = v74;
      *v74 = v67;

      v28 = v68;
      _os_log_impl(&dword_1A904E000, v57, (os_log_type_t)v73, "NSPersistentHistoryResult.result contains an empty list of transactions: historyTransactions: %s; historyResult: %@",
        (uint8_t *)v60,
        0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v70, -1, -1);
      v71 = v75;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v71, -1, -1);
      MEMORY[0x1AF41411C](v60, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v79 + 8))(v9, v77);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v9, v34);
    }
LABEL_31:

LABEL_32:
    v35 = MEMORY[0x1E0DEE9D8];
    goto LABEL_33;
  }
  v42 = objc_msgSend(v39, sel_token);
  v43 = (void *)v0[5];
  v0[5] = v42;
  v28 = v42;

  sub_1A90A4E50();
LABEL_33:

  return v35;
}

uint64_t sub_1A90A4E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90A4E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint8_t *v15;
  id v16;
  uint64_t v17;

  v1 = v0;
  v2 = sub_1A93F7698();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A42A8 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A4290);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  swift_retain_n();
  v7 = sub_1A93F7674();
  v8 = sub_1A93F8790();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_DWORD *)v9 = 136315138;
    v15 = v9 + 4;
    v16 = *(id *)(v1 + 40);
    v17 = v10;
    v11 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A41F0);
    v12 = sub_1A93F8094();
    v16 = (id)sub_1A906436C(v12, v13, &v17);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v7, v8, "New persistent history token %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v10, -1, -1);
    MEMORY[0x1AF41411C](v9, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1A90A5078(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1AF41420C](v1);
  if (v2)
  {
    v3 = (char *)v2;
    sub_1A93F87B4();
    if (qword_1ED2A4300 != -1)
      swift_once();
    swift_beginAccess();
    v4 = (id)qword_1ED2A42F0;
    sub_1A93F75A8();

    v5 = *(void **)&v3[OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store];
    v6 = (void *)objc_opt_self();
    v7 = v5;
    v8 = objc_msgSend(v6, sel_ams_sharedAccountStore);
    v9 = objc_msgSend(v8, sel_ams_activeiTunesAccount);

    objc_msgSend(v7, sel_setAccount_, v9);
    v10 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_accountStore], sel_ams_activeiTunesAccount);
    v11 = v10;
    if (v10)
    {
      if (objc_msgSend(v10, sel_ams_accountFlagValueForAccountFlag_, *MEMORY[0x1E0CFD790]))
      {
        sub_1A93F8B44();
        swift_unknownObjectRelease();
      }
      else
      {
        v15 = 0u;
        v16 = 0u;
      }
      sub_1A90A4E08((uint64_t)&v15, (uint64_t)&v17);
      if (*((_QWORD *)&v18 + 1))
        swift_dynamicCast();
      else
        sub_1A90A593C((uint64_t)&v17);
      if (objc_msgSend(v11, sel_ams_accountFlagValueForAccountFlag_, *MEMORY[0x1E0CFD798], v15, v16))
      {
        sub_1A93F8B44();
        swift_unknownObjectRelease();
      }
      else
      {
        v15 = 0u;
        v16 = 0u;
      }
      sub_1A90A4E08((uint64_t)&v15, (uint64_t)&v17);
      if (*((_QWORD *)&v18 + 1))
        swift_dynamicCast();
      else
        sub_1A90A593C((uint64_t)&v17);
      if (objc_msgSend(v11, sel_ams_accountFlagValueForAccountFlag_, *MEMORY[0x1E0CFD788], v15, v16))
      {
        sub_1A93F8B44();
        swift_unknownObjectRelease();
      }
      else
      {
        v15 = 0u;
        v16 = 0u;
      }
      sub_1A90A4E08((uint64_t)&v15, (uint64_t)&v17);
      if (*((_QWORD *)&v18 + 1))
      {
        v12 = swift_dynamicCast();
LABEL_24:
        v13 = *(os_unfair_lock_s **)&v3[OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_promiseLock];
        MEMORY[0x1E0C80A78](v12);
        swift_retain();
        os_unfair_lock_lock(v13 + 4);
        sub_1A914C8AC(v14, sub_1A90A65F4);
        os_unfair_lock_unlock(v13 + 4);

        swift_release();
        return;
      }
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
      sub_1A90A593C((uint64_t)&v17);
      v17 = 0u;
      v18 = 0u;
      sub_1A90A593C((uint64_t)&v17);
      v17 = 0u;
      v18 = 0u;
    }
    v12 = sub_1A90A593C((uint64_t)&v17);
    goto LABEL_24;
  }
}

uint64_t sub_1A90A5460()
{
  uint64_t result;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[40];
  __int128 v21;
  __int128 v22;

  result = sub_1A93F6E70();
  if (result)
  {
    v1 = result;
    v17 = sub_1A93F8040();
    sub_1A93F8C1C();
    if (*(_QWORD *)(v1 + 16) && (v2 = sub_1A90A597C((uint64_t)v20), (v3 & 1) != 0))
    {
      sub_1A906443C(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v21);
    }
    else
    {
      v21 = 0u;
      v22 = 0u;
    }
    sub_1A90A5908((uint64_t)v20);
    if (*((_QWORD *)&v22 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9360);
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_retain_n();
        swift_retain_n();
        swift_retain();
        swift_retain();
        sub_1A90A5AAC(v17, 0);
        v6 = v5;
        if (*(_QWORD *)(v4 + 16))
          sub_1A93DE628(v4);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v6 + 16))
          sub_1A93DE628(v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release_n();
        swift_release_n();
      }
    }
    else
    {
      sub_1A90A593C((uint64_t)&v21);
    }
    v18 = sub_1A93F8040();
    sub_1A93F8C1C();
    if (*(_QWORD *)(v1 + 16) && (v7 = sub_1A90A597C((uint64_t)v20), (v8 & 1) != 0))
    {
      sub_1A906443C(*(_QWORD *)(v1 + 56) + 32 * v7, (uint64_t)&v21);
    }
    else
    {
      v21 = 0u;
      v22 = 0u;
    }
    sub_1A90A5908((uint64_t)v20);
    if (*((_QWORD *)&v22 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9360);
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_retain_n();
        swift_retain_n();
        swift_retain();
        swift_retain();
        sub_1A90A5AAC(v18, 1);
        v11 = v10;
        if (*(_QWORD *)(v9 + 16))
          sub_1A93DE628(v9);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v11 + 16))
          sub_1A93DE628(v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release_n();
        swift_release_n();
      }
    }
    else
    {
      sub_1A90A593C((uint64_t)&v21);
    }
    v19 = sub_1A93F8040();
    sub_1A93F8C1C();
    if (*(_QWORD *)(v1 + 16) && (v12 = sub_1A90A597C((uint64_t)v20), (v13 & 1) != 0))
    {
      sub_1A906443C(*(_QWORD *)(v1 + 56) + 32 * v12, (uint64_t)&v21);
    }
    else
    {
      v21 = 0u;
      v22 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1A90A5908((uint64_t)v20);
    if (*((_QWORD *)&v22 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9360);
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        swift_retain_n();
        swift_retain_n();
        swift_retain();
        swift_retain();
        sub_1A90A5AAC(v19, 1);
        v16 = v15;
        if (*(_QWORD *)(v14 + 16))
          sub_1A93DE628(v14);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v16 + 16))
          sub_1A93DE628(v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release_n();
        return swift_release_n();
      }
    }
    else
    {
      return sub_1A90A593C((uint64_t)&v21);
    }
  }
  return result;
}

uint64_t sub_1A90A5908(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1A90A593C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC800);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A90A597C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A93F8C04();
  return sub_1A90A59AC(a1, v2);
}

unint64_t sub_1A90A59AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1A90A5A70(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1AF412928](v9, a1);
      sub_1A90A5908((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1A90A5A70(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

void sub_1A90A5AAC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *log;
  os_log_t v59;
  NSObject *v60;
  uint64_t v61;
  _QWORD **v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[10];

  v3 = a1;
  v68[2] = MEMORY[0x1E0DEE9E8];
  v68[3] = MEMORY[0x1E0DEE9E8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A93F8B8C();
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
    sub_1A93DF6F4();
    v4 = a2;
    sub_1A93F8670();
    v3 = v68[4];
    v65 = v68[5];
    v5 = v68[6];
    v6 = v68[7];
    v7 = v68[8];
  }
  else
  {
    v4 = a2;
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v65 = a1 + 56;
    v9 = ~v8;
    v10 = -v8;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v7 = v11 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v5 = v9;
    v6 = 0;
  }
  v64 = (unint64_t)(v5 + 64) >> 6;
  v63 = (_QWORD **)(v2 + 48);
  v61 = v3;
  if ((v3 & 0x8000000000000000) == 0)
    goto LABEL_13;
LABEL_8:
  if (!sub_1A93F8BE0())
    goto LABEL_62;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v12 = (id)v68[0];
  swift_unknownObjectRelease();
  v13 = v6;
  v14 = v7;
  if (!v12)
    goto LABEL_62;
  while (1)
  {
    objc_opt_self();
    v18 = swift_dynamicCastObjCClass();
    if (v18)
    {
      v19 = (void *)v18;
      v20 = v12;
      v21 = objc_msgSend(v19, sel_uuid);
      if (v21)
      {
        v22 = v21;
        v66 = sub_1A93F8040();
        v24 = v23;

        if ((v4 & 1) == 0)
          goto LABEL_49;
        swift_beginAccess();
        v25 = *v63;
        if (!*v63)
          goto LABEL_49;
        swift_bridgeObjectRetain();
        v26 = objc_msgSend(v19, sel_changedValues);
        v27 = sub_1A93F7EFC();

        swift_bridgeObjectRetain_n();
        v28 = sub_1A90A6368(v27, v25);
        v30 = v29;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v30)
        {
          v59 = (os_log_t)v28;
          v31 = qword_1ED2A3F00;
          swift_bridgeObjectRetain();
          if (v31 != -1)
            swift_once();
          v32 = sub_1A93F7698();
          __swift_project_value_buffer(v32, (uint64_t)qword_1ED2A3EE0);
          swift_bridgeObjectRetain();
          v33 = sub_1A93F7674();
          v34 = sub_1A93F8784();
          if (os_log_type_enabled(v33, v34))
          {
            v35 = (uint8_t *)swift_slowAlloc();
            log = v33;
            v36 = swift_slowAlloc();
            v68[0] = v36;
            *(_DWORD *)v35 = 136315138;
            swift_bridgeObjectRetain();
            sub_1A906436C((uint64_t)v59, v30, v68);
            sub_1A93F8AA8();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1A904E000, log, v34, "Found requested key in notification: %s", v35, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1AF41411C](v36, -1, -1);
            MEMORY[0x1AF41411C](v35, -1, -1);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          else
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease_n();
          }
          v3 = v61;
          v4 = a2;
LABEL_49:
          v55 = v66;
LABEL_55:
          sub_1A9091D1C(v68, v55, v24);

          swift_bridgeObjectRelease();
LABEL_12:
          v6 = v13;
          v7 = v14;
          if (v3 < 0)
            goto LABEL_8;
          goto LABEL_13;
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v3 = v61;
        v4 = a2;
      }
      else
      {

      }
    }
    objc_opt_self();
    v37 = swift_dynamicCastObjCClass();
    if (!v37)
    {

      goto LABEL_12;
    }
    v38 = (void *)v37;
    v20 = v12;
    v39 = objc_msgSend(v38, sel_uuid);
    if (!v39)
    {

      goto LABEL_12;
    }
    v40 = v39;
    v41 = sub_1A93F8040();
    v24 = v42;

    if ((v4 & 1) == 0)
      goto LABEL_54;
    swift_beginAccess();
    v43 = *v63;
    if (!*v63)
      goto LABEL_54;
    v67 = v41;
    swift_bridgeObjectRetain();
    v44 = objc_msgSend(v38, sel_changedValues);
    v45 = sub_1A93F7EFC();

    swift_bridgeObjectRetain_n();
    v46 = sub_1A90A6368(v45, v43);
    v48 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v48)
    {
      v49 = qword_1ED2A3F00;
      swift_bridgeObjectRetain();
      if (v49 != -1)
        swift_once();
      v50 = sub_1A93F7698();
      __swift_project_value_buffer(v50, (uint64_t)qword_1ED2A3EE0);
      swift_bridgeObjectRetain();
      v51 = sub_1A93F7674();
      v52 = sub_1A93F8784();
      if (os_log_type_enabled(v51, v52))
      {
        v60 = v51;
        v53 = (uint8_t *)swift_slowAlloc();
        v57 = v46;
        v54 = swift_slowAlloc();
        v68[0] = v54;
        *(_DWORD *)v53 = 136315138;
        swift_bridgeObjectRetain();
        sub_1A906436C(v57, v48, v68);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A904E000, v60, v52, "Found requested key in notification: %s", v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v54, -1, -1);
        MEMORY[0x1AF41411C](v53, -1, -1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      else
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease_n();
      }
      v3 = v61;
      v4 = a2;
      v41 = v67;
LABEL_54:
      v55 = v41;
      goto LABEL_55;
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v6 = v13;
    v7 = v14;
    v3 = v61;
    v4 = a2;
    if (v61 < 0)
      goto LABEL_8;
LABEL_13:
    if (!v7)
      break;
    v14 = (v7 - 1) & v7;
    v15 = __clz(__rbit64(v7)) | (v6 << 6);
    v13 = v6;
LABEL_24:
    v12 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v15);
    if (!v12)
      goto LABEL_62;
  }
  v13 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    return;
  }
  if (v13 >= v64)
    goto LABEL_62;
  v16 = *(_QWORD *)(v65 + 8 * v13);
  if (v16)
    goto LABEL_23;
  v17 = v6 + 2;
  if (v6 + 2 >= v64)
    goto LABEL_62;
  v16 = *(_QWORD *)(v65 + 8 * v17);
  if (v16)
    goto LABEL_22;
  v17 = v6 + 3;
  if (v6 + 3 >= v64)
    goto LABEL_62;
  v16 = *(_QWORD *)(v65 + 8 * v17);
  if (v16)
  {
LABEL_22:
    v13 = v17;
LABEL_23:
    v14 = (v16 - 1) & v16;
    v15 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_24;
  }
  v13 = v6 + 4;
  if (v6 + 4 >= v64)
    goto LABEL_62;
  v16 = *(_QWORD *)(v65 + 8 * v13);
  if (v16)
    goto LABEL_23;
  v56 = v6 + 5;
  while (v64 != v56)
  {
    v16 = *(_QWORD *)(v65 + 8 * v56++);
    if (v16)
    {
      v13 = v56 - 1;
      goto LABEL_23;
    }
  }
LABEL_62:
  sub_1A9120240();
}

uint64_t sub_1A90A6368(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t i;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;

  *(_QWORD *)(swift_allocObject() + 16) = a2;
  v23 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v24 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v25 = a1;
  result = swift_bridgeObjectRetain();
  i = 0;
  do
  {
    do
    {
LABEL_4:
      while (v6)
      {
        v9 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v10 = v9 | (i << 6);
        v11 = a2[2];
        if (v11)
          goto LABEL_22;
      }
      v12 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_41;
      if (v12 >= v24)
      {
LABEL_39:
        swift_release();
        v16 = 0;
        goto LABEL_38;
      }
      v13 = *(_QWORD *)(v23 + 8 * v12);
      ++i;
      if (!v13)
      {
        i = v12 + 1;
        if (v12 + 1 >= v24)
          goto LABEL_39;
        v13 = *(_QWORD *)(v23 + 8 * i);
        if (!v13)
        {
          i = v12 + 2;
          if (v12 + 2 >= v24)
            goto LABEL_39;
          v13 = *(_QWORD *)(v23 + 8 * i);
          if (!v13)
          {
            i = v12 + 3;
            if (v12 + 3 >= v24)
              goto LABEL_39;
            v13 = *(_QWORD *)(v23 + 8 * i);
            if (!v13)
            {
              v14 = v12 + 4;
              if (v14 >= v24)
                goto LABEL_39;
              v13 = *(_QWORD *)(v23 + 8 * v14);
              for (i = v14; !v13; ++v14)
              {
                i = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_42;
                if (i >= v24)
                  goto LABEL_39;
                v13 = *(_QWORD *)(v23 + 8 * i);
              }
            }
          }
        }
      }
      v6 = (v13 - 1) & v13;
      v10 = __clz(__rbit64(v13)) + (i << 6);
      v11 = a2[2];
    }
    while (!v11);
LABEL_22:
    v15 = (uint64_t *)(*(_QWORD *)(v25 + 48) + 16 * v10);
    v16 = *v15;
    v17 = v15[1];
    if (a2[4] != *v15 || a2[5] != v17)
    {
      result = sub_1A93F90C0();
      if ((result & 1) == 0)
        continue;
    }
LABEL_37:
    swift_bridgeObjectRetain();
    swift_release();
LABEL_38:
    swift_bridgeObjectRelease();
    swift_release();
    return v16;
  }
  while (v11 == 1);
  v19 = a2 + 7;
  v20 = 1;
  while (1)
  {
    v21 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (*(v19 - 1) == v16 && *v19 == v17)
      goto LABEL_37;
    result = sub_1A93F90C0();
    if ((result & 1) != 0)
      goto LABEL_37;
    v19 += 2;
    ++v20;
    if (v21 == v11)
      goto LABEL_4;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1A90A65F4()
{
  uint64_t v0;

  return sub_1A90A6618(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25), *(_BYTE *)(v0 + 26));
}

uint64_t sub_1A90A6618(uint64_t a1, char a2, char a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *v22;
  _BYTE *v23;
  uint64_t *v24;
  uint64_t *v25;
  id v26;
  id *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  objc_super v34;

  v8 = OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store;
  v9 = qword_1ED2A78C8;
  v10 = *(id *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store);
  if (v9 != -1)
    swift_once();
  v11 = objc_msgSend(v10, sel_identifierForKey_, qword_1ED2A78B8);

  v12 = sub_1A93F8040();
  v14 = v13;

  v15 = *(void **)(a1 + v8);
  v16 = qword_1ED2A78B0;
  v17 = v15;
  if (v16 != -1)
    swift_once();
  v18 = objc_msgSend(v17, sel_identifierForKey_, qword_1ED2A78A8);

  v19 = sub_1A93F8040();
  v21 = v20;

  v22 = (objc_class *)type metadata accessor for AnalyticsUserIdentifier();
  v23 = objc_allocWithZone(v22);
  v24 = (uint64_t *)&v23[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId];
  *v24 = v12;
  v24[1] = v14;
  v25 = (uint64_t *)&v23[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId];
  *v25 = v19;
  v25[1] = v21;
  v23[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userAllowsPersonalization] = a2 & 1;
  v23[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userUnder13YearsOld] = a3 & 1;
  v23[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userIsManagedAccount] = a4 & 1;
  v34.receiver = v23;
  v34.super_class = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = objc_msgSendSuper2(&v34, sel_init);
  v27 = (id *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_identifierPromise);
  swift_beginAccess();
  objc_msgSend(*v27, sel_finishWithResult_, v26);
  sub_1A93F87B4();
  if (qword_1ED2A4300 != -1)
    swift_once();
  swift_beginAccess();
  v28 = (void *)qword_1ED2A42F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1A9405950;
  v30 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
  v31 = sub_1A90A92DC();
  *(_QWORD *)(v29 + 32) = v19;
  *(_QWORD *)(v29 + 40) = v21;
  *(_QWORD *)(v29 + 96) = v30;
  *(_QWORD *)(v29 + 104) = v31;
  *(_QWORD *)(v29 + 64) = v31;
  *(_QWORD *)(v29 + 72) = v12;
  *(_QWORD *)(v29 + 80) = v14;
  v32 = v28;
  sub_1A93F75A8();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for AnalyticsUserIdentifier()
{
  return objc_opt_self();
}

uint64_t PFProducer.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD v24[5];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = type metadata accessor for ProducerInner(0, a3, AssociatedTypeWitness, a5);
  v12 = sub_1A90A6D00(v5, a2, a3, a4, a5);
  v14 = v13;
  v15 = sub_1A90A6C30(v5, a2, a3, a4, a5);
  v17 = v16;
  v18 = sub_1A90A6B60(v5, a2, a3, a4, a5);
  v20 = v19;
  swift_allocObject();
  v21 = sub_1A9264D08(a1, (uint64_t)v12, v14, (uint64_t)v15, v17, (uint64_t)v18, v20);
  v24[3] = v11;
  v24[4] = MEMORY[0x1AF414014](&unk_1A9416BE0, v11);
  v24[0] = v21;
  sub_1A93F789C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
}

uint64_t type metadata accessor for ProducerInner(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ProducerInner);
}

uint64_t sub_1A90A6A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int *active;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 32))(a9, a1, a11);
  active = (int *)type metadata accessor for ProducerInner.ActiveState(0, a11, a12, a13);
  v20 = a9 + active[11];
  v21 = sub_1A93F8A90();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  v23 = (_QWORD *)(a9 + active[12]);
  *v23 = a3;
  v23[1] = a4;
  v24 = (_QWORD *)(a9 + active[13]);
  *v24 = a5;
  v24[1] = a6;
  v25 = (_QWORD *)(a9 + active[14]);
  *v25 = a7;
  v25[1] = a8;
  *(_QWORD *)(a9 + active[15]) = a10;
  return result;
}

uint64_t (*sub_1A90A6B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9;
  uint64_t v10;
  double v11;
  char *v12;
  unint64_t v13;
  char *v14;
  uint64_t v16;

  v9 = *(_QWORD *)(a2 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v9 + 16))(v12, v11);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = a2;
  *((_QWORD *)v14 + 3) = a3;
  *((_QWORD *)v14 + 4) = a4;
  *((_QWORD *)v14 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], v12, a2);
  return sub_1A92665FC;
}

uint64_t (*sub_1A90A6C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9;
  uint64_t v10;
  double v11;
  char *v12;
  unint64_t v13;
  char *v14;
  uint64_t v16;

  v9 = *(_QWORD *)(a2 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v9 + 16))(v12, v11);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = a2;
  *((_QWORD *)v14 + 3) = a3;
  *((_QWORD *)v14 + 4) = a4;
  *((_QWORD *)v14 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], v12, a2);
  return sub_1A90A8830;
}

uint64_t (*sub_1A90A6D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9;
  uint64_t v10;
  double v11;
  char *v12;
  unint64_t v13;
  char *v14;
  uint64_t v16;

  v9 = *(_QWORD *)(a2 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v9 + 16))(v12, v11);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = a2;
  *((_QWORD *)v14 + 3) = a3;
  *((_QWORD *)v14 + 4) = a4;
  *((_QWORD *)v14 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], v12, a2);
  return sub_1A90A886C;
}

void sub_1A90A6DD0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t active;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  os_unfair_lock_s *v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  char v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char *v35;
  os_unfair_lock_s *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  void (*v44)(char *, char *, uint64_t);
  void (*v45)(char *, char *, uint64_t);
  void (*v46)(char *, _QWORD, uint64_t, uint64_t);
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  os_unfair_lock_t v50;
  unsigned int (*v51)(char *, uint64_t, uint64_t);
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;

  v53 = a1;
  v3 = *(_QWORD *)(*v1 + 80);
  v2 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 96);
  v5 = type metadata accessor for ProducerInner.State(0, v3, v2, v4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v54 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v56 = (char *)&v44 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v44 - v11;
  active = type metadata accessor for ProducerInner.ActiveState(0, v3, v2, v4);
  v14 = *(_QWORD *)(active - 8);
  MEMORY[0x1E0C80A78](active);
  v55 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v44 - v17;
  v19 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v19);
  v20 = (char *)v1 + *(_QWORD *)(*v1 + 112);
  swift_beginAccess();
  v52 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v52(v12, v20, v5);
  v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v51(v12, 1, active) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
    os_unfair_lock_unlock(v19);
    return;
  }
  v49 = v20;
  v50 = v19;
  v48 = v5;
  v21 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v21(v18, v12, active);
  v22 = *(int *)(active + 60);
  v23 = *(_QWORD *)&v18[v22];
  sub_1A93F78D8();
  v24 = v14;
  if ((sub_1A93F78CC() & 1) != 0)
  {
    v25 = v50;
LABEL_17:
    os_unfair_lock_unlock(v25);
    goto LABEL_18;
  }
  v47 = v21;
  sub_1A93F78E4();
  v26 = sub_1A93F78CC();
  v28 = v55;
  v27 = v56;
  if ((v26 & 1) == 0)
  {
    sub_1A93F78E4();
    if ((sub_1A93F78CC() & 1) != 0)
    {
      v29 = sub_1A93F78E4();
    }
    else
    {
      if (v23 < 0)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      if (!v23)
      {
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      v29 = v23 - 1;
    }
    *(_QWORD *)&v18[v22] = v29;
  }
  v45 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  v45(v27, v18, active);
  v46 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
  v46(v27, 0, 1, active);
  v30 = v49;
  swift_beginAccess();
  v31 = v30;
  v32 = v48;
  v44 = *(void (**)(char *, char *, uint64_t))(v6 + 40);
  v44(v31, v27, v48);
  swift_endAccess();
  os_unfair_lock_unlock(v50);
  v33 = sub_1A93F78A8();
  sub_1A93F78E4();
  v34 = sub_1A93F78CC();
  v35 = v54;
  if ((v34 & 1) != 0)
    goto LABEL_15;
  if (v33 < 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (!v33)
  {
LABEL_18:
    (*(void (**)(char *, uint64_t))(v24 + 8))(v18, active);
    return;
  }
LABEL_15:
  v36 = v50;
  os_unfair_lock_lock(v50);
  v52(v35, v49, v32);
  if (v51(v35, 1, active) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v35, v32);
    v25 = v36;
    goto LABEL_17;
  }
  v47(v28, v35, active);
  v37 = *(int *)(active + 60);
  v38 = *(_QWORD *)&v28[v37];
  sub_1A93F78E4();
  if ((sub_1A93F78CC() & 1) != 0)
    goto LABEL_29;
  sub_1A93F78E4();
  v39 = sub_1A93F78CC();
  v40 = sub_1A93F78E4();
  if ((v39 & 1) == 0)
  {
    v41 = sub_1A93F78CC();
    v32 = v48;
    if ((v41 & 1) != 0)
      goto LABEL_26;
    if (((v38 | v33) & 0x8000000000000000) == 0)
    {
      v40 = v38 + v33;
      if (!__OFADD__(v38, v33))
      {
        if ((v40 & 0x8000000000000000) == 0)
          goto LABEL_28;
LABEL_35:
        __break(1u);
        return;
      }
LABEL_26:
      v40 = sub_1A93F78E4();
      goto LABEL_28;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v32 = v48;
LABEL_28:
  *(_QWORD *)&v28[v37] = v40;
LABEL_29:
  v45(v27, v28, active);
  v46(v27, 0, 1, active);
  v42 = v49;
  swift_beginAccess();
  v44(v42, v27, v32);
  swift_endAccess();
  os_unfair_lock_unlock(v36);
  v43 = *(void (**)(char *, uint64_t))(v24 + 8);
  v43(v28, active);
  v43(v18, active);
}

void sub_1A90A7254(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int *active;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  int64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  os_unfair_lock_s *v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v55;
  void (*v56)(char *, uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, char *, uint64_t);
  void (*v66)(char *, _QWORD, uint64_t, uint64_t);
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  os_unfair_lock_t v69;
  void (*v70)(uint64_t, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, int *);
  void (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 88);
  v80 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v76 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_1A93F8A90();
  v6 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v79 = (char *)&v63 - v7;
  v8 = *(_QWORD *)(v3 + 80);
  v9 = *(_QWORD *)(v3 + 96);
  v10 = type metadata accessor for ProducerInner.State(0, v8, v4, v9);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v63 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v63 - v18;
  active = (int *)type metadata accessor for ProducerInner.ActiveState(0, v8, v4, v9);
  v83 = *((_QWORD *)active - 1);
  MEMORY[0x1E0C80A78](active);
  v22 = (char *)&v63 - v21;
  sub_1A93F78E4();
  if ((sub_1A93F78CC() & 1) == 0)
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (a1)
    {
      goto LABEL_4;
    }
    __break(1u);
    goto LABEL_24;
  }
LABEL_4:
  v70 = (void (*)(uint64_t, char *, uint64_t))a1;
  v77 = v6;
  v75 = v14;
  v23 = v17;
  v24 = v4;
  v25 = v81;
  v26 = v82;
  v27 = (os_unfair_lock_s *)(*(_QWORD *)(v81 + 16) + 16);
  os_unfair_lock_lock(v27);
  v28 = v25 + *(_QWORD *)(*(_QWORD *)v25 + 112);
  swift_beginAccess();
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v78 = v28;
  v74 = v29;
  v29(v19, v28, v10);
  v30 = v83;
  v73 = *(unsigned int (**)(char *, uint64_t, int *))(v83 + 48);
  if (v73(v19, 1, active) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
    os_unfair_lock_unlock(v27);
    return;
  }
  v71 = v11;
  v72 = v10;
  v69 = v27;
  (*(void (**)(char *, char *, int *))(v30 + 32))(v22, v19, active);
  v31 = active[15];
  v32 = *(_QWORD *)&v22[v31];
  sub_1A93F78E4();
  v33 = sub_1A93F78CC();
  v34 = v24;
  v35 = v23;
  v36 = v26;
  v37 = v80;
  if ((v33 & 1) != 0)
    goto LABEL_16;
  sub_1A93F78E4();
  v38 = sub_1A93F78CC();
  v39 = sub_1A93F78E4();
  if ((v38 & 1) == 0)
  {
    v40 = (int64_t)v70;
    v41 = sub_1A93F78CC();
    v37 = v80;
    if ((v41 & 1) != 0)
      goto LABEL_13;
    if (((v32 | v40) & 0x8000000000000000) == 0)
    {
      v39 = v32 + v40;
      if (!__OFADD__(v32, v40))
      {
        if ((v39 & 0x8000000000000000) == 0)
          goto LABEL_15;
LABEL_25:
        __break(1u);
        return;
      }
LABEL_13:
      v39 = sub_1A93F78E4();
      goto LABEL_15;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v37 = v80;
LABEL_15:
  *(_QWORD *)&v22[v31] = v39;
LABEL_16:
  v42 = &v22[active[11]];
  v43 = v77;
  v44 = v79;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v79, v42, v36);
  v45 = v37;
  v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v44, 1, v34);
  v67 = *(void (**)(char *, uint64_t))(v43 + 8);
  v67(v44, v36);
  v68 = v34;
  v47 = v83;
  v79 = *(char **)(v83 + 16);
  ((void (*)(char *, char *, int *))v79)(v35, v22, active);
  v77 = *(_QWORD *)(v47 + 56);
  ((void (*)(char *, _QWORD, uint64_t, int *))v77)(v35, 0, 1, active);
  v48 = v78;
  swift_beginAccess();
  v70 = *(void (**)(uint64_t, char *, uint64_t))(v71 + 40);
  v70(v48, v35, v72);
  swift_endAccess();
  v49 = v69;
  os_unfair_lock_unlock(v69);
  if (v46 == 1)
  {
    v50 = *(void (**)(uint64_t))&v22[active[12]];
    v51 = swift_retain();
    v52 = v76;
    v50(v51);
    swift_release();
    v67(v42, v82);
    v53 = v68;
    v65 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
    v65(v42, v52, v68);
    v54 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56);
    v64 = v42;
    v66 = v54;
    v54(v42, 0, 1, v53);
    os_unfair_lock_lock(v49);
    ((void (*)(char *, char *, int *))v79)(v35, v22, active);
    ((void (*)(char *, _QWORD, uint64_t, int *))v77)(v35, 0, 1, active);
    swift_beginAccess();
    v55 = v72;
    v70(v48, v35, v72);
    swift_endAccess();
    os_unfair_lock_unlock(v49);
    v56 = *(void (**)(char *, uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t))&v22[active[13]];
    v57 = v81;
    swift_retain_n();
    swift_retain();
    v56(v52, sub_1A908ACC8, v57, sub_1A92665F4, v57);
    swift_release();
    swift_release_n();
    os_unfair_lock_lock(v49);
    v58 = v75;
    v74(v75, v48, v55);
    LODWORD(v53) = v73(v58, 1, active);
    v59 = v55;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v58, v55);
    v60 = (_DWORD)v53 == 1;
    v61 = v68;
    if (!v60)
    {
      v62 = v64;
      v67(v64, v82);
      v65(v62, v52, v61);
      v66(v62, 0, 1, v61);
      ((void (*)(char *, char *, int *))v79)(v35, v22, active);
      ((void (*)(char *, _QWORD, uint64_t, int *))v77)(v35, 0, 1, active);
      swift_beginAccess();
      v70(v48, v35, v59);
      swift_endAccess();
    }
    os_unfair_lock_unlock(v49);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v52, v61);
    v47 = v83;
  }
  (*(void (**)(char *, int *))(v47 + 8))(v22, active);
}

void sub_1A90A78BC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= *(_DWORD *)(v7 + 84))
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = v10;
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  v12 = *(unsigned __int8 *)(v8 + 80);
  v14 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v14;
  v13 = *(_QWORD *)(v7 + 64) + v12;
  if (v11 < a3)
  {
    v15 = a3 - v11;
    if ((((((((((_DWORD)v14 + 7 + (v13 & ~(_DWORD)v12)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v16 = v15 + 1;
    else
      v16 = 2;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v6 = v17;
    else
      v6 = 0;
  }
  if (a2 > v11)
  {
    if ((((((((((_DWORD)v14 + 7 + (v13 & ~(_DWORD)v12)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v18 = ~v11 + a2;
      bzero(a1, ((((((((v14 + 7 + (v13 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

void sub_1A90A79F4(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  *(_BYTE *)(v12 + v13) = 0;
  if ((_DWORD)a1)
  {
    if ((_DWORD)v4 == v8)
    {
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v15 = v12;
      a2 = v4;
      a3 = a4;
LABEL_6:
      v14(v15, a1, a2, a3);
      return;
    }
    v15 = (v11 + v12) & v5;
    if (v9 == v8)
    {
      a1 = (a1 + 1);
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      goto LABEL_6;
    }
    v16 = (_QWORD *)((v10 + v15) & 0xFFFFFFFFFFFFFFF8);
    if ((a1 & 0x80000000) != 0)
    {
      v17 = a1 ^ 0x80000000;
      v16[1] = 0;
    }
    else
    {
      v17 = (a1 - 1);
    }
    *v16 = v17;
  }
}

uint64_t type metadata accessor for ProducerInner.ActiveState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ProducerInner.ActiveState);
}

void *sub_1A90A7AB0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  void *v21;
  int v22;
  void *v23;
  unint64_t v24;
  size_t v25;
  unsigned int v26;
  const void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  const void *v34;
  uint64_t v35;
  size_t v36;
  void *v37;
  size_t v38;
  _OWORD *v39;
  _OWORD *v40;
  _OWORD *v41;
  _OWORD *v42;
  _OWORD *v43;
  _OWORD *v44;
  uint64_t (*v45)(unint64_t, uint64_t, uint64_t);
  int v46;
  int v47;
  size_t v48;
  size_t v49;
  size_t v50;
  size_t v51;
  size_t v52;
  size_t v53;
  _OWORD *v54;
  unint64_t v55;
  unint64_t v56;
  _OWORD *v57;
  _OWORD *v58;
  _OWORD *v59;
  const void *v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  size_t v66;
  void *__src;

  v4 = *(_QWORD *)(a3 + 16);
  v3 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(v3 - 8);
  v8 = (void *)*(unsigned int *)(v7 + 84);
  if ((_DWORD)v8)
    v9 = (_DWORD)v8 - 1;
  else
    v9 = 0;
  if (v9 <= v6)
    v10 = *(_DWORD *)(v5 + 84);
  else
    v10 = v9;
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = v10;
  v12 = *(_QWORD *)(v5 + 64);
  v13 = *(unsigned __int8 *)(v7 + 80);
  v14 = ~v13;
  v15 = v12 + v13;
  v16 = (v12 + v13) & ~v13;
  v17 = *(_QWORD *)(v7 + 64);
  v66 = v17;
  __src = a2;
  v64 = *(_QWORD *)(a3 + 24);
  if ((_DWORD)v6 == v11)
  {
    v63 = (v12 + v13) & ~v13;
    v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
    v19 = *(_DWORD *)(v7 + 84);
    v8 = a2;
    v20 = v18(a1, v6, v4);
    v21 = v8;
    LODWORD(v8) = v19;
    v22 = v18(v21, v6, v4);
    if (!v20)
    {
      v23 = a1;
      if (!v22)
      {
LABEL_31:
        v29 = (char *)(((unint64_t)__src + v15) & v14);
        goto LABEL_52;
      }
      goto LABEL_55;
    }
    goto LABEL_37;
  }
  v24 = ((unint64_t)a1 + v15) & v14;
  if (v9 != v11)
  {
    v28 = 7;
    if (!(_DWORD)v8)
      v28 = 8;
    if (*(_QWORD *)((v28 + v17 + v24) & 0xFFFFFFFFFFFFF8) < 0xFFFFFFFFuLL)
      goto LABEL_17;
LABEL_23:
    v29 = (char *)(((unint64_t)a2 + v15) & v14);
    if (v9 == v11)
    {
      if (v8 < 2)
      {
        v23 = a1;
        goto LABEL_52;
      }
      v63 = v16;
      v23 = a1;
      if ((*(unsigned int (**)(unint64_t, void *, uint64_t))(v7 + 48))(((unint64_t)a2 + v15) & v14, v8, v64) < 2)
      {
LABEL_52:
        (*(void (**)(void *, void *, uint64_t))(v5 + 40))(v23, __src, v4);
        v45 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48);
        v46 = v45(((unint64_t)v23 + v15) & v14, 1, v64);
        v47 = v45((unint64_t)v29, 1, v64);
        if (v46)
        {
          if (!v47)
          {
            (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(((unint64_t)v23 + v15) & v14, v29, v64);
            (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(((unint64_t)v23 + v15) & v14, 0, 1, v64);
            v48 = v66;
LABEL_67:
            if ((_DWORD)v8)
              v52 = v48;
            else
              v52 = v48 + 1;
            v53 = v52 + 7;
            v54 = (_OWORD *)((v53 + (((unint64_t)v23 + v15) & v14)) & 0xFFFFFFFFFFFFFFF8);
            v55 = (unint64_t)&v29[v53];
            v56 = (v55 & 0xFFFFFFFFFFFFFFF8) + 23;
            *v54 = *(_OWORD *)(v55 & 0xFFFFFFFFFFFFFFF8);
            swift_release();
            v57 = (_OWORD *)(((unint64_t)v54 + 23) & 0xFFFFFFFFFFFFFFF8);
            v56 &= 0xFFFFFFFFFFFFF8uLL;
            *v57 = *(_OWORD *)v56;
            swift_release();
            v58 = (_OWORD *)(((unint64_t)v57 + 23) & 0xFFFFFFFFFFFFFFF8);
            v59 = (_OWORD *)((v56 + 23) & 0xFFFFFFFFFFFFF8);
            *v58 = *v59;
            swift_release();
            *(_QWORD *)(((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v59 + 23) & 0xFFFFFFFFFFFFF8);
            return v23;
          }
        }
        else
        {
          if (!v47)
          {
            (*(void (**)(unint64_t, char *, uint64_t))(v7 + 40))(((unint64_t)v23 + v15) & v14, v29, v64);
            v48 = v66;
            goto LABEL_67;
          }
          (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)v23 + v15) & v14, v64);
        }
        v48 = v66;
        if ((_DWORD)v8)
          v51 = v66;
        else
          v51 = v66 + 1;
        memcpy((void *)(((unint64_t)v23 + v15) & v14), v29, v51);
        goto LABEL_67;
      }
    }
    else
    {
      v63 = v16;
      v30 = 7;
      if (!(_DWORD)v8)
        v30 = 8;
      v31 = *(_QWORD *)((unint64_t)&v29[v30 + v17] & 0xFFFFFFFFFFFFF8);
      if (v31 >= 0xFFFFFFFF)
        LODWORD(v31) = -1;
      v23 = a1;
      if ((_DWORD)v31 == -1)
        goto LABEL_31;
    }
LABEL_55:
    (*(void (**)(void *, uint64_t))(v5 + 8))(v23, v4);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)v23 + v15) & v14, 1, v64))(*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)v23 + v15) & v14, v64);
    v49 = v66;
    if (!(_DWORD)v8)
      v49 = v66 + 1;
    v50 = v49 + 7;
    swift_release();
    swift_release();
    swift_release();
    v36 = ((((((((v50 + v63) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    v37 = v23;
    v34 = __src;
LABEL_60:
    memcpy(v37, v34, v36);
    return v23;
  }
  if (v8 < 2)
    goto LABEL_23;
  v25 = *(_QWORD *)(v7 + 64);
  v26 = (*(uint64_t (**)(unint64_t, void *, uint64_t))(v7 + 48))(v24, v8, v3);
  a2 = __src;
  v17 = v25;
  if (v26 < 2)
    goto LABEL_23;
LABEL_17:
  v27 = (const void *)(((unint64_t)a2 + v15) & v14);
  if (v9 == v11)
  {
    if (v8 >= 2)
    {
      v63 = v16;
      v61 = v8;
      v8 = a2;
      v62 = (*(uint64_t (**)(unint64_t, const void *, uint64_t))(v7 + 48))(((unint64_t)a2 + v15) & v14, v61, v64);
      v34 = v8;
      LODWORD(v8) = (_DWORD)v61;
      v23 = a1;
      if (v62 >= 2)
        goto LABEL_38;
    }
    else
    {
      v23 = a1;
    }
    goto LABEL_42;
  }
  v63 = v16;
  v32 = 7;
  if (!(_DWORD)v8)
    v32 = 8;
  v33 = *(_QWORD *)(((unint64_t)v27 + v32 + v17) & 0xFFFFFFFFFFFFF8);
  if (v33 >= 0xFFFFFFFF)
    LODWORD(v33) = -1;
  v22 = v33 + 1;
LABEL_37:
  v23 = a1;
  v34 = __src;
  if (v22)
  {
LABEL_38:
    v35 = 7;
    if (!(_DWORD)v8)
      v35 = 8;
    v36 = ((((((((v35 + v66 + v63) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    v37 = v23;
    goto LABEL_60;
  }
  v27 = (const void *)(((unint64_t)__src + v15) & v14);
LABEL_42:
  (*(void (**)(void *))(v5 + 32))(v23);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v27, 1, v64))
  {
    if ((_DWORD)v8)
      v38 = v66;
    else
      v38 = v66 + 1;
    memcpy((void *)(((unint64_t)v23 + v15) & v14), v27, v38);
  }
  else
  {
    (*(void (**)(unint64_t, const void *, uint64_t))(v7 + 32))(((unint64_t)v23 + v15) & v14, v27, v64);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(((unint64_t)v23 + v15) & v14, 0, 1, v64);
    if ((_DWORD)v8)
      v38 = v66;
    else
      v38 = v66 + 1;
  }
  v39 = (_OWORD *)((v38 + 7 + (((unint64_t)v23 + v15) & v14)) & 0xFFFFFFFFFFFFFFF8);
  v40 = (_OWORD *)(((unint64_t)v27 + v38 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v39 = *v40;
  v41 = (_OWORD *)(((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8);
  v42 = (_OWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v41 = *v42;
  v43 = (_OWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  v44 = (_OWORD *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v43 = *v44;
  *(_QWORD *)(((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFF8);
  return v23;
}

uint64_t sub_1A90A803C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (const void *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v12, v13, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  v18 = (_QWORD *)(((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  *(_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1A90A8198(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  size_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  size_t v32;

  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  v10 = v9 - 1;
  if (!(_DWORD)v9)
    v10 = 0;
  if (v10 <= v7)
    v11 = *(_DWORD *)(v6 + 84);
  else
    v11 = v10;
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = ~v12;
  v14 = *(_QWORD *)(v6 + 64) + v12;
  v32 = *(_QWORD *)(v8 + 64);
  if (v7 == v11)
  {
    if (!(*(unsigned int (**)(const void *))(v6 + 48))(a2))
    {
LABEL_23:
      v15 = (const void *)(((unint64_t)a2 + v14) & v13);
LABEL_24:
      v20 = a1;
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v15, 1, v4))
      {
        if ((_DWORD)v9)
          v21 = v32;
        else
          v21 = v32 + 1;
        memcpy((void *)(((unint64_t)a1 + v14) & v13), v15, v21);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v14) & v13, v15, v4);
        (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(((unint64_t)a1 + v14) & v13, 0, 1, v4);
        if ((_DWORD)v9)
          v21 = v32;
        else
          v21 = v32 + 1;
      }
      v22 = (_QWORD *)((v21 + 7 + (((unint64_t)a1 + v14) & v13)) & 0xFFFFFFFFFFFFFFF8);
      v23 = (_QWORD *)(((unint64_t)v15 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      v25 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
      v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
      v27 = v26[1];
      *v25 = *v26;
      v25[1] = v27;
      v28 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
      v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
      v30 = v29[1];
      *v28 = *v29;
      v28[1] = v30;
      *(_QWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFF8);
      swift_retain();
      swift_retain();
      swift_retain();
      return v20;
    }
  }
  else
  {
    v15 = (const void *)(((unint64_t)a2 + v14) & v13);
    if (v10 == v11)
    {
      if (v9 < 2
        || (*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(((unint64_t)a2 + v14) & v13, v9, v4) < 2)
      {
        goto LABEL_24;
      }
    }
    else
    {
      v16 = 7;
      if (!(_DWORD)v9)
        v16 = 8;
      v17 = *(_QWORD *)(((unint64_t)v15 + v16 + *(_QWORD *)(v8 + 64)) & 0xFFFFFFFFFFFFF8);
      if (v17 >= 0xFFFFFFFF)
        LODWORD(v17) = -1;
      if ((_DWORD)v17 == -1)
        goto LABEL_23;
    }
  }
  v18 = v14 & ~v12;
  v19 = 7;
  if (!(_DWORD)v9)
    v19 = 8;
  v20 = a1;
  memcpy(a1, a2, ((((((((v19 + v32 + v18) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
  return v20;
}

uint64_t sub_1A90A840C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;
  unsigned int v21;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= v6)
    v10 = *(_DWORD *)(v5 + 84);
  else
    v10 = v9;
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = *(_QWORD *)(v5 + 64) + v12;
  v14 = v11 + 7;
  if (v10 < a2)
  {
    if (((((((((((v14 + (v13 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v15 = 2;
    else
      v15 = a2 - v10 + 1;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    __asm { BR              X6 }
  }
  if (v6 == v10)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
  v19 = (v13 + a1) & ~v12;
  if (v9 == v10)
  {
    if (v8 < 2)
      return 0;
    v21 = (*(uint64_t (**)(uint64_t))(v7 + 48))(v19);
    if (v21 >= 2)
      return v21 - 1;
    else
      return 0;
  }
  else
  {
    v20 = *(_QWORD *)((v14 + v19) & 0xFFFFFFFFFFFFF8);
    if (v20 >= 0xFFFFFFFF)
      LODWORD(v20) = -1;
    return (v20 + 1);
  }
}

uint64_t type metadata accessor for ProducerInner.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ProducerInner.State);
}

uint64_t sub_1A90A85BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v8, v6);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A90A8678(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v4 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v3 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = v8 - 1;
  if (!(_DWORD)v8)
    v9 = 0;
  if (v9 <= v6)
    v10 = *(_DWORD *)(v5 + 84);
  else
    v10 = v9;
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  v11 = *(_QWORD *)(v5 + 64);
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = ~v12;
  if (v6 == v10)
  {
    result = (*(uint64_t (**)(uint64_t))(v5 + 48))(a1);
    if ((_DWORD)result)
      return result;
    goto LABEL_21;
  }
  v15 = (v11 + v12 + a1) & v13;
  if (v9 == v10)
  {
    if (v8 >= 2)
    {
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))((v11 + v12 + a1) & v13, v8, v3);
      if (result >= 2)
        return result;
    }
    goto LABEL_22;
  }
  v16 = 7;
  if (!(_DWORD)v8)
    v16 = 8;
  v17 = *(_QWORD *)((v16 + *(_QWORD *)(v7 + 64) + v15) & 0xFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  result = (v17 + 1);
  if ((_DWORD)v17 == -1)
  {
LABEL_21:
    v15 = (v11 + v12 + a1) & v13;
LABEL_22:
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v15, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v3);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A90A8830()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 32))();
}

uint64_t sub_1A90A886C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 24))();
}

uint64_t sub_1A90A88A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  sub_1A90A898C(a1, a2, a3);
  return swift_release();
}

void sub_1A90A8900()
{
  sub_1A93F73E0();
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
}

id sub_1A90A8940()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v1 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  result = sub_1A90A8990();
  *(_QWORD *)(v0 + v1) = result;
  return result;
}

void type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher()
{
  JUMPOUT(0x1AF413F6CLL);
}

id sub_1A90A8990()
{
  id v1;

  sub_1A93F73D4();
  return v1;
}

uint64_t sub_1A90A89B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v25 = a2;
  v26 = a3;
  v5 = *MEMORY[0x1E0DEEDD8] & *v3;
  v28 = sub_1A93F7D58();
  v31 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7DB8();
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F73E0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)((char *)v3 + qword_1EEABE8B8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))(v15, a1, v11, v14);
  v16 = (*(unsigned __int8 *)(v12 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v17 = (v13 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = *(_QWORD *)(v5 + 80);
  *(_OWORD *)(v18 + 24) = *(_OWORD *)(v5 + 88);
  *(_QWORD *)(v18 + 40) = *(_QWORD *)(v5 + 104);
  *(_QWORD *)(v18 + 48) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v18 + v16, v15, v11);
  v19 = (_QWORD *)(v18 + v17);
  v20 = v26;
  *v19 = v25;
  v19[1] = v20;
  aBlock[4] = sub_1A908A970;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_16_4;
  v21 = _Block_copy(aBlock);
  v22 = v3;
  swift_retain();
  sub_1A93F7D88();
  v32 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  v23 = v28;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v10, v7, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v23);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v30);
  return swift_release();
}

uint64_t sub_1A90A8C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  char *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a5;
  v22 = a4;
  v20[1] = a2;
  v20[2] = a3;
  v20[0] = a1;
  v24 = sub_1A93F75FC();
  v21 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)v20 - v9;
  sub_1A93F894C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1A9405950;
  v25 = AssociatedTypeWitness;
  swift_getMetatypeMetadata();
  v12 = sub_1A93F8094();
  v14 = v13;
  v15 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v16 = sub_1A90A92DC();
  *(_QWORD *)(v11 + 64) = v16;
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v14;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 16))(v10, v20[0], AssociatedTypeWitness);
  v17 = sub_1A93F8094();
  *(_QWORD *)(v11 + 96) = v15;
  *(_QWORD *)(v11 + 104) = v16;
  *(_QWORD *)(v11 + 72) = v17;
  *(_QWORD *)(v11 + 80) = v18;
  sub_1A93F75F0();
  sub_1A93F75B4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v6, v24);
}

id sub_1A90A8E48(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  _QWORD *v28;
  void *v30;
  uint64_t v31;
  id v32[2];

  v32[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = objc_msgSend(v3, sel_uuid);
  if (!v4)
    goto LABEL_12;
  v5 = v4;
  v6 = sub_1A93F8040();
  v8 = v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1A9405950;
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v11 = sub_1A90A92DC();
  *(_QWORD *)(v9 + 32) = 0xD000000000000018;
  *(_QWORD *)(v9 + 40) = 0x80000001A9447FE0;
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = v11;
  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 72) = v6;
  *(_QWORD *)(v9 + 80) = v8;
  v12 = sub_1A93F8064();
  v14 = v13;
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v3, sel_title);
  if (v15)
  {
    sub_1A93F8040();

    v15 = (id)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  v16 = (void *)sub_1A93F8010();
  v17 = objc_msgSend(v3, sel_provider);
  if (v17)
  {
    sub_1A93F8040();

    v17 = (id)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  v32[0] = 0;
  v18 = objc_msgSend(a2, sel_podcastItemWithTitle_itemId_artistName_error_, v15, v16, v17, v32);

  v19 = v32[0];
  if (!v18)
  {
    v20 = v19;
    v21 = (void *)sub_1A93F7128();

    swift_willThrow();
    if (qword_1ED2A8778 != -1)
      swift_once();
    v22 = sub_1A93F7698();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED2A8758);
    v23 = v21;
    v24 = v21;
    swift_bridgeObjectRetain();
    v25 = sub_1A93F7674();
    v26 = sub_1A93F879C();
    if (!os_log_type_enabled(v25, v26))
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    v27 = swift_slowAlloc();
    v28 = (_QWORD *)swift_slowAlloc();
    v30 = (void *)swift_slowAlloc();
    v32[0] = v30;
    *(_DWORD *)v27 = 141558531;
    sub_1A93F8AA8();
    *(_WORD *)(v27 + 12) = 2081;
    swift_bridgeObjectRetain();
    sub_1A906436C(v12, v14, (uint64_t *)v32);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 22) = 2112;
    v31 = sub_1A93F711C();
    sub_1A93F8AA8();
    *v28 = v31;

    _os_log_impl(&dword_1A904E000, v25, v26, "Unable to create KVItem from podcast: %{private,mask.hash}s with error: %@", (uint8_t *)v27, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v28, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v30, -1, -1);
    MEMORY[0x1AF41411C](v27, -1, -1);

LABEL_12:
    return 0;
  }

  swift_bridgeObjectRelease();
  return v18;
}

unint64_t sub_1A90A92DC()
{
  unint64_t result;

  result = qword_1ED2AC840;
  if (!qword_1ED2AC840)
  {
    result = MEMORY[0x1AF414014](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED2AC840);
  }
  return result;
}

id sub_1A90A9320(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v29;
  uint64_t v30;
  id v31[2];

  v31[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = objc_msgSend(v3, sel_uuid);
  if (!v4)
    goto LABEL_10;
  v5 = v4;
  v6 = sub_1A93F8040();
  v8 = v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1A9405950;
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v11 = sub_1A90A92DC();
  *(_QWORD *)(v9 + 32) = 0xD00000000000001FLL;
  *(_QWORD *)(v9 + 40) = 0x80000001A9447FC0;
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = v11;
  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 72) = v6;
  *(_QWORD *)(v9 + 80) = v8;
  v12 = sub_1A93F8064();
  v14 = v13;
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v3, sel_title);
  if (v15)
  {
    sub_1A93F8040();

    v15 = (id)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  v16 = (void *)sub_1A93F8010();
  v31[0] = 0;
  v17 = objc_msgSend(a2, sel_playlistItemWithName_itemId_error_, v15, v16, v31);

  v18 = v31[0];
  if (!v17)
  {
    v19 = v18;
    v20 = (void *)sub_1A93F7128();

    swift_willThrow();
    if (qword_1ED2A8778 != -1)
      swift_once();
    v21 = sub_1A93F7698();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED2A8758);
    v22 = v20;
    v23 = v20;
    swift_bridgeObjectRetain();
    v24 = sub_1A93F7674();
    v25 = sub_1A93F879C();
    if (!os_log_type_enabled(v24, v25))
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    v26 = swift_slowAlloc();
    v27 = (_QWORD *)swift_slowAlloc();
    v29 = (void *)swift_slowAlloc();
    v31[0] = v29;
    *(_DWORD *)v26 = 141558531;
    sub_1A93F8AA8();
    *(_WORD *)(v26 + 12) = 2081;
    swift_bridgeObjectRetain();
    sub_1A906436C(v12, v14, (uint64_t *)v31);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 22) = 2112;
    v30 = sub_1A93F711C();
    sub_1A93F8AA8();
    *v27 = v30;

    _os_log_impl(&dword_1A904E000, v24, v25, "Unable to create KVItem from station: %{private,mask.hash}s with error: %@", (uint8_t *)v26, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v27, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v29, -1, -1);
    MEMORY[0x1AF41411C](v26, -1, -1);

LABEL_10:
    return 0;
  }

  swift_bridgeObjectRelease();
  return v17;
}

_QWORD *EpisodeStatePersistentHistoryTracker.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD v15[2];

  v1 = v0;
  v15[0] = sub_1A93F885C();
  v2 = *(_QWORD *)(v15[0] - 8);
  MEMORY[0x1E0C80A78](v15[0]);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F8808();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A40C8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F7A64();
  sub_1A9066D74(&qword_1ED2A40C0, &qword_1ED2A40C8, MEMORY[0x1E0C960D0]);
  v11 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v1[2] = v11;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A93F7D88();
  v15[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, _QWORD))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D0], v15[0]);
  v1[3] = sub_1A93F888C();
  v12 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v13 = objc_msgSend(v12, sel_storeContext);

  v1[4] = v13;
  v1[5] = 0;
  return v1;
}

uint64_t sub_1A90A9A20()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4150);
  sub_1A9066D74(&qword_1ED2A4158, &qword_1ED2A4150, MEMORY[0x1E0DEAF38]);
  return sub_1A93F81C0();
}

uint64_t sub_1A90A9A94(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  _QWORD *v47;
  void *v48;
  id v49;
  id v50;
  char *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  id v79;
  void *v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  id v110;

  v105 = a1;
  v1 = sub_1A93F7698();
  v106 = *(_QWORD *)(v1 - 8);
  v107 = v1;
  MEMORY[0x1E0C80A78](v1);
  v104 = (char *)&v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v103 = (char *)&v84 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v5);
  v98 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F8988();
  v99 = *(_QWORD *)(v7 - 8);
  v100 = v7;
  MEMORY[0x1E0C80A78](v7);
  v97 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4058);
  v101 = *(_QWORD *)(v9 - 8);
  v102 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A3FD8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4018);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8930);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A3F38);
  v28 = MEMORY[0x1E0C80A78](v24);
  if (v105[5])
  {
    v29 = v105;
    v30 = v107;
    if (qword_1ED2A42A8 != -1)
      swift_once();
    v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED2A4290);
    swift_beginAccess();
    v32 = v106;
    v33 = v104;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v104, v31, v30);
    swift_retain_n();
    v34 = sub_1A93F7674();
    v35 = sub_1A93F8790();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      *(_DWORD *)v36 = 136315138;
      v108 = (id)v29[5];
      v109 = v37;
      v38 = v108;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A41F0);
      v39 = sub_1A93F8094();
      v108 = (id)sub_1A906436C(v39, v40, &v109);
      sub_1A93F8AA8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v34, v35, "Skipping startTrackingChanges(): Already tracking changes with current token: %s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v37, -1, -1);
      MEMORY[0x1AF41411C](v36, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v33, v107);
    }

    swift_release_n();
    v67 = *(uint64_t (**)(char *, uint64_t))(v32 + 8);
    v68 = v33;
  }
  else
  {
    v85 = v11;
    v86 = v15;
    v87 = v13;
    v88 = v12;
    v89 = v19;
    v90 = v17;
    v91 = v16;
    v92 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v93 = v23;
    v94 = v27;
    v95 = v21;
    v96 = v25;
    v104 = (char *)v20;
    v42 = v105;
    v43 = (void *)v105[4];
    v44 = objc_msgSend(v43, sel_persistentStoreCoordinator, v28);
    if (v44)
    {
      v45 = v44;
      v46 = objc_msgSend(v44, sel_currentPersistentHistoryTokenFromStores_, 0);

      if (v46)
      {
        v47 = v42;
        v48 = (void *)v42[5];
        v47[5] = v46;
        v49 = v46;

        sub_1A90A4E50();
        v50 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
        v51 = v97;
        sub_1A93F8994();

        v110 = (id)v47[3];
        v52 = v110;
        v53 = sub_1A93F882C();
        v54 = (uint64_t)v98;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v98, 1, 1, v53);
        sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
        sub_1A9066CA8((unint64_t *)&qword_1ED2A41D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
        sub_1A90C0B34((unint64_t *)&qword_1ED2A1C90, (unint64_t *)&qword_1ED2AD6C0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
        v55 = v52;
        v56 = v85;
        v57 = v100;
        sub_1A93F7C80();
        sub_1A905FD54(v54, &qword_1ED2A1C88);

        (*(void (**)(char *, uint64_t))(v99 + 8))(v51, v57);
        swift_allocObject();
        swift_weakInit();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4150);
        sub_1A9066D74(&qword_1ED2A4050, &qword_1ED2A4058, MEMORY[0x1E0C95CB8]);
        v58 = v86;
        v59 = v102;
        sub_1A93F7B84();
        swift_release();
        (*(void (**)(char *, uint64_t))(v101 + 8))(v56, v59);
        sub_1A93F78E4();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4028);
        sub_1A9066D74(&qword_1ED2A3FD0, &qword_1ED2A3FD8, MEMORY[0x1E0C95950]);
        sub_1A9066D74(&qword_1ED2A4020, &qword_1ED2A4028, MEMORY[0x1E0C95C10]);
        v60 = v89;
        v61 = v88;
        sub_1A93F7D34();
        (*(void (**)(char *, uint64_t))(v87 + 8))(v58, v61);
        swift_allocObject();
        swift_weakInit();
        sub_1A9066D74(&qword_1ED2A4010, &qword_1ED2A4018, MEMORY[0x1E0C95B78]);
        v62 = v93;
        v63 = v91;
        sub_1A93F7B30();
        swift_release();
        (*(void (**)(char *, uint64_t))(v90 + 8))(v60, v63);
        swift_allocObject();
        swift_weakInit();
        v64 = v92;
        v65 = v104;
        sub_1A93F7710();
        swift_release();
        (*(void (**)(char *, char *))(v95 + 8))(v62, v65);
        v66 = sub_1A906DD20();

        (*(void (**)(char *, uint64_t))(v94 + 8))(v64, v96);
        v47[2] = v66;
        return swift_release();
      }
    }
    if (qword_1ED2A42A8 != -1)
      swift_once();
    v69 = v107;
    v70 = __swift_project_value_buffer(v107, (uint64_t)qword_1ED2A4290);
    swift_beginAccess();
    v71 = v106;
    v72 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v103, v70, v69);
    swift_retain_n();
    v73 = sub_1A93F7674();
    v74 = sub_1A93F879C();
    if (!os_log_type_enabled(v73, v74))
    {

      swift_release_n();
      return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v72, v69);
    }
    v75 = swift_slowAlloc();
    v76 = swift_slowAlloc();
    v109 = v76;
    *(_DWORD *)v75 = 136315394;
    v108 = objc_msgSend(v43, (SEL)&selRef_setByteSize_);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCD18);
    v77 = sub_1A93F8094();
    v108 = (id)sub_1A906436C(v77, v78, &v109);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v75 + 12) = 2080;
    v79 = objc_msgSend(v43, sel_persistentStoreCoordinator);
    if (v79)
    {
      v80 = v79;
      v81 = objc_msgSend(v79, sel_currentPersistentHistoryTokenFromStores_, 0);

    }
    else
    {
      v81 = 0;
    }
    v30 = v107;
    v108 = v81;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A41F0);
    v82 = sub_1A93F8094();
    v108 = (id)sub_1A906436C(v82, v83, &v109);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v73, v74, "Unable to fetch initial Persistent History Token, we can't monitor changes from EpisodeStateRepository. persistentStoreCoordinator %s, token %s", (uint8_t *)v75, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v76, -1, -1);
    MEMORY[0x1AF41411C](v75, -1, -1);

    v67 = *(uint64_t (**)(char *, uint64_t))(v71 + 8);
    v68 = v103;
  }
  return v67(v68, v30);
}

id static OS_dispatch_queue.uiAssetPreparationQueue.getter()
{
  return sub_1A906F330(&qword_1ED2A5B40, (id *)&qword_1ED2A5B38);
}

uint64_t sub_1A90AA5E0(uint64_t a1)
{
  return sub_1A906E228(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A90AA5EC);
}

uint64_t sub_1A90AA5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a5;
  v28[2] = a3;
  v28[3] = a4;
  v28[1] = a2;
  v31 = sub_1A93F75FC();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v28[0] = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v28 - v12;
  swift_getAssociatedConformanceWitness();
  v14 = sub_1A93F78C0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v28 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)v28 - v16, a1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v17, 1, AssociatedTypeWitness) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v17, AssociatedTypeWitness);
  sub_1A93F894C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1A9405950;
  v32 = swift_getAssociatedTypeWitness();
  swift_getMetatypeMetadata();
  v20 = sub_1A93F8094();
  v22 = v21;
  v23 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
  v24 = sub_1A90A92DC();
  *(_QWORD *)(v19 + 64) = v24;
  *(_QWORD *)(v19 + 32) = v20;
  *(_QWORD *)(v19 + 40) = v22;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, AssociatedTypeWitness);
  v25 = sub_1A93F8094();
  *(_QWORD *)(v19 + 96) = v23;
  *(_QWORD *)(v19 + 104) = v24;
  *(_QWORD *)(v19 + 72) = v25;
  *(_QWORD *)(v19 + 80) = v26;
  v27 = v28[0];
  sub_1A93F75F0();
  sub_1A93F75B4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
}

uint64_t Publisher.bufferedMulticast()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = sub_1A93F8A90();
  MEMORY[0x1E0C80A78](v4);
  v29 = (char *)&v20 - v5;
  v6 = sub_1A93F77DC();
  v30 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v9 = sub_1A93F79D4();
  v10 = MEMORY[0x1AF414014](MEMORY[0x1E0C95950], v6);
  v23 = v10;
  v22 = MEMORY[0x1AF414014](MEMORY[0x1E0C95FB0], v9);
  v31 = v6;
  v32 = v9;
  v33 = v10;
  v34 = v22;
  v25 = sub_1A93F7878();
  v24 = MEMORY[0x1AF414014](MEMORY[0x1E0C95C98], v25);
  v27 = sub_1A93F7740();
  v26 = MEMORY[0x1AF414014](MEMORY[0x1E0C95768], v27);
  v11 = sub_1A93F7734();
  v28 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - v12;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  sub_1A93F7B84();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v29, 1, 1, AssociatedTypeWitness);
  sub_1A93F79E0();
  v15 = sub_1A93F7CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v6);
  v31 = v15;
  v16 = sub_1A93F79F8();
  swift_release();
  v31 = v16;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  sub_1A93F7B30();
  swift_release();
  swift_release();
  MEMORY[0x1AF414014](MEMORY[0x1E0C95708], v11);
  v18 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v11);
  return v18;
}

uint64_t sub_1A90AAC3C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1A90AAC48(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27[3];
  _OWORD v28[3];
  _QWORD v29[4];
  uint64_t v30;

  v22 = a1;
  v20 = *v2;
  v4 = *(_QWORD *)(v20 + 88);
  v5 = sub_1A93F8A90();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(v4 - 8) + 56))((char *)&v19 - v8, 1, 1, v4, v7);
  v10 = *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 176));
  v11 = sub_1A90C13A0((uint64_t)v9, v10, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v12 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 136));
  swift_beginAccess();
  *v12 = v11;
  swift_bridgeObjectRelease();
  v13 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 144));
  swift_beginAccess();
  v14 = *v13;
  v30 = 0;
  memset(v29, 0, sizeof(v29));
  swift_bridgeObjectRetain();
  *v13 = sub_1A90C1450((uint64_t)v29, v10);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(*v2 + 184);
  v21 = v2;
  os_unfair_lock_unlock((os_unfair_lock_t)(*(uint64_t *)((char *)v2 + v15) + 16));
  v16 = 0;
  v17 = *(_QWORD *)(v14 + 16);
  v23 = xmmword_1A940B720;
  while (1)
  {
    if (v16 == v17)
    {
      memset(v28, 0, 32);
      v16 = v17;
      v28[2] = v23;
      goto LABEL_7;
    }
    if (v16 >= *(_QWORD *)(v14 + 16))
      break;
    sub_1A905E4E4(v14 + 32 + 40 * v16, (uint64_t)v27);
    *(_QWORD *)&v28[0] = v16;
    sub_1A90AAF8C((uint64_t)v27, (uint64_t)v28 + 8);
    ++v16;
LABEL_7:
    sub_1A90AAF44((uint64_t)v28, (uint64_t)v29);
    if (v30 == 2)
    {
      swift_bridgeObjectRelease();
      sub_1A93F7890();
      return;
    }
    v18 = v29[0];
    sub_1A90AAF8C((uint64_t)&v29[1], (uint64_t)v28);
    if (v18 == a2)
    {
      sub_1A905E684((uint64_t)v28);
    }
    else
    {
      sub_1A905E4E4((uint64_t)v28, (uint64_t)&v24);
      if (v25 > 1)
      {
        sub_1A905D4AC(&v24, (uint64_t)&v26);
        __swift_project_boxed_opaque_existential_1(&v26, v27[2]);
        sub_1A93F78B4();
        sub_1A905E684((uint64_t)v28);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v26);
      }
      else
      {
        sub_1A905E684((uint64_t)v28);
        sub_1A905E684((uint64_t)&v24);
      }
    }
  }
  __break(1u);
}

uint64_t sub_1A90AAF44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90AAF8C(uint64_t a1, uint64_t a2)
{
  __swift_memcpy40_8(a2, a1);
  return a2;
}

uint64_t static Logger.downloads.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A3F28, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A3F08, a1);
}

uint64_t sub_1A90AAFEC(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = sub_1A93F7698();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F762C();
  __swift_allocate_value_buffer(v11, a2);
  __swift_project_value_buffer(v11, (uint64_t)a2);
  if (*a3 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v7, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  return sub_1A93F7614();
}

uint64_t sub_1A90AB0D4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1A90AB0E4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A90AB168()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A90AB170()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Cache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Cache);
}

uint64_t CompoundDownloadedAssetIssueIdentifier.startIdentifyingIssues(for:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[5];
  uint64_t v30;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8E88);
  v24 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8FE0);
  v27 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8D58);
  v28 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v29[0] = *v2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9318);
  sub_1A9066D74(&qword_1ED2A9320, &qword_1ED2A9318, MEMORY[0x1E0DEAF38]);
  sub_1A93F7860();
  *(_QWORD *)&v29[0] = *(_QWORD *)(a1 + 80);
  v14 = *(void **)&v29[0];
  v15 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
  sub_1A9066C6C();
  sub_1A9066D74(&qword_1ED2A8E80, &qword_1ED2A8E88, MEMORY[0x1E0C95C10]);
  sub_1A905FD90();
  v16 = v14;
  sub_1A93F7C80();
  sub_1A90C0C1C((uint64_t)v6);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
  sub_1A90708E8(a1, (uint64_t)v29);
  v17 = swift_allocObject();
  v18 = v29[3];
  *(_OWORD *)(v17 + 48) = v29[2];
  *(_OWORD *)(v17 + 64) = v18;
  *(_OWORD *)(v17 + 80) = v29[4];
  *(_QWORD *)(v17 + 96) = v30;
  v19 = v29[1];
  *(_OWORD *)(v17 + 16) = v29[0];
  *(_OWORD *)(v17 + 32) = v19;
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9018);
  sub_1A9066D74(&qword_1ED2A8FD8, &qword_1ED2A8FE0, MEMORY[0x1E0C95CB8]);
  sub_1A9066D74(&qword_1ED2A9010, &qword_1ED2A9018, MEMORY[0x1E0C95D90]);
  v20 = v25;
  sub_1A93F7D28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v20);
  sub_1A9066D74(&qword_1ED2A8D50, &qword_1ED2A8D58, MEMORY[0x1E0C95B78]);
  v21 = v26;
  v22 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v21);
  return v22;
}

uint64_t sub_1A90AB548()
{
  sub_1A90AB564();
  return swift_deallocClassInstance();
}

id *sub_1A90AB564()
{
  id *v0;

  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_release();
  return v0;
}

uint64_t sub_1A90AB5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = MEMORY[0x1AF414014](&unk_1A9420EF8, a4);
  return PFProducer.receive<A>(subscriber:)(a1, a4, a2, v8, a3);
}

uint64_t sub_1A90AB61C@<X0>(unint64_t *a1@<X8>)
{
  return sub_1A90A3E74(a1);
}

uint64_t sub_1A90AB624@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1A907454C(a1, a2);
}

uint64_t sub_1A90AB62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A90892EC(a1, a2);
}

uint64_t sub_1A90AB6B4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  char v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  char *v25;
  char *v26;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v4 = v3;
  v34 = a3;
  v30 = a2;
  ObjectType = swift_getObjectType();
  v7 = sub_1A93F7D58();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v31 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F7DB8();
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OBJC_IVAR___PFDeferredLaunchTaskCoordinator__adminQueue;
  if (!a1)
    goto LABEL_4;
  v14 = *(void **)(v3 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__adminQueue);
  sub_1A9066C6C();
  v15 = v14;
  v16 = a1;
  v17 = sub_1A93F8A3C();

  if ((v17 & 1) != 0)
  {
    __break(1u);
LABEL_4:
    v16 = *(id *)(v4 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__workQueue);
  }
  v18 = *(void **)(v4 + v13);
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v20 = (_QWORD *)swift_allocObject();
  v21 = v30;
  v20[2] = v19;
  v20[3] = v21;
  v30 = v8;
  v20[4] = v34;
  v20[5] = v16;
  v20[6] = ObjectType;
  aBlock[4] = sub_1A908BDD8;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_10_3;
  v22 = _Block_copy(aBlock);
  swift_retain_n();
  v23 = a1;
  v24 = v18;
  swift_retain();
  v29 = v16;
  v25 = v12;
  sub_1A93F7D88();
  v35 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  v26 = v31;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v25, v26, v22);
  _Block_release(v22);

  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v7);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v33);
  swift_release();
  return swift_release();
}

uint64_t sub_1A90AB994@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A908A5EC(*(_QWORD *)(v1 + 16), a1);
}

ValueMetadata *type metadata accessor for AnyEpisodeBookmarkStateRule()
{
  return &type metadata for AnyEpisodeBookmarkStateRule;
}

double PlayButtonTimeFormatHelper.timeLeft.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t PlayButtonTimeFormatHelper.widgetCountDownHelper.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t destroy for ModernEpisodeDownloadState(uint64_t a1)
{
  return sub_1A9085FE0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t storeEnumTagSinglePayload for LibraryEntity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModernEpisodeDownloadState()
{
  return &type metadata for ModernEpisodeDownloadState;
}

uint64_t type metadata accessor for AnyAssetBackgroundSession(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyAssetBackgroundSession);
}

uint64_t sub_1A90ABA30()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F8A90();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1A90ABB64()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1A90ABC18()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A90ABC20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A9078F14(a1, a2, *(void **)(v2 + 16));
}

uint64_t ForegroundSessionSource.init(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  *(_QWORD *)(swift_allocObject() + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9290);
  swift_allocObject();
  result = sub_1A93F7A94();
  *a2 = result;
  return result;
}

uint64_t static EpisodeStateIdentifier.== infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) == 0)
    return (a6 & 1) == 0 && a1 == a4;
  if ((a6 & 1) != 0)
  {
    if (a1 == a4 && a2 == a5)
      return 1;
    else
      return sub_1A93F90C0();
  }
  else
  {
    return 0;
  }
}

uint64_t type metadata accessor for DownloadedAssetEffect()
{
  uint64_t result;

  result = qword_1ED2A70B8;
  if (!qword_1ED2A70B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static EpisodeDownloadState.state(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  char v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  char v8;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 9);
  v5 = *(_BYTE *)(a1 + 11);
  result = Set<>.firstEpisodeUUID.getter(*(_QWORD *)a1);
  if (!v7)
  {
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    v8 = -2;
    goto LABEL_7;
  }
  if ((v5 & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    v8 = -64;
LABEL_7:
    *(_BYTE *)(a2 + 16) = v8;
    return result;
  }
  if (v3)
  {
    v8 = v4 | 0x80;
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v7;
    goto LABEL_7;
  }
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

uint64_t Set<>.firstEpisodeUUID.getter(uint64_t result)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = 0;
  v2 = result + 56;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (v5)
    {
      v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v8 = v7 | (v1 << 6);
      goto LABEL_5;
    }
    v10 = v1 + 1;
    if (__OFADD__(v1, 1))
      break;
    if (v10 >= v6)
      return 0;
    v11 = *(_QWORD *)(v2 + 8 * v10);
    ++v1;
    if (!v11)
    {
      v1 = v10 + 1;
      if (v10 + 1 >= v6)
        return 0;
      v11 = *(_QWORD *)(v2 + 8 * v1);
      if (!v11)
      {
        v1 = v10 + 2;
        if (v10 + 2 >= v6)
          return 0;
        v11 = *(_QWORD *)(v2 + 8 * v1);
        if (!v11)
        {
          v12 = v10 + 3;
          if (v12 >= v6)
            return 0;
          v11 = *(_QWORD *)(v2 + 8 * v12);
          if (!v11)
          {
            while (1)
            {
              v1 = v12 + 1;
              if (__OFADD__(v12, 1))
                goto LABEL_25;
              if (v1 >= v6)
                return 0;
              v11 = *(_QWORD *)(v2 + 8 * v1);
              ++v12;
              if (v11)
                goto LABEL_20;
            }
          }
          v1 = v12;
        }
      }
    }
LABEL_20:
    v13 = __clz(__rbit64(v11));
    v5 = (v11 - 1) & v11;
    v8 = v13 + (v1 << 6);
LABEL_5:
    v9 = *(_QWORD *)(result + 48) + 24 * v8;
    if (*(_BYTE *)(v9 + 16) == 1)
    {
      v14 = *(_QWORD *)v9;
      swift_bridgeObjectRetain();
      return v14;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for EpisodeBookmarkState()
{
  return &type metadata for EpisodeBookmarkState;
}

uint64_t sub_1A90ABF30()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for WrappedUserDefaults(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WrappedUserDefaults);
}

uint64_t destroy for EpisodesTransaction(id *a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t storeEnumTagSinglePayload for BaseFeedResponse.ParsedResponseCache(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

_QWORD *initializeWithCopy for EpisodesTransaction(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t EpisodeListSettings.sort.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t InMemoryAssetCache.init<A>(maxWeight:purgePublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A9084E30(a1, a2, a3, a4, (uint64_t (*)(void))sub_1A9084E78);
}

ValueMetadata *type metadata accessor for EpisodeStateDomain()
{
  return &type metadata for EpisodeStateDomain;
}

void sub_1A90AC0C0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1A90AC1B4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1A90AC228);
}

void sub_1A90AC1BC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1A90AC1C4);
  JUMPOUT(0x1A90AC228);
}

void sub_1A90AC204()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A90AC228);
}

void sub_1A90AC20C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A90AC228);
}

uint64_t sub_1A90AC214(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1A90AC228);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1A90AC224);
    JUMPOUT(0x1A90AC220);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

void sub_1A90AC27C()
{
  JUMPOUT(0x1AF414014);
}

void sub_1A90AC28C()
{
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A90AC29C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_1A93F8A90();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A90AC348()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A90AC350()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for AnyAssetCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyAssetCache);
}

void sub_1A90AC364()
{
  JUMPOUT(0x1AF414014);
}

void sub_1A90AC374()
{
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A90AC384()
{
  sub_1A9398904();
  return swift_deallocClassInstance();
}

uint64_t sub_1A90AC3A4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy35_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t os_feature_enabled_prototype_up_next()
{
  return _os_feature_enabled_impl();
}

uint64_t sub_1A90AC56C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1A93F7698();
  v6 = __swift_project_value_buffer(v5, a2);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

id static OS_os_log.jsSignpost.getter()
{
  return sub_1A9069274(&qword_1ED2A1E10, (id *)&qword_1ED2A1E08);
}

uint64_t static OS_os_log.feedUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AC56C(&qword_1ED2A4288, (uint64_t)qword_1ED2A4268, a1);
}

id sub_1A90AC630(void *a1)
{
  return objc_msgSend(a1, sel__setNonAppInitiated_);
}

void *sub_1A90AC63C()
{
  return sub_1A90AC65C();
}

void *sub_1A90AC65C()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1A93F8010();
  v7[0] = 0;
  v2 = objc_msgSend(v0, sel_subpathsOfDirectoryAtPath_error_, v1, v7);

  v3 = v7[0];
  if (v2)
  {
    v1 = (void *)sub_1A93F8310();
    v4 = v3;

  }
  else
  {
    v5 = v7[0];
    sub_1A93F7128();

    swift_willThrow();
  }
  return v1;
}

uint64_t Sequence.uniqued<A>(by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;

  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = sub_1A93F7ECC();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, v4, a2);
  v15 = a2;
  v16 = a3;
  v17 = a4;
  v18 = a1;
  v19 = &v20;
  v12 = sub_1A93F8208();
  swift_bridgeObjectRelease();
  return v12;
}

id sub_1A90AC824(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1A90AC898();
    v4 = (void *)sub_1A93F7ED8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

unint64_t sub_1A90AC898()
{
  unint64_t result;

  result = qword_1ED2A4248;
  if (!qword_1ED2A4248)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2A4248);
  }
  return result;
}

uint64_t sub_1A90AC8D4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Publisher.makeOptional.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedTypeWitness;
  uint64_t v21;
  uint64_t v22;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = sub_1A93F8A90();
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - v5;
  v7 = sub_1A93F77DC();
  v21 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - v9;
  v18 = MEMORY[0x1AF414014](MEMORY[0x1E0C95950], v7, v8);
  v11 = sub_1A93F777C();
  v19 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - v12;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = sub_1A914F138;
  v15[5] = v14;
  sub_1A93F7B84();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v6, 1, 1);
  sub_1A93F7B48();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v7);
  MEMORY[0x1AF414014](MEMORY[0x1E0C957E8], v11);
  v16 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v11);
  return v16;
}

uint64_t sub_1A90ACB5C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1A90ACB7C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1A90ACC4C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t static Logger.currentPage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(qword_1ED2A4880, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A8740, a1);
}

uint64_t static OSSignposter.listenNow.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A58B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1ED2A5898, a1);
}

uint64_t sub_1A90ACCA0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A90ACCF8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A90ACD00@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(v2 + 16, v4, v5);
  *a2 = result;
  return result;
}

uint64_t sub_1A90ACD54()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1A90ACDD0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1AF414014](&unk_1A9420F14);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A90ACDFC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t CoreDataEpisodeAssetIssueIdentifier.startIdentifyingIssues(for:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[5];
  uint64_t v34;
  id v35;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8EF0);
  v30 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8958);
  v31 = *(_QWORD *)(v9 - 8);
  v32 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *v1;
  if (qword_1ED2A3F00 != -1)
    swift_once();
  v12 = sub_1A93F7698();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A3EE0);
  v13 = sub_1A93F7674();
  v14 = sub_1A93F8784();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_1A904E000, v13, v14, "Starting consistency check for downloaded assets in CoreData library", v15, 2u);
    MEMORY[0x1AF41411C](v15, -1, -1);
  }

  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1A90C424C();
  v19 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v17 + 8))(v18, v16, v17);

  *(_QWORD *)&v33[0] = v19;
  v35 = (id)a1[10];
  v20 = v35;
  v21 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v5, 1, 1, v21);
  v22 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9048);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1ED2A9040, &qword_1ED2A9048, MEMORY[0x1E0C95D90]);
  sub_1A905FD90();
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v5, &qword_1ED2A1C88);

  swift_release();
  sub_1A90708E8((uint64_t)a1, (uint64_t)v33);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v29;
  v24 = v33[3];
  *(_OWORD *)(v23 + 56) = v33[2];
  *(_OWORD *)(v23 + 72) = v24;
  *(_OWORD *)(v23 + 88) = v33[4];
  *(_QWORD *)(v23 + 104) = v34;
  v25 = v33[1];
  *(_OWORD *)(v23 + 24) = v33[0];
  *(_OWORD *)(v23 + 40) = v25;
  type metadata accessor for DownloadConsistency.Issue(0);
  sub_1A9066D74(&qword_1ED2A8EE8, &qword_1ED2A8EF0, MEMORY[0x1E0C95CB8]);
  swift_unknownObjectRetain();
  sub_1A93F7B30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v6);
  sub_1A9066D74(&qword_1ED2A8950, &qword_1ED2A8958, MEMORY[0x1E0C95708]);
  v26 = v32;
  v27 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v26);
  return v27;
}

uint64_t ModernEpisodeDownloadStateMachine.currentState.getter()
{
  return swift_retain();
}

void sub_1A90AD1D0()
{
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A90AD1E0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t assignWithTake for LibraryPodcastStateDataSource.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  if (*(_QWORD *)(a1 + 48) >= 3uLL)
  {
    v5 = *(_QWORD *)(a2 + 48);
    if (v5 >= 3)
    {
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v5;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      return a1;
    }
    sub_1A914CC8C(a1 + 32);
  }
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t AssetRemovalProcessorDelegate.init(episodeAndShowStorage:library:workQueue:managedAssetDirectory:)@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1A905D4AC(a1, a5);
  sub_1A905D4AC(a2, a5 + 40);
  v9 = type metadata accessor for AssetRemovalProcessorDelegate();
  *(_QWORD *)(a5 + *(int *)(v9 + 28)) = a3;
  v10 = a5 + *(int *)(v9 + 24);
  v11 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a4, v11);
}

ValueMetadata *type metadata accessor for TimeBombedTranscriptProvider()
{
  return &type metadata for TimeBombedTranscriptProvider;
}

uint64_t sub_1A90AD3E0()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 144) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160));
  return swift_deallocClassInstance();
}

uint64_t sub_1A90AD41C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1A90AD4C0()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  _BYTE *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  const char *v18;
  uint64_t ObjectType;
  double v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = sub_1A93F7D40();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_1A93F7DE8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (os_unfair_lock_s *)(*(_QWORD *)&v0[OBJC_IVAR___PFManagedObjectContextMonitor_lock] + 16);
  os_unfair_lock_lock(v9);
  if (!v0[OBJC_IVAR___PFManagedObjectContextMonitor_status])
  {
    v0[OBJC_IVAR___PFManagedObjectContextMonitor_status] = 1;
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A93F7DDC();
    v20 = *(double *)&v0[OBJC_IVAR___PFManagedObjectContextMonitor_pingInterval];
    *v4 = 0;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF480], v1);
    MEMORY[0x1AF41270C](v8, v4, ObjectType, v20);
    swift_unknownObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (qword_1ED2AC9E0 != -1)
      swift_once();
    v21 = sub_1A93F7698();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED2AD000);
    v11 = v0;
    v12 = sub_1A93F7674();
    v13 = sub_1A93F87B4();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v25 = v15;
      *(_DWORD *)v14 = 136446210;
      v22 = sub_1A93F8CA0();
      v24 = sub_1A906436C(v22, v23, &v25);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      v18 = "%{public}s - Monitoring Core Data queue hangs";
      goto LABEL_10;
    }
LABEL_11:

    goto LABEL_12;
  }
  if (qword_1ED2AC9E0 != -1)
    swift_once();
  v10 = sub_1A93F7698();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED2AD000);
  v11 = v0;
  v12 = sub_1A93F7674();
  v13 = sub_1A93F879C();
  if (!os_log_type_enabled(v12, v13))
    goto LABEL_11;
  v14 = (uint8_t *)swift_slowAlloc();
  v15 = swift_slowAlloc();
  v25 = v15;
  *(_DWORD *)v14 = 136446210;
  v16 = sub_1A93F8CA0();
  v24 = sub_1A906436C(v16, v17, &v25);
  sub_1A93F8AA8();

  swift_bridgeObjectRelease();
LABEL_10:
  _os_log_impl(&dword_1A904E000, v12, v13, v18, v14, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1AF41411C](v15, -1, -1);
  MEMORY[0x1AF41411C](v14, -1, -1);

LABEL_12:
  os_unfair_lock_unlock(v9);
}

uint64_t sub_1A90AD8B8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1AF414014](&protocol conformance descriptor for FetchedResultsListPublisher<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A90AD8E4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FeedUpdateRequestCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedUpdateRequestCollection);
}

void sub_1A90AD954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A90AD95C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

void sub_1A90AD95C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  void *v11;
  id v12;
  _QWORD v13[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = *(void **)(a3 + 16);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = sub_1A909CFCC;
  v10[3] = v8;
  v10[4] = a3;
  v10[5] = a4;
  v13[4] = sub_1A909CEF0;
  v13[5] = v10;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1A908A91C;
  v13[3] = &block_descriptor_86;
  v11 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  v12 = a4;
  swift_release();
  objc_msgSend(v9, sel_performBlock_, v11);
  _Block_release(v11);
}

uint64_t PlayButtonTimeFormatHelper.FormatStyle.formatStyleUnits.getter(char a1)
{
  uint64_t v1;
  uint64_t v2;

  if (!a1)
    return MEMORY[0x1E0DEE9E8];
  if (a1 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A8);
    sub_1A93F93FC();
    v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1A9405950;
    sub_1A93F93E4();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A8);
    sub_1A93F93FC();
    v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1A9405520;
  }
  sub_1A93F93F0();
  v2 = sub_1A9133FB0(v1);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v2;
}

uint64_t sub_1A90ADBAC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

void sub_1A90ADBC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  void *v7;
  id v8;

  v7 = (void *)sub_1A93F8010();
  v8 = objc_msgSend((id)objc_opt_self(), sel_keyWithName_crossDeviceSync_, v7, a4 & 1);

  *a5 = v8;
}

uint64_t type metadata accessor for CoreDataKeyRequestStorage()
{
  return objc_opt_self();
}

uint64_t sub_1A90ADCCC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1A90ADD1C()
{
  return swift_allocateGenericValueMetadata();
}

void sub_1A90ADD24()
{
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A90ADD34()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  sub_1A93F78C0();
  result = sub_1A93F8A90();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1A90ADDFC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1A90ADE44(uint64_t a1)
{
  uint64_t v1;

  sub_1A9079148(a1, *(os_unfair_lock_s **)(v1 + 16), *(char **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), (_QWORD *)(v1 + 48));
}

void sub_1A90ADE58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(sub_1A93F726C() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v5 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + v9 + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  sub_1A90ADEF8(a1, a2, v2 + v8, *(void **)(v2 + v9), v2 + v11, *(_QWORD *)(v2 + ((*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFF8)), v5, v6);
}

void sub_1A90ADEF8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  id v24;
  void (*v25)(_QWORD *__return_ptr, uint64_t, uint64_t);
  id v26;
  double v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v30 = a7;
  v31 = a4;
  v33 = a5;
  v13 = sub_1A93F726C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1A93F6D80();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
  swift_retain();
  sub_1A93F6D50();
  v20 = (void *)sub_1A93F6D2C();
  v21 = (_QWORD *)swift_allocObject();
  v22 = v30;
  v21[2] = v30;
  v21[3] = a8;
  v21[4] = sub_1A906A540;
  v21[5] = v19;
  aBlock[4] = sub_1A906A438;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9069D94;
  aBlock[3] = &block_descriptor_83;
  v23 = _Block_copy(aBlock);
  swift_release();
  v24 = objc_msgSend(v31, sel_dataTaskWithRequest_completionHandler_, v20, v23);
  _Block_release(v23);

  v25 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a8 + 24);
  v26 = v24;
  v25(aBlock, v22, a8);
  *(float *)&v27 = flt_1A9406340[SLOBYTE(aBlock[0])];
  objc_msgSend(v26, sel_setPriority_, v27);

  objc_msgSend(v26, sel_resume);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v34);
  swift_beginAccess();
  v28 = *(void **)(a6 + 16);
  *(_QWORD *)(a6 + 16) = v26;

}

uint64_t sub_1A90AE154@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(sub_1A93F726C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1A9078BDC(v1 + v6, *(void **)(v1 + v7), v1 + ((v8 + v7 + 8) & ~v8), v3, v4, a1);
}

uint64_t sub_1A90AE1D0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1A90AE278()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

id sub_1A90AE30C@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1A9363638(a1, *(_BYTE *)(v2 + 16), *(void **)(v2 + 24), a2);
}

id sub_1A90AE318@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2;
  void **v3;
  void *v4;

  if (*(_BYTE *)(v2 + 16))
    v3 = (void **)(v2 + 24);
  else
    v3 = a1;
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_1A90AE334()
{
  type metadata accessor for FallbackProcessingStep();
}

void sub_1A90AE390(uint64_t a1)
{
  void **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  sub_1A90AE3E8(v1, *(unsigned __int8 *)(v2 + v8), v2 + ((v8 + v9 + 1) & ~v9), v4, v5, v6, v7, v3);
}

void sub_1A90AE3E8(void **a1@<X0>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  double v17;
  void *v18;
  uint64_t v19;
  id v20;
  _QWORD v21[2];
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v24 = a4;
  v25 = a6;
  v27 = a3;
  v28 = a8;
  v22 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v23 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = (char *)v21 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v21[1] = v14;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v29 = AssociatedTypeWitness;
  v30 = v14;
  v31 = AssociatedConformanceWitness;
  v32 = MEMORY[0x1E0DEDB38];
  v16 = sub_1A93F7854();
  v26 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v18 = *a1;
  (*(void (**)(uint64_t, uint64_t, double))(a7 + 48))(a5, a7, v17);
  v19 = swift_allocObject();
  *(_BYTE *)(v19 + 16) = v22;
  *(_QWORD *)(v19 + 24) = v18;
  v20 = v18;
  sub_1A93F7C98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, AssociatedTypeWitness);
  v29 = v24;
  v30 = a5;
  v31 = v25;
  v32 = a7;
  type metadata accessor for FallbackProcessingStep();
}

uint64_t sub_1A90AE5A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v5 = MEMORY[0x1AF414014](&protocol conformance descriptor for FallbackProcessingStep<A, B>, a1);
  AssetProcessingStep.metadataTrace.getter(a1, v5, v3 - 120);
  v6 = sub_1A93F9474();
  v8 = v7;
  v9 = MEMORY[0x1AF414014](MEMORY[0x1E0C95BC8], v1);
  v10 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)(v3 - 120, (uint64_t)"FallbackBackupSource", 20, 2, 0, v6, v8, v10 & 1, *(_QWORD *)(v3 - 128), v1, v9);
  swift_bridgeObjectRelease();
  sub_1A9060D8C(v3 - 120);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 144) + 8))(v2, v1);
}

uint64_t dispatch thunk of EpisodeStateController.startObservingChanges()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t sub_1A90AE7A0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A90AE828(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A90727FC(a1, a2, v2 + v5, *(void **)(v2 + v6), *(_QWORD **)(v2 + ((v6 + 15) & 0xFFFFFFFFFFFFF8)), v3, *(_QWORD *)(v2 + 24));
}

id static DeviceCapacityMonitor.shared.getter()
{
  if (qword_1ED2A2E08 != -1)
    swift_once();
  return (id)qword_1ED2A2E00;
}

ValueMetadata *type metadata accessor for DeviceCapacityMonitor.CapacityLevel()
{
  return &type metadata for DeviceCapacityMonitor.CapacityLevel;
}

uint64_t sub_1A90AE8B8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1A90AE8F0@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 10);
  return result;
}

void sub_1A90AE8FC(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void static EpisodeBookmarkState.episodeStateDomain.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1A90AE914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return StorageChangeStream.receive<A>(subscriber:)(a1, a4);
}

uint64_t sub_1A90AE928()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *assignWithCopy for EpisodeStateChanges(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id sub_1A90AEA30()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v6;
  __int128 v7;
  unint64_t v8;
  _UNKNOWN **v9;
  __int128 v10;
  uint64_t v11;
  _UNKNOWN **v12;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_privateQueueContext);

  v2 = type metadata accessor for CoreDataDownloadPersistence();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  v11 = v2;
  v12 = &protocol witness table for CoreDataDownloadPersistence;
  *(_QWORD *)&v10 = v3;
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v8 = sub_1A9066EB8();
  v9 = &protocol witness table for NSFileManager;
  *(_QWORD *)&v7 = v4;
  if (qword_1ED2A93F0 != -1)
    swift_once();
  v6 = (id)qword_1ED2A93E0;
  sub_1A905D4AC(&v10, (uint64_t)&unk_1ED2A6B98);
  sub_1A905D4AC(&v7, (uint64_t)&unk_1ED2A6BC0);
  qword_1ED2A6BE8 = (uint64_t)v6;
  return v6;
}

ValueMetadata *type metadata accessor for SubscriptionStatus()
{
  return &type metadata for SubscriptionStatus;
}

uint64_t type metadata accessor for PurchaseController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PurchaseController);
}

uint64_t type metadata accessor for StorePurchaseTask()
{
  return objc_opt_self();
}

id FairPlayKeyLoader.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t LocalSnapshotBag.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void sub_1A90AEBD8(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static EpisodePlayState.episodeStateDomain.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t type metadata accessor for FeedURLComposer()
{
  return objc_opt_self();
}

uint64_t sub_1A90AEC4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1A90AEC80()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A90AED0C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A90AEDB8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return static FRPSectionInfo<>.== infix(_:_:)(a1, a2, a3[2], a3[3], *(_QWORD *)(a4 - 8), a3[4]);
}

uint64_t sub_1A90AEDCC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t EyebrowBuilder.subscriptionBadge.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for AnalyticsEvent()
{
  return objc_opt_self();
}

uint64_t sub_1A90AEF44()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1A90AEF64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t __swift_memcpy11_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(_QWORD *)result = v2;
  return result;
}

os_log_t _MTLogCategoryFeedUpdate()
{
  return os_log_create("com.apple.podcasts", "FeedUpdate");
}

os_log_t _MTLogCategoryNetwork()
{
  return os_log_create("com.apple.podcasts", "Network");
}

void EpisodeSortType.descriptors.getter(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A90AF328()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sortDescriptorsForPubDateAscending_, 0);
  sub_1A90AF8C4();
  v1 = sub_1A93F8310();

  return v1;
}

unint64_t sub_1A90AF8C4()
{
  unint64_t result;

  result = qword_1ED2A4190;
  if (!qword_1ED2A4190)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2A4190);
  }
  return result;
}

uint64_t os_feature_enabled_remove_clean_episode_title()
{
  return _os_feature_enabled_impl();
}

void sub_1A90B1BE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_1A90B1E0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A90B279C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t os_feature_enabled_use_episode_description_for_summary()
{
  return _os_feature_enabled_impl();
}

uint64_t sub_1A90B3344(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  sub_1A93F8040();
  v5 = a3;
  v6 = a1;
  LOBYTE(a1) = sub_1A90672F4();

  swift_bridgeObjectRelease();
  return a1 & 1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

os_log_t _MTLogCategoryCloudSync()
{
  return os_log_create("com.apple.podcasts", "CloudSync");
}

void sub_1A90B38E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_log_t _MTLogCategoryPlayback()
{
  return os_log_create("com.apple.podcasts", "Playback");
}

id EpisodeListSettings.predicate.getter()
{
  __int128 *v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *((_QWORD *)v0 + 9);
  v2 = *((unsigned __int8 *)v0 + 80);
  v3 = *((unsigned __int8 *)v0 + 81);
  v4 = *((unsigned __int8 *)v0 + 82);
  v16 = *v0;
  v17 = v0[1];
  v18 = v0[2];
  v19 = v0[3];
  LOWORD(v20) = *((_WORD *)v0 + 32);
  LOWORD(v21) = *((_WORD *)v0 + 40);
  BYTE2(v21) = *((_BYTE *)v0 + 82);
  sub_1A90B4EF8();
  v6 = v5;
  if (v1 == 3)
  {
    if (!v2)
      goto LABEL_3;
  }
  else
  {
    v10 = objc_msgSend((id)objc_opt_self(), sel_predicateForPubDateLimit_, v1, v16, v17, v18, v19, v20, v1, v21);
    v11 = objc_msgSend(v6, sel_AND_, v10);

    v6 = v11;
    if (!v2)
    {
LABEL_3:
      if (!v3)
        goto LABEL_4;
LABEL_8:
      v14 = objc_msgSend((id)objc_opt_self(), sel_predicateForEpisodeTypeFilter_, 5);
      v15 = objc_msgSend(v6, sel_AND_, v14);

      v6 = v15;
      if (v4)
        goto LABEL_5;
      return v6;
    }
  }
  v12 = objc_msgSend((id)objc_opt_self(), sel_predicateForVisuallyPlayed_, 0);
  v13 = objc_msgSend(v6, sel_AND_, v12);

  v6 = v13;
  if (v3)
    goto LABEL_8;
LABEL_4:
  if (v4)
  {
LABEL_5:
    v7 = objc_msgSend((id)objc_opt_self(), sel_predicateForAudio_, 1);
    v8 = objc_msgSend(v6, sel_AND_, v7);

    return v8;
  }
  return v6;
}

void sub_1A90B4EF8()
{
  uint64_t v1;

  v1 = sub_1A93F726C();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X10 }
}

id sub_1A90B4F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;

  *(_QWORD *)(v11 - 128) = v3;
  v12 = *(_QWORD *)(v6 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  if (v12)
  {
    *(_QWORD *)(v11 - 184) = v1;
    *(_QWORD *)(v11 - 176) = v0;
    *(_QWORD *)(v11 - 168) = v8;
    *(_QWORD *)(v11 - 160) = v7;
    *(_QWORD *)(v11 - 144) = v4;
    *(_QWORD *)(v11 - 136) = v5;
    *(_QWORD *)(v11 - 88) = v13;
    swift_bridgeObjectRetain();
    sub_1A929E39C(0, v12, 0);
    v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    *(_QWORD *)(v11 - 152) = v6;
    v15 = v6 + v14;
    v16 = *(_QWORD *)(v9 + 72);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    do
    {
      v17(v2, v15, v10);
      v18 = sub_1A93F7170();
      *(_QWORD *)(v11 - 96) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v11 - 120) = v18;
      *(_QWORD *)(v11 - 112) = v19;
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v10);
      v20 = *(_QWORD *)(v11 - 88);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A929E39C(0, *(_QWORD *)(v20 + 16) + 1, 1);
        v20 = *(_QWORD *)(v11 - 88);
      }
      v22 = *(_QWORD *)(v20 + 16);
      v21 = *(_QWORD *)(v20 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1A929E39C(v21 > 1, v22 + 1, 1);
        v20 = *(_QWORD *)(v11 - 88);
      }
      *(_QWORD *)(v20 + 16) = v22 + 1;
      sub_1A908A5DC((_OWORD *)(v11 - 120), (_OWORD *)(v20 + 32 * v22 + 32));
      v15 += v16;
      --v12;
    }
    while (v12);
    sub_1A90531EC(*(_QWORD *)(v11 - 152), *(_QWORD *)(v11 - 160), *(_QWORD *)(v11 - 144), *(_QWORD *)(v11 - 136), *(_QWORD *)(v11 - 184), *(_QWORD *)(v11 - 128), *(_QWORD *)(v11 - 176), *(_QWORD *)(v11 - 168), 0);
  }
  v23 = (void *)objc_opt_self();
  v24 = objc_allocWithZone(MEMORY[0x1E0C99E40]);
  v25 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend(v24, sel_initWithArray_, v25);

  v27 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v28 = objc_msgSend(v27, sel_privateQueueContext);

  v29 = objc_msgSend(v23, sel_predicateForCategoryPageFromYourShows_ctx_, v26, v28);
  return v29;
}

uint64_t os_feature_enabled_unfollowed_shows_in_up_next()
{
  return _os_feature_enabled_impl();
}

id NSPersistentStringForMTEpisodePriceType(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  NSObject *v6;
  void *v7;
  _DWORD v8[2];
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  MTEpisodePriceTypeToPersistentStringMap_inverted(0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v4, "length"))
  {
    if (v4)
      return v4;
LABEL_7:
    MTEpisodeContextSortTypeToPersistentStringMap_inverted(0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "objectForKey:", &unk_1E5538C60);
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    return v4;
  }
  _MTLogCategoryDefault();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    v8[0] = 67109120;
    v8[1] = a1;
    _os_log_impl(&dword_1A904E000, v6, OS_LOG_TYPE_ERROR, "Invalid MTEpisodePriceType encountered (%d)", (uint8_t *)v8, 8u);
  }

  if (!v4)
    goto LABEL_7;
  return v4;
}

uint64_t MTEpisodePriceTypeFromPersistentString(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v1 = a1;
  MTEpisodePriceTypeToPersistentStringMap_inverted(1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v1);
  v3 = objc_claimAutoreleasedReturnValue();

  if (v3)
    v4 = (void *)v3;
  else
    v4 = &unk_1E5538C60;
  v5 = objc_msgSend(v4, "unsignedIntegerValue");

  return v5;
}

id MTEpisodePriceTypeToPersistentStringMap_inverted(int a1)
{
  uint64_t *v2;

  if (MTEpisodePriceTypeToPersistentStringMap_inverted_onceToken != -1)
    dispatch_once(&MTEpisodePriceTypeToPersistentStringMap_inverted_onceToken, &__block_literal_global_356);
  v2 = &MTEpisodePriceTypeToPersistentStringMap_inverted_invertedMap;
  if (!a1)
    v2 = &MTEpisodePriceTypeToPersistentStringMap_inverted_map;
  return (id)*v2;
}

void sub_1A90B7178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1A90B7324(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A90B7574(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_log_t _MTLogCategoryRestrictions()
{
  return os_log_create("com.apple.podcasts", "Restrictions");
}

os_log_t _MTLogCategoryLifecycle()
{
  return os_log_create("com.apple.podcasts", "Lifecycle");
}

uint64_t os_feature_enabled_debounced_asset_management()
{
  return _os_feature_enabled_impl();
}

os_log_t _MTLogCategoryDefault()
{
  return os_log_create("com.apple.podcasts", "Podcasts");
}

void sub_1A90B9E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A90BA0AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1A90BA248(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t objectdestroy_14Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 24));
  a2(*(_QWORD *)(v2 + 40));
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_14Tm_0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

void sub_1A90BA58C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A90BA6F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A90BAAF4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void EpisodeStateRepository.enqueueEpisodeStateFetch(for:)(unint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  os_log_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  _QWORD v30[2];
  uint64_t v31;
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v6 = a3 & 1;
  v7 = sub_1A93F7698();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v3 + 32);
  v12 = *(_QWORD *)(v3 + 40);
  v13 = *(unsigned __int8 *)(v3 + 48);
  if (v13 == 255)
    goto LABEL_17;
  if ((v13 & 1) != 0)
  {
    if (v6)
    {
      if (v11 == a1 && v12 == a2 || (sub_1A93F90C0() & 1) != 0)
        goto LABEL_10;
      v11 = *(_QWORD *)(v3 + 32);
      v12 = *(_QWORD *)(v3 + 40);
      LOBYTE(v13) = *(_BYTE *)(v3 + 48);
    }
LABEL_17:
    *(_QWORD *)(v3 + 32) = a1;
    *(_QWORD *)(v3 + 40) = a2;
    *(_BYTE *)(v3 + 48) = v6;
    sub_1A90BB110(v11, v12, v13);
    sub_1A9086E60(a1, a2, v6);
    v24 = (void *)sub_1A90BAFB8(a1, a2, v6);
    v25 = *(void **)(v3 + 16);
    v26 = swift_allocObject();
    swift_weakInit();
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v26;
    *(_QWORD *)(v27 + 24) = a1;
    *(_QWORD *)(v27 + 32) = a2;
    *(_BYTE *)(v27 + 40) = v6 != 0;
    *(_QWORD *)(v27 + 48) = v24;
    aBlock[4] = sub_1A909D3B0;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_43;
    v28 = _Block_copy(aBlock);
    sub_1A9086E60(a1, a2, v6);
    v29 = v24;
    swift_release();
    objc_msgSend(v25, sel_performBlock_, v28);
    _Block_release(v28);

    return;
  }
  if (v6 || v11 != a1)
    goto LABEL_17;
LABEL_10:
  if (qword_1ED2A42A8 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED2A4290);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v14, v7);
  sub_1A9086E60(a1, a2, v6);
  sub_1A9086E60(a1, a2, v6);
  v15 = sub_1A93F7674();
  v16 = sub_1A93F8784();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v32 = v15;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    v31 = v19;
    *(_DWORD *)v18 = 136380675;
    v36 = v19;
    v30[1] = v18 + 4;
    v33 = a1;
    v34 = a2;
    v35 = v6 != 0;
    sub_1A9086E60(a1, a2, v6);
    v20 = sub_1A93F8094();
    v33 = sub_1A906436C(v20, v21, &v36);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9086E08(a1, a2, v6);
    sub_1A9086E08(a1, a2, v6);
    v22 = v32;
    _os_log_impl(&dword_1A904E000, v32, v16, "Skip refetch for id: %{private}s", v18, 0xCu);
    v23 = v31;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v23, -1, -1);
    MEMORY[0x1AF41411C](v18, -1, -1);

  }
  else
  {
    sub_1A9086E08(a1, a2, v6);
    sub_1A9086E08(a1, a2, v6);

  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_1A90BAFB8(unint64_t result, uint64_t a2, char a3)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  if ((a3 & 1) != 0)
  {
    v4 = (void *)objc_opt_self();
    v5 = (void *)sub_1A93F8010();
    v3 = objc_msgSend(v4, sel_predicateForEpisodeUuid_, v5);

    goto LABEL_5;
  }
  if ((result & 0x8000000000000000) == 0)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_predicateForEpisodeStoreTrackId_, result);
LABEL_5:
    sub_1A93F8040();
    v6 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
    v7 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

    objc_msgSend(v8, sel_setPredicate_, v3);
    return (unint64_t)v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A90BB110(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1A9086E08(result, a2, a3 & 1);
  return result;
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

os_log_t _MTLogCategoryiTunesMigration()
{
  return os_log_create("com.apple.podcasts", "iTunesMigration");
}

void sub_1A90BB574(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_log_t _MTLogCategoryArtworkDownload()
{
  return os_log_create("com.apple.podcasts", "ArtworkDownload");
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A93F73E0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 88))
    __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for KCUTranscriptProvider();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();

  swift_release();
  v4 = v3 + *(int *)(v1 + 28);
  v5 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DownloadConsistency.Issue(0) - 8) + 80);
  v2 = (v1 + 16) & ~v1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v5 = sub_1A93F73E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v2, v5);
    v6 = v0 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48);
    v7 = sub_1A93F726C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    v4 = sub_1A93F73E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190);
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t objectdestroyTm_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A93F75FC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC40) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC38);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_9()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_10()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 72))
    __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_11(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_12()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_13()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_14()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_15()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return swift_deallocObject();
}

uint64_t objectdestroy_21Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_16(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v1 + v4, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v1 + v4, v6);
  swift_bridgeObjectRelease();
  v8 = v1 + v4 + *(int *)(v2 + 36);
  if (*(_QWORD *)(v8 + 24))
    __swift_destroy_boxed_opaque_existential_0(v8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v1 + ((((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_17()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_18()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1A90BBFC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A90BC0A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A90BC200(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A90BC694(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t objectdestroy_27Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for MediaRequest.Params();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  sub_1A9114BD0(*(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + v3 + 16), *(_QWORD *)(v0 + v3 + 24), *(_QWORD *)(v0 + v3 + 32), *(_BYTE *)(v0 + v3 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 96);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + ((((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm_0(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm_1()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A93F8430();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm_3(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  uint64_t v10;

  v3 = sub_1A93F726C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = a1(0);
  v8 = (v6 + *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v9 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v9(v1 + v5, v3);

  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v1 + v8, 1, v3))
    v9(v1 + v8, v3);
  swift_bridgeObjectRelease();
  v10 = v1 + v8 + *(int *)(v7 + 36);
  if (*(_QWORD *)(v10 + 24))
    __swift_destroy_boxed_opaque_existential_0(v10);
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm_4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  swift_release();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v1 + v4, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v1 + v4, v6);
  swift_bridgeObjectRelease();
  v9 = v1 + v4 + *(int *)(v2 + 36);
  if (*(_QWORD *)(v9 + 24))
    __swift_destroy_boxed_opaque_existential_0(v9);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v1 + ((((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + v8 + 40) & ~v8), v6);
  return swift_deallocObject();
}

uint64_t objectdestroy_54Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A90BE694(*(id *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

os_log_t _MTLogCategorySiri()
{
  return os_log_create("com.apple.podcasts", "Siri");
}

os_log_t _MTLogCategoryPrivacy()
{
  return os_log_create("com.apple.podcasts", "Privacy");
}

os_log_t _MTLogCategoryBackgroundFetching()
{
  return os_log_create("com.apple.podcasts", "BackgroundFetching");
}

void sub_1A90BD824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t objectdestroy_29Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;

  swift_release();
  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 56);
  if (v1 != 255)
    sub_1A913A0C0(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v1);
  v2 = *(unsigned __int8 *)(v0 + 88);
  if (v2 != 255)
    sub_1A913A0D8(*(id *)(v0 + 80), v2);
  v3 = *(unsigned __int8 *)(v0 + 104);
  if (v3 != 255)
    sub_1A913A0D8(*(id *)(v0 + 96), v3);
  v4 = *(unsigned __int8 *)(v0 + 120);
  if (v4 != 255)
    sub_1A913A0D8(*(id *)(v0 + 112), v4);
  v5 = *(unsigned __int8 *)(v0 + 136);
  if (v5 != 255)
    sub_1A913A0D8(*(id *)(v0 + 128), v5);
  v6 = *(unsigned __int8 *)(v0 + 152);
  if (v6 != 255)
    sub_1A913A0D8(*(id *)(v0 + 144), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 264))
    __swift_destroy_boxed_opaque_existential_0(v0 + 240);
  return swift_deallocObject();
}

void sub_1A90BE410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;

  swift_release();
  sub_1A912C6B4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));

  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v0 + 168) != 2)
    sub_1A90531EC(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_BYTE *)(v0 + 152));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_1(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_2()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_3()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void sub_1A90BE694(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

void sub_1A90BEADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A90BEEB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSDRDiagnosticReporterClass_block_invoke(uint64_t a1)
{
  Class result;

  SymptomDiagnosticReporterLibrary();
  result = objc_getClass("SDRDiagnosticReporter");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getSDRDiagnosticReporterClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getSDRDiagnosticReporterClass_block_invoke_cold_1();
    return (Class)SymptomDiagnosticReporterLibrary();
  }
  return result;
}

uint64_t SymptomDiagnosticReporterLibrary()
{
  uint64_t v0;
  void *v2;

  if (!SymptomDiagnosticReporterLibraryCore_frameworkLibrary)
    SymptomDiagnosticReporterLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = SymptomDiagnosticReporterLibraryCore_frameworkLibrary;
  if (!SymptomDiagnosticReporterLibraryCore_frameworkLibrary)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

__n128 __swift_memcpy83_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 79) = *(_DWORD *)(a2 + 79);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

id sub_1A90BF154(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_1A90BF160(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

_QWORD *sub_1A90BF1B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1A90C156C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1A9120240();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1A90BF298(uint64_t a1)
{
  return sub_1A906C204(a1, &qword_1ED2A47B8, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1A90C1768);
}

_QWORD *sub_1A90BF2AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1A931162C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1A9120240();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1A90BF394(uint64_t a1)
{
  return sub_1A906C204(a1, &qword_1ED2A47B8, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1A90C18FC);
}

uint64_t sub_1A90BF3A8(uint64_t a1)
{
  return sub_1A90BF3BC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A90BF3BC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A929F80C(a1, a2, a3, a4, (uint64_t *)&unk_1ED2A44B0);
}

_QWORD *sub_1A90BF3C8(_QWORD *a1)
{
  return sub_1A90BF500(0, a1[2], 0, a1);
}

_QWORD *sub_1A90BF3DC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9710);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A90BF514(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A90BF500(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A9117F84(a1, a2, a3, a4, &qword_1ED2AC4C8);
}

uint64_t sub_1A90BF514(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A90BF608()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4328);
  v3 = sub_1A93F8C34();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1A93F92DC();
    swift_bridgeObjectRetain();
    sub_1A93F7FBC();
    result = sub_1A93F9324();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A90BF8B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A5B50);
  result = sub_1A93F8C34();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_1A93F92DC();
    sub_1A93F930C();
    result = sub_1A93F9324();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A90BFB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  char v44;
  BOOL v45;
  char v46;
  unint64_t v48;
  uint64_t isStackAllocationSafe;
  uint64_t v50;
  char v51;
  unint64_t v52;
  size_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  char *v73;
  _QWORD v74[6];

  v74[5] = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v2 = *(_QWORD *)(a1 + 56);
  v59 = a1 + 56;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  v57 = ~v3;
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & v2;
  v58 = (unint64_t)(63 - v3) >> 6;
  v73 = (char *)(a2 + 56);
  v7 = swift_bridgeObjectRetain();
  v8 = a2;
  v61 = 0;
  v60 = v7;
  v66 = a2;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v10 = (v5 - 1) & v5;
      v11 = v9 | (v61 << 6);
    }
    else
    {
      v12 = v61 + 1;
      if (__OFADD__(v61, 1))
      {
        __break(1u);
        goto LABEL_70;
      }
      v13 = v8;
      if (v12 >= v58)
        goto LABEL_67;
      v14 = *(_QWORD *)(v59 + 8 * v12);
      v15 = v61 + 1;
      if (!v14)
      {
        v15 = v61 + 2;
        if (v61 + 2 >= v58)
          goto LABEL_67;
        v14 = *(_QWORD *)(v59 + 8 * v15);
        if (!v14)
        {
          v15 = v61 + 3;
          if (v61 + 3 >= v58)
            goto LABEL_67;
          v14 = *(_QWORD *)(v59 + 8 * v15);
          if (!v14)
          {
            v15 = v61 + 4;
            if (v61 + 4 >= v58)
              goto LABEL_67;
            v14 = *(_QWORD *)(v59 + 8 * v15);
            if (!v14)
            {
              v16 = v61 + 5;
              if (v61 + 5 >= v58)
              {
LABEL_67:
                sub_1A9120240();
                return v13;
              }
              v14 = *(_QWORD *)(v59 + 8 * v16);
              if (!v14)
              {
                while (1)
                {
                  v15 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    break;
                  if (v15 >= v58)
                    goto LABEL_67;
                  v14 = *(_QWORD *)(v59 + 8 * v15);
                  ++v16;
                  if (v14)
                    goto LABEL_24;
                }
LABEL_70:
                __break(1u);
              }
              v15 = v61 + 5;
            }
          }
        }
      }
LABEL_24:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v15 << 6);
      v61 = v15;
    }
    v17 = *(_QWORD *)(v7 + 48) + 72 * v11;
    v19 = *(_QWORD *)v17;
    v18 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = *(unsigned __int8 *)(v17 + 24);
    v23 = *(_QWORD *)(v17 + 32);
    v22 = *(_QWORD *)(v17 + 40);
    v25 = *(_QWORD *)(v17 + 48);
    v24 = *(_QWORD *)(v17 + 56);
    v26 = *(_QWORD *)(v17 + 64);
    sub_1A93F92DC();
    swift_bridgeObjectRetain();
    v67 = v23;
    v65 = v24;
    sub_1A9094654(v23, v22, v25);
    v70 = v19;
    v71 = v18;
    sub_1A93F7FBC();
    v72 = v21;
    sub_1A93F92F4();
    if (v21 != 1)
      sub_1A93F930C();
    v64 = v22;
    v69 = v25;
    v62 = v10;
    v63 = v26;
    v68 = v20;
    sub_1A93F92E8();
    if (v25 > 2)
    {
      sub_1A93F92F4();
      sub_1A93F7FBC();
      sub_1A93F92F4();
      sub_1A93F930C();
    }
    v27 = sub_1A93F9324();
    v28 = -1 << *(_BYTE *)(v66 + 32);
    v29 = v27 & ~v28;
    v31 = v70;
    v30 = v71;
    if (((*(_QWORD *)&v73[(v29 >> 3) & 0xFFFFFFFFFFFFF8] >> v29) & 1) != 0)
      break;
LABEL_6:
    swift_bridgeObjectRelease();
    sub_1A9094668(v67, v64, v69);
    v8 = v66;
    v7 = v60;
    v5 = v62;
  }
  v32 = ~v28;
  v33 = *(_QWORD *)(v66 + 48);
  while (1)
  {
    v34 = v33 + 72 * v29;
    v35 = *(_QWORD *)(v34 + 16);
    v36 = *(_BYTE *)(v34 + 24);
    v37 = *(_QWORD *)(v34 + 32);
    v38 = *(_QWORD *)(v34 + 40);
    v40 = *(_QWORD *)(v34 + 48);
    v39 = *(_QWORD *)(v34 + 56);
    v41 = *(_QWORD *)(v34 + 64);
    if (*(_QWORD *)v34 != v31 || *(_QWORD *)(v34 + 8) != v30)
    {
      v43 = sub_1A93F90C0();
      v31 = v70;
      v30 = v71;
      if ((v43 & 1) == 0)
        goto LABEL_32;
    }
    if ((v36 & 1) != 0)
    {
      if (!v72)
        goto LABEL_32;
    }
    else
    {
      v44 = v72;
      if (v35 != v68)
        v44 = 1;
      if ((v44 & 1) != 0)
        goto LABEL_32;
    }
    if (!v40)
    {
      if (!v69)
      {
        v48 = 0;
        v74[0] = v60;
        goto LABEL_63;
      }
      goto LABEL_32;
    }
    if (v40 == 1)
      break;
    if (v40 == 2)
    {
      if (v69 == 2)
      {
        v74[0] = v60;
        v48 = 2;
        goto LABEL_63;
      }
    }
    else if (v69 >= 3 && ((v67 ^ ((v37 & 1) == 0)) & 1) != 0)
    {
      v45 = v38 == v64 && v40 == v69;
      if (v45 || (v46 = sub_1A93F90C0(), v31 = v70, v30 = v71, (v46 & 1) != 0))
      {
        if (((v65 ^ v39) & 1) == 0 && v41 == v63)
        {
          v74[0] = v60;
          v48 = v69;
          goto LABEL_63;
        }
      }
    }
LABEL_32:
    v29 = (v29 + 1) & v32;
    if (((*(_QWORD *)&v73[(v29 >> 3) & 0xFFFFFFFFFFFFF8] >> v29) & 1) == 0)
      goto LABEL_6;
  }
  if (v69 != 1)
    goto LABEL_32;
  v74[0] = v60;
  v48 = 1;
LABEL_63:
  v74[1] = v59;
  v74[2] = v57;
  v74[3] = v61;
  v74[4] = v62;
  swift_bridgeObjectRelease();
  isStackAllocationSafe = sub_1A9094668(v67, v64, v48);
  v50 = v66;
  v51 = *(_BYTE *)(v66 + 32);
  v52 = (unint64_t)((1 << v51) + 63) >> 6;
  v53 = 8 * v52;
  if ((v51 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v57 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v73, v53);
    sub_1A91F40A4((unint64_t *)((char *)&v57 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0)), v52, v50, v29, v74);
    v13 = v54;
    swift_release();
    sub_1A9120240();
  }
  else
  {
    v55 = (void *)swift_slowAlloc();
    memcpy(v55, v73, v53);
    sub_1A91F40A4((unint64_t *)v55, v52, v66, v29, v74);
    v13 = v56;
    swift_release();
    sub_1A9120240();
    MEMORY[0x1AF41411C](v55, -1, -1);
  }
  return v13;
}

uint64_t sub_1A90C029C(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A1E40);
}

uint64_t sub_1A90C02C0()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1ED2AC308 = result;
  return result;
}

uint64_t sub_1A90C0320(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A9620);
}

uint64_t static OS_os_log.cloudSync.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AC56C(&qword_1ED2A48C0, (uint64_t)qword_1ED2A9620, a1);
}

uint64_t sub_1A90C0360()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1ED2A4308 = result;
  return result;
}

uint64_t sub_1A90C03BC()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1ED2AC300 = result;
  return result;
}

id static OS_os_log.restore.getter()
{
  return sub_1A9069274(&qword_1ED2AC7D8, (id *)&qword_1ED2AC300);
}

uint64_t sub_1A90C0434()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1ED2A42F0 = result;
  return result;
}

uint64_t sub_1A90C0490()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1ED2A1CE8 = result;
  return result;
}

id static OS_os_log.launch.getter()
{
  return sub_1A9069274(&qword_1ED2A1CF0, (id *)&qword_1ED2A1CE8);
}

uint64_t sub_1A90C0504()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1ED2A42B0 = result;
  return result;
}

uint64_t sub_1A90C056C(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A4290);
}

unint64_t static OS_os_log.podcastsSubsystem.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_1A90C05B4()
{
  uint64_t result;

  sub_1A906BB20();
  result = sub_1A93F8A78();
  qword_1ED2A1E08 = result;
  return result;
}

uint64_t sub_1A90C0604(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A4268);
}

id sub_1A90C0628(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v7[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_donatorWithItemType_originAppId_error_, a1, v2, v7);

  if (v3)
  {
    v4 = v7[0];
  }
  else
  {
    v5 = v7[0];
    sub_1A93F7128();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_1A90C0714()
{
  uint64_t result;

  result = sub_1A93F8010();
  qword_1ED2A95F0 = result;
  return result;
}

uint64_t sub_1A90C0748()
{
  uint64_t result;

  result = sub_1A93F8010();
  qword_1ED2A95E0 = result;
  return result;
}

uint64_t sub_1A90C077C()
{
  uint64_t result;

  result = sub_1A93F8010();
  qword_1ED2A95C8 = result;
  return result;
}

uint64_t sub_1A90C07B0()
{
  uint64_t result;

  result = sub_1A93F8010();
  qword_1ED2A95B8 = result;
  return result;
}

void sub_1A90C07E4()
{
  JUMPOUT(0x1AF414014);
}

void sub_1A90C07F4()
{
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A90C0804()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A93F75FC();
  if (v1 <= 0x3F)
  {
    result = sub_1A93F8A90();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1A90C08A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F738C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A90C0910()
{
  return MEMORY[0x1E0DEDD18];
}

BOOL sub_1A90C091C(void *a1)
{
  id v1;
  Swift::Bool v2;

  v1 = a1;
  v2 = NSURL.isHLSPlaylist()();

  return v2;
}

Swift::Bool __swiftcall NSURL.isHLSPlaylist()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v23;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A3EA0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F759C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - v9;
  v11 = objc_msgSend(v1, sel_pathExtension, v8);
  if (!v11)
    goto LABEL_4;
  v12 = v11;
  sub_1A93F8040();

  sub_1A93F7560();
  sub_1A93F7548();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A9110B9C((uint64_t)v4);
LABEL_4:
    v13 = 0;
    return v13 & 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
  v14 = sub_1A93F753C();
  v16 = v15;
  v17 = objc_msgSend((id)*MEMORY[0x1E0CEC548], sel_identifier);
  v18 = sub_1A93F8040();
  v20 = v19;

  if (v14 == v18 && v16 == v20)
    v13 = 1;
  else
    v13 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  return v13 & 1;
}

uint64_t sub_1A90C0B34(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1A9072534(255, a2);
    result = MEMORY[0x1AF414014](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1A90C0B74(uint64_t a1, uint64_t a2)
{
  void **v2;
  void *v3;
  void *v4;
  _QWORD v5[6];

  v3 = *v2;
  if (a1)
  {
    v5[4] = a1;
    v5[5] = a2;
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 1107296256;
    v5[2] = sub_1A90BF160;
    v5[3] = &block_descriptor_88;
    v4 = _Block_copy(v5);
    swift_retain();
    swift_release();
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v3, sel_finish_, v4);
  _Block_release(v4);
}

uint64_t sub_1A90C0C1C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A90C0C5C(uint64_t a1)
{
  return sub_1A9085918(a1, (void (*)(unint64_t, uint64_t))MEMORY[0x1E0DEF598], 0xD000000000000031, 0x80000001A9447D30, &qword_1ED2A93E0);
}

id static OS_dispatch_queue.localAssetSupportWorkQueue.getter()
{
  return sub_1A906F330(&qword_1ED2A93F0, (id *)&qword_1ED2A93E0);
}

uint64_t sub_1A90C0CA4(uint64_t a1)
{
  return sub_1A9085918(a1, (void (*)(unint64_t, uint64_t))MEMORY[0x1E0DEF598], 0xD00000000000002FLL, 0x80000001A9447D00, &qword_1ED2A93C8);
}

uint64_t sub_1A90C0CD0(uint64_t a1)
{
  return sub_1A9085918(a1, (void (*)(unint64_t, uint64_t))MEMORY[0x1E0DEF580], 0xD000000000000036, 0x80000001A9447CC0, &qword_1ED2A5B38);
}

uint64_t sub_1A90C0CFC(uint64_t a1)
{
  return sub_1A9085918(a1, (void (*)(unint64_t, uint64_t))MEMORY[0x1E0DEF598], 0xD000000000000041, 0x80000001A9447D70, &qword_1ED2A93B8);
}

id sub_1A90C0D28(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_integerForKey_, v2);

  return v3;
}

void NSUserDefaults.fairPlayVersion.getter(BOOL *a1@<X8>)
{
  void *v1;
  void *v3;
  id v4;
  uint64_t v5;
  BOOL v6;

  swift_bridgeObjectRetain();
  v3 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_stringForKey_, v3);

  if (v4)
  {
    sub_1A93F8040();

    v5 = sub_1A93F8ED4();
    swift_bridgeObjectRelease();
    v6 = 0;
    if (v5)
      v6 = v5 == 1;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
}

id sub_1A90C0E6C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F8040();
  v5 = a1;
  NSUserDefaults.lastExecution(of:)((uint64_t)v4);

  swift_bridgeObjectRelease();
  v6 = sub_1A93F738C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
  {
    v8 = (void *)sub_1A93F7314();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return v8;
}

uint64_t NSUserDefaults.lastExecution(of:)@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v3;
  id v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  *(_QWORD *)&v9[0] = 0;
  *((_QWORD *)&v9[0] + 1) = 0xE000000000000000;
  sub_1A93F8C70();
  sub_1A93F810C();
  sub_1A93F810C();
  v3 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_objectForKey_, v3, v9[0]);

  if (v4)
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_1A90A4E08((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    v5 = sub_1A93F738C();
    v6 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
  }
  else
  {
    sub_1A90A593C((uint64_t)v10);
    v8 = sub_1A93F738C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

Swift::Bool __swiftcall NSFileManager.directoryExists(atPath:)(Swift::String atPath)
{
  void *v1;
  void *v2;
  unsigned __int8 v3;
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v5 = 0;
  v2 = (void *)sub_1A93F8010();
  v3 = objc_msgSend(v1, sel_fileExistsAtPath_isDirectory_, v2, &v5);

  return v3 & v5;
}

uint64_t sub_1A90C1158()
{
  uint64_t v0;

  return sub_1A90C1160(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A90C1160(uint64_t a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = (id)(*(uint64_t (**)(void))(a1 + 16))();
  if (!v1)
    return 0;
  v2 = v1;
  sub_1A90AC898();
  v3 = sub_1A93F7EFC();

  return v3;
}

uint64_t sub_1A90C11C8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18[7];
  _OWORD v19[4];
  uint64_t v20;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v3 + 8 * v15);
    ++v8;
    if (!v16)
    {
      v8 = v15 + 1;
      if (v15 + 1 >= v7)
        return swift_release();
      v16 = *(_QWORD *)(v3 + 8 * v8);
      if (!v16)
      {
        v8 = v15 + 2;
        if (v15 + 2 >= v7)
          return swift_release();
        v16 = *(_QWORD *)(v3 + 8 * v8);
        if (!v16)
        {
          v8 = v15 + 3;
          if (v15 + 3 >= v7)
            return swift_release();
          v16 = *(_QWORD *)(v3 + 8 * v8);
          if (!v16)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v16 - 1) & v16;
    v10 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_6:
    v11 = *(_QWORD *)(v2 + 48) + 72 * v10;
    v19[0] = *(_OWORD *)v11;
    v13 = *(_OWORD *)(v11 + 32);
    v12 = *(_OWORD *)(v11 + 48);
    v14 = *(_OWORD *)(v11 + 16);
    v20 = *(_QWORD *)(v11 + 64);
    v19[2] = v13;
    v19[3] = v12;
    v19[1] = v14;
    sub_1A908E2B0(v19);
    sub_1A926EDA4((uint64_t *)v19, (uint64_t)v18);
    sub_1A9273DDC(v18[0], v18[1], v18[2], v18[3], v18[4], v18[5], v18[6]);
    result = (uint64_t)sub_1A9273E3C(v19);
  }
  v17 = v15 + 4;
  if (v17 >= v7)
    return swift_release();
  v16 = *(_QWORD *)(v3 + 8 * v17);
  if (v16)
  {
    v8 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v3 + 8 * v8);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A90C1380(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1A90C1390(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A90C13A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_1A93F8370();
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v8 = result;
    if (a2)
    {
      v9 = v7;
      v10 = *(_QWORD *)(a3 - 8);
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v11(v7, a1, a3);
      v12 = a2 - 1;
      if (v12)
      {
        v13 = *(_QWORD *)(v10 + 72);
        v14 = v9 + v13;
        do
        {
          v11(v14, a1, a3);
          v14 += v13;
          --v12;
        }
        while (v12);
      }
    }
    sub_1A93F83D0();
    return v8;
  }
  return result;
}

uint64_t sub_1A90C1450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_1A93F8E08();
    __break(1u);
  }
  else
  {
    v2 = a2;
    if (a2)
    {
      v4 = sub_1A93F837C();
      *(_QWORD *)(v4 + 16) = v2;
      v5 = v4 + 32;
      do
      {
        sub_1A905E4E4(a1, v5);
        v5 += 40;
        --v2;
      }
      while (v2);
    }
    else
    {
      v4 = MEMORY[0x1E0DEE9D8];
    }
    sub_1A905E684(a1);
    return v4;
  }
  return result;
}

uint64_t sub_1A90C151C(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

uint64_t sub_1A90C156C(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1A90C1768(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

_QWORD *sub_1A90C18FC(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1A90C1A90()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
  sub_1A9066D74(&qword_1ED2A9330, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF38]);
  return sub_1A93F81C0();
}

uint64_t sub_1A90C1B04()
{
  uint64_t result;

  sub_1A93F8C70();
  result = swift_bridgeObjectRelease();
  qword_1ED2A92B8 = 0xD000000000000035;
  unk_1ED2A92C0 = 0x80000001A94512A0;
  return result;
}

unint64_t sub_1A90C1B64(uint64_t a1)
{
  return sub_1A908A1F0(a1, &qword_1ED2A9678);
}

unint64_t sub_1A90C1B70(uint64_t a1)
{
  return sub_1A908A800(a1, &qword_1ED2A4380);
}

unint64_t sub_1A90C1B7C(uint64_t a1)
{
  return sub_1A908A800(a1, &qword_1ED2A4378);
}

unint64_t sub_1A90C1B88(uint64_t a1)
{
  return sub_1A908A800(a1, &qword_1ED2A4370);
}

unint64_t sub_1A90C1B94(uint64_t a1)
{
  return sub_1A91138B0(a1, &qword_1ED2A56B8, &qword_1EEAB7840, (uint64_t (*)(char *))sub_1A912E820, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
}

unint64_t sub_1A90C1BB8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  char v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _OWORD v14[4];
  uint64_t v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB78B0);
  v2 = (_QWORD *)sub_1A93F8E8C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A9062170(v4, (uint64_t)v14, &qword_1EEAB78B8);
    result = sub_1A912E538((uint64_t *)v14);
    if ((v6 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v7 = v2[6] + 72 * result;
    *(_OWORD *)v7 = v14[0];
    v8 = v14[1];
    v9 = v14[2];
    v10 = v14[3];
    *(_QWORD *)(v7 + 64) = v15;
    *(_OWORD *)(v7 + 32) = v9;
    *(_OWORD *)(v7 + 48) = v10;
    *(_OWORD *)(v7 + 16) = v8;
    *(_QWORD *)(v2[7] + 8 * result) = v16;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 80;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A90C1CF0(uint64_t a1)
{
  return sub_1A91138B0(a1, &qword_1ED2A5588, &qword_1EEAB7848, (uint64_t (*)(char *))sub_1A912E83C, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
}

unint64_t sub_1A90C1D14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5528);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7888);
  v6 = sub_1A93F8E8C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1A9062170(v12, (uint64_t)v5, &qword_1ED2A5528);
    result = sub_1A912E6AC((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1A93F73E0();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A90C1EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 2, AssociatedTypeWitness);
}

uint64_t Publisher.mapToLoadable()(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for Loadable(255, AssociatedTypeWitness, v5, v6);
  v7 = sub_1A93F77DC();
  v21 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v19 - v8;
  v10 = sub_1A93F7A4C();
  v11 = MEMORY[0x1AF414014](MEMORY[0x1E0C95950], v7);
  v19[1] = v11;
  v19[0] = MEMORY[0x1AF414014](MEMORY[0x1E0C960B0], v10);
  v22 = v7;
  v23 = v10;
  v24 = v11;
  v25 = v19[0];
  v12 = sub_1A93F77F4();
  v20 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v19 - v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  sub_1A93F7B84();
  swift_release();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  sub_1A93F7BB4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
  MEMORY[0x1AF414014](MEMORY[0x1E0C959F8], v12);
  v17 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v12);
  return v17;
}

void sub_1A90C2138()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED2AC798)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2AC7A0);
    v0 = sub_1A93F7B00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED2AC798);
  }
}

void sub_1A90C2190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Publishers.PFCombineLatestMany.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t Publishers.PFCombineLatestMany.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for Publishers.PFCombineLatestMany(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Publishers.PFCombineLatestMany);
}

void Publishers.PFCombineLatestMany.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[26];

  v12[9] = a3;
  v12[10] = a4;
  v12[8] = a1;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v9 = sub_1A93F78C0();
  v12[6] = *(_QWORD *)(v9 - 8);
  v12[7] = v9;
  MEMORY[0x1E0C80A78](v9);
  v12[5] = (char *)v12 - v10;
  v11 = swift_getAssociatedTypeWitness();
  v12[19] = v6;
  v12[20] = v11;
  v12[21] = AssociatedTypeWitness;
  v12[22] = a3;
  v12[23] = v7;
  v12[24] = a4;
  _s19PFCombineLatestManyV5InnerC4SideVMa();
}

void sub_1A90C22AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v13 - 192) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v13 - 200) = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v14);
  swift_getTupleTypeMetadata2();
  v15 = sub_1A93F8A90();
  *(_QWORD *)(v13 - 168) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v13 - 160) = v15;
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v13 - 176) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  *(_QWORD *)(v13 - 136) = v10;
  *(_QWORD *)(v13 - 128) = v12;
  *(_QWORD *)(v13 - 256) = v12;
  *(_QWORD *)(v13 - 264) = v9;
  v18 = *(_QWORD *)(v13 - 216);
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v18;
  *(_QWORD *)(v13 - 184) = v11;
  v19 = *(_QWORD *)(v13 - 208);
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v19;
  _s19PFCombineLatestManyV5InnerCMa();
}

void sub_1A90C23C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  MEMORY[0x1AF4120B8](v2, v1);
  *(_QWORD *)(v3 - 280) = a1;
  sub_1A90C3858();
}

uint64_t sub_1A90C23E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v7 - 272) = v5;
  *(_QWORD *)(v7 - 136) = v5;
  v9 = sub_1A93F83D0();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v9);
  if ((sub_1A93F86E8() & 1) != 0)
  {
    *(_QWORD *)(v7 - 112) = *(_QWORD *)(v7 - 280);
    *(_QWORD *)(v7 - 104) = MEMORY[0x1AF414014](&unk_1A94148A8);
    *(_QWORD *)(v7 - 136) = a1;
    swift_retain();
    sub_1A93F789C();
    __swift_destroy_boxed_opaque_existential_0(v7 - 136);
    *(_QWORD *)(v7 - 136) = sub_1A93F8370();
    sub_1A93F78A8();
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(v7 - 248);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 - 264) - 8) + 56))(v10, 1, 1);
    sub_1A93F7890();
    swift_release();
    return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 240) + 8))(v10, *(_QWORD *)(v7 - 232));
  }
  else
  {
    *(_QWORD *)(v7 - 208) = a1;
    *(_QWORD *)(v7 - 136) = *(_QWORD *)(v7 - 272);
    MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v9);
    sub_1A93F81E4();
    *(_QWORD *)(v7 - 152) = *(_QWORD *)(v7 - 144);
    sub_1A93F8E50();
    sub_1A93F8E2C();
    sub_1A93F8E44();
    v12 = *(_QWORD *)(v7 - 200);
    v13 = *(_QWORD *)(v7 - 176);
    sub_1A93F8E38();
    (*(void (**)(uint64_t *, uint64_t, _QWORD))(*(_QWORD *)(v7 - 168) + 32))(v1, v13, *(_QWORD *)(v7 - 160));
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v1, 1, v3) != 1)
    {
      v14 = *v1;
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v6, (char *)v1 + *(int *)(v3 + 48), v2);
      v15 = *(_QWORD *)(v7 - 208);
      swift_retain();
      sub_1A90C3694(v14, v15, v4);
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

void sub_1A90C2668(uint64_t a1)
{
  sub_1A90C27DC(a1);
}

void sub_1A90C2688()
{
  JUMPOUT(0x1AF414014);
}

void sub_1A90C2698()
{
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A90C26A8()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 104) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1A90C2708()
{
  sub_1A90C26A8();
  return swift_deallocClassInstance();
}

uint64_t sub_1A90C2728()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void _s19PFCombineLatestManyV5InnerCMa()
{
  JUMPOUT(0x1AF413F6CLL);
}

void sub_1A90C27DC(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  unint64_t v10;
  _QWORD v11[4];

  sub_1A93F78E4();
  if ((sub_1A93F78CC() & 1) == 0)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (a1)
    {
      goto LABEL_4;
    }
    __break(1u);
    return;
  }
LABEL_4:
  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184)) + 16);
  os_unfair_lock_lock(v3);
  v4 = *(_QWORD **)v1;
  if ((*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 152)) & 1) != 0
    || (*(_BYTE *)(v1 + v4[20]) & 1) != 0
    || (*(_BYTE *)(v1 + v4[21]) & 1) != 0)
  {
    os_unfair_lock_unlock(v3);
  }
  else
  {
    v5 = (uint64_t *)(v1 + v4[18]);
    swift_beginAccess();
    v6 = *v5;
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v3);
    v7 = *(_QWORD *)(v6 + 16);
    if (v7)
    {
      v8 = v6 + 32;
      do
      {
        sub_1A905E4E4(v8, (uint64_t)&v9);
        if (v10 <= 1)
        {
          sub_1A905E684((uint64_t)&v9);
        }
        else
        {
          sub_1A905D4AC(&v9, (uint64_t)v11);
          __swift_project_boxed_opaque_existential_1(v11, v11[3]);
          sub_1A93F7908();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
        }
        v8 += 40;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A90C2948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1A93F8A90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

BOOL sub_1A90C299C(uint64_t a1)
{
  uint64_t v1;

  return (*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 24) - 8) + 48))(a1, 1) != 1;
}

void sub_1A90C29D8(uint64_t a1, int64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38[3];
  _OWORD v39[3];
  uint64_t v40;
  _QWORD v41[4];

  v3 = v2;
  v6 = (_QWORD *)*v3;
  v7 = *(_QWORD *)(*v3 + 88);
  v8 = sub_1A93F8A90();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - v10;
  if (*(uint64_t *)((char *)v3 + v6[22]) <= a2)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v12 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v3 + v6[23]) + 16);
  os_unfair_lock_lock(v12);
  v13 = *v3;
  if ((*((_BYTE *)v3 + *(_QWORD *)(*v3 + 152)) & 1) != 0
    || (*((_BYTE *)v3 + *(_QWORD *)(v13 + 160)) & 1) != 0
    || (*((_BYTE *)v3 + *(_QWORD *)(v13 + 168)) & 1) != 0)
  {
    os_unfair_lock_unlock(v12);
    sub_1A93F78D8();
    return;
  }
  v14 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v11, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v7);
  v15 = (uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 136));
  swift_beginAccess();
  *(_QWORD *)&v34 = sub_1A93F83D0();
  sub_1A93F8364();
  v16 = *v15;
  sub_1A90C151C(a2, *v15);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 40))(v16+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * a2, v11, v8);
  swift_endAccess();
  v33 = (uint64_t)&v28;
  v32 = v15;
  v40 = *v15;
  MEMORY[0x1E0C80A78](v40);
  v30 = v6[10];
  *(&v28 - 6) = v30;
  *(&v28 - 5) = v7;
  v17 = v6[13];
  v29 = v6[12];
  *(&v28 - 4) = v29;
  *(&v28 - 3) = v17;
  v19 = v6[14];
  v18 = v6[15];
  *(&v28 - 2) = v19;
  *(&v28 - 1) = v18;
  v31 = v18;
  swift_bridgeObjectRetain();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v34);
  LOBYTE(v16) = sub_1A93F81CC();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    os_unfair_lock_unlock(v12);
    goto LABEL_22;
  }
  v33 = (uint64_t)&v28;
  v40 = *v32;
  MEMORY[0x1E0C80A78](v40);
  v28 = v17;
  *(&v28 - 6) = v30;
  *(&v28 - 5) = v7;
  *(&v28 - 4) = v29;
  *(&v28 - 3) = v17;
  v20 = v31;
  *(&v28 - 2) = v19;
  *(&v28 - 1) = v20;
  swift_bridgeObjectRetain();
  v21 = sub_1A93F81D8();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v12);
  v40 = v21;
  v22 = sub_1A93F78A8();
  swift_bridgeObjectRelease();
  sub_1A93F78E4();
  v33 = v22;
  if ((sub_1A93F78CC() & 1) != 0)
    goto LABEL_10;
  if (v33 < 0)
  {
LABEL_26:
    __break(1u);
    return;
  }
  if (!v33)
  {
LABEL_22:
    v33 = sub_1A93F78D8();
    return;
  }
LABEL_10:
  os_unfair_lock_lock(v12);
  v23 = (uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 144));
  swift_beginAccess();
  v24 = *v23;
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v12);
  v25 = 0;
  v26 = *(uint64_t **)(v24 + 16);
  v34 = xmmword_1A940B720;
  v32 = v26;
  while (1)
  {
    if (v25 == v26)
    {
      memset(v39, 0, 32);
      v25 = v26;
      v39[2] = v34;
    }
    else
    {
      if ((unint64_t)v25 >= *(_QWORD *)(v24 + 16))
        goto LABEL_25;
      sub_1A905E4E4(v24 + 32 + 40 * (_QWORD)v25, (uint64_t)v38);
      *(_QWORD *)&v39[0] = v25;
      sub_1A90AAF8C((uint64_t)v38, (uint64_t)v39 + 8);
      v25 = (uint64_t *)((char *)v25 + 1);
    }
    sub_1A90AAF44((uint64_t)v39, (uint64_t)&v40);
    if (v41[3] == 2)
      break;
    v27 = v40;
    sub_1A90AAF8C((uint64_t)v41, (uint64_t)v39);
    if (v27 == a2)
    {
      sub_1A905E684((uint64_t)v39);
    }
    else
    {
      sub_1A905E4E4((uint64_t)v39, (uint64_t)&v35);
      if (v36 > 1)
      {
        sub_1A905D4AC(&v35, (uint64_t)&v37);
        __swift_project_boxed_opaque_existential_1(&v37, v38[2]);
        v26 = v32;
        sub_1A93F7908();
        sub_1A905E684((uint64_t)v39);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v37);
      }
      else
      {
        sub_1A905E684((uint64_t)v39);
        sub_1A905E684((uint64_t)&v35);
      }
    }
  }
  swift_bridgeObjectRelease();
}

void sub_1A90C2F50(_QWORD *a1, uint64_t a2)
{
  os_unfair_lock_s *v2;
  uint64_t *v3;
  unint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _BYTE v21[24];
  uint64_t v22;

  v7 = *v3;
  if (*(uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 176)) <= a2)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v4 = a2;
  v6 = a1;
  v2 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v3 + *(_QWORD *)(v7 + 184)) + 16);
  os_unfair_lock_lock(v2);
  v8 = (_QWORD *)*v3;
  if ((*((_BYTE *)v3 + *(_QWORD *)(*v3 + 152)) & 1) != 0
    || (*((_BYTE *)v3 + v8[20]) & 1) != 0
    || (*((_BYTE *)v3 + v8[21]) & 1) != 0)
  {
    goto LABEL_8;
  }
  v5 = (uint64_t *)((char *)v3 + v8[18]);
  swift_beginAccess();
  if ((v4 & 0x8000000000000000) != 0)
    goto LABEL_22;
  if (*(_QWORD *)(*v5 + 16) <= v4)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    v6 = sub_1A90BF3C8(v6);
    *v5 = (uint64_t)v6;
    goto LABEL_11;
  }
  sub_1A905E4E4(*v5 + 40 * v4 + 32, (uint64_t)&v17);
  v9 = v19;
  sub_1A905E684((uint64_t)&v17);
  if (v9)
  {
LABEL_8:
    os_unfair_lock_unlock(v2);
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    sub_1A93F78B4();
    return;
  }
  sub_1A905DC3C((uint64_t)v6, (uint64_t)&v17);
  swift_beginAccess();
  v6 = (_QWORD *)*v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v5 = (uint64_t)v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_24;
LABEL_11:
  if (v6[2] > v4)
  {
    sub_1A905DBB4((uint64_t)&v17, (uint64_t)&v6[5 * v4 + 4]);
    v11 = *v5;
    swift_endAccess();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = v11 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_1A905E4E4(v13, (uint64_t)&v17);
        sub_1A905E4E4((uint64_t)&v17, (uint64_t)v21);
        if (v22 != 1)
        {
          if (!v22)
          {
            sub_1A905E684((uint64_t)&v17);
            swift_bridgeObjectRelease();
            os_unfair_lock_unlock(v2);
            return;
          }
          sub_1A905E684((uint64_t)v21);
        }
        sub_1A905E684((uint64_t)&v17);
        v13 += 40;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
    }
    os_unfair_lock_unlock(v2);
    v14 = *(_QWORD *)(v7 + 120);
    v15 = *(_OWORD *)(v7 + 80);
    v18 = *(_QWORD *)(v7 + 96);
    v16 = *(_OWORD *)(v7 + 104);
    v17 = v15;
    v19 = v16;
    v20 = v14;
    _s19PFCombineLatestManyV5InnerCMa();
  }
  __break(1u);
}

void sub_1A90C31EC(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD **v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;
  _QWORD v27[3];
  __int128 v28;

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 96);
  swift_getAssociatedConformanceWitness();
  v7 = sub_1A93F78C0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - v12;
  v14 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v2 + *(_QWORD *)(v5 + 184)) + 16);
  os_unfair_lock_lock(v14);
  v15 = *v2;
  if ((*((_BYTE *)v2 + *(_QWORD *)(*v2 + 152)) & 1) != 0
    || (v16 = *(_QWORD *)(v15 + 160), (*((_BYTE *)v2 + v16) & 1) != 0)
    || (*((_BYTE *)v2 + *(_QWORD *)(v15 + 168)) & 1) != 0)
  {
    os_unfair_lock_unlock(v14);
    return;
  }
  v24 = *(_QWORD *)(v15 + 168);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v7);
  v23 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v6) != 1)
  {
    *((_BYTE *)v2 + v16) = 1;
    sub_1A90AAC48(a1, a2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return;
  }
  memset(v27, 0, sizeof(v27));
  v28 = xmmword_1A9411140;
  v17 = (_QWORD **)((char *)v2 + *(_QWORD *)(*v2 + 144));
  swift_beginAccess();
  v18 = *v17;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v17 = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_8;
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v18 = sub_1A90BF3C8(v18);
  *v17 = v18;
  if ((a2 & 0x8000000000000000) != 0)
    goto LABEL_22;
LABEL_8:
  if (v18[2] <= a2)
  {
LABEL_23:
    __break(1u);
    return;
  }
  sub_1A905DBB4((uint64_t)v27, (uint64_t)&v18[5 * a2 + 4]);
  v20 = *v17;
  swift_endAccess();
  v21 = v20[2];
  if (v21)
  {
    v22 = (uint64_t)(v20 + 4);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1A905E4E4(v22, (uint64_t)v27);
      sub_1A905E4E4((uint64_t)v27, (uint64_t)v25);
      if (v26 != 1)
        break;
      sub_1A905E684((uint64_t)v27);
      v22 += 40;
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    if (v26)
      sub_1A905E684((uint64_t)v25);
    sub_1A905E684((uint64_t)v27);
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v14);
  }
  else
  {
LABEL_14:
    *((_BYTE *)v2 + v24) = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v6);
    sub_1A90AAC48((uint64_t)v10, a2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

void sub_1A90C34D0()
{
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A90C34E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 72);
  v5 = sub_1A93F76D4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1A90C3528(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 72);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1A93F76D4();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_1A90C3598()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F76D4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void _s19PFCombineLatestManyV5InnerC4SideVMa()
{
  JUMPOUT(0x1AF413F6CLL);
}

void sub_1A90C3628(uint64_t a1)
{
  int64_t *v1;

  sub_1A90C29D8(a1, *v1);
}

void sub_1A90C364C(_QWORD *a1)
{
  uint64_t *v1;

  sub_1A90C2F50(a1, *v1);
}

void sub_1A90C3670(uint64_t a1)
{
  unint64_t *v1;

  sub_1A90C31EC(a1, *v1);
}

void sub_1A90C3694(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  _s19PFCombineLatestManyV5InnerC4SideVMa();
}

uint64_t sub_1A90C36CC()
{
  return sub_1A93F76C8();
}

uint64_t *sub_1A90C36E8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v15[2];
  uint64_t v16;

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 88);
  v7 = sub_1A93F8A90();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v15 - v9;
  *((_BYTE *)v2 + *(_QWORD *)(v5 + 152)) = 0;
  *((_BYTE *)v2 + *(_QWORD *)(*v2 + 160)) = 0;
  *((_BYTE *)v2 + *(_QWORD *)(*v2 + 168)) = 0;
  v11 = *(_QWORD *)(*v2 + 184);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *(uint64_t *)((char *)v2 + v11) = v12;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 104) - 8) + 16))((uint64_t)v2 + *(_QWORD *)(*v2 + 128), a1);
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 176)) = a2;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v10, 1, 1, v6);
  v13 = sub_1A90C13A0((uint64_t)v10, a2, v7);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 136)) = v13;
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 144)) = sub_1A90C1450((uint64_t)v15, a2);
  return v2;
}

void sub_1A90C3858()
{
  _s19PFCombineLatestManyV5InnerCMa();
}

uint64_t *sub_1A90C3890()
{
  uint64_t v0;
  uint64_t v1;

  swift_allocObject();
  return sub_1A90C36E8(v1, v0);
}

uint64_t sub_1A90C38C0(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A46F0);
}

uint64_t sub_1A90C38E4(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A3F08);
}

uint64_t sub_1A90C3908(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A8878);
}

uint64_t sub_1A90C3928(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2AD138);
}

uint64_t sub_1A90C3948(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A3EE0);
}

uint64_t static Logger.database.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A3F00, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A3EE0, a1);
}

uint64_t sub_1A90C398C(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2AD110);
}

uint64_t sub_1A90C39AC(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2AC908);
}

uint64_t sub_1A90C39C8(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2AD0F0);
}

uint64_t sub_1A90C39E4(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A8830);
}

uint64_t sub_1A90C3A08(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A8808);
}

uint64_t static Logger.backgroundTaskManager.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A8828, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A8808, a1);
}

uint64_t sub_1A90C3A50(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A87E8);
}

uint64_t sub_1A90C3A74(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A87A8);
}

uint64_t sub_1A90C3AA0(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A8780);
}

uint64_t sub_1A90C3ACC(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A8758);
}

uint64_t sub_1A90C3AF4(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A8740);
}

uint64_t sub_1A90C3B1C(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A8720);
}

uint64_t static Logger.navigation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A8738, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2A8720, a1);
}

uint64_t sub_1A90C3B64(uint64_t a1)
{
  return sub_1A906D2C4(a1, qword_1ED2A8700);
}

uint64_t sub_1A90C3B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A906E638(a1, a2);
}

uint64_t sub_1A90C3BB0(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1ED2A5898, &qword_1ED2A5920, (uint64_t)qword_1ED2A46F0);
}

uint64_t sub_1A90C3BD4(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1ED2AD0C8, qword_1ED2AD158, (uint64_t)qword_1ED2AD138);
}

uint64_t sub_1A90C3BF8(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1ED2A8698, &qword_1ED2AD130, (uint64_t)qword_1ED2AD110);
}

uint64_t sub_1A90C3C1C(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1ED2A8678, &qword_1ED2A8800, (uint64_t)qword_1ED2A87E8);
}

uint64_t sub_1A90C3C40(uint64_t a1)
{
  return sub_1A90AAFEC(a1, qword_1ED2A8658, &qword_1ED2A8718, (uint64_t)qword_1ED2A8700);
}

uint64_t static OSSignposter.feedUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9053CFC(&qword_1ED2A8670, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1ED2A8658, a1);
}

uint64_t FRPOutput.content.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t static Platform.preferred<A>(iOS:mac:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t Loadable.coalesce(update:keepLoadedDataOnFailure:droppingNewNotLoadeds:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Loadable.coalescing(update:keepLoadedDataOnFailure:droppingNewNotLoadeds:)(v9, v10, v11, v12, (uint64_t)v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, a4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v4, v8, a4);
}

unint64_t sub_1A90C3D38()
{
  unint64_t result;

  result = qword_1ED2A5848;
  if (!qword_1ED2A5848)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AdamID, &type metadata for AdamID);
    atomic_store(result, (unint64_t *)&qword_1ED2A5848);
  }
  return result;
}

ValueMetadata *type metadata accessor for DeletionDownloadConsistencyIssueResolutionStrategy()
{
  return &type metadata for DeletionDownloadConsistencyIssueResolutionStrategy;
}

ValueMetadata *type metadata accessor for PrioritizedDownloadConsistencyResolutionStrategy()
{
  return &type metadata for PrioritizedDownloadConsistencyResolutionStrategy;
}

uint64_t PrioritizedDownloadConsistencyResolutionStrategy.init(strategies:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for DispatchingFairPlayInvalidationManaging()
{
  return objc_opt_self();
}

uint64_t sub_1A90C3DC8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(uint64_t (*)(uint64_t, char), _QWORD *, uint64_t, uint64_t);

  v5 = *v2;
  v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 24);
  v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance), v6);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  v10 = *(void (**)(uint64_t (*)(uint64_t, char), _QWORD *, uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  swift_retain();
  v10(sub_1A90C3EA4, v9, v6, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_1A90C3EA4(uint64_t a1, char a2)
{
  uint64_t *v2;

  return sub_1A92B8300(a1, a2 & 1, v2[2], v2[3], v2[4], (uint64_t)&unk_1E54ED7F0, (uint64_t)sub_1A90C3EA0, (uint64_t)&block_descriptor_26, (void (*)(uint64_t, uint64_t))sub_1A90BF154);
}

uint64_t sub_1A90C3EF0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

ValueMetadata *type metadata accessor for CompoundDownloadedAssetIssueIdentifier()
{
  return &type metadata for CompoundDownloadedAssetIssueIdentifier;
}

uint64_t CompoundDownloadedAssetIssueIdentifier.init(identifiers:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t sub_1A90C3F38()
{
  uint64_t inited;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4490);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405760;
  *(_QWORD *)(inited + 32) = 0x6E776F6E6B6E75;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  *(_QWORD *)(inited + 48) = sub_1A910F950;
  *(_QWORD *)(inited + 56) = 0;
  strcpy((char *)(inited + 64), "downloadable");
  *(_BYTE *)(inited + 77) = 0;
  *(_WORD *)(inited + 78) = -5120;
  *(_QWORD *)(inited + 80) = sub_1A910F950;
  *(_QWORD *)(inited + 88) = 0;
  *(_QWORD *)(inited + 96) = 0x64616F6C6E776F64;
  *(_QWORD *)(inited + 104) = 0xEB00000000676E69;
  *(_QWORD *)(inited + 112) = sub_1A938B2C4;
  *(_QWORD *)(inited + 120) = 0;
  *(_QWORD *)(inited + 128) = 0x64616F6C6E776F64;
  *(_QWORD *)(inited + 136) = 0xEA00000000006465;
  *(_QWORD *)(inited + 144) = sub_1A938B2E0;
  *(_QWORD *)(inited + 152) = 0;
  result = sub_1A90C1B70(inited);
  qword_1ED2A3E00 = result;
  return result;
}

uint64_t defaultEpisodeDownloadTransitionRules.getter()
{
  if (qword_1ED2A3E10 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1A90C4040()
{
  uint64_t inited;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4488);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405950;
  strcpy((char *)(inited + 32), "notBookmarked");
  *(_WORD *)(inited + 46) = -4864;
  *(_QWORD *)(inited + 48) = sub_1A9123E70;
  *(_QWORD *)(inited + 56) = 0;
  *(_QWORD *)(inited + 64) = 0x6B72616D6B6F6F62;
  *(_QWORD *)(inited + 72) = 0xEA00000000006465;
  *(_QWORD *)(inited + 80) = sub_1A9123E7C;
  *(_QWORD *)(inited + 88) = 0;
  result = sub_1A90C1B7C(inited);
  qword_1ED2A3DF0 = result;
  return result;
}

uint64_t defaultEpisodeBookmarkTransitionRules.getter()
{
  if (qword_1ED2A3DF8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A90C411C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10)
{
  return sub_1A90899A4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t type metadata accessor for DispatchingFairPlayValidationManaging()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EpisodeStatePersistentHistoryTracker()
{
  return objc_opt_self();
}

uint64_t destroy for MAPITranscriptTimeBombedURLProvider(id *a1)
{

  return swift_release();
}

_QWORD *initializeBufferWithCopyOfBuffer for MAPITranscriptTimeBombedURLProvider(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_retain();
  return a1;
}

ValueMetadata *type metadata accessor for MAPITranscriptTimeBombedURLProvider()
{
  return &type metadata for MAPITranscriptTimeBombedURLProvider;
}

uint64_t MAPITranscriptTimeBombedURLProvider.init(workQueue:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;

  v4 = sub_1A90C1BB8(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BA0);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = v4;
  *a2 = a1;
  a2[1] = result;
  return result;
}

ValueMetadata *type metadata accessor for CoreDataEpisodeAssetIssueIdentifier()
{
  return &type metadata for CoreDataEpisodeAssetIssueIdentifier;
}

id sub_1A90C424C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_msgSend(v0, sel_setResultType_, 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A48C8);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1A94055A0;
  v2 = sub_1A93F8040();
  v3 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v4;
  v5 = sub_1A93F8040();
  *(_QWORD *)(v1 + 88) = v3;
  *(_QWORD *)(v1 + 64) = v5;
  *(_QWORD *)(v1 + 72) = v6;
  v7 = sub_1A93F8040();
  *(_QWORD *)(v1 + 120) = v3;
  *(_QWORD *)(v1 + 96) = v7;
  *(_QWORD *)(v1 + 104) = v8;
  v9 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setPropertiesToFetch_, v9);

  v10 = objc_msgSend((id)objc_opt_self(), sel_predicateForDownloaded_excludeHidden_, 1, 1);
  objc_msgSend(v0, sel_setPredicate_, v10);

  return v0;
}

uint64_t CoreDataEpisodeAssetIssueIdentifier.init(analyticsChannel:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t defaultEpisodePlayTransitionRules.getter()
{
  if (qword_1ED2A3AC8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for UninitializedCurrentValueSubject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UninitializedCurrentValueSubject);
}

uint64_t UninitializedCurrentValueSubject.init()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;

  v4 = sub_1A93F8A90();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - v5;
  sub_1A93F79D4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v6, 1, 1, a1);
  result = sub_1A93F79E0();
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for DebouncedEpisodeAndShowProcessor()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

ValueMetadata *type metadata accessor for DebouncedEpisodeAndShowProcessor.State()
{
  return &type metadata for DebouncedEpisodeAndShowProcessor.State;
}

void sub_1A90C44E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1A93F8A90();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1A90C4534()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F738C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1A90C45A8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v5;
  void *v6;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v6 = (void *)sub_1A93F8010();
  objc_msgSend(v5, sel_setLocalizedDateFormatFromTemplate_, v6);

  *a4 = v5;
}

void sub_1A90C461C(uint64_t a1)
{
  sub_1A90C45A8(a1, 0x79792F64642F4D4DLL, 0xEA00000000007979, &qword_1ED2AD050);
}

ValueMetadata *type metadata accessor for AVAssetsInLibraryIssueIdentifier()
{
  return &type metadata for AVAssetsInLibraryIssueIdentifier;
}

uint64_t sub_1A90C4654(uint64_t a1)
{
  return AVAssetsInLibraryIssueIdentifier.startIdentifyingIssues(for:)(a1);
}

uint64_t sub_1A90C4668@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A90C4680((_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1A90C4680@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v4 = a1[9];
  __swift_project_boxed_opaque_existential_1(a1 + 5, a1[8]);
  v5 = sub_1A93F7218();
  v6 = (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
  if (v2)
    return swift_bridgeObjectRelease();
  v8 = v6;
  result = swift_bridgeObjectRelease();
  *a2 = v8;
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadProcessorDownloader()
{
  return &type metadata for AutoDownloadProcessorDownloader;
}

_QWORD *AutoDownloadProcessorDownloader.init(reachability:context:capacityMonitor:downloader:analyticsChannel:workQueue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD *result;

  if (qword_1ED2A92D0 != -1)
    swift_once();
  v15 = qword_1ED2A92B8;
  v14 = unk_1ED2A92C0;
  v16 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v17 = objc_msgSend(v16, sel_standardUserDefaults);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A7000);
  result = (_QWORD *)swift_allocObject();
  result[2] = v15;
  result[3] = v14;
  result[4] = 209715200;
  result[5] = v17;
  result[6] = &type metadata for Int64Transform;
  result[7] = &off_1E54DAA80;
  *a7 = a3;
  a7[1] = a1;
  a7[2] = a4;
  a7[3] = a2;
  a7[4] = a5;
  a7[5] = a6;
  a7[6] = result;
  return result;
}

uint64_t type metadata accessor for AutoDownloadProcessorDataSource()
{
  return objc_opt_self();
}

uint64_t sub_1A90C4850()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A90C4880()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A90C48C0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void sub_1A90C4900()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 80) = *(_QWORD *)(v0 + 24);
}

uint64_t sub_1A90C490C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v16[0] = a2;
  v5 = sub_1A93F7D58();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7DB8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a1;
  aBlock[4] = sub_1A90C4900;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_18_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v16[1] = MEMORY[0x1E0DEE9D8];
  sub_1A90A1130();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t AutoDownloadProcessorDataSource.init(context:accountDataSource:workQueue:capacityMonitor:)(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  char *v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v21;

  strcpy((char *)(v4 + 16), "AutoDownload");
  *(_BYTE *)(v4 + 29) = 0;
  *(_WORD *)(v4 + 30) = -5120;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1A94055A0;
  *(_QWORD *)(v9 + 32) = sub_1A93F8040();
  *(_QWORD *)(v9 + 40) = v10;
  *(_QWORD *)(v9 + 48) = sub_1A93F8040();
  *(_QWORD *)(v9 + 56) = v11;
  *(_QWORD *)(v9 + 64) = sub_1A93F8040();
  *(_QWORD *)(v9 + 72) = v12;
  *(_QWORD *)(v4 + 48) = v9;
  *(_QWORD *)(v4 + 56) = 0;
  *(_BYTE *)(v4 + 96) = 1;
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  *(_QWORD *)(v4 + 64) = a3;
  *(_QWORD *)(v4 + 72) = a4;
  *(_OWORD *)(v4 + 80) = xmmword_1A940B720;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = v4;
  v21 = 0;
  v14 = a3;
  swift_retain_n();
  v15 = v14;
  v16 = a1;
  swift_unknownObjectRetain();
  v17 = a4;
  sub_1A93F0E1C((uint64_t)v17, v15, v4);
  v18 = *(os_unfair_lock_s **)&v17[OBJC_IVAR___MTDeviceCapacityMonitor__capacityChangeObservers];
  swift_retain();
  os_unfair_lock_lock(v18 + 6);
  sub_1A93EFC68((uint64_t)&v18[4], &v21, (uint64_t)sub_1A9190FE4, v13);
  os_unfair_lock_unlock(v18 + 6);
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  v19 = v21;

  swift_release();
  *(_QWORD *)(v4 + 88) = v19;
  *(_BYTE *)(v4 + 96) = 0;
  return v4;
}

uint64_t type metadata accessor for AssetRemovalProcessorDataSource()
{
  return objc_opt_self();
}

uint64_t sub_1A90C4CD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A90C4D00()
{
  return sub_1A90C4D58();
}

uint64_t AssetRemovalProcessorDataSource.init(managedObjectContext:receiverQueue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  strcpy((char *)(v2 + 32), "AssetRemoval");
  *(_BYTE *)(v2 + 45) = 0;
  *(_WORD *)(v2 + 46) = -5120;
  *(_OWORD *)(v2 + 48) = xmmword_1A9411140;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_1A90C4D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = v1;
  if (v1 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1A9405950;
    *(_QWORD *)(v2 + 32) = sub_1A93F8040();
    *(_QWORD *)(v2 + 40) = v3;
    *(_QWORD *)(v2 + 48) = sub_1A93F8040();
    *(_QWORD *)(v2 + 56) = v4;
    v5 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 48) = v2;
    swift_bridgeObjectRetain();
    sub_1A90C1390(v5);
  }
  sub_1A90C1380(v1);
  return v2;
}

uint64_t sub_1A90C4DFC()
{
  return swift_getAssociatedConformanceWitness();
}

unint64_t sub_1A90C4E18()
{
  uint64_t inited;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4478);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405760;
  *(_QWORD *)(inited + 72) = &type metadata for AddableRules;
  *(_QWORD *)(inited + 80) = &off_1E54E5A58;
  *(_QWORD *)(inited + 88) = 0x676E69646461;
  *(_QWORD *)(inited + 96) = 0xE600000000000000;
  *(_QWORD *)(inited + 128) = &type metadata for AddingRules;
  *(_QWORD *)(inited + 136) = &off_1E54E5A48;
  *(_QWORD *)(inited + 144) = 0x6465646461;
  *(_QWORD *)(inited + 152) = 0xE500000000000000;
  *(_QWORD *)(inited + 32) = 0x656C6261646461;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  *(_QWORD *)(inited + 184) = &type metadata for AddedRules;
  *(_QWORD *)(inited + 192) = &off_1E54E5A38;
  *(_QWORD *)(inited + 200) = 0x6E776F6E6B6E75;
  *(_QWORD *)(inited + 208) = 0xE700000000000000;
  *(_QWORD *)(inited + 240) = &type metadata for NonePodcastStateRule;
  *(_QWORD *)(inited + 248) = &protocol witness table for NonePodcastStateRule;
  result = sub_1A908A48C(inited);
  qword_1ED2A3730 = result;
  return result;
}

uint64_t defaultPodcastTransitionRules.getter()
{
  if (qword_1ED2A3740 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A90C4F48()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F738C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for MusicSubscriptionInfoSyncUtil()
{
  uint64_t result;

  result = qword_1ED2A7EF8;
  if (!qword_1ED2A7EF8)
    return swift_getSingletonMetadata();
  return result;
}

id sub_1A90C5018(void *a1, void *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  objc_class *v17;
  _QWORD v19[2];
  uint64_t v20;
  void *v21;
  void *v22;
  objc_super v23;
  uint64_t v24;

  v21 = a1;
  v22 = a2;
  v3 = sub_1A93F8808();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v3);
  v5 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1A93F885C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_workQueue;
  v19[1] = sub_1A9066C6C();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF8D8], v6);
  v10 = v2;
  sub_1A93F7D88();
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v4, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  *(_QWORD *)&v2[v20] = sub_1A93F888C();
  sub_1A93F72F0();
  *(_QWORD *)&v10[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_syncSession] = 0;
  v11 = &v10[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_appleMusicSegmentKey];
  *(_QWORD *)v11 = 0x746E656D676573;
  *((_QWORD *)v11 + 1) = 0xE700000000000000;
  v12 = &v10[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_appleMusicSegmentValue];
  *(_QWORD *)v12 = 0x636973754DLL;
  *((_QWORD *)v12 + 1) = 0xE500000000000000;
  v13 = v21;
  v14 = v22;
  *(_QWORD *)&v10[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_bag] = v21;
  *(_QWORD *)&v10[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_accountStore] = v14;
  v15 = v13;
  v16 = v14;

  v17 = (objc_class *)type metadata accessor for MusicSubscriptionInfoSyncUtil();
  v23.receiver = v10;
  v23.super_class = v17;
  return objc_msgSendSuper2(&v23, sel_init);
}

void sub_1A90C52A0(int a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  int v35;
  NSObject *v36;
  uint64_t v37;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = sub_1A93F7D58();
  v9 = *(NSObject **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F7DB8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(*(id *)&v4[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_accountStore], sel_ams_activeiTunesAccount, v14);
  if (v17)
  {
    v35 = a1;
    v36 = v9;

    if (qword_1ED2A8848 != -1)
      swift_once();
    v18 = sub_1A93F7698();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED2A8830);
    v19 = sub_1A93F7674();
    v20 = sub_1A93F87B4();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v34 = v8;
      v22 = a3;
      v23 = v13;
      v24 = v12;
      v25 = a2;
      v26 = v21;
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1A904E000, v19, v20, "Starting to sync music subscription information.", v21, 2u);
      v27 = v26;
      a2 = v25;
      v12 = v24;
      v13 = v23;
      a3 = v22;
      v8 = v34;
      MEMORY[0x1AF41411C](v27, -1, -1);
    }

    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = v4;
    *(_BYTE *)(v28 + 24) = v35 & 1;
    *(_QWORD *)(v28 + 32) = a2;
    *(_QWORD *)(v28 + 40) = a3;
    aBlock[4] = sub_1A92ED85C;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_59;
    v29 = _Block_copy(aBlock);
    v30 = v4;
    swift_retain();
    sub_1A93F7D88();
    v37 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v16, v11, v29);
    _Block_release(v29);
    ((void (*)(char *, uint64_t))v36[1].isa)(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    swift_release();
  }
  else
  {
    if (qword_1ED2A8848 != -1)
      swift_once();
    v31 = sub_1A93F7698();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED2A8830);
    v36 = sub_1A93F7674();
    v32 = sub_1A93F87B4();
    if (os_log_type_enabled(v36, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1A904E000, v36, v32, "Not syncing Music Subscription Info because user is not signed in.", v33, 2u);
      MEMORY[0x1AF41411C](v33, -1, -1);
    }

  }
}

uint64_t type metadata accessor for LibraryPodcastStateDataSource()
{
  return objc_opt_self();
}

void sub_1A90C56A0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1A914CD68();
  os_unfair_lock_unlock(v1);
}

void sub_1A90C56F4()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1A914C454(v0);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1A90C573C()
{
  uint64_t v0;

  return sub_1A9077DD4(v0);
}

uint64_t sub_1A90C5744@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_1A908E1E0(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

_QWORD *LibraryPodcastStateDataSource.init(contextProvider:)(void *a1)
{
  _QWORD *v1;

  v1 = sub_1A9074094(a1);
  swift_unknownObjectRelease();
  return v1;
}

unint64_t sub_1A90C57BC()
{
  unint64_t result;

  result = qword_1ED2A7EC8;
  if (!qword_1ED2A7EC8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9407C48, &type metadata for LibraryPodcastStateDataSource.State);
    atomic_store(result, (unint64_t *)&qword_1ED2A7EC8);
  }
  return result;
}

unint64_t sub_1A90C5800()
{
  unint64_t result;

  result = qword_1ED2A7EC0;
  if (!qword_1ED2A7EC0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9407C70, &type metadata for LibraryPodcastStateDataSource.State);
    atomic_store(result, (unint64_t *)&qword_1ED2A7EC0);
  }
  return result;
}

uint64_t type metadata accessor for FeedManagerLocalConfiguration()
{
  return objc_opt_self();
}

id sub_1A90C5874()
{
  objc_class *v0;
  _BYTE *v1;
  char *v2;
  id result;
  objc_super v4;

  v0 = (objc_class *)type metadata accessor for FeedManagerLocalConfiguration();
  v1 = objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_timeoutIntervalForResource] = 0x4072C00000000000;
  v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__workQueueConcurrent] = 1;
  v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_useBackgroundFetchForFeedDownloads] = 0;
  v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_keepsFeedFileInTempDirAfterDownload] = 0;
  v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__supportsBatchInsertion] = 0;
  v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_usesCleanEpisodeTitles] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentDeltaUpdateLimit] = 3;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentBootstrapUpdateLimit] = 2;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentRSSUpdateLimit] = 3;
  v2 = &v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_deltaNumberOfEpisodesToRequestPerPage];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  v4.receiver = v1;
  v4.super_class = v0;
  result = objc_msgSendSuper2(&v4, sel_init);
  qword_1ED2A7EB0 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for DeferredLaunchTaskCoordinator()
{
  return objc_opt_self();
}

id DeferredLaunchTaskCoordinator.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  objc_class *v12;
  _QWORD v14[6];
  uint64_t v15;
  objc_super v16;
  uint64_t v17;

  v1 = sub_1A93F885C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = v1;
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F8808();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v8);
  v15 = OBJC_IVAR___PFDeferredLaunchTaskCoordinator__adminQueue;
  v14[4] = sub_1A9066C6C();
  v9 = v0;
  sub_1A93F7DA0();
  v17 = MEMORY[0x1E0DEE9D8];
  v14[3] = sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v7, MEMORY[0x1E0DEF828]);
  v14[2] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  v14[1] = sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  sub_1A93F8B5C();
  v10 = *MEMORY[0x1E0DEF8D0];
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v11(v5, v10, v3);
  *(_QWORD *)(v14[5] + v15) = sub_1A93F888C();
  v15 = OBJC_IVAR___PFDeferredLaunchTaskCoordinator__workQueue;
  sub_1A93F7DA0();
  v17 = MEMORY[0x1E0DEE9D8];
  sub_1A93F8B5C();
  v11(v5, v10, v3);
  *(_QWORD *)&v9[v15] = sub_1A93F888C();
  *(_QWORD *)&v9[OBJC_IVAR___PFDeferredLaunchTaskCoordinator__tasks] = MEMORY[0x1E0DEE9D8];
  v9[OBJC_IVAR___PFDeferredLaunchTaskCoordinator__deferring] = 1;
  v9[OBJC_IVAR___PFDeferredLaunchTaskCoordinator__timeoutScheduled] = 0;

  v12 = (objc_class *)type metadata accessor for DeferredLaunchTaskCoordinator();
  v16.receiver = v9;
  v16.super_class = v12;
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t dispatch thunk of DeferredLaunchTaskCoordinator.deferred(on:perform:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t sub_1A90C5CBC()
{
  uint64_t v0;

  v0 = sub_1A93F7698();
  __swift_allocate_value_buffer(v0, qword_1ED2B89B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2B89B0);
  return sub_1A93F7680();
}

id sub_1A90C5D38()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DeferredLaunchTaskCoordinator()), sel_init);
  qword_1ED2A7E98 = (uint64_t)result;
  return result;
}

id static DeferredLaunchTaskCoordinator.shared.getter()
{
  if (qword_1ED2A7EA0 != -1)
    swift_once();
  return (id)qword_1ED2A7E98;
}

void sub_1A90C5E04()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F7DE8() - 8) + 80);
  sub_1A90C5E48(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

void sub_1A90C5E48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1AF41420C](v3);
  if (v4)
  {
    v5 = (void *)v4;
    if (*(_BYTE *)(v4 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__timeoutScheduled) == 1)
    {
      if (qword_1ED2A7EA8 != -1)
        swift_once();
      v6 = sub_1A93F7698();
      __swift_project_value_buffer(v6, (uint64_t)qword_1ED2B89B0);
      v7 = sub_1A93F7674();
      v8 = sub_1A93F879C();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        v10 = swift_slowAlloc();
        v11 = v10;
        *(_DWORD *)v9 = 136446210;
        sub_1A906436C(0xD000000000000020, 0x80000001A944C8D0, &v11);
        sub_1A93F8AA8();
        _os_log_impl(&dword_1A904E000, v7, v8, "%{public}s called twice. Ignoring the second call.", v9, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v10, -1, -1);
        MEMORY[0x1AF41411C](v9, -1, -1);
      }

    }
    else
    {
      *(_BYTE *)(v4 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__timeoutScheduled) = 1;
      sub_1A90C641C(a2);
    }

  }
}

uint64_t sub_1A90C6014(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[6];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_1A93F7D58();
  v38 = *(_QWORD *)(v5 - 8);
  v39 = v5;
  MEMORY[0x1E0C80A78](v5);
  v37 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F7DB8();
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  MEMORY[0x1E0C80A78](v7);
  v34 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1A93F7DE8();
  v9 = *(_QWORD *)(v33 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v33);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - v13;
  if (qword_1ED2A7EA8 != -1)
    swift_once();
  v15 = sub_1A93F7698();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED2B89B0);
  v16 = sub_1A93F7674();
  v17 = sub_1A93F8784();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v18 = 134349056;
    *(double *)aBlock = a1;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v16, v17, "Scheduling %{public}f second timeout for deferred launch tasks.", v18, 0xCu);
    MEMORY[0x1AF41411C](v18, -1, -1);
  }

  sub_1A93F7DDC();
  v19 = v14;
  v31 = v14;
  MEMORY[0x1AF411B48](v11, a1);
  v32 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20 = v33;
  v32(v11, v33);
  v21 = *(void **)(v2 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__adminQueue);
  v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v19, v20);
  v23 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v24 + v23, v11, v20);
  *(_QWORD *)(v24 + ((v10 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
  aBlock[4] = sub_1A90C5E04;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_56;
  v25 = _Block_copy(aBlock);
  v26 = v21;
  swift_retain();
  v27 = v34;
  sub_1A93F7D88();
  v40 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  v28 = v37;
  v29 = v39;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v27, v28, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v29);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v27, v36);
  v32(v31, v20);
  swift_release();
  return swift_release();
}

uint64_t sub_1A90C641C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v2 = v1;
  v18 = a1;
  ObjectType = swift_getObjectType();
  v4 = sub_1A93F7D58();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v19 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A93F7DB8();
  v8 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(v2 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__adminQueue);
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = ObjectType;
  aBlock[4] = sub_1A92D5864;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_24_3;
  v14 = _Block_copy(aBlock);
  v15 = v11;
  swift_retain();
  sub_1A93F7D88();
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v5, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF41252C](v18, v10, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
  swift_release();
  return swift_release();
}

void sub_1A90C6658()
{
  uint64_t v0;

  sub_1A90C6660(*(_QWORD *)(v0 + 16));
}

void sub_1A90C6660(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint8_t *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1AF41420C](v1);
  if (v2)
  {
    v3 = (void *)v2;
    if ((*(_BYTE *)(v2 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__deferring) & 1) != 0)
    {
      *(_BYTE *)(v2 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__deferring) = 0;
      v4 = (uint8_t *)(v2 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__tasks);
      swift_beginAccess();
      v22 = *(_QWORD *)(*(_QWORD *)v4 + 16);
      if (qword_1ED2A7EA8 != -1)
        goto LABEL_21;
      while (1)
      {
        v5 = sub_1A93F7698();
        __swift_project_value_buffer(v5, (uint64_t)qword_1ED2B89B0);
        v6 = sub_1A93F7674();
        v7 = sub_1A93F8784();
        if (os_log_type_enabled(v6, v7))
        {
          v8 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v8 = 134349056;
          sub_1A93F8AA8();
          _os_log_impl(&dword_1A904E000, v6, v7, "Starting %{public}ld tasks.", v8, 0xCu);
          MEMORY[0x1AF41411C](v8, -1, -1);
        }

        v23 = 0;
        v9 = *(_QWORD *)v4;
        v10 = *(_QWORD *)(*(_QWORD *)v4 + 16);
        if (!v10)
          break;
        swift_bridgeObjectRetain();
        swift_beginAccess();
        v11 = (void **)(v9 + 48);
        while (1)
        {
          v13 = (uint64_t)*(v11 - 2);
          v12 = (uint64_t)*(v11 - 1);
          v14 = *v11;
          swift_retain();
          v15 = v14;
          v16 = sub_1A93F7674();
          v17 = sub_1A93F8784();
          if (os_log_type_enabled(v16, v17))
          {
            v4 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v4 = 134349312;
            *(_QWORD *)(v4 + 4) = v23;
            *((_WORD *)v4 + 6) = 2050;
            *(_QWORD *)(v4 + 14) = v22;
            _os_log_impl(&dword_1A904E000, v16, v17, "Starting %{public}ld of %{public}ld tasks.", v4, 0x16u);
            MEMORY[0x1AF41411C](v4, -1, -1);
          }

          sub_1A908C228(v13, v12, v15);
          if (__OFADD__(v23, 1))
            break;
          ++v23;

          swift_release();
          v11 += 3;
          if (!--v10)
          {
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
        }
        __break(1u);
LABEL_21:
        swift_once();
      }
    }
    else
    {
      if (qword_1ED2A7EA8 != -1)
        swift_once();
      v18 = sub_1A93F7698();
      __swift_project_value_buffer(v18, (uint64_t)qword_1ED2B89B0);
      v19 = sub_1A93F7674();
      v20 = sub_1A93F8784();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_1A904E000, v19, v20, "Tasks have already run. Nothing to do here.", v21, 2u);
        MEMORY[0x1AF41411C](v21, -1, -1);
      }

    }
LABEL_18:

  }
}

uint64_t dispatch thunk of DeferredLaunchTaskCoordinator.stopDeferring()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t sub_1A90C69E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_1A93F7D58();
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A93F7DB8();
  v6 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A7EA8 != -1)
    swift_once();
  v9 = sub_1A93F7698();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED2B89B0);
  v10 = sub_1A93F7674();
  v11 = sub_1A93F8784();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1A904E000, v10, v11, "Attempting to run deferred tasks.", v12, 2u);
    MEMORY[0x1AF41411C](v12, -1, -1);
  }

  v13 = *(void **)(v1 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__adminQueue);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = ObjectType;
  aBlock[4] = sub_1A90C6658;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_17_4;
  v16 = _Block_copy(aBlock);
  v17 = v13;
  swift_retain();
  sub_1A93F7D88();
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v8, v5, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
  swift_release();
  return swift_release();
}

ValueMetadata *type metadata accessor for DeferredLaunchTaskCoordinator._DeferredTask()
{
  return &type metadata for DeferredLaunchTaskCoordinator._DeferredTask;
}

uint64_t type metadata accessor for DefaultPodcastStateDataSource()
{
  return objc_opt_self();
}

uint64_t DefaultPodcastStateDataSource.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  return v0;
}

uint64_t sub_1A90C6D14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for CoreDataEpisodeAndShowStorage()
{
  return objc_opt_self();
}

uint64_t initializeBufferWithCopyOfBuffer for AssetRemovalProcessorDelegate(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    v9 = *(int *)(a3 + 24);
    v10 = v4 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = sub_1A93F726C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = *(int *)(a3 + 28);
    v14 = *(void **)((char *)a2 + v13);
    *(_QWORD *)(v4 + v13) = v14;
    v15 = v14;
  }
  return v4;
}

uint64_t sub_1A90C6E74()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F726C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for AssetRemovalProcessorDelegate()
{
  uint64_t result;

  result = qword_1ED2A7CA8;
  if (!qword_1ED2A7CA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t initializeWithCopy for TimeBombedTranscriptProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  v4 = *(_QWORD *)(a2 + 272);
  v5 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v4;
  *(_QWORD *)(a1 + 280) = v5;
  v6 = a1 + 288;
  v7 = a2 + 288;
  v9 = *(_QWORD *)(a2 + 312);
  v8 = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = v9;
  *(_QWORD *)(a1 + 320) = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v10(v6, v7, v9);
  v11 = *(void **)(a2 + 328);
  v12 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = v11;
  *(_QWORD *)(a1 + 336) = v12;
  v14 = *(_QWORD *)(a2 + 344);
  v13 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v14;
  *(_QWORD *)(a1 + 352) = v13;
  v15 = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t TimeBombedTranscriptProvider.init(ttmlPersistentCache:signaturePersistentCache:ttmlVolatileCache:signatureVolatileCache:ttmlSource:shazamSignatureSource:timeBombedURLsProvider:workQueue:)@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X1>, _OWORD *a3@<X2>, _OWORD *a4@<X3>, _OWORD *a5@<X4>, __int128 *a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>)
{
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t result;

  v12 = a1[1];
  *(_OWORD *)a9 = *a1;
  *(_OWORD *)(a9 + 16) = v12;
  v13 = a1[3];
  *(_OWORD *)(a9 + 32) = a1[2];
  *(_OWORD *)(a9 + 48) = v13;
  v14 = a2[1];
  *(_OWORD *)(a9 + 64) = *a2;
  *(_OWORD *)(a9 + 80) = v14;
  v15 = a2[3];
  *(_OWORD *)(a9 + 96) = a2[2];
  *(_OWORD *)(a9 + 112) = v15;
  v16 = a3[1];
  *(_OWORD *)(a9 + 128) = *a3;
  *(_OWORD *)(a9 + 144) = v16;
  v17 = a3[3];
  *(_OWORD *)(a9 + 160) = a3[2];
  *(_OWORD *)(a9 + 176) = v17;
  v18 = a4[1];
  *(_OWORD *)(a9 + 192) = *a4;
  *(_OWORD *)(a9 + 208) = v18;
  v19 = a4[3];
  *(_OWORD *)(a9 + 224) = a4[2];
  *(_OWORD *)(a9 + 240) = v19;
  v20 = *a6;
  *(_OWORD *)(a9 + 256) = *a5;
  *(_OWORD *)(a9 + 272) = v20;
  sub_1A905DC3C(a7, a9 + 288);
  *(_QWORD *)(a9 + 328) = a8;
  v21 = a8;
  v22 = MEMORY[0x1E0DEE9D8];
  v23 = sub_1A90C1CF0(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5B98);
  v24 = swift_allocObject();
  *(_DWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 16) = v23;
  *(_QWORD *)(a9 + 336) = v24;
  v25 = sub_1A90C1B94(v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BA8);
  v26 = swift_allocObject();
  *(_DWORD *)(v26 + 24) = 0;
  *(_QWORD *)(v26 + 16) = v25;
  *(_QWORD *)(a9 + 344) = v26;
  v27 = sub_1A90C1D14(v22);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5B90);
  v28 = swift_allocObject();
  *(_DWORD *)(v28 + 24) = 0;
  *(_QWORD *)(v28 + 16) = v27;
  result = __swift_destroy_boxed_opaque_existential_0(a7);
  *(_QWORD *)(a9 + 352) = v28;
  return result;
}

ValueMetadata *type metadata accessor for FetchedResultsCountPublisher()
{
  return &type metadata for FetchedResultsCountPublisher;
}

uint64_t type metadata accessor for DownloadStateReportCollector()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AddingPodcastStateDataSource()
{
  return objc_opt_self();
}

id AddingPodcastStateDataSource.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;
  uint64_t v17;

  v15 = sub_1A93F885C();
  v1 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F8808();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v6);
  v7 = &v0[OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_delegate];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v14 = OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_refreshQueue;
  v13 = sub_1A9066C6C();
  v8 = v0;
  sub_1A93F7D88();
  v17 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v15);
  *(_QWORD *)&v0[v14] = sub_1A93F888C();
  v9 = OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  *(_QWORD *)&v8[v9] = v10;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_currentlyAddingShows] = MEMORY[0x1E0DEE9E8];

  v11 = (objc_class *)type metadata accessor for AddingPodcastStateDataSource();
  v16.receiver = v8;
  v16.super_class = v11;
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t sub_1A90C756C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_delegate);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for ScheduledOperationScheduler()
{
  return objc_opt_self();
}

uint64_t sub_1A90C7668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void (*v26)(char *, uint64_t);
  void *v27;
  unsigned int v28;
  void *v29;
  void *v30;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a4;
  v7 = sub_1A93F738C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v32 - v18;
  v20 = *(void **)(a3 + OBJC_IVAR___PFScheduledOperationScheduler_storage);
  v34 = a1;
  v35 = a2;
  v21 = (void *)sub_1A93F8010();
  v32 = v20;
  v22 = objc_msgSend(v20, sel_lastExecutionOf_, v21);

  if (v22)
  {
    sub_1A93F7368();

    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v16, v23, 1, v7);
  sub_1A90A13C8((uint64_t)v16, (uint64_t)v19);
  v24 = *(void **)(a3 + OBJC_IVAR___PFScheduledOperationScheduler_schedule);
  sub_1A93F7374();
  v25 = (void *)sub_1A93F7314();
  v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v10, v7);
  sub_1A90A1CA8((uint64_t)v19, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
  {
    v27 = 0;
  }
  else
  {
    v27 = (void *)sub_1A93F7314();
    v26(v13, v7);
  }
  v28 = objc_msgSend(v24, sel_shouldExecuteOn_previousExecution_, v25, v27);

  if (v28)
  {
    (*(void (**)(void))(v33 + 16))();
    v29 = (void *)sub_1A93F8010();
    sub_1A93F7374();
    v30 = (void *)sub_1A93F7314();
    v26(v10, v7);
    objc_msgSend(v32, sel_recordExecutionOf_at_, v29, v30);

  }
  return sub_1A90AC3A4((uint64_t)v19);
}

id sub_1A90C78E8()
{
  id result;

  result = sub_1A90C7904();
  qword_1ED2A7C20 = (uint64_t)result;
  return result;
}

id sub_1A90C7904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  objc_class *v10;
  char *v11;
  id v12;
  void (*v13)(char *, uint64_t);
  id v14;
  uint64_t v15;
  objc_class *v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  objc_class *v22;
  char *v23;
  id v24;
  uint64_t v26;
  objc_super v27;
  objc_super v28;
  uint64_t v29;
  objc_super v30;

  v0 = sub_1A93F7494();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A940EB90;
  sub_1A93F7470();
  v8 = sub_1A93F741C();
  v9 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v9(v3, v6, v0);
  v10 = (objc_class *)type metadata accessor for DayOfWeekSchedule();
  v11 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v11[OBJC_IVAR___PFDayOfWeekSchedule_dayOfWeek] = v8;
  v9(&v11[OBJC_IVAR___PFDayOfWeekSchedule_calendar], v3, v0);
  v30.receiver = v11;
  v30.super_class = v10;
  v12 = objc_msgSendSuper2(&v30, sel_init);
  v13 = *(void (**)(char *, uint64_t))(v1 + 8);
  v13(v3, v0);
  v13(v6, v0);
  *(_QWORD *)(v7 + 32) = v12;
  v14 = objc_allocWithZone((Class)type metadata accessor for MaximumFrequencySchedule());
  ScheduleFrequency.interval.getter(0);
  *(_QWORD *)(v7 + 40) = objc_msgSend(v14, sel_initWithInterval_);
  v29 = v7;
  sub_1A93F8328();
  v15 = v29;
  v16 = (objc_class *)type metadata accessor for CompoundSchedule();
  v17 = (char *)objc_allocWithZone(v16);
  *(_QWORD *)&v17[OBJC_IVAR___PFCompoundSchedule_type] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___PFCompoundSchedule_children] = v15;
  v28.receiver = v17;
  v28.super_class = v16;
  v18 = objc_msgSendSuper2(&v28, sel_init);
  v19 = (void *)objc_opt_self();
  v20 = v18;
  v21 = objc_msgSend(v19, sel_standardUserDefaults);
  v22 = (objc_class *)type metadata accessor for ScheduledOperationScheduler();
  v23 = (char *)objc_allocWithZone(v22);
  *(_QWORD *)&v23[OBJC_IVAR___PFScheduledOperationScheduler_schedule] = v20;
  *(_QWORD *)&v23[OBJC_IVAR___PFScheduledOperationScheduler_storage] = v21;
  v27.receiver = v23;
  v27.super_class = v22;
  v24 = objc_msgSendSuper2(&v27, sel_init);

  return v24;
}

uint64_t sub_1A90C7BBC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F762C();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t sub_1A90C7C88()
{
  return type metadata accessor for ManagedObjectContextMonitor(0);
}

uint64_t sub_1A90C7C90()
{
  uint64_t v0;

  v0 = sub_1A93F7698();
  __swift_allocate_value_buffer(v0, qword_1ED2AD000);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2AD000);
  return sub_1A93F7680();
}

uint64_t sub_1A90C7D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1A93F885C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F8808();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v6);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A93F7D88();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1A93F888C();
  qword_1ED2ACFC0 = result;
  return result;
}

_QWORD *sub_1A90C7EDC()
{
  return sub_1A9076B70(&qword_1ED2A9120);
}

uint64_t storeEnumTagSinglePayload for FeedManagerBagConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for FeedManagerBagConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1A90C7F00()
{
  unint64_t v0;

  sub_1A90D80AC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1A90C7F80(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9078070(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t static FeedManagerBagConfiguration.getConfigurationOrLocalDefault(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = (void *)objc_opt_self();
  swift_retain();
  v6 = objc_msgSend(v5, sel_sharedInstance);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1A90C7F80;
  *(_QWORD *)(v7 + 24) = v4;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1A90C80E4;
  *(_QWORD *)(v8 + 24) = v7;
  v11[4] = sub_1A90C10CC;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A906FD4C;
  v11[3] = &block_descriptor_17_2;
  v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_createSnapshotWithCompletion_, v9);
  _Block_release(v9);
  swift_release();

  return swift_release();
}

uint64_t sub_1A90C80E8(void *a1, char a2)
{
  uint64_t v2;

  return sub_1A90C80F4(a1, a2 & 1, *(void (**)(_QWORD *))(v2 + 16));
}

uint64_t sub_1A90C80F4(void *a1, char a2, void (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9798);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 & 1) != 0)
  {
    *v8 = a1;
    swift_storeEnumTagMultiPayload();
    v10 = a1;
  }
  else
  {
    v9 = swift_retain();
    sub_1A908F3C0(v9, (uint64_t)v8);
    swift_storeEnumTagMultiPayload();
  }
  a3(v8);
  return sub_1A905FD54((uint64_t)v8, &qword_1ED2A9798);
}

uint64_t sub_1A90C81C8()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v0 = (int *)type metadata accessor for FeedManagerBagConfiguration();
  __swift_allocate_value_buffer((uint64_t)v0, qword_1ED2B8998);
  v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_1ED2B8998);
  v2 = sub_1A93F726C();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_BYTE *)(v1 + v0[5]) = 1;
  *(_BYTE *)(v1 + v0[6]) = 1;
  *(_QWORD *)(v1 + v0[7]) = &unk_1E54D75D0;
  return result;
}

uint64_t type metadata accessor for FairPlayMigrationController()
{
  return objc_opt_self();
}

id sub_1A90C8394()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FairPlayMigrationController()), sel_init);
  qword_1ED2A7A30 = (uint64_t)result;
  return result;
}

uint64_t sub_1A90C8400(char a1)
{
  uint64_t v1;

  return sub_1A90C840C(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1A90C840C(char a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  _QWORD *v8;

  if ((a1 & 1) == 0)
    return a3();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a3;
  v8[3] = a4;
  v8[4] = a5;
  swift_retain();
  sub_1A932E978((uint64_t)sub_1A9336FD8, (uint64_t)v8);
  return swift_release();
}

void sub_1A90C84A0()
{
  uint64_t v0;

  sub_1A90C84AC(*(_QWORD *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_1A90C84AC(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  void *v8;
  id v9;

  v7 = a1 + 16;
  swift_beginAccess();
  v8 = (void *)MEMORY[0x1AF41420C](v7);
  if (v8)
  {
    v9 = v8;
    swift_retain();
    sub_1A90C967C((uint64_t)v9, v9, a2, a3, a4);
    swift_release();

  }
  else
  {
    a2();
  }
}

uint64_t sub_1A90C8544(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  void *v9;
  uint64_t v10;
  id v11;

  v9 = _Block_copy(aBlock);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  v11 = a1;
  a6(a5, v10);

  return swift_release();
}

uint64_t sub_1A90C85DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v19 = a4;
  v20 = a5;
  ObjectType = swift_getObjectType();
  v9 = sub_1A93F7D58();
  v23 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1A93F7DB8();
  v12 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v5 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = ObjectType;
  aBlock[4] = v19;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = v20;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1A93F7D88();
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
  swift_release();
  return swift_release();
}

uint64_t FairPlayMigrationController.migrateIfNecessary(completion:)(uint64_t a1, uint64_t a2)
{
  return sub_1A90C85DC(a1, a2, (uint64_t)&unk_1E54F2B38, (uint64_t)sub_1A90C84A0, (uint64_t)&block_descriptor_63);
}

uint64_t sub_1A90C8830()
{
  uint64_t v0;

  return (*(uint64_t (**)(BOOL))(v0 + 16))(*(_QWORD *)(v0 + 32) != 0);
}

uint64_t sub_1A90C8860()
{
  uint64_t v0;

  return sub_1A90C8870(*(_QWORD *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1A90C8870(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD v25[3];
  uint64_t (*v26)(void);
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[7];

  v30 = sub_1A93F7D58();
  v6 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7DB8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = MEMORY[0x1AF41420C](a1 + 16);
  if (!v13)
    return a2();
  v14 = (char *)v13;
  v26 = a2;
  v27 = a3;
  v29 = v10;
  sub_1A93F8040();
  v15 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v16 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v15, sel_initWithEntityName_, v16);

  sub_1A9072534(0, &qword_1ED2AC7B8);
  v18 = sub_1A93F89D0();
  v28 = v17;
  v19 = v18;
  v25[2] = *(_QWORD *)&v14[OBJC_IVAR___PFFairPlayMigrationController_internalQueue];
  v20 = (_QWORD *)swift_allocObject();
  v21 = v27;
  v20[2] = v26;
  v20[3] = v21;
  v20[4] = v19;
  aBlock[4] = sub_1A90C8830;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_91;
  v22 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  v23 = v30;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v12, v8, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v23);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v9);

  return swift_release();
}

uint64_t sub_1A90C8E84(char a1)
{
  uint64_t v1;

  return sub_1A90C8E90(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1A90C8E90(char a1, uint64_t (*a2)(uint64_t))
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if ((a1 & 1) == 0)
  {
    if (qword_1ED2A8890 != -1)
      swift_once();
    v11 = sub_1A93F7698();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED2A8878);
    v6 = sub_1A93F7674();
    v12 = sub_1A93F8790();
    if (!os_log_type_enabled(v6, v12))
      goto LABEL_12;
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v22 = v14;
    *(_DWORD *)v13 = 136315394;
    sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, &v22);
    sub_1A93F8AA8();
    *(_WORD *)(v13 + 12) = 1026;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v6, v12, "%s Should not reattempt migration, hasLegacyKeys: %{BOOL,public}d.", (uint8_t *)v13, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v14, -1, -1);
    v10 = v13;
    goto LABEL_11;
  }
  v3 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  v4 = (uint64_t)objc_msgSend(v3, sel_fairPlayMigrationRetryCount);

  if (v4 > 5)
  {
    if (qword_1ED2A8890 != -1)
      swift_once();
    v5 = sub_1A93F7698();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED2A8878);
    v6 = sub_1A93F7674();
    v7 = sub_1A93F8790();
    if (!os_log_type_enabled(v6, v7))
      goto LABEL_12;
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v22 = v9;
    *(_DWORD *)v8 = 136315394;
    sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, &v22);
    sub_1A93F8AA8();
    *(_WORD *)(v8 + 12) = 2050;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v6, v7, "%s Should not reattempt migration, migrationRetryCount: %{public}ld.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v9, -1, -1);
    v10 = v8;
LABEL_11:
    MEMORY[0x1AF41411C](v10, -1, -1);
LABEL_12:

    v15 = 0;
    return a2(v15);
  }
  if (qword_1ED2A8890 != -1)
    swift_once();
  v17 = sub_1A93F7698();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED2A8878);
  v18 = sub_1A93F7674();
  v19 = sub_1A93F8790();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v22 = v21;
    *(_DWORD *)v20 = 136315394;
    sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, &v22);
    sub_1A93F8AA8();
    *(_WORD *)(v20 + 12) = 2048;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v18, v19, "%s Migration should be reattempted, migrationRetryCount: %ld.", (uint8_t *)v20, 0x16u);
    v15 = 1;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v21, -1, -1);
    MEMORY[0x1AF41411C](v20, -1, -1);

  }
  else
  {

    v15 = 1;
  }
  return a2(v15);
}

uint64_t sub_1A90C9324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  id v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  _QWORD v27[2];
  uint64_t aBlock[6];

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = sub_1A93F7E18();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v3 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x1E0DEF740], v7, v9);
  v13 = v12;
  LOBYTE(v12) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  if ((v12 & 1) != 0)
  {
    if (qword_1ED2A8890 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v14 = sub_1A93F7698();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A8878);
  v15 = sub_1A93F7674();
  v16 = sub_1A93F8790();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    aBlock[0] = v18;
    *(_DWORD *)v17 = 136315138;
    v27[1] = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, aBlock);
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v15, v16, "%s Determining reattempting migration status.", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v18, -1, -1);
    MEMORY[0x1AF41411C](v17, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v20 = objc_msgSend(v19, sel_privateQueueContext);

  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a1;
  v21[3] = a2;
  v21[4] = ObjectType;
  v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v22;
  v23[3] = sub_1A90C8E84;
  v23[4] = v21;
  v23[5] = v20;
  v23[6] = ObjectType;
  aBlock[4] = (uint64_t)sub_1A90C8860;
  aBlock[5] = (uint64_t)v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A908A91C;
  aBlock[3] = (uint64_t)&block_descriptor_79_0;
  v24 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v25 = v20;
  swift_release();
  objc_msgSend(v25, sel_performBlock_, v24);
  _Block_release(v24);

  return swift_release();
}

uint64_t sub_1A90C967C(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t (*v43)(void);
  uint64_t v44;
  uint64_t v45;

  v10 = sub_1A93F7E18();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (_QWORD *)((char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a3;
  v43 = a3;
  v15 = *(void **)(a1 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  v14[4] = a4;
  v14[5] = a5;
  *v13 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v16 = a2;
  swift_retain();
  v17 = v15;
  v18 = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v18 & 1) != 0)
  {
    v42 = a5;
    if (qword_1ED2A8890 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v19 = sub_1A93F7698();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED2A8878);
  v21 = sub_1A93F7674();
  v22 = sub_1A93F8790();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v41[1] = v20;
    v24 = (uint8_t *)v23;
    v25 = a4;
    v26 = v16;
    v27 = swift_slowAlloc();
    v45 = v27;
    *(_DWORD *)v24 = 136315138;
    v44 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, &v45);
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v21, v22, "%s Determining migration status.", v24, 0xCu);
    swift_arrayDestroy();
    v28 = v27;
    v16 = v26;
    a4 = v25;
    MEMORY[0x1AF41411C](v28, -1, -1);
    MEMORY[0x1AF41411C](v24, -1, -1);
  }

  if (qword_1ED2A7888 != -1)
  {
    swift_once();
    if ((_s18PodcastsFoundation25FairPlayRolloutControllerC9isEnabledSbyF_0() & 1) != 0)
      goto LABEL_7;
LABEL_20:
    v36 = sub_1A93F7674();
    v37 = sub_1A93F8790();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v45 = v39;
      *(_DWORD *)v38 = 136315394;
      v44 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, &v45);
      sub_1A93F8AA8();
      *(_WORD *)(v38 + 12) = 1026;
      LODWORD(v44) = 0;
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v36, v37, "%s Migration unnecessary, fairPlayV2Enabled: %{BOOL,public}d.", (uint8_t *)v38, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v39, -1, -1);
      MEMORY[0x1AF41411C](v38, -1, -1);
    }

    v43();
    return swift_release();
  }
  if ((_s18PodcastsFoundation25FairPlayRolloutControllerC9isEnabledSbyF_0() & 1) == 0)
    goto LABEL_20;
LABEL_7:
  v29 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  NSUserDefaults.fairPlayVersion.getter((BOOL *)&v45);

  if ((_BYTE)v45)
    v30 = 12918;
  else
    v30 = 12662;
  if ((v45 & 1) != 0)
  {
    v31 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v31 & 1) == 0)
    {
      sub_1A90C9324((uint64_t)sub_1A90C8400, (uint64_t)v14);
      return swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v32 = sub_1A93F7674();
  v33 = sub_1A93F8790();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v45 = v35;
    *(_DWORD *)v34 = 136315394;
    v44 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, &v45);
    sub_1A93F8AA8();
    *(_WORD *)(v34 + 12) = 2082;
    v44 = sub_1A906436C(v30, 0xE200000000000000, &v45);
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v32, v33, "%s Should attempt migration, fairPlayVersion: %{public}s.", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v35, -1, -1);
    MEMORY[0x1AF41411C](v34, -1, -1);
  }

  sub_1A90C840C(1, (uint64_t)v16, v43, a4, v42);
  return swift_release();
}

uint64_t type metadata accessor for FairPlayInvalidationManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CoreDataDownloadPersistence()
{
  return objc_opt_self();
}

uint64_t FairPlayKeySessionProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnalyticsIdentifierManager()
{
  return objc_opt_self();
}

id sub_1A90C9CD4()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  objc_super v17;

  v1 = OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_identifierPromise;
  v2 = objc_allocWithZone(MEMORY[0x1E0CFDBB8]);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_init);
  v4 = OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_promiseLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(_QWORD *)&v3[v4] = v5;
  v6 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  v7 = OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_accountStore;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_accountStore] = v6;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDB80]), sel_init);
  v9 = OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store] = v8;
  v10 = qword_1ED2A78A0;
  v11 = v8;
  if (v10 != -1)
    swift_once();
  objc_msgSend(v11, sel_setClientInfo_, qword_1ED2A7890);

  objc_msgSend(*(id *)&v3[v9], sel_setResetInterval_, 0.0);
  v12 = *(void **)&v3[v7];
  v13 = *(id *)&v3[v9];
  v14 = objc_msgSend(v12, sel_ams_activeiTunesAccount);
  objc_msgSend(v13, sel_setAccount_, v14);

  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for AnalyticsIdentifierManager();
  v15 = objc_msgSendSuper2(&v17, sel_init);
  sub_1A90C9F70();

  return v15;
}

uint64_t dispatch thunk of AnalyticsIdentifierManager.identifierPromise.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

id sub_1A90C9E9C()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_identifierPromise);
  swift_beginAccess();
  return *v1;
}

id sub_1A90C9EE0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AnalyticsIdentifierManager()), sel_init);
  qword_1ED2A78D0 = (uint64_t)result;
  return result;
}

id static AnalyticsIdentifierManager.sharedInstance.getter()
{
  return sub_1A906F330(&qword_1ED2A78D8, (id *)&qword_1ED2A78D0);
}

void sub_1A90C9F28(uint64_t a1)
{
  sub_1A90ADBC4(a1, 0x6449746E65696C63, 0xE800000000000000, 0, &qword_1ED2A78B8);
}

double static AnalyticsIdentifierManager.resetInterval.getter()
{
  return 0.0;
}

uint64_t dispatch thunk of AnalyticsIdentifierManager.resetIfNeeded()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t sub_1A90C9F70()
{
  return sub_1A908CAE8((uint64_t)sub_1A908C4B4, (uint64_t)&block_descriptor_8);
}

void sub_1A90C9F84(uint64_t a1)
{
  sub_1A90ADBC4(a1, 0x644972657375, 0xE600000000000000, 1, &qword_1ED2A78A8);
}

void sub_1A90C9FA4()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  id v4;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1A93F8040();

  }
  v2 = objc_allocWithZone(MEMORY[0x1E0CFDBD0]);
  v3 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithBundleIdentifier_, v3);

  qword_1ED2A7890 = (uint64_t)v4;
}

id static AnalyticsIdentifierManager.clientInfo.getter()
{
  return sub_1A906F330(&qword_1ED2A78A0, (id *)&qword_1ED2A7890);
}

uint64_t type metadata accessor for SyncKeysUserDefaultsStore()
{
  return objc_opt_self();
}

_QWORD *sub_1A90CA0C0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_standardUserDefaults);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A6FE8);
  v3 = swift_allocObject();
  *(_BYTE *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 16) = 0xD000000000000014;
  *(_QWORD *)(v3 + 24) = 0x80000001A9448270;
  *(_QWORD *)(v3 + 40) = v2;
  *(_QWORD *)(v3 + 48) = &type metadata for BoolTransform;
  *(_QWORD *)(v3 + 56) = &off_1E54DAAC8;
  v0[2] = v3;
  v4 = objc_msgSend(v1, (SEL)&selRef_streamUrl + 3);
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 16) = 0xD000000000000016;
  *(_QWORD *)(v5 + 24) = 0x80000001A9448290;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 48) = &type metadata for BoolTransform;
  *(_QWORD *)(v5 + 56) = &off_1E54DAAC8;
  v0[3] = v5;
  v6 = objc_msgSend(v1, (SEL)&selRef_streamUrl + 3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A6FE0);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 40) = 0;
  strcpy((char *)(v7 + 16), "MTSyncVersion");
  *(_WORD *)(v7 + 30) = -4864;
  *(_QWORD *)(v7 + 48) = v6;
  *(_QWORD *)(v7 + 56) = &type metadata for StringTransform;
  *(_QWORD *)(v7 + 64) = &off_1E54DAAB0;
  v0[4] = v7;
  v8 = objc_msgSend(v1, (SEL)&selRef_streamUrl + 3);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 40) = 0;
  strcpy((char *)(v9 + 16), "MTSyncVersion3");
  *(_BYTE *)(v9 + 31) = -18;
  *(_QWORD *)(v9 + 48) = v8;
  *(_QWORD *)(v9 + 56) = &type metadata for StringTransform;
  *(_QWORD *)(v9 + 64) = &off_1E54DAAB0;
  v0[5] = v9;
  v10 = objc_msgSend(v1, (SEL)&selRef_streamUrl + 3);
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 32) = 0;
  *(_QWORD *)(v11 + 16) = 0xD00000000000001DLL;
  *(_QWORD *)(v11 + 24) = 0x80000001A94482B0;
  *(_QWORD *)(v11 + 40) = v10;
  *(_QWORD *)(v11 + 48) = &type metadata for BoolTransform;
  *(_QWORD *)(v11 + 56) = &off_1E54DAAC8;
  v0[6] = v11;
  v12 = objc_msgSend(v1, (SEL)&selRef_streamUrl + 3);
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 32) = 0;
  *(_QWORD *)(v13 + 16) = 0xD00000000000001CLL;
  *(_QWORD *)(v13 + 24) = 0x80000001A94482D0;
  *(_QWORD *)(v13 + 40) = v12;
  *(_QWORD *)(v13 + 48) = &type metadata for BoolTransform;
  *(_QWORD *)(v13 + 56) = &off_1E54DAAC8;
  v0[7] = v13;
  v14 = objc_msgSend(v1, (SEL)&selRef_streamUrl + 3);
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 32) = 0;
  *(_QWORD *)(v15 + 16) = 0xD00000000000001DLL;
  *(_QWORD *)(v15 + 24) = 0x80000001A94482F0;
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = &type metadata for BoolTransform;
  *(_QWORD *)(v15 + 56) = &off_1E54DAAC8;
  v0[8] = v15;
  v16 = objc_msgSend(v1, (SEL)&selRef_streamUrl + 3);
  v17 = swift_allocObject();
  *(_BYTE *)(v17 + 32) = 0;
  *(_QWORD *)(v17 + 16) = 0xD000000000000020;
  *(_QWORD *)(v17 + 24) = 0x80000001A9448310;
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = &type metadata for BoolTransform;
  *(_QWORD *)(v17 + 56) = &off_1E54DAAC8;
  v0[9] = v17;
  v18 = objc_msgSend(v1, (SEL)&selRef_streamUrl + 3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A6FF8);
  v19 = swift_allocObject();
  *(_BYTE *)(v19 + 40) = 1;
  *(_QWORD *)(v19 + 16) = 0xD00000000000002ALL;
  *(_QWORD *)(v19 + 24) = 0x80000001A9448340;
  *(_QWORD *)(v19 + 32) = 0;
  *(_QWORD *)(v19 + 48) = v18;
  *(_QWORD *)(v19 + 56) = &type metadata for DoubleTransform;
  *(_QWORD *)(v19 + 64) = &off_1E54DAA50;
  v0[10] = v19;
  v20 = objc_msgSend(v1, (SEL)&selRef_streamUrl + 3);
  v21 = (_QWORD *)swift_allocObject();
  v21[4] = 0;
  v21[5] = 0;
  v21[2] = 0xD000000000000024;
  v21[3] = 0x80000001A9448370;
  v21[6] = v20;
  v21[7] = &type metadata for StringTransform;
  v21[8] = &off_1E54DAAB0;
  v0[11] = v21;
  v22 = objc_msgSend(v1, (SEL)&selRef_streamUrl + 3);
  v23 = swift_allocObject();
  *(_BYTE *)(v23 + 40) = 1;
  *(_QWORD *)(v23 + 16) = 0xD000000000000024;
  *(_QWORD *)(v23 + 24) = 0x80000001A94483A0;
  *(_QWORD *)(v23 + 32) = 0;
  *(_QWORD *)(v23 + 48) = v22;
  *(_QWORD *)(v23 + 56) = &type metadata for DoubleTransform;
  *(_QWORD *)(v23 + 64) = &off_1E54DAA50;
  v0[12] = v23;
  v24 = objc_msgSend(v1, (SEL)&selRef_streamUrl + 3);
  v25 = swift_allocObject();
  *(_BYTE *)(v25 + 32) = 0;
  *(_QWORD *)(v25 + 16) = 0xD000000000000016;
  *(_QWORD *)(v25 + 24) = 0x80000001A94483D0;
  *(_QWORD *)(v25 + 40) = v24;
  *(_QWORD *)(v25 + 48) = &type metadata for BoolTransform;
  *(_QWORD *)(v25 + 56) = &off_1E54DAAC8;
  v0[13] = v25;
  v26 = objc_msgSend(v1, (SEL)&selRef_streamUrl + 3);
  v27 = (_QWORD *)swift_allocObject();
  v27[4] = 0;
  v27[5] = 0;
  v27[2] = 0xD00000000000001DLL;
  v27[3] = 0x80000001A94483F0;
  v27[6] = v26;
  v27[7] = &type metadata for StringTransform;
  v27[8] = &off_1E54DAAB0;
  v0[14] = v27;
  v28 = objc_msgSend(v1, (SEL)&selRef_streamUrl + 3);
  v29 = swift_allocObject();
  *(_BYTE *)(v29 + 40) = 1;
  *(_QWORD *)(v29 + 16) = 0xD00000000000002ELL;
  *(_QWORD *)(v29 + 24) = 0x80000001A9448410;
  *(_QWORD *)(v29 + 32) = 0;
  *(_QWORD *)(v29 + 48) = v28;
  *(_QWORD *)(v29 + 56) = &type metadata for DoubleTransform;
  *(_QWORD *)(v29 + 64) = &off_1E54DAA50;
  v0[15] = v29;
  v30 = objc_msgSend(v1, (SEL)&selRef_streamUrl + 3);
  v31 = swift_allocObject();
  *(_BYTE *)(v31 + 40) = 1;
  *(_QWORD *)(v31 + 16) = 0xD00000000000002ELL;
  *(_QWORD *)(v31 + 24) = 0x80000001A9448440;
  *(_QWORD *)(v31 + 32) = 0;
  *(_QWORD *)(v31 + 48) = v30;
  *(_QWORD *)(v31 + 56) = &type metadata for DoubleTransform;
  *(_QWORD *)(v31 + 64) = &off_1E54DAA50;
  v0[16] = v31;
  return v0;
}

uint64_t type metadata accessor for PurchaseControllerWrapper()
{
  return objc_opt_self();
}

uint64_t sub_1A90CA850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v9;

  v0 = sub_1A93F7698();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  v5 = sub_1A93F7674();
  v6 = sub_1A93F87B4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1A904E000, v5, v6, "Force fetching latest channel updates", v7, 2u);
    MEMORY[0x1AF41411C](v7, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_1A90D08B4(0);
}

id sub_1A90CA9B4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PurchaseControllerWrapper()), sel_init);
  qword_1ED2A3378 = (uint64_t)result;
  return result;
}

id static PurchaseControllerWrapper.sharedInstance.getter()
{
  if (qword_1ED2A3388 != -1)
    swift_once();
  return (id)qword_1ED2A3378;
}

id PurchaseControllerWrapper.purchaseController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___MTPurchaseControllerWrapper_purchaseController);
}

uint64_t type metadata accessor for FairPlayValidationManager()
{
  return objc_opt_self();
}

unint64_t sub_1A90CAA90()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;

  v1 = (unint64_t *)(v0 + OBJC_IVAR___PFFairPlayValidationManager____lazy_storage___logPrefix);
  if (*(_QWORD *)(v0 + OBJC_IVAR___PFFairPlayValidationManager____lazy_storage___logPrefix + 8))
  {
    v2 = *v1;
  }
  else
  {
    v2 = 0xD00000000000002FLL;
    *v1 = 0xD00000000000002FLL;
    v1[1] = 0x80000001A94467F0;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1A90CAB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A90CAB54(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1A90CAB54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_1A93F711C();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

uint64_t type metadata accessor for FairPlayValidationManager.Response()
{
  return objc_opt_self();
}

void sub_1A90CABCC(unint64_t a1)
{
  uint64_t v1;

  sub_1A90CABD8(a1, *(void **)(v1 + 16), *(void (**)(id, _QWORD))(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1A90CABD8(unint64_t a1, void *a2, void (*a3)(id, _QWORD), uint64_t a4)
{
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  unint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  objc_class *v24;
  char *v25;
  uint64_t v26;
  id v27;
  objc_super v28;
  unint64_t v29;

  v29 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_19;
LABEL_16:
    if ((v12 & 0x4000000000000000) == 0)
    {
      if (!*(_QWORD *)(v12 + 16))
        goto LABEL_20;
      goto LABEL_18;
    }
LABEL_19:
    swift_retain();
    v15 = sub_1A93F8E5C();
    swift_release();
    if (!v15)
    {
LABEL_20:
      swift_release();
      if (qword_1ED2A8890 == -1)
        goto LABEL_21;
      goto LABEL_28;
    }
LABEL_18:
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a3;
    v13[3] = a4;
    v13[4] = a2;
    v13[5] = v12;
    swift_retain();
    sub_1A90858C0((uint64_t)a3);
    v14 = a2;
    sub_1A91AE978(v12, (uint64_t)sub_1A91AF7F0, (uint64_t)v13);
    swift_release();
    swift_release();
    return;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1A93F8E5C();
  if (!v8)
    goto LABEL_15;
LABEL_3:
  if (v8 >= 1)
  {
    for (i = 0; i != v8; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1AF4129DC](i, a1);
      else
        v10 = *(id *)(a1 + 8 * i + 32);
      v11 = v10;
      if (FairPlayAsset.requiresRenewal()())
      {
        sub_1A93F8D60();
        sub_1A93F8D90();
        sub_1A93F8D9C();
        sub_1A93F8D6C();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v12 = v29;
    if ((v29 & 0x8000000000000000) != 0)
      goto LABEL_19;
    goto LABEL_16;
  }
  __break(1u);
LABEL_28:
  swift_once();
LABEL_21:
  v16 = sub_1A93F7698();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED2A8878);
  v17 = a2;
  v18 = sub_1A93F7674();
  v19 = sub_1A93F87B4();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v29 = v21;
    *(_DWORD *)v20 = 136315138;
    v22 = sub_1A90CAA90();
    sub_1A906436C(v22, v23, (uint64_t *)&v29);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v18, v19, "%s No episodes found requiring renewal.", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v21, -1, -1);
    MEMORY[0x1AF41411C](v20, -1, -1);

    if (!a3)
      return;
  }
  else
  {

    if (!a3)
      return;
  }
  v24 = (objc_class *)type metadata accessor for FairPlayValidationManager.Response();
  v25 = (char *)objc_allocWithZone(v24);
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v25[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_renewedAdamIDs] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v25[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_failedAdamIDs] = v26;
  *(_QWORD *)&v25[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs] = v26;
  v28.receiver = v25;
  v28.super_class = v24;
  v27 = objc_msgSendSuper2(&v28, sel_init);
  a3(v27, 0);

}

void sub_1A90CAF98()
{
  uint64_t v0;

  sub_1A90CAFA4(*(_QWORD *)(v0 + 16), *(void (**)(id, void *))(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1A90CAFA4(uint64_t a1, void (*a2)(id, void *), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  objc_class *v16;
  char *v17;
  uint64_t v18;
  id v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(void (*)(void *, char), _QWORD *, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  objc_super v28;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1AF41420C](v5);
  if (v6)
  {
    v7 = (void *)v6;
    if (qword_1ED2A8890 != -1)
      swift_once();
    v8 = sub_1A93F7698();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A8878);
    v9 = v7;
    v10 = sub_1A93F7674();
    v11 = sub_1A93F8784();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v27 = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = sub_1A90CAA90();
      sub_1A906436C(v14, v15, &v27);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v10, v11, "%s Validating downloaded FairPlay episodes.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v13, -1, -1);
      MEMORY[0x1AF41411C](v12, -1, -1);

    }
    else
    {

    }
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = v9;
    v21[3] = a2;
    v21[4] = a3;
    v22 = *(_QWORD *)&v9[OBJC_IVAR___PFFairPlayValidationManager_episodeFetcher + 24];
    v23 = *(_QWORD *)&v9[OBJC_IVAR___PFFairPlayValidationManager_episodeFetcher + 32];
    __swift_project_boxed_opaque_existential_1(&v9[OBJC_IVAR___PFFairPlayValidationManager_episodeFetcher], v22);
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = sub_1A90CABCC;
    v24[3] = v21;
    v24[4] = v9;
    v25 = *(void (**)(void (*)(void *, char), _QWORD *, uint64_t, uint64_t))(v23 + 16);
    v26 = v9;
    sub_1A90858C0((uint64_t)a2);
    swift_retain();
    v25(sub_1A90CB594, v24, v22, v23);

    swift_release();
    swift_release();
  }
  else if (a2)
  {
    v16 = (objc_class *)type metadata accessor for FairPlayValidationManager.Response();
    v17 = (char *)objc_allocWithZone(v16);
    v18 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v17[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_renewedAdamIDs] = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v17[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_failedAdamIDs] = v18;
    *(_QWORD *)&v17[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs] = v18;
    v28.receiver = v17;
    v28.super_class = v16;
    v19 = objc_msgSendSuper2(&v28, sel_init);
    sub_1A91AF710();
    v20 = (void *)swift_allocError();
    a2(v19, v20);

  }
}

uint64_t FairPlayValidationManager.validateDownloadedEpisodes(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_1A93F7D58();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F7DB8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(v3 + OBJC_IVAR___PFFairPlayValidationManager_internalQueue);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  aBlock[4] = sub_1A90CAF98;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_16;
  v16 = _Block_copy(aBlock);
  swift_retain();
  sub_1A90858C0(a1);
  sub_1A93F7D88();
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v7, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v13, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_release();
  return swift_release();
}

void sub_1A90CB594(void *a1, char a2)
{
  uint64_t v2;

  sub_1A90CB5A4(a1, a2 & 1, *(void (**)(id))(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

void sub_1A90CB5A4(id a1, char a2, void (*a3)(id), uint64_t a4, void *a5)
{
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((a2 & 1) != 0)
  {
    v8 = a1;
    if (qword_1ED2A8890 != -1)
      swift_once();
    v9 = sub_1A93F7698();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A8878);
    sub_1A90BF154(a1, 1);
    v10 = a5;
    sub_1A90BF154(a1, 1);
    v11 = v10;
    v12 = sub_1A93F7674();
    v13 = sub_1A93F879C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v20 = v19;
      *(_DWORD *)v14 = 136315651;
      v15 = sub_1A90CAA90();
      sub_1A906436C(v15, v16, &v20);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2160;
      sub_1A93F8AA8();
      *(_WORD *)(v14 + 22) = 2081;
      swift_getErrorValue();
      v17 = sub_1A93F927C();
      sub_1A906436C(v17, v18, &v20);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A909CFC0(a1, 1);
      sub_1A909CFC0(a1, 1);
      _os_log_impl(&dword_1A904E000, v12, v13, "%s Unable to fetch downloaded FairPlay episodes with error: %{private,mask.hash}s.", (uint8_t *)v14, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v19, -1, -1);
      MEMORY[0x1AF41411C](v14, -1, -1);
    }
    else
    {

      sub_1A909CFC0(a1, 1);
      sub_1A909CFC0(a1, 1);
    }

    a3((id)MEMORY[0x1E0DEE9D8]);
    sub_1A909CFC0(a1, 1);
  }
  else
  {
    a3(a1);
  }
}

uint64_t type metadata accessor for FairPlayRolloutController()
{
  return objc_opt_self();
}

id sub_1A90CB8B4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FairPlayRolloutController()), sel_init);
  qword_1ED2A7878 = (uint64_t)result;
  return result;
}

void sub_1A90CB8E0(void *a1, char a2)
{
  uint64_t v2;

  sub_1A90CB8F0(a1, a2 & 1, *(void (**)(uint64_t))(v2 + 16));
}

void sub_1A90CB8F0(id a1, char a2, void (*a3)(uint64_t))
{
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  id v17;
  unsigned int v18;
  void *v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  char v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  if ((a2 & 1) != 0)
  {
    v6 = a1;
    if (qword_1ED2A8890 != -1)
      swift_once();
    v7 = sub_1A93F7698();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED2A8878);
    v8 = a1;
    v9 = a1;
    v10 = sub_1A93F7674();
    v11 = sub_1A93F879C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v44 = swift_slowAlloc();
      v45 = v44;
      *(_DWORD *)v12 = 136315394;
      sub_1A906436C(0xD00000000000002FLL, 0x80000001A944F560, &v45);
      sub_1A93F8AA8();
      *(_WORD *)(v12 + 12) = 2082;
      swift_getErrorValue();
      v13 = sub_1A93F927C();
      sub_1A906436C(v13, v14, &v45);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A93920C0(a1, 1);
      sub_1A93920C0(a1, 1);
      _os_log_impl(&dword_1A904E000, v10, v11, "%s Unable to create local bag snapshot, cannot determine rollback status %{public}s.", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v44, -1, -1);
      MEMORY[0x1AF41411C](v12, -1, -1);
    }
    else
    {
      sub_1A93920C0(a1, 1);
      sub_1A93920C0(a1, 1);
    }

LABEL_16:
    a3(0);
    goto LABEL_17;
  }
  v15 = (void *)*((_QWORD *)a1 + 2);
  swift_retain();
  v16 = objc_msgSend(v15, sel_BOOLForKey_, CFSTR("fairplay-v2-enabled"));
  v17 = objc_msgSend(v16, sel_unsafeSnapshotSyncValue);

  if (!v17)
  {
    if (qword_1ED2A8890 != -1)
      swift_once();
    v25 = sub_1A93F7698();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED2A8878);
    v26 = sub_1A93F7674();
    v27 = sub_1A93F879C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v45 = v29;
      *(_DWORD *)v28 = 136315138;
      sub_1A906436C(0xD00000000000002FLL, 0x80000001A944F560, &v45);
      sub_1A93F8AA8();
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v29, -1, -1);
      MEMORY[0x1AF41411C](v28, -1, -1);
    }

    goto LABEL_16;
  }
  v18 = objc_msgSend(v17, sel_BOOLValue);

  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel__applePodcastsFoundationSharedUserDefaults);
  v21 = sub_1A90A4348();
  if (v21 == 2)
  {
    v22 = qword_1EEAB8A98;
    v23 = unk_1EEAB8AA0;
    swift_bridgeObjectRetain();
    v24 = sub_1A90A427C(v22, v23, 1);

    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = v21;

    v24 = v30 & 1;
  }
  if (v18 == (v24 & 1))
  {
    if (qword_1ED2A8890 != -1)
      swift_once();
    v39 = sub_1A93F7698();
    __swift_project_value_buffer(v39, (uint64_t)qword_1ED2A8878);
    v40 = sub_1A93F7674();
    v41 = sub_1A93F879C();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      v45 = v43;
      *(_DWORD *)v42 = 136315138;
      sub_1A906436C(0xD00000000000002FLL, 0x80000001A944F560, &v45);
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v40, v41, "%s Rollback status unchanged.", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v43, -1, -1);
      MEMORY[0x1AF41411C](v42, -1, -1);
    }

    a3(0);
  }
  else
  {
    v31 = objc_msgSend(v19, sel__applePodcastsFoundationSharedUserDefaults);
    v32 = (void *)sub_1A93F8400();
    swift_bridgeObjectRetain();
    v33 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    objc_msgSend(v31, sel_setValue_forKey_, v32, v33);

    if (qword_1ED2A8890 != -1)
      swift_once();
    v34 = sub_1A93F7698();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ED2A8878);
    v35 = sub_1A93F7674();
    v36 = sub_1A93F879C();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v45 = v38;
      *(_DWORD *)v37 = 136315138;
      sub_1A906436C(0xD00000000000002FLL, 0x80000001A944F560, &v45);
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v35, v36, "%s Rollback status changed.", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v38, -1, -1);
      MEMORY[0x1AF41411C](v37, -1, -1);

      a3(1);
    }
    else
    {

      a3(1);
    }
  }
LABEL_17:
  sub_1A93920C0(a1, a2 & 1);
}

uint64_t sub_1A90CC0AC()
{
  uint64_t *v0;

  return sub_1A90CC0B8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1A90CC0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[6];

  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1A90CB8E0;
  *(_QWORD *)(v8 + 24) = v7;
  v11[4] = sub_1A906FDC0;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A906FD4C;
  v11[3] = &block_descriptor_12_4;
  v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_createSnapshotWithCompletion_, v9);
  _Block_release(v9);

  return swift_release();
}

uint64_t FairPlayRolloutController.didRollbackStatusChange(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  _QWORD *v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  ObjectType = swift_getObjectType();
  v5 = sub_1A93F7D58();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v18 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A93F7DB8();
  v9 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A90CC450();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = ObjectType;
  aBlock[4] = sub_1A90CC0AC;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_75;
  v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v19 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v6, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v17);
  return swift_release();
}

id sub_1A90CC450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  _QWORD v15[4];

  v1 = v0;
  v2 = sub_1A93F885C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F8808();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v7);
  v8 = OBJC_IVAR___PFFairPlayRolloutController____lazy_storage___internalQueue;
  v9 = *(void **)(v0 + OBJC_IVAR___PFFairPlayRolloutController____lazy_storage___internalQueue);
  if (v9)
  {
    v10 = *(id *)(v0 + OBJC_IVAR___PFFairPlayRolloutController____lazy_storage___internalQueue);
  }
  else
  {
    v15[2] = sub_1A9066C6C();
    sub_1A93F7D94();
    v15[3] = MEMORY[0x1E0DEE9D8];
    v15[1] = sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
    sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
    sub_1A93F8B5C();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D0], v2);
    v11 = (void *)sub_1A93F888C();
    v12 = *(void **)(v0 + v8);
    *(_QWORD *)(v1 + v8) = v11;
    v10 = v11;

    v9 = 0;
  }
  v13 = v9;
  return v10;
}

uint64_t type metadata accessor for MaximumFrequencySchedule()
{
  return objc_opt_self();
}

uint64_t sub_1A90CC73C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F726C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for MediaStreamedAssetCache(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1EEAB9960);
}

uint64_t sub_1A90CC7E4()
{
  return type metadata accessor for MediaStreamedAssetCache(0);
}

uint64_t sub_1A90CC918(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1A93F726C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A906E5B0(a1);
  sub_1A93F71B8();
  sub_1A93F71C4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A90CCABC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F726C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t MediaStreamedAssetCache.cachedAssetURL()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v3 = type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR___PFMediaStreamedAssetCache_phase);
  v7 = v6 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v6 + 16);
  v8 = (os_unfair_lock_s *)(v6 + ((*(unsigned int *)(*(_QWORD *)v6 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v8);
  sub_1A90C3B88(v7, (uint64_t)v5);
  os_unfair_lock_unlock(v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_1A93F726C();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v5, v9);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
  }
  else
  {
    sub_1A906E5B0((uint64_t)v5);
    v12 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
}

uint64_t sub_1A90CCD38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1A90CCD6C(_QWORD *a1, const char *a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  const char *v26;
  char *v27;
  char v28;
  char v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  os_signpost_id_t v36;
  void (*v37)(char *, uint64_t);
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  _QWORD *v47;
  char *v48;
  char *v49;
  const char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v8 = sub_1A93F7638();
  v50 = *(const char **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v49 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1A93F75FC();
  v55 = *(_QWORD *)(v53 - 8);
  v10 = MEMORY[0x1E0C80A78](v53);
  v48 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v39 - v12;
  v14 = sub_1A93F762C();
  result = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    v46 = a4;
    v51 = (char *)a2;
    v52 = v16;
    v54 = v4;
    v44 = a1[1];
    v45 = v8;
    v47 = a1;
    v19 = a1[2];
    if (qword_1ED2A86B0 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A8698);
    v21 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v18, v20, v14);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v22 = sub_1A93F7620();
    sub_1A93F7644();
    v43 = sub_1A93F8934();
    if ((sub_1A93F8A6C() & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v53);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v14);
      swift_bridgeObjectRelease();
      result = swift_release();
LABEL_17:
      v38 = v47;
      *v47 = 0;
      v38[1] = 0;
      v38[2] = 0;
      return result;
    }
    v40 = v18;
    v41 = v14;
    v42 = v19;
    if ((v46 & 1) == 0)
    {
      v23 = v54;
      if (v51)
      {
        v24 = v22;
        v25 = v45;
        v27 = v49;
        v26 = v50;
LABEL_13:
        v54 = v23;
        swift_retain();
        sub_1A93F7668();
        swift_release();
        if ((*((unsigned int (**)(char *, uint64_t))v26 + 11))(v27, v25) == *MEMORY[0x1E0DF2190])
        {
          v28 = 0;
          v29 = 0;
          v50 = "[Error] Interval already ended";
        }
        else
        {
          (*((void (**)(char *, uint64_t))v26 + 1))(v27, v25);
          v50 = "[identifier=%{name=identifier}s] CANCEL";
          v29 = 2;
          v28 = 1;
        }
        v30 = v48;
        v31 = v53;
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v48, v13, v53);
        v32 = swift_slowAlloc();
        v33 = swift_slowAlloc();
        v57 = v33;
        *(_BYTE *)v32 = v29;
        *(_BYTE *)(v32 + 1) = v28;
        *(_WORD *)(v32 + 2) = 2080;
        v34 = v13;
        v35 = v42;
        swift_bridgeObjectRetain();
        v56 = sub_1A906436C(v44, v35, &v57);
        sub_1A93F8AA8();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        v36 = sub_1A93F75E4();
        _os_signpost_emit_with_name_impl(&dword_1A904E000, v24, (os_signpost_type_t)v43, v36, v51, v50, (uint8_t *)v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v33, -1, -1);
        MEMORY[0x1AF41411C](v32, -1, -1);

        v37 = *(void (**)(char *, uint64_t))(v55 + 8);
        v37(v34, v31);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v41);
        swift_bridgeObjectRelease();
        swift_release();
        result = ((uint64_t (*)(char *, uint64_t))v37)(v30, v31);
        goto LABEL_17;
      }
LABEL_22:
      swift_bridgeObjectRelease_n();
      result = swift_release_n();
      __break(1u);
      return result;
    }
    v23 = v54;
    if ((unint64_t)v51 >> 32)
    {
      __break(1u);
    }
    else
    {
      v24 = v22;
      v25 = v45;
      v27 = v49;
      v26 = v50;
      if (v51 >> 11 == 27)
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      if (v51 >> 16 <= 0x10)
      {
        v51 = sub_1A910F87C();
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

void sub_1A90CD21C()
{
  uint64_t v0;

  sub_1A90CD22C(*(os_unfair_lock_s **)(v0 + 16), *(const char **)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

void sub_1A90CD22C(os_unfair_lock_s *a1, const char *a2, uint64_t a3, int a4)
{
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;

  v7 = a1 + 4;
  v8 = a1 + 10;
  os_unfair_lock_lock(a1 + 10);
  sub_1A90CCD6C(v7, a2, a3, a4);
  os_unfair_lock_unlock(v8);
}

id sub_1A90CD294()
{
  uint64_t v0;

  return sub_1A90CD29C(v0);
}

id sub_1A90CD29C(uint64_t a1)
{
  id result;

  swift_beginAccess();
  result = *(id *)(a1 + 16);
  if (result)
    return objc_msgSend(result, sel_cancel);
  return result;
}

void sub_1A90CD2E8()
{
  uint64_t v0;

  sub_1A90CD2F4(*(_QWORD *)(v0 + 16), *(void (**)(id, _QWORD))(v0 + 24));
}

void sub_1A90CD2F4(uint64_t a1, void (*a2)(id, _QWORD))
{
  id v3;
  id v4;

  v3 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_, a1);
  v4 = v3;
  a2(v3, 0);

}

id AnalyticsUserIdentifier.init(clientId:userId:userAllowsPersonalization:userUnder13YearsOld:userIsManagedAccount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, char a7)
{
  _BYTE *v7;
  objc_class *ObjectType;
  _QWORD *v16;
  _QWORD *v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v16 = &v7[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId];
  *v16 = a1;
  v16[1] = a2;
  v17 = &v7[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId];
  *v17 = a3;
  v17[1] = a4;
  v7[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userAllowsPersonalization] = a5;
  v7[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userUnder13YearsOld] = a6;
  v7[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userIsManagedAccount] = a7;
  v19.receiver = v7;
  v19.super_class = ObjectType;
  return objc_msgSendSuper2(&v19, sel_init);
}

uint64_t sub_1A90CD468()
{
  return sub_1A9066CA8(&qword_1ED2A56A0, (uint64_t (*)(uint64_t))type metadata accessor for ShazamSignatureRequest, (uint64_t)&protocol conformance descriptor for ShazamSignatureRequest);
}

void sub_1A90CD494()
{
  unint64_t v0;

  sub_1A90D80AC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for PodcastStateController()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of PodcastStateController.startObserving()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

void sub_1A90CD560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = (uint64_t *)(v1 + 40);
    do
    {
      v4 = *v3;
      ObjectType = swift_getObjectType();
      v6 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v4 + 16);
      swift_unknownObjectRetain();
      v7 = swift_retain();
      v6(v7, &protocol witness table for PodcastStateController, ObjectType, v4);
      (*(void (**)(uint64_t, uint64_t))(v4 + 32))(ObjectType, v4);
      swift_unknownObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

_QWORD *PodcastStateController.init(dataSources:transitionRules:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a1;
  v14 = a2;
  v3 = sub_1A93F885C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F8808();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v8);
  v9 = MEMORY[0x1E0DEE9E0];
  v2[3] = MEMORY[0x1E0DEE9E0];
  v2[4] = v9;
  sub_1A9066C6C();
  sub_1A93F7D88();
  v15 = MEMORY[0x1E0DEE9D8];
  sub_1A9085ACC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9085B14();
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D0], v3);
  v10 = sub_1A93F888C();
  v2[2] = v13;
  v2[5] = v14;
  v2[6] = v10;
  return v2;
}

uint64_t sub_1A90CD7E4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*v1 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t sub_1A90CD830()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_1A90CD850()
{
  unint64_t v0;

  sub_1A9070064();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for EpisodeStateRepository()
{
  uint64_t result;

  result = qword_1ED2A2F68;
  if (!qword_1ED2A2F68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A90CD920()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  type metadata accessor for EpisodeStatePersistentHistoryTracker();
  swift_allocObject();
  v0 = EpisodeStatePersistentHistoryTracker.init()();
  type metadata accessor for EpisodeStateRepository();
  v1 = swift_allocObject();
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v3 = objc_msgSend(v2, sel_storeContext);

  *(_QWORD *)(v1 + 16) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4088);
  swift_allocObject();
  v4 = sub_1A93F798C();
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 24) = v4;
  *(_BYTE *)(v1 + 48) = -1;
  v5 = v1 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository____lazy_storage___signpostID;
  v6 = sub_1A93F75FC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository_episodeStatePersistentHistoryTracker) = v0;
  qword_1ED2A7398 = v1;
  return result;
}

uint64_t static EpisodeStateRepository.shared.getter()
{
  if (qword_1ED2A73A0 != -1)
    swift_once();
  return swift_retain();
}

Swift::Void __swiftcall EpisodeStateRepository.startObservingChanges()()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[6];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository_episodeStatePersistentHistoryTracker);
  v2 = *(NSObject **)(v1 + 24);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1A909B9FC;
  *(_QWORD *)(v3 + 24) = v1;
  v5[4] = sub_1A9055748;
  v5[5] = v3;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 1107296256;
  v5[2] = sub_1A9098E00;
  v5[3] = &block_descriptor_12_0;
  v4 = _Block_copy(v5);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v2, v4);
  _Block_release(v4);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v2 & 1) != 0)
    __break(1u);
}

unint64_t sub_1A90CDB88()
{
  unint64_t result;

  result = qword_1ED2A2F58;
  if (!qword_1ED2A2F58)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeStateIdentifier, &type metadata for EpisodeStateIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED2A2F58);
  }
  return result;
}

uint64_t type metadata accessor for EpisodeLevelCalculator()
{
  return objc_opt_self();
}

uint64_t sub_1A90CDC28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A2EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PodcastFeedDownloader()
{
  return objc_opt_self();
}

id PodcastFeedDownloader.init()()
{
  objc_class *v0;
  id v1;
  objc_class *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  id v8;
  id v9;
  id v10;
  objc_super v12;
  _QWORD v13[5];

  v0 = (objc_class *)type metadata accessor for MediaRequestController();
  v1 = objc_msgSend(objc_allocWithZone(v0), sel_init);
  v13[3] = v0;
  v13[4] = &protocol witness table for MediaRequestController;
  v13[0] = v1;
  v2 = (objc_class *)type metadata accessor for PodcastFeedDownloader();
  v3 = objc_allocWithZone(v2);
  v4 = (uint64_t)v3 + OBJC_IVAR____TtC18PodcastsFoundation21PodcastFeedDownloader_mediaRequestController;
  sub_1A905DC3C((uint64_t)v13, (uint64_t)v3 + OBJC_IVAR____TtC18PodcastsFoundation21PodcastFeedDownloader_mediaRequestController);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v8 = v1;
  v9 = v3;
  v7(1, v5, v6);
  swift_endAccess();

  v12.receiver = v9;
  v12.super_class = v2;
  v10 = objc_msgSendSuper2(&v12, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

uint64_t sub_1A90CDDE8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F726C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A90CDE58()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F726C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for DeviceCapacityMonitor()
{
  uint64_t result;

  result = qword_1ED2A2E28;
  if (!qword_1ED2A2E28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A90CDF38()
{
  return type metadata accessor for DeviceCapacityMonitor();
}

void *sub_1A90CDF40()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  id v4;
  void *result;
  uint64_t v6;

  v0 = sub_1A93F726C();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = objc_msgSend((id)objc_opt_self(), sel_managedAssetsDirectoryURL);
  sub_1A93F7200();

  v4 = objc_allocWithZone((Class)type metadata accessor for DeviceCapacityMonitor());
  result = sub_1A90CE3FC(43200000, 0, (uint64_t)v2, 1);
  qword_1ED2A2E00 = (uint64_t)result;
  return result;
}

void sub_1A90CE030(uint64_t a1)
{
  uint64_t v1;

  sub_1A90CE038(a1, v1);
}

void sub_1A90CE038(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1AF41420C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_1A90CECE8();

  }
}

BOOL sub_1A90CE088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  void *v19;
  NSObject *v20;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t aBlock;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  void *v35;
  void *v36;
  uint64_t v37;

  v1 = v0;
  v2 = sub_1A93F7D58();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_retainAutoreleasedReturnValue(MT_makeDispatchSourceTypeVfs(*(dispatch_queue_t *)(v1
                                                                                            + OBJC_IVAR___MTDeviceCapacityMonitor_diskAccessQueue)));
  if (v10)
  {
    v29 = v6;
    v30 = v10;
    *(_QWORD *)(v1 + OBJC_IVAR___MTDeviceCapacityMonitor_vfsSource) = v10;
    v11 = v10;
    v28 = v7;
    v23 = v11;
    swift_unknownObjectRelease();
    v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v36 = sub_1A93F17F4;
    v37 = v12;
    aBlock = MEMORY[0x1E0C809B0];
    v33 = 1107296256;
    v34 = sub_1A908A91C;
    v35 = &block_descriptor_81_2;
    v13 = _Block_copy(&aBlock);
    v22 = v3;
    v14 = v13;
    swift_retain();
    sub_1A93F7D88();
    v31 = MEMORY[0x1E0DEE9D8];
    v27 = sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    v25 = sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
    sub_1A93F8B5C();
    v24 = sub_1A9072534(0, (unint64_t *)&qword_1ED2AC930);
    sub_1A93F88F8();
    _Block_release(v14);
    v15 = *(void (**)(char *, uint64_t))(v22 + 8);
    v15(v5, v2);
    v16 = v29;
    v17 = *(void (**)(char *, uint64_t))(v28 + 8);
    v17(v9, v29);
    swift_release();
    swift_release();
    v18 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v36 = sub_1A93F17FC;
    v37 = v18;
    aBlock = MEMORY[0x1E0C809B0];
    v33 = 1107296256;
    v34 = sub_1A908A91C;
    v35 = &block_descriptor_85_0;
    v19 = _Block_copy(&aBlock);
    swift_retain();
    sub_1A93F7D88();
    v31 = MEMORY[0x1E0DEE9D8];
    sub_1A93F8B5C();
    v20 = v23;
    sub_1A93F8904();
    _Block_release(v19);
    v15(v5, v2);
    v17(v9, v16);
    swift_release();
    swift_release();
    dispatch_resume(v20);

    v10 = v30;
  }
  return v10 != 0;
}

void *sub_1A90CE3FC(uint64_t a1, int a2, uint64_t a3, int a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char *v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  NSObject *v34;
  char *v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  objc_class *v47;
  const void *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char *v55;
  uint64_t v56;
  id v57;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  objc_class *ObjectType;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t aBlock;
  uint64_t v82;
  uint64_t (*v83)(uint64_t);
  void *v84;
  void (*v85)();
  uint64_t v86;
  objc_super v87;

  LODWORD(v70) = a4;
  v78 = a1;
  v79 = a3;
  v77 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = sub_1A93F7D58();
  v75 = *(_QWORD *)(v5 - 8);
  v76 = v5;
  MEMORY[0x1E0C80A78](v5);
  v74 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1A93F7D40();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v62 = (uint64_t *)((char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = sub_1A93F7DE8();
  v61 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v60 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v65 = (char *)&v59 - v10;
  v71 = sub_1A93F885C();
  v11 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A93F8808();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v14);
  v16 = sub_1A93F7DB8();
  v72 = *(_QWORD *)(v16 - 8);
  v73 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = OBJC_IVAR___MTDeviceCapacityMonitor_diskAccessQueue;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v19 = v4;
  sub_1A93F7DA0();
  aBlock = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v15, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF8D0], v71);
  *(_QWORD *)(v67 + v68) = sub_1A93F888C();
  v20 = OBJC_IVAR___MTDeviceCapacityMonitor__capacityChangeObservers;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A6C08);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A5B60);
  v22 = swift_allocObject();
  *(_DWORD *)(v22 + 24) = 0;
  *(_QWORD *)(v22 + 16) = v21;
  *(_QWORD *)&v19[v20] = v22;
  *(_QWORD *)&v19[OBJC_IVAR___MTDeviceCapacityMonitor_vfsSource] = 0;
  *(_QWORD *)&v19[OBJC_IVAR___MTDeviceCapacityMonitor_activeObserver] = 0;
  v23 = OBJC_IVAR___MTDeviceCapacityMonitor__activeNotificationName;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BC8);
  v24 = swift_allocObject();
  *(_DWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)&v19[v23] = v24;
  v25 = &v19[OBJC_IVAR___MTDeviceCapacityMonitor_capacityThreshold];
  *(_QWORD *)v25 = v78;
  v25[8] = v77 & 1;
  v26 = &v19[OBJC_IVAR___MTDeviceCapacityMonitor_url];
  v27 = sub_1A93F726C();
  v71 = *(_QWORD *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v26, v79, v27);
  v28 = (uint64_t *)&v19[OBJC_IVAR___MTDeviceCapacityMonitor____capacityLevel];
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A5B70);
  v29 = swift_allocObject();
  *(_DWORD *)(v29 + 24) = 0;
  *(_QWORD *)(v29 + 16) = 0;
  *v28 = v29;

  v87.receiver = v19;
  v87.super_class = ObjectType;
  v30 = (char *)objc_msgSendSuper2(&v87, sel_init);
  v31 = v30;
  v32 = MEMORY[0x1E0C809B0];
  v33 = &unk_1A9405000;
  if ((v70 & 1) != 0)
  {
    v34 = *(NSObject **)&v30[OBJC_IVAR___MTDeviceCapacityMonitor_diskAccessQueue];
    v35 = v30;
    dispatch_suspend(v34);
    ObjectType = (objc_class *)sub_1A93F8868();
    v36 = v60;
    sub_1A93F7DDC();
    v37 = v62;
    *v62 = 1;
    v38 = v63;
    v39 = v64;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v63 + 104))(v37, *MEMORY[0x1E0DEF4A0], v64);
    v40 = v65;
    MEMORY[0x1AF411B3C](v36, v37);
    (*(void (**)(_QWORD *, uint64_t))(v38 + 8))(v37, v39);
    v41 = *(void (**)(char *, uint64_t))(v61 + 8);
    v70 = v27;
    v42 = v66;
    v41(v36, v66);
    v43 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v85 = sub_1A93F17EC;
    v86 = v43;
    aBlock = v32;
    v82 = 1107296256;
    v83 = sub_1A908A91C;
    v84 = &block_descriptor_77_0;
    v44 = _Block_copy(&aBlock);
    swift_release();
    sub_1A93F7D88();
    aBlock = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
    v45 = v74;
    v46 = v76;
    v32 = MEMORY[0x1E0C809B0];
    sub_1A93F8B5C();
    v47 = ObjectType;
    MEMORY[0x1AF41252C](v40, v18, v45, v44);
    v48 = v44;
    v33 = (_QWORD *)&unk_1A9405000;
    _Block_release(v48);

    (*(void (**)(char *, uint64_t))(v75 + 8))(v45, v46);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v18, v73);
    v49 = v42;
    v27 = v70;
    v41(v40, v49);
  }
  else
  {
    v50 = v30;
  }
  v51 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v52 = swift_allocObject();
  v53 = v78;
  *(_QWORD *)(v52 + 16) = v51;
  *(_QWORD *)(v52 + 24) = v53;
  *(_BYTE *)(v52 + 32) = v77 & 1;
  v85 = sub_1A93F17E0;
  v86 = v52;
  aBlock = v32;
  v82 = v33[179];
  v83 = sub_1A908A91C;
  v84 = &block_descriptor_73_3;
  v54 = _Block_copy(&aBlock);
  swift_retain();
  sub_1A93F7D88();
  v80 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  v55 = v74;
  v56 = v76;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v18, v55, v54);
  _Block_release(v54);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v55, v56);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v18, v73);
  swift_release();
  swift_release();
  if (sub_1A90CE088())
  {
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v79, v27);

  }
  else
  {
    sub_1A93F87A8();
    if (qword_1ED2AC4B0 != -1)
      swift_once();
    swift_beginAccess();
    v57 = (id)qword_1ED2AC308;
    sub_1A93F75A8();

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v79, v27);
  }
  return v31;
}

uint64_t sub_1A90CECE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1A93F7D58();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v14 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = *(_QWORD *)(v1 + OBJC_IVAR___MTDeviceCapacityMonitor_diskAccessQueue);
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1A93F16D8;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_26_0;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v15 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v3, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v9, v5, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  return swift_release();
}

uint64_t sub_1A90CEEF4(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 96);
}

uint64_t type metadata accessor for PendingPlaybackStore()
{
  return objc_opt_self();
}

uint64_t PendingPlaybackStore.init()()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9118);
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1A93F79EC();
  return v0;
}

uint64_t PendingPlaybackStore.publisher.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t storeEnumTagSinglePayload for EpisodeDownloadReport(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EpisodeDownloadReport(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for MetricsWidgetContext()
{
  return &type metadata for MetricsWidgetContext;
}

unint64_t sub_1A90CF098()
{
  unint64_t result;

  result = qword_1ED2A2C80;
  if (!qword_1ED2A2C80)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeDownloadState, &type metadata for EpisodeDownloadState);
    atomic_store(result, (unint64_t *)&qword_1ED2A2C80);
  }
  return result;
}

unint64_t sub_1A90CF0DC()
{
  unint64_t result;

  result = qword_1ED2A2C78;
  if (!qword_1ED2A2C78)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeDownloadState, &type metadata for EpisodeDownloadState);
    atomic_store(result, (unint64_t *)&qword_1ED2A2C78);
  }
  return result;
}

unint64_t sub_1A90CF120(uint64_t a1)
{
  unint64_t result;

  result = sub_1A90CF0DC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A90CF144()
{
  unint64_t result;

  result = qword_1ED2A2C70;
  if (!qword_1ED2A2C70)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeBookmarkState, &type metadata for EpisodeBookmarkState);
    atomic_store(result, (unint64_t *)&qword_1ED2A2C70);
  }
  return result;
}

unint64_t sub_1A90CF188()
{
  unint64_t result;

  result = qword_1ED2A2C68;
  if (!qword_1ED2A2C68)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeBookmarkState, &type metadata for EpisodeBookmarkState);
    atomic_store(result, (unint64_t *)&qword_1ED2A2C68);
  }
  return result;
}

unint64_t sub_1A90CF1CC(uint64_t a1)
{
  unint64_t result;

  result = sub_1A90CF188();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of DownloadRecordKeeper.information(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

double sub_1A90CF1F8()
{
  _QWORD *v0;
  int v1;
  uint64_t *v2;
  _QWORD v4[4];
  uint64_t v5;

  (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD))(v0[7] + 8))(v4, v0[5], v0[2], v0[3]);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC800);
  v1 = swift_dynamicCast();
  if ((v1 & 1) == 0)
    v5 = 0;
  v2 = v0 + 4;
  if (v1)
    v2 = &v5;
  return *(double *)v2;
}

uint64_t sub_1A90CF27C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_1A90CF2E8(uint64_t *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = *(void **)(v4 + 40);
    v7 = *(_QWORD *)(v4 + 24);
    v6 = *(void **)(v4 + 32);
    v8 = *(_QWORD *)(v4 + 16);
    v9 = *(_QWORD *)v4;
    (*(void (**)(void *, void *, uint64_t))(v4 + 48))(v6, v5, v8);
    sub_1A90535E8((uint64_t)v6, v9, v10, v11);
    v12 = *(void (**)(void *, uint64_t))(v7 + 8);
    v12(v6, v8);
    v12(v5, v8);
  }
  else
  {
    v6 = *(void **)(v4 + 32);
    v5 = *(void **)(v4 + 40);
    v13 = *(_QWORD *)(v4 + 16);
    v14 = *(_QWORD *)(v4 + 24);
    sub_1A90535E8((uint64_t)v5, *(_QWORD *)v4, a3, a4);
    (*(void (**)(void *, uint64_t))(v14 + 8))(v5, v13);
  }
  free(v5);
  free(v6);
  free((void *)v4);
}

void (*PerformanceLoadable.value.modify(_QWORD *a1, uint64_t a2))(uint64_t *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;
  void (*v12)(void);

  v5 = malloc(0x38uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v8 = type metadata accessor for Loadable(0, *(_QWORD *)(a2 + 16), v6, v7);
  v5[2] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[3] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v5[4] = malloc(v10);
  v11 = malloc(v10);
  v12 = *(void (**)(void))(v9 + 16);
  v5[5] = v11;
  v5[6] = v12;
  v12();
  return sub_1A90CF2E8;
}

uint64_t sub_1A90CF444()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for HomogeneousValueBag(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HomogeneousValueBag);
}

ValueMetadata *type metadata accessor for EpisodesTransaction()
{
  return &type metadata for EpisodesTransaction;
}

unint64_t sub_1A90CF4A4()
{
  uint64_t v0;
  unint64_t result;

  v0 = MEMORY[0x1E0DEE9D8];
  result = sub_1A909E634(MEMORY[0x1E0DEE9D8]);
  qword_1ED2A2868 = v0;
  unk_1ED2A2870 = result;
  qword_1ED2A2878 = v0;
  return result;
}

void destroy for DownloadEnvironment(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);

}

uint64_t sub_1A90CF508(uint64_t a1)
{
  destroy for DownloadEnvironment(a1);
  return a1;
}

ValueMetadata *type metadata accessor for DownloadEnvironment()
{
  return &type metadata for DownloadEnvironment;
}

uint64_t static DownloadEnvironment.live.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1ED2A6BF8 != -1)
    swift_once();
  return sub_1A90708E8((uint64_t)&unk_1ED2A6B98, a1);
}

id DownloadEnvironment.dispatchQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 80);
}

uint64_t DownloadEnvironment.recordKeeper.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A905DC3C(v1, a1);
}

uint64_t DownloadEnvironment.fileStorage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A905DC3C(v1 + 40, a1);
}

uint64_t type metadata accessor for DownloadConsistency()
{
  return objc_opt_self();
}

uint64_t sub_1A90CF5FC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  char v5;
  char *v6;
  char *v7;
  char *v8;

  result = sub_1A93F73E0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v6 = &v5;
    swift_getTupleTypeLayout2();
    v7 = &v4;
    result = sub_1A93F726C();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v8 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A90CF760()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DownloadConsistency.Issue(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SyncKeysRepository()
{
  return objc_opt_self();
}

uint64_t sub_1A90CF7F4()
{
  uint64_t v0;
  objc_class *v1;
  id v2;
  id v3;
  uint64_t result;
  objc_super v5;
  _QWORD v6[5];

  v0 = type metadata accessor for SyncKeysUserDefaultsStore();
  swift_allocObject();
  v6[3] = v0;
  v6[4] = &off_1E54E38A8;
  v6[0] = sub_1A90CA0C0();
  v1 = (objc_class *)type metadata accessor for SyncKeysRepository();
  v2 = objc_allocWithZone(v1);
  sub_1A905DC3C((uint64_t)v6, (uint64_t)v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  v5.receiver = v2;
  v5.super_class = v1;
  swift_retain();
  v3 = objc_msgSendSuper2(&v5, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  result = swift_release();
  qword_1ED2A46D0 = (uint64_t)v3;
  return result;
}

id static SyncKeysRepository.shared.getter()
{
  if (qword_1ED2A46E0 != -1)
    swift_once();
  return (id)qword_1ED2A46D0;
}

void sub_1A90CF8F0()
{
  unint64_t v0;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  sub_1A93F8A90();
  if (v0 <= 0x3F)
  {
    sub_1A90C2138();
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

uint64_t sub_1A90CF9F8()
{
  uint64_t v0;

  return sub_1A907098C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(uint64_t **)(v0 + 40));
}

uint64_t sub_1A90CFA08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  _QWORD aBlock[6];

  ObjectType = swift_getObjectType();
  v2 = sub_1A93F7698();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = MEMORY[0x1E0DEE9E8];
  v26 = v6 + 16;
  sub_1A93F8040();
  v7 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v8 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  v10 = objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 1);
  objc_msgSend(v9, sel_setPredicate_, v10);

  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v12 = objc_msgSend(v11, sel_privateQueueContext);

  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a1;
  v14[4] = v9;
  v14[5] = v6;
  v14[6] = ObjectType;
  aBlock[4] = sub_1A90CF9F8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_64;
  v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v16 = v9;
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWaitWithSave_, v15);
  _Block_release(v15);

  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v17, v2);
  v18 = sub_1A93F7674();
  v19 = sub_1A93F87B4();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1A904E000, v18, v19, "Finished updating subscriptions.", v20, 2u);
    MEMORY[0x1AF41411C](v20, -1, -1);
    v21 = v16;
  }
  else
  {
    v21 = v18;
    v18 = v16;
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_beginAccess();
  v22 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v22;
}

uint64_t dispatch thunk of PurchaseController.subscriptionConfirmatonHandler.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t sub_1A90CFDA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x78);
  swift_beginAccess();
  sub_1A92C3C80(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1A90CFE0C()
{
  uint64_t v0;

  return sub_1A90CFE14(*(_QWORD **)(v0 + 16));
}

uint64_t sub_1A90CFE14(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  uint64_t v11;

  v2 = sub_1A93F7698();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = sub_1A93F7674();
  v8 = sub_1A93F87B4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1A904E000, v7, v8, "Resetting all subs to not subscribed state", v9, 2u);
    MEMORY[0x1AF41411C](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1A90CFA08(MEMORY[0x1E0DEE9D8]);
  result = swift_bridgeObjectRelease();
  *((_BYTE *)a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x90)) = 1;
  return result;
}

uint64_t sub_1A90CFF98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  _QWORD v14[2];
  _QWORD aBlock[6];

  v1 = sub_1A93F7D58();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *(_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68));
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_1A90CFE0C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_86;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  sub_1A93F7D88();
  v14[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v2, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v9, v5, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

void sub_1A90D0194()
{
  uint64_t v0;

  sub_1A90D01A4(*(_QWORD **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1A90D01A4(_QWORD *a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  void (*v28)(char *, uint64_t);
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  _QWORD *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  id v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t aBlock;
  uint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  uint64_t v58;

  v6 = sub_1A93F7698();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v48 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v48 - v14;
  v16 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  v17 = objc_msgSend(v16, sel_ams_activeiTunesAccount);

  if (v17)
  {
    if ((objc_msgSend((id)objc_opt_self(), sel_acknowledgementNeededForPrivacyIdentifier_, CFSTR("com.apple.onboarding.podcasts")) & 1) == 0)
    {
      if ((a2 & 1) != 0)
      {
        v52 = a1;
        v22 = swift_allocObject();
        v51 = v22;
        *(_QWORD *)(v22 + 16) = MEMORY[0x1E0DEE9D8];
        v23 = v22 + 16;
        if (qword_1ED2AC4B8 != -1)
          swift_once();
        v24 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A1E40);
        swift_beginAccess();
        v48 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
        v49 = v24;
        v48(v12, v24, v6);
        v25 = sub_1A93F7674();
        v26 = sub_1A93F87B4();
        if (os_log_type_enabled(v25, v26))
        {
          v27 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v27 = 0;
          _os_log_impl(&dword_1A904E000, v25, v26, "Fetching all channels for personalization.", v27, 2u);
          MEMORY[0x1AF41411C](v27, -1, -1);
        }

        v28 = *(void (**)(char *, uint64_t))(v7 + 8);
        v28(v12, v6);
        sub_1A93F8040();
        v29 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
        v30 = (void *)sub_1A93F8010();
        swift_bridgeObjectRelease();
        v31 = objc_msgSend(v29, sel_initWithEntityName_, v30);

        v32 = objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 1);
        objc_msgSend(v31, sel_setPredicate_, v32);

        v33 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
        v34 = objc_msgSend(v33, sel_privateQueueContext);

        v35 = (_QWORD *)swift_allocObject();
        v35[2] = v31;
        v35[3] = v23;
        v35[4] = a3;
        v36 = swift_allocObject();
        *(_QWORD *)(v36 + 16) = sub_1A918C8F4;
        *(_QWORD *)(v36 + 24) = v35;
        v57 = sub_1A9055748;
        v58 = v36;
        aBlock = MEMORY[0x1E0C809B0];
        v54 = 1107296256;
        v55 = sub_1A9098E00;
        v56 = &block_descriptor_22_0;
        v37 = _Block_copy(&aBlock);
        v50 = v31;
        swift_retain();
        swift_release();
        objc_msgSend(v34, sel_performBlockAndWait_, v37);

        _Block_release(v37);
        LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v31 & 1) != 0)
        {
          __break(1u);
        }
        else
        {
          v38 = v52;
          if (*(_QWORD *)(*(_QWORD *)v23 + 16))
          {
            v48(v9, v49, v6);
            v39 = sub_1A93F7674();
            v40 = sub_1A93F87B4();
            if (os_log_type_enabled(v39, v40))
            {
              v41 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v41 = 0;
              _os_log_impl(&dword_1A904E000, v39, v40, "Retrieving personalized polling interval.", v41, 2u);
              MEMORY[0x1AF41411C](v41, -1, -1);
            }

            v28(v9, v6);
            v42 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
            v43 = objc_msgSend(v42, sel_personalizedChannelPollingInterval);

            v44 = objc_msgSend(v43, sel_asyncValuePromiseOnQueue_, *(_QWORD *)((char *)v38 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v38) + 0x68)));
            v45 = swift_allocObject();
            swift_unknownObjectWeakInit();
            v46 = swift_allocObject();
            *(_QWORD *)(v46 + 16) = v51;
            *(_QWORD *)(v46 + 24) = v45;
            v57 = sub_1A918C93C;
            v58 = v46;
            aBlock = MEMORY[0x1E0C809B0];
            v54 = 1107296256;
            v55 = sub_1A92EA424;
            v56 = &block_descriptor_29;
            v47 = _Block_copy(&aBlock);
            swift_retain();
            swift_release();
            objc_msgSend(v44, sel_addFinishBlock_, v47);
            _Block_release(v47);
            swift_release();
            swift_release();

          }
          else
          {
            swift_release();
            swift_release();

          }
        }
      }
      else
      {
        sub_1A9188FB4();
      }
    }
  }
  else
  {
    if (qword_1ED2AC4B8 != -1)
      swift_once();
    v18 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A1E40);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v15, v18, v6);
    v19 = sub_1A93F7674();
    v20 = sub_1A93F87B4();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1A904E000, v19, v20, "Resetting subscription cache since user is not signed in.", v21, 2u);
      MEMORY[0x1AF41411C](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    sub_1A90CFF98();
  }
}

uint64_t sub_1A90D08B4(char a1)
{
  _QWORD *v1;
  uint64_t ObjectType;
  char v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  ObjectType = swift_getObjectType();
  v4 = a1 & 1;
  v5 = sub_1A93F7D58();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F7DB8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x68));
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v1;
  *(_BYTE *)(v14 + 24) = v4;
  *(_QWORD *)(v14 + 32) = ObjectType;
  aBlock[4] = sub_1A90D0194;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_12;
  v15 = _Block_copy(aBlock);
  v16 = v1;
  sub_1A93F7D88();
  v18[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v6, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t dispatch thunk of PurchaseController.downloadManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

id sub_1A90D0AE8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x98));
  swift_beginAccess();
  *v3 = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return sub_1A90D0B84();
}

uint64_t sub_1A90D0B60(uint64_t a1)
{
  sub_1A90D0AE8(a1);
  return swift_unknownObjectRelease();
}

id sub_1A90D0B84()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;

  v1 = *(void **)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0));
  v2 = (_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98));
  swift_beginAccess();
  return objc_msgSend(v1, sel_setDownloadManager_, *v2);
}

_QWORD *sub_1A90D0BEC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  objc_class *v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  _QWORD *v39;
  void *v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  objc_super v59;
  uint64_t v60;

  v53 = a1;
  v2 = sub_1A93F8988();
  v57 = *(_QWORD *)(v2 - 8);
  v58 = v2;
  MEMORY[0x1E0C80A78](v2);
  v56 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC790);
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  MEMORY[0x1E0C80A78](v4);
  v52 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F885C();
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F8808();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v9);
  v11 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v11);
  v12 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *(_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x60)) = MEMORY[0x1E0DEE9E8];
  v49 = *(_QWORD *)((*v12 & *v1) + 0x68);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v13 = v1;
  sub_1A93F7D88();
  v60 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v10, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v8, *MEMORY[0x1E0DEF8D0], v51);
  v14 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *(_QWORD *)((char *)v1 + v49) = sub_1A93F888C();
  v15 = v53;
  v16 = (uint64_t)v13 + *(_QWORD *)((*v14 & *v13) + 0x70);
  *(_OWORD *)v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(_QWORD *)(v16 + 32) = 0;
  v17 = (char *)v13 + *(_QWORD *)((*v14 & *v13) + 0x78);
  *(_OWORD *)v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  *((_QWORD *)v17 + 4) = 0;
  v18 = (char *)v13 + *(_QWORD *)((*v14 & *v13) + 0x80);
  v19 = MEMORY[0x1E0DEE9E8];
  v60 = MEMORY[0x1E0DEE9E8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
  v20 = v52;
  sub_1A93F7AC4();
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v18, v20, v55);
  *(_QWORD *)((char *)v13 + *(_QWORD *)((*v14 & *v13) + 0x88)) = v19;
  *((_BYTE *)v13 + *(_QWORD *)((*v14 & *v13) + 0x90)) = 0;
  *(_QWORD *)((char *)v13 + *(_QWORD *)((*v14 & *v13) + 0x98)) = 0;
  v21 = *(_QWORD *)((*v14 & *v13) + 0xA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BC0);
  v22 = swift_allocObject();
  *(_DWORD *)(v22 + 20) = 0;
  *(_BYTE *)(v22 + 16) = 0;
  *(_QWORD *)((char *)v13 + v21) = v22;
  *(_QWORD *)((char *)v13 + *(_QWORD *)((*v14 & *v13) + 0xB8)) = 0;
  *(_QWORD *)((char *)v13 + *(_QWORD *)((*v14 & *v13) + 0xC0)) = 0;
  *(_QWORD *)((char *)v13 + *(_QWORD *)((*v14 & *v13) + 0xD8)) = 0;
  swift_beginAccess();
  sub_1A90CDC28(v15, v16);
  swift_endAccess();
  *(_QWORD *)((char *)v13 + *(_QWORD *)((*v14 & *v13) + 0xD0)) = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  v23 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v24 = objc_msgSend(v23, sel_privateQueueContext);

  type metadata accessor for InterestStore();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v24;
  if (qword_1ED2A46E0 != -1)
    swift_once();
  v26 = (void *)qword_1ED2A46D0;
  type metadata accessor for InterestRepository();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v25;
  *(_QWORD *)(v27 + 24) = v26;
  v28 = objc_allocWithZone((Class)MTSubscriptionChangeHandler);
  v29 = v26;
  *(_QWORD *)((char *)v13 + *(_QWORD *)((*v14 & *v13) + 0xA0)) = objc_msgSend(v28, sel_init);
  v30 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v31 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  v32 = objc_allocWithZone((Class)type metadata accessor for MusicSubscriptionInfoSyncUtil());
  v33 = sub_1A90C5018(v30, v31);

  *(_QWORD *)((char *)v13 + *(_QWORD *)((*v14 & *v13) + 0xB0)) = v33;
  *(_QWORD *)((char *)v13 + *(_QWORD *)((*v14 & *v13) + 0xC8)) = v27;
  swift_retain();

  v34 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A2860);
  v59.receiver = v13;
  v59.super_class = v34;
  v35 = objc_msgSendSuper2(&v59, sel_init);
  v36 = (void *)objc_opt_self();
  v37 = v35;
  v38 = objc_msgSend(v36, sel_defaultCenter);
  v39 = v37;
  v40 = (void *)sub_1A93F8010();
  objc_msgSend(v38, sel_addObserver_selector_name_object_, v39, sel_didFinishUpdatingFeeds, v40, 0);

  v41 = objc_msgSend(objc_allocWithZone((Class)MTSubscriptionEntitlementsObserver), sel_initWithDelegate_onQueue_, v39, *(_QWORD *)((char *)v39 + *(_QWORD *)((*v14 & *v39) + 0x68)));
  v42 = *(_QWORD *)((*v14 & *v39) + 0xB8);
  v43 = *(void **)((char *)v39 + v42);
  *(_QWORD *)((char *)v39 + v42) = v41;

  v44 = objc_msgSend(v36, sel_defaultCenter);
  v45 = v56;
  sub_1A93F8994();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1A9066CA8((unint64_t *)&qword_1ED2A41D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  v46 = v58;
  sub_1A93F7D04();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v45, v46);
  swift_beginAccess();
  sub_1A93F7920();
  swift_endAccess();
  swift_release();
  swift_release();

  sub_1A905FD54(v15, &qword_1ED2A2EB8);
  return v39;
}

uint64_t dispatch thunk of PurchaseController.uiDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t sub_1A90D13E0(uint64_t a1)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x70);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  v4 = sub_1A93F8A90();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_1A90D1484()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for TranscriptRequest()
{
  return &type metadata for TranscriptRequest;
}

unint64_t sub_1A90D14CC()
{
  unint64_t result;

  result = qword_1ED2A5660;
  if (!qword_1ED2A5660)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for TranscriptRequest, &type metadata for TranscriptRequest);
    atomic_store(result, (unint64_t *)&qword_1ED2A5660);
  }
  return result;
}

uint64_t ScheduleFrequency.interval.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = sub_1A93F747C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F738C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v21 - v14;
  v16 = sub_1A93F7494();
  v22 = *(_QWORD *)(v16 - 8);
  v23 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F744C();
  if (a1)
  {
    v24 = a1;
    result = sub_1A93F921C();
    __break(1u);
  }
  else
  {
    sub_1A93F7380();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CB10F8], v2);
    sub_1A93F7464();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v23);
      return sub_1A90AC3A4((uint64_t)v8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      sub_1A93F7350();
      sub_1A93F7350();
      v20 = *(void (**)(char *, uint64_t))(v10 + 8);
      v20(v12, v9);
      v20(v15, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v18, v23);
    }
  }
  return result;
}

uint64_t assignWithTake for FeedUpdateRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t (*v16)(const void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v6 = sub_1A93F73E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16((const void *)(a1 + v13), 1, v10);
  v18 = v16(v15, 1, v10);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v12(v14, v15, v10);
LABEL_7:
  v20 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  v26 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  v27 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v28 = (_QWORD *)(a1 + v27);
  v29 = a2 + v27;
  v30 = *(_QWORD *)(a2 + v27);
  if (*(_QWORD *)(a1 + v27))
  {
    if (v30)
    {
      v31 = *(_QWORD *)(v29 + 8);
      *v28 = v30;
      v28[1] = v31;
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v30)
  {
    v32 = *(_QWORD *)(v29 + 8);
    *v28 = v30;
    v28[1] = v32;
    goto LABEL_14;
  }
  *(_OWORD *)v28 = *(_OWORD *)v29;
LABEL_14:
  v33 = a3[15];
  v34 = (_QWORD *)(a1 + v33);
  v35 = a2 + v33;
  v36 = *(_QWORD *)(a1 + v33);
  v37 = *(_QWORD *)(a2 + v33);
  if (v36)
  {
    if (v37)
    {
      v38 = *(_QWORD *)(v35 + 8);
      *v34 = v37;
      v34[1] = v38;
      swift_release();
      goto LABEL_21;
    }
    swift_release();
  }
  else if (v37)
  {
    v39 = *(_QWORD *)(v35 + 8);
    *v34 = v37;
    v34[1] = v39;
    goto LABEL_21;
  }
  *(_OWORD *)v34 = *(_OWORD *)v35;
LABEL_21:
  v40 = a3[16];
  v41 = (_QWORD *)(a1 + v40);
  v42 = a2 + v40;
  v43 = *(_QWORD *)(a1 + v40);
  v44 = *(_QWORD *)(a2 + v40);
  if (v43)
  {
    if (v44)
    {
      v45 = *(_QWORD *)(v42 + 8);
      *v41 = v44;
      v41[1] = v45;
      swift_release();
      goto LABEL_28;
    }
    swift_release();
  }
  else if (v44)
  {
    v46 = *(_QWORD *)(v42 + 8);
    *v41 = v44;
    v41[1] = v46;
    goto LABEL_28;
  }
  *(_OWORD *)v41 = *(_OWORD *)v42;
LABEL_28:
  v47 = a3[17];
  v48 = (_QWORD *)(a1 + v47);
  v49 = a2 + v47;
  v50 = *(_QWORD *)(a1 + v47);
  v51 = *(_QWORD *)(a2 + v47);
  if (!v50)
  {
    if (v51)
    {
      v53 = *(_QWORD *)(v49 + 8);
      *v48 = v51;
      v48[1] = v53;
      goto LABEL_35;
    }
LABEL_34:
    *(_OWORD *)v48 = *(_OWORD *)v49;
    goto LABEL_35;
  }
  if (!v51)
  {
    swift_release();
    goto LABEL_34;
  }
  v52 = *(_QWORD *)(v49 + 8);
  *v48 = v51;
  v48[1] = v52;
  swift_release();
LABEL_35:
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  swift_release();
  return a1;
}

void sub_1A90D1A7C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1A93F73E0();
  if (v0 <= 0x3F)
  {
    sub_1A93F726C();
    if (v1 <= 0x3F)
    {
      sub_1A90D80AC();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

unint64_t sub_1A90D1BCC()
{
  unint64_t result;

  result = qword_1ED2A24A8;
  if (!qword_1ED2A24A8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeStateModel, &type metadata for EpisodeStateModel);
    atomic_store(result, (unint64_t *)&qword_1ED2A24A8);
  }
  return result;
}

uint64_t sub_1A90D1C10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F7494();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for DayOfWeekSchedule()
{
  uint64_t result;

  result = qword_1ED2A6858;
  if (!qword_1ED2A6858)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for StoreFeedUpdater()
{
  return objc_opt_self();
}

uint64_t sub_1A90D1E98()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FeedManagerBagConfiguration();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for StoreFeedUpdater.Queue(uint64_t a1)
{
  return sub_1A9062BFC(a1, (uint64_t *)&unk_1ED2A6438);
}

uint64_t sub_1A90D1F68(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;
  id v4;

  v2 = objc_msgSend(*(id *)(v1 + 16), sel_arrayForKey_, a1);
  v3 = objc_msgSend(v2, sel_unsafeSnapshotSyncValue);

  if (v3)
  {
    v4 = v3;
    sub_1A93F8304();

  }
  return 0;
}

uint64_t sub_1A90D1FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(*(id *)(v2 + 16), sel_URLForKey_, a1, v6);
  v10 = objc_msgSend(v9, sel_unsafeSnapshotSyncValue);

  v11 = sub_1A93F726C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (!v10)
    return v13(a2, 1, 1, v11);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v13((uint64_t)v8, 1, 1, v11);
  sub_1A915AAE8();
  sub_1A93F8EBC();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
  {
    v14 = a2;
    v15 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2, v8, v11);
    v14 = a2;
    v15 = 0;
  }
  return v18(v14, v15, 1, v11);
}

void sub_1A90D216C()
{
  unint64_t v0;
  _QWORD v1[8];

  v1[4] = &unk_1A940BAF8;
  v1[5] = &unk_1A940BAF8;
  sub_1A90D8014();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[6] = v1;
    v1[7] = &unk_1A940BB28;
    swift_initEnumMetadataMultiPayload();
  }
}

unint64_t sub_1A90D21F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2A2238;
  if (!qword_1ED2A2238)
  {
    v1 = type metadata accessor for EpisodePlayState();
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodePlayState, v1);
    atomic_store(result, (unint64_t *)&qword_1ED2A2238);
  }
  return result;
}

uint64_t sub_1A90D2240(uint64_t a1)
{
  uint64_t result;

  result = sub_1A9066CA8(&qword_1ED2A2230, (uint64_t (*)(uint64_t))type metadata accessor for EpisodePlayState, (uint64_t)&protocol conformance descriptor for EpisodePlayState);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for CompoundSchedule()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for TranscriptModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_1A90D240C(void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (void *)sub_1A93F8010();
  objc_msgSend(a1, sel_doubleForKey_, v4);
  v6 = v5;

  a2[3] = MEMORY[0x1E0DEB070];
  *a2 = v6;
}

uint64_t sub_1A90D2478(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 32);
}

void sub_1A90D2480()
{
  unint64_t v0;

  sub_1A90D80AC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for TranscriptData.TimeBombedURLs()
{
  uint64_t result;

  result = qword_1ED2A5638;
  if (!qword_1ED2A5638)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for SectionContext()
{
  return &type metadata for SectionContext;
}

uint64_t type metadata accessor for RSSFeedUpdater()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for RSSFeedUpdater.Queue()
{
  return objc_opt_self();
}

void sub_1A90D2574()
{
  unint64_t v0;

  sub_1A90D74AC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for PlaybackIntent(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1ED2AD618);
}

void sub_1A90D261C()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for EyebrowBuilder.ListContext(319);
  if (v0 <= 0x3F)
  {
    sub_1A90C44E8(319, &qword_1ED2AD060, (void (*)(uint64_t))type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_1A90D26F0()
{
  unint64_t v0;

  sub_1A90C44E8(319, (unint64_t *)&qword_1ED2ACA20, (void (*)(uint64_t))type metadata accessor for EpisodePlayState);
  if (v0 <= 0x3F)
    swift_initEnumMetadataMultiPayload();
}

uint64_t sub_1A90D287C()
{
  uint64_t v0;

  return j__swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A90D2884()
{
  return swift_bridgeObjectRetain();
}

id _s18PodcastsFoundation14AnalyticsEventC25episodeDurationComparison0E6AdamId8durationACs5Int64V_SdtFZ_0(uint64_t a1, double a2)
{
  uint64_t inited;
  id v5;
  __CFString *v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD v13[6];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9730);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405950;
  strcpy((char *)(inited + 32), "episodeAdamId");
  *(_WORD *)(inited + 46) = -4864;
  v5 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v6 = CFSTR("com.apple.podcasts.dynamicAdAssessmentByEpisode");
  *(_QWORD *)(inited + 48) = objc_msgSend(v5, sel_initWithLongLong_, a1);
  *(_QWORD *)(inited + 56) = 0x4465646F73697065;
  *(_QWORD *)(inited + 64) = 0xEF6E6F6974617275;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, a2);
  v7 = sub_1A90C1B64(inited);
  v8 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  v13[4] = sub_1A9391F40;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1A90AC824;
  v13[3] = &block_descriptor_52_0;
  v10 = _Block_copy(v13);
  swift_release();
  v11 = objc_msgSend(v8, sel_initWithName_generator_, v6, v10);

  _Block_release(v10);
  return v11;
}

id _s18PodcastsFoundation14AnalyticsEventC25episodeDurationComparison012mapiProvidedF0010playerItemF0ACSd_SdtFZ_0(double a1, double a2)
{
  uint64_t inited;
  id v5;
  __CFString *v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD v13[6];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9730);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405950;
  *(_QWORD *)(inited + 32) = 0xD000000000000014;
  *(_QWORD *)(inited + 40) = 0x80000001A944F4B0;
  v5 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v6 = CFSTR("com.apple.podcasts.dynamicAdAssessmentByDurationComparison");
  *(_QWORD *)(inited + 48) = objc_msgSend(v5, sel_initWithDouble_, a1);
  *(_QWORD *)(inited + 56) = 0xD000000000000012;
  *(_QWORD *)(inited + 64) = 0x80000001A944F4D0;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, a2);
  v7 = sub_1A90C1B64(inited);
  v8 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  v13[4] = sub_1A9391F40;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1A90AC824;
  v13[3] = &block_descriptor_45_3;
  v10 = _Block_copy(v13);
  swift_release();
  v11 = objc_msgSend(v8, sel_initWithName_generator_, v6, v10);

  _Block_release(v10);
  return v11;
}

uint64_t sub_1A90D2C84()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A93F762C();
  if (v1 <= 0x3F)
  {
    result = sub_1A93F75FC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A90D2D10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F762C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayerArtwork.CodingKeys()
{
  return &type metadata for PlayerArtwork.CodingKeys;
}

unint64_t sub_1A90D2DA8()
{
  unint64_t result;

  result = qword_1ED2A9D50;
  if (!qword_1ED2A9D50)
  {
    result = MEMORY[0x1AF414014](&unk_1A94228C0, &type metadata for PlayerArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A9D50);
  }
  return result;
}

unint64_t sub_1A90D2DEC()
{
  unint64_t result;

  result = qword_1ED2A9D48;
  if (!qword_1ED2A9D48)
  {
    result = MEMORY[0x1AF414014](&unk_1A94228E8, &type metadata for PlayerArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A9D48);
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetLifetime()
{
  return &type metadata for AssetLifetime;
}

uint64_t sub_1A90D2E40()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A90D2E78(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t Synchronized.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_1A9098DB4(a1, a2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(a1);
}

ValueMetadata *type metadata accessor for MediaRequest.ContentType()
{
  return &type metadata for MediaRequest.ContentType;
}

uint64_t sub_1A90D2F0C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5F20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A90D2F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90D2F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of FileManaging.subpathsOfDirectory(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_1A90D2FF4()
{
  return sub_1A9066CA8(&qword_1ED2A5570, (uint64_t (*)(uint64_t))type metadata accessor for TTMLRequest, (uint64_t)&protocol conformance descriptor for TTMLRequest);
}

void sub_1A90D3020()
{
  unint64_t v0;

  sub_1A90D80AC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for SiriDonator()
{
  return objc_opt_self();
}

uint64_t sub_1A90D30D8()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A93F8040();
  qword_1ED2B8980 = result;
  *(_QWORD *)algn_1ED2B8988 = v1;
  return result;
}

uint64_t sub_1A90D3104(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  unsigned int v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  dispatch_group_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  NSObject *v43;
  id v44;
  void *v45;
  uint64_t v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  _BOOL4 v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  unsigned __int8 v60;
  id v61;
  void *v62;
  double v63;
  double v64;
  double v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  unsigned __int8 v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  id v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  _QWORD *v95;
  void *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  dispatch_group_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint8_t *v104;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  void *v117;
  dispatch_group_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _BYTE v126[40];
  _BYTE v127[24];
  ValueMetadata *v128;
  _UNKNOWN **v129;
  _QWORD v130[5];
  uint64_t aBlock;
  uint64_t v132;
  void *v133;
  void *v134;
  void *v135;
  _QWORD *v136;
  uint64_t v137;
  id v138;

  v112 = sub_1A93F7D58();
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v110 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_1A93F7DB8();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v107 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7E18();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (unint64_t)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject();
  v11 = *(void **)(a1 + OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_workQueue);
  v114 = v10;
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)v9 = v11;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v12 = a2;
  v113 = v11;
  LOBYTE(v11) = sub_1A93F7E3C();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) != 0)
  {
    v13 = objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod);
    v14 = MEMORY[0x1E0DEE9D8];
    if (!v13)
    {
      v21 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
      v22 = objc_msgSend(v21, sel_ams_activeiTunesAccount);

      v23 = *(void **)(a1 + OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_mediaRequestController);
      v130[3] = type metadata accessor for MediaRequestController();
      v130[4] = &protocol witness table for MediaRequestController;
      v130[0] = v23;
      v128 = &_s11KoaProviderVN;
      v129 = &off_1E54FE1C8;
      LOBYTE(aBlock) = 2;
      v137 = v14;
      v24 = v113;
      v138 = v113;
      sub_1A905DC3C((uint64_t)v127, (uint64_t)&v133);
      sub_1A905DC3C((uint64_t)v130, (uint64_t)v126);
      _s11DataFetcherCMa();
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 88) = 0;
      *(_QWORD *)(v25 + 96) = 0;
      *(_BYTE *)(v25 + 16) = 2;
      *(_QWORD *)(v25 + 24) = v22;
      sub_1A905DC3C((uint64_t)v126, v25 + 32);
      v26 = objc_allocWithZone(MEMORY[0x1E0D42BF8]);
      v27 = v24;
      v28 = v23;
      v29 = objc_msgSend(v26, sel_init);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v126);
      *(_QWORD *)(v25 + 72) = v29;
      *(_QWORD *)(v25 + 80) = v27;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v127);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v130);
      v132 = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A96E0);
      v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1A9405520;
      sub_1A9057F7C((uint64_t)&aBlock, v30 + 32);
      sub_1A90D4E18(v30);
      swift_bridgeObjectRelease();
      sub_1A9058034((uint64_t)&aBlock);
      return swift_release();
    }
    v15 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
    v16 = objc_msgSend(v15, sel_ams_iTunesAccounts);

    sub_1A9072534(0, &qword_1EEABF4A8);
    v9 = sub_1A93F8310();

    aBlock = v14;
    if (!(v9 >> 62))
    {
      v17 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v17)
        goto LABEL_5;
LABEL_19:
      swift_bridgeObjectRelease();
      v31 = MEMORY[0x1E0DEE9D8];
      if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
        goto LABEL_50;
      goto LABEL_20;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  v17 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (!v17)
    goto LABEL_19;
LABEL_5:
  if (v17 < 1)
  {
    __break(1u);
    goto LABEL_57;
  }
  for (i = 0; i != v17; ++i)
  {
    if ((v9 & 0xC000000000000001) != 0)
      v19 = (id)MEMORY[0x1AF4129DC](i, v9);
    else
      v19 = *(id *)(v9 + 8 * i + 32);
    v20 = v19;
    if (objc_msgSend(v19, sel_ams_isLocalAccount))
    {

    }
    else
    {
      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
    }
  }
  swift_bridgeObjectRelease();
  v31 = aBlock;
  if (aBlock < 0)
  {
LABEL_50:
    swift_retain();
    v32 = sub_1A93F8E5C();
    swift_release();
    if (!v32)
      goto LABEL_51;
    goto LABEL_22;
  }
LABEL_20:
  if ((v31 & 0x4000000000000000) != 0)
    goto LABEL_50;
  v32 = *(_QWORD *)(v31 + 16);
  if (v32)
  {
LABEL_22:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABF4B0);
    v33 = swift_allocObject();
    *(_DWORD *)(v33 + 24) = 0;
    v119 = v33;
    *(_QWORD *)(v33 + 16) = MEMORY[0x1E0DEE9D8];
    v118 = dispatch_group_create();
    v123 = v31 & 0xC000000000000001;
    v34 = 4;
    *(_QWORD *)&v35 = 141558275;
    v122 = v35;
    v116 = MEMORY[0x1E0DEE9B8] + 8;
    v115 = 0x80000001A9450480;
    v120 = v31;
    v121 = v32;
    while (1)
    {
      if (v123)
        v44 = (id)MEMORY[0x1AF4129DC](v34 - 4, v31);
      else
        v44 = *(id *)(v31 + 8 * v34);
      v45 = v44;
      if (__OFADD__(v34 - 4, 1))
      {
        __break(1u);
        goto LABEL_50;
      }
      if (qword_1ED2A8778 != -1)
        swift_once();
      v46 = sub_1A93F7698();
      __swift_project_value_buffer(v46, (uint64_t)qword_1ED2A8758);
      v47 = v45;
      v48 = sub_1A93F7674();
      v49 = sub_1A93F87B4();
      v50 = os_log_type_enabled(v48, v49);
      v125 = v34;
      v124 = v34 - 3;
      if (v50)
      {
        v51 = swift_slowAlloc();
        v52 = swift_slowAlloc();
        aBlock = v52;
        *(_DWORD *)v51 = v122;
        *(_QWORD *)(v51 + 4) = 1752392040;
        *(_WORD *)(v51 + 12) = 2081;
        v53 = objc_msgSend(v47, sel_description);
        v54 = sub_1A93F8040();
        v56 = v55;

        v57 = v54;
        v31 = v120;
        *(_QWORD *)(v51 + 14) = sub_1A906436C(v57, v56, &aBlock);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v48, v49, "Trying to create job for iTunes account: %{private,mask.hash}s", (uint8_t *)v51, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v52, -1, -1);
        MEMORY[0x1AF41411C](v51, -1, -1);

      }
      else
      {

      }
      v58 = objc_msgSend(v47, sel_ams_DSID);
      if (v58)
        break;
      v78 = v47;
      v79 = sub_1A93F7674();
      v80 = sub_1A93F879C();
      if (!os_log_type_enabled(v79, v80))
      {

LABEL_44:
        goto LABEL_25;
      }
      v81 = swift_slowAlloc();
      v82 = swift_slowAlloc();
      aBlock = v82;
      *(_DWORD *)v81 = v122;
      *(_QWORD *)(v81 + 4) = 1752392040;
      *(_WORD *)(v81 + 12) = 2081;
      v83 = objc_msgSend(v78, sel_description);
      v84 = sub_1A93F8040();
      v86 = v85;

      *(_QWORD *)(v81 + 14) = sub_1A906436C(v84, v86, &aBlock);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v79, v80, "Could not get DSID for iTunes account: %{private,mask.hash}s", (uint8_t *)v81, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v82, -1, -1);
      MEMORY[0x1AF41411C](v81, -1, -1);

LABEL_25:
      v34 = v125 + 1;
      if (v124 == v121)
      {
        swift_release();
        v95 = (_QWORD *)swift_allocObject();
        v95[2] = v119;
        v95[3] = sub_1A93A5670;
        v95[4] = v114;
        v135 = sub_1A93A56A4;
        v136 = v95;
        aBlock = MEMORY[0x1E0C809B0];
        v132 = 1107296256;
        v133 = sub_1A908A91C;
        v134 = &block_descriptor_30_3;
        v96 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        v97 = v107;
        sub_1A93F7D88();
        v130[0] = MEMORY[0x1E0DEE9D8];
        sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
        sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
        v98 = v110;
        v99 = v112;
        sub_1A93F8B5C();
        v100 = v118;
        sub_1A93F87FC();
        _Block_release(v96);
        swift_release();

        (*(void (**)(char *, uint64_t))(v111 + 8))(v98, v99);
        (*(void (**)(char *, uint64_t))(v108 + 8))(v97, v109);
        swift_release();
        return swift_release();
      }
    }
    v59 = v58;
    v60 = objc_msgSend(v47, sel_ams_isActiveForMediaType_, 0);
    if ((v60 & 1) != 0
      || (v61 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults),
          v62 = (void *)sub_1A93F8010(),
          objc_msgSend(v61, sel_doubleForKey_, v62),
          v64 = v63,
          v61,
          v62,
          v64 == 0.0)
      || (sub_1A93F72E4(), v65 - v64 > 86400.0))
    {
      v66 = v47;
      v67 = sub_1A93F7674();
      v68 = sub_1A93F87B4();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = swift_slowAlloc();
        v70 = swift_slowAlloc();
        aBlock = v70;
        *(_DWORD *)v69 = v122;
        *(_QWORD *)(v69 + 4) = 1752392040;
        *(_WORD *)(v69 + 12) = 2081;
        v71 = objc_msgSend(v66, sel_description);
        v72 = sub_1A93F8040();
        v117 = v59;
        v73 = v60;
        v74 = a1;
        v76 = v75;

        v77 = v72;
        v31 = v120;
        *(_QWORD *)(v69 + 14) = sub_1A906436C(v77, v76, &aBlock);

        a1 = v74;
        v60 = v73;
        v59 = v117;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v67, v68, "Proceeding to get siri shared user id's for account: %{private,mask.hash}s", (uint8_t *)v69, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v70, -1, -1);
        MEMORY[0x1AF41411C](v69, -1, -1);

      }
      else
      {

      }
      v36 = v118;
      dispatch_group_enter(v118);
      v37 = objc_msgSend((id)objc_opt_self(), sel_specificAccountWithDSID_, v59);
      v38 = objc_msgSend((id)objc_opt_self(), sel_defaultIdentityStore);
      v39 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v40 = swift_allocObject();
      *(_QWORD *)(v40 + 16) = v39;
      *(_QWORD *)(v40 + 24) = v66;
      *(_QWORD *)(v40 + 32) = v36;
      *(_BYTE *)(v40 + 40) = v60;
      *(_QWORD *)(v40 + 48) = v119;
      v135 = sub_1A93A5720;
      v136 = (_QWORD *)v40;
      aBlock = MEMORY[0x1E0C809B0];
      v132 = 1107296256;
      v133 = sub_1A93A52C0;
      v134 = &block_descriptor_37_1;
      v41 = _Block_copy(&aBlock);
      v42 = v66;
      v43 = v36;
      swift_retain();
      swift_release();
      ICSiriGetSharedUserIDs();
      _Block_release(v41);

      goto LABEL_25;
    }
    v78 = v47;
    v87 = sub_1A93F7674();
    v88 = sub_1A93F87B4();
    if (os_log_type_enabled(v87, v88))
    {
      v89 = swift_slowAlloc();
      v90 = swift_slowAlloc();
      aBlock = v90;
      *(_DWORD *)v89 = v122;
      *(_QWORD *)(v89 + 4) = 1752392040;
      *(_WORD *)(v89 + 12) = 2081;
      v91 = objc_msgSend(v78, sel_description);
      v92 = sub_1A93F8040();
      v94 = v93;

      *(_QWORD *)(v89 + 14) = sub_1A906436C(v92, v94, &aBlock);
      v31 = v120;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v87, v88, "Already sent secondary user data within the last 24 hours. No need to create job for secondary user iTunes account: %{private,mask.hash}s.", (uint8_t *)v89, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v90, -1, -1);
      MEMORY[0x1AF41411C](v89, -1, -1);

      goto LABEL_25;
    }

    goto LABEL_44;
  }
LABEL_51:
  swift_release();
  if (qword_1ED2A8778 != -1)
LABEL_57:
    swift_once();
  v101 = sub_1A93F7698();
  __swift_project_value_buffer(v101, (uint64_t)qword_1ED2A8758);
  v102 = sub_1A93F7674();
  v103 = sub_1A93F879C();
  if (os_log_type_enabled(v102, v103))
  {
    v104 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v104 = 0;
    _os_log_impl(&dword_1A904E000, v102, v103, "No iTunes accounts on Homepod device. Cannot create donation jobs.", v104, 2u);
    MEMORY[0x1AF41411C](v104, -1, -1);
  }

  sub_1A90D4E18(MEMORY[0x1E0DEE9D8]);
  return swift_release();
}

id sub_1A90D4080()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_backgroundTaskManager), sel_endBackgroundTask);
}

uint64_t sub_1A90D409C()
{
  uint64_t *v0;

  return sub_1A90D40A8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1A90D40A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  double v18;
  double v19;
  _BYTE v21[72];

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (_BYTE *)(a3 + 16);
    v5 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1A9057F7C(v5, (uint64_t)v21);
      v6 = v21[0];
      sub_1A9058034((uint64_t)v21);
      if (v6 == 1)
        break;
      v5 += 72;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_beginAccess();
    if ((*v4 & 1) != 0)
    {
      if (qword_1ED2A8778 != -1)
        swift_once();
      v12 = sub_1A93F7698();
      __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A8758);
      v8 = sub_1A93F7674();
      v9 = sub_1A93F879C();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v10 = 0;
        v11 = "Encountered more than one failure for secondary user donation. Cannot set user defaults key for last date "
              "all secondary user data was donated.";
        goto LABEL_10;
      }
    }
    else
    {
      if (qword_1ED2A8778 != -1)
        swift_once();
      v13 = sub_1A93F7698();
      __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A8758);
      v14 = sub_1A93F7674();
      v15 = sub_1A93F87B4();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_1A904E000, v14, v15, "There were secondary user donations that were made, and all of them were successful. Setting the current date in User Defaults.", v16, 2u);
        MEMORY[0x1AF41411C](v16, -1, -1);
      }

      v17 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
      sub_1A93F72E4();
      v19 = v18;
      v8 = sub_1A93F8010();
      objc_msgSend(v17, sel_setDouble_forKey_, v8, v19);

    }
  }
  else
  {
LABEL_6:
    if (qword_1ED2A8778 != -1)
      swift_once();
    v7 = sub_1A93F7698();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED2A8758);
    v8 = sub_1A93F7674();
    v9 = sub_1A93F87B4();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      v11 = "No secondary user donations were made.";
LABEL_10:
      _os_log_impl(&dword_1A904E000, v8, v9, v11, v10, 2u);
      MEMORY[0x1AF41411C](v10, -1, -1);
    }
  }

  return sub_1A9077424();
}

void sub_1A90D439C(void *a1)
{
  uint64_t v1;

  sub_1A90D43A8(a1, (_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 88), *(NSObject **)(v1 + 96));
}

void sub_1A90D43A8(void *a1, _BYTE *a2, uint64_t a3, NSObject *a4)
{
  BOOL *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  BOOL v42;
  BOOL *v43;
  _BYTE *v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  if (a1)
  {
    v7 = (BOOL *)(a3 + 16);
    v47 = (uint64_t)a1;
    v8 = a1;
    v9 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    if ((swift_dynamicCast() & 1) != 0 && (v49 & 1) == 0)
    {
      if (qword_1ED2A8778 != -1)
        swift_once();
      v33 = sub_1A93F7698();
      __swift_project_value_buffer(v33, (uint64_t)qword_1ED2A8758);
      sub_1A9057F7C((uint64_t)a2, (uint64_t)&v48);
      v13 = sub_1A93F7674();
      v34 = sub_1A93F879C();
      if (os_log_type_enabled(v13, v34))
      {
        v43 = v7;
        v44 = a2;
        v45 = a4;
        v15 = swift_slowAlloc();
        v35 = swift_slowAlloc();
        *(_DWORD *)v15 = 141558531;
        v47 = v35;
        sub_1A93F8AA8();
        *(_WORD *)(v15 + 12) = 2081;
        v36 = *(void **)(v49 + 24);
        if (v36)
        {
          v37 = objc_msgSend(v36, sel_description);
          v38 = sub_1A93F8040();
          v40 = v39;

        }
        else
        {
          v38 = 0x6974636120726F66;
          v40 = 0xEF72657375206576;
        }
        sub_1A906436C(v38, v40, &v47);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        sub_1A9058034((uint64_t)&v48);
        *(_WORD *)(v15 + 22) = 2048;
        sub_1A93F8AA8();
        _os_log_impl(&dword_1A904E000, v13, v34, "Donation Job completed for account: %{private,mask.hash}s with errors for %ld userId's.", (uint8_t *)v15, 0x20u);
        swift_arrayDestroy();
        v41 = v35;
        goto LABEL_30;
      }

      sub_1A9058034((uint64_t)&v48);
    }
    else
    {
      if (qword_1ED2A8778 != -1)
        swift_once();
      v10 = sub_1A93F7698();
      __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A8758);
      sub_1A9057F7C((uint64_t)a2, (uint64_t)&v48);
      v11 = a1;
      v12 = a1;
      v13 = sub_1A93F7674();
      v14 = sub_1A93F879C();
      if (os_log_type_enabled(v13, v14))
      {
        v43 = v7;
        v44 = a2;
        v45 = a4;
        v15 = swift_slowAlloc();
        v16 = (_QWORD *)swift_slowAlloc();
        v17 = swift_slowAlloc();
        *(_DWORD *)v15 = 141558531;
        v47 = v17;
        sub_1A93F8AA8();
        *(_WORD *)(v15 + 12) = 2081;
        v18 = *(void **)(v49 + 24);
        if (v18)
        {
          v19 = objc_msgSend(v18, sel_description);
          v20 = sub_1A93F8040();
          v22 = v21;

        }
        else
        {
          v20 = 0x6974636120726F66;
          v22 = 0xEF72657375206576;
        }
        sub_1A906436C(v20, v22, &v47);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        sub_1A9058034((uint64_t)&v48);
        *(_WORD *)(v15 + 22) = 2112;
        v46 = sub_1A93F711C();
        sub_1A93F8AA8();
        *v16 = v46;

        _os_log_impl(&dword_1A904E000, v13, v14, "Donation Job Failed for account: %{private,mask.hash}s with error: %@", (uint8_t *)v15, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v16, -1, -1);
        swift_arrayDestroy();
        v41 = v17;
LABEL_30:
        MEMORY[0x1AF41411C](v41, -1, -1);
        MEMORY[0x1AF41411C](v15, -1, -1);

        a2 = v44;
        a4 = v45;
        v7 = v43;
        goto LABEL_31;
      }

      sub_1A9058034((uint64_t)&v48);
    }

LABEL_31:
    v42 = *a2 == 1;
    swift_beginAccess();
    *v7 = v42;
    goto LABEL_32;
  }
  if (qword_1ED2A8778 != -1)
    swift_once();
  v23 = sub_1A93F7698();
  __swift_project_value_buffer(v23, (uint64_t)qword_1ED2A8758);
  sub_1A9057F7C((uint64_t)a2, (uint64_t)&v48);
  v24 = sub_1A93F7674();
  v25 = sub_1A93F87B4();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    *(_DWORD *)v26 = 141558275;
    v47 = v27;
    sub_1A93F8AA8();
    *(_WORD *)(v26 + 12) = 2081;
    v28 = *(void **)(v49 + 24);
    if (v28)
    {
      v29 = objc_msgSend(v28, sel_description);
      v30 = sub_1A93F8040();
      v32 = v31;

    }
    else
    {
      v30 = 0x6974636120726F66;
      v32 = 0xEF72657375206576;
    }
    sub_1A906436C(v30, v32, &v47);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9058034((uint64_t)&v48);
    _os_log_impl(&dword_1A904E000, v24, v25, "Donation Job completed for account: %{private,mask.hash}s with no errors.", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v27, -1, -1);
    MEMORY[0x1AF41411C](v26, -1, -1);
  }
  else
  {
    sub_1A9058034((uint64_t)&v48);
  }

LABEL_32:
  dispatch_group_leave(a4);
}

uint64_t sub_1A90D4AA4(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  NSObject *v26;
  _QWORD *v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  char *v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 aBlock;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  v3 = sub_1A93F7D58();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v36 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7E18();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (_QWORD *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = v1;
  v14 = *(void **)&v1[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_workQueue];
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v10 + 104))(v13, *MEMORY[0x1E0DEF740], v9, v11);
  v15 = v14;
  v16 = sub_1A93F7E3C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v13, v9);
  if ((v16 & 1) != 0)
  {
    v33[1] = v15;
    v34 = v4;
    v35 = v3;
    v18 = swift_allocObject();
    *(_BYTE *)(v18 + 16) = 0;
    v19 = dispatch_group_create();
    v20 = *(_QWORD *)(a1 + 16);
    if (v20)
    {
      v21 = a1 + 32;
      swift_bridgeObjectRetain();
      do
      {
        dispatch_group_enter(v19);
        sub_1A9057F7C(v21, (uint64_t)&aBlock);
        v22 = swift_allocObject();
        v23 = v44;
        *(_OWORD *)(v22 + 48) = v43;
        *(_OWORD *)(v22 + 64) = v23;
        v24 = v45;
        v25 = v42;
        *(_OWORD *)(v22 + 16) = aBlock;
        *(_OWORD *)(v22 + 32) = v25;
        *(_QWORD *)(v22 + 80) = v24;
        *(_QWORD *)(v22 + 88) = v18;
        *(_QWORD *)(v22 + 96) = v19;
        swift_retain();
        v26 = v19;
        sub_1A9057660((void (*)(void))sub_1A90D439C, v22);
        swift_release();
        v21 += 72;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
    }
    v27 = (_QWORD *)swift_allocObject();
    v28 = v37;
    v27[2] = a1;
    v27[3] = v28;
    v27[4] = v18;
    *(_QWORD *)&v43 = sub_1A90D409C;
    *((_QWORD *)&v43 + 1) = v27;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v42 = sub_1A908A91C;
    *((_QWORD *)&v42 + 1) = &block_descriptor_21_4;
    v29 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    v30 = v28;
    sub_1A93F7D88();
    v40 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
    v31 = v35;
    v32 = v36;
    sub_1A93F8B5C();
    sub_1A93F87FC();
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v31);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v39);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A90D4E18(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  if (*(_QWORD *)(a1 + 16))
  {
    if (qword_1ED2A8778 != -1)
      swift_once();
    v2 = sub_1A93F7698();
    __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A8758);
    swift_bridgeObjectRetain();
    v3 = sub_1A93F7674();
    v4 = sub_1A93F87B4();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v5 = 134217984;
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v3, v4, "Created %ld donation jobs.", v5, 0xCu);
      MEMORY[0x1AF41411C](v5, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    return sub_1A90D4AA4(a1);
  }
  else
  {
    if (qword_1ED2A8778 != -1)
      swift_once();
    v6 = sub_1A93F7698();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A8758);
    v7 = sub_1A93F7674();
    v8 = sub_1A93F87B4();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1A904E000, v7, v8, "No donation jobs created.", v9, 2u);
      MEMORY[0x1AF41411C](v9, -1, -1);
    }

    return sub_1A9077424();
  }
}

void sub_1A90D5010()
{
  uint64_t v0;

  sub_1A90D5018(*(char **)(v0 + 16));
}

void sub_1A90D5018(char *a1)
{
  void *v2;
  void *v3;
  char *v4;

  v2 = *(void **)&a1[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_backgroundTaskManager];
  v3 = (void *)sub_1A93F8010();
  objc_msgSend(v2, sel_beginBackgroundTask_, v3);

  v4 = a1;
  sub_1A90D3104((uint64_t)v4, v4);

}

uint64_t sub_1A90D50D0(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A90D50D8(a1, a2, *(void (**)(__int128 *, uint64_t))(v2 + 16));
}

uint64_t sub_1A90D50D8(void *a1, uint64_t a2, void (*a3)(__int128 *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  __int128 v10;
  __int128 v11;
  _UNKNOWN **v12;

  if (a1 && (objc_opt_self(), (v6 = swift_dynamicCastObjCClass()) != 0))
  {
    v7 = v6;
    *((_QWORD *)&v11 + 1) = sub_1A9072534(0, &qword_1ED2A9420);
    v12 = &off_1E54FE168;
    *(_QWORD *)&v10 = v7;
    v8 = a1;
  }
  else
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
  }
  a3(&v10, a2);
  return sub_1A90D2F0C((uint64_t)&v10);
}

id sub_1A90D518C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (!a2)
    goto LABEL_8;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    sub_1A9072534(0, &qword_1ED2A9608);
    v3 = qword_1ED2A5F18;
    swift_bridgeObjectRetain();
    if (v3 != -1)
      swift_once();
    swift_bridgeObjectRetain();
    return sub_1A93D20B8(16);
  }
  else
  {
LABEL_8:
    sub_1A9072534(0, &qword_1ED2A9608);
    if (qword_1ED2A5F18 != -1)
      swift_once();
    swift_bridgeObjectRetain();
    return sub_1A90C0628(16);
  }
}

ValueMetadata *_s11DonationJobVMa()
{
  return &_s11DonationJobVN;
}

void sub_1A90D5448(void *a1)
{
  uint64_t v1;

  sub_1A90D5458(a1, v1 + 16, *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(void (**)(_QWORD))(v1 + 104));
}

void sub_1A90D5458(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD);
  void (*v38)(_QWORD);
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[8];
  uint64_t v42;

  if (a1)
  {
    v8 = a1;
    if (qword_1ED2A8778 != -1)
      swift_once();
    v9 = sub_1A93F7698();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A8758);
    sub_1A9057F7C(a2, (uint64_t)v41);
    swift_bridgeObjectRetain();
    v10 = a1;
    swift_bridgeObjectRetain();
    v11 = a1;
    v12 = sub_1A93F7674();
    v13 = sub_1A93F879C();
    if (os_log_type_enabled(v12, v13))
    {
      v37 = a5;
      v14 = swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v40 = v36;
      *(_DWORD *)v14 = 141559043;
      sub_1A93F8AA8();
      *(_WORD *)(v14 + 12) = 2081;
      v16 = *(void **)(v42 + 24);
      if (v16)
      {
        v17 = objc_msgSend(v16, sel_description);
        v18 = sub_1A93F8040();
        v20 = v19;

      }
      else
      {
        v18 = 0x6974636120726F66;
        v20 = 0xEF72657375206576;
      }
      sub_1A906436C(v18, v20, &v40);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A9058034((uint64_t)v41);
      *(_WORD *)(v14 + 22) = 2160;
      sub_1A93F8AA8();
      *(_WORD *)(v14 + 32) = 2081;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
      v31 = sub_1A93F8094();
      sub_1A906436C(v31, v32, &v40);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 42) = 2112;
      v39 = sub_1A93F711C();
      sub_1A93F8AA8();
      *v15 = v39;

      _os_log_impl(&dword_1A904E000, v12, v13, "Account %{private,mask.hash}s: Could not stream donation for userId %{private,mask.hash}s with error: %@", (uint8_t *)v14, 0x34u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v15, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v36, -1, -1);
      MEMORY[0x1AF41411C](v14, -1, -1);

      a5 = v37;
    }
    else
    {
      sub_1A9058034((uint64_t)v41);
      swift_bridgeObjectRelease_n();

    }
    v33 = a1;
    a5(a1);

  }
  else
  {
    if (qword_1ED2A8778 != -1)
      swift_once();
    v21 = sub_1A93F7698();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED2A8758);
    sub_1A9057F7C(a2, (uint64_t)v41);
    swift_bridgeObjectRetain_n();
    v22 = sub_1A93F7674();
    v23 = sub_1A93F87B4();
    if (os_log_type_enabled(v22, v23))
    {
      v38 = a5;
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v40 = v25;
      *(_DWORD *)v24 = 141558787;
      sub_1A93F8AA8();
      *(_WORD *)(v24 + 12) = 2081;
      v26 = *(void **)(v42 + 24);
      if (v26)
      {
        v27 = objc_msgSend(v26, sel_description);
        v28 = sub_1A93F8040();
        v30 = v29;

      }
      else
      {
        v28 = 0x6974636120726F66;
        v30 = 0xEF72657375206576;
      }
      sub_1A906436C(v28, v30, &v40);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A9058034((uint64_t)v41);
      *(_WORD *)(v24 + 22) = 2160;
      sub_1A93F8AA8();
      *(_WORD *)(v24 + 32) = 2081;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
      v34 = sub_1A93F8094();
      sub_1A906436C(v34, v35, &v40);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v22, v23, "Account %{private,mask.hash}s: Finished streaming donation for userId %{private,mask.hash}s.", (uint8_t *)v24, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v25, -1, -1);
      MEMORY[0x1AF41411C](v24, -1, -1);

      a5 = v38;
    }
    else
    {
      sub_1A9058034((uint64_t)v41);

      swift_bridgeObjectRelease_n();
    }
    a5(0);
  }
}

uint64_t sub_1A90D5AAC(void (*a1)(_QWORD, _QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  void (*v14)(uint64_t, unint64_t);
  unint64_t *v15;
  __int128 v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD, _QWORD);
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39[8];
  uint64_t v40;
  _BYTE v41[64];
  void *v42;

  v3 = v2;
  v32 = a1;
  v5 = sub_1A93F7E18();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A9057F7C(v3, (uint64_t)v41);
  v9 = v42;
  *v8 = v42;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v10 = v9;
  v11 = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  result = sub_1A9058034((uint64_t)v41);
  if ((v11 & 1) != 0)
  {
    if (*(_BYTE *)v3 == 2)
    {
      return ((uint64_t (*)(_QWORD, _QWORD))v32)(0, 0);
    }
    else
    {
      result = *(_QWORD *)(v3 + 56);
      v13 = *(_QWORD *)(result + 16);
      v14 = v32;
      if (v13)
      {
        v31 = swift_bridgeObjectRetain();
        v15 = (unint64_t *)(v31 + 40);
        *(_QWORD *)&v16 = 141558531;
        v34 = v16;
        v33 = MEMORY[0x1E0DEE9B8] + 8;
        v36 = a2;
        v35 = v3;
        do
        {
          v18 = *v15;
          v37 = *(v15 - 1);
          v19 = qword_1ED2A8778;
          swift_bridgeObjectRetain();
          if (v19 != -1)
            swift_once();
          v20 = sub_1A93F7698();
          __swift_project_value_buffer(v20, (uint64_t)qword_1ED2A8758);
          sub_1A9057F7C(v3, (uint64_t)v39);
          swift_bridgeObjectRetain_n();
          v21 = sub_1A93F7674();
          v22 = sub_1A93F87B4();
          if (os_log_type_enabled(v21, v22))
          {
            v23 = swift_slowAlloc();
            v24 = swift_slowAlloc();
            v38 = v24;
            *(_DWORD *)v23 = v34;
            *(_QWORD *)(v23 + 4) = 1752392040;
            *(_WORD *)(v23 + 12) = 2081;
            v25 = *(void **)(v40 + 24);
            if (v25)
            {
              v26 = objc_msgSend(v25, sel_description);
              v27 = sub_1A93F8040();
              v29 = v28;

              v14 = v32;
            }
            else
            {
              v29 = 0xEF72657375206576;
              v27 = 0x6974636120726F66;
            }
            *(_QWORD *)(v23 + 14) = sub_1A906436C(v27, v29, &v38);
            swift_bridgeObjectRelease();
            sub_1A9058034((uint64_t)v39);
            *(_WORD *)(v23 + 22) = 2080;
            swift_bridgeObjectRetain();
            v17 = v37;
            *(_QWORD *)(v23 + 24) = sub_1A906436C(v37, v18, &v38);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1A904E000, v21, v22, "Account %{private,mask.hash}s: Starting Donation for siri shared user id: %s", (uint8_t *)v23, 0x20u);
            swift_arrayDestroy();
            MEMORY[0x1AF41411C](v24, -1, -1);
            MEMORY[0x1AF41411C](v23, -1, -1);

            v3 = v35;
          }
          else
          {
            sub_1A9058034((uint64_t)v39);

            swift_bridgeObjectRelease_n();
            v17 = v37;
          }
          v15 += 2;
          v14(v17, v18);
          swift_bridgeObjectRelease();
          --v13;
        }
        while (v13);
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A90D5E5C()
{
  uint64_t v0;

  sub_1A90D5E6C(v0 + 16, *(_QWORD *)(v0 + 88), *(void (**)(void))(v0 + 96));
}

void sub_1A90D5E6C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void);
  uint64_t v22;
  _BYTE v23[8];
  uint64_t v24;

  if (qword_1ED2A8778 != -1)
    swift_once();
  v6 = sub_1A93F7698();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A8758);
  sub_1A9057F7C(a1, (uint64_t)v23);
  v7 = sub_1A93F7674();
  v8 = sub_1A93F87B4();
  if (os_log_type_enabled(v7, v8))
  {
    v21 = a3;
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_DWORD *)v9 = 141558275;
    v22 = v10;
    sub_1A93F8AA8();
    *(_WORD *)(v9 + 12) = 2081;
    v11 = *(void **)(v24 + 24);
    if (v11)
    {
      v12 = objc_msgSend(v11, sel_description);
      v13 = sub_1A93F8040();
      v15 = v14;

    }
    else
    {
      v15 = 0xEF72657375206576;
      v13 = 0x6974636120726F66;
    }
    sub_1A906436C(v13, v15, &v22);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9058034((uint64_t)v23);
    _os_log_impl(&dword_1A904E000, v7, v8, "Account %{private,mask.hash}s: Finished siri donation for all ids.", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v10, -1, -1);
    MEMORY[0x1AF41411C](v9, -1, -1);

    a3 = v21;
  }
  else
  {
    sub_1A9058034((uint64_t)v23);

  }
  v16 = (uint64_t *)(a2 + 16);
  if (*(_BYTE *)a1 == 2)
  {
    swift_beginAccess();
    if (*v16 < 1)
      goto LABEL_17;
    goto LABEL_13;
  }
  swift_beginAccess();
  v17 = *v16;
  if (v17 == *(_QWORD *)(*(_QWORD *)(a1 + 56) + 16))
  {
LABEL_13:
    sub_1A91E44F8();
    v18 = (void *)swift_allocError();
    *(_QWORD *)v19 = 0;
    *(_BYTE *)(v19 + 8) = 1;
LABEL_16:
    a3();

    return;
  }
  if (v17 >= 1)
  {
    sub_1A91E44F8();
    v18 = (void *)swift_allocError();
    *(_QWORD *)v20 = v17;
    *(_BYTE *)(v20 + 8) = 0;
    goto LABEL_16;
  }
LABEL_17:
  ((void (*)(_QWORD))a3)(0);
}

void sub_1A90D6164(void *a1)
{
  uint64_t v1;

  sub_1A90D6170(a1, v1 + 16, *(_QWORD *)(v1 + 88), *(dispatch_group_t *)(v1 + 96));
}

void sub_1A90D6170(void *a1, uint64_t a2, uint64_t a3, dispatch_group_t group)
{
  id v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[8];
  uint64_t v27;

  if (!a1)
    goto LABEL_12;
  v8 = a1;
  if (qword_1ED2A8778 != -1)
    swift_once();
  v9 = (_QWORD *)(a3 + 16);
  v10 = sub_1A93F7698();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A8758);
  sub_1A9057F7C(a2, (uint64_t)v26);
  v11 = a1;
  v12 = a1;
  v13 = sub_1A93F7674();
  v14 = sub_1A93F879C();
  if (os_log_type_enabled(v13, v14))
  {
    v23 = group;
    v15 = swift_slowAlloc();
    v16 = (_QWORD *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    *(_DWORD *)v15 = 141558531;
    v25 = v22;
    sub_1A93F8AA8();
    *(_WORD *)(v15 + 12) = 2081;
    v17 = *(void **)(v27 + 24);
    if (v17)
    {
      v18 = objc_msgSend(v17, sel_description);
      v19 = sub_1A93F8040();
      v21 = v20;

    }
    else
    {
      v21 = 0xEF72657375206576;
      v19 = 0x6974636120726F66;
    }
    sub_1A906436C(v19, v21, &v25);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9058034((uint64_t)v26);
    *(_WORD *)(v15 + 22) = 2112;
    v24 = sub_1A93F711C();
    sub_1A93F8AA8();
    *v16 = v24;

    _os_log_impl(&dword_1A904E000, v13, v14, "Account %{private,mask.hash}s: Could not fetch and donate podcasts and stations with error: %@", (uint8_t *)v15, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v16, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v22, -1, -1);
    MEMORY[0x1AF41411C](v15, -1, -1);

    group = v23;
  }
  else
  {

    sub_1A9058034((uint64_t)v26);
  }
  swift_beginAccess();
  if (!__OFADD__(*v9, 1))
  {
    ++*v9;
LABEL_12:
    dispatch_group_leave(group);
    return;
  }
  __break(1u);
}

void sub_1A90D6488()
{
  uint64_t v0;

  sub_1A90D64A0(*(void **)(v0 + 16), (v0 + 24), *(_QWORD *)(v0 + 96), *(NSObject **)(v0 + 104), v0 + 112, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
}

void sub_1A90D64A0(void *a1, NSObject *a2, uint64_t a3, NSObject *a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unint64_t v8;
  _QWORD *v11;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  os_log_type_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  NSObject *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  NSObject *v42;
  NSObject *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50[5];

  v11 = (_QWORD *)(a3 + 16);
  if (a1)
  {
    v13 = a1;
    if (qword_1ED2A8778 != -1)
      swift_once();
    v14 = sub_1A93F7698();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A8758);
    sub_1A9057F7C((uint64_t)a2, (uint64_t)&v45);
    v15 = a1;
    v16 = a1;
    a2 = sub_1A93F7674();
    v17 = sub_1A93F879C();
    if (os_log_type_enabled(a2, v17))
    {
      v42 = a4;
      v7 = swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v50[0] = v8;
      *(_DWORD *)v7 = 141558531;
      v44 = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v7 + 12) = 2081;
      v19 = *(void **)(*((_QWORD *)&v45 + 1) + 24);
      if (v19)
      {
        v20 = objc_msgSend(v19, sel_description);
        v21 = sub_1A93F8040();
        v23 = v22;

      }
      else
      {
        v21 = 0x6974636120726F66;
        v23 = 0xEF72657375206576;
      }
      sub_1A906436C(v21, v23, v50);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A9058034((uint64_t)&v45);
      *(_WORD *)(v7 + 22) = 2112;
      v44 = sub_1A93F711C();
      sub_1A93F8AA8();
      *v18 = v44;

      _os_log_impl(&dword_1A904E000, a2, v17, "Account %{private,mask.hash}s: Could not donate to Siri with error: %@", (uint8_t *)v7, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v18, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v8, -1, -1);
      MEMORY[0x1AF41411C](v7, -1, -1);

      a4 = v42;
    }
    else
    {
      sub_1A9058034((uint64_t)&v45);

    }
    swift_beginAccess();
    if (!__OFADD__(*v11, 1))
    {
      ++*v11;
      dispatch_group_leave(a4);

      return;
    }
    __break(1u);
  }
  else
  {
    v7 = a7;
    v8 = a6;
    sub_1A90D2F4C(a5, (uint64_t)&v45);
    if (*((_QWORD *)&v46 + 1))
    {
      sub_1A905D4AC(&v45, (uint64_t)v50);
      sub_1A9057F7C((uint64_t)a2, (uint64_t)&v45);
      v25 = swift_allocObject();
      v26 = v48;
      *(_OWORD *)(v25 + 48) = v47;
      *(_OWORD *)(v25 + 64) = v26;
      v27 = v49;
      v28 = v46;
      *(_OWORD *)(v25 + 16) = v45;
      *(_OWORD *)(v25 + 32) = v28;
      *(_QWORD *)(v25 + 80) = v27;
      *(_QWORD *)(v25 + 88) = a3;
      *(_QWORD *)(v25 + 96) = a4;
      swift_retain();
      v29 = a4;
      sub_1A905660C((uint64_t)v50, v8, v7, (uint64_t)sub_1A90D6164, v25);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      return;
    }
    sub_1A90D2F0C((uint64_t)&v45);
    if (qword_1ED2A8778 == -1)
      goto LABEL_11;
  }
  swift_once();
LABEL_11:
  v30 = sub_1A93F7698();
  __swift_project_value_buffer(v30, (uint64_t)qword_1ED2A8758);
  sub_1A9057F7C((uint64_t)a2, (uint64_t)&v45);
  swift_bridgeObjectRetain_n();
  v31 = sub_1A93F7674();
  v32 = sub_1A93F879C();
  if (os_log_type_enabled(v31, v32))
  {
    v43 = a4;
    v33 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v44 = v34;
    *(_DWORD *)v33 = 141558787;
    v50[0] = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v33 + 12) = 2081;
    v35 = *(void **)(*((_QWORD *)&v45 + 1) + 24);
    if (v35)
    {
      v36 = objc_msgSend(v35, sel_description);
      v37 = sub_1A93F8040();
      v39 = v38;

    }
    else
    {
      v37 = 0x6974636120726F66;
      v39 = 0xEF72657375206576;
    }
    v50[0] = sub_1A906436C(v37, v39, &v44);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9058034((uint64_t)&v45);
    *(_WORD *)(v33 + 22) = 2160;
    v50[0] = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v33 + 32) = 2081;
    v50[0] = v8;
    v50[1] = v7;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
    v40 = sub_1A93F8094();
    v50[0] = sub_1A906436C(v40, v41, &v44);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v31, v32, "Account %{private,mask.hash}s: Could not stream donation for userID %{private,mask.hash}s because there is no stream.", (uint8_t *)v33, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v34, -1, -1);
    MEMORY[0x1AF41411C](v33, -1, -1);

    a4 = v43;
  }
  else
  {
    sub_1A9058034((uint64_t)&v45);

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  if (__OFADD__(*v11, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v11;
    dispatch_group_leave(a4);
  }
}

uint64_t sub_1A90D6B18(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1A90D6B28(a1, a2, v2 + 16, *(_QWORD *)(v2 + 88), *(void **)(v2 + 96), *(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 112));
}

uint64_t sub_1A90D6B28(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];
  _BYTE v33[40];
  _OWORD v34[4];
  uint64_t v35;

  v14 = sub_1A93F7D58();
  v30 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1A93F7DB8();
  v28 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)(a3 + 64);
  sub_1A9057F7C(a3, (uint64_t)v34);
  sub_1A90D2F4C(a1, (uint64_t)v33);
  v19 = swift_allocObject();
  v20 = v34[0];
  *(_OWORD *)(v19 + 40) = v34[1];
  v21 = v34[3];
  *(_OWORD *)(v19 + 56) = v34[2];
  *(_OWORD *)(v19 + 72) = v21;
  *(_QWORD *)(v19 + 16) = a2;
  v22 = v35;
  *(_OWORD *)(v19 + 24) = v20;
  *(_QWORD *)(v19 + 88) = v22;
  *(_QWORD *)(v19 + 96) = a4;
  *(_QWORD *)(v19 + 104) = a5;
  sub_1A90D2F94((uint64_t)v33, v19 + 112);
  *(_QWORD *)(v19 + 152) = a6;
  *(_QWORD *)(v19 + 160) = a7;
  aBlock[4] = sub_1A90D6488;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_18_2;
  v23 = _Block_copy(aBlock);
  v24 = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  v25 = a5;
  sub_1A93F7D88();
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1A90A1130();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D28();
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v18, v16, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v14);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v29);
  return swift_release();
}

uint64_t sub_1A90D6D8C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1A90563F8(a1, a2, *(dispatch_group_t *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1A90D6D98()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _BYTE v3[8];
  uint64_t v4;

  if (*v0 > 1u)
    return 1;
  v1 = *(_QWORD *)(*((_QWORD *)v0 + 7) + 16);
  sub_1A9057F7C((uint64_t)v0, (uint64_t)v3);
  if (v1)
    v1 = *(_QWORD *)(v4 + 24) != 0;
  sub_1A9058034((uint64_t)v3);
  return v1;
}

void sub_1A90D6E00(void *a1, unint64_t a2, char a3)
{
  uint64_t v3;

  sub_1A92D4A48(a1, a2, a3 & 1, *(void (**)(id))(v3 + 16), *(_QWORD *)(v3 + 24), v3 + 32, (_QWORD *)(v3 + 104), *(_QWORD *)(v3 + 144), *(_QWORD *)(v3 + 152));
}

uint64_t sub_1A90D6E34()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  sub_1A908A160(*(_QWORD *)(v0 + 88));
  return swift_deallocClassInstance();
}

uint64_t _s11DataFetcherCMa()
{
  return objc_opt_self();
}

uint64_t sub_1A90D6E98()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1A90D6EC0()
{
  uint64_t *v0;

  return sub_1A9072C40(v0[2], v0[3], v0[4], v0[5]);
}

void sub_1A90D6ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  _QWORD aBlock[6];

  v5 = sub_1A93F7E18();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (_QWORD *)((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v2 + 80);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x1E0DEF740], v5, v7);
  v11 = v10;
  LOBYTE(v10) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) != 0)
  {
    v12 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v13 = objc_msgSend(v12, sel_privateQueueContext);

    v14 = swift_allocObject();
    swift_weakInit();
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = v14;
    v15[3] = v13;
    v15[4] = a1;
    v15[5] = a2;
    aBlock[4] = sub_1A90D6EC0;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_24;
    v16 = _Block_copy(aBlock);
    v17 = v13;
    swift_retain();
    swift_release();
    objc_msgSend(v17, sel_performBlock_, v16);
    _Block_release(v16);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1A90D7090(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A90D709C(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t, uint64_t, _QWORD))(v2 + 24));
}

uint64_t sub_1A90D709C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, _QWORD))
{
  uint64_t Strong;
  uint64_t v8;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = *(_QWORD *)(Strong + 88);
    *(_QWORD *)(Strong + 88) = a1;
    *(_QWORD *)(Strong + 96) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A908A160(v8);
    swift_release();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a4(a1, a2, 0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A90D7168()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F7698();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A90D71E8()
{
  qword_1ED2A47D0 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
  return swift_unknownObjectRetain();
}

uint64_t type metadata accessor for LoggerTrace.LogInterval(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1EEABE670);
}

void sub_1A90D7224()
{
  JUMPOUT(0x1AF414014);
}

void sub_1A90D72AC()
{
  unint64_t v0;

  sub_1A90D8014();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

ValueMetadata *type metadata accessor for PodcastsMediaLibrary.Request()
{
  return &type metadata for PodcastsMediaLibrary.Request;
}

void sub_1A90D735C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A90C44E8(319, &qword_1ED2AD660, (void (*)(uint64_t))type metadata accessor for PlaybackIntent);
  if (v0 <= 0x3F)
  {
    sub_1A90C44E8(319, qword_1ED2AD558, (void (*)(uint64_t))type metadata accessor for PodcastsMediaLibrary.MediaItem);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext()
{
  uint64_t result;

  result = qword_1ED2AD508;
  if (!qword_1ED2AD508)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A90D74AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED2AD558[0])
  {
    type metadata accessor for PodcastsMediaLibrary.MediaItem(255);
    v0 = sub_1A93F8A90();
    if (!v1)
      atomic_store(v0, qword_1ED2AD558);
  }
}

void sub_1A90D7500()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A90C44E8(319, (unint64_t *)&qword_1ED2AD6E8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
  {
    sub_1A90C44E8(319, (unint64_t *)&qword_1ED2AD720, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for PodcastsMediaLibrary.MediaItem(uint64_t a1)
{
  return sub_1A9062BFC(a1, (uint64_t *)&unk_1ED2AD548);
}

uint64_t static Podcasts.isRecentlyUnfollowedEnabled()()
{
  return sub_1A90A41E4(33);
}

uint64_t sub_1A90D7674(uint64_t a1, uint64_t a2)
{
  return sub_1A90D7A28(a1, a2);
}

void sub_1A90D7694(unint64_t a1, char a2)
{
  uint64_t v2;

  sub_1A90D76A4(a1, a2 & 1, *(void (**)(unint64_t, uint64_t))(v2 + 16));
}

void sub_1A90D76A4(unint64_t a1, char a2, void (*a3)(unint64_t, uint64_t))
{
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if ((a2 & 1) != 0)
  {
    v11 = (id)a1;
    a3(a1, 1);
    sub_1A909CFC0((id)a1, 1);
    return;
  }
  v19 = MEMORY[0x1E0DEE9D8];
  v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1A93F8E5C();
    if (v6)
    {
LABEL_4:
      if (v6 < 1)
      {
        __break(1u);
        goto LABEL_30;
      }
      for (i = 0; i != v6; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v8 = (id)MEMORY[0x1AF4129DC](i, a1);
        else
          v8 = *(id *)(a1 + 8 * i + 32);
        v9 = v8;
        v10 = sub_1A92770A8(v8);

        if (v10)
        {
          MEMORY[0x1AF412004]();
          if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A93F834C();
          sub_1A93F8394();
          sub_1A93F8328();
        }
      }
      sub_1A909CFC0((id)a1, 0);
      v6 = v19;
      if (!v5)
        goto LABEL_16;
      goto LABEL_19;
    }
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_4;
  }
  sub_1A909CFC0((id)a1, 0);
  v6 = MEMORY[0x1E0DEE9D8];
  if (!v5)
  {
LABEL_16:
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_20;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  v12 = sub_1A93F8E5C();
  sub_1A909CFC0((id)a1, 0);
LABEL_20:
  if ((unint64_t)v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v18 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v12 != v18)
    {
LABEL_22:
      if (qword_1ED2A8890 == -1)
      {
LABEL_23:
        v13 = sub_1A93F7698();
        __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A8878);
        v14 = sub_1A93F7674();
        v15 = sub_1A93F879C();
        if (os_log_type_enabled(v14, v15))
        {
          v16 = (uint8_t *)swift_slowAlloc();
          v17 = swift_slowAlloc();
          v19 = v17;
          *(_DWORD *)v16 = 136315138;
          sub_1A906436C(0xD000000000000038, 0x80000001A944DCB0, &v19);
          sub_1A93F8AA8();
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v17, -1, -1);
          MEMORY[0x1AF41411C](v16, -1, -1);
        }

        goto LABEL_26;
      }
LABEL_30:
      swift_once();
      goto LABEL_23;
    }
  }
  else if (v12 != *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_22;
  }
LABEL_26:
  a3(v6, 0);
  swift_bridgeObjectRelease();
}

uint64_t sub_1A90D7A28(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  id v6;
  id v7;
  _QWORD *v8;
  _QWORD *v9;
  void *v10;
  id v11;
  _QWORD v13[6];

  v5 = *v2;
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v7 = objc_msgSend(v6, sel_privateQueueContext);

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v5;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v7;
  v9[3] = sub_1A90D7694;
  v9[4] = v8;
  v9[5] = v5;
  v13[4] = sub_1A934C790;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1A908A91C;
  v13[3] = &block_descriptor_19_3;
  v10 = _Block_copy(v13);
  swift_retain();
  v11 = v7;
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_performBlock_, v10);
  _Block_release(v10);

  return swift_release();
}

void sub_1A90D7B78()
{
  uint64_t v0;

  sub_1A90D7B84(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

void sub_1A90D7B84(uint64_t a1, void (*a2)(void))
{
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;

  sub_1A93F8040();
  v3 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v4 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);

  v6 = objc_msgSend((id)objc_opt_self(), sel_predicateForDownloadedFairPlayEpisodes);
  objc_msgSend(v5, sel_setPredicate_, v6);

  if (qword_1ED2A8890 != -1)
    swift_once();
  v7 = sub_1A93F7698();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED2A8878);
  v8 = sub_1A93F7674();
  v9 = sub_1A93F8790();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v12 = v11;
    *(_DWORD *)v10 = 136315138;
    sub_1A906436C(0xD000000000000038, 0x80000001A944DCB0, &v12);
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v8, v9, "%s Fetching all downloaded HLS episodes.", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v11, -1, -1);
    MEMORY[0x1AF41411C](v10, -1, -1);
  }

  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  sub_1A93F89DC();
  a2();
  swift_bridgeObjectRelease();

}

uint64_t sub_1A90D7FF8(char a1)
{
  uint64_t v1;

  return sub_1A9391F5C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A90D8000(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

void sub_1A90D8014()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED2AD720)
  {
    sub_1A93F738C();
    v0 = sub_1A93F8A90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED2AD720);
  }
}

uint64_t sub_1A90D8068(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void sub_1A90D80AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED2AD6E8)
  {
    sub_1A93F726C();
    v0 = sub_1A93F8A90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED2AD6E8);
  }
}

uint64_t sub_1A90D8100(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1A93F6F78();
  if (!result || (result = sub_1A93F6F90(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1A93F6F84();
      sub_1A93F7E9C();
      sub_1A9066CA8(&qword_1ED2AD1E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9A18], MEMORY[0x1E0CA9A10]);
      return sub_1A93F7E60();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id IMTimeStamp()
{
  id v0;
  void *v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CB3578], "setDefaultFormatterBehavior:", 1040);
  v0 = objc_alloc_init(MEMORY[0x1E0CB3578]);
  objc_msgSend(v0, "setDateFormat:", CFSTR("YYYY-MM-dd HH:mm:ss.SSS"));
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringFromDate:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_1A90D9568(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_log_t _IMStoreLogCategoryDefault()
{
  return os_log_create("com.apple.podcasts.imstoreutil", "Podcasts");
}

void sub_1A90DBC14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

id IMAccessibilityLocalizedNumber(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v1 = a1;
  objc_msgSend(MEMORY[0x1E0CB3978], "currentThread");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "threadDictionary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", IMThreadLocalLocalizedNumberFormatter);
  v4 = (id)objc_claimAutoreleasedReturnValue();

  if (!v4)
  {
    v4 = objc_alloc_init(MEMORY[0x1E0CB37F0]);
    objc_msgSend(v4, "setNumberStyle:", 1);
    objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setLocale:", v5);

    objc_msgSend(MEMORY[0x1E0CB3978], "currentThread");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "threadDictionary");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setObject:forKey:", v4, IMThreadLocalLocalizedNumberFormatter);

  }
  objc_msgSend(v4, "stringFromNumber:", v1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

uint64_t __ServerConnectionCallback(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return objc_msgSend(a4, "_handleTelephonyNotificationWithName:userInfo:", a2, a3);
}

void __ReachabilityCallback(uint64_t a1, uint64_t a2, os_unfair_lock_s *a3)
{
  id v5;
  void *v6;
  id v7;
  NSObject *v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  int v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (!objc_msgSend((id)objc_msgSend(MEMORY[0x1E0CFDAF0], "sharedConfig"), "debugLogsEnabled"))
    goto LABEL_17;
  v5 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v6 = v5;
  if ((a2 & 2) != 0)
  {
    objc_msgSend(v5, "addObject:", CFSTR("reachable"));
    if ((a2 & 0x40000) == 0)
    {
LABEL_4:
      if ((a2 & 8) == 0)
        goto LABEL_5;
      goto LABEL_20;
    }
  }
  else if ((a2 & 0x40000) == 0)
  {
    goto LABEL_4;
  }
  objc_msgSend(v6, "addObject:", CFSTR("wwan"));
  if ((a2 & 8) == 0)
  {
LABEL_5:
    if ((a2 & 0x20) == 0)
      goto LABEL_6;
    goto LABEL_21;
  }
LABEL_20:
  objc_msgSend(v6, "addObject:", CFSTR("automatic"));
  if ((a2 & 0x20) == 0)
  {
LABEL_6:
    if ((a2 & 8) == 0)
      goto LABEL_7;
    goto LABEL_22;
  }
LABEL_21:
  objc_msgSend(v6, "addObject:", CFSTR("on-demand"));
  if ((a2 & 8) == 0)
  {
LABEL_7:
    if ((a2 & 4) == 0)
      goto LABEL_8;
    goto LABEL_23;
  }
LABEL_22:
  objc_msgSend(v6, "addObject:", CFSTR("on-traffic"));
  if ((a2 & 4) == 0)
  {
LABEL_8:
    if ((a2 & 0x20000) == 0)
      goto LABEL_9;
    goto LABEL_24;
  }
LABEL_23:
  objc_msgSend(v6, "addObject:", CFSTR("connection-required"));
  if ((a2 & 0x20000) == 0)
  {
LABEL_9:
    if ((a2 & 0x10000) == 0)
      goto LABEL_10;
LABEL_25:
    objc_msgSend(v6, "addObject:", CFSTR("local"));
    if ((a2 & 1) == 0)
      goto LABEL_12;
    goto LABEL_11;
  }
LABEL_24:
  objc_msgSend(v6, "addObject:", CFSTR("direct"));
  if ((a2 & 0x10000) != 0)
    goto LABEL_25;
LABEL_10:
  if ((a2 & 1) != 0)
LABEL_11:
    objc_msgSend(v6, "addObject:", CFSTR("transient"));
LABEL_12:
  v7 = +[IMNetworkObserver _networkObserverLogConfig](IMNetworkObserver, "_networkObserverLogConfig");
  if (!v7)
    v7 = (id)objc_msgSend(MEMORY[0x1E0CFDAF0], "sharedConfig");
  v8 = objc_msgSend(v7, "OSLogObject");
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = 138412802;
    v10 = objc_opt_class();
    v11 = 1024;
    v12 = a2;
    v13 = 2112;
    v14 = objc_msgSend(v6, "componentsJoinedByString:", CFSTR(", "));
    _os_log_impl(&dword_1A904E000, v8, OS_LOG_TYPE_DEFAULT, "%@: Reachability change: %d (%@)", (uint8_t *)&v9, 0x1Cu);
  }

LABEL_17:
  os_unfair_lock_lock(a3 + 18);
  -[os_unfair_lock_s _reloadNetworkTypeWithReachabilityFlags:](a3, "_reloadNetworkTypeWithReachabilityFlags:", a2);
  os_unfair_lock_unlock(a3 + 18);
}

void sub_1A90DF6CC(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int128 buf)
{
  id v19;
  NSObject *v20;

  if (a2 == 1)
  {
    v19 = objc_begin_catch(a1);
    objc_end_catch();
    if (v19)
    {
      _MTLogCategoryDefault();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        LODWORD(buf) = 138412290;
        *(_QWORD *)((char *)&buf + 4) = v19;
        _os_log_impl(&dword_1A904E000, v20, OS_LOG_TYPE_ERROR, "Request for invalid computed property value! %@", (uint8_t *)&buf, 0xCu);
      }
      JUMPOUT(0x1A90DF5F8);
    }
    JUMPOUT(0x1A90DF5FCLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A90DFA64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

uint64_t mt_randomPersistID()
{
  void *v0;
  uint64_t v1;
  _QWORD v3[3];

  v3[2] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3A28], "UUID");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v3[0] = 0;
  v3[1] = 0;
  objc_msgSend(v0, "getUUIDBytes:", v3);
  v1 = v3[0];

  return v1;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{

}

void sub_1A90E131C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1A90E140C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A90E1548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

BOOL MT_isDispatchSourceDataVfsDesiredDisk(uint64_t a1)
{
  return a1 == 0x4000;
}

uint64_t MT_isDispatchSourceDataVfsConstrainedDisk(uint64_t a1)
{
  _BOOL4 v1;

  v1 = a1 == 0x2000;
  if (a1 == 4096)
    v1 = 1;
  return a1 == 4 || v1;
}

BOOL MT_isDispatchSourceDataVfsFullDisk(uint64_t a1)
{
  return a1 == 512;
}

os_log_t _MTLogCategoryMediaLibrary()
{
  return os_log_create("com.apple.podcasts", "MediaLibrary");
}

os_log_t _MTLogCategoryDownload()
{
  return os_log_create("com.apple.podcasts", "Downloads");
}

os_log_t _MTLogCategoryDRM()
{
  return os_log_create("com.apple.podcasts", "DRM");
}

os_log_t _MTLogCategoryMediaRemoteRouting()
{
  return os_log_create("com.apple.podcasts", "MediaRemoteRouting");
}

os_log_t _MTLogCategoryFeedUpdateIngester()
{
  return os_log_create("com.apple.podcasts", "FeedUpdateIngester");
}

os_log_t _MTLogCategoryNotifications()
{
  return os_log_create("com.apple.podcasts", "Notifications");
}

os_log_t _MTLogCategorySpotlight()
{
  return os_log_create("com.apple.podcasts", "Spotlight");
}

os_log_t _MTLogCategoryCarPlay()
{
  return os_log_create("com.apple.podcasts", "CarPlay");
}

os_log_t _MTLogCategoryBridge()
{
  return os_log_create("com.apple.podcasts", "Bridge");
}

os_log_t _MTLogCategoryUPPSync()
{
  return os_log_create("com.apple.podcasts", "UPPSync");
}

os_log_t _MTLogCategoryAsyncTask()
{
  return os_log_create("com.apple.podcasts", "AsyncTask");
}

os_log_t _MTLogCategoryMacOSSpecific()
{
  return os_log_create("com.apple.podcasts", "MacOS");
}

os_log_t _MTLogCategoryAppRemoval()
{
  return os_log_create("com.apple.podcasts", "AppRemoval");
}

os_log_t _MTLogCategoryQuickLook()
{
  return os_log_create("com.apple.podcasts", "QuickLook");
}

os_log_t _MTLogCategoryFollowing()
{
  return os_log_create("com.apple.podcasts", "Following");
}

uint64_t IMGetMemoryStatistics(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  host_t v8;
  uint64_t v10;
  _OWORD v11[4];
  mach_msg_type_number_t task_info_outCnt[2];
  mach_msg_type_number_t host_info_outCnt;

  if (a1 | a2)
  {
    memset(v11, 0, 40);
    task_info_outCnt[0] = 10;
    if (task_info(*MEMORY[0x1E0C83DA0], 0x12u, (task_info_t)v11, task_info_outCnt))
      return 0;
    if (a1)
      *(_QWORD *)a1 = *(_QWORD *)((char *)v11 + 4);
    if (a2)
      *(_QWORD *)a2 = *(_QWORD *)((char *)v11 + 12);
  }
  if (a3 | a4)
  {
    *(_QWORD *)task_info_outCnt = 0;
    v8 = MEMORY[0x1AF413828]();
    host_info_outCnt = 15;
    host_page_size(v8, (vm_size_t *)task_info_outCnt);
    memset(v11, 0, 60);
    if (host_statistics(v8, 2, (host_info_t)v11, &host_info_outCnt))
      return 0;
    v10 = *(_QWORD *)task_info_outCnt;
    if (a3)
      *(_QWORD *)a3 = *(_QWORD *)task_info_outCnt * LODWORD(v11[0]);
    if (a4)
      *(_QWORD *)a4 = v10 * LODWORD(v11[0]) + ((DWORD2(v11[0]) + DWORD1(v11[0]) + HIDWORD(v11[0])) * v10);
  }
  return 1;
}

void sub_1A90E22DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{

}

void sub_1A90E27A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A90E2A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A90E2C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A90E2E70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1A90E3274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,char a21)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_1A90E370C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location,char a22)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a22, 8);
  _Unwind_Resume(a1);
}

void sub_1A90E39EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1A90E3C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A90E3D8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A90E3FEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A90E41F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A90E438C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{

}

void sub_1A90E4C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{

}

void sub_1A90E6178(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A90E6228(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A90E62CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A90E66D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t PFMostRestrictiveLimit(uint64_t result, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  NSObject *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a2;
  v3 = result;
  v11 = *MEMORY[0x1E0C80C00];
  if (result > 5)
  {
    if ((unint64_t)(result - 6) < 4)
    {
      if (a2 - 6 > 3)
      {
        if (a2 == 0x100000000)
          v6 = 0x100000000;
        else
          v6 = result;
        if (result - 5 >= a2)
          v7 = a2;
        else
          v7 = result;
        if (a2 - 1 <= 4)
          return v7;
        else
          return v6;
      }
      goto LABEL_15;
    }
    if (result != 0x100000000)
    {
LABEL_31:
      _MTLogCategoryDownload();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        v9 = 134217984;
        v10 = v3;
        _os_log_impl(&dword_1A904E000, v8, OS_LOG_TYPE_ERROR, "Attempting to compare an incompatible episode limit: %lld", (uint8_t *)&v9, 0xCu);
      }

      return v2;
    }
    return 0x100000000;
  }
  if ((unint64_t)(result - 1) >= 5)
  {
    if (result)
      goto LABEL_31;
    return v2;
  }
  if (a2 - 1 > 4)
  {
    if (a2 == 0x100000000)
      v4 = 0x100000000;
    else
      v4 = result;
    if (result + 5 <= a2)
      v5 = result;
    else
      v5 = a2;
    if (a2 - 6 <= 3)
      return v5;
    else
      return v4;
  }
LABEL_15:
  if (result >= (uint64_t)a2)
    return a2;
  return result;
}

unint64_t PFMostPermissiveLimit(uint64_t a1, unint64_t a2)
{
  if (PFMostRestrictiveLimit(a1, a2) == a1)
    return a2;
  else
    return a1;
}

void *PFAnalyticsNumberFromPodcastEpisodeLimitPolicy(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v5;
  void *v6;

  v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    v2 = objc_msgSend(v1, "unsignedLongLongValue");
    v3 = &unk_1E5538AC8;
    if (v2 > 4294967294)
    {
      if (v2 == 0x100000001)
        v5 = &unk_1E5538BE8;
      else
        v5 = &unk_1E5538AC8;
      if (v2 == 0x100000000)
        v6 = &unk_1E5538BD0;
      else
        v6 = v5;
      if (v2 == 0xFFFFFFFFLL)
        v3 = &unk_1E5538BB8;
      else
        v3 = v6;
    }
    else
    {
      switch(v2)
      {
        case 1:
          v3 = &unk_1E5538AE0;
          break;
        case 2:
          v3 = &unk_1E5538AF8;
          break;
        case 3:
          v3 = &unk_1E5538B10;
          break;
        case 4:
          v3 = &unk_1E5538B28;
          break;
        case 5:
          v3 = &unk_1E5538B40;
          break;
        case 6:
          v3 = &unk_1E5538B58;
          break;
        case 7:
          v3 = &unk_1E5538B70;
          break;
        case 8:
          v3 = &unk_1E5538B88;
          break;
        case 9:
          v3 = &unk_1E5538BA0;
          break;
        default:
          break;
      }
    }
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

id PFAnalyticsNumberForGlobalEpisodeLimit()
{
  void *v0;
  void *v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0C99EA0], "_applePodcastsFoundationSettingsUserDefaults");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKey:", CFSTR("MTPodcastEpisodeLimitDefaultKey"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  PFAnalyticsNumberFromPodcastEpisodeLimitPolicy(v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_1A90E8758(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{

}

void sub_1A90E93D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__7(uint64_t a1)
{

}

void sub_1A90EABBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A90EAFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MTPodcastHidesPlayedEpisodesAppWideUserDefaults()
{
  return objc_msgSend(MEMORY[0x1E0C99EA0], "_applePodcastsFoundationSettingsUserDefaults");
}

uint64_t MTPodcastHidesPlayedEpisodesResolved(int a1)
{
  if (a1)
    return a1 == 2;
  else
    return MTPodcastHidesPlayedEpisodesAppWideSetting();
}

uint64_t MTPodcastHidesPlayedEpisodesAppWideSetting()
{
  void *v0;
  uint64_t v1;

  objc_msgSend(MEMORY[0x1E0C99EA0], "_applePodcastsFoundationSettingsUserDefaults");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "BOOLForKey:", CFSTR("MTHidePlayedEpisodes"));

  return v1;
}

uint64_t os_feature_enabled_tinker_wha()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_episode_more_menu_actions()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_experimental_serial_episode_count()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_siri_donation_homepod()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_download_consistency_checks()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enable_itunes_cloud_fair_play_streaming()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_copy_link_with_timestamp()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_itunes_cloud_fair_play_offline()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_story_sharing()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_image_provider_on_watch()
{
  return +[PFClientUtil supportsImageStore](PFClientUtil, "supportsImageStore") ^ 1;
}

uint64_t os_feature_enabled_bluemoon()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_responsive_playback()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_disable_feed_update_processor()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_removed_imagestore()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_rewind_on_interruption()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_recently_unfollowed()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_podcasts_sync_qfa()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_home_tab()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_skip_empty_upp_sync()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_batch_feed_fetch()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_batch_feed_fetch_on_push()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_batch_feed_fetch_on_push_forced()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_ponderosa()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_ponderosa_sync()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_watch_up_next_widget()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_fetch_upp_on_library_push()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_disable_siri_plist_dumper()
{
  uint64_t result;

  result = +[PFClientUtil isRunningOnHomepod](PFClientUtil, "isRunningOnHomepod");
  if ((_DWORD)result)
    return _os_feature_enabled_impl();
  return result;
}

uint64_t os_feature_enabled_disable_homepod_station_donation()
{
  uint64_t result;

  result = +[PFClientUtil isRunningOnHomepod](PFClientUtil, "isRunningOnHomepod");
  if ((_DWORD)result)
    return _os_feature_enabled_impl();
  return result;
}

uint64_t os_feature_enabled_homepod_siri_donation_from_apns()
{
  return _os_feature_enabled_impl();
}

uint64_t os_feature_enabled_disable_homepod_cloud_sync()
{
  return _os_feature_enabled_impl();
}

uint64_t isRunningUnitTests()
{
  if (isRunningUnitTests_onceToken != -1)
    dispatch_once(&isRunningUnitTests_onceToken, &__block_literal_global_6);
  return isRunningUnitTests_isXCTestLoaded;
}

Class __isRunningUnitTests_block_invoke()
{
  Class result;

  result = NSClassFromString(CFSTR("XCTestCase"));
  isRunningUnitTests_isXCTestLoaded = result != 0;
  return result;
}

const __CFString *NSPersistentStringFromMTStopReason(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xE)
    return CFSTR("none");
  else
    return off_1E54D1D98[a1 - 1];
}

uint64_t MTStopReasonFromNSPersistentString(void *a1)
{
  id v1;
  uint64_t v2;
  NSObject *v3;
  int v5;
  id v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if ((objc_msgSend(CFSTR("complete"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(CFSTR("playOther"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(CFSTR("pause"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(CFSTR("seek"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 4;
  }
  else if ((objc_msgSend(CFSTR("transition"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 5;
  }
  else if ((objc_msgSend(CFSTR("interrupted"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 6;
  }
  else if ((objc_msgSend(CFSTR("background"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 7;
  }
  else if ((objc_msgSend(CFSTR("exit"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 8;
  }
  else if ((objc_msgSend(CFSTR("inactivity"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 9;
  }
  else if ((objc_msgSend(CFSTR("error"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 10;
  }
  else if ((objc_msgSend(CFSTR("failure"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 11;
  }
  else if ((objc_msgSend(CFSTR("buffering"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 12;
  }
  else if ((objc_msgSend(CFSTR("next"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 13;
  }
  else if ((objc_msgSend(CFSTR("markPlayed"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 14;
  }
  else if ((objc_msgSend(CFSTR("markUnplayed"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 15;
  }
  else
  {
    if ((objc_msgSend(CFSTR("none"), "isEqualToString:", v1) & 1) == 0)
    {
      _MTLogCategoryDefault();
      v3 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        v5 = 138543362;
        v6 = v1;
        _os_log_impl(&dword_1A904E000, v3, OS_LOG_TYPE_DEFAULT, "Unable to convert unknown stop reason identifer: %{public}@", (uint8_t *)&v5, 0xCu);
      }

    }
    v2 = 0;
  }

  return v2;
}

const __CFString *NSPersistentStringFromMTPlaybackAdjustmentInitiator(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("Unknown");
  if (a1 == 2)
    v1 = CFSTR("Automatic");
  if (a1 == 1)
    return CFSTR("Manual");
  else
    return v1;
}

id NSPersistentStringForMTPlayReason(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  NSObject *v6;
  void *v7;
  _DWORD v8[2];
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  MTPlayReasonToPersistentStringMap_inverted(0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v4, "length"))
  {
    if (v4)
      return v4;
LABEL_7:
    MTPlayReasonToPersistentStringMap_inverted(0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "objectForKey:", &unk_1E5538C48);
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    return v4;
  }
  _MTLogCategoryDefault();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    v8[0] = 67109120;
    v8[1] = a1;
    _os_log_impl(&dword_1A904E000, v6, OS_LOG_TYPE_ERROR, "Invalid MTPlayReason encountered (%d)", (uint8_t *)v8, 8u);
  }

  if (!v4)
    goto LABEL_7;
  return v4;
}

id MTPlayReasonToPersistentStringMap_inverted(int a1)
{
  uint64_t *v2;

  if (MTPlayReasonToPersistentStringMap_inverted_onceToken != -1)
    dispatch_once(&MTPlayReasonToPersistentStringMap_inverted_onceToken, &__block_literal_global_261);
  v2 = &MTPlayReasonToPersistentStringMap_inverted_invertedMap;
  if (!a1)
    v2 = &MTPlayReasonToPersistentStringMap_inverted_map;
  return (id)*v2;
}

uint64_t MTPlayReasonFromPersistentString(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  NSObject *v4;
  uint64_t v5;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  MTPlayReasonToPersistentStringMap_inverted(1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v3)
  {
    _MTLogCategoryDefault();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      v7 = 138412290;
      v8 = v1;
      _os_log_impl(&dword_1A904E000, v4, OS_LOG_TYPE_ERROR, "Invalid MTPlayReason persistent string encountered (%@)", (uint8_t *)&v7, 0xCu);
    }

    v3 = &unk_1E5538C48;
  }
  v5 = objc_msgSend(v3, "unsignedIntegerValue");

  return v5;
}

id NSPersistentStringForMTEpisodeContext(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  NSObject *v6;
  void *v7;
  _DWORD v8[2];
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  MTEpisodeContextToPersistentStringMap_inverted(0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v4, "length"))
  {
    if (v4)
      return v4;
LABEL_7:
    MTEpisodeContextToPersistentStringMap_inverted(0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "objectForKey:", &unk_1E5538C60);
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    return v4;
  }
  _MTLogCategoryDefault();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    v8[0] = 67109120;
    v8[1] = a1;
    _os_log_impl(&dword_1A904E000, v6, OS_LOG_TYPE_ERROR, "Invalid MTEpisodeContext encountered (%d)", (uint8_t *)v8, 8u);
  }

  if (!v4)
    goto LABEL_7;
  return v4;
}

id MTEpisodeContextToPersistentStringMap_inverted(int a1)
{
  uint64_t *v2;

  if (MTEpisodeContextToPersistentStringMap_inverted_onceToken != -1)
    dispatch_once(&MTEpisodeContextToPersistentStringMap_inverted_onceToken, &__block_literal_global_307);
  v2 = &MTEpisodeContextToPersistentStringMap_inverted_invertedMap;
  if (!a1)
    v2 = &MTEpisodeContextToPersistentStringMap_inverted_map;
  return (id)*v2;
}

uint64_t MTEpisodeContextFromPersistentString(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  NSObject *v4;
  uint64_t v5;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  MTEpisodeContextToPersistentStringMap_inverted(1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v3)
  {
    _MTLogCategoryDefault();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      v7 = 138412290;
      v8 = v1;
      _os_log_impl(&dword_1A904E000, v4, OS_LOG_TYPE_ERROR, "Invalid MTEpisodeContext persistent string encountered (%@)", (uint8_t *)&v7, 0xCu);
    }

    v3 = &unk_1E5538C60;
  }
  v5 = objc_msgSend(v3, "unsignedIntegerValue");

  return v5;
}

id NSPersistentStringForMTEpisodeContextSortType(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  NSObject *v6;
  void *v7;
  _DWORD v8[2];
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  MTEpisodeContextSortTypeToPersistentStringMap_inverted(0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v4, "length"))
  {
    if (v4)
      return v4;
LABEL_7:
    MTEpisodeContextSortTypeToPersistentStringMap_inverted(0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "objectForKey:", &unk_1E5538C60);
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    return v4;
  }
  _MTLogCategoryDefault();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    v8[0] = 67109120;
    v8[1] = a1;
    _os_log_impl(&dword_1A904E000, v6, OS_LOG_TYPE_ERROR, "Invalid MTEpisodeContextSortType encountered (%d)", (uint8_t *)v8, 8u);
  }

  if (!v4)
    goto LABEL_7;
  return v4;
}

id MTEpisodeContextSortTypeToPersistentStringMap_inverted(int a1)
{
  uint64_t *v2;

  if (MTEpisodeContextSortTypeToPersistentStringMap_inverted_onceToken != -1)
    dispatch_once(&MTEpisodeContextSortTypeToPersistentStringMap_inverted_onceToken, &__block_literal_global_339);
  v2 = &MTEpisodeContextSortTypeToPersistentStringMap_inverted_invertedMap;
  if (!a1)
    v2 = &MTEpisodeContextSortTypeToPersistentStringMap_inverted_map;
  return (id)*v2;
}

uint64_t MTEpisodeContextSortTypeFromPersistentString(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  NSObject *v4;
  uint64_t v5;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  MTEpisodeContextSortTypeToPersistentStringMap_inverted(1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v3)
  {
    _MTLogCategoryDefault();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      v7 = 138412290;
      v8 = v1;
      _os_log_impl(&dword_1A904E000, v4, OS_LOG_TYPE_ERROR, "Invalid MTEpisodeContextSortType persistent string encountered (%@)", (uint8_t *)&v7, 0xCu);
    }

    v3 = &unk_1E5538C60;
  }
  v5 = objc_msgSend(v3, "unsignedIntegerValue");

  return v5;
}

id NSPersistentStringForMTDisplayType(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  _DWORD v7[2];
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  MTDisplayTypeToPersistentStringMap_inverted(0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!objc_msgSend(v4, "length"))
  {
    _MTLogCategoryDefault();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      v7[0] = 67109120;
      v7[1] = a1;
      _os_log_impl(&dword_1A904E000, v5, OS_LOG_TYPE_ERROR, "Invalid MTDisplayType encountered (%d)", (uint8_t *)v7, 8u);
    }

  }
  return v4;
}

id MTDisplayTypeToPersistentStringMap_inverted(int a1)
{
  uint64_t *v2;

  if (MTDisplayTypeToPersistentStringMap_inverted_onceToken != -1)
    dispatch_once(&MTDisplayTypeToPersistentStringMap_inverted_onceToken, &__block_literal_global_367);
  v2 = &MTDisplayTypeToPersistentStringMap_inverted_invertedMap;
  if (!a1)
    v2 = &MTDisplayTypeToPersistentStringMap_inverted_map;
  return (id)*v2;
}

uint64_t MTDisplayTypeFromPersistentString(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  MTDisplayTypeToPersistentStringMap_inverted(1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = objc_msgSend(v3, "unsignedIntegerValue");
  }
  else
  {
    if (!objc_msgSend(v1, "length"))
    {
      _MTLogCategoryDefault();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        v7 = 138412290;
        v8 = v1;
        _os_log_impl(&dword_1A904E000, v5, OS_LOG_TYPE_ERROR, "Invalid MTPodcastDisplayType encountered (%@)", (uint8_t *)&v7, 0xCu);
      }

    }
    v4 = 0;
  }

  return v4;
}

void sub_1A90EE1F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A90EE314(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1A90EE3B0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1A90EEFD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id getkSymptomDiagnosticReplySuccess()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getkSymptomDiagnosticReplySuccessSymbolLoc_ptr;
  v7 = getkSymptomDiagnosticReplySuccessSymbolLoc_ptr;
  if (!getkSymptomDiagnosticReplySuccessSymbolLoc_ptr)
  {
    v1 = (void *)SymptomDiagnosticReporterLibrary();
    v0 = (id *)dlsym(v1, "kSymptomDiagnosticReplySuccess");
    v5[3] = (uint64_t)v0;
    getkSymptomDiagnosticReplySuccessSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)getkSymptomDiagnosticReplySuccess_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

void sub_1A90EFA6C(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void appendTextFromNodeRecursively(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t i;
  id v6;

  v3 = a2;
  if (a1)
  {
    v6 = v3;
    if (*(_DWORD *)(a1 + 8) == 3)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", *(_QWORD *)(a1 + 80));
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "appendString:", v4);

      v3 = v6;
    }
    for (i = *(_QWORD *)(a1 + 24); i; i = *(_QWORD *)(i + 48))
    {
      appendTextFromNodeRecursively(i, v6);
      v3 = v6;
    }
  }

}

void sub_1A90F24E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1A90F26A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A90F2844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ReachabilityCallback(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  id v4;
  id v5;

  v3 = (void *)MEMORY[0x1E0CB37D0];
  v4 = a3;
  objc_msgSend(v3, "defaultCenter");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "postNotificationName:object:", kReachabilityChangedNotification, v4);

}

void sub_1A90FDD50(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1A90FF214(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A90FF280(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A90FF660(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

const __CFString *PFTTMLDictionaryKeyForTimeAttribute(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("dur");
  if (a1 == 1)
    v1 = CFSTR("begin");
  if (a1 == 2)
    return CFSTR("end");
  else
    return v1;
}

const __CFString *PFTTMLDictionaryKeyForStringAttribute(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("ttm:agent");
  if (a1 == 1)
    v1 = CFSTR("xml:id");
  if (a1 == 2)
    return CFSTR("ttm:name");
  else
    return v1;
}

uint64_t PFTTMLTypeForName(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("span")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("ttm:agent")) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("ttm:name")) & 1) != 0)
  {
    v2 = 4;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("p")) & 1) != 0)
  {
    v2 = 1;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("body")))
  {
    v2 = 0;
  }
  else
  {
    v2 = 5;
  }

  return v2;
}

void sub_1A90FFB40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A90FFC78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A90FFDF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A91014DC(_Unwind_Exception *exception_object, int a2)
{
  uint64_t v2;
  id v3;

  if (a2 == 1)
  {
    v3 = objc_begin_catch(exception_object);
    (*(void (**)(void))(*(_QWORD *)(v2 + 48) + 16))();

    objc_end_catch();
    JUMPOUT(0x1A91014ACLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A9101E74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t PFIsSiriDonationEnabled()
{
  if (+[PFClientUtil isRunningOnHomepod](PFClientUtil, "isRunningOnHomepod"))
    return os_feature_enabled_siri_donation_homepod();
  else
    return 1;
}

void sub_1A9104780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__8(uint64_t a1)
{

}

Class __getASDSubscriptionEntitlementsClass_block_invoke(uint64_t a1)
{
  Class result;

  AppStoreDaemonLibrary();
  result = objc_getClass("ASDSubscriptionEntitlements");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getASDSubscriptionEntitlementsClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getASDSubscriptionEntitlementsClass_block_invoke_cold_1();
    return (Class)AppStoreDaemonLibrary();
  }
  return result;
}

uint64_t AppStoreDaemonLibrary()
{
  uint64_t v0;
  void *v2;

  if (!AppStoreDaemonLibraryCore_frameworkLibrary)
    AppStoreDaemonLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = AppStoreDaemonLibraryCore_frameworkLibrary;
  if (!AppStoreDaemonLibraryCore_frameworkLibrary)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

void sub_1A9105C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9(uint64_t a1)
{

}

uint64_t MTPlaybackContinuousPlaybackEnabled()
{
  void *v1;
  uint64_t v2;

  if (+[PFClientUtil isRunningOnHomepod](PFClientUtil, "isRunningOnHomepod"))
    return 1;
  objc_msgSend(MEMORY[0x1E0C99EA0], "_applePodcastsFoundationSharedUserDefaults");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "BOOLForKey:", CFSTR("MTContinuousPlaybackEnabled"));

  return v2;
}

void sub_1A910614C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1A9106570(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id jsonSerializableValueForCoreFoundationType(void *a1, void *a2)
{
  __SecTrust *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  OSStatus v10;
  CFArrayRef v11;
  void *v12;
  OSStatus v13;
  __CFString *v14;
  CFDataRef v15;
  CFDataRef v16;
  void *v17;
  __SecKey *v18;
  CFDataRef v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  __SecKey *v24;
  void *v25;
  CFDictionaryRef v26;
  void *v27;
  CFErrorRef error;
  CFStringRef commonName;
  CFArrayRef emailAddresses;
  const __CFString *v32;
  _QWORD v33[2];

  v33[1] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (!objc_msgSend(v4, "isEqualToString:", CFSTR("SecCertificate")))
  {
    if (!objc_msgSend(v4, "isEqualToString:", CFSTR("SecTrust")))
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Non-serializable type '%@'"), v4);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_27;
    }
    v22 = v4;
    v6 = v22;
    if (v22)
    {
      v32 = CFSTR("cfTypeName");
      v33[0] = v22;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v33, &v32, 1);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = (void *)objc_msgSend(v23, "mutableCopy");

      v24 = SecTrustCopyKey(v3);
      emailAddresses = 0;
      v9 = SecKeyCopyExternalRepresentation(v24, &emailAddresses);
      CFRelease(v24);
      if (!emailAddresses)
      {
        jsonSerializableValueForValue(v9);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setValue:forKey:", v25, CFSTR("serialNumberData"));

      }
      v26 = SecTrustCopyResult(v3);
      v11 = v26;
      if (v26)
      {
        jsonSerializableValueForValue(v26);
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setValue:forKey:", v27, CFSTR("trustResult"));

      }
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithDictionary:", v8);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_23;
    }
LABEL_24:
    v21 = 0;
    goto LABEL_25;
  }
  v5 = v4;
  v6 = v5;
  if (!v5)
    goto LABEL_24;
  v32 = CFSTR("cfTypeName");
  v33[0] = v5;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v33, &v32, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_msgSend(v7, "mutableCopy");

  v9 = (void *)SecCertificateCopySubjectSummary(v3);
  if (v9)
    objc_msgSend(v8, "setValue:forKey:", v9, CFSTR("subjectSummary"));
  emailAddresses = 0;
  v10 = SecCertificateCopyEmailAddresses(v3, &emailAddresses);
  v11 = emailAddresses;
  if (!v10 && emailAddresses)
  {
    jsonSerializableValueForValue(emailAddresses);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setValue:forKey:", v12, CFSTR("emailAddresses"));

  }
  commonName = 0;
  v13 = SecCertificateCopyCommonName(v3, &commonName);
  v14 = (__CFString *)commonName;
  if (!v13 && commonName)
    objc_msgSend(v8, "setValue:forKey:", commonName, CFSTR("commonName"));
  error = 0;
  v15 = SecCertificateCopySerialNumberData(v3, &error);
  v16 = v15;
  if (!error)
  {
    jsonSerializableValueForValue(v15);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setValue:forKey:", v17, CFSTR("serialNumberData"));

  }
  v18 = SecCertificateCopyKey(v3);
  v19 = SecKeyCopyExternalRepresentation(v18, &error);
  CFRelease(v18);
  if (!error)
  {
    jsonSerializableValueForValue(v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setValue:forKey:", v20, CFSTR("publicKeyData"));

  }
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithDictionary:", v8);
  v21 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_23:
LABEL_25:

LABEL_27:
  return v21;
}

void sub_1A910D328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A910D480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SignpostTrace.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A93F762C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SignpostTrace.signpostID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SignpostTrace(0) + 20);
  v4 = sub_1A93F75FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SignpostTrace.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SignpostTrace(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SignpostTrace.start(interval:context:)@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v25;
  uint64_t v26;

  v7 = v6;
  v26 = a4;
  v13 = sub_1A93F75FC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A93F762C();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v21 + 16))(v20, v7, v18);
  v22 = type metadata accessor for SignpostTrace(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v7 + *(int *)(v22 + 20), v13);
  a6[3] = type metadata accessor for SignpostTrace.Interval(0);
  a6[4] = (uint64_t)&protocol witness table for SignpostTrace.Interval;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a6);
  swift_bridgeObjectRetain();
  return SignpostTrace.Interval.init(starting:domain:identifier:with:)(a1, a2, a3, (uint64_t)v20, (uint64_t)v16, v26, a5, (uint64_t)boxed_opaque_existential_1);
}

uint64_t SignpostTrace.Interval.state.getter()
{
  return swift_retain();
}

uint64_t SignpostTrace.Interval.name.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t SignpostTrace.Interval.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SignpostTrace.Interval(0) + 24);
  v4 = sub_1A93F762C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SignpostTrace.Interval.init(name:domain:state:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(a6 + 8) = a1;
  *(_QWORD *)(a6 + 16) = a2;
  *(_BYTE *)(a6 + 24) = a3;
  *(_QWORD *)a6 = a5;
  v7 = a6 + *(int *)(type metadata accessor for SignpostTrace.Interval(0) + 24);
  v8 = sub_1A93F762C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a4, v8);
}

uint64_t sub_1A910EAEC(uint64_t a1, uint64_t a2)
{
  return sub_1A910F6F8(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

id sub_1A910EB04()
{
  id *v0;

  return *v0;
}

uint64_t sub_1A910EB0C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

_QWORD *sub_1A910EB14@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1A910EB24(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void sub_1A910EB30(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

BOOL sub_1A910EB38(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A910EB4C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

_QWORD *sub_1A910EB60@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1A910EB74(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1A910EBA4(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1A910EBB8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

uint64_t sub_1A910EBCC(uint64_t a1, uint64_t a2)
{
  return sub_1A910F6F8(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1A910EBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1AF414014](&unk_1A9405430, a3);
  return sub_1A93F750C();
}

uint64_t sub_1A910EC30(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1A93F8028();
  *a2 = 0;
  return result;
}

uint64_t sub_1A910ECA4(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1A93F8034();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1A910ED20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1A93F8040();
  v2 = sub_1A93F8010();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A910ED60(uint64_t a1)
{
  MEMORY[0x1AF414014](&unk_1A94048C8, a1);
  return sub_1A93F7524();
}

uint64_t sub_1A910ED9C()
{
  MEMORY[0x1AF414014](&unk_1A94048C8);
  return sub_1A93F7518();
}

uint64_t sub_1A910EDE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A910F584(a1, a2, a3, (uint64_t)&unk_1A94048C8);
}

BOOL sub_1A910EDF0(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A910EE04()
{
  sub_1A93F92DC();
  sub_1A93F930C();
  return sub_1A93F9324();
}

uint64_t sub_1A910EE48()
{
  return sub_1A93F930C();
}

uint64_t sub_1A910EE70()
{
  sub_1A93F92DC();
  sub_1A93F930C();
  return sub_1A93F9324();
}

void sub_1A910EEB0(_WORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1A910EEBC()
{
  return sub_1A93F8040();
}

uint64_t sub_1A910EECC()
{
  sub_1A9066CA8((unint64_t *)&qword_1ED2A5A98, (uint64_t (*)(uint64_t))type metadata accessor for AMSError, (uint64_t)&unk_1A9405320);
  return sub_1A93F7110();
}

uint64_t sub_1A910EF0C()
{
  sub_1A9066CA8((unint64_t *)&qword_1ED2A5A98, (uint64_t (*)(uint64_t))type metadata accessor for AMSError, (uint64_t)&unk_1A9405320);
  return sub_1A93F70EC();
}

uint64_t sub_1A910EF4C(void *a1)
{
  id v2;

  sub_1A9066CA8((unint64_t *)&qword_1ED2A5A98, (uint64_t (*)(uint64_t))type metadata accessor for AMSError, (uint64_t)&unk_1A9405320);
  v2 = a1;
  return sub_1A93F70E0();
}

uint64_t sub_1A910EFB0()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_1A93F8A54();

  return v2;
}

uint64_t sub_1A910EFE4()
{
  sub_1A9066CA8((unint64_t *)&qword_1ED2A5A98, (uint64_t (*)(uint64_t))type metadata accessor for AMSError, (uint64_t)&unk_1A9405320);
  return sub_1A93F7104();
}

uint64_t sub_1A910F034()
{
  sub_1A93F92DC();
  sub_1A93F7FB0();
  return sub_1A93F9324();
}

_QWORD *sub_1A910F090@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A910F09C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1A93F8040();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A910F0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1AF414014](&unk_1A94048C8, a3);
  return sub_1A93F750C();
}

void sub_1A910F110(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1A910F11C(uint64_t a1)
{
  MEMORY[0x1AF414014](&unk_1A94049DC, a1);
  return sub_1A93F7524();
}

uint64_t sub_1A910F158()
{
  MEMORY[0x1AF414014](&unk_1A94049DC);
  return sub_1A93F7518();
}

uint64_t sub_1A910F1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A910F584(a1, a2, a3, (uint64_t)&unk_1A94049DC);
}

_WORD *sub_1A910F1AC@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A910F1B8()
{
  sub_1A9066CA8(&qword_1EEAB7438, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1A9404D34);
  sub_1A9066CA8(&qword_1EEAB7440, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1A9404CD4);
  return sub_1A93F8EB0();
}

uint64_t sub_1A910F23C()
{
  sub_1A9066CA8(&qword_1ED2A5A90, (uint64_t (*)(uint64_t))type metadata accessor for AMSError, (uint64_t)&unk_1A94052DC);
  return sub_1A93F9270();
}

uint64_t sub_1A910F27C()
{
  sub_1A9066CA8(&qword_1ED2A5A90, (uint64_t (*)(uint64_t))type metadata accessor for AMSError, (uint64_t)&unk_1A94052DC);
  return sub_1A93F9264();
}

uint64_t sub_1A910F2BC()
{
  sub_1A9066CA8((unint64_t *)&qword_1ED2A5A98, (uint64_t (*)(uint64_t))type metadata accessor for AMSError, (uint64_t)&unk_1A9405320);
  return sub_1A93F70D4();
}

uint64_t sub_1A910F2FC()
{
  sub_1A9066CA8((unint64_t *)&qword_1ED2A5A98, (uint64_t (*)(uint64_t))type metadata accessor for AMSError, (uint64_t)&unk_1A9405320);
  return sub_1A93F70F8();
}

BOOL sub_1A910F354(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A910F368()
{
  sub_1A9066CA8(&qword_1EEAB7448, (uint64_t (*)(uint64_t))type metadata accessor for PFAnalyticsEventName, (uint64_t)&unk_1A9404BA0);
  sub_1A9066CA8(&qword_1EEAB7450, (uint64_t (*)(uint64_t))type metadata accessor for PFAnalyticsEventName, (uint64_t)&unk_1A9404B40);
  return sub_1A93F8EB0();
}

uint64_t sub_1A910F3EC()
{
  sub_1A9066CA8(&qword_1EEAB7458, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1A94047FC);
  sub_1A9066CA8(&qword_1EEAB7460, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1A940479C);
  return sub_1A93F8EB0();
}

uint64_t sub_1A910F470()
{
  sub_1A9066CA8((unint64_t *)&unk_1ED2A93F8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1A940545C);
  sub_1A9066CA8(&qword_1EEAB75E0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1A94050C4);
  return sub_1A93F8EB0();
}

uint64_t sub_1A910F4F4(uint64_t a1)
{
  MEMORY[0x1AF414014](&unk_1A9405430, a1);
  return sub_1A93F7524();
}

uint64_t sub_1A910F530()
{
  MEMORY[0x1AF414014](&unk_1A9405430);
  return sub_1A93F7518();
}

uint64_t sub_1A910F578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A910F584(a1, a2, a3, (uint64_t)&unk_1A9405430);
}

uint64_t sub_1A910F584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A93F92DC();
  MEMORY[0x1AF414014](a4, a2);
  sub_1A93F7518();
  return sub_1A93F9324();
}

uint64_t sub_1A910F5E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A93F8010();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A910F628()
{
  sub_1A9066CA8((unint64_t *)&qword_1EEAB75E8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1A94054A0);
  sub_1A9066CA8(&qword_1EEAB75F0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1A9404FB0);
  return sub_1A93F8EB0();
}

uint64_t sub_1A910F6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1AF414014](&unk_1A94049DC, a3);
  return sub_1A93F750C();
}

uint64_t sub_1A910F6F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1A93F8040();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A910F734()
{
  sub_1A93F8040();
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A910F774()
{
  uint64_t v0;

  sub_1A93F8040();
  sub_1A93F92DC();
  sub_1A93F7FBC();
  v0 = sub_1A93F9324();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A910F7E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1A93F8040();
  v2 = v1;
  if (v0 == sub_1A93F8040() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A910F86C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (result)
    *a2 = result;
  else
    __break(1u);
  return result;
}

char *sub_1A910F87C()
{
  char v1;

  return &v1;
}

void sub_1A910F88C(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13;

  v13 = sub_1A93F75E4();
  _os_signpost_emit_with_name_impl(&dword_1A904E000, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t sub_1A910F90C(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1A910F91C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1A910F950()
{
  return 1;
}

_BYTE **sub_1A910F958(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_1A910F968(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1A906436C(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1A93F8AA8();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t initializeWithCopy for SignpostTrace(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_1A93F762C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SignpostTrace(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = sub_1A93F762C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SignpostTrace(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A93F762C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for SignpostTrace(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1A93F762C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SignpostTrace()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A910FC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1A93F762C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1A93F75FC();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SignpostTrace()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A910FD18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1A93F762C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1A93F75FC();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t initializeWithCopy for SignpostTrace.Interval(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1A93F762C();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for SignpostTrace.Interval(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1A93F762C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for SignpostTrace.Interval(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1A93F762C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for SignpostTrace.Interval(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1A93F762C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SignpostTrace.Interval()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A910FFC0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1A93F762C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SignpostTrace.Interval()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1A9110048(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1A93F762C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1ED2A5B48);
}

void type metadata accessor for MTPodcastDeletePlayed(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB72C0);
}

void type metadata accessor for MTPodcastHidesPlayedEpisodes(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB72C8);
}

void type metadata accessor for MTPodcastShowType(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB72D0);
}

void type metadata accessor for PFAnalyticsEventName(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB72D8);
}

void type metadata accessor for CFRunLoopSource(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB72E0);
}

void type metadata accessor for CFRunLoop(uint64_t a1)
{
  sub_1A9084FF4(a1, (unint64_t *)&unk_1EEAB72E8);
}

void type metadata accessor for DirectoryEnumerationOptions(uint64_t a1)
{
  sub_1A9084FF4(a1, (unint64_t *)&unk_1EEAB72F8);
}

void type metadata accessor for MTFeedUpdateSource(uint64_t a1)
{
  sub_1A9084FF4(a1, qword_1ED2AA1A0);
}

void type metadata accessor for MTCacheDeleteUrgency(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB7308);
}

void type metadata accessor for CachePolicy(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB7310);
}

__n128 __swift_memcpy48_4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1A91101AC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A91101CC(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CMTimeRange(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB7318);
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_1A9110224(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A9110244(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for os_unfair_recursive_lock_s(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB7320);
}

void type metadata accessor for MTBookmarksSyncType(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB7328);
}

void type metadata accessor for MTSubscriptionSyncType(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB7330);
}

void type metadata accessor for MTPodcastSkipDuration(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB7338);
}

void type metadata accessor for MTEpisodeTypeFilter(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB7340);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB7348);
}

void type metadata accessor for MTEpisodeEntitlementState(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB7350);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1ED2ABCB8);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_1A9084FF4(a1, (unint64_t *)&unk_1ED2A41A0);
}

void type metadata accessor for MTEpisodePubDateLimit(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1ED2A9FC8);
}

void type metadata accessor for MTPodcastEpisodeLimit(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1ED2A9460);
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1A9084FF4(a1, (unint64_t *)&unk_1EEAB7358);
}

uint64_t sub_1A911035C()
{
  return sub_1A9066CA8(&qword_1EEAB73C8, (uint64_t (*)(uint64_t))type metadata accessor for MTPodcastEpisodeLimit, (uint64_t)&unk_1A9404658);
}

uint64_t sub_1A9110388()
{
  return sub_1A9066CA8(&qword_1EEAB73D0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1A9404760);
}

uint64_t sub_1A91103B4()
{
  return sub_1A9066CA8(&qword_1EEAB73D8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1A9404734);
}

uint64_t sub_1A91103E0()
{
  return sub_1A9066CA8((unint64_t *)&unk_1EEAB73E0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1A94047D0);
}

uint64_t sub_1A911040C()
{
  return sub_1A9066CA8(&qword_1ED2ABCA8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1A9404DC4);
}

uint64_t sub_1A9110438()
{
  return sub_1A9066CA8(&qword_1EEAB73F0, (uint64_t (*)(uint64_t))type metadata accessor for CGColor, (uint64_t)&unk_1A940496C);
}

uint64_t sub_1A9110464()
{
  return sub_1A9066CA8(&qword_1EEAB73F8, (uint64_t (*)(uint64_t))type metadata accessor for CGColor, (uint64_t)&unk_1A9404998);
}

uint64_t sub_1A9110490()
{
  return sub_1A9066CA8(&qword_1EEAB7400, (uint64_t (*)(uint64_t))type metadata accessor for PFAnalyticsEventName, (uint64_t)&unk_1A9404B04);
}

uint64_t sub_1A91104BC()
{
  return sub_1A9066CA8(&qword_1EEAB7408, (uint64_t (*)(uint64_t))type metadata accessor for PFAnalyticsEventName, (uint64_t)&unk_1A9404AD8);
}

uint64_t sub_1A91104E8()
{
  return sub_1A9066CA8(&qword_1EEAB7410, (uint64_t (*)(uint64_t))type metadata accessor for PFAnalyticsEventName, (uint64_t)&unk_1A9404B74);
}

uint64_t sub_1A9110514()
{
  return sub_1A9066CA8(&qword_1EEAB7418, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1A9404C98);
}

uint64_t sub_1A9110540()
{
  return sub_1A9066CA8(&qword_1EEAB7420, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1A9404C6C);
}

uint64_t sub_1A911056C()
{
  return sub_1A9066CA8((unint64_t *)&unk_1EEAB7428, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1A9404D08);
}

uint64_t sub_1A9110598()
{
  return sub_1A9066CA8(&qword_1ED2ABCB0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1A940489C);
}

uint64_t sub_1A91105C4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC940);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

void type metadata accessor for AMSError(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1ED2A5AD8);
}

void type metadata accessor for CGColorSpace(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB7530);
}

void type metadata accessor for CMBlockBuffer(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB7538);
}

void type metadata accessor for CMSampleBuffer(uint64_t a1)
{
  sub_1A9084FF4(a1, (unint64_t *)&unk_1EEAB7540);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1ED2A9418);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_1A9084FF4(a1, (unint64_t *)&unk_1EEAB7550);
}

uint64_t sub_1A9110788(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A91107A8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_1A91107E4(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A9110804(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB7560);
}

uint64_t sub_1A9110844()
{
  return sub_1A9066CA8(&qword_1EEAB7568, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1A9404F74);
}

uint64_t sub_1A9110870()
{
  return sub_1A9066CA8(&qword_1EEAB7570, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1A9404F48);
}

uint64_t sub_1A911089C()
{
  return sub_1A9066CA8(&qword_1EEAB7578, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1A9405088);
}

uint64_t sub_1A91108C8()
{
  return sub_1A9066CA8(&qword_1EEAB7580, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1A940505C);
}

uint64_t sub_1A91108F4()
{
  return sub_1A9066CA8((unint64_t *)&unk_1EEAB7588, (uint64_t (*)(uint64_t))type metadata accessor for CGColorSpace, (uint64_t)&unk_1A9405170);
}

uint64_t sub_1A9110920()
{
  return sub_1A9066CA8(&qword_1ED2A5AC0, (uint64_t (*)(uint64_t))type metadata accessor for AMSError, (uint64_t)&unk_1A94051F4);
}

uint64_t sub_1A911094C()
{
  return sub_1A9066CA8((unint64_t *)&unk_1ED2A5AC8, (uint64_t (*)(uint64_t))type metadata accessor for AMSError, (uint64_t)&unk_1A9405220);
}

uint64_t sub_1A9110978()
{
  return sub_1A9066CA8(&qword_1ED2A5A90, (uint64_t (*)(uint64_t))type metadata accessor for AMSError, (uint64_t)&unk_1A94052DC);
}

uint64_t sub_1A91109A4()
{
  return sub_1A9066CA8(&qword_1ED2A5AA8, (uint64_t (*)(uint64_t))type metadata accessor for AMSError, (uint64_t)&unk_1A94052A8);
}

uint64_t sub_1A91109D0()
{
  return sub_1A9066CA8((unint64_t *)&unk_1ED2A5AB0, (uint64_t (*)(uint64_t))type metadata accessor for AMSError, (uint64_t)&unk_1A9405264);
}

uint64_t sub_1A91109FC()
{
  return sub_1A9066CA8(&qword_1EEAB7598, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1A94053C8);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_1A9084FF4(a1, &qword_1EEAB75F8);
}

uint64_t sub_1A9110A3C()
{
  return sub_1A9066CA8((unint64_t *)&unk_1EEAB75A0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1A940538C);
}

uint64_t sub_1A9110A6C()
{
  return sub_1A9066CA8((unint64_t *)&unk_1EEAB75B0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1A9405404);
}

uint64_t sub_1A9110A98()
{
  return sub_1A9066CA8((unint64_t *)&qword_1ED2A5A98, (uint64_t (*)(uint64_t))type metadata accessor for AMSError, (uint64_t)&unk_1A9405320);
}

uint64_t sub_1A9110AC4()
{
  return sub_1A9066CA8((unint64_t *)&unk_1EEAB75C0, (uint64_t (*)(uint64_t))type metadata accessor for CGColorSpace, (uint64_t)&unk_1A940519C);
}

uint64_t sub_1A9110AF0()
{
  return sub_1A9066CA8((unint64_t *)&unk_1ED2A9408, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1A94050F8);
}

uint64_t sub_1A9110B1C()
{
  return sub_1A9066CA8((unint64_t *)&unk_1EEAB75D0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1A9404FE4);
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_1A9084FF4(a1, (unint64_t *)&unk_1EEAB7600);
}

void sub_1A9110B70(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  sub_1A910F88C(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1A9110B9C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A3EA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::Bool __swiftcall NSURL.isPackagedMedia()()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v1 = objc_msgSend(v0, sel_pathExtension);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1A93F8040();
    v5 = v4;

    if (v3 == 0x676B70766F6DLL && v5 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v1) = 1;
    }
    else
    {
      v7 = sub_1A93F90C0();
      swift_bridgeObjectRelease();
      LOBYTE(v1) = v7 & 1;
    }
  }
  return (char)v1;
}

Swift::Bool __swiftcall URL.isHLSPlaylist()()
{
  void *v0;
  unsigned __int8 v1;

  v0 = (void *)sub_1A93F71A0();
  v1 = objc_msgSend(v0, sel_isHLSPlaylist);

  return v1;
}

Swift::Bool __swiftcall URL.isPackagedMedia()()
{
  void *v0;
  unsigned __int8 v1;

  v0 = (void *)sub_1A93F71A0();
  v1 = objc_msgSend(v0, sel_isPackagedMedia);

  return v1;
}

id sub_1A9110CF8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SubscriptionController()), sel_init);
  qword_1EEAB7730 = (uint64_t)result;
  return result;
}

id SubscriptionController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static SubscriptionController.sharedInstance.getter()
{
  if (qword_1EEAB6CB0 != -1)
    swift_once();
  return (id)qword_1EEAB7730;
}

uint64_t static SubscriptionController.alreadySubscribedErrorCode.getter()
{
  return -1001;
}

unint64_t static SubscriptionController.subscriptionControllerErrorDomain.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1A9110E1C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, void *, uint64_t, uint64_t, void *);
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  __int128 v40;
  void *v41;
  uint64_t (**v42)(uint64_t, void *, uint64_t, uint64_t, void *);
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  void *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  char v65;
  char v66;
  char v67;
  char v68;
  _BYTE v69[48];
  __int128 v70;
  uint64_t v71;

  v57 = a4;
  v63 = a3;
  v64 = a5;
  v55 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MediaRequest.Params();
  v11 = *(_QWORD *)(v10 - 8);
  v59 = *(_QWORD *)(v11 + 64);
  v60 = v11;
  MEMORY[0x1E0C80A78](v10);
  v58 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v61 = (uint64_t)&v52 - v14;
  *(_QWORD *)v69 = 1;
  memset(&v69[8], 0, 32);
  v69[40] = 4;
  v68 = 1;
  v67 = 1;
  v66 = 4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v15 + 32) = a1;
  *(_QWORD *)(v15 + 40) = a2;
  v62 = a2;
  v65 = 1;
  v16 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 1, 1, v16);
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x1E0DEE9D8];
  v54 = sub_1A9112880(MEMORY[0x1E0DEE9D8], &qword_1ED2A5BD0, (uint64_t (*)(_BYTE *))sub_1A912DD74);
  v18 = sub_1A9112880(v17, &qword_1ED2A5BD0, (uint64_t (*)(_BYTE *))sub_1A912DD74);
  sub_1A911273C(v17);
  v20 = v19;
  v21 = sub_1A9112880(v17, &qword_1ED2AC4C0, sub_1A912DE60);
  v22 = sub_1A9112880(v17, &qword_1ED2AC4C0, sub_1A912DE60);
  v23 = sub_1A9112880(v17, &qword_1EEAB78E0, (uint64_t (*)(_BYTE *))sub_1A912DE90);
  *((_QWORD *)&v51 + 1) = sub_1A9112880(v17, &qword_1EEAB7780, sub_1A912DE60);
  *(_QWORD *)&v51 = v23;
  *(_QWORD *)&v50 = v22;
  *((_QWORD *)&v50 + 1) = v17;
  *(_QWORD *)&v49 = v17;
  *((_QWORD *)&v49 + 1) = v21;
  v24 = v61;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((__int128 *)v69, &v68, &v67, &v66, v54, v18, v20, v17, v61, v49, v50, v17, v15, &v65, 0, 1, v51, 0, 1,
    0,
    (uint64_t)v9,
    0,
    0,
    0,
    0,
    0,
    v17,
    0,
    0,
    2);
  v53 = *(void **)(v56 + OBJC_IVAR___MTSubscriptionController_requestController);
  v25 = swift_allocObject();
  v54 = v25;
  swift_unknownObjectWeakInit();
  v26 = (_QWORD *)swift_allocObject();
  v27 = v55;
  v26[2] = v25;
  v26[3] = v27;
  v28 = v57;
  v26[4] = v62;
  v26[5] = v28;
  v29 = v63;
  v26[6] = v64;
  v26[7] = v29;
  v30 = swift_allocObject();
  v57 = v30;
  swift_unknownObjectWeakInit();
  v31 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((_QWORD *)v31 + 2) = v30;
  *((_QWORD *)v31 + 3) = sub_1A9114B44;
  *((_QWORD *)v31 + 4) = v26;
  sub_1A93F9330();
  v32 = v58;
  sub_1A9114B88(v24, v58);
  v33 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  v34 = (v59 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 79) & 0xFFFFFFFFFFFFFFF8;
  v37 = swift_allocObject();
  sub_1A9116174(v32, v37 + v33, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  *(_QWORD *)(v37 + v34) = v17;
  v38 = v37 + v35;
  *(_QWORD *)(v38 + 64) = v71;
  v39 = v70;
  *(_OWORD *)(v38 + 32) = *(_OWORD *)&v69[32];
  *(_OWORD *)(v38 + 48) = v39;
  v40 = *(_OWORD *)&v69[16];
  *(_OWORD *)v38 = *(_OWORD *)v69;
  *(_OWORD *)(v38 + 16) = v40;
  v41 = v53;
  *(_QWORD *)(v37 + v36) = v53;
  v42 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v37 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v42 = sub_1A9114B7C;
  v42[1] = v31;
  v43 = v63;
  v44 = v63;
  swift_retain();
  swift_retain();
  swift_retain();
  v45 = v41;
  swift_bridgeObjectRetain();
  v46 = v45;
  swift_retain();
  swift_retain();
  v47 = v61;
  sub_1A9195C30(v61, v43, (uint64_t)sub_1A9114C2C, v37);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1A9114C30(v47);
  return swift_release();
}

void sub_1A91112E4(unint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(char *), uint64_t a10, _QWORD *a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  void (*v31)(unint64_t, unint64_t, _QWORD *);
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD *);
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(char *);
  void (*v46)(char *);
  void (*v47)(char *);
  id v48;
  void *v49;
  char *v50;
  NSObject *v51;
  uint64_t v52;
  uint8_t *v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, void *, uint64_t, uint64_t, void *);
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  __int128 v80;
  __int128 v81;
  void *v82;
  uint64_t (**v83)(uint64_t, void *, uint64_t, uint64_t, void *);
  id v84;
  id v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  void (*v90)(unint64_t, unint64_t, _QWORD *);
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  void (*v98)(char *);
  unint64_t v99;
  char *v100;
  char *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  char v107;
  _BYTE v108[48];
  __int128 v109;
  uint64_t v110;

  v103 = a7;
  v98 = a2;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v15);
  v97 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MediaRequest.Params();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v90 - v21;
  v102 = (_QWORD *)sub_1A93F7698();
  v23 = *(v102 - 1);
  MEMORY[0x1E0C80A78](v102);
  v99 = (unint64_t)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v90 - v26;
  swift_beginAccess();
  v28 = (char *)MEMORY[0x1AF41420C](a6 + 16);
  if (!v28)
    return;
  v93 = v18;
  v94 = v19;
  v95 = (uint64_t)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = v22;
  v101 = v28;
  if (qword_1EEAB6E78 != -1)
    swift_once();
  v29 = v102;
  v30 = __swift_project_value_buffer((uint64_t)v102, (uint64_t)qword_1EEABA888);
  swift_beginAccess();
  v31 = *(void (**)(unint64_t, unint64_t, _QWORD *))(v23 + 16);
  v91 = v30;
  v90 = v31;
  v31((unint64_t)v27, v30, v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32 = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = a5;
  v34 = sub_1A93F7674();
  v35 = sub_1A93F87B4();
  v36 = os_log_type_enabled(v34, v35);
  v96 = a8;
  if (v36)
  {
    v37 = swift_slowAlloc();
    v92 = swift_slowAlloc();
    *(_QWORD *)v108 = v92;
    *(_DWORD *)v37 = 136315650;
    swift_bridgeObjectRetain();
    v104 = sub_1A906436C(v103, a8, (uint64_t *)v108);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 12) = 2048;
    if (a1)
    {
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        v38 = sub_1A93F8E5C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v38 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v38 = 0;
    }
    v104 = v38;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 22) = 2080;
    v104 = (uint64_t)a5;
    v40 = a5;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EEAB78E8);
    v41 = sub_1A93F8094();
    v104 = sub_1A906436C(v41, v42, (uint64_t *)v108);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A904E000, v34, v35, "Siri check before following podcast %s. Found %ld podcasts with error %s.", (uint8_t *)v37, 0x20u);
    v43 = v92;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v43, -1, -1);
    MEMORY[0x1AF41411C](v37, -1, -1);

    v39 = *(void (**)(char *, _QWORD *))(v23 + 8);
    v29 = v102;
    v39(v27, v102);
    a8 = v96;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    v39 = *(void (**)(char *, _QWORD *))(v23 + 8);
    v39(v27, v29);
  }
  v44 = v99;
  v45 = v98;
  v46 = a9;
  v98 = a9;
  if (!v45)
  {
LABEL_25:
    v102 = a11;
    *(_QWORD *)v108 = 2;
    memset(&v108[8], 0, 32);
    v108[40] = 4;
    LOBYTE(v104) = 1;
    v107 = 1;
    v106 = 4;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
    v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_1A9405520;
    *(_QWORD *)(v59 + 32) = v103;
    *(_QWORD *)(v59 + 40) = a8;
    v105 = 1;
    v60 = sub_1A93F726C();
    v61 = (uint64_t)v97;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v97, 1, 1, v60);
    swift_bridgeObjectRetain();
    v62 = MEMORY[0x1E0DEE9D8];
    v99 = sub_1A9112880(MEMORY[0x1E0DEE9D8], &qword_1ED2A5BD0, (uint64_t (*)(_BYTE *))sub_1A912DD74);
    v91 = sub_1A9112880(v62, &qword_1ED2A5BD0, (uint64_t (*)(_BYTE *))sub_1A912DD74);
    sub_1A911273C(v62);
    v64 = v63;
    v65 = sub_1A9112880(v62, &qword_1ED2AC4C0, sub_1A912DE60);
    v66 = sub_1A9112880(v62, &qword_1ED2AC4C0, sub_1A912DE60);
    v67 = sub_1A9112880(v62, &qword_1EEAB78E0, (uint64_t (*)(_BYTE *))sub_1A912DE90);
    v92 = a10;
    v68 = v67;
    *((_QWORD *)&v89 + 1) = sub_1A9112880(v62, &qword_1EEAB7780, sub_1A912DE60);
    *(_QWORD *)&v89 = v68;
    *(_QWORD *)&v88 = v66;
    *((_QWORD *)&v88 + 1) = v62;
    *(_QWORD *)&v87 = v62;
    *((_QWORD *)&v87 + 1) = v65;
    v69 = (uint64_t)v100;
    MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((__int128 *)v108, (char *)&v104, &v107, &v106, v99, v91, v64, v62, (uint64_t)v100, v87, v88, v62, v59, &v105, 0, 1, v89, 0, 1,
      0,
      v61,
      0,
      0,
      0,
      0,
      0,
      v62,
      0,
      0,
      2);
    v99 = *(_QWORD *)&v101[OBJC_IVAR___MTSubscriptionController_requestController];
    v70 = (_QWORD *)swift_allocObject();
    v70[2] = v103;
    v70[3] = a8;
    v70[4] = v98;
    v70[5] = a10;
    v71 = swift_allocObject();
    v103 = v71;
    swift_unknownObjectWeakInit();
    v72 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
    *((_QWORD *)v72 + 2) = v71;
    *((_QWORD *)v72 + 3) = sub_1A91161CC;
    *((_QWORD *)v72 + 4) = v70;
    sub_1A93F9330();
    v73 = v95;
    sub_1A9114B88(v69, v95);
    v74 = (*(unsigned __int8 *)(v93 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
    v75 = (v94 + v74 + 7) & 0xFFFFFFFFFFFFFFF8;
    v76 = (v75 + 15) & 0xFFFFFFFFFFFFFFF8;
    v77 = (v76 + 79) & 0xFFFFFFFFFFFFFFF8;
    v78 = swift_allocObject();
    sub_1A9116174(v73, v78 + v74, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
    *(_QWORD *)(v78 + v75) = v62;
    v79 = v78 + v76;
    *(_QWORD *)(v79 + 64) = v110;
    v80 = v109;
    *(_OWORD *)(v79 + 32) = *(_OWORD *)&v108[32];
    *(_OWORD *)(v79 + 48) = v80;
    v81 = *(_OWORD *)&v108[16];
    *(_OWORD *)v79 = *(_OWORD *)v108;
    *(_OWORD *)(v79 + 16) = v81;
    v82 = (void *)v99;
    *(_QWORD *)(v78 + v77) = v99;
    v83 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v78 + ((v77 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v83 = sub_1A91162C4;
    v83[1] = v72;
    v84 = v82;
    swift_bridgeObjectRetain();
    v85 = v84;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v86 = (uint64_t)v100;
    sub_1A9195C30((uint64_t)v100, v102, (uint64_t)sub_1A9114C2C, v78);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1A9114C30(v86);
    return;
  }
  v47 = v45;
  if (objc_msgSend(v47, sel_statusCode) != (id)200 || !a1)
    goto LABEL_24;
  if (!(a1 >> 62))
  {
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_17;
LABEL_24:

    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  v58 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (!v58)
    goto LABEL_24;
LABEL_17:
  if (a5)
    goto LABEL_24;
  v48 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v49 = (void *)sub_1A93F8010();
  v50 = (char *)objc_msgSend(v48, sel_initWithDomain_code_userInfo_, v49, -1001, 0);

  v90(v44, v91, v29);
  swift_bridgeObjectRetain_n();
  v51 = sub_1A93F7674();
  v52 = sub_1A93F87B4();
  if (os_log_type_enabled(v51, (os_log_type_t)v52))
  {
    v53 = (uint8_t *)swift_slowAlloc();
    v54 = swift_slowAlloc();
    *(_QWORD *)v108 = v54;
    v100 = v50;
    *(_DWORD *)v53 = 136315138;
    swift_bridgeObjectRetain();
    v104 = sub_1A906436C(v103, a8, (uint64_t *)v108);
    v46 = v98;
    v50 = v100;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v51, (os_log_type_t)v52, "User is already following podcast %s.", v53, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v54, -1, -1);
    MEMORY[0x1AF41411C](v53, -1, -1);

    v55 = v99;
    v56 = v102;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v55 = v44;
    v56 = v29;
  }
  v39((char *)v55, v56);
  v57 = v50;
  v46(v50);

}

uint64_t sub_1A9111DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, unint64_t a7, uint64_t (*a8)(_QWORD), uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a6;
  v12 = sub_1A93F7698();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EEAB6E78 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v12, (uint64_t)qword_1EEABA888);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  swift_bridgeObjectRetain();
  v17 = a5;
  swift_bridgeObjectRetain();
  v18 = a5;
  v19 = sub_1A93F7674();
  v20 = sub_1A93F87B4();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v28 = a9;
    v22 = v21;
    v23 = swift_slowAlloc();
    v32 = v23;
    *(_DWORD *)v22 = 136315394;
    v29 = a8;
    swift_bridgeObjectRetain();
    v31 = sub_1A906436C(v30, a7, &v32);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2080;
    v31 = (uint64_t)a5;
    v24 = a5;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EEAB78E8);
    v25 = sub_1A93F8094();
    v31 = sub_1A906436C(v25, v26, &v32);
    a8 = v29;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A904E000, v19, v20, "Complete following podcast %s command with error %s.", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v23, -1, -1);
    MEMORY[0x1AF41411C](v22, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return a8(a5);
}

uint64_t sub_1A9112118(uint64_t a1, unint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, void *, uint64_t, uint64_t, void *);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  __int128 v46;
  __int128 v47;
  void *v48;
  uint64_t (**v49)(uint64_t, void *, uint64_t, uint64_t, void *);
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t (*v64)(_QWORD);
  __int128 v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  char v74;
  char v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;

  v71 = a4;
  v8 = sub_1A93F7698();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MediaRequest.Params();
  v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v17);
  v21 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v21 = a1 & 0xFFFFFFFFFFFFLL;
  if (v21)
  {
    v69 = v20;
    v70 = (uint64_t)&v61 - v18;
    v68 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7740);
    inited = swift_initStackObject();
    v67 = v4;
    v23 = inited;
    v65 = xmmword_1A9405520;
    *(_OWORD *)(inited + 16) = xmmword_1A9405520;
    *(_BYTE *)(inited + 32) = 2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = v65;
    *(_QWORD *)(v24 + 32) = a1;
    *(_QWORD *)(v24 + 40) = a2;
    *(_QWORD *)(v23 + 40) = v24;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v65 = sub_1A9113644(v23, &qword_1EEAB78E0, (uint64_t (*)(uint64_t))sub_1A912DF5C);
    *(_QWORD *)&v78 = 0;
    v76 = 0u;
    v77 = 0u;
    BYTE8(v78) = 4;
    v75 = 1;
    v74 = 1;
    v73 = 4;
    v72 = 1;
    v25 = sub_1A93F726C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v14, 1, 1, v25);
    v26 = MEMORY[0x1E0DEE9D8];
    v27 = a2;
    v66 = a2;
    v63 = sub_1A9112880(MEMORY[0x1E0DEE9D8], &qword_1ED2A5BD0, (uint64_t (*)(_BYTE *))sub_1A912DD74);
    v28 = sub_1A9112880(v26, &qword_1ED2A5BD0, (uint64_t (*)(_BYTE *))sub_1A912DD74);
    sub_1A911273C(v26);
    v30 = v29;
    v64 = a3;
    v31 = sub_1A9112880(v26, &qword_1ED2AC4C0, sub_1A912DE60);
    v62 = a1;
    v32 = v31;
    v33 = sub_1A9112880(v26, &qword_1ED2AC4C0, sub_1A912DE60);
    *((_QWORD *)&v60 + 1) = sub_1A9112880(v26, &qword_1EEAB7780, sub_1A912DE60);
    *(_QWORD *)&v60 = v65;
    *(_QWORD *)&v59 = v33;
    *((_QWORD *)&v59 + 1) = v26;
    *(_QWORD *)&v58 = v26;
    *((_QWORD *)&v58 + 1) = v32;
    v34 = v70;
    MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&v76, &v75, &v74, &v73, v63, v28, v30, v26, v70, v58, v59, v26, v26, &v72, 0, 1, v60, 0, 1,
      0,
      (uint64_t)v14,
      0,
      0,
      0,
      0,
      0,
      v26,
      0,
      0,
      2);
    *(_QWORD *)&v65 = *(_QWORD *)(v67 + OBJC_IVAR___MTSubscriptionController_requestController);
    v35 = (_QWORD *)swift_allocObject();
    v36 = v71;
    v35[2] = v64;
    v35[3] = v36;
    v35[4] = v62;
    v35[5] = v27;
    v37 = swift_allocObject();
    v67 = v37;
    swift_unknownObjectWeakInit();
    v38 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
    *((_QWORD *)v38 + 2) = v37;
    *((_QWORD *)v38 + 3) = sub_1A9114C8C;
    *((_QWORD *)v38 + 4) = v35;
    sub_1A93F9330();
    v39 = v68;
    sub_1A9114B88(v34, v68);
    v40 = (*(unsigned __int8 *)(v69 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
    v41 = (v16 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
    v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
    v43 = (v42 + 79) & 0xFFFFFFFFFFFFFFF8;
    v44 = swift_allocObject();
    sub_1A9116174(v39, v44 + v40, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
    *(_QWORD *)(v44 + v41) = v26;
    v45 = v44 + v42;
    *(_QWORD *)(v45 + 64) = v80;
    v46 = v79;
    *(_OWORD *)(v45 + 32) = v78;
    *(_OWORD *)(v45 + 48) = v46;
    v47 = v77;
    *(_OWORD *)v45 = v76;
    *(_OWORD *)(v45 + 16) = v47;
    v48 = (void *)v65;
    *(_QWORD *)(v44 + v43) = v65;
    v49 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v44 + ((v43 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v49 = sub_1A91162C4;
    v49[1] = v38;
    v50 = v48;
    swift_bridgeObjectRetain();
    v51 = v50;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v52 = v70;
    sub_1A9195C30(v70, 0, (uint64_t)sub_1A9114C2C, v44);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return sub_1A9114C30(v52);
  }
  else
  {
    if (qword_1ED2A4288 != -1)
      swift_once();
    v54 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A4268);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v54, v8);
    v55 = sub_1A93F7674();
    v56 = sub_1A93F87B4();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v57 = 0;
      _os_log_impl(&dword_1A904E000, v55, v56, "feedUrl is empty. Not checking MAPI if it exists in the store.", v57, 2u);
      MEMORY[0x1AF41411C](v57, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return a3(0);
  }
}

unint64_t sub_1A9112728(uint64_t a1)
{
  return sub_1A9112880(a1, &qword_1ED2A5BD0, (uint64_t (*)(_BYTE *))sub_1A912DD74);
}

void sub_1A911273C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  unsigned __int8 v12[8];
  uint64_t v13;

  if (*(_QWORD *)(a1 + 16)
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB77B0),
        v2 = (_QWORD *)sub_1A93F8E8C(),
        (v3 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v4 = (_QWORD *)(a1 + 40);
    while (1)
    {
      v5 = *((_BYTE *)v4 - 8);
      v6 = *v4;
      v12[0] = v5;
      v13 = v6;
      sub_1A912DD74(v12);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
      *(_BYTE *)(v2[6] + v7) = v5;
      *(_QWORD *)(v2[7] + 8 * v7) = v6;
      v9 = v2[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v4 += 2;
      v2[2] = v11;
      if (!--v3)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1A9112844(uint64_t a1)
{
  return sub_1A9112880(a1, &qword_1ED2AC4C0, sub_1A912DE60);
}

unint64_t sub_1A9112858(uint64_t a1)
{
  return sub_1A9112880(a1, &qword_1EEAB78E0, (uint64_t (*)(_BYTE *))sub_1A912DE90);
}

unint64_t sub_1A911286C(uint64_t a1)
{
  return sub_1A9112880(a1, &qword_1EEAB7780, sub_1A912DE60);
}

unint64_t sub_1A9112880(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_BYTE *))
{
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _BYTE v15[8];
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = (_QWORD *)sub_1A93F8E8C();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  v7 = (_QWORD *)(a1 + 40);
  while (1)
  {
    v8 = *((_BYTE *)v7 - 8);
    v9 = *v7;
    v15[0] = v8;
    v16 = v9;
    swift_bridgeObjectRetain();
    result = a3(v15);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v5[6] + result) = v8;
    *(_QWORD *)(v5[7] + 8 * result) = v9;
    v12 = v5[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v5[2] = v14;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A9112998(uint64_t a1)
{
  return sub_1A9113644(a1, &qword_1EEAB78E0, (uint64_t (*)(uint64_t))sub_1A912DF5C);
}

unint64_t sub_1A91129AC(uint64_t a1)
{
  return sub_1A9113A50(a1, &qword_1EEAB78D0);
}

unint64_t sub_1A91129B8(uint64_t a1)
{
  return sub_1A9113A50(a1, &qword_1EEAB78C8);
}

unint64_t sub_1A91129C4(uint64_t a1)
{
  return sub_1A9113644(a1, &qword_1ED2AC4C0, (uint64_t (*)(uint64_t))sub_1A912E028);
}

unint64_t sub_1A91129D8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9688);
  v2 = sub_1A93F8E8C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A9062170(v6, (uint64_t)v15, &qword_1ED2A9638);
    result = sub_1A90A597C((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1A908A5DC(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A9112B18(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7770);
  v2 = (_QWORD *)sub_1A93F8E8C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v7 = *(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    sub_1A906A3DC(v7, v8);
    result = sub_1A9094640(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (uint64_t *)(v2[7] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A9112C3C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7790);
  v2 = (_QWORD *)sub_1A93F8E8C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v7 = *(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    sub_1A90D8068(v7, v8);
    result = sub_1A927D890(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (uint64_t *)(v2[7] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A9112D60(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BE8);
  v2 = (_QWORD *)sub_1A93F8E8C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1A9094640(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A9112E70(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABDB0);
  v2 = sub_1A93F8E8C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A9062170(v6, (uint64_t)&v13, &qword_1ED2ABCC0);
    v7 = v13;
    result = sub_1A912E1BC(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1A908A5DC(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A9112F9C(uint64_t a1)
{
  return sub_1A9113644(a1, &qword_1ED2A5BD0, (uint64_t (*)(uint64_t))sub_1A912E244);
}

void sub_1A9112FB0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (*(_QWORD *)(a1 + 16)
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB77B0),
        v2 = (_QWORD *)sub_1A93F8E8C(),
        (v3 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v4 = (_QWORD *)(a1 + 40);
    while (1)
    {
      v5 = *((_BYTE *)v4 - 8);
      v6 = *v4;
      sub_1A912E244(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
      *(_BYTE *)(v2[6] + v7) = v5;
      *(_QWORD *)(v2[7] + 8 * v7) = v6;
      v9 = v2[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v4 += 2;
      v2[2] = v11;
      if (!--v3)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1A91130A8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB77A0);
  v2 = (_QWORD *)sub_1A93F8E8C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_1A912E508((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v5;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A91131B0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7898);
  v2 = (_QWORD *)sub_1A93F8E8C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *((unsigned __int8 *)v4 - 16);
    v7 = *(v4 - 1);
    v6 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1A912E634(v5);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    v10 = (_QWORD *)(v2[7] + 16 * result);
    *v10 = v7;
    v10[1] = v6;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A91132BC(uint64_t a1)
{
  return sub_1A9113A50(a1, &qword_1EEAB7880);
}

unint64_t sub_1A91132C8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7878);
  v2 = (_QWORD *)sub_1A93F8E8C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *((unsigned __int8 *)v4 - 16);
    v7 = *(v4 - 1);
    v6 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1A912E634(v5);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    v10 = (_QWORD *)(v2[7] + 16 * result);
    *v10 = v7;
    v10[1] = v6;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A91133D4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7870);
  v2 = (_QWORD *)sub_1A93F8E8C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *(v4 - 1);
    v6 = *v4;
    v7 = v4[1];
    v8 = v4[2];
    v10 = v4[3];
    v9 = v4[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1A9094640(v5, v6);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v2[6] + 16 * result);
    *v13 = v5;
    v13[1] = v6;
    v14 = (uint64_t *)(v2[7] + 32 * result);
    *v14 = v7;
    v14[1] = v8;
    v14[2] = v10;
    v14[3] = v9;
    v15 = v2[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v2[2] = v17;
    v4 += 6;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A9113510(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF50);
  v2 = (_QWORD *)sub_1A93F8E8C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1A9094640(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A9113630(uint64_t a1)
{
  return sub_1A9113644(a1, &qword_1EEAB7780, (uint64_t (*)(uint64_t))sub_1A912E028);
}

unint64_t sub_1A9113644(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = (_QWORD *)sub_1A93F8E8C();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v8 = *((unsigned __int8 *)v7 - 8);
    v9 = *v7;
    swift_bridgeObjectRetain();
    result = a3(v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v5[6] + result) = v8;
    *(_QWORD *)(v5[7] + 8 * result) = v9;
    v12 = v5[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v5[2] = v14;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A911374C(uint64_t a1)
{
  return sub_1A9113768(a1, &qword_1EEAB7858, &qword_1EEAB7860, (uint64_t (*)(uint64_t *, unint64_t))sub_1A905D4AC);
}

unint64_t sub_1A9113768(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, unint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_1A93F8E8C();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A9062170(v11, (uint64_t)&v20, a3);
    v12 = v20;
    v13 = v21;
    result = sub_1A9094640(v20, v21);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v8[6] + 16 * result);
    *v16 = v12;
    v16[1] = v13;
    result = a4(&v22, v8[7] + 40 * result);
    v17 = v8[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v8[2] = v19;
    v11 += 56;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A91138A4(uint64_t a1)
{
  return sub_1A908A1F0(a1, &qword_1EEAB7778);
}

unint64_t sub_1A91138B0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t result;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t *v30;
  uint64_t (*v31)(char *);

  v30 = a2;
  v31 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_1A93F8E8C();
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  v15 = *(int *)(v8 + 48);
  v16 = a1;
  v17 = v12 + 64;
  v18 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v29[1] = v16;
  v19 = v16 + v18;
  v20 = *(_QWORD *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_1A9062170(v19, (uint64_t)v11, v30);
    result = v31(v11);
    if ((v22 & 1) != 0)
      break;
    v23 = result;
    *(_QWORD *)(v17 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v24 = v13[6];
    v25 = a5(0);
    result = sub_1A9116174((uint64_t)v11, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, a5);
    *(_QWORD *)(v13[7] + 8 * v23) = *(_QWORD *)&v11[v15];
    v26 = v13[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v13[2] = v28;
    v19 += v20;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A9113A44(uint64_t a1)
{
  return sub_1A9113A50(a1, &qword_1EEAB78A0);
}

unint64_t sub_1A9113A50(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_1A93F8E8C();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1A9094640(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A9113B64(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  char v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _OWORD v23[16];
  uint64_t v24;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7808);
  v2 = (_QWORD *)sub_1A93F8E8C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A9062170(v4, (uint64_t)v23, &qword_1EEAB7810);
    result = sub_1A912E8D8(v23);
    if ((v6 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v7 = (_OWORD *)(v2[6] + (result << 8));
    v8 = v23[11];
    v9 = v23[10];
    v10 = v23[9];
    v7[8] = v23[8];
    v7[9] = v10;
    v7[10] = v9;
    v7[11] = v8;
    v11 = v23[7];
    v12 = v23[6];
    v13 = v23[5];
    v7[4] = v23[4];
    v7[5] = v13;
    v7[6] = v12;
    v7[7] = v11;
    v14 = v23[3];
    v15 = v23[2];
    v16 = v23[1];
    *v7 = v23[0];
    v7[1] = v16;
    v7[2] = v15;
    v7[3] = v14;
    v17 = v23[12];
    v18 = v23[13];
    v19 = v23[15];
    v7[14] = v23[14];
    v7[15] = v19;
    v7[12] = v17;
    v7[13] = v18;
    *(_QWORD *)(v2[7] + 8 * result) = v24;
    v20 = v2[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v2[2] = v22;
    v4 += 264;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A9113CD8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7800);
  v2 = (_QWORD *)sub_1A93F8E8C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_retain();
    result = sub_1A912E930((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A9113DE0(uint64_t a1)
{
  return sub_1A9113E10(a1, &qword_1EEAB77F0);
}

unint64_t sub_1A9113DEC(uint64_t a1)
{
  return sub_1A9113E10(a1, &qword_1EEAB77F8);
}

unint64_t sub_1A9113DF8(uint64_t a1)
{
  return sub_1A9113E10(a1, &qword_1EEAB77D8);
}

unint64_t sub_1A9113E04(uint64_t a1)
{
  return sub_1A9113E10(a1, &qword_1EEAB77E8);
}

unint64_t sub_1A9113E10(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_1A93F8E8C();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_1A9094640(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1A9113F24(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(_QWORD), uint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  void (*v31)(_QWORD);
  uint8_t *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(_QWORD);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v73 = a7;
  v74 = sub_1A93F7698();
  v13 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v69 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v69 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v69 - v23;
  if (a5)
  {
    v25 = a5;
    if (qword_1ED2A4288 != -1)
      swift_once();
    v26 = v74;
    v27 = __swift_project_value_buffer(v74, (uint64_t)qword_1ED2A4268);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v24, v27, v26);
    v28 = a5;
    v29 = sub_1A93F7674();
    v30 = sub_1A93F879C();
    if (os_log_type_enabled(v29, v30))
    {
      v71 = v13;
      v31 = a6;
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v32 = 138412290;
      v34 = sub_1A93F711C();
      v76 = v34;
      v26 = v74;
      sub_1A93F8AA8();
      *v33 = v34;
      a6 = v31;
      v13 = v71;

      _os_log_impl(&dword_1A904E000, v29, v30, "Could not check if podcast exists in store with error: %@", v32, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v33, -1, -1);
      MEMORY[0x1AF41411C](v32, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v24, v26);
    a6(0);

    return;
  }
  v72 = a6;
  v70 = a8;
  if (!a1)
    goto LABEL_31;
  a6 = (void (*)(_QWORD))(a1 & 0xFFFFFFFFFFFFFF8);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1A93F8E5C())
      goto LABEL_9;
LABEL_30:
    swift_bridgeObjectRelease();
    a6 = v72;
    goto LABEL_31;
  }
  v35 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v35)
    goto LABEL_30;
LABEL_9:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v36 = MEMORY[0x1AF4129DC](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    v36 = *(_QWORD *)(a1 + 32);
    swift_unknownObjectRetain();
  }
  a6 = v72;
  swift_bridgeObjectRelease();
  type metadata accessor for ServerPodcast();
  v37 = (void *)swift_dynamicCastClass();
  if (v37)
  {
    v38 = objc_msgSend(v37, sel_podcastStoreId);
    if (v38)
    {
      v39 = v38;
      v40 = sub_1A93F8040();
      v42 = v41;

      v51 = sub_1A931883C(v40, v42);
      v52 = a8;
      swift_bridgeObjectRelease();
      if (v51 < 0)
      {
        __break(1u);
      }
      else
      {
        a8 = v13;
        if (qword_1ED2A4288 == -1)
        {
LABEL_25:
          v53 = v74;
          v54 = __swift_project_value_buffer(v74, (uint64_t)qword_1ED2A4268);
          swift_beginAccess();
          (*(void (**)(char *, uint64_t, uint64_t))(a8 + 16))(v18, v54, v53);
          swift_bridgeObjectRetain_n();
          v55 = sub_1A93F7674();
          v56 = sub_1A93F87B4();
          if (os_log_type_enabled(v55, v56))
          {
            v57 = swift_slowAlloc();
            v58 = swift_slowAlloc();
            v69 = v36;
            v71 = a8;
            v59 = v58;
            v76 = v58;
            *(_DWORD *)v57 = 136315394;
            swift_bridgeObjectRetain();
            v75 = sub_1A906436C(v52, a9, &v76);
            sub_1A93F8AA8();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v57 + 12) = 2048;
            v75 = v51;
            sub_1A93F8AA8();
            _os_log_impl(&dword_1A904E000, v55, v56, "Found podcast in the store for feedUrl: %s with adamId: %lld", (uint8_t *)v57, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1AF41411C](v59, -1, -1);
            MEMORY[0x1AF41411C](v57, -1, -1);

            (*(void (**)(char *, uint64_t))(v71 + 8))(v18, v53);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            (*(void (**)(char *, uint64_t))(a8 + 8))(v18, v53);
          }
          v72(v51);
          swift_unknownObjectRelease();
          return;
        }
      }
      swift_once();
      goto LABEL_25;
    }
    v69 = v36;
    a8 = v13;
    if (qword_1ED2A4288 == -1)
    {
LABEL_16:
      v43 = v74;
      v44 = __swift_project_value_buffer(v74, (uint64_t)qword_1ED2A4268);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(a8 + 16))(v15, v44, v43);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v45 = sub_1A93F7674();
      v46 = sub_1A93F879C();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = swift_slowAlloc();
        v48 = swift_slowAlloc();
        v76 = v48;
        *(_DWORD *)v47 = 136315394;
        swift_bridgeObjectRetain();
        v75 = sub_1A906436C(v70, a9, &v76);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v47 + 12) = 2080;
        v75 = a1;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB78D8);
        v49 = sub_1A93F8094();
        v75 = sub_1A906436C(v49, v50, &v76);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease_n();
        a6 = v72;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v45, v46, "Invalid adamId for podcastExistsInStore for feedUrl: %s, response: %s", (uint8_t *)v47, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v48, -1, -1);
        MEMORY[0x1AF41411C](v47, -1, -1);

        (*(void (**)(char *, uint64_t))(a8 + 8))(v15, v74);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(a8 + 8))(v15, v43);
      }
      a6(0);
      swift_unknownObjectRelease();
      return;
    }
LABEL_39:
    swift_once();
    goto LABEL_16;
  }
  swift_unknownObjectRelease();
LABEL_31:
  v60 = v13;
  if (qword_1ED2A4288 != -1)
    swift_once();
  v61 = v74;
  v62 = __swift_project_value_buffer(v74, (uint64_t)qword_1ED2A4268);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v21, v62, v61);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v63 = sub_1A93F7674();
  v64 = sub_1A93F879C();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = swift_slowAlloc();
    v66 = swift_slowAlloc();
    v76 = v66;
    *(_DWORD *)v65 = 136315394;
    swift_bridgeObjectRetain();
    v75 = sub_1A906436C(v70, a9, &v76);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v65 + 12) = 2080;
    v75 = a1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB78D8);
    v67 = sub_1A93F8094();
    v75 = sub_1A906436C(v67, v68, &v76);
    a6 = v72;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v63, v64, "Received invalid response from MAPI for podcastExistsInStore for feedUrl: %s, response: %s", (uint8_t *)v65, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v66, -1, -1);
    MEMORY[0x1AF41411C](v65, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v60 + 8))(v21, v61);
  a6(0);
}

id SubscriptionController.init()()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  objc_super v5;

  v1 = OBJC_IVAR___MTSubscriptionController_requestController;
  v2 = objc_allocWithZone((Class)type metadata accessor for MediaRequestController());
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_init);

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for SubscriptionController();
  return objc_msgSendSuper2(&v5, sel_init);
}

id SubscriptionController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SubscriptionController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A9114AE4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9114B08()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1A9114B44(unint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;

  sub_1A91112E4(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(void (**)(char *))(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD **)(v5 + 56));
}

uint64_t sub_1A9114B7C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t *v5;

  return sub_1A9194E48(a1, a2, a3, a4, a5, v5[2], v5[3], v5[4]);
}

uint64_t sub_1A9114B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaRequest.Params();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9114BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t result;

  if (a6 >= 2u)
  {
    if (a6 == 3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      result = a2;
      if (a6 != 2)
        return result;
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9114C30(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaRequest.Params();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A9114C6C(uint64_t a1)
{
  return sub_1A9114D2C(a1);
}

uint64_t sub_1A9114C78()
{
  return objectdestroy_14Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_1A9114C8C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;

  sub_1A9113F24(a1, a2, a3, a4, a5, *(void (**)(_QWORD))(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40));
}

uint64_t type metadata accessor for SubscriptionController()
{
  return objc_opt_self();
}

uint64_t method lookup function for SubscriptionController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SubscriptionController.subscribeToShow(podcastStoreId:account:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SubscriptionController.podcastExistsInStore(feedUrl:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t sub_1A9114D20(uint64_t a1)
{
  return sub_1A9114D2C(a1);
}

uint64_t sub_1A9114D2C(uint64_t a1)
{
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_1A93F8E08();
    __break(1u);
  }
  else if (a1)
  {
    result = sub_1A93F837C();
    *(_QWORD *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1A9114DBC(uint64_t a1)
{
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_1A93F8E08();
    __break(1u);
  }
  else if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB78A8);
    result = sub_1A93F837C();
    *(_QWORD *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1A9114E5C(uint64_t a1, unint64_t a2, uint64_t a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, void *, uint64_t, uint64_t, void *);
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  __int128 v42;
  __int128 v43;
  char *v44;
  uint64_t (**v45)(uint64_t, void *, uint64_t, uint64_t, void *);
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  char v68;
  char v69;
  char v70;
  char v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;

  v65 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v7);
  v64 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MediaRequest.Params();
  v66 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v66 + 64);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v57 - v12;
  v14 = sub_1A93F7698();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a4;
  v19 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v19 = a1 & 0xFFFFFFFFFFFFLL;
  if (v19)
  {
    v63 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7740);
    inited = swift_initStackObject();
    v67 = xmmword_1A9405520;
    *(_OWORD *)(inited + 16) = xmmword_1A9405520;
    *(_BYTE *)(inited + 32) = 2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = v67;
    v62 = a1;
    *(_QWORD *)(v21 + 32) = a1;
    *(_QWORD *)(v21 + 40) = a2;
    *(_QWORD *)(inited + 40) = v21;
    _Block_copy(a4);
    swift_bridgeObjectRetain();
    v60 = sub_1A9113644(inited, &qword_1EEAB78E0, (uint64_t (*)(uint64_t))sub_1A912DF5C);
    *(_QWORD *)&v74 = 0;
    v72 = 0u;
    v73 = 0u;
    BYTE8(v74) = 4;
    v71 = 1;
    v70 = 1;
    v69 = 4;
    v68 = 1;
    v22 = sub_1A93F726C();
    v23 = (uint64_t)v64;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v64, 1, 1, v22);
    v24 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v67 = a2;
    v61 = (uint64_t)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    v58 = sub_1A9112880(MEMORY[0x1E0DEE9D8], &qword_1ED2A5BD0, (uint64_t (*)(_BYTE *))sub_1A912DD74);
    v25 = sub_1A9112880(v24, &qword_1ED2A5BD0, (uint64_t (*)(_BYTE *))sub_1A912DD74);
    sub_1A911273C(v24);
    v27 = v26;
    v28 = sub_1A9112880(v24, &qword_1ED2AC4C0, sub_1A912DE60);
    v29 = sub_1A9112880(v24, &qword_1ED2AC4C0, sub_1A912DE60);
    *((_QWORD *)&v56 + 1) = sub_1A9112880(v24, &qword_1EEAB7780, sub_1A912DE60);
    *(_QWORD *)&v56 = v60;
    *(_QWORD *)&v55 = v29;
    *((_QWORD *)&v55 + 1) = v24;
    *(_QWORD *)&v54 = v24;
    *((_QWORD *)&v54 + 1) = v28;
    v59 = v13;
    MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&v72, &v71, &v70, &v69, v58, v25, v27, v24, (uint64_t)v13, v54, v55, v24, v24, &v68, 0, 1, v56, 0, 1,
      0,
      v23,
      0,
      0,
      0,
      0,
      0,
      v24,
      0,
      0,
      2);
    v64 = *(char **)(v65 + OBJC_IVAR___MTSubscriptionController_requestController);
    v30 = (_QWORD *)swift_allocObject();
    v31 = v63;
    v30[2] = sub_1A91157E8;
    v30[3] = v31;
    v32 = v67;
    v30[4] = v62;
    v30[5] = v32;
    v33 = swift_allocObject();
    v65 = v33;
    swift_unknownObjectWeakInit();
    v34 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
    *((_QWORD *)v34 + 2) = v33;
    *((_QWORD *)v34 + 3) = sub_1A91162B8;
    *((_QWORD *)v34 + 4) = v30;
    sub_1A93F9330();
    v35 = v61;
    sub_1A9114B88((uint64_t)v13, v61);
    v36 = (*(unsigned __int8 *)(v66 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    v37 = (v10 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
    v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
    v40 = swift_allocObject();
    sub_1A9116174(v35, v40 + v36, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
    *(_QWORD *)(v40 + v37) = MEMORY[0x1E0DEE9D8];
    v41 = v40 + v38;
    *(_QWORD *)(v41 + 64) = v76;
    v42 = v75;
    *(_OWORD *)(v41 + 32) = v74;
    *(_OWORD *)(v41 + 48) = v42;
    v43 = v73;
    *(_OWORD *)v41 = v72;
    *(_OWORD *)(v41 + 16) = v43;
    v44 = v64;
    *(_QWORD *)(v40 + v39) = v64;
    v45 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v40 + ((v39 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v45 = sub_1A91162C4;
    v45[1] = v34;
    v46 = v44;
    swift_bridgeObjectRetain();
    v47 = v46;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v48 = (uint64_t)v59;
    sub_1A9195C30((uint64_t)v59, 0, (uint64_t)sub_1A9114C2C, v40);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1A9114C30(v48);
  }
  else
  {
    _Block_copy(a4);
    if (qword_1ED2A4288 != -1)
      swift_once();
    v49 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A4268);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v49, v14);
    v50 = sub_1A93F7674();
    v51 = sub_1A93F87B4();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v52 = 0;
      _os_log_impl(&dword_1A904E000, v50, v51, "feedUrl is empty. Not checking MAPI if it exists in the store.", v52, 2u);
      MEMORY[0x1AF41411C](v52, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    a4[2](a4, 0);
  }
  return swift_release();
}

unint64_t sub_1A91154C8(_QWORD *a1)
{
  return sub_1A9115828(a1, &qword_1EEAB78C0);
}

unint64_t sub_1A91154D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7798);
  v3 = (_QWORD *)sub_1A93F8E8C();
  LOBYTE(v4) = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_1A912E330(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((unsigned __int8 *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain();
    result = sub_1A912E330(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A91155D4(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB77B8);
  v3 = (_QWORD *)sub_1A93F8E8C();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_1A906C428(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_retain();
    result = sub_1A906C428(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A91156D0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  unint64_t result;
  char v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  char v16;
  id v17;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7788);
  v3 = (_QWORD *)sub_1A93F8E8C();
  v4 = a1[4];
  v5 = (void *)a1[5];
  result = sub_1A906C424(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v17 = v5;
    return (unint64_t)v3;
  }
  v8 = (void **)(a1 + 7);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v4;
    *(_QWORD *)(v3[7] + v9) = v5;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v4 = (uint64_t)*(v8 - 1);
    v14 = *v8;
    v15 = v5;
    result = sub_1A906C424(v4);
    v8 = v13;
    v5 = v14;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A91157C4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A91157E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1A91157F8()
{
  return objectdestroy_14Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_1A9115814(uint64_t a1)
{
  uint64_t v1;

  sub_1A93E3634(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1A911581C(_QWORD *a1)
{
  return sub_1A9115828(a1, &qword_1EEAB7890);
}

unint64_t sub_1A9115828(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v2 = a1[2];
  if (!v2)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = (_QWORD *)sub_1A93F8E8C();
  v6 = a1[4];
  v5 = a1[5];
  result = sub_1A906C428(v6);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v4;
  }
  v9 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v4[6] + v10) = v6;
    *(_QWORD *)(v4[7] + v10) = v5;
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v4[2] = v13;
    if (!--v2)
      goto LABEL_8;
    v14 = v9 + 2;
    v6 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_1A906C428(v6);
    v9 = v14;
    v5 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A9115920(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7868);
  v3 = (_QWORD *)sub_1A93F8E8C();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_1A9093570(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_retain();
    result = sub_1A9093570(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A9115A1C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7850);
  v3 = (_QWORD *)sub_1A93F8E8C();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_1A912E790(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_bridgeObjectRetain();
    result = sub_1A912E790(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A9115B18(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  char v17;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BD8);
  v3 = (_QWORD *)sub_1A93F8E8C();
  v5 = a1[4];
  v4 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  v8 = a1[8];
  v9 = a1[9];
  result = sub_1A9093570(v5);
  if ((v11 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x1E0DEE9E0];
  }
  v12 = a1 + 15;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v5;
    v13 = (uint64_t *)(v3[7] + 40 * result);
    *v13 = v4;
    v13[1] = v6;
    v13[2] = v7;
    v13[3] = v8;
    v13[4] = v9;
    v14 = v3[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      break;
    v3[2] = v16;
    sub_1A9094654(v4, v6, v7);
    if (!--v1)
      return (unint64_t)v3;
    v5 = *(v12 - 5);
    v4 = *(v12 - 4);
    v6 = *(v12 - 3);
    v7 = *(v12 - 2);
    v8 = *(v12 - 1);
    v9 = *v12;
    result = sub_1A9093570(v5);
    v12 += 6;
    if ((v17 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A9115C48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7830);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7838);
    v7 = (_QWORD *)sub_1A93F8E8C();
    v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_1A9062170(v9, (uint64_t)v5, &qword_1EEAB7830);
      v11 = *v5;
      result = sub_1A9093570(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v7[6] + 8 * result) = v11;
      v15 = v7[7];
      v16 = type metadata accessor for ThinClientEpisodeStateModel();
      result = sub_1A9116174(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1A9115DB4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *i;
  uint64_t v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7828);
    v3 = (_QWORD *)sub_1A93F8E8C();
    for (i = (_BYTE *)(a1 + 40); ; i += 16)
    {
      v5 = *((_QWORD *)i - 1);
      v6 = *i;
      result = sub_1A9093570(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1A9115E88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7818);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7820);
    v7 = (_QWORD *)sub_1A93F8E8C();
    v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_1A9062170(v9, (uint64_t)v5, &qword_1EEAB7818);
      v11 = *v5;
      result = sub_1A9093570(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v7[6] + 8 * result) = v11;
      v15 = v7[7];
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
      result = sub_1A911612C(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1A9115FF0(uint64_t a1)
{
  return sub_1A9116008(a1, &qword_1EEAB77D0);
}

unint64_t sub_1A9115FFC(uint64_t a1)
{
  return sub_1A9116008(a1, &qword_1EEAB77E0);
}

unint64_t sub_1A9116008(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  unint64_t result;
  __int128 v7;
  char v8;
  _OWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _OWORD *v13;
  char v14;
  __int128 v15;
  __int128 v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = (_QWORD *)sub_1A93F8E8C();
  v5 = *(_QWORD *)(a1 + 32);
  v15 = *(_OWORD *)(a1 + 40);
  result = sub_1A906C428(v5);
  v7 = v15;
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    swift_retain();
    return (unint64_t)v4;
  }
  v9 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v5;
    *(_OWORD *)(v4[7] + 16 * result) = v7;
    v10 = v4[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v4[2] = v12;
    if (!--v2)
      goto LABEL_8;
    v13 = (_OWORD *)((char *)v9 + 24);
    v5 = *((_QWORD *)v9 - 1);
    v16 = *v9;
    swift_retain();
    swift_retain();
    result = sub_1A906C428(v5);
    v9 = v13;
    v7 = v16;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A911612C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9116174(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A91161B8()
{
  return objectdestroy_14Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A91161CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;

  return sub_1A9111DAC(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(uint64_t (**)(_QWORD))(v5 + 32), *(_QWORD *)(v5 + 40));
}

void sub_1A91161FC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v11 = *(_QWORD *)(type metadata accessor for MediaRequest.Params() - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A91956B0(a1, a2, a3, a4, a5, v5 + v12, *(_QWORD *)(v5 + v13), (__int128 *)(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v5 + ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(v5+ ((((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(v5+ ((((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8));
}

char *sub_1A91162C8(uint64_t a1)
{
  swift_allocObject();
  return sub_1A9075498(a1);
}

void sub_1A9116300()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  _BYTE *v23;
  uint64_t v24;
  const char *v25;
  const char *v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint8_t *v30;
  os_signpost_id_t v31;
  void (*v32)(_BYTE *, uint64_t);
  void *v33;
  _BYTE v34[12];
  int v35;
  uint64_t v36;
  const char *v37;
  _BYTE *v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;

  v1 = v0;
  v2 = *v0;
  v3 = sub_1A93F7638();
  v37 = *(const char **)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v34[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v39 = sub_1A93F75FC();
  v42 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v38 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v40 = &v34[-v8];
  v9 = sub_1A93F762C();
  v41 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(_QWORD *)(v2 + 80);
  v13 = sub_1A93F8A90();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = &v34[-v16];
  v18 = qword_1ED2A9500;
  objc_msgSend(*(id *)((char *)v1 + qword_1ED2A9500), sel_invalidate, v15);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v17, 1, 1, v12);
  v19 = (char *)v1 + *(_QWORD *)(*v1 + 120);
  swift_beginAccess();
  (*(void (**)(char *, _BYTE *, uint64_t))(v14 + 40))(v19, v17, v13);
  swift_endAccess();
  if (*(_QWORD *)((char *)v1 + v18))
  {
    v36 = v3;
    if (qword_1ED2A8690 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A8678);
    v21 = v41;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v41 + 16))(v11, v20, v9);
    swift_retain();
    v22 = sub_1A93F7620();
    v23 = v40;
    sub_1A93F7644();
    v35 = sub_1A93F8934();
    if ((sub_1A93F8A6C() & 1) != 0)
    {
      swift_retain();
      sub_1A93F7668();
      swift_release();
      v24 = v36;
      v25 = v37;
      if ((*((unsigned int (**)(_BYTE *, uint64_t))v37 + 11))(v5, v36) == *MEMORY[0x1E0DF2190])
      {
        v26 = "[Error] Interval already ended";
      }
      else
      {
        (*((void (**)(_BYTE *, uint64_t))v25 + 1))(v5, v24);
        v26 = "";
      }
      v37 = v26;
      v27 = v38;
      v28 = v23;
      v29 = v39;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v42 + 16))(v38, v28, v39);
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      v31 = sub_1A93F75E4();
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v22, (os_signpost_type_t)v35, v31, "SynchronizedEventSubscription", v37, v30, 2u);
      MEMORY[0x1AF41411C](v30, -1, -1);
      swift_release();

      v32 = *(void (**)(_BYTE *, uint64_t))(v42 + 8);
      v32(v40, v29);
      (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v11, v9);
      v32(v27, v29);
    }
    else
    {
      swift_release();

      (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v23, v39);
      (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v11, v9);
    }
    v33 = *(void **)((char *)v1 + v18);
    *(_QWORD *)((char *)v1 + v18) = 0;

  }
}

uint64_t sub_1A91166D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  uint64_t v19;
  id v20;
  uint64_t result;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a5;
  v22 = a1;
  v7 = sub_1A93F738C();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A93F8A90();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v22 - v16;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v26 = a3;
    v19 = Strong + *(_QWORD *)(*(_QWORD *)Strong + 120);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v19, v14);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v17, 1, a4))
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v17, a4);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      v20 = objc_msgSend(v22, sel_fireDate);
      sub_1A93F7368();

      sub_1A93F78A8();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v24);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a4);
    }
    a3 = v26;
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A9075768(a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A9116904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + qword_1ED2A94F0;
  v2 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 120);
  v4 = sub_1A93F8A90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_1A91169A0()
{
  sub_1A9116904();
  return swift_deallocClassInstance();
}

uint64_t sub_1A91169C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A93F738C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1A91169FC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A93F738C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1A9116A30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A9116A74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A9116AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A9116AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A9116B40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9116B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A93F738C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1A9116B88()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9116B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A93F738C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_1A9116BD4()
{
  sub_1A9116300();
}

uint64_t sub_1A9116BF4()
{
  return sub_1A93F76B0();
}

uint64_t sub_1A9116C14()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9116C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A93F738C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A9116CAC(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[2];
  v4 = v1[3];
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F738C() - 8) + 80);
  return sub_1A91166D0(a1, v1[4], (uint64_t)v1 + ((v5 + 40) & ~v5), v3, v4);
}

void sub_1A9116D00(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

unint64_t sub_1A9116D50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2A5C58;
  if (!qword_1ED2A5C58)
  {
    v1 = sub_1A93F738C();
    result = MEMORY[0x1AF414014](MEMORY[0x1E0CB08F0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2A5C58);
  }
  return result;
}

uint64_t sub_1A9116D98(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  __int128 v5[2];

  sub_1A905DC3C(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(v3);
  sub_1A905D4AC(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1A9116E04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController;
  swift_beginAccess();
  return sub_1A905DC3C(v3, a1);
}

uint64_t sub_1A9116E54(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(v3);
  sub_1A905D4AC(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1A9116EB4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id BaseMAPIRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id BaseMAPIRequest.init()()
{
  void *v0;
  objc_class *v1;
  id v2;
  char *v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v9;

  v1 = (objc_class *)type metadata accessor for MediaRequestController();
  v2 = objc_allocWithZone(v1);
  v3 = v0;
  v4 = objc_msgSend(v2, sel_init);
  v5 = &v3[OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController];
  *((_QWORD *)v5 + 3) = v1;
  *((_QWORD *)v5 + 4) = &protocol witness table for MediaRequestController;
  *(_QWORD *)v5 = v4;
  swift_beginAccess();
  v6 = *((_QWORD *)v5 + 3);
  v7 = *((_QWORD *)v5 + 4);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(1, v6, v7);
  swift_endAccess();

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for BaseMAPIRequest();
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t type metadata accessor for BaseMAPIRequest()
{
  return objc_opt_self();
}

id BaseMAPIRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseMAPIRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A9117114@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController;
  swift_beginAccess();
  return sub_1A905DC3C(v3, a2);
}

uint64_t method lookup function for BaseMAPIRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BaseMAPIRequest.mediaRequestController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of BaseMAPIRequest.mediaRequestController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of BaseMAPIRequest.mediaRequestController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t RepublishingValueSubject.value.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_1A911A0D4(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

void (*RepublishingValueSubject.value.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v7 = malloc(v6);
  v3[4] = v7;
  RepublishingValueSubject.value.getter((uint64_t)v7);
  return sub_1A9117298;
}

void sub_1A9117298(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    sub_1A911A0D4((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_1A911A0D4(*(_QWORD *)(*(_QWORD *)a1 + 32));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_1A9117330(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return sub_1A9117378(a1, a2);
}

uint64_t sub_1A9117378(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v19 = a2;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 176);
  v6 = sub_1A93F8A90();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - v8;
  v2[2] = 0;
  v10 = (char *)v2 + *(_QWORD *)(v4 + 200);
  v11 = *(_QWORD *)(v5 - 8);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v12(v10, 1, 1, v5);
  v13 = *(_QWORD *)(*v2 + 208);
  swift_retain();
  *(_QWORD *)((char *)v2 + v13) = sub_1A93F78D8();
  v14 = *(_QWORD *)(*v2 + 216);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 16) = 0;
  *(_QWORD *)((char *)v2 + v14) = v15;
  v16 = *(_QWORD *)(*v2 + 224);
  v17 = (_QWORD *)swift_slowAlloc();
  *v17 = 0;
  *(_QWORD *)((char *)v2 + v16) = v17;
  *((_BYTE *)v2 + *(_QWORD *)(*v2 + 232)) = 0;
  v2[2] = a1;
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v9, v19, v5);
  v12(v9, 0, 1, v5);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v10, v9, v6);
  swift_endAccess();
  swift_release();
  return sub_1A9052150();
}

uint64_t sub_1A9117500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 200);
  v2 = sub_1A93F8A90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_release();
}

void sub_1A9117564(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v24 = a1;
  v2 = (_QWORD *)*v1;
  v3 = sub_1A93F9354();
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7948);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)((char *)v1 + v2[27]) + 16));
  v25 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9740);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1A9405760;
  *(_QWORD *)(v9 + 32) = 0x746E65726170;
  *(_QWORD *)(v9 + 40) = 0xE600000000000000;
  v10 = v1[2];
  v11 = v2[20];
  v12 = v2[21];
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for RepublishingValueSubject(255, v11, v12, AssociatedConformanceWitness);
  v14 = sub_1A93F8A90();
  *(_QWORD *)(v9 + 48) = v10;
  *(_QWORD *)(v9 + 72) = v14;
  *(_QWORD *)(v9 + 80) = 0x657274736E776F64;
  *(_QWORD *)(v9 + 88) = 0xEA00000000006D61;
  v15 = (char *)v1 + *(_QWORD *)(*v1 + 200);
  swift_beginAccess();
  v16 = sub_1A93F8A90();
  *(_QWORD *)(v9 + 120) = v16;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v9 + 96));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(boxed_opaque_existential_1, v15, v16);
  *(_QWORD *)(v9 + 128) = 0x646E616D6564;
  *(_QWORD *)(v9 + 136) = 0xE600000000000000;
  v18 = (_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 208));
  swift_beginAccess();
  v19 = MEMORY[0x1E0C95D60];
  *(_QWORD *)(v9 + 144) = *v18;
  *(_QWORD *)(v9 + 168) = v19;
  *(_QWORD *)(v9 + 176) = 0x7463656A627573;
  v20 = v1[2];
  *(_QWORD *)(v9 + 216) = v14;
  *(_QWORD *)(v9 + 184) = 0xE700000000000000;
  *(_QWORD *)(v9 + 192) = v20;
  v21 = sub_1A93F9348();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v8, 1, 1, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v5, *MEMORY[0x1E0DEDFE8], v23);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A93F9378();
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 216)) + 16));
}

uint64_t sub_1A9117824@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DEDFE8];
  v3 = sub_1A93F9354();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

void sub_1A9117868(_QWORD *a1@<X8>)
{
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000001A9443750;
}

unint64_t sub_1A9117894()
{
  return 0xD000000000000013;
}

void sub_1A91178B0(uint64_t a1@<X8>)
{
  sub_1A9117564(a1);
}

void sub_1A91178D0(_QWORD *a1@<X8>)
{
  sub_1A9117868(a1);
}

_QWORD *sub_1A91178E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7A30);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A9119FEC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A91179F0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A9118E9C(a1, a2, a3, a4, &qword_1EEAB7A20);
}

_QWORD *sub_1A9117A04(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A90862E4(a1, a2, a3, a4, &qword_1ED2A4460);
}

uint64_t sub_1A9117A18(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A9117A40(a1, a2, a3, a4, &qword_1EEAB79D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1A9117A2C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A9117A40(a1, a2, a3, a4, &qword_1EEAB7958, type metadata accessor for PodcastsMediaLibrary.MediaItem);
}

uint64_t sub_1A9117A40(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1A93F8E08();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A911B268(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1A9117C4C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABDE0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A911A7B4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A9117D58(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7A50);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A9119FEC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A9117E64(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7A48);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A911A1E0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A9117F70(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A91189D4(a1, a2, a3, a4, &qword_1EEAB7A38, &qword_1EEAB7A40);
}

_QWORD *sub_1A9117F84(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      v13 = v11 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v9 + 4])
          memmove(v13, a4 + 4, 40 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A9093D74(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A91180B0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7A28);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A911A2C8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A91181BC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A47B8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A90A1298(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A91182C8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A90862E4(a1, a2, a3, a4, &qword_1ED2ABDE8);
}

char *sub_1A91182DC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1A91188CC(a1, a2, a3, a4, &qword_1ED2AC7F8);
}

uint64_t sub_1A91182E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A9117A40(a1, a2, a3, a4, (uint64_t *)&unk_1ED2AC7E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE690]);
}

uint64_t sub_1A91182FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A9117A40(a1, a2, a3, a4, &qword_1ED2A9700, (uint64_t (*)(_QWORD))type metadata accessor for FeedUpdateRequest);
}

_QWORD *sub_1A9118310(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7950);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A911A8A4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A911841C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A9118430(a1, a2, a3, a4, &qword_1ED2A5C10, &qword_1ED2A6058);
}

_QWORD *sub_1A9118430(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A90946F4(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A911855C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4450);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[12 * v8 + 4])
          memmove(v12, a4 + 4, 96 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A911A4C4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A911867C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9FF8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A911A3B8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A91187A0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AA008);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A911B470(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A91188AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A9117A40(a1, a2, a3, a4, &qword_1ED2ABDD8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB1658]);
}

char *sub_1A91188C0(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1A91188CC(a1, a2, a3, a4, &qword_1EEAB7A18);
}

char *sub_1A91188CC(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)a4 + 3);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *((_QWORD *)a4 + 2);
    if (v8 <= v9)
      v10 = *((_QWORD *)a4 + 2);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (char *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      *((_QWORD *)v11 + 2) = v9;
      *((_QWORD *)v11 + 3) = 2 * v12 - 64;
      v13 = v11 + 32;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32])
          memmove(v13, a4 + 32, v9);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (char *)MEMORY[0x1E0DEE9D8];
      v13 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A911AF7C(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A91189C0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A91189D4(a1, a2, a3, a4, &qword_1ED2A9720, &qword_1ED2A92B0);
}

_QWORD *sub_1A91189D4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A911AE78(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

char *sub_1A9118AEC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1A91188CC(a1, a2, a3, a4, &qword_1ED2A96E8);
}

_QWORD *sub_1A9118AF8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A91197B8(a1, a2, a3, a4, (uint64_t *)&unk_1ED2A44B0);
}

uint64_t sub_1A9118B04(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A9117A40(a1, a2, a3, a4, &qword_1ED2A96F0, type metadata accessor for StoreFeedUpdater.Update);
}

_QWORD *sub_1A9118B18(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABE10);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A911A1E0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9118C24(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A911936C(a1, a2, a3, a4, &qword_1ED2ABE18, &qword_1ED2A5C18);
}

_QWORD *sub_1A9118C38(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A9118C4C(a1, a2, a3, a4, &qword_1ED2A9FF0);
}

_QWORD *sub_1A9118C4C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4])
          memmove(v14, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A911AAB8(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A9118D64(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB79F0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A911A9AC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A9118E88(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A9118E9C(a1, a2, a3, a4, &qword_1EEAB7A00);
}

_QWORD *sub_1A9118E9C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      v13 = v11 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v9 + 4])
          memmove(v13, a4 + 4, 40 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A9093D74(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A9118FC4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A9118C4C(a1, a2, a3, a4, &qword_1EEAB7988);
}

_QWORD *sub_1A9118FD8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB79E8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A911AD88(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A91190E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB79E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A911AC98(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A91191F0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB79D8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A911ABA4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A9119310(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A91189D4(a1, a2, a3, a4, &qword_1EEAB79C8, &qword_1ED2AD3D8);
}

_QWORD *sub_1A9119324(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A91189D4(a1, a2, a3, a4, &qword_1EEAB79B8, &qword_1EEAB79C0);
}

_QWORD *sub_1A9119338(_QWORD *a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A9119B50(a1, a2, a3, a4, &qword_1EEAB79B0);
}

char *sub_1A911934C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1A91188CC(a1, a2, a3, a4, &qword_1EEAB79A8);
}

uint64_t sub_1A9119358(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A911936C(a1, a2, a3, a4, &qword_1EEAB7998, &qword_1EEAB79A0);
}

uint64_t sub_1A911936C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1A93F8E08();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A911B150(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1A9119578(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4458);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[13 * v8 + 4])
          memmove(v12, a4 + 4, 104 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A911A5B8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A91196A0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9748);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A90A1298(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A91197AC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A91197B8(a1, a2, a3, a4, &qword_1EEAB7990);
}

_QWORD *sub_1A91197B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4])
          memmove(v14, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A90A1298(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A91198C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A9117A40(a1, a2, a3, a4, &qword_1ED2A96C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

_QWORD *sub_1A91198D4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9750);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A911B060(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A91199E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7A08);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A911A6C0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1A9119B08(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1A91188CC(a1, a2, a3, a4, &qword_1EEAB7A10);
}

uint64_t sub_1A9119B14(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A911936C(a1, a2, a3, a4, &qword_1EEAB7980, &qword_1EEABDF20);
}

uint64_t sub_1A9119B28(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A9117A40(a1, a2, a3, a4, &qword_1EEAB7978, (uint64_t (*)(_QWORD))type metadata accessor for ArtworkContent);
}

_QWORD *sub_1A9119B3C(_QWORD *a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A9119B50(a1, a2, a3, a4, &qword_1ED2A4468);
}

_QWORD *sub_1A9119B50(_QWORD *result, int64_t a2, char a3, unint64_t a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *(_QWORD *)(a4 + 24);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *(_QWORD *)(a4 + 16);
    if (v8 <= v9)
      v10 = *(_QWORD *)(a4 + 16);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = (unint64_t)(v11 + 4);
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if ((unint64_t)v11 < a4 || v13 >= a4 + 32 + 24 * v9)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v11 != (_QWORD *)a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        *(_QWORD *)(a4 + 16) = 0;
        goto LABEL_24;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = MEMORY[0x1E0DEE9D8] + 32;
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A911B380(0, v9, v13, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A9119C98(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7970);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A911B578(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A9119DA4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A96E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4])
          memmove(v12, a4 + 4, 72 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A911B668(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A9119ECC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A90862E4(a1, a2, a3, a4, &qword_1EEAB7968);
}

_QWORD *sub_1A9119EE0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7960);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A911A1E0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1A9119FEC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = 32 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1A93F8E98();
  __break(1u);
  return result;
}

void sub_1A911A0D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  char *v5;

  v3 = *v1;
  v4 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v4);
  v5 = (char *)v1 + *(_QWORD *)(*v1 + 136);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 24))(v5, a1);
  swift_endAccess();
  os_unfair_lock_unlock(v4);
  RepublishingValueSubject.send(_:)(a1);
}

void sub_1A911A16C(uint64_t a1@<X8>)
{
  RepublishingValueSubject.value.getter(a1);
}

void sub_1A911A18C(uint64_t a1)
{
  sub_1A911A0D4(a1);
}

uint64_t sub_1A911A1AC()
{
  return 24;
}

__n128 sub_1A911A1B8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t method lookup function for RepublishingValueSubject()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RepublishingValueSubject.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

char *sub_1A911A1E0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911A2C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911A3B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9FA8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911A4C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 96 * a1 + 32;
    v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911A5B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 104 * a1 + 32;
    v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A24B0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911A6C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911A7B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911A8A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8D80);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911A9AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB79F8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911AAB8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911ABA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911AC98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911AD88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911AE78(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

char *sub_1A911AF7C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911B060(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911B150(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911B268(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911B380(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911B470(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9FB8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911B578(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A911B668(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 72 * a1 + 32;
    v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

id RecommendationModulesRequest.__allocating_init(with:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  id v9;
  objc_super v11;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = OBJC_IVAR___MTRecommendationModulesRequest_moduleIDs;
  *(_QWORD *)&v3[OBJC_IVAR___MTRecommendationModulesRequest_moduleIDs] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR___MTRecommendationModulesRequest_kPayloadDataFetchLimit] = 50;
  v5 = OBJC_IVAR___MTRecommendationModulesRequest_context;
  v6 = (void *)objc_opt_self();
  v7 = v3;
  v8 = objc_msgSend(v6, sel_sharedInstance);
  v9 = objc_msgSend(v8, sel_mainQueueContext);

  *(_QWORD *)&v3[v5] = v9;
  *(_QWORD *)&v3[v4] = a1;

  swift_bridgeObjectRelease();
  v11.receiver = v7;
  v11.super_class = v1;
  return objc_msgSendSuper2(&v11, sel_init);
}

id RecommendationModulesRequest.init(with:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  id v8;
  objc_super v10;

  v3 = OBJC_IVAR___MTRecommendationModulesRequest_moduleIDs;
  *(_QWORD *)&v1[OBJC_IVAR___MTRecommendationModulesRequest_moduleIDs] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR___MTRecommendationModulesRequest_kPayloadDataFetchLimit] = 50;
  v4 = OBJC_IVAR___MTRecommendationModulesRequest_context;
  v5 = (void *)objc_opt_self();
  v6 = v1;
  v7 = objc_msgSend(v5, sel_sharedInstance);
  v8 = objc_msgSend(v7, sel_mainQueueContext);

  *(_QWORD *)&v1[v4] = v8;
  *(_QWORD *)&v1[v3] = a1;

  swift_bridgeObjectRelease();
  v10.receiver = v6;
  v10.super_class = (Class)type metadata accessor for RecommendationModulesRequest();
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t sub_1A911B964(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (**v9)(char *, uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(void);
  uint64_t v22;
  char *v23;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  void (*v48)(uint64_t, _QWORD, _QWORD *, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  void (**v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(void);
  char v60[24];
  uint64_t v61;
  uint64_t v62;

  v58 = a2;
  v59 = a1;
  v2 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v2);
  v54 = (void (**)(char *, uint64_t))((char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_1A93F7158();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F726C();
  v9 = *(void (***)(char *, uint64_t))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RecommendationModulesCache();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F7698();
  v56 = *(_QWORD *)(v15 - 8);
  v57 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v50 - v19;
  if ((_s18PodcastsFoundation12AccountsUtilC25userAllowsPersonalizationSbvgZ_0() & 1) != 0)
  {
    v21 = v59;
    v22 = (uint64_t)v54;
    v23 = v55;
    type metadata accessor for RecommendationModulesResponse();
    swift_allocObject();
    if (RecommendationModulesResponse.init()())
    {
      v21();
      return swift_release();
    }
    else
    {
      v39 = sub_1A911C9E8();
      v40 = *(_QWORD *)&v23[OBJC_IVAR___MTRecommendationModulesRequest_moduleIDs];
      swift_bridgeObjectRetain();
      MediaRequest.Params.init(recommendationsPersonalizedPayload:contentTypes:moduleIDs:)(v39, (uint64_t)&unk_1E54D3F18, v40, v22);
      sub_1A93F7680();
      v41 = sub_1A93F7674();
      v42 = sub_1A93F87B4();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v43 = 0;
        _os_log_impl(&dword_1A904E000, v41, v42, "Retrieving recommendations.", v43, 2u);
        MEMORY[0x1AF41411C](v43, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v56 + 8))(v17, v57);
      v44 = (uint64_t)&v23[OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController];
      swift_beginAccess();
      sub_1A905DC3C(v44, (uint64_t)v60);
      v45 = v61;
      v46 = v62;
      __swift_project_boxed_opaque_existential_1(v60, v61);
      v47 = (_QWORD *)swift_allocObject();
      v47[2] = v21;
      v47[3] = v58;
      v47[4] = v23;
      v48 = *(void (**)(uint64_t, _QWORD, _QWORD *, uint64_t, uint64_t))(v46 + 56);
      swift_retain();
      v49 = v23;
      v48(v22, sub_1A911FB24, v47, v45, v46);
      swift_release();
      sub_1A9064714(v22, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
    }
  }
  else
  {
    v51 = v14;
    v52 = v11;
    v53 = v7;
    v54 = v9;
    v55 = (char *)v4;
    sub_1A93F7680();
    v25 = sub_1A93F7674();
    v26 = sub_1A93F87B4();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1A904E000, v25, v26, "User does not allow personalization. Not fetching recommendation modules.", v27, 2u);
      MEMORY[0x1AF41411C](v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v56 + 8))(v20, v57);
    v28 = MEMORY[0x1E0DEE9D8];
    v29 = sub_1A91129D8(MEMORY[0x1E0DEE9D8]);
    type metadata accessor for RecommendationModulesResponse();
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = v28;
    v31 = objc_msgSend((id)objc_opt_self(), sel_sharedCacheDirectory);
    v32 = v52;
    sub_1A93F7200();

    strcpy(v60, "ListenNowCache");
    v60[15] = -18;
    v33 = v53;
    v34 = v55;
    (*(void (**)(char *, _QWORD, char *))(v5 + 104))(v53, *MEMORY[0x1E0CAFD60], v55);
    sub_1A90828B0();
    v35 = (uint64_t)v51;
    sub_1A93F7254();
    (*(void (**)(char *, char *))(v5 + 8))(v33, v34);
    swift_bridgeObjectRelease();
    v54[1](v32, v8);
    v36 = (_QWORD *)(v35 + *(int *)(v12 + 20));
    *v36 = 0x4D73656C75646F4DLL;
    v36[1] = 0xEF61746164617465;
    v37 = (char *)(v35 + *(int *)(v12 + 24));
    strcpy(v37, "ModuleContent-");
    v37[15] = -18;
    RecommendationModulesCache.writeToCache(with:)((Swift::OpaquePointer)v29);
    swift_bridgeObjectRelease();
    v38 = RecommendationModulesCache.modulesMetadata.getter();
    sub_1A9064714(v35, (uint64_t (*)(_QWORD))type metadata accessor for RecommendationModulesCache);
    *(_QWORD *)(v30 + 16) = v38;
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, _QWORD))v59)(v30, 0);
    return swift_release();
  }
}

uint64_t RecommendationModulesResponse.__allocating_init(json:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  Swift::OpaquePointer v19;
  char v20[16];

  v19._rawValue = a1;
  v1 = sub_1A93F7158();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RecommendationModulesCache();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = MEMORY[0x1E0DEE9D8];
  v13 = objc_msgSend((id)objc_opt_self(), sel_sharedCacheDirectory);
  sub_1A93F7200();

  strcpy(v20, "ListenNowCache");
  v20[15] = -18;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAFD60], v1);
  sub_1A90828B0();
  sub_1A93F7254();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = &v11[*(int *)(v9 + 20)];
  *(_QWORD *)v14 = 0x4D73656C75646F4DLL;
  *((_QWORD *)v14 + 1) = 0xEF61746164617465;
  v15 = &v11[*(int *)(v9 + 24)];
  strcpy(v15, "ModuleContent-");
  v15[15] = -18;
  RecommendationModulesCache.writeToCache(with:)(v19);
  swift_bridgeObjectRelease();
  v16 = RecommendationModulesCache.modulesMetadata.getter();
  sub_1A9064714((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for RecommendationModulesCache);
  *(_QWORD *)(v12 + 16) = v16;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t RecommendationModulesResponse.__allocating_init()()
{
  swift_allocObject();
  return RecommendationModulesResponse.init()();
}

void sub_1A911C1C0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void (*a6)(_QWORD, void *), uint64_t a7, void *a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  Swift::OpaquePointer v40;
  id v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void (*v48)(_QWORD, void *);
  id v49;
  uint64_t v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  _BOOL4 v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  os_log_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  id v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  _QWORD v78[2];
  int v79;
  os_log_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  void *v88;
  uint64_t v89;
  void (*v90)(_QWORD, void *);
  uint64_t v91;
  uint64_t v92[3];

  v87 = a8;
  v88 = a3;
  v89 = a7;
  v90 = a6;
  v9 = sub_1A93F7158();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A93F726C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for RecommendationModulesCache();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A93F7698();
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  v26 = (char *)v78 - v25;
  if (a5)
  {
    v27 = v23;
    v88 = v22;
    v28 = a5;
    sub_1A93F7680();
    v29 = a5;
    v30 = a5;
    v31 = sub_1A93F7674();
    v32 = sub_1A93F879C();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v92[0] = v34;
      *(_DWORD *)v33 = 136315138;
      swift_getErrorValue();
      v35 = sub_1A93F927C();
      v91 = sub_1A906436C(v35, v36, v92);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v31, v32, "Retrieving recommendation modules failed with error: %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v34, -1, -1);
      MEMORY[0x1AF41411C](v33, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, void *))(v27 + 8))(v26, v88);
    v48 = v90;
    v49 = a5;
    v48(0, a5);

  }
  else
  {
    v37 = v87;
    v84 = v12;
    v85 = v10;
    v86 = v14;
    v82 = v17;
    v83 = v13;
    if (v88)
    {
      type metadata accessor for RecommendationModulesResponse();
      v38 = swift_allocObject();
      *(_QWORD *)(v38 + 16) = MEMORY[0x1E0DEE9D8];
      v39 = (void *)objc_opt_self();
      v40._rawValue = v88;
      swift_bridgeObjectRetain();
      v41 = objc_msgSend(v39, sel_sharedCacheDirectory);
      v42 = v16;
      sub_1A93F7200();

      strcpy((char *)v92, "ListenNowCache");
      HIBYTE(v92[1]) = -18;
      v44 = v84;
      v43 = v85;
      (*(void (**)(char *, _QWORD, uint64_t))(v85 + 104))(v84, *MEMORY[0x1E0CAFD60], v9);
      sub_1A90828B0();
      sub_1A93F7254();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v9);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v42, v83);
      v45 = v82;
      v46 = &v19[*(int *)(v82 + 20)];
      *(_QWORD *)v46 = 0x4D73656C75646F4DLL;
      *((_QWORD *)v46 + 1) = 0xEF61746164617465;
      v47 = &v19[*(int *)(v45 + 24)];
      strcpy(v47, "ModuleContent-");
      v47[15] = -18;
      RecommendationModulesCache.writeToCache(with:)(v40);
    }
    else
    {
      v81 = v23;
      v88 = v22;
      v50 = v24;
      sub_1A93F7680();
      v51 = v37;
      v52 = sub_1A93F7674();
      v53 = sub_1A93F87B4();
      v54 = v53;
      v55 = os_log_type_enabled(v52, v53);
      v56 = v9;
      v57 = v86;
      v58 = v16;
      if (v55)
      {
        v80 = v52;
        v59 = swift_slowAlloc();
        v79 = v54;
        v60 = (uint8_t *)v59;
        v61 = swift_slowAlloc();
        *(_DWORD *)v60 = 136315138;
        v92[0] = v61;
        v87 = (void *)v56;
        v62 = v61;
        v78[1] = v60 + 4;
        v63 = swift_bridgeObjectRetain();
        v64 = MEMORY[0x1AF412034](v63, MEMORY[0x1E0DEA968]);
        v66 = v65;
        swift_bridgeObjectRelease();
        v91 = sub_1A906436C(v64, v66, v92);
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        v67 = v80;
        _os_log_impl(&dword_1A904E000, v80, (os_log_type_t)v79, "Recommendations request returned no results. Requested moduleIDs: %s", v60, 0xCu);
        swift_arrayDestroy();
        v68 = v62;
        v56 = (uint64_t)v87;
        MEMORY[0x1AF41411C](v68, -1, -1);
        MEMORY[0x1AF41411C](v60, -1, -1);

        v57 = v86;
      }
      else
      {

      }
      (*(void (**)(uint64_t, void *))(v81 + 8))(v50, v88);
      v70 = v84;
      v69 = v85;
      v71 = MEMORY[0x1E0DEE9D8];
      v72 = sub_1A91129D8(MEMORY[0x1E0DEE9D8]);
      type metadata accessor for RecommendationModulesResponse();
      v38 = swift_allocObject();
      *(_QWORD *)(v38 + 16) = v71;
      v73 = objc_msgSend((id)objc_opt_self(), sel_sharedCacheDirectory);
      sub_1A93F7200();

      strcpy((char *)v92, "ListenNowCache");
      HIBYTE(v92[1]) = -18;
      (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v70, *MEMORY[0x1E0CAFD60], v56);
      sub_1A90828B0();
      sub_1A93F7254();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v83);
      v74 = v82;
      v75 = &v19[*(int *)(v82 + 20)];
      *(_QWORD *)v75 = 0x4D73656C75646F4DLL;
      *((_QWORD *)v75 + 1) = 0xEF61746164617465;
      v76 = &v19[*(int *)(v74 + 24)];
      strcpy(v76, "ModuleContent-");
      v76[15] = -18;
      RecommendationModulesCache.writeToCache(with:)((Swift::OpaquePointer)v72);
    }
    swift_bridgeObjectRelease();
    v77 = RecommendationModulesCache.modulesMetadata.getter();
    sub_1A9064714((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for RecommendationModulesCache);
    *(_QWORD *)(v38 + 16) = v77;
    swift_bridgeObjectRelease();
    v90(v38, 0);
    swift_release();
  }
}

uint64_t sub_1A911C9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v29;
  _BYTE v30[16];
  uint64_t v31;
  _BYTE v32[16];
  id v33;
  uint64_t v34;
  _BYTE v35[16];
  uint64_t v36;
  _BYTE v37[16];
  id v38;
  uint64_t v39;

  v1 = v0;
  v29 = sub_1A908A4A8(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7B80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_QWORD *)(inited + 32) = 0x6269726373627573;
  *(_QWORD *)(inited + 40) = 0xEA00000000006465;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EEAB7B88);
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1A9405950;
  *(_QWORD *)(v3 + 32) = 0x7374736163646F70;
  *(_QWORD *)(v3 + 40) = 0xE800000000000000;
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_predicateForSubscribedPodcasts);
  v6 = objc_msgSend(v4, sel_predicateForNotHiddenNotImplicitlyFollowedPodcasts);
  v7 = objc_msgSend(v5, sel_AND_, v6);

  v38 = v7;
  v39 = v1;
  v8 = sub_1A9321E88((uint64_t)sub_1A9120228, (uint64_t)v37);

  *(_QWORD *)(v3 + 48) = v8;
  *(_QWORD *)(v3 + 56) = 0xD000000000000010;
  *(_QWORD *)(v3 + 64) = 0x80000001A9441B80;
  v36 = v1;
  *(_QWORD *)(v3 + 72) = sub_1A9321E88((uint64_t)sub_1A9120230, (uint64_t)v35);
  *(_QWORD *)(inited + 48) = sub_1A91129AC(v3);
  v9 = sub_1A91129B8(inited);
  v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = xmmword_1A9405520;
  strcpy((char *)(v10 + 32), "non-subscribed");
  *(_BYTE *)(v10 + 47) = -18;
  v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v11 + 32) = 0x7374736163646F70;
  *(_QWORD *)(v11 + 40) = 0xE800000000000000;
  v12 = objc_msgSend(v4, sel_predicateForSubscribedPodcasts);
  v13 = objc_msgSend(v12, "NOT");

  v14 = objc_msgSend(v4, sel_predicateForNotHiddenNotImplicitlyFollowedPodcasts);
  v15 = objc_msgSend(v13, sel_AND_, v14);

  v33 = v15;
  v34 = v1;
  v16 = sub_1A9321E88((uint64_t)sub_1A9120248, (uint64_t)v32);

  *(_QWORD *)(v11 + 48) = v16;
  *(_QWORD *)(v10 + 48) = sub_1A91129AC(v11);
  v17 = sub_1A91129B8(v10);
  v18 = swift_initStackObject();
  *(_OWORD *)(v18 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v18 + 32) = 0x796C746E65636572;
  *(_QWORD *)(v18 + 40) = 0xEF646579616C702DLL;
  v19 = swift_initStackObject();
  *(_OWORD *)(v19 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v19 + 32) = 0xD000000000000010;
  *(_QWORD *)(v19 + 40) = 0x80000001A9441B40;
  v31 = v1;
  *(_QWORD *)(v19 + 48) = sub_1A9321E88((uint64_t)sub_1A9120238, (uint64_t)v30);
  *(_QWORD *)(v18 + 48) = sub_1A91129AC(v19);
  v20 = sub_1A91129B8(v18);
  v21 = sub_1A917456C(v9);
  swift_bridgeObjectRelease();
  v22 = sub_1A911CDEC(v21, v29);
  v23 = sub_1A917456C(v17);
  swift_bridgeObjectRelease();
  v24 = sub_1A911CDEC(v23, v22);
  v25 = sub_1A917456C(v20);
  swift_bridgeObjectRelease();
  v26 = sub_1A911CDEC(v25, v24);
  v27 = sub_1A91748D4(v26);
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_1A911CDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1A911F7AC(a1, (uint64_t)sub_1A913078C, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1A911CE68@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;

  sub_1A93F8040();
  v3 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v4 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);

  objc_msgSend(v5, sel_setPredicate_, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A48C8);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1A9405520;
  v7 = sub_1A93F8040();
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v8;
  v9 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setPropertiesToFetch_, v9);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1A9405960;
  sub_1A93F8040();
  v11 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v12 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithKey_ascending_, v12, 0);

  *(_QWORD *)(v10 + 32) = v13;
  sub_1A93F8328();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v14 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setSortDescriptors_, v14);

  objc_msgSend(v5, sel_setFetchLimit_, 50);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4260);
  v15 = sub_1A93F89DC();
  if (!(v15 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v16)
      goto LABEL_3;
LABEL_14:

    result = swift_bridgeObjectRelease();
    v19 = MEMORY[0x1E0DEE9D8];
LABEL_12:
    *a2 = v19;
    return result;
  }
  swift_bridgeObjectRetain();
  v16 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (!v16)
    goto LABEL_14;
LABEL_3:
  v30 = MEMORY[0x1E0DEE9D8];
  result = sub_1A908182C(0, v16 & ~(v16 >> 63), 0);
  if ((v16 & 0x8000000000000000) == 0)
  {
    v28 = v5;
    v18 = 0;
    v19 = v30;
    do
    {
      if ((v15 & 0xC000000000000001) != 0)
        v20 = (id)MEMORY[0x1AF4129DC](v18, v15);
      else
        v20 = *(id *)(v15 + 8 * v18 + 32);
      v21 = v20;
      objc_msgSend(v20, sel_storeCollectionId);
      v22 = sub_1A93F9060();
      v24 = v23;

      v26 = *(_QWORD *)(v30 + 16);
      v25 = *(_QWORD *)(v30 + 24);
      if (v26 >= v25 >> 1)
        sub_1A908182C(v25 > 1, v26 + 1, 1);
      ++v18;
      *(_QWORD *)(v30 + 16) = v26 + 1;
      v27 = v30 + 16 * v26;
      *(_QWORD *)(v27 + 32) = v22;
      *(_QWORD *)(v27 + 40) = v24;
    }
    while (v16 != v18);

    result = swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_1A911D238(_QWORD *a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  void *v36;
  _QWORD *v37;

  sub_1A93F8040();
  v2 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v3 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1A9405950;
  v6 = sub_1A93F8040();
  v8 = v7;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  v10 = sub_1A90A92DC();
  *(_QWORD *)(v5 + 64) = v10;
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v8;
  v11 = sub_1A93F8040();
  *(_QWORD *)(v5 + 96) = v9;
  *(_QWORD *)(v5 + 104) = v10;
  *(_QWORD *)(v5 + 72) = v11;
  *(_QWORD *)(v5 + 80) = v12;
  v13 = (void *)sub_1A93F8754();
  objc_msgSend(v4, sel_setPredicate_, v13);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A48C8);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1A9405520;
  v15 = sub_1A93F8040();
  *(_QWORD *)(v14 + 56) = v9;
  *(_QWORD *)(v14 + 32) = v15;
  *(_QWORD *)(v14 + 40) = v16;
  v17 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setPropertiesToFetch_, v17);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1A9405960;
  sub_1A93F8040();
  v19 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v20 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v19, sel_initWithKey_ascending_, v20, 1);

  *(_QWORD *)(v18 + 32) = v21;
  sub_1A93F8328();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v22 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setSortDescriptors_, v22);

  objc_msgSend(v4, sel_setFetchLimit_, 50);
  sub_1A9072534(0, (unint64_t *)&unk_1ED2A4250);
  v23 = sub_1A93F89DC();
  v24 = v23;
  v36 = v4;
  if (!(v23 >> 62))
  {
    v25 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v37 = a1;
    if (v25)
      goto LABEL_3;
LABEL_15:
    v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_16:
    swift_bridgeObjectRelease_n();

    *v37 = v27;
    return;
  }
  swift_bridgeObjectRetain();
  v25 = sub_1A93F8E5C();
  v37 = a1;
  if (!v25)
    goto LABEL_15;
LABEL_3:
  if (v25 >= 1)
  {
    v26 = 0;
    v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v24 & 0xC000000000000001) != 0)
        v28 = (id)MEMORY[0x1AF4129DC](v26, v24);
      else
        v28 = *(id *)(v24 + 8 * v26 + 32);
      v29 = v28;
      objc_msgSend(v28, sel_storeId, v36);
      v30 = sub_1A93F9060();
      v32 = v31;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v27 = sub_1A907ECFC(0, v27[2] + 1, 1, v27);
      v34 = v27[2];
      v33 = v27[3];
      if (v34 >= v33 >> 1)
        v27 = sub_1A907ECFC((_QWORD *)(v33 > 1), v34 + 1, 1, v27);
      ++v26;
      v27[2] = v34 + 1;
      v35 = &v27[2 * v34];
      v35[4] = v30;
      v35[5] = v32;
    }
    while (v25 != v26);
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_1A911D6CC@<X0>(_QWORD *a1@<X8>)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v28;

  sub_1A93F8040();
  v1 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v2 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A48C8);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1A9405520;
  v5 = sub_1A93F8040();
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v6;
  v7 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setPropertiesToFetch_, v7);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A9405960;
  sub_1A93F8040();
  v9 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v10 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithKey_ascending_, v10, 0);

  *(_QWORD *)(v8 + 32) = v11;
  sub_1A93F8328();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v12 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSortDescriptors_, v12);

  objc_msgSend(v3, sel_setFetchLimit_, 50);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v13 = sub_1A93F89DC();
  if (!(v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_3;
LABEL_14:

    result = swift_bridgeObjectRelease();
    v17 = MEMORY[0x1E0DEE9D8];
LABEL_12:
    *a1 = v17;
    return result;
  }
  swift_bridgeObjectRetain();
  v14 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_14;
LABEL_3:
  v28 = MEMORY[0x1E0DEE9D8];
  result = sub_1A908182C(0, v14 & ~(v14 >> 63), 0);
  if ((v14 & 0x8000000000000000) == 0)
  {
    v26 = v3;
    v16 = 0;
    v17 = v28;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
        v18 = (id)MEMORY[0x1AF4129DC](v16, v13);
      else
        v18 = *(id *)(v13 + 8 * v16 + 32);
      v19 = v18;
      objc_msgSend(v18, sel_storeTrackId);
      v20 = sub_1A93F9060();
      v22 = v21;

      v24 = *(_QWORD *)(v28 + 16);
      v23 = *(_QWORD *)(v28 + 24);
      if (v24 >= v23 >> 1)
        sub_1A908182C(v23 > 1, v24 + 1, 1);
      ++v16;
      *(_QWORD *)(v28 + 16) = v24 + 1;
      v25 = v28 + 16 * v24;
      *(_QWORD *)(v25 + 32) = v20;
      *(_QWORD *)(v25 + 40) = v22;
    }
    while (v14 != v16);

    result = swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

id RecommendationModulesRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RecommendationModulesRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1A911DAFC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

}

id RecommendationModulesRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecommendationModulesRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t RecommendationModulesResponse.init(json:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  Swift::OpaquePointer v20;
  char v21[16];

  v2 = v1;
  v20._rawValue = a1;
  v3 = sub_1A93F7158();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for RecommendationModulesCache();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + 16) = MEMORY[0x1E0DEE9D8];
  v14 = objc_msgSend((id)objc_opt_self(), sel_sharedCacheDirectory);
  sub_1A93F7200();

  strcpy(v21, "ListenNowCache");
  v21[15] = -18;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CAFD60], v3);
  sub_1A90828B0();
  sub_1A93F7254();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v15 = &v13[*(int *)(v11 + 20)];
  *(_QWORD *)v15 = 0x4D73656C75646F4DLL;
  *((_QWORD *)v15 + 1) = 0xEF61746164617465;
  v16 = &v13[*(int *)(v11 + 24)];
  strcpy(v16, "ModuleContent-");
  v16[15] = -18;
  RecommendationModulesCache.writeToCache(with:)(v20);
  swift_bridgeObjectRelease();
  v17 = RecommendationModulesCache.modulesMetadata.getter();
  sub_1A9064714((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for RecommendationModulesCache);
  *(_QWORD *)(v2 + 16) = v17;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t RecommendationModulesResponse.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  char *v33;
  char v34;
  void (*v35)(char *, uint64_t);
  unint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  _OWORD v64[2];
  uint64_t v65[4];

  v54 = sub_1A93F7698();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v56 = (char *)&v51 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1A93F7158();
  v59 = *(_QWORD *)(v2 - 8);
  v60 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F726C();
  v58 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for RecommendationModulesCache();
  MEMORY[0x1E0C80A78](v57);
  v61 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F738C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v55 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v51 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v51 - v19;
  MEMORY[0x1E0C80A78](v21);
  v63 = (char *)&v51 - v22;
  v62 = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9D8];
  if (qword_1EEAB6CC0 != -1)
    swift_once();
  v23 = __swift_project_value_buffer(v9, (uint64_t)qword_1EEAB83D0);
  swift_beginAccess();
  sub_1A9062170(v23, (uint64_t)v11, (uint64_t *)&unk_1ED2AD360);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    swift_release();
    sub_1A905FD54((uint64_t)v11, (uint64_t *)&unk_1ED2AD360);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v63, v11, v12);
  v24 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v25 = objc_msgSend(v24, sel_syncValueForKey_, CFSTR("ListenNowStoreShelvesThrottleInterval"));

  if (v25)
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v64, 0, sizeof(v64));
  }
  sub_1A9062F08((uint64_t)v64, (uint64_t)v65, qword_1ED2AC800);
  v52 = v5;
  if (v65[3])
    swift_dynamicCast();
  else
    sub_1A905FD54((uint64_t)v65, qword_1ED2AC800);
  v26 = objc_msgSend((id)objc_opt_self(), sel_sharedCacheDirectory);
  sub_1A93F7200();

  strcpy((char *)v65, "ListenNowCache");
  HIBYTE(v65[1]) = -18;
  v27 = v59;
  v28 = v60;
  (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v4, *MEMORY[0x1E0CAFD60], v60);
  sub_1A90828B0();
  v29 = (uint64_t)v61;
  sub_1A93F7254();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v28);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v7, v52);
  v30 = v57;
  v31 = (_QWORD *)(v29 + *(int *)(v57 + 20));
  *v31 = 0x4D73656C75646F4DLL;
  v31[1] = 0xEF61746164617465;
  v32 = (char *)(v29 + *(int *)(v30 + 24));
  strcpy(v32, "ModuleContent-");
  v32[15] = -18;
  v33 = v63;
  sub_1A93F7308();
  sub_1A93F7380();
  sub_1A911FB30(&qword_1ED2A5C50, MEMORY[0x1E0CB08B0]);
  v34 = sub_1A93F7FEC();
  v35 = *(void (**)(char *, uint64_t))(v13 + 8);
  v35(v17, v12);
  v35(v20, v12);
  if ((v34 & 1) != 0
    || ((v36 = RecommendationModulesCache.modulesMetadata.getter(), v36 >> 62)
      ? (v37 = sub_1A93F8E5C())
      : (v37 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10)),
        swift_bridgeObjectRelease(),
        v37 < 1))
  {
    swift_release();
    sub_1A9064714(v29, (uint64_t (*)(_QWORD))type metadata accessor for RecommendationModulesCache);
    v35(v33, v12);
    return 0;
  }
  v38 = v56;
  sub_1A93F7680();
  v39 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v40 = v55;
  v39(v55, v33, v12);
  v41 = sub_1A93F7674();
  v42 = sub_1A93F87B4();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    v44 = swift_slowAlloc();
    v65[0] = v44;
    *(_DWORD *)v43 = 136315138;
    sub_1A911FB30((unint64_t *)&qword_1ED2A5C58, MEMORY[0x1E0CB08F0]);
    v45 = sub_1A93F9060();
    *(_QWORD *)&v64[0] = sub_1A906436C(v45, v46, v65);
    v29 = (uint64_t)v61;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    v35(v40, v12);
    _os_log_impl(&dword_1A904E000, v41, v42, "Returning cached recommendations response. Last cached date was: %s", v43, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v44, -1, -1);
    v47 = v43;
    v33 = v63;
    MEMORY[0x1AF41411C](v47, -1, -1);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v56, v54);
  }
  else
  {
    v35(v40, v12);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v54);
  }
  v50 = RecommendationModulesCache.modulesMetadata.getter();
  sub_1A9064714(v29, (uint64_t (*)(_QWORD))type metadata accessor for RecommendationModulesCache);
  v35(v33, v12);
  v48 = v62;
  *(_QWORD *)(v62 + 16) = v50;
  swift_bridgeObjectRelease();
  return v48;
}

uint64_t sub_1A911E588()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1A93F8E20();
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    sub_1A93F91E0();
    if (swift_dynamicCastMetatype() || (v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = (_QWORD *)(v2 + 32);
      while (*v5)
      {
        ++v5;
        if (!--v4)
          goto LABEL_3;
      }
      swift_bridgeObjectRelease();
      return v2 | 1;
    }
    return v1;
  }
}

uint64_t sub_1A911E650(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *i;
  uint64_t v6;

  v1 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1A93F8E20();
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_1A93F91E0();
    if (!swift_dynamicCastMetatype())
    {
      v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v4)
      {
        for (i = (_QWORD *)(v2 + 32); *i; ++i)
        {
          if (!--v4)
            return v1;
        }
        return v2 | 1;
      }
    }
    return v1;
  }
}

uint64_t sub_1A911E704(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1A929E41C(0, v1, 0);
    v2 = v11;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A929E41C(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v11;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A929E41C(v5 > 1, v6 + 1, 1);
        v2 = v11;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      v7 = v2 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A911E840(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1A929E5DC(0, v1, 0);
    v2 = v11;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A9FB8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9FB0);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A929E5DC(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v11;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A929E5DC(v5 > 1, v6 + 1, 1);
        v2 = v11;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      v7 = v2 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A911E988(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1A929E39C(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A929E39C(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A929E39C(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1A908A5DC(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A911EAAC(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  result = sub_1A929E6A0(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1AF4129DC](0, a1);
    result = sub_1A93F7EE4();
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  *(id *)(a1 + 32);
  result = sub_1A93F7EE4();
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1A911ECB8(unint64_t a1)
{
  return sub_1A911F0D0(a1, (unint64_t *)&qword_1ED2A4190);
}

uint64_t sub_1A911ECCC(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _OWORD v11[2];
  uint64_t v12;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v12 = MEMORY[0x1E0DEE9D8];
  result = sub_1A929E39C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x1AF4129DC](i, a1);
        type metadata accessor for ServerCategory();
        swift_dynamicCast();
        v3 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A929E39C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v12;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1A929E39C(v6 > 1, v7 + 1, 1);
          v3 = v12;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_1A908A5DC(v11, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = a1 + 32;
      type metadata accessor for ServerCategory();
      do
      {
        swift_retain();
        swift_dynamicCast();
        v3 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A929E39C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v12;
        }
        v10 = *(_QWORD *)(v3 + 16);
        v9 = *(_QWORD *)(v3 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_1A929E39C(v9 > 1, v10 + 1, 1);
          v3 = v12;
        }
        *(_QWORD *)(v3 + 16) = v10 + 1;
        sub_1A908A5DC(v11, (_OWORD *)(v3 + 32 * v10 + 32));
        v8 += 8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A911EEFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C18);
  v2 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1A929E7C4(0, v9, 0);
    v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v12 = *(_QWORD *)(v2 + 72);
    v10 = v17;
    do
    {
      sub_1A9062170(v11, (uint64_t)v4, &qword_1ED2A5C18);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A929E7C4(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v17;
      }
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1A929E7C4(v13 > 1, v14 + 1, 1);
        v10 = v17;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      sub_1A9062F08((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14, (uint64_t *)&unk_1EEABC500);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1A911F0BC(unint64_t a1)
{
  return sub_1A911F0D0(a1, (unint64_t *)&qword_1ED2A4230);
}

uint64_t sub_1A911F0D0(unint64_t a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  unint64_t v8;
  unint64_t v9;
  id *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  _OWORD v14[2];
  uint64_t v15;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    return v5;
  v15 = MEMORY[0x1E0DEE9D8];
  result = sub_1A929E39C(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        MEMORY[0x1AF4129DC](i, a1);
        sub_1A9072534(0, a2);
        swift_dynamicCast();
        v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A929E39C(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v15;
        }
        v9 = *(_QWORD *)(v5 + 16);
        v8 = *(_QWORD *)(v5 + 24);
        if (v9 >= v8 >> 1)
        {
          sub_1A929E39C(v8 > 1, v9 + 1, 1);
          v5 = v15;
        }
        *(_QWORD *)(v5 + 16) = v9 + 1;
        sub_1A908A5DC(v14, (_OWORD *)(v5 + 32 * v9 + 32));
      }
    }
    else
    {
      v10 = (id *)(a1 + 32);
      sub_1A9072534(0, a2);
      do
      {
        v11 = *v10;
        swift_dynamicCast();
        v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A929E39C(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v15;
        }
        v13 = *(_QWORD *)(v5 + 16);
        v12 = *(_QWORD *)(v5 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1A929E39C(v12 > 1, v13 + 1, 1);
          v5 = v15;
        }
        *(_QWORD *)(v5 + 16) = v13 + 1;
        sub_1A908A5DC(v14, (_OWORD *)(v5 + 32 * v13 + 32));
        ++v10;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

void sub_1A911F390(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  id v5;

  v4 = *(_QWORD *)(v2 + 16);
  if ((v4 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    MEMORY[0x1AF4129DC](a2, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((a2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
    {
      v5 = *(id *)(v4 + 8 * a2 + 32);
      return;
    }
    __break(1u);
  }
}

uint64_t sub_1A911F4B8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  if (!(v1 >> 62))
    return *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v2 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if ((v2 & 0x8000000000000000) == 0)
    return v2;
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

id sub_1A911F63C()
{
  objc_class *v0;
  char *v1;
  uint64_t (**v2)();
  char *v3;
  objc_super v5;

  v0 = (objc_class *)type metadata accessor for GenericDataSourceSection();
  v1 = (char *)objc_allocWithZone(v0);
  v2 = (uint64_t (**)())&v1[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  *v2 = sub_1A9123748;
  v2[1] = 0;
  v3 = &v1[OBJC_IVAR___MTGenericDataSourceSection_storedTitle];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0xE000000000000000;
  v5.receiver = v1;
  v5.super_class = v0;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t RecommendationModulesResponse.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RecommendationModulesResponse.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RecommendationModulesRequest()
{
  return objc_opt_self();
}

uint64_t sub_1A911F7AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  char v19;
  uint64_t v20;
  char v21;
  _OWORD *v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t i;
  _OWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  char v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  _OWORD v44[2];
  _OWORD v45[2];
  __int128 v46;
  _OWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v48 = a1;
  v49 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v50 = v8;
  v51 = 0;
  v52 = v11 & v9;
  v53 = a2;
  v54 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A92D0DDC(&v46);
  v12 = *((_QWORD *)&v46 + 1);
  if (!*((_QWORD *)&v46 + 1))
    goto LABEL_27;
  v13 = v46;
  sub_1A908A5DC(v47, v45);
  v14 = *(_QWORD **)a5;
  v16 = sub_1A9094640(v13, v12);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v19 = v15;
  if (v14[3] >= v17 + v18)
  {
    if ((a4 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_1A9306F64();
      if ((v19 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v23 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    v24 = (uint64_t *)(v23[6] + 16 * v16);
    *v24 = v13;
    v24[1] = v12;
    sub_1A908A5DC(v45, (_OWORD *)(v23[7] + 32 * v16));
    v25 = v23[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v23[2] = v27;
LABEL_16:
    sub_1A92D0DDC(&v46);
    for (i = *((_QWORD *)&v46 + 1); *((_QWORD *)&v46 + 1); i = *((_QWORD *)&v46 + 1))
    {
      v30 = v46;
      sub_1A908A5DC(v47, v45);
      v31 = *(_QWORD **)a5;
      v33 = sub_1A9094640(v30, i);
      v34 = v31[2];
      v35 = (v32 & 1) == 0;
      if (__OFADD__(v34, v35))
        goto LABEL_28;
      v36 = v32;
      if (v31[3] < v34 + v35)
      {
        sub_1A92FE0B8();
        v37 = sub_1A9094640(v30, i);
        if ((v36 & 1) != (v38 & 1))
          goto LABEL_30;
        v33 = v37;
      }
      if ((v36 & 1) != 0)
      {
        sub_1A906443C((uint64_t)v45, (uint64_t)v44);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
        swift_bridgeObjectRelease();
        v29 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v33);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
        sub_1A908A5DC(v44, v29);
      }
      else
      {
        v39 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v33 >> 6) + 64) |= 1 << v33;
        v40 = (uint64_t *)(v39[6] + 16 * v33);
        *v40 = v30;
        v40[1] = i;
        sub_1A908A5DC(v45, (_OWORD *)(v39[7] + 32 * v33));
        v41 = v39[2];
        v26 = __OFADD__(v41, 1);
        v42 = v41 + 1;
        if (v26)
          goto LABEL_29;
        v39[2] = v42;
      }
      sub_1A92D0DDC(&v46);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1A9120240();
    return swift_release();
  }
  sub_1A92FE0B8();
  v20 = sub_1A9094640(v13, v12);
  if ((v19 & 1) == (v21 & 1))
  {
    v16 = v20;
    if ((v19 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_1A906443C((uint64_t)v45, (uint64_t)v44);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
    swift_bridgeObjectRelease();
    v22 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v16);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    sub_1A908A5DC(v44, v22);
    goto LABEL_16;
  }
LABEL_30:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RecommendationModulesResponse()
{
  return objc_opt_self();
}

void sub_1A911FB24(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5;

  sub_1A911C1C0(a1, a2, a3, a4, a5, *(void (**)(_QWORD, void *))(v5 + 16), *(_QWORD *)(v5 + 24), *(void **)(v5 + 32));
}

uint64_t sub_1A911FB30(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1A93F738C();
    result = MEMORY[0x1AF414014](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for RecommendationModulesRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecommendationModulesRequest.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of RecommendationModulesRequest.perform(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t method lookup function for RecommendationModulesResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecommendationModulesResponse.__allocating_init(json:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of RecommendationModulesResponse.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of RecommendationModulesResponse.items(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of RecommendationModulesResponse.item(in:at:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of RecommendationModulesResponse.numberOfItems(in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of RecommendationModulesResponse.numberOfSections()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of RecommendationModulesResponse.section(at:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t sub_1A911FBF8(char *a1, void (**a2)(const void *, uint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  void (*v52)(uint64_t, _QWORD, _QWORD *, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (**v60)(const void *, uint64_t, _QWORD);
  uint64_t v61;
  char v62[24];
  uint64_t v63;
  uint64_t v64;

  v55 = a1;
  v3 = sub_1A93F7158();
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RecommendationModulesCache();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A93F7698();
  v58 = *(_QWORD *)(v16 - 8);
  v59 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v54 - v20;
  v22 = swift_allocObject();
  v60 = a2;
  v61 = v22;
  *(_QWORD *)(v22 + 16) = a2;
  _Block_copy(a2);
  if ((_s18PodcastsFoundation12AccountsUtilC25userAllowsPersonalizationSbvgZ_0() & 1) != 0)
  {
    type metadata accessor for RecommendationModulesResponse();
    swift_allocObject();
    v23 = RecommendationModulesResponse.init()();
    if (v23)
    {
      v60[2](v60, v23, 0);
      swift_release();
      return swift_release();
    }
    v39 = v55;
    v40 = sub_1A911C9E8();
    v41 = *(_QWORD *)&v39[OBJC_IVAR___MTRecommendationModulesRequest_moduleIDs];
    swift_bridgeObjectRetain();
    v42 = (uint64_t)v15;
    MediaRequest.Params.init(recommendationsPersonalizedPayload:contentTypes:moduleIDs:)(v40, (uint64_t)&unk_1E54D3EF0, v41, (uint64_t)v15);
    sub_1A93F7680();
    v43 = sub_1A93F7674();
    v44 = sub_1A93F87B4();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_1A904E000, v43, v44, "Retrieving recommendations.", v45, 2u);
      MEMORY[0x1AF41411C](v45, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v58 + 8))(v18, v59);
    v46 = v55;
    v47 = (uint64_t)&v55[OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController];
    swift_beginAccess();
    sub_1A905DC3C(v47, (uint64_t)v62);
    v48 = v63;
    v49 = v64;
    __swift_project_boxed_opaque_existential_1(v62, v63);
    v50 = (_QWORD *)swift_allocObject();
    v51 = v61;
    v50[2] = sub_1A90CAB4C;
    v50[3] = v51;
    v50[4] = v46;
    v52 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v49 + 56);
    swift_retain();
    v53 = v46;
    v52(v42, sub_1A912024C, v50, v48, v49);
    swift_release();
    sub_1A9064714(v42, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
  }
  else
  {
    v25 = (uint64_t)v12;
    v26 = v9;
    v54 = v7;
    v55 = (char *)v6;
    sub_1A93F7680();
    v27 = sub_1A93F7674();
    v28 = sub_1A93F87B4();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_1A904E000, v27, v28, "User does not allow personalization. Not fetching recommendation modules.", v29, 2u);
      MEMORY[0x1AF41411C](v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v58 + 8))(v21, v59);
    v30 = MEMORY[0x1E0DEE9D8];
    v31 = sub_1A91129D8(MEMORY[0x1E0DEE9D8]);
    type metadata accessor for RecommendationModulesResponse();
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = v30;
    v33 = objc_msgSend((id)objc_opt_self(), sel_sharedCacheDirectory);
    sub_1A93F7200();

    strcpy(v62, "ListenNowCache");
    v62[15] = -18;
    v34 = v56;
    v35 = v57;
    (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v5, *MEMORY[0x1E0CAFD60], v57);
    sub_1A90828B0();
    sub_1A93F7254();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v35);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *))(v54 + 8))(v26, v55);
    v36 = (_QWORD *)(v25 + *(int *)(v10 + 20));
    *v36 = 0x4D73656C75646F4DLL;
    v36[1] = 0xEF61746164617465;
    v37 = (char *)(v25 + *(int *)(v10 + 24));
    strcpy(v37, "ModuleContent-");
    v37[15] = -18;
    RecommendationModulesCache.writeToCache(with:)((Swift::OpaquePointer)v31);
    swift_bridgeObjectRelease();
    v38 = RecommendationModulesCache.modulesMetadata.getter();
    sub_1A9064714(v25, (uint64_t (*)(_QWORD))type metadata accessor for RecommendationModulesCache);
    *(_QWORD *)(v32 + 16) = v38;
    swift_bridgeObjectRelease();
    v60[2](v60, v32, 0);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1A9120200()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A9120228@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A911CE68(*(_QWORD *)(v1 + 16), a1);
}

void sub_1A9120230(_QWORD *a1@<X8>)
{
  sub_1A911D238(a1);
}

uint64_t sub_1A9120238@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A911D6CC(a1);
}

uint64_t sub_1A9120240()
{
  return swift_release();
}

uint64_t CacheDomain.memory.getter()
{
  return swift_retain();
}

void CacheDomain.disk.getter()
{
  type metadata accessor for CacheDomain.DiskCaches();
}

uint64_t sub_1A9120290(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

void type metadata accessor for CacheDomain.DiskCaches()
{
  JUMPOUT(0x1AF413F6CLL);
}

void CacheDomain.init(diskLocation:maxMemorySpace:notificationCenter:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a7;
  v21 = a8;
  v14 = sub_1A93F726C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a2;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v18, a1, v14, v16);
  CacheDomain.init(diskLocation:maxMemoryUse:notificationCenter:)((uint64_t)v18, v19, a3, a4, a5, a6, v20, v21);
}

uint64_t sub_1A9120378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

void CacheDomain.init(diskLocation:maxMemoryUse:notificationCenter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  _QWORD v14[11];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v16 = a3;
  v15 = sub_1A93F726C();
  v14[9] = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v14[6] = (char *)v14 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a4;
  v18 = a5;
  v19 = a6;
  v20 = a7;
  v21 = a8;
  type metadata accessor for CacheDomain.DiskCaches();
}

void sub_1A9120444(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;

  *(_QWORD *)(v8 - 144) = a1;
  *(_QWORD *)(v8 - 160) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v8 - 168) = (char *)&v14 - v9;
  v10 = sub_1A93F8988();
  MEMORY[0x1E0C80A78](v10);
  v12 = (double)v1 * 0.1;
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) != 0)
  {
    if (v12 > -1.0)
    {
      if (v12 < 1.84467441e19)
      {
        *(_QWORD *)(v8 - 200) = v11;
        *(_QWORD *)(v8 - 192) = v6;
        *(_QWORD *)(v8 - 184) = v2;
        AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        *(_QWORD *)(v8 - 120) = v5;
        *(_QWORD *)(v8 - 112) = AssociatedTypeWitness;
        *(_QWORD *)(v8 - 104) = v7;
        *(_QWORD *)(v8 - 96) = v4;
        *(_QWORD *)(v8 - 88) = v3;
        type metadata accessor for InMemoryAssetCache();
      }
LABEL_7:
      __break(1u);
      JUMPOUT(0x1A9120688);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_7;
}

void CacheDomain.DiskCaches.init(directory:maxMemoryBuffer:)(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  double v23;
  uint64_t AssociatedTypeWitness;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v33 = a6;
  v34 = a7;
  v39 = a5;
  v40 = a4;
  v37 = a2;
  v30 = a1;
  v32 = a8;
  v11 = sub_1A93F726C();
  v12 = *(_QWORD *)(v11 - 8);
  v29 = v11;
  MEMORY[0x1E0C80A78](v11);
  v38 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91A0);
  v15 = *(_QWORD *)(v14 - 8);
  v35 = v14;
  v36 = v15;
  MEMORY[0x1E0C80A78](v14);
  v31 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A93F885C();
  v26 = *(_QWORD *)(v17 - 8);
  v27 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A93F8808();
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v20);
  v22 = sub_1A93F7DB8();
  v23 = MEMORY[0x1E0C80A78](v22);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v12 + 16);
  v28(a8, a1, v11, v23);
  v25[2] = sub_1A9066C6C();
  v41 = 0;
  v42 = 0xE000000000000000;
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  v41 = 0xD000000000000015;
  v42 = 0x80000001A94439A0;
  sub_1A93F9474();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F7DA0();
  v41 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v21, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v19, *MEMORY[0x1E0DEF8D0], v27);
  sub_1A93F888C();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v41 = a3;
  v42 = AssociatedTypeWitness;
  v25[1] = a3;
  v43 = v39;
  v44 = v33;
  v45 = v34;
  type metadata accessor for InMemoryAssetCache();
}

void sub_1A912097C()
{
  sub_1A93F7A64();
  sub_1A9066D74(&qword_1ED2A9198, &qword_1ED2A91A0, MEMORY[0x1E0C960D0]);
  sub_1A9084DD0();
}

void sub_1A91209E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 168) + 8))(v6, v2);
  *(_QWORD *)(v7 - 128) = v1;
  *(_QWORD *)(v7 - 120) = v0;
  *(_QWORD *)(v7 - 112) = v5;
  *(_QWORD *)(v7 - 104) = v4;
  *(_QWORD *)(v7 - 96) = v3;
  type metadata accessor for DiskAssetCache();
}

void sub_1A9120A14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v4 - 152);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v4 - 232))(v5, *(_QWORD *)(v4 - 216), *(_QWORD *)(v4 - 224));
  *(_BYTE *)(v4 - 128) = 1;
  DiskAssetCache.__allocating_init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(v5, v0, v3, 0x100000000);
  v6 = *(_QWORD *)(v4 - 136);
  *(_QWORD *)(v4 - 128) = *(_QWORD *)(v4 - 264);
  *(_QWORD *)(v4 - 120) = v6;
  *(_QWORD *)(v4 - 112) = *(_QWORD *)(v4 - 144);
  *(_QWORD *)(v4 - 104) = v1;
  *(_QWORD *)(v4 - 96) = v2;
  type metadata accessor for CacheDomain.DiskCaches();
}

id sub_1A9120A84(int *a1)
{
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v10;

  v10 = *(_QWORD *)(v8 - 200);
  *(_QWORD *)(v10 + a1[15]) = v4;
  v2(v3, v5, v6);
  *(_BYTE *)(v8 - 128) = 0;
  *(_QWORD *)(v10 + a1[16]) = DiskAssetCache.__allocating_init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(v3, v1, (uint64_t)v7, 512);
  v2(v3, v5, v6);
  *(_BYTE *)(v8 - 128) = 0;
  *(_QWORD *)(v10 + a1[17]) = DiskAssetCache.__allocating_init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(v3, v1, (uint64_t)v7, 2048);
  *(_BYTE *)(v8 - 128) = 0;
  *(_QWORD *)(v10 + a1[18]) = DiskAssetCache.__allocating_init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(v5, v1, (uint64_t)v7, 0x8000);
  swift_retain_n();
  return v7;
}

uint64_t CacheDomain.DiskCaches.directory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CacheDomain.DiskCaches.persistent.getter()
{
  return swift_retain();
}

uint64_t CacheDomain.DiskCaches.lowUrgency.getter()
{
  return swift_retain();
}

uint64_t CacheDomain.DiskCaches.highUrgency.getter()
{
  return swift_retain();
}

uint64_t CacheDomain.DiskCaches.unblockSoftwareUpdateUrgency.getter()
{
  return swift_retain();
}

uint64_t CacheDomain.DiskCaches.with(urgency:)()
{
  return swift_retain();
}

uint64_t CacheDomain.DiskCaches.asset(at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return DiskAssetCache<>.asset(at:)(a1, *(_QWORD *)(a2 + 24), a3);
}

void CacheDomain.DiskCaches.store(asset:at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  DiskAssetCache<>.store(asset:at:)(a1, a2, *(_QWORD *)(a3 + 24));
}

unint64_t CacheDomain.DiskCaches.containsAsset(for:)(uint64_t a1, uint64_t a2)
{
  return (unint64_t)DiskAssetCache<>.containsAsset(for:)(a1, *(_QWORD *)(a2 + 24)) & 1;
}

uint64_t CacheDomain.DiskCaches.invalidate(at:)(uint64_t a1, uint64_t a2)
{
  return DiskAssetCache<>.invalidate(at:)(a1, *(_QWORD *)(a2 + 24));
}

uint64_t sub_1A9120C88(uint64_t a1, uint64_t a2)
{
  return CacheDomain.DiskCaches.invalidate(at:)(a1, a2);
}

void type metadata accessor for CacheDomain()
{
  JUMPOUT(0x1AF413F6CLL);
}

void sub_1A9120CA8()
{
  type metadata accessor for CacheDomain.DiskCaches();
}

uint64_t sub_1A9120D34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) == 0)
  {
    v5 = *(int *)(a3 + 60);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1A93F726C();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_retain();
    v9(v6, v7, v8);
    type metadata accessor for CacheDomain.DiskCaches();
  }
  v10 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  swift_retain();
  return v10;
}

void sub_1A9120E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 60);
  v5 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for CacheDomain.DiskCaches();
}

uint64_t sub_1A9120EA8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1A9120EEC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);

  *a1 = *a2;
  v3 = *(int *)(a3 + 60);
  v4 = (char *)a1 + v3;
  v5 = (char *)a2 + v3;
  v6 = sub_1A93F726C();
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  swift_retain();
  v7(v4, v5, v6);
  type metadata accessor for CacheDomain.DiskCaches();
}

uint64_t sub_1A9120F6C(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + a1[15]) = *(_QWORD *)(v3 + a1[15]);
  *(_QWORD *)(v2 + a1[16]) = *(_QWORD *)(v3 + a1[16]);
  *(_QWORD *)(v2 + a1[17]) = *(_QWORD *)(v3 + a1[17]);
  *(_QWORD *)(v2 + a1[18]) = *(_QWORD *)(v3 + a1[18]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

void sub_1A9120FDC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 60);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  type metadata accessor for CacheDomain.DiskCaches();
}

uint64_t sub_1A9121060(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + a1[15]) = *(_QWORD *)(v3 + a1[15]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v2 + a1[16]) = *(_QWORD *)(v3 + a1[16]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v2 + a1[17]) = *(_QWORD *)(v3 + a1[17]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v2 + a1[18]) = *(_QWORD *)(v3 + a1[18]);
  swift_retain();
  swift_release();
  return v1;
}

void sub_1A91210F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;

  *a1 = *a2;
  v3 = *(int *)(a3 + 60);
  v4 = (char *)a1 + v3;
  v5 = (char *)a2 + v3;
  v6 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v4, v5, v6);
  type metadata accessor for CacheDomain.DiskCaches();
}

uint64_t sub_1A912115C(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + a1[15]) = *(_QWORD *)(v3 + a1[15]);
  *(_QWORD *)(v2 + a1[16]) = *(_QWORD *)(v3 + a1[16]);
  *(_QWORD *)(v2 + a1[17]) = *(_QWORD *)(v3 + a1[17]);
  *(_QWORD *)(v2 + a1[18]) = *(_QWORD *)(v3 + a1[18]);
  return v1;
}

void sub_1A91211A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 60);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  type metadata accessor for CacheDomain.DiskCaches();
}

uint64_t sub_1A912121C(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + a1[15]) = *(_QWORD *)(v2 + a1[15]);
  swift_release();
  *(_QWORD *)(v3 + a1[16]) = *(_QWORD *)(v2 + a1[16]);
  swift_release();
  *(_QWORD *)(v3 + a1[17]) = *(_QWORD *)(v2 + a1[17]);
  swift_release();
  *(_QWORD *)(v3 + a1[18]) = *(_QWORD *)(v2 + a1[18]);
  swift_release();
  return v1;
}

uint64_t sub_1A9121288()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9121294(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2 != 0x7FFFFFFF)
    type metadata accessor for CacheDomain.DiskCaches();
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1A9121324()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_1A9121330(_QWORD *result, int a2, int a3)
{
  if (a3 != 0x7FFFFFFF)
    type metadata accessor for CacheDomain.DiskCaches();
  *result = (a2 - 1);
  return result;
}

uint64_t sub_1A91213B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F726C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A9121434(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1A93F726C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[16];
    *(uint64_t *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(uint64_t *)((char *)v4 + v8) = *(uint64_t *)((char *)a2 + v8);
    v9 = a3[18];
    *(uint64_t *)((char *)v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    *(uint64_t *)((char *)v4 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1A91214F0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A9121558(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1A91215EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A91216AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_1A9121724(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_release();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_release();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_release();
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  swift_release();
  return a1;
}

uint64_t sub_1A91217C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A91217D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 60));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1A912184C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9121858(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A93F726C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 60)) = (a2 - 1);
  return result;
}

uint64_t MetricsTopic.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1A9121904@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_1A9121910@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A912191C(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1A93F90C0();
}

uint64_t sub_1A912194C()
{
  sub_1A93F92DC();
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A91219A4()
{
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A91219E8()
{
  sub_1A93F92DC();
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

unint64_t MetricsTopic.debugDescription.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD000000000000018;
}

unint64_t sub_1A9121AD8()
{
  return MetricsTopic.debugDescription.getter();
}

uint64_t MetricsTopic.description.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t MetricsTopic.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_1A93F90CC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1A9121BD0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  v5 = sub_1A93F90CC();
  v7 = v6;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v5;
  a2[1] = v7;
  return result;
}

uint64_t MetricsTopic.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F912C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t sub_1A9121D30(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F912C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

unint64_t static MetricsTopic.follows.getter()
{
  return 0xD000000000000017;
}

unint64_t static MetricsTopic.log.getter()
{
  return 0xD000000000000013;
}

unint64_t static MetricsTopic.main.getter()
{
  return 0xD000000000000014;
}

unint64_t static MetricsTopic.performance.getter()
{
  return 0xD000000000000014;
}

unint64_t static MetricsTopic.play.getter()
{
  return 0xD000000000000014;
}

unint64_t static MetricsTopic.playActivityFeed.getter()
{
  return 0xD000000000000013;
}

unint64_t static MetricsTopic.test.getter()
{
  return 0xD000000000000014;
}

unint64_t static MetricsTopic.clickstream.getter()
{
  return 0xD000000000000014;
}

unint64_t sub_1A9121EA8()
{
  unint64_t result;

  result = qword_1EEAB7BC8;
  if (!qword_1EEAB7BC8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsTopic, &type metadata for MetricsTopic);
    atomic_store(result, (unint64_t *)&qword_1EEAB7BC8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for MetricsTopic(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MetricsTopic()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for MetricsTopic(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MetricsTopic(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsTopic(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsTopic(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsTopic()
{
  return &type metadata for MetricsTopic;
}

uint64_t sub_1A9122028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1A9122030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1A9122038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1A9122040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1A9122048(unint64_t a1, unint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_36;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = HIBYTE(a2) & 0xF;
  else
    v5 = a1 & 0xFFFFFFFFFFFFLL;
LABEL_5:
  v6 = MEMORY[0x1E0DEE9D8];
  if (!v5)
    return v6;
  v16 = MEMORY[0x1E0DEE9D8];
  result = sub_1A92A2110(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v8 = (v3 >> 59) & 1;
    if ((a2 & 0x1000000000000000) == 0)
      LOBYTE(v8) = 1;
    v9 = 4 << v8;
    if ((a2 & 0x2000000000000000) != 0)
      v10 = v4;
    else
      v10 = v3 & 0xFFFFFFFFFFFFLL;
    v14 = (a2 & 0x2000000000000000 | v3 & 0x1000000000000000) == 0;
    v11 = 15;
    v15 = v3;
    while (1)
    {
      v4 = v11 & 0xC;
      if (v4 == v9)
      {
        if (v10 <= (unint64_t)sub_1A934522C(v11, v3, a2) >> 16)
        {
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          v5 = sub_1A93F8124();
          goto LABEL_5;
        }
      }
      else if (v10 <= v11 >> 16)
      {
        goto LABEL_34;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        sub_1A93F8154();
      }
      else if (v14)
      {
        sub_1A93F8D48();
      }
      v6 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A92A2110(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v6 = v16;
      }
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1A92A2110(v12 > 1, v13 + 1, 1);
        v6 = v16;
      }
      *(_QWORD *)(v6 + 16) = v13 + 1;
      *(_QWORD *)(v6 + 8 * v13 + 32) = 1;
      if (v4 == v9)
      {
        v3 = v15;
        v11 = sub_1A934522C(v11, v15, a2);
        if ((a2 & 0x1000000000000000) == 0)
          goto LABEL_13;
LABEL_26:
        if (v10 <= v11 >> 16)
          goto LABEL_35;
        v11 = sub_1A93F8130();
        if (!--v5)
          return v6;
      }
      else
      {
        v3 = v15;
        if ((a2 & 0x1000000000000000) != 0)
          goto LABEL_26;
LABEL_13:
        v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        if (!--v5)
          return v6;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t ArtworkContent.inMemorySize.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  _BYTE v18[16];

  v1 = v0;
  v2 = sub_1A93F726C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for ArtworkContent();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A91224E0(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() != 1)
    __asm { BR              X10 }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 32))(v5, v8, v2);
  v9 = sub_1A93F7224();
  v11 = sub_1A9122048(v9, v10);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = 0;
    v14 = 0;
    do
    {
      v15 = *(_QWORD *)(v11 + 8 * v13 + 32);
      v16 = __OFADD__(v14, v15);
      v14 += v15;
      if (v16)
      {
        __break(1u);
        JUMPOUT(0x1A9122440);
      }
      ++v13;
    }
    while (v12 != v13);
    swift_bridgeObjectRelease();
    if (v14 < 0)
    {
      sub_1A93F8E08();
      __break(1u);
      JUMPOUT(0x1A9122494);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = 0;
  }
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  return v14;
}

uint64_t type metadata accessor for ArtworkContent()
{
  uint64_t result;

  result = qword_1ED2AA348;
  if (!qword_1ED2AA348)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A91224E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtworkContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9122524()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A9122568()
{
  return sub_1A93F92E8();
}

uint64_t sub_1A9122590()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A91225D0()
{
  _BYTE *v0;

  if (*v0)
    return 7107189;
  else
    return 1635017060;
}

uint64_t sub_1A91225FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9123AD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9122620()
{
  return 0;
}

uint64_t sub_1A912262C()
{
  sub_1A9122B84();
  return sub_1A93F945C();
}

uint64_t sub_1A9122654()
{
  sub_1A9122B84();
  return sub_1A93F9468();
}

uint64_t sub_1A9122684()
{
  return 12383;
}

uint64_t sub_1A9122694()
{
  sub_1A9122C0C();
  return sub_1A93F945C();
}

uint64_t sub_1A91226BC()
{
  sub_1A9122C0C();
  return sub_1A93F9468();
}

uint64_t sub_1A91226E4()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A9122724()
{
  return sub_1A93F92E8();
}

uint64_t sub_1A9122748()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A9122784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A93F90C0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A9122800()
{
  sub_1A9122BC8();
  return sub_1A93F945C();
}

uint64_t sub_1A9122828()
{
  sub_1A9122BC8();
  return sub_1A93F9468();
}

uint64_t ArtworkContent.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7BD0);
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v27 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1A93F726C();
  v26 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v25 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7BD8);
  v24 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ArtworkContent();
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7BE0);
  v10 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9122B84();
  sub_1A93F93D8();
  sub_1A91224E0(v31, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = v25;
    v13 = v26;
    v15 = v29;
    (*(void (**)(char *, uint64_t *, uint64_t))(v26 + 32))(v25, v9, v29);
    LOBYTE(v33) = 1;
    sub_1A9122BC8();
    v16 = v27;
    v17 = v32;
    sub_1A93F8FAC();
    sub_1A912312C(&qword_1EEAB7BF8, MEMORY[0x1E0CB0010]);
    v18 = v30;
    sub_1A93F9030();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v18);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v17);
  }
  else
  {
    v21 = *v9;
    v20 = v9[1];
    LOBYTE(v33) = 0;
    sub_1A9122C0C();
    v22 = v32;
    sub_1A93F8FAC();
    v33 = v21;
    v34 = v20;
    sub_1A9122C50();
    sub_1A93F9030();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v22);
    return sub_1A905F180(v21, v20);
  }
}

unint64_t sub_1A9122B84()
{
  unint64_t result;

  result = qword_1EEAB7BE8;
  if (!qword_1EEAB7BE8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9406030, &type metadata for ArtworkContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB7BE8);
  }
  return result;
}

unint64_t sub_1A9122BC8()
{
  unint64_t result;

  result = qword_1EEAB7BF0;
  if (!qword_1EEAB7BF0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9405FE0, &type metadata for ArtworkContent.UrlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB7BF0);
  }
  return result;
}

unint64_t sub_1A9122C0C()
{
  unint64_t result;

  result = qword_1EEAB7C00;
  if (!qword_1EEAB7C00)
  {
    result = MEMORY[0x1AF414014](&unk_1A9405F90, &type metadata for ArtworkContent.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB7C00);
  }
  return result;
}

unint64_t sub_1A9122C50()
{
  unint64_t result;

  result = qword_1EEAB7C08;
  if (!qword_1EEAB7C08)
  {
    result = MEMORY[0x1AF414014](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EEAB7C08);
  }
  return result;
}

uint64_t ArtworkContent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v34;
  _OWORD *v35;
  uint64_t v36;
  _OWORD *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  _QWORD *v48;
  __int128 v49;
  uint64_t v50;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7C10);
  v4 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  v44 = v4;
  MEMORY[0x1E0C80A78](v3);
  v47 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7C18);
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7C20);
  v45 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ArtworkContent();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v37 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v37 - v18;
  v20 = a1[3];
  v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_1A9122B84();
  v21 = v50;
  sub_1A93F93C0();
  if (v21)
    goto LABEL_7;
  v37 = v16;
  v38 = v19;
  v39 = v13;
  v22 = v46;
  v23 = v47;
  v50 = v11;
  v24 = sub_1A93F8F94();
  if (*(_QWORD *)(v24 + 16) != 1)
  {
    v30 = sub_1A93F8D00();
    swift_allocError();
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7C28);
    *v32 = v50;
    sub_1A93F8EF8();
    sub_1A93F8CE8();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x1E0DEC450], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v8);
LABEL_7:
    v28 = (uint64_t)v48;
    return __swift_destroy_boxed_opaque_existential_0(v28);
  }
  if ((*(_BYTE *)(v24 + 32) & 1) != 0)
  {
    LOBYTE(v49) = 1;
    sub_1A9122BC8();
    sub_1A93F8EEC();
    sub_1A93F726C();
    v25 = v8;
    sub_1A912312C(&qword_1EEAB7C30, MEMORY[0x1E0CB0038]);
    v26 = (uint64_t)v39;
    v27 = v43;
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v23, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v25);
    v28 = (uint64_t)v48;
    swift_storeEnumTagMultiPayload();
    v29 = v26;
  }
  else
  {
    LOBYTE(v49) = 0;
    sub_1A9122C0C();
    sub_1A93F8EEC();
    sub_1A91231B0();
    v34 = v42;
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v34);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v8);
    v28 = (uint64_t)v48;
    v35 = v37;
    *v37 = v49;
    swift_storeEnumTagMultiPayload();
    v29 = (uint64_t)v35;
  }
  v36 = (uint64_t)v38;
  sub_1A912316C(v29, (uint64_t)v38);
  sub_1A912316C(v36, v40);
  return __swift_destroy_boxed_opaque_existential_0(v28);
}

uint64_t sub_1A912312C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1A93F726C();
    result = MEMORY[0x1AF414014](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A912316C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtworkContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A91231B0()
{
  unint64_t result;

  result = qword_1EEAB7C38;
  if (!qword_1EEAB7C38)
  {
    result = MEMORY[0x1AF414014](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EEAB7C38);
  }
  return result;
}

uint64_t sub_1A91231F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArtworkContent.init(from:)(a1, a2);
}

uint64_t sub_1A9123208(_QWORD *a1)
{
  return ArtworkContent.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtworkContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1A93F726C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v9 = *a2;
      v8 = a2[1];
      sub_1A90D8068(v9, v8);
      *a1 = v9;
      a1[1] = v8;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ArtworkContent(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() != 1)
    return sub_1A905F180(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v2 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t *initializeWithCopy for ArtworkContent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1A93F726C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    v6 = *a2;
    v5 = a2[1];
    sub_1A90D8068(v6, v5);
    *a1 = v6;
    a1[1] = v5;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for ArtworkContent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1A9123474((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1A93F726C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      v6 = *a2;
      v5 = a2[1];
      sub_1A90D8068(v6, v5);
      *a1 = v6;
      a1[1] = v5;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A9123474(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArtworkContent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for ArtworkContent(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1A93F726C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ArtworkContent(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1A9123474((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1A93F726C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for ArtworkContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1A91235F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F726C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArtworkContent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A91236B0 + 4 * byte_1A9405C85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A91236E4 + 4 * asc_1A9405C80[v4]))();
}

uint64_t sub_1A91236E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A91236EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A91236F4);
  return result;
}

uint64_t sub_1A9123700(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9123708);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A912370C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9123714(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1A9123720(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkContent.CodingKeys()
{
  return &type metadata for ArtworkContent.CodingKeys;
}

uint64_t sub_1A9123748()
{
  return 0;
}

ValueMetadata *type metadata accessor for ArtworkContent.DataCodingKeys()
{
  return &type metadata for ArtworkContent.DataCodingKeys;
}

uint64_t getEnumTagSinglePayload for PodcastsBagFeatureFlags.Key(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s18PodcastsFoundation14ArtworkContentO14DataCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A91237F0 + 4 * byte_1A9405C8A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A9123810 + 4 * byte_1A9405C8F[v4]))();
}

_BYTE *sub_1A91237F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A9123810(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9123818(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9123820(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9123828(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9123830(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkContent.UrlCodingKeys()
{
  return &type metadata for ArtworkContent.UrlCodingKeys;
}

unint64_t sub_1A9123850()
{
  unint64_t result;

  result = qword_1EEAB7C40;
  if (!qword_1EEAB7C40)
  {
    result = MEMORY[0x1AF414014](&unk_1A9405DF8, &type metadata for ArtworkContent.UrlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB7C40);
  }
  return result;
}

unint64_t sub_1A9123898()
{
  unint64_t result;

  result = qword_1EEAB7C48;
  if (!qword_1EEAB7C48)
  {
    result = MEMORY[0x1AF414014](&unk_1A9405EB0, &type metadata for ArtworkContent.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB7C48);
  }
  return result;
}

unint64_t sub_1A91238E0()
{
  unint64_t result;

  result = qword_1EEAB7C50;
  if (!qword_1EEAB7C50)
  {
    result = MEMORY[0x1AF414014](&unk_1A9405F68, &type metadata for ArtworkContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB7C50);
  }
  return result;
}

unint64_t sub_1A9123928()
{
  unint64_t result;

  result = qword_1EEAB7C58;
  if (!qword_1EEAB7C58)
  {
    result = MEMORY[0x1AF414014](&unk_1A9405E20, &type metadata for ArtworkContent.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB7C58);
  }
  return result;
}

unint64_t sub_1A9123970()
{
  unint64_t result;

  result = qword_1EEAB7C60;
  if (!qword_1EEAB7C60)
  {
    result = MEMORY[0x1AF414014](&unk_1A9405E48, &type metadata for ArtworkContent.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB7C60);
  }
  return result;
}

unint64_t sub_1A91239B8()
{
  unint64_t result;

  result = qword_1EEAB7C68;
  if (!qword_1EEAB7C68)
  {
    result = MEMORY[0x1AF414014](&unk_1A9405D68, &type metadata for ArtworkContent.UrlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB7C68);
  }
  return result;
}

unint64_t sub_1A9123A00()
{
  unint64_t result;

  result = qword_1EEAB7C70;
  if (!qword_1EEAB7C70)
  {
    result = MEMORY[0x1AF414014](&unk_1A9405D90, &type metadata for ArtworkContent.UrlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB7C70);
  }
  return result;
}

unint64_t sub_1A9123A48()
{
  unint64_t result;

  result = qword_1EEAB7C78;
  if (!qword_1EEAB7C78)
  {
    result = MEMORY[0x1AF414014](&unk_1A9405ED8, &type metadata for ArtworkContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB7C78);
  }
  return result;
}

unint64_t sub_1A9123A90()
{
  unint64_t result;

  result = qword_1EEAB7C80;
  if (!qword_1EEAB7C80)
  {
    result = MEMORY[0x1AF414014](&unk_1A9405F00, &type metadata for ArtworkContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEAB7C80);
  }
  return result;
}

uint64_t sub_1A9123AD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t EpisodeBookmarkStateRule<>.eraseToAnyEpisodeBookmarkStateRule()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)(char a1, char a2)@<X8>)
{
  uint64_t v3;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v9, v3, a1, v7);
  return sub_1A9123C34((uint64_t)v9, a1, a2, a3);
}

uint64_t sub_1A9123C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(char a1, char a2)@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = *(_QWORD *)(a2 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v10 + v9, a1, a2);
  *a4 = sub_1A9123EDC;
  a4[1] = (uint64_t (*)(char, char))v10;
  return result;
}

Swift::Bool __swiftcall AnyEpisodeBookmarkStateRule.canMove(from:to:)(PodcastsFoundation::EpisodeBookmarkState from, PodcastsFoundation::EpisodeBookmarkState to)
{
  uint64_t (**v2)(_QWORD, _QWORD);

  return (*v2)(from & 1, to & 1) & 1;
}

uint64_t sub_1A9123CF0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t (**v2)(_QWORD, _QWORD);

  return (*v2)(*a1, *a2) & 1;
}

unint64_t sub_1A9123D1C(uint64_t a1)
{
  unint64_t result;

  result = sub_1A9123D40();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A9123D40()
{
  unint64_t result;

  result = qword_1EEAB7C88;
  if (!qword_1EEAB7C88)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AnyEpisodeBookmarkStateRule, &type metadata for AnyEpisodeBookmarkStateRule);
    atomic_store(result, (unint64_t *)&qword_1EEAB7C88);
  }
  return result;
}

_QWORD *assignWithCopy for AnyEpisodeBookmarkStateRule(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for AnyEpisodeBookmarkStateRule(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyEpisodeBookmarkStateRule(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyEpisodeBookmarkStateRule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

BOOL sub_1A9123E70(uint64_t a1, char a2)
{
  return (a2 & 1) == 0;
}

uint64_t sub_1A9123E7C(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t sub_1A9123E84()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1A9123EDC(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;

  v3 = *(_QWORD *)(v2 + 24);
  v6 = a1 & 1;
  v5 = a2 & 1;
  return (*(uint64_t (**)(char *, char *))(*(_QWORD *)(v3 + 8) + 24))(&v6, &v5) & 1;
}

uint64_t sub_1A9123F3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v35 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v33 = (uint64_t)&v32 - v9;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A93F8B8C();
    sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
    sub_1A912D6DC((unint64_t *)&qword_1ED2A1CA8, (unint64_t *)&qword_1ED2A1CA0);
    result = sub_1A93F8670();
    a1 = v42;
    v39 = v43;
    v11 = v44;
    v12 = v45;
    v13 = v46;
  }
  else
  {
    v14 = -1 << *(_BYTE *)(a1 + 32);
    v15 = *(_QWORD *)(a1 + 56);
    v39 = a1 + 56;
    v11 = ~v14;
    v16 = -v14;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v13 = v17 & v15;
    result = swift_bridgeObjectRetain();
    v12 = 0;
  }
  v34 = v11;
  v36 = MEMORY[0x1E0DEE9D8];
  v38 = (unint64_t)(v11 + 64) >> 6;
  v37 = MEMORY[0x1E0DEE9B0] + 8;
  v40 = a1;
LABEL_8:
  v18 = v12;
  v19 = v13;
  if (a1 < 0)
  {
    do
    {
      v21 = sub_1A93F8BE0();
      if (!v21)
        goto LABEL_39;
      v41 = v21;
      sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v22 = v47;
      swift_unknownObjectRelease();
      v12 = v18;
      v13 = v19;
      if (!v22)
        goto LABEL_39;
LABEL_31:
      v26 = v22;
      sub_1A927EC28(v26, (uint64_t)v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        v27 = v33;
        sub_1A912AB38((uint64_t)v4, v33);
        sub_1A912AB38(v27, v35);
        v28 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v28 = sub_1A9117A2C(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
        v30 = *(_QWORD *)(v28 + 16);
        v29 = *(_QWORD *)(v28 + 24);
        if (v30 >= v29 >> 1)
          v28 = sub_1A9117A2C(v29 > 1, v30 + 1, 1, v28);
        *(_QWORD *)(v28 + 16) = v30 + 1;
        v31 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
        v36 = v28;
        result = sub_1A912AB38(v35, v28 + v31 + *(_QWORD *)(v6 + 72) * v30);
        a1 = v40;
        goto LABEL_8;
      }
      result = sub_1A905FD54((uint64_t)v4, &qword_1ED2AAF68);
      v18 = v12;
      v19 = v13;
      a1 = v40;
    }
    while (v40 < 0);
  }
  if (v19)
  {
    v13 = (v19 - 1) & v19;
    v20 = __clz(__rbit64(v19)) | (v18 << 6);
    v12 = v18;
    goto LABEL_30;
  }
  v23 = v18 + 1;
  if (!__OFADD__(v18, 1))
  {
    if (v23 < v38)
    {
      v24 = *(_QWORD *)(v39 + 8 * v23);
      v12 = v18 + 1;
      if (v24)
        goto LABEL_29;
      v12 = v18 + 2;
      if (v18 + 2 >= v38)
        goto LABEL_39;
      v24 = *(_QWORD *)(v39 + 8 * v12);
      if (v24)
        goto LABEL_29;
      v12 = v18 + 3;
      if (v18 + 3 >= v38)
        goto LABEL_39;
      v24 = *(_QWORD *)(v39 + 8 * v12);
      if (v24)
        goto LABEL_29;
      v12 = v18 + 4;
      if (v18 + 4 >= v38)
        goto LABEL_39;
      v24 = *(_QWORD *)(v39 + 8 * v12);
      if (v24)
      {
LABEL_29:
        v13 = (v24 - 1) & v24;
        v20 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_30:
        v22 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v20);
        if (v22)
          goto LABEL_31;
        goto LABEL_39;
      }
      v12 = v18 + 5;
      if (v18 + 5 < v38)
      {
        v24 = *(_QWORD *)(v39 + 8 * v12);
        if (!v24)
        {
          v25 = v18 + 6;
          while (v38 != v25)
          {
            v24 = *(_QWORD *)(v39 + 8 * v25++);
            if (v24)
            {
              v12 = v25 - 1;
              a1 = v40;
              goto LABEL_29;
            }
          }
          goto LABEL_39;
        }
        goto LABEL_29;
      }
    }
LABEL_39:
    sub_1A9120240();
    return v36;
  }
  __break(1u);
  return result;
}

void sub_1A91243C4(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  _OWORD v12[9];
  _OWORD v13[2];
  _BYTE v14[40];
  _BYTE v15[40];

  v5 = a1[9];
  v12[8] = a1[8];
  v13[0] = v5;
  *(_OWORD *)((char *)v13 + 10) = *(_OWORD *)((char *)a1 + 154);
  v6 = a1[5];
  v12[4] = a1[4];
  v12[5] = v6;
  v7 = a1[7];
  v12[6] = a1[6];
  v12[7] = v7;
  v8 = a1[1];
  v12[0] = *a1;
  v12[1] = v8;
  v9 = a1[3];
  v12[2] = a1[2];
  v12[3] = v9;
  v10 = mach_absolute_time();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v10;
  v11[3] = a2;
  v11[4] = a3;
  sub_1A912D7AC((uint64_t)v12, (uint64_t)v14);
  sub_1A912D7AC((uint64_t)v14, (uint64_t)v15);
  __asm { BR              X10 }
}

void sub_1A9124480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  id v15;
  _QWORD v16[22];
  _OWORD v17[22];

  v4 = *(_QWORD *)(v3 - 120);
  if (v4 < 0)
  {
    __break(1u);
    JUMPOUT(0x1A912497CLL);
  }
  v5 = (void *)objc_opt_self();
  swift_retain();
  v6 = objc_msgSend(v5, sel_sharedInstance);
  v7 = objc_msgSend(v6, sel_playbackContext);

  v8 = swift_allocObject();
  v9 = v17[6];
  *(_OWORD *)(v8 + 168) = v17[7];
  v10 = v17[9];
  *(_OWORD *)(v8 + 184) = v17[8];
  *(_OWORD *)(v8 + 200) = v10;
  *(_OWORD *)(v8 + 210) = *(_OWORD *)(v2 + 154);
  v11 = v17[2];
  *(_OWORD *)(v8 + 104) = v17[3];
  v12 = v17[5];
  *(_OWORD *)(v8 + 120) = v17[4];
  *(_OWORD *)(v8 + 136) = v12;
  *(_OWORD *)(v8 + 152) = v9;
  v13 = v17[1];
  *(_OWORD *)(v8 + 56) = v17[0];
  *(_OWORD *)(v8 + 72) = v13;
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v4;
  *(_QWORD *)(v8 + 32) = v1;
  *(_QWORD *)(v8 + 40) = sub_1A912D7A0;
  *(_QWORD *)(v8 + 48) = v0;
  *(_OWORD *)(v8 + 88) = v11;
  v16[4] = sub_1A912D934;
  v16[5] = v8;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1A908A91C;
  v16[3] = &block_descriptor_95;
  v14 = _Block_copy(v16);
  v15 = v7;
  swift_retain();
  swift_retain();
  sub_1A912D274((uint64_t)v17);
  swift_release();
  objc_msgSend(v15, sel_performBlock_, v14);
  _Block_release(v14);
  swift_release();

}

uint64_t sub_1A91249A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD *))
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD v10[23];
  _BYTE v11[184];

  sub_1A9062F08(a1, (uint64_t)v11, &qword_1EEAB7DE0);
  if (qword_1EEAB6D68 != -1)
    swift_once();
  v5 = sub_1A93F7698();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EEABA690);
  v6 = sub_1A93F7674();
  v7 = sub_1A93F87B4();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 134217984;
    v10[0] = sub_1A9222B24(a2);
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v6, v7, "Local library request duration: %fs", v8, 0xCu);
    MEMORY[0x1AF41411C](v8, -1, -1);
  }

  sub_1A9062F08((uint64_t)v11, (uint64_t)v10, &qword_1EEAB7DE0);
  return a3(v10);
}

void sub_1A9124B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v9 = objc_msgSend(v8, sel_playbackContext);

  v10 = MEMORY[0x1E0DEE9D8];
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v11; ++i)
    {
      if (objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, *(_QWORD *)(a1 + 8 * i + 32)))
      {
        MEMORY[0x1AF412004]();
        if (*(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
          sub_1A93F834C();
        sub_1A93F8394();
        sub_1A93F8328();
      }
    }
    swift_bridgeObjectRelease();
    v10 = aBlock[0];
  }
  v13 = sub_1A9159A30(v10);
  swift_bridgeObjectRelease();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v9;
  v14[3] = v13;
  v14[4] = a1;
  v14[5] = v4;
  v14[6] = a2;
  v14[7] = a3;
  aBlock[4] = sub_1A912D6BC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_75;
  v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v16 = v9;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_performBlock_, v15);
  _Block_release(v15);

}

uint64_t sub_1A9124D14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t i;
  id v24;
  void *v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[176];
  void *v40[22];

  v37 = a5;
  v9 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v38 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
  sub_1A912D6DC((unint64_t *)&qword_1ED2A9590, (unint64_t *)&qword_1ED2A4230);
  v12 = (void *)sub_1A93F85EC();
  v13 = objc_msgSend(a1, sel_episodesForStoreTrackIDs_, v12);

  if (!v13)
    goto LABEL_23;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v14 = sub_1A93F8310();

  if (!(v14 >> 62))
  {
    if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  v28 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (!v28)
  {
LABEL_22:
    swift_bridgeObjectRelease();
LABEL_23:
    v40[0] = (void *)3;
    return sub_1A912C240(v40, v37, a6);
  }
LABEL_4:
  swift_getKeyPath();
  v40[0] = (void *)MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRetain();
  swift_retain();
  v15 = sub_1A912BE18(v14);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  v16 = sub_1A912B6B0(v15);
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(v16 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7E18);
    v17 = (void *)sub_1A93F8E8C();
  }
  else
  {
    v17 = (void *)MEMORY[0x1E0DEE9E0];
  }
  v40[0] = v17;
  v18 = (_QWORD *)swift_bridgeObjectRetain();
  sub_1A912AC58(v18, 1, v40);
  swift_bridgeObjectRelease();
  v19 = v40[0];
  swift_retain();
  v20 = sub_1A912BAF8(a3, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  v21 = (void *)MEMORY[0x1E0DEE9D8];
  v40[0] = (void *)MEMORY[0x1E0DEE9D8];
  if (!(v20 >> 62))
  {
    v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v22)
      goto LABEL_9;
LABEL_25:
    swift_bridgeObjectRelease();
    v27 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_37;
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  v22 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (!v22)
    goto LABEL_25;
LABEL_9:
  v36 = a6;
  if (v22 < 1)
  {
    __break(1u);
    goto LABEL_41;
  }
  for (i = 0; i != v22; ++i)
  {
    if ((v20 & 0xC000000000000001) != 0)
      v24 = (id)MEMORY[0x1AF4129DC](i, v20);
    else
      v24 = *(id *)(v20 + 8 * i + 32);
    v25 = v24;
    v26 = objc_msgSend(v24, sel_assetURL, v36, v37, v38);
    if (v26 || (v26 = objc_msgSend(v25, sel_enclosureURL)) != 0)
    {

      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v27 = (unint64_t)v40[0];
  a6 = v36;
  v21 = (void *)MEMORY[0x1E0DEE9D8];
  if (((unint64_t)v40[0] & 0x8000000000000000) != 0)
    goto LABEL_37;
LABEL_26:
  if ((v27 & 0x4000000000000000) == 0)
  {
    v30 = *(_QWORD *)(v27 + 16);
    if (!v30)
    {
LABEL_38:
      swift_release();
      v32 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_39:
      sub_1A912AC30((uint64_t)v40);
      sub_1A9062F08((uint64_t)v40, (uint64_t)v39, &qword_1EEAB7DD8);
      sub_1A912BFA8((uint64_t)v32, (uint64_t)v39, v37, a6);
      return swift_bridgeObjectRelease();
    }
    goto LABEL_28;
  }
LABEL_37:
  swift_bridgeObjectRetain();
  v30 = sub_1A93F8E5C();
  swift_release();
  if (!v30)
    goto LABEL_38;
LABEL_28:
  v40[0] = v21;
  sub_1A929E3B8(0, v30 & ~(v30 >> 63), 0);
  if ((v30 & 0x8000000000000000) == 0)
  {
    v31 = 0;
    v32 = v40[0];
    do
    {
      if ((v27 & 0xC000000000000001) != 0)
        v33 = (id)MEMORY[0x1AF4129DC](v31, v27);
      else
        v33 = *(id *)(v27 + 8 * v31 + 32);
      sub_1A927EC28(v33, (uint64_t)v11);
      v40[0] = v32;
      v35 = v32[2];
      v34 = v32[3];
      if (v35 >= v34 >> 1)
      {
        sub_1A929E3B8(v34 > 1, v35 + 1, 1);
        v32 = v40[0];
      }
      ++v31;
      v32[2] = v35 + 1;
      sub_1A912AB38((uint64_t)v11, (uint64_t)v32+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v35);
    }
    while (v30 != v31);
    swift_release();
    goto LABEL_39;
  }
LABEL_41:
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1A9125260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  void *v21;
  id v22;
  _QWORD aBlock[6];
  __int128 v25;
  __int128 v26;
  _BYTE v27[32];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[26];

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_BYTE *)(a1 + 168);
  *(_QWORD *)&v25 = *(_QWORD *)a1;
  *((_QWORD *)&v25 + 1) = v6;
  *(_QWORD *)&v26 = v7;
  *((_QWORD *)&v26 + 1) = v8;
  v27[0] = *(_BYTE *)(a1 + 32);
  *(_OWORD *)&v27[8] = *(_OWORD *)(a1 + 40);
  *(_QWORD *)&v27[24] = v9;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = xmmword_1A9406150;
  v33[2] = 0;
  *(_WORD *)v33 = 0;
  *(_OWORD *)&v33[8] = *(_OWORD *)(a1 + 152);
  v33[24] = v10;
  v33[25] = 0;
  v11 = (void *)objc_opt_self();
  sub_1A912C880(v25, v6, v7, v8, v27[0]);
  swift_bridgeObjectRetain();
  v12 = *(id *)&v27[8];
  v13 = objc_msgSend(v11, sel_sharedInstance);
  v14 = objc_msgSend(v13, sel_playbackContext);

  v15 = swift_allocObject();
  v16 = *(_OWORD *)v33;
  *(_OWORD *)(v15 + 144) = xmmword_1A9406150;
  *(_OWORD *)(v15 + 160) = v16;
  *(_OWORD *)(v15 + 170) = *(_OWORD *)&v33[10];
  v17 = v29;
  *(_OWORD *)(v15 + 80) = v28;
  *(_OWORD *)(v15 + 96) = v17;
  v18 = v31;
  *(_OWORD *)(v15 + 112) = v30;
  *(_OWORD *)(v15 + 128) = v18;
  v19 = v26;
  *(_OWORD *)(v15 + 16) = v25;
  *(_OWORD *)(v15 + 32) = v19;
  v20 = *(_OWORD *)&v27[16];
  *(_OWORD *)(v15 + 48) = *(_OWORD *)v27;
  *(_OWORD *)(v15 + 64) = v20;
  *(_QWORD *)(v15 + 192) = v3;
  *(_QWORD *)(v15 + 200) = a2;
  *(_QWORD *)(v15 + 208) = a3;
  *(_QWORD *)(v15 + 216) = v14;
  aBlock[4] = sub_1A912D5A8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_69;
  v21 = _Block_copy(aBlock);
  sub_1A912D274((uint64_t)&v25);
  swift_retain();
  swift_retain();
  v22 = v14;
  swift_release();
  objc_msgSend(v22, sel_performBlock_, v21);
  _Block_release(v21);

  return sub_1A912D5B8((uint64_t)&v25);
}

unint64_t sub_1A9125488(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  void *v21;
  unint64_t result;
  unint64_t v23;
  uint64_t v24;
  uint64_t i;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44[10];
  _OWORD v45[2];
  _BYTE v46[176];
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _OWORD v56[4];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v43 = (uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v42 = (uint64_t)&v38 - v14;
  v15 = a1[9];
  v55 = a1[8];
  v56[0] = v15;
  *(_OWORD *)((char *)v56 + 10) = *(__int128 *)((char *)a1 + 154);
  v16 = a1[5];
  v51 = a1[4];
  v52 = v16;
  v17 = a1[7];
  v53 = a1[6];
  v54 = v17;
  v18 = a1[1];
  v47 = *a1;
  v48 = v18;
  v19 = a1[3];
  v49 = a1[2];
  v50 = v19;
  v20 = sub_1A912598C();
  if (!v20)
  {
    *(_QWORD *)&v47 = 3;
    return sub_1A912C240((void **)&v47, a3, a4);
  }
  v21 = v20;
  v40 = a3;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  result = sub_1A93F89DC();
  v23 = result;
  v38 = v21;
  *(_QWORD *)&v47 = MEMORY[0x1E0DEE9D8];
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v24 = sub_1A93F8E5C();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v24 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v41 = v10;
  v39 = a4;
  if (v24)
  {
    if (v24 < 1)
    {
      __break(1u);
      goto LABEL_40;
    }
    for (i = 0; i != v24; ++i)
    {
      if ((v23 & 0xC000000000000001) != 0)
        v26 = (id)MEMORY[0x1AF4129DC](i, v23);
      else
        v26 = *(id *)(v23 + 8 * i + 32);
      v27 = v26;
      v28 = objc_msgSend(v26, sel_assetURL, v38, v39);
      if (v28 || (v28 = objc_msgSend(v27, sel_enclosureURL)) != 0)
      {

        sub_1A93F8D60();
        sub_1A93F8D90();
        sub_1A93F8D9C();
        sub_1A93F8D6C();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v29 = v47;
    v10 = v41;
    if ((v47 & 0x8000000000000000) != 0)
      goto LABEL_36;
  }
  else
  {
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_36;
  }
  if ((v29 & 0x4000000000000000) == 0)
  {
    v30 = *(_QWORD *)(v29 + 16);
    result = swift_retain();
    if (!v30)
    {
LABEL_37:
      v32 = MEMORY[0x1E0DEE9D8];
LABEL_38:
      swift_release_n();
      sub_1A912AC30((uint64_t)v46);
      sub_1A9062F08((uint64_t)v46, (uint64_t)v44, &qword_1EEAB7DD8);
      sub_1A916D618(v32, (uint64_t)v44, 0, (uint64_t)&v47);
      v44[8] = v55;
      v44[9] = v56[0];
      v45[0] = v56[1];
      *(_DWORD *)((char *)v45 + 15) = *(_DWORD *)((char *)&v56[1] + 15);
      v44[4] = v51;
      v44[5] = v52;
      v44[6] = v53;
      v44[7] = v54;
      v44[0] = v47;
      v44[1] = v48;
      v44[2] = v49;
      v44[3] = v50;
      sub_1A912CCFC(v44, v40, v39);

      return sub_1A912C514((uint64_t)&v47);
    }
    goto LABEL_22;
  }
LABEL_36:
  swift_retain();
  result = sub_1A93F8E5C();
  v30 = result;
  if (!result)
    goto LABEL_37;
LABEL_22:
  if (v30 >= 1)
  {
    v31 = 0;
    v32 = MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v29 & 0xC000000000000001) != 0)
        v33 = (id)MEMORY[0x1AF4129DC](v31, v29);
      else
        v33 = *(id *)(v29 + 8 * v31 + 32);
      v34 = v33;
      sub_1A927EC28(v34, (uint64_t)v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {
        sub_1A905FD54((uint64_t)v9, &qword_1ED2AAF68);
      }
      else
      {
        v35 = v42;
        sub_1A912AB38((uint64_t)v9, v42);
        sub_1A912AB38(v35, v43);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v32 = sub_1A9117A2C(0, *(_QWORD *)(v32 + 16) + 1, 1, v32);
        v37 = *(_QWORD *)(v32 + 16);
        v36 = *(_QWORD *)(v32 + 24);
        if (v37 >= v36 >> 1)
          v32 = sub_1A9117A2C(v36 > 1, v37 + 1, 1, v32);
        *(_QWORD *)(v32 + 16) = v37 + 1;
        sub_1A912AB38(v43, v32+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v37);
        v10 = v41;
      }
      ++v31;
    }
    while (v30 != v31);
    goto LABEL_38;
  }
LABEL_40:
  __break(1u);
  return result;
}

void *sub_1A912598C()
{
  uint64_t *v0;
  __int16 v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char v31;
  id v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *((_WORD *)v0 + 72);
  if (v1 == 2)
    return 0;
  v26 = *v0;
  v27 = v0[3];
  v29 = *((unsigned __int8 *)v0 + 32);
  v3 = v0[8];
  v4 = v0[9];
  v31 = v1;
  v5 = v0[11];
  v33 = v0[10];
  v34 = v3;
  v7 = v0[12];
  v6 = v0[13];
  v9 = v0[14];
  v8 = v0[15];
  v10 = v0[16];
  v28 = v0[17];
  sub_1A93F8040();
  v32 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  sub_1A90519B4(v3, v4, v33, v5, v7, v6, v9, v8, v10);
  v11 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v32, sel_initWithEntityName_, v11);

  v13 = v5;
  v2 = v12;
  v30 = v9;
  v14 = v8;
  v15 = EpisodeListSettings.playPredicate.getter();
  objc_msgSend(v12, sel_setPredicate_, v15);

  if (!BYTE1(v10))
  {
    v16 = objc_msgSend((id)objc_opt_self(), sel_sortDescriptorsForPubDateAscending_, 1);
    goto LABEL_7;
  }
  if (BYTE1(v10) == 4)
  {
    v16 = objc_msgSend((id)objc_opt_self(), sel_seasonSortDescriptors_, 4);
LABEL_7:
    v17 = v16;
    sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
    sub_1A93F8310();

    goto LABEL_9;
  }
  EpisodeSortType.descriptors.getter(SBYTE1(v10));
LABEL_9:
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v18 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setSortDescriptors_, v18);

  if (v29 != 4)
  {
    if (v29 == 2 && *(_QWORD *)(v26 + 16))
      goto LABEL_14;
LABEL_16:
    sub_1A912C71C(v34, v4, v33, v13, v7, v6, v30, v8, v10, v28, v31);
    return v2;
  }
  if (!v27)
    goto LABEL_16;
LABEL_14:
  swift_bridgeObjectRetain();
  v19 = objc_msgSend(v12, sel_predicate);
  if (v19)
  {
    v20 = v19;
    v21 = (void *)objc_opt_self();
    v22 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(v21, sel_predicateForEpisodeUuid_, v22);

    v24 = objc_msgSend(v20, "OR:", v23);
    objc_msgSend(v2, (SEL)&selRef_unsignedIntegerValue, v24);
    sub_1A912C71C(v34, v4, v33, v13, v7, v6, v30, v14, v10, v28, v31);

  }
  else
  {
    sub_1A912C71C(v34, v4, v33, v13, v7, v6, v30, v8, v10, v28, v31);
    swift_bridgeObjectRelease();
  }
  return v2;
}

void sub_1A9125D84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  void *v54;
  void *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89[10];
  _OWORD v90[2];
  _BYTE v91[176];
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  _BYTE v101[35];
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _OWORD v106[5];
  _OWORD v107[3];

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v88 = (uint64_t)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v87 = (uint64_t)&v70 - v19;
  v20 = objc_msgSend(a1, sel_podcastForStoreId_, a2, v18);
  if (!v20)
  {
    *(_QWORD *)&v92 = 3;
    sub_1A912C240((void **)&v92, a4, a5);
    return;
  }
  v21 = v20;
  v82 = a1;
  v22 = objc_msgSend(v20, sel_uuid);
  if (!v22)
  {
    v43 = objc_msgSend(v21, sel_episodes);
    if (v43)
    {
      v44 = v43;
      sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
      sub_1A912D6DC((unint64_t *)&qword_1ED2A1CA8, (unint64_t *)&qword_1ED2A1CA0);
      v45 = sub_1A93F85F8();

      v46 = sub_1A9123F3C(v45);
      swift_bridgeObjectRelease();
    }
    else
    {
      v46 = MEMORY[0x1E0DEE9D8];
    }
    sub_1A912AC30((uint64_t)&v92);
    sub_1A9062F08((uint64_t)&v92, (uint64_t)v89, &qword_1EEAB7DD8);
    sub_1A912BFA8(v46, (uint64_t)v89, a4, a5);
    swift_bridgeObjectRelease();

    return;
  }
  v23 = v22;
  v86 = v21;
  v83 = a4;
  v84 = a5;
  v24 = (void *)sub_1A93F8040();
  v26 = v25;

  v27 = *(unsigned __int16 *)(a6 + 144);
  v28 = v27 | (*(unsigned __int8 *)(a6 + 146) << 16);
  if (v27 == 2)
  {
    v28 = MTPodcastHidesPlayedEpisodesResolved((int)objc_msgSend(v86, sel_hidesPlayedEpisodes));
    v29 = *(_QWORD *)(a6 + 8);
    v30 = *(_QWORD *)(a6 + 16);
    v31 = *(_QWORD *)(a6 + 24);
    v80 = *(_QWORD *)a6;
    v81 = v24;
    v74 = v26;
    v75 = v31;
    v32 = *(_BYTE *)(a6 + 32);
    v34 = *(void **)(a6 + 40);
    v33 = *(_QWORD *)(a6 + 48);
    v78 = v29;
    v79 = v33;
    v35 = *(_QWORD *)(a6 + 56);
    v76 = v30;
    sub_1A912C880(v80, v29, v30, v31, v32);
    swift_bridgeObjectRetain();
    v77 = v34;
    v36 = v34;
    v37 = 0;
    v38 = 0uLL;
    v39 = (unint64_t)v74;
    v40 = xmmword_1A9406160;
    v41 = 3;
    v42 = 0uLL;
  }
  else
  {
    v74 = *(_QWORD *)(a6 + 136);
    v47 = *(_OWORD *)(a6 + 120);
    v72 = *(_OWORD *)(a6 + 104);
    v73 = v47;
    v48 = *(_OWORD *)(a6 + 88);
    v70 = *(_OWORD *)(a6 + 72);
    v71 = v48;
    v81 = *(id *)(a6 + 64);
    swift_bridgeObjectRelease();
    v37 = *(_BYTE *)(a6 + 169);
    v35 = *(_QWORD *)(a6 + 56);
    v49 = *(void **)(a6 + 40);
    v50 = *(_QWORD *)a6;
    v79 = *(_QWORD *)(a6 + 48);
    v80 = v50;
    v51 = *(_QWORD *)(a6 + 8);
    v77 = v49;
    v78 = v51;
    v52 = *(_QWORD *)(a6 + 16);
    v75 = *(_QWORD *)(a6 + 24);
    v76 = v52;
    v32 = *(_BYTE *)(a6 + 32);
    sub_1A912D274(a6);
    v42 = v72;
    v40 = v73;
    v39 = v70;
    v38 = v71;
    v41 = v74;
  }
  v53 = *(_BYTE *)(a6 + 168);
  *(_QWORD *)&v102 = v80;
  *((_QWORD *)&v102 + 1) = v78;
  *(_QWORD *)&v103 = v76;
  *((_QWORD *)&v103 + 1) = v75;
  LOBYTE(v104) = v32;
  *((_QWORD *)&v104 + 1) = v77;
  *(_QWORD *)&v105 = v79;
  *((_QWORD *)&v105 + 1) = v35;
  *(_QWORD *)&v106[0] = v81;
  *(_OWORD *)((char *)v106 + 8) = v39;
  *(_OWORD *)((char *)&v106[1] + 8) = v38;
  *(_OWORD *)((char *)&v106[2] + 8) = v42;
  *(_OWORD *)((char *)&v106[3] + 8) = v40;
  *((_QWORD *)&v106[4] + 1) = v41;
  LOWORD(v107[0]) = v28;
  BYTE2(v107[0]) = BYTE2(v28);
  *(_OWORD *)((char *)v107 + 8) = *(_OWORD *)(a6 + 152);
  BYTE8(v107[1]) = v53;
  BYTE9(v107[1]) = v37;
  v100 = v106[4];
  *(_OWORD *)v101 = v107[0];
  *(_OWORD *)&v101[10] = *(_OWORD *)((char *)v107 + 10);
  v96 = v106[0];
  v97 = v106[1];
  v98 = v106[2];
  v99 = v106[3];
  v92 = v102;
  v93 = v103;
  v94 = v104;
  v95 = v105;
  v54 = sub_1A912598C();
  if (!v54)
  {
    *(_QWORD *)&v92 = 3;
    sub_1A912C240((void **)&v92, v83, v84);
    sub_1A912D5B8((uint64_t)&v102);

    return;
  }
  v55 = v54;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v56 = sub_1A93F89DC();
  v57 = v56;
  v81 = v55;
  if (v56 >> 62)
  {
    swift_bridgeObjectRetain();
    v58 = sub_1A93F8E5C();
    if (v58)
      goto LABEL_14;
LABEL_30:
    v61 = MEMORY[0x1E0DEE9D8];
LABEL_31:
    swift_bridgeObjectRelease_n();
    sub_1A912AC30((uint64_t)v91);
    sub_1A9062F08((uint64_t)v91, (uint64_t)v89, &qword_1EEAB7DD8);
    sub_1A916D618(v61, (uint64_t)v89, 0, (uint64_t)&v92);
    v89[8] = v100;
    v89[9] = *(_OWORD *)v101;
    v90[0] = *(_OWORD *)&v101[16];
    *(_DWORD *)((char *)v90 + 15) = *(_DWORD *)&v101[31];
    v89[4] = v96;
    v89[5] = v97;
    v89[6] = v98;
    v89[7] = v99;
    v89[0] = v92;
    v89[1] = v93;
    v89[2] = v94;
    v89[3] = v95;
    sub_1A912CCFC(v89, v83, v84);

    sub_1A912D5B8((uint64_t)&v102);
    sub_1A912C514((uint64_t)&v92);
    return;
  }
  v58 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v58)
    goto LABEL_30;
LABEL_14:
  if (v58 >= 1)
  {
    v59 = 0;
    v60 = v57 & 0xC000000000000001;
    v61 = MEMORY[0x1E0DEE9D8];
    v85 = v14;
    do
    {
      if (v60)
        v62 = (id)MEMORY[0x1AF4129DC](v59, v57);
      else
        v62 = *(id *)(v57 + 8 * v59 + 32);
      v63 = v62;
      sub_1A927EC28(v63, (uint64_t)v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
      {
        sub_1A905FD54((uint64_t)v13, &qword_1ED2AAF68);
      }
      else
      {
        v64 = v57;
        v65 = v60;
        v66 = v58;
        v67 = v87;
        sub_1A912AB38((uint64_t)v13, v87);
        sub_1A912AB38(v67, v88);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v61 = sub_1A9117A2C(0, *(_QWORD *)(v61 + 16) + 1, 1, v61);
        v69 = *(_QWORD *)(v61 + 16);
        v68 = *(_QWORD *)(v61 + 24);
        if (v69 >= v68 >> 1)
          v61 = sub_1A9117A2C(v68 > 1, v69 + 1, 1, v61);
        *(_QWORD *)(v61 + 16) = v69 + 1;
        sub_1A912AB38(v88, v61+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v69);
        v58 = v66;
        v60 = v65;
        v57 = v64;
        v14 = v85;
      }
      ++v59;
    }
    while (v58 != v59);
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t sub_1A9126480(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  id v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35[10];
  _OWORD v36[2];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[19];
  unint64_t v48;

  v32 = a5;
  v13 = a9;
  v14 = sub_1A93F7134();
  v31 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (void *)sub_1A93F8010();
  v18 = objc_msgSend(a1, sel_playlistForUuid_, v17);

  if (v18)
  {
    v19 = objc_msgSend(v18, sel_episodes);
    v20 = MEMORY[0x1E0DEE9D8];
    if (v19)
    {
      v26 = a6;
      v27 = a7;
      v28 = v18;
      v29 = a9;
      v30 = a8;
      v48 = MEMORY[0x1E0DEE9D8];
      v21 = v19;
      sub_1A93F8760();
      v25 = v21;

      sub_1A9066CA8(&qword_1EEAB7E20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
      sub_1A93F8A9C();
      while (*((_QWORD *)&v38 + 1))
      {
        sub_1A908A5DC(&v37, v35);
        sub_1A906443C((uint64_t)v35, (uint64_t)&v33);
        sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
        if ((swift_dynamicCast() & 1) == 0)
          v34 = 0;
        v22 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
        if (v34)
        {
          MEMORY[0x1AF412004](v22);
          if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A93F834C();
          sub_1A93F8394();
          sub_1A93F8328();
        }
        sub_1A93F8A9C();
      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v14);
      v20 = v48;

      v13 = v29;
      a8 = v30;
      a7 = v27;
      v18 = v28;
      a6 = v26;
    }
    sub_1A91275D8(v32, v20, a6, a7, (uint64_t)v35);
    swift_bridgeObjectRelease();
    v45 = v35[8];
    v46 = v35[9];
    *(_OWORD *)v47 = v36[0];
    *(_DWORD *)&v47[15] = *(_DWORD *)((char *)v36 + 15);
    v41 = v35[4];
    v42 = v35[5];
    v43 = v35[6];
    v44 = v35[7];
    v37 = v35[0];
    v38 = v35[1];
    v39 = v35[2];
    v40 = v35[3];
    v36[0] = *(_OWORD *)v47;
    *(_DWORD *)((char *)v36 + 15) = *(_DWORD *)&v47[15];
    sub_1A912CCFC(v35, a8, v13);

    return sub_1A912C514((uint64_t)&v37);
  }
  else
  {
    *(_QWORD *)&v37 = 3;
    return sub_1A912C240((void **)&v37, a8, a9);
  }
}

void sub_1A91267B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v9;
  id v10;
  _QWORD *v11;
  void *v12;
  id v13;
  _QWORD v14[6];

  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v10 = objc_msgSend(v9, sel_playbackContext);

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = v10;
  v11[5] = v4;
  v11[6] = a3;
  v11[7] = a4;
  v14[4] = sub_1A912D518;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1A908A91C;
  v14[3] = &block_descriptor_63;
  v12 = _Block_copy(v14);
  swift_bridgeObjectRetain();
  v13 = v10;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlock_, v12);
  _Block_release(v12);

}

void sub_1A91268F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _BYTE v18[176];
  void *v19[22];

  v9 = (void *)objc_opt_self();
  v10 = (void *)sub_1A93F8010();
  v11 = objc_msgSend(v9, sel_upNextForPodcastUuid_ctx_, v10, a3);

  if (v11)
  {
    v12 = objc_msgSend(v11, sel_episodeUuid);
    if (!v12)
    {
      sub_1A93F8040();
      v12 = (id)sub_1A93F8010();
      swift_bridgeObjectRelease();
    }
    v13 = objc_msgSend(a3, sel_episodeForUuid_, v12);

    if (v13)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7958);
      v14 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) - 8) + 80);
      v15 = (v14 + 32) & ~v14;
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1A9405520;
      v17 = v13;
      sub_1A927EC28(v17, v16 + v15);
      sub_1A912AC30((uint64_t)v19);
      sub_1A9062F08((uint64_t)v19, (uint64_t)v18, &qword_1EEAB7DD8);
      sub_1A912BFA8(v16, (uint64_t)v18, a5, a6);
      swift_bridgeObjectRelease();

      return;
    }

  }
  v19[0] = (void *)3;
  sub_1A912C240(v19, a5, a6);
}

void sub_1A9126AA8(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  id v15;
  id v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  void *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  void *v30;
  id v31;
  id v32;
  _QWORD *v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _OWORD v54[2];

  v5 = v4;
  v10 = a1[9];
  v53 = a1[8];
  v54[0] = v10;
  *(_OWORD *)((char *)v54 + 10) = *(__int128 *)((char *)a1 + 154);
  v11 = a1[5];
  v49 = a1[4];
  v50 = v11;
  v12 = a1[7];
  v51 = a1[6];
  v52 = v12;
  v13 = a1[1];
  v45 = *a1;
  v46 = v13;
  v14 = a1[3];
  v47 = a1[2];
  v48 = v14;
  v15 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v16 = objc_msgSend(v15, sel_playbackContext);

  v17 = a1[9];
  v43 = a1[8];
  v44[0] = v17;
  *(_OWORD *)((char *)v44 + 10) = *(__int128 *)((char *)a1 + 154);
  v18 = a1[5];
  v39 = a1[4];
  v40 = v18;
  v19 = a1[7];
  v41 = a1[6];
  v42 = v19;
  v20 = a1[1];
  v35 = *a1;
  v36 = v20;
  v21 = a1[3];
  v37 = a1[2];
  v38 = v21;
  v22 = sub_1A912598C();
  if (v22)
  {
    v23 = v22;
    v24 = swift_allocObject();
    v25 = v51;
    *(_OWORD *)(v24 + 152) = v52;
    v26 = v54[0];
    *(_OWORD *)(v24 + 168) = v53;
    *(_OWORD *)(v24 + 184) = v26;
    *(_OWORD *)(v24 + 194) = *(_OWORD *)((char *)v54 + 10);
    v27 = v47;
    *(_OWORD *)(v24 + 88) = v48;
    v28 = v50;
    *(_OWORD *)(v24 + 104) = v49;
    *(_OWORD *)(v24 + 120) = v28;
    *(_OWORD *)(v24 + 136) = v25;
    v29 = v46;
    *(_OWORD *)(v24 + 40) = v45;
    *(_OWORD *)(v24 + 56) = v29;
    *(_QWORD *)(v24 + 16) = v16;
    *(_QWORD *)(v24 + 24) = v23;
    *(_QWORD *)(v24 + 32) = v5;
    *(_OWORD *)(v24 + 72) = v27;
    *(_QWORD *)(v24 + 216) = a2;
    *(_QWORD *)(v24 + 224) = a3;
    *(_QWORD *)(v24 + 232) = a4;
    *(_QWORD *)&v37 = sub_1A912D25C;
    *((_QWORD *)&v37 + 1) = v24;
    *(_QWORD *)&v35 = MEMORY[0x1E0C809B0];
    *((_QWORD *)&v35 + 1) = 1107296256;
    *(_QWORD *)&v36 = sub_1A908A91C;
    *((_QWORD *)&v36 + 1) = &block_descriptor_47;
    v30 = _Block_copy(&v35);
    sub_1A912D274((uint64_t)&v45);
    v31 = v16;
    v32 = v23;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v31, sel_performBlock_, v30);
    _Block_release(v30);

  }
  else
  {
    v33 = (_QWORD *)swift_allocObject();
    v33[2] = v16;
    v33[3] = a2;
    v33[4] = v5;
    v33[5] = a3;
    v33[6] = a4;
    *(_QWORD *)&v37 = sub_1A912D1A8;
    *((_QWORD *)&v37 + 1) = v33;
    *(_QWORD *)&v35 = MEMORY[0x1E0C809B0];
    *((_QWORD *)&v35 + 1) = 1107296256;
    *(_QWORD *)&v36 = sub_1A908A91C;
    *((_QWORD *)&v36 + 1) = &block_descriptor_41;
    v34 = _Block_copy(&v35);
    v32 = v16;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v32, sel_performBlock_, v34);
    _Block_release(v34);
  }

}

uint64_t sub_1A9126D6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[176];
  void *v33[22];

  v30 = a4;
  v31 = a5;
  v7 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)sub_1A93F82F8();
  v12 = objc_msgSend(a1, sel_episodesForUuids_, v11);

  if (v12)
  {
    sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
    sub_1A93F8310();

    v13 = sub_1A911E704(a2);
    swift_getKeyPath();
    v33[0] = (void *)MEMORY[0x1E0DEE9E8];
    swift_retain();
    v14 = swift_bridgeObjectRetain();
    v15 = sub_1A912C9DC(v14);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_retain();
    v16 = sub_1A912B818(v15);
    swift_bridgeObjectRelease();
    swift_release();
    if (*(_QWORD *)(v16 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7E10);
      v17 = (void *)sub_1A93F8E8C();
    }
    else
    {
      v17 = (void *)MEMORY[0x1E0DEE9E0];
    }
    v33[0] = v17;
    v18 = (_QWORD *)swift_bridgeObjectRetain();
    sub_1A912AFB8(v18, 1, v33);
    swift_bridgeObjectRelease();
    v19 = v33[0];
    swift_retain();
    v20 = sub_1A912BBF8(v13, (uint64_t)v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      v28 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
      if (v28)
      {
        swift_bridgeObjectRetain();
        v21 = sub_1A93F8E5C();
        swift_bridgeObjectRelease();
        if (!v21)
        {
          swift_bridgeObjectRelease();
          v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_16:
          sub_1A912AC30((uint64_t)v33);
          sub_1A9062F08((uint64_t)v33, (uint64_t)v32, &qword_1EEAB7DD8);
          sub_1A912BFA8((uint64_t)v23, (uint64_t)v32, v30, v31);
          return swift_bridgeObjectRelease();
        }
        goto LABEL_7;
      }
    }
    else
    {
      v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v21)
      {
LABEL_7:
        v33[0] = (void *)MEMORY[0x1E0DEE9D8];
        sub_1A929E3B8(0, v21 & ~(v21 >> 63), 0);
        if ((v21 & 0x8000000000000000) == 0)
        {
          v22 = 0;
          v23 = v33[0];
          do
          {
            if ((v20 & 0xC000000000000001) != 0)
              v24 = (id)MEMORY[0x1AF4129DC](v22, v20);
            else
              v24 = *(id *)(v20 + 8 * v22 + 32);
            sub_1A927EC28(v24, (uint64_t)v10);
            v33[0] = v23;
            v26 = v23[2];
            v25 = v23[3];
            if (v26 >= v25 >> 1)
            {
              sub_1A929E3B8(v25 > 1, v26 + 1, 1);
              v23 = v33[0];
            }
            ++v22;
            v23[2] = v26 + 1;
            sub_1A912AB38((uint64_t)v10, (uint64_t)v23+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v26);
          }
          while (v21 != v22);
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
        __break(1u);
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease();
    v33[0] = (void *)3;
    return sub_1A912C240(v33, v30, v31);
  }
LABEL_22:
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_1A9127130(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_uuid);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1A93F8040();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1A9127194(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_1A93F8010();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setUuid_);

}

uint64_t sub_1A91271F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15[10];
  _OWORD v16[2];
  _OWORD v17[10];
  _OWORD v18[2];

  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v11 = sub_1A93F89DC();
  if (a5[2])
  {
    v13 = a5[4];
    v12 = a5[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = 0;
    v12 = 0;
  }
  sub_1A91275D8(a4, v11, v13, v12, (uint64_t)v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15[8] = v17[8];
  v15[9] = v17[9];
  v16[0] = v18[0];
  *(_DWORD *)((char *)v16 + 15) = *(_DWORD *)((char *)v18 + 15);
  v15[4] = v17[4];
  v15[5] = v17[5];
  v15[6] = v17[6];
  v15[7] = v17[7];
  v15[0] = v17[0];
  v15[1] = v17[1];
  v15[2] = v17[2];
  v15[3] = v17[3];
  sub_1A912CCFC(v15, a6, a7);
  return sub_1A912C514((uint64_t)v17);
}

uint64_t sub_1A9127340(void (*a1)(_BYTE *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE v8[184];
  _OWORD v9[10];
  _BYTE v10[19];
  _OWORD v11[10];
  _OWORD v12[2];

  sub_1A9062F08(a4, (uint64_t)v11, &qword_1EEAB7DD8);
  swift_bridgeObjectRetain();
  sub_1A912C764(a4);
  sub_1A916D618(a3, (uint64_t)v11, 0, (uint64_t)v9);
  v11[8] = v9[8];
  v11[9] = v9[9];
  v12[0] = *(_OWORD *)v10;
  *(_DWORD *)((char *)v12 + 15) = *(_DWORD *)&v10[15];
  v11[4] = v9[4];
  v11[5] = v9[5];
  v11[6] = v9[6];
  v11[7] = v9[7];
  v11[0] = v9[0];
  v11[1] = v9[1];
  v11[2] = v9[2];
  v11[3] = v9[3];
  sub_1A912C50C((uint64_t)v11);
  sub_1A9062F08((uint64_t)v11, (uint64_t)v8, &qword_1EEAB7DE0);
  a1(v8);
  return sub_1A912C514((uint64_t)v9);
}

uint64_t sub_1A9127420(void (*a1)(_BYTE *), uint64_t a2, uint64_t a3)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v11[184];
  _OWORD v12[10];
  _OWORD v13[2];

  v5 = *(_OWORD *)(a3 + 144);
  v12[8] = *(_OWORD *)(a3 + 128);
  v12[9] = v5;
  v13[0] = *(_OWORD *)(a3 + 160);
  *(_DWORD *)((char *)v13 + 15) = *(_DWORD *)(a3 + 175);
  v6 = *(_OWORD *)(a3 + 80);
  v12[4] = *(_OWORD *)(a3 + 64);
  v12[5] = v6;
  v7 = *(_OWORD *)(a3 + 112);
  v12[6] = *(_OWORD *)(a3 + 96);
  v12[7] = v7;
  v8 = *(_OWORD *)(a3 + 16);
  v12[0] = *(_OWORD *)a3;
  v12[1] = v8;
  v9 = *(_OWORD *)(a3 + 48);
  v12[2] = *(_OWORD *)(a3 + 32);
  v12[3] = v9;
  sub_1A912C50C((uint64_t)v12);
  sub_1A9062F08((uint64_t)v12, (uint64_t)v11, &qword_1EEAB7DE0);
  sub_1A912D3DC(a3);
  a1(v11);
  return sub_1A912C514(a3);
}

void sub_1A91274C4(void *a1, void (*a2)(_BYTE *))
{
  _BYTE v4[96];
  _OWORD v5[10];
  _BYTE v6[19];
  _BYTE v7[184];
  _OWORD v8[10];
  _OWORD v9[2];

  if (a1 == (void *)3)
  {
    sub_1A912AC30((uint64_t)v4);
    sub_1A9062F08((uint64_t)v4, (uint64_t)v8, &qword_1EEAB7DD8);
    sub_1A916D618(MEMORY[0x1E0DEE9D8], (uint64_t)v8, 0, (uint64_t)v5);
    v8[8] = v5[8];
    v8[9] = v5[9];
    v9[0] = *(_OWORD *)v6;
    *(_DWORD *)((char *)v9 + 15) = *(_DWORD *)&v6[15];
    v8[4] = v5[4];
    v8[5] = v5[5];
    v8[6] = v5[6];
    v8[7] = v5[7];
    v8[0] = v5[0];
    v8[1] = v5[1];
    v8[2] = v5[2];
    v8[3] = v5[3];
    sub_1A912C50C((uint64_t)v8);
    sub_1A9062F08((uint64_t)v8, (uint64_t)v7, &qword_1EEAB7DE0);
    a2(v7);
    sub_1A912C514((uint64_t)v5);
  }
  else
  {
    *(_QWORD *)&v8[0] = a1;
    sub_1A912C4F0((uint64_t)v8);
    sub_1A9062F08((uint64_t)v8, (uint64_t)v7, &qword_1EEAB7DE0);
    sub_1A912C4E0(a1);
    a2(v7);
    sub_1A912C4FC(a1);
  }
}

uint64_t sub_1A91275D8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int16 v90;
  char v91;
  uint64_t v92;
  int64_t v93;
  __int16 v94;
  _QWORD v95[3];
  uint64_t v96;
  uint64_t v97;
  _BYTE v98[176];
  _BYTE v99[184];

  v61 = *(_QWORD *)a1;
  v62 = *(_QWORD *)(a1 + 8);
  v65 = *(_QWORD *)(a1 + 64);
  v66 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 88);
  v67 = *(_QWORD *)(a1 + 80);
  v11 = *(_QWORD *)(a1 + 96);
  v10 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 112);
  v12 = *(_QWORD *)(a1 + 120);
  v63 = *(_QWORD *)(a1 + 136);
  v64 = *(_QWORD *)(a1 + 128);
  v69 = *(unsigned __int8 *)(a1 + 146);
  v70 = *(unsigned __int8 *)(a1 + 32);
  v68 = *(unsigned __int16 *)(a1 + 144);
  v71 = *(_QWORD *)(a1 + 152);
  sub_1A912AC30((uint64_t)v99);
  if (!a4
    || (v60 = v9,
        swift_bridgeObjectRetain(),
        v14 = sub_1A912CFDC(a2, a3, a4),
        v16 = v15,
        swift_bridgeObjectRelease(),
        (v16 & 1) != 0))
  {
    v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DE8);
    v97 = sub_1A9066D74(&qword_1EEAB7DF0, &qword_1EEAB7DE8, MEMORY[0x1E0DEAF38]);
    v95[0] = a2;
    swift_bridgeObjectRetain();
LABEL_13:
    v20 = (uint64_t *)v99;
LABEL_14:
    sub_1A9062F08((uint64_t)v20, (uint64_t)v98, &qword_1EEAB7DD8);
    v21 = v96;
    v22 = v97;
    __swift_project_boxed_opaque_existential_1(v95, v96);
    v23 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v25 = sub_1A9127CF8((void (*)(char *, char *))sub_1A9127CC4, 0, v21, v23, MEMORY[0x1E0DEDCE8], v22, MEMORY[0x1E0DEDD18], v24);
    sub_1A9062F08((uint64_t)v98, (uint64_t)&v72, &qword_1EEAB7DD8);
    sub_1A916D618(v25, (uint64_t)&v72, 0, a5);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v95);
  }
  v17 = v14 + v71;
  if (__OFADD__(v14, v71))
  {
    __break(1u);
  }
  else
  {
    v55 = v11;
    v57 = v10;
    v10 = a2 >> 62;
    v59 = v14 + v71;
    if (!(a2 >> 62))
    {
      v18 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v18 < v17)
        v17 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v17 < v14)
        goto LABEL_47;
      if (v18 >= v14)
        goto LABEL_9;
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
  }
  swift_bridgeObjectRetain();
  v18 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (v18 < v17)
    v17 = v18;
  if (v17 < v14)
    goto LABEL_47;
  swift_bridgeObjectRetain();
  v54 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (v54 < v14)
    goto LABEL_46;
LABEL_9:
  if (v14 < 0)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v10)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v19 < v17)
    goto LABEL_49;
  if (v17 < 0)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v58 = v13;
  if ((a2 & 0xC000000000000001) == 0 || v14 == v17)
    goto LABEL_23;
  if (v14 >= (unint64_t)v17)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    v38 = (id)MEMORY[0x1AF4129DC](v17, a2);
    v37 = v58;
    goto LABEL_30;
  }
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v27 = v14;
  do
  {
    v28 = v27 + 1;
    sub_1A93F8CAC();
    v27 = v28;
  }
  while (v17 != v28);
LABEL_23:
  v56 = v12;
  v29 = a5;
  if (v10)
  {
    swift_bridgeObjectRetain();
    v30 = sub_1A93F8E68();
    v31 = v33;
    v14 = v34;
    v32 = v35;
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = a2 & 0xFFFFFFFFFFFFFF8;
    v31 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
    v32 = (2 * v17) | 1;
    swift_bridgeObjectRetain();
  }
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DF8);
  v97 = sub_1A9066D74(&qword_1EEAB7E00, &qword_1EEAB7DF8, MEMORY[0x1E0DEBF78]);
  v36 = (_QWORD *)swift_allocObject();
  v95[0] = v36;
  v36[2] = v30;
  v36[3] = v31;
  v36[4] = v14;
  v36[5] = v32;
  if (v18 <= v59)
  {
    a5 = v29;
    if (qword_1EEAB6D68 != -1)
      swift_once();
    v46 = sub_1A93F7698();
    __swift_project_value_buffer(v46, (uint64_t)qword_1EEABA690);
    v47 = sub_1A93F7674();
    v48 = sub_1A93F87B4();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v49 = 0;
      _os_log_impl(&dword_1A904E000, v47, v48, "This is the entire result", v49, 2u);
      MEMORY[0x1AF41411C](v49, -1, -1);
    }

    goto LABEL_13;
  }
  a5 = v29;
  if ((a2 & 0xC000000000000001) != 0)
    goto LABEL_52;
  v37 = v58;
  if (v17 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_54;
  }
  v38 = *(id *)(a2 + 8 * v17 + 32);
LABEL_30:
  v39 = objc_msgSend(v38, sel_uuid);

  if (!v39)
    goto LABEL_13;
  v40 = sub_1A93F8040();
  v42 = v41;

  if (v70 == 4)
  {
    v72 = v61;
    v73 = v62;
    v74 = v40;
    v75 = v42;
    v76 = 4;
    v77 = 0;
    v78 = 0;
    v79 = 0;
    v80 = v65;
    v81 = v66;
    v82 = v67;
    v83 = v60;
    v84 = v55;
    v85 = v57;
    v86 = v37;
    v87 = v56;
    v88 = v64;
    v89 = v63;
    v90 = v68;
    v91 = (v68 | (v69 << 16)) >> 16;
    v92 = v71;
    v93 = v17;
    v94 = 1;
    nullsub_1(&v72, v43, v44, v45);
    sub_1A912C8E4(v65, v66, v67, v60, v55, v57, v58, v56, v64, v63, v68);
    swift_bridgeObjectRetain();
LABEL_40:
    v20 = &v72;
    goto LABEL_14;
  }
  if (v70 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
    v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_1A9405520;
    *(_QWORD *)(v50 + 32) = v40;
    *(_QWORD *)(v50 + 40) = v42;
    v72 = v50;
    v73 = 0;
    v74 = 0;
    v75 = 0;
    v76 = 2;
    v77 = 0;
    v78 = 0;
    v79 = 0;
    v80 = v65;
    v81 = v66;
    v82 = v67;
    v83 = v60;
    v84 = v55;
    v85 = v57;
    v86 = v37;
    v87 = v56;
    v88 = v64;
    v89 = v63;
    v91 = (v68 | (v69 << 16)) >> 16;
    v90 = v68;
    v92 = v71;
    v93 = v17;
    v94 = 1;
    nullsub_1(&v72, v51, v52, v53);
    sub_1A912C8E4(v65, v66, v67, v60, v55, v57, v58, v56, v64, v63, v68);
    goto LABEL_40;
  }
LABEL_54:
  result = sub_1A93F8E14();
  __break(1u);
  return result;
}

void sub_1A9127CC4(id *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A927EC28(*a1, a2);
}

uint64_t sub_1A9127CF8(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v52 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_1A93F8A90();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  MEMORY[0x1E0C80A78](v19);
  v49 = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v37 - v22;
  MEMORY[0x1E0C80A78](v24);
  v37[1] = (char *)v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x1E0C80A78](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_1A93F81B4();
  v57 = sub_1A93F7EC0();
  v53 = sub_1A93F8DC0();
  sub_1A93F8D78();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_1A93F81A8();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1A93F8A9C();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v23, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v23, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v23, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v23, AssociatedTypeWitness);
      sub_1A93F8DA8();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_1A93F8A9C();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_1A93F8DA8();
      sub_1A93F8A9C();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

void sub_1A9128204(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v20 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v12 = objc_msgSend(v11, sel_playbackContext);

  sub_1A9064630(a2, (uint64_t)v10, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v20, v3);
  v13 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = (*(unsigned __int8 *)(v4 + 80) + v14 + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v16 = swift_allocObject();
  sub_1A912AB38((uint64_t)v10, v16 + v13);
  *(_QWORD *)(v16 + v14) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v16 + v15, v6, v3);
  aBlock[4] = sub_1A912AB7C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_0;
  v17 = _Block_copy(aBlock);
  v18 = v12;
  swift_release();
  objc_msgSend(v18, sel_performBlock_, v17);
  _Block_release(v17);

}

void sub_1A9128404(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  sub_1A906A3F0(a1 + *(int *)(v14 + 48), (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1A905FD54((uint64_t)v9, &qword_1ED2AD3D0);
    if (*(_QWORD *)(a1 + 88))
    {
LABEL_3:
      v15 = (void *)sub_1A93F8010();
      v16 = objc_msgSend(a2, sel_episodeForUuid_, v15);

      if (!v16)
        goto LABEL_17;
      goto LABEL_13;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    v17 = objc_msgSend(a2, sel_persistentStoreCoordinator);
    if (v17)
    {
      v18 = v17;
      v19 = sub_1A93F71A0();
      v29 = v14;
      v20 = (void *)v19;
      v21 = objc_msgSend(v18, sel_managedObjectIDForURIRepresentation_, v19);

      v14 = v29;
      if (v21)
      {
        v22 = objc_msgSend(a2, sel_objectWithID_, v21);

        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        objc_opt_self();
        v23 = swift_dynamicCastObjCClass();
        if (!v23)
        {
          v27 = 0;
LABEL_20:

          goto LABEL_21;
        }
        v24 = (void *)v23;
        v25 = v22;
        v22 = v24;
LABEL_14:
        v26 = objc_msgSend(v22, sel_assetURL);
        if (v26 || (v26 = objc_msgSend(v22, sel_enclosureURL)) != 0)
        {

          v27 = v22;
          sub_1A927EC28(v27, (uint64_t)v6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 0, 1, v14);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
          sub_1A93F8424();

LABEL_22:
          return;
        }
        v27 = v22;
        goto LABEL_20;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (*(_QWORD *)(a1 + 88))
      goto LABEL_3;
  }
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
LABEL_17:
    v27 = 0;
LABEL_21:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DD0);
    sub_1A93F8424();
    goto LABEL_22;
  }
  if ((*(_QWORD *)(a1 + 48) & 0x8000000000000000) == 0)
  {
    v16 = objc_msgSend(a2, sel_episodeForStoreTrackID_);
    if (v16)
    {
LABEL_13:
      v22 = v16;
      goto LABEL_14;
    }
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1A912879C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A9129D3C(a1, a2, a3, (uint64_t)&unk_1E54D95A8, (uint64_t)sub_1A912CCF0, (uint64_t)&block_descriptor_34);
}

uint64_t sub_1A91287B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  char *v53;
  id v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  _OWORD *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint64_t v114;
  uint64_t result;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int *v119;
  _OWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  int *v157;
  uint64_t v158;
  int *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _BYTE v163[176];
  _QWORD v164[23];

  v117 = a4;
  v118 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v7);
  v148 = (uint64_t)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v10 = *((_QWORD *)v9 - 1);
  MEMORY[0x1E0C80A78](v9);
  v147 = (uint64_t)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v116 - v13;
  MEMORY[0x1E0C80A78](v15);
  v125 = (uint64_t)&v116 - v16;
  MEMORY[0x1E0C80A78](v17);
  v154 = (uint64_t)&v116 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v19);
  v146 = (char *)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v145 = (uint64_t)&v116 - v22;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v116 - v24;
  v26 = sub_1A93F726C();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v149 = (char *)&v116 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
  MEMORY[0x1E0C80A78](v159);
  v123 = (uint64_t)&v116 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v124 = (char *)&v116 - v31;
  MEMORY[0x1E0C80A78](v32);
  v153 = (uint64_t)&v116 - v33;
  MEMORY[0x1E0C80A78](v34);
  v162 = (uint64_t)&v116 - v36;
  v37 = *(int **)(a1 + 16);
  v119 = v37;
  if (!v37)
  {
    v46 = 0;
    v161 = MEMORY[0x1E0DEE9D8];
LABEL_41:
    v9 = v119;
    if (qword_1EEAB6D68 != -1)
      goto LABEL_49;
    goto LABEL_42;
  }
  v38 = a1;
  v39 = a1 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
  v151 = *(_QWORD *)(v35 + 72);
  v120 = v14 + 96;
  v121 = v14 + 32;
  v116 = v38;
  swift_bridgeObjectRetain();
  v40 = v39;
  v155 = 0;
  v152 = a2;
  v41 = v37;
  v160 = v26;
  v161 = MEMORY[0x1E0DEE9D8];
  v122 = v10;
  v150 = v25;
  v156 = v27;
  v42 = (uint64_t)v124;
  v43 = v162;
  while (1)
  {
    v157 = v41;
    v158 = v40;
    sub_1A9064630(v40, v43, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
    sub_1A906A3F0(v43 + v159[8], (uint64_t)v25);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
    {
      sub_1A905FD54((uint64_t)v25, &qword_1ED2AD3D0);
      v46 = v152;
      v45 = v153;
    }
    else
    {
      v47 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
      v48 = v149;
      v47(v149, v25, v26);
      v46 = v152;
      v49 = objc_msgSend(v152, sel_persistentStoreCoordinator);
      if (!v49)
        goto LABEL_11;
      v50 = v49;
      v51 = (void *)sub_1A93F71A0();
      v52 = objc_msgSend(v50, sel_managedObjectIDForURIRepresentation_, v51);

      v48 = v149;
      if (v52)
      {
        v53 = v149;
        v54 = objc_msgSend(v46, sel_objectWithID_, v52);

        (*(void (**)(char *, uint64_t))(v156 + 8))(v53, v160);
        objc_opt_self();
        v55 = swift_dynamicCastObjCClass();
        v45 = v153;
        if (v55)
        {
          v56 = (id)v55;
          v57 = v162;
          sub_1A9064630(v162, v153, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
          goto LABEL_17;
        }

      }
      else
      {
LABEL_11:
        (*(void (**)(char *, uint64_t))(v156 + 8))(v48, v160);
        v45 = v153;
      }
      v43 = v162;
    }
    sub_1A9064630(v43, v45, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
    if (*(_QWORD *)(v45 + 40))
    {
      swift_bridgeObjectRetain();
      v58 = (void *)sub_1A93F8010();
      v56 = objc_msgSend(v46, sel_episodeForUuid_, v58);
      swift_bridgeObjectRelease();

    }
    else
    {
      v56 = 0;
    }
    v57 = v162;
LABEL_17:
    sub_1A9064714(v45, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
    sub_1A9064630(v57, v42, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
    if (v56)
    {
      sub_1A9064714(v42, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
      v59 = v56;
      v60 = v56;
    }
    else
    {
      if ((*(_BYTE *)(v42 + 8) & 1) != 0)
      {
        sub_1A9064714(v42, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
LABEL_31:
        v126 = 0;
LABEL_33:
        v68 = v123;
        sub_1A9064630(v57, v123, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
        v69 = v159;
        v70 = v159[9];
        v71 = (uint64_t *)(v68 + v159[10]);
        v72 = *v71;
        v73 = v71[1];
        v74 = (uint64_t *)(v68 + v159[16]);
        v75 = v74[1];
        v128 = *v74;
        v129 = v72;
        v131 = *(_QWORD *)v68;
        v132 = *(unsigned __int8 *)(v68 + 8);
        v133 = *(_QWORD *)(v68 + 16);
        v134 = *(unsigned __int8 *)(v68 + 24);
        v76 = *(_QWORD *)(v68 + 40);
        v77 = (uint64_t *)(v68 + v159[11]);
        v78 = *(_QWORD *)(v68 + v70);
        v79 = v68 + v159[12];
        v81 = *v77;
        v80 = v77[1];
        v135 = *(_QWORD *)(v68 + 32);
        v136 = v81;
        v127 = v80;
        sub_1A906A3F0(v79, v145);
        v82 = sub_1A93F738C();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v148, 1, 1, v82);
        v83 = (uint64_t *)(v68 + v69[13]);
        v138 = *(unsigned __int8 *)(v68 + v69[14]);
        v84 = v83[1];
        v137 = *v83;
        v85 = (uint64_t *)(v68 + v69[17]);
        v86 = *v85;
        v87 = v85[1];
        v88 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v156 + 56);
        v142 = v86;
        v143 = v88;
        v88(v146, 1, 1, v160);
        v89 = *(_QWORD *)(v68 + 48);
        v139 = *(_QWORD *)(v68 + 56);
        v140 = v89;
        v90 = (uint64_t *)(v68 + v69[15]);
        v91 = v90[1];
        v144 = *v90;
        v141 = v91;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v92 = v127;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v130 = sub_1A9112C3C(MEMORY[0x1E0DEE9D8]);
        sub_1A9064714(v68, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
        *(_QWORD *)v14 = v129;
        *((_QWORD *)v14 + 1) = v73;
        *((_QWORD *)v14 + 2) = v128;
        *((_QWORD *)v14 + 3) = v75;
        v93 = v121;
        *v121 = 0;
        v93[1] = 0;
        *((_QWORD *)v14 + 6) = v131;
        v14[56] = v132;
        *((_QWORD *)v14 + 8) = v133;
        v14[72] = v134;
        v94 = v136;
        *((_QWORD *)v14 + 10) = v135;
        *((_QWORD *)v14 + 11) = v76;
        v95 = v120;
        *v120 = 0u;
        v95[1] = 0u;
        v96 = &v14[v9[13]];
        *(_QWORD *)v96 = v94;
        *((_QWORD *)v96 + 1) = v92;
        *(_QWORD *)&v14[v9[14]] = v78;
        v97 = &v14[v9[15]];
        *(_QWORD *)v97 = 0;
        v97[8] = 0;
        sub_1A9062F08(v145, (uint64_t)&v14[v9[16]], &qword_1ED2AD3D0);
        v98 = &v14[v9[17]];
        *(_QWORD *)v98 = 0;
        *((_QWORD *)v98 + 1) = 0;
        *(_QWORD *)&v14[v9[18]] = 0;
        v14[v9[19]] = 1;
        sub_1A9062F08(v148, (uint64_t)&v14[v9[20]], (uint64_t *)&unk_1ED2AD360);
        v99 = &v14[v9[21]];
        *(_QWORD *)v99 = v137;
        *((_QWORD *)v99 + 1) = v84;
        v14[v9[22]] = 0;
        v14[v9[23]] = v138;
        v14[v9[24]] = 0;
        v14[v9[25]] = 0;
        v14[v9[26]] = 2;
        v14[v9[27]] = 4;
        v14[v9[28]] = 5;
        *(_QWORD *)&v14[v9[29]] = 0;
        *(_QWORD *)&v14[v9[30]] = 0;
        v14[v9[31]] = 0;
        v100 = &v14[v9[32]];
        *(_QWORD *)v100 = v142;
        *((_QWORD *)v100 + 1) = v87;
        v101 = &v14[v9[37]];
        v102 = v139;
        *(_QWORD *)v101 = v140;
        *((_QWORD *)v101 + 1) = v102;
        v14[v9[39]] = 1;
        *(_QWORD *)&v14[v9[33]] = v130;
        v14[v9[40]] = 0;
        v103 = &v14[v9[34]];
        *(_QWORD *)v103 = 0;
        *((_QWORD *)v103 + 1) = 0;
        v14[v9[41]] = 0;
        v14[v9[42]] = 0;
        v104 = &v14[v9[35]];
        *(_QWORD *)v104 = 0;
        *((_QWORD *)v104 + 1) = 0;
        v143(&v14[v9[12]], 1, 1, v160);
        sub_1A9062F08((uint64_t)v146, (uint64_t)&v14[v9[36]], &qword_1ED2AD3D0);
        v105 = &v14[v9[38]];
        v106 = v141;
        *(_QWORD *)v105 = v144;
        *((_QWORD *)v105 + 1) = v106;
        v14[v9[43]] = 1;
        v14[v9[44]] = 0;
        v14[v9[45]] = 4;
        sub_1A9064630((uint64_t)v14, v147, type metadata accessor for PodcastsMediaLibrary.MediaItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v161 = sub_1A9117A2C(0, *(_QWORD *)(v161 + 16) + 1, 1, v161);
        v10 = v122;
        v25 = v150;
        v108 = *(_QWORD *)(v161 + 16);
        v107 = *(_QWORD *)(v161 + 24);
        v42 = (uint64_t)v124;
        v109 = v126;
        if (v108 >= v107 >> 1)
          v161 = sub_1A9117A2C(v107 > 1, v108 + 1, 1, v161);
        v110 = v161;
        *(_QWORD *)(v161 + 16) = v108 + 1;
        sub_1A912AB38(v147, v110+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v108);

        sub_1A9064714((uint64_t)v14, type metadata accessor for PodcastsMediaLibrary.MediaItem);
        goto LABEL_4;
      }
      if ((*(_QWORD *)v42 & 0x8000000000000000) != 0)
        goto LABEL_48;
      v56 = objc_msgSend(v46, sel_episodeForStoreTrackID_);
      sub_1A9064714(v42, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
      if (!v56)
        goto LABEL_31;
      v60 = v56;
      v59 = 0;
    }
    v61 = v59;
    v62 = objc_msgSend(v60, sel_assetURL);
    if (!v62)
    {
      v62 = objc_msgSend(v60, sel_enclosureURL);
      if (!v62)
      {
        v126 = v56;

        v57 = v162;
        goto LABEL_33;
      }
    }

    if (__OFADD__(v155++, 1))
      break;
    v64 = v60;
    v65 = v125;
    sub_1A927EC28(v64, v125);
    sub_1A927F9A0(*(_QWORD *)(v162 + v159[15]), *(_QWORD *)(v162 + v159[15] + 8), v154);
    sub_1A9064714(v65, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v161 = sub_1A9117A2C(0, *(_QWORD *)(v161 + 16) + 1, 1, v161);
    v67 = *(_QWORD *)(v161 + 16);
    v66 = *(_QWORD *)(v161 + 24);
    if (v67 >= v66 >> 1)
      v161 = sub_1A9117A2C(v66 > 1, v67 + 1, 1, v161);
    v44 = v161;
    *(_QWORD *)(v161 + 16) = v67 + 1;
    sub_1A912AB38(v154, v44+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v67);

    v25 = v150;
LABEL_4:
    v43 = v162;
    sub_1A9064714(v162, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
    v40 = v158 + v151;
    v41 = (int *)((char *)v157 - 1);
    v26 = v160;
    v27 = v156;
    if (v157 == (int *)1)
    {
      swift_bridgeObjectRelease();
      v46 = v155;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  swift_once();
LABEL_42:
  v111 = sub_1A93F7698();
  __swift_project_value_buffer(v111, (uint64_t)qword_1EEABA690);
  swift_bridgeObjectRetain();
  v112 = sub_1A93F7674();
  v113 = sub_1A93F87B4();
  if (os_log_type_enabled(v112, v113))
  {
    v114 = swift_slowAlloc();
    *(_DWORD *)v114 = 134218496;
    v164[0] = v46;
    sub_1A93F8AA8();
    *(_WORD *)(v114 + 12) = 2048;
    v164[0] = v9;
    result = sub_1A93F8AA8();
    *(_WORD *)(v114 + 22) = 2048;
    if (!__OFSUB__(v9, v46))
    {
      v164[0] = (char *)v9 - (_BYTE *)v46;
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v112, v113, "Restored %ld / %ld media items. Returning %ld shallow items.", (uint8_t *)v114, 0x20u);
      MEMORY[0x1AF41411C](v114, -1, -1);

      goto LABEL_46;
    }
    __break(1u);
  }
  else
  {

    swift_bridgeObjectRelease();
LABEL_46:
    sub_1A912AC30((uint64_t)v164);
    sub_1A9062F08((uint64_t)v164, (uint64_t)v163, &qword_1EEAB7DD8);
    sub_1A912BFA8(v161, (uint64_t)v163, v117, v118);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1A9129458(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD v16[6];

  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v12 = objc_msgSend(v11, sel_playbackContext);

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = a2;
  *(_BYTE *)(v13 + 40) = a3 & 1;
  *(_QWORD *)(v13 + 48) = v5;
  *(_QWORD *)(v13 + 56) = a4;
  *(_QWORD *)(v13 + 64) = a5;
  v16[4] = sub_1A912C950;
  v16[5] = v13;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1A908A91C;
  v16[3] = &block_descriptor_25;
  v14 = _Block_copy(v16);
  swift_bridgeObjectRetain();
  v15 = v12;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_performBlock_, v14);
  _Block_release(v14);

}

uint64_t sub_1A91295A0(uint64_t a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BOOL4 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t result;
  void *v60;
  _BYTE v63[184];
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;

  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    *(_QWORD *)&v64 = MEMORY[0x1E0DEE9D8];
    sub_1A93F8D84();
    v11 = a1 + 32;
    v12 = v10;
    do
    {
      v11 += 8;
      sub_1A93F939C();
      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
      --v12;
    }
    while (v12);
  }
  v13 = (void *)objc_opt_self();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
  v14 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_predicateForPersistentIds_, v14);

  v60 = v15;
  v16 = objc_msgSend(a2, sel_objectsInEntity_predicate_sortDescriptors_, CFSTR("MTEpisode"), v15, 0);
  if (v16)
  {
    v17 = v16;
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
    v18 = sub_1A93F8310();

    v19 = sub_1A926140C(v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  v20 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    *(_QWORD *)&v64 = MEMORY[0x1E0DEE9D8];
    v21 = (unint64_t)&v64;
    sub_1A929E454(0, v10, 0);
    v22 = v64;
    v23 = (unint64_t *)(a1 + 32);
    while (1)
    {
      v25 = *v23++;
      v24 = v25;
      if ((v25 & 0x8000000000000000) != 0)
        break;
      *(_QWORD *)&v64 = v22;
      v27 = *(_QWORD *)(v22 + 16);
      v26 = *(_QWORD *)(v22 + 24);
      if (v27 >= v26 >> 1)
      {
        v21 = (unint64_t)&v64;
        sub_1A929E454(v26 > 1, v27 + 1, 1);
        v22 = v64;
      }
      *(_QWORD *)(v22 + 16) = v27 + 1;
      *(_QWORD *)(v22 + 8 * v27 + 32) = v24;
      if (!--v10)
        goto LABEL_15;
    }
    __break(1u);
LABEL_56:
    __break(1u);
  }
  else
  {
    v22 = MEMORY[0x1E0DEE9D8];
LABEL_15:
    if (!v19)
    {
      swift_bridgeObjectRelease();
      v21 = 0;
      v32 = 1;
LABEL_59:
      v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DE8);
      v55 = sub_1A9066D74(&qword_1EEAB7DF0, &qword_1EEAB7DE8, MEMORY[0x1E0DEAF38]);
      if (v32)
        v56 = v20;
      else
        v56 = v21;
      v66 = v55;
      *(_QWORD *)&v64 = v56;
      sub_1A905D4AC(&v64, (uint64_t)v67);
      v53 = v68;
      goto LABEL_63;
    }
    swift_getKeyPath();
    *(_QWORD *)&v64 = MEMORY[0x1E0DEE9E8];
    swift_retain();
    v28 = swift_bridgeObjectRetain();
    v29 = sub_1A912CB5C(v28);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_retain();
    v30 = sub_1A912B990(v29);
    swift_bridgeObjectRelease();
    swift_release();
    if (*(_QWORD *)(v30 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7E08);
      v31 = sub_1A93F8E8C();
    }
    else
    {
      v31 = MEMORY[0x1E0DEE9E0];
    }
    *(_QWORD *)&v64 = v31;
    v33 = (_QWORD *)swift_bridgeObjectRetain();
    sub_1A912B350(v33, 1, &v64);
    swift_bridgeObjectRelease();
    v34 = v64;
    swift_retain();
    v21 = sub_1A912BD18(v22, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    v32 = v21 == 0;
    if ((a4 & 1) != 0 || !v21)
      goto LABEL_59;
    v24 = v21 >> 62;
    if (!(v21 >> 62))
    {
      v35 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v35)
      {
LABEL_58:
        v32 = 0;
        goto LABEL_59;
      }
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRetain();
  v35 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (!v35)
    goto LABEL_58;
LABEL_24:
  v36 = 0;
  v20 = v21 & 0xC000000000000001;
  do
  {
    if (v20)
      v37 = (id)MEMORY[0x1AF4129DC](v36, v21);
    else
      v37 = *(id *)(v21 + 8 * v36 + 32);
    v38 = v37;
    v39 = (unint64_t)objc_msgSend(v37, sel_persistentID);

    if ((v39 & 0x8000000000000000) == 0 && (void *)v39 == a3)
    {
      if (v24)
        goto LABEL_37;
      v41 = v21 & 0xFFFFFFFFFFFFFF8;
      v42 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v42 >= v36)
      {
LABEL_36:
        v43 = *(_QWORD *)(v41 + 16);
        goto LABEL_39;
      }
      goto LABEL_68;
    }
    v40 = v36 + 1;
    if (__OFADD__(v36, 1))
      goto LABEL_56;
    ++v36;
  }
  while (v40 != v35);
  v36 = 0;
  if (!v24)
  {
    v41 = v21 & 0xFFFFFFFFFFFFFF8;
    v42 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_36;
  }
LABEL_37:
  swift_bridgeObjectRetain();
  v42 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (v42 < v36)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  swift_bridgeObjectRetain();
  v43 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
LABEL_39:
  if (v43 < v36)
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v36 < 0)
  {
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  if (v24)
  {
    swift_bridgeObjectRetain();
    v44 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v44 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v44 < v42)
    goto LABEL_66;
  if (v42 < 0)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (!v20 || v36 == v42)
    goto LABEL_51;
  if (v36 >= (unint64_t)v42)
  {
LABEL_69:
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v45 = v36;
  do
  {
    v46 = v45 + 1;
    sub_1A93F8CAC();
    v45 = v46;
  }
  while (v42 != v46);
LABEL_51:
  if (v24)
  {
    swift_bridgeObjectRetain();
    v47 = sub_1A93F8E68();
    v48 = v50;
    v36 = v51;
    v49 = v52;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v47 = v21 & 0xFFFFFFFFFFFFFF8;
    v48 = (v21 & 0xFFFFFFFFFFFFFF8) + 32;
    v49 = (2 * v42) | 1;
  }
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7DF8);
  v68 = v53;
  v69 = sub_1A9066D74(&qword_1EEAB7E00, &qword_1EEAB7DF8, MEMORY[0x1E0DEBF78]);
  v54 = (_QWORD *)swift_allocObject();
  v67[0] = v54;
  v54[2] = v47;
  v54[3] = v48;
  v54[4] = v36;
  v54[5] = v49;
LABEL_63:
  __swift_project_boxed_opaque_existential_1(v67, v53);
  type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v57 = sub_1A93F81D8();
  sub_1A912AC30((uint64_t)&v64);
  sub_1A9062F08((uint64_t)&v64, (uint64_t)v63, &qword_1EEAB7DD8);
  sub_1A912BFA8(v57, (uint64_t)v63, a6, a7);
  swift_bridgeObjectRelease();

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v67);
}

id sub_1A9129C98@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_persistentID);
  *a2 = result;
  return result;
}

uint64_t sub_1A9129CC8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  sub_1A927EC28(*a1, a2);
  v3 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 0, 1, v3);
}

void sub_1A9129D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A9129D3C(a1, a2, a3, (uint64_t)&unk_1E54D9440, (uint64_t)sub_1A912ABF4, (uint64_t)&block_descriptor_7);
}

void sub_1A9129D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  id v12;
  id v13;
  _QWORD *v14;
  void *v15;
  id v16;
  _QWORD v17[6];

  v12 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v13 = objc_msgSend(v12, sel_playbackContext);

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = v13;
  v14[4] = v6;
  v14[5] = a2;
  v14[6] = a3;
  v17[4] = a5;
  v17[5] = v14;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1A908A91C;
  v17[3] = a6;
  v15 = _Block_copy(v17);
  swift_bridgeObjectRetain();
  v16 = v13;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_performBlock_, v15);
  _Block_release(v15);

}

