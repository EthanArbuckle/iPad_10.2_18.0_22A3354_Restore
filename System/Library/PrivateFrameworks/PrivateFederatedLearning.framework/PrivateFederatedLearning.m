void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 2u);
}

void OUTLINED_FUNCTION_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_213C2FFC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

uint64_t PFLPrivatize(float *a1, vDSP_Length __N)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  vDSP_vclr(a1, 1, __N);
  +[_PFLLog framework](_PFLLog, "framework");
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    PFLPrivatize_cold_1(v2, v3, v4, v5, v6, v7, v8, v9);

  return 0;
}

uint64_t PFLPrivatizeCustomNorm(float *a1, vDSP_Length __N)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  vDSP_vclr(a1, 1, __N);
  +[_PFLLog framework](_PFLLog, "framework");
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    PFLPrivatizeCustomNorm_cold_1(v2, v3, v4, v5, v6, v7, v8, v9);

  return 0;
}

uint64_t PFLPrivatizeCustomNormWithLowerEpsilon(float *a1, vDSP_Length __N)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  vDSP_vclr(a1, 1, __N);
  +[_PFLLog framework](_PFLLog, "framework");
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    PFLPrivatizeCustomNormWithLowerEpsilon_cold_1(v2, v3, v4, v5, v6, v7, v8, v9);

  return 0;
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_213C330A8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_213C330C8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for espresso_network_t(uint64_t a1)
{
  sub_213C33548(a1, &qword_254D2D970);
}

uint64_t initializeBufferWithCopyOfBuffer for PFLTaskSource(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t sub_213C33170(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 168))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_213C33190(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 168) = v3;
  return result;
}

void type metadata accessor for espresso_buffer_t(uint64_t a1)
{
  sub_213C33548(a1, &qword_254D2D978);
}

uint64_t sub_213C331F8(uint64_t a1, uint64_t a2)
{
  return sub_213C33340(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_213C33204(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_213C86130();
  *a2 = 0;
  return result;
}

uint64_t sub_213C33278(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_213C8613C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_213C332F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_213C86148();
  v2 = sub_213C86124();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_213C33334(uint64_t a1, uint64_t a2)
{
  return sub_213C33340(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_213C33340(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_213C86148();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_213C3337C()
{
  sub_213C86148();
  sub_213C861CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C333BC()
{
  uint64_t v0;

  sub_213C86148();
  sub_213C867F0();
  sub_213C861CC();
  v0 = sub_213C86808();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_213C3342C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_213C86148();
  v2 = v1;
  if (v0 == sub_213C86148() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_213C86748();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_213C334B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_213C86124();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_213C334F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_213C86148();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_213C33548(a1, &qword_254D2D9E0);
}

void type metadata accessor for espresso_storage_type_t(uint64_t a1)
{
  sub_213C33548(a1, &qword_254D2D9E8);
}

void sub_213C33548(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_213C3358C()
{
  sub_213C33640(&qword_254D2DA08, (uint64_t)&unk_213C882E0);
  sub_213C33640((unint64_t *)&unk_254D2DA10, (uint64_t)&unk_213C88280);
  return sub_213C8661C();
}

uint64_t sub_213C335F8()
{
  return sub_213C33640(&qword_254D2D9F0, (uint64_t)&unk_213C88244);
}

uint64_t sub_213C3361C()
{
  return sub_213C33640(&qword_254D2D9F8, (uint64_t)&unk_213C88218);
}

uint64_t sub_213C33640(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for URLResourceKey(255);
    result = MEMORY[0x2199C0970](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_213C33680()
{
  return sub_213C33640(&qword_254D2DA00, (uint64_t)&unk_213C882B4);
}

uint64_t Data.toArray<A>()()
{
  uint64_t v1;

  sub_213C862D4();
  sub_213C85E3C();
  return v1;
}

uint64_t sub_213C3370C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (!result)
    goto LABEL_5;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 72);
  if (v5)
  {
    if (a2 - result != 0x8000000000000000 || v5 != -1)
    {
LABEL_5:
      v6 = sub_213C86118();
      MEMORY[0x2199C0970](MEMORY[0x24BEE09D8], v6);
      result = sub_213C862E0();
      *a4 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_213C337BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_213C3370C(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t Data.withUnsafeBufferPointer<A, B>(_:)()
{
  return sub_213C85E3C();
}

uint64_t sub_213C33808(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (!result)
  {
    v4 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(result, v4);
  }
  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 72);
  if (v3)
  {
    if (a2 - result != 0x8000000000000000 || v3 != -1)
    {
      v4 = (a2 - result) / v3;
      return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(result, v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Array.toData()()
{
  uint64_t v1;

  sub_213C862A4();
  return v1;
}

uint64_t sub_213C338BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;

  result = MEMORY[0x2199BF83C](a1, a2, *(_QWORD *)(v3 + 16));
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t sub_213C338EC(uint64_t a1)
{
  unint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  if (v1 <= 0xE)
    return sub_213C34F18((_BYTE *)(a1 + 32), (_BYTE *)(a1 + 32 + v1));
  sub_213C85D04();
  swift_allocObject();
  sub_213C85CC8();
  if (v1 < 0x7FFFFFFF)
    return v1 << 32;
  sub_213C85E30();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = v1;
  return result;
}

uint64_t sub_213C33998(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(result + 16);
  if (v1 >> 61)
  {
    __break(1u);
  }
  else
  {
    v2 = 4 * v1;
    if (4 * v1)
    {
      if (v2 <= 14)
      {
        return sub_213C34F18((_BYTE *)(result + 32), (_BYTE *)(result + 32 + v2));
      }
      else
      {
        sub_213C85D04();
        swift_allocObject();
        sub_213C85CC8();
        if ((unint64_t)v2 >= 0x7FFFFFFF)
        {
          sub_213C85E30();
          result = swift_allocObject();
          *(_QWORD *)(result + 16) = 0;
          *(_QWORD *)(result + 24) = v2;
        }
        else
        {
          return v1 << 34;
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_213C33A5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  char v5;
  void *v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  os_log_type_t type;
  uint64_t v22;
  uint64_t v23[4];
  uint64_t v24;

  v2 = v1;
  if (*(_QWORD *)(a1 + 16))
  {
    v4 = sub_213C4B3DC(0x65676E6172, 0xE500000000000000);
    if ((v5 & 1) != 0)
    {
      sub_213C35070(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)v23);
      sub_213C35170();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v6 = (void *)v24;
        if (*(_QWORD *)(a1 + 16))
        {
          v7 = sub_213C4B3DC(0x736D657469, 0xE500000000000000);
          if ((v8 & 1) != 0)
          {
            sub_213C35070(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)v23);
            __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBC8);
            if ((swift_dynamicCast() & 1) != 0)
            {
              v9 = *(_QWORD *)(v24 + 16);
              swift_bridgeObjectRelease();
              if (v9)
              {
                *(_QWORD *)(v1 + 24) = a1;
                v10 = objc_msgSend(v6, sel_BOOLValue);

                *(_BYTE *)(v2 + 16) = v10;
                return v2;
              }
            }
          }
        }

      }
    }
  }
  if (qword_254D2D960 != -1)
    swift_once();
  v11 = sub_213C86094();
  __swift_project_value_buffer(v11, (uint64_t)qword_254D2FF28);
  swift_bridgeObjectRetain();
  v12 = sub_213C8607C();
  v13 = sub_213C86400();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v23[0] = v22;
    *(_DWORD *)v14 = 136315650;
    v24 = sub_213C42558(0x65676E6172, 0xE500000000000000, v23);
    sub_213C86490();
    type = v13;
    *(_WORD *)(v14 + 12) = 2080;
    v24 = sub_213C42558(0x736D657469, 0xE500000000000000, v23);
    sub_213C86490();
    *(_WORD *)(v14 + 22) = 2080;
    swift_bridgeObjectRetain();
    v15 = sub_213C860D0();
    v16 = v2;
    v18 = v17;
    swift_bridgeObjectRelease();
    v24 = sub_213C42558(v15, v18, v23);
    sub_213C86490();
    swift_bridgeObjectRelease_n();
    v2 = v16;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213C25000, v12, type, "%s or %s not found in %s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v22, -1, -1);
    MEMORY[0x2199C0A30](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_213C3512C();
  swift_allocError();
  *v19 = 2;
  swift_willThrow();
  type metadata accessor for DediscoCategoricalMetadataEncoder();
  swift_deallocPartialClassInstance();
  return v2;
}

uint64_t sub_213C33DF8(uint64_t a1, uint64_t a2, size_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;

  v7 = sub_213C58D90(0, a3);
  v8 = *(_QWORD *)(v3 + 24);
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_13;
  swift_bridgeObjectRetain();
  v9 = sub_213C4B3DC(0x736D657469, 0xE500000000000000);
  if ((v10 & 1) == 0)
  {
    v23 = 0u;
    v24 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_213C35070(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v23);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v24 + 1))
  {
LABEL_15:
    sub_213C34FD8((uint64_t)&v23);
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    if (qword_254D2D960 != -1)
      swift_once();
    v17 = sub_213C86094();
    __swift_project_value_buffer(v17, (uint64_t)qword_254D2FF28);
    v18 = sub_213C8607C();
    v19 = sub_213C86400();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_213C25000, v18, v19, "Failed to find categorical items, return all false", v20, 2u);
      MEMORY[0x2199C0A30](v20, -1, -1);
    }

    goto LABEL_21;
  }
  v11 = (unint64_t)v22;
  v12 = sub_213C34C38(a1, a2, v22);
  v14 = v13;
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
    v15 = -1;
  else
    v15 = v12;
  if (__OFSUB__(a3, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v15 >= (uint64_t)(a3 - 1))
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    v11 = 0;
    if ((result & 1) != 0)
      goto LABEL_23;
    goto LABEL_26;
  }
  v11 = v15 + 1;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
LABEL_26:
    result = (uint64_t)sub_213C5F208(v7);
    v7 = result;
    if ((v11 & 0x8000000000000000) != 0)
      goto LABEL_12;
    goto LABEL_23;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    v23 = 0u;
    v24 = 0u;
    goto LABEL_15;
  }
LABEL_23:
  if (v11 < *(_QWORD *)(v7 + 16))
  {
    *(_BYTE *)(v7 + v11 + 32) = 1;
LABEL_21:
    v21 = sub_213C338EC(v7);
    swift_bridgeObjectRelease();
    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_213C3404C(size_t a1, float a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  int v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  unint64_t v30;
  __int128 v31;
  __int128 v32;

  v3 = a1;
  v5 = sub_213C58D90(0, a1);
  if ((~LODWORD(a2) & 0x7F800000) == 0 && (LODWORD(a2) & 0x7FFFFF) != 0)
    goto LABEL_21;
  v6 = *(_QWORD *)(v2 + 24);
  if (!*(_QWORD *)(v6 + 16))
  {
    v31 = 0u;
    v32 = 0u;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  v7 = sub_213C4B3DC(0x736D657469, 0xE500000000000000);
  if ((v8 & 1) == 0)
  {
    v31 = 0u;
    v32 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  sub_213C35070(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v32 + 1))
  {
LABEL_20:
    sub_213C34FD8((uint64_t)&v31);
    goto LABEL_21;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBA8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    if (qword_254D2D960 != -1)
      swift_once();
    v18 = sub_213C86094();
    __swift_project_value_buffer(v18, (uint64_t)qword_254D2FF28);
    v19 = sub_213C8607C();
    v20 = sub_213C86400();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_213C25000, v19, v20, "Failed to find categorical items or contains NaN, return all false", v21, 2u);
      MEMORY[0x2199C0A30](v21, -1, -1);
    }

    goto LABEL_26;
  }
  if (!(v30 >> 62))
  {
    v9 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_9;
LABEL_30:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x24BEE4AF8];
    v24 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v24)
      goto LABEL_38;
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  v9 = sub_213C865E0();
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_30;
LABEL_9:
  *(_QWORD *)&v31 = MEMORY[0x24BEE4AF8];
  sub_213C54744(0, v9 & ~(v9 >> 63), 0);
  if (v9 < 0)
  {
    __break(1u);
    goto LABEL_43;
  }
  v10 = 0;
  v11 = v31;
  do
  {
    if ((v30 & 0xC000000000000001) != 0)
      v12 = (id)MEMORY[0x2199BFF08](v10);
    else
      v12 = *(id *)(v30 + 8 * v10 + 32);
    v13 = v12;
    objc_msgSend(v12, sel_floatValue);
    v15 = v14;

    *(_QWORD *)&v31 = v11;
    v17 = *(_QWORD *)(v11 + 16);
    v16 = *(_QWORD *)(v11 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_213C54744(v16 > 1, v17 + 1, 1);
      v11 = v31;
    }
    ++v10;
    *(_QWORD *)(v11 + 16) = v17 + 1;
    *(_DWORD *)(v11 + 4 * v17 + 32) = v15;
  }
  while (v9 != v10);
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v11 + 16);
  if (v24)
  {
LABEL_31:
    v25 = 0;
    while (1)
    {
      v26 = *(_DWORD *)(v11 + 4 * v25 + 32);
      v27 = ~v26 & 0x7F800000;
      v28 = v26 & 0x7FFFFF;
      if (!v27 && v28 != 0)
        break;
      if (v24 == ++v25)
        goto LABEL_38;
    }
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
LABEL_38:
  v3 = sub_213C350AC(v11, v3, a2);
  swift_bridgeObjectRelease();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    if ((v3 & 0x8000000000000000) == 0)
      goto LABEL_40;
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
LABEL_43:
  result = (uint64_t)sub_213C5F208(v5);
  v5 = result;
  if ((v3 & 0x8000000000000000) != 0)
    goto LABEL_44;
LABEL_40:
  if (v3 < *(_QWORD *)(v5 + 16))
  {
    *(_BYTE *)(v5 + v3 + 32) = 1;
LABEL_26:
    v22 = sub_213C338EC(v5);
    swift_bridgeObjectRelease();
    return v22;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_213C343F8(uint64_t a1, size_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 v31;
  __int128 v32;

  v5 = sub_213C58D90(0, a2);
  v6 = *(_QWORD *)(v2 + 24);
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_44:
    v31 = 0u;
    v32 = 0u;
    goto LABEL_46;
  }
  swift_bridgeObjectRetain();
  v7 = sub_213C4B3DC(0x736D657469, 0xE500000000000000);
  if ((v8 & 1) == 0)
  {
    v31 = 0u;
    v32 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  sub_213C35070(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v32 + 1))
  {
LABEL_46:
    sub_213C34FD8((uint64_t)&v31);
LABEL_47:
    if (qword_254D2D960 != -1)
      goto LABEL_55;
    goto LABEL_48;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    goto LABEL_47;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
  v29 = a2 - 1;
  if (__OFSUB__(a2, 1))
  {
LABEL_58:
    __break(1u);
    return result;
  }
  v11 = v30[2];
  v28 = a1 + 32;
  swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    if (!v11)
      goto LABEL_18;
    v13 = v30[2];
    if (!v13)
      goto LABEL_54;
    v14 = (uint64_t *)(v28 + 16 * v12);
    v15 = *v14;
    v16 = v14[1];
    v17 = v30[4] == *v14 && v30[5] == v16;
    if (v17 || (result = sub_213C86748(), (result & 1) != 0))
    {
      if (v29 <= 0)
        goto LABEL_38;
      v18 = 0;
      goto LABEL_20;
    }
    if (v11 == 1)
      goto LABEL_18;
    if (v13 < 2)
    {
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    if (v30[6] != v15 || v30[7] != v16)
    {
      result = sub_213C86748();
      if ((result & 1) == 0)
      {
        v20 = v30 + 9;
        v21 = 2;
        while (v11 != v21)
        {
          v18 = v21;
          if (v13 == v21)
          {
            __break(1u);
            goto LABEL_57;
          }
          if (*(v20 - 1) != v15 || *v20 != v16)
          {
            result = sub_213C86748();
            v21 = v18 + 1;
            v20 += 2;
            if ((result & 1) == 0)
              continue;
          }
          if (v18 < v29)
            goto LABEL_20;
          goto LABEL_38;
        }
LABEL_18:
        if (v29 < 0)
          goto LABEL_38;
        v18 = -1;
        goto LABEL_20;
      }
    }
    if (v29 <= 1)
    {
LABEL_38:
      v19 = 0;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_39;
      goto LABEL_42;
    }
    v18 = 1;
LABEL_20:
    v19 = v18 + 1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      if ((v19 & 0x8000000000000000) != 0)
        goto LABEL_43;
      goto LABEL_39;
    }
LABEL_42:
    v5 = (uint64_t)sub_213C5F208(v5);
    if ((v19 & 0x8000000000000000) != 0)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
LABEL_39:
    if (v19 >= *(_QWORD *)(v5 + 16))
      break;
    ++v12;
    *(_BYTE *)(v5 + v19 + 32) = 1;
    if (v12 == v10)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  swift_once();
LABEL_48:
  v23 = sub_213C86094();
  __swift_project_value_buffer(v23, (uint64_t)qword_254D2FF28);
  v24 = sub_213C8607C();
  v25 = sub_213C86400();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_213C25000, v24, v25, "Failed to find categorical items, return all false", v26, 2u);
    MEMORY[0x2199C0A30](v26, -1, -1);
  }

LABEL_51:
  v27 = sub_213C338EC(v5);
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_213C34784(uint64_t a1, size_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  int v8;
  int v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  int v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  float v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  __int128 v47;
  __int128 v48;

  v5 = sub_213C58D90(0, a2);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v7 = (int *)(a1 + 32);
    do
    {
      v8 = *v7++;
      v9 = v8 & 0x7FFFFF;
      if ((~v8 & 0x7F800000) == 0 && v9 != 0)
        goto LABEL_27;
    }
    while (--v6);
  }
  v11 = *(_QWORD *)(v2 + 24);
  if (!*(_QWORD *)(v11 + 16))
  {
    v47 = 0u;
    v48 = 0u;
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  v12 = sub_213C4B3DC(0x736D657469, 0xE500000000000000);
  if ((v13 & 1) == 0)
  {
    v47 = 0u;
    v48 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  sub_213C35070(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v47);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v48 + 1))
  {
LABEL_26:
    sub_213C34FD8((uint64_t)&v47);
    goto LABEL_27;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBA8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_27:
    if (qword_254D2D960 != -1)
      swift_once();
    v24 = sub_213C86094();
    __swift_project_value_buffer(v24, (uint64_t)qword_254D2FF28);
    v25 = sub_213C8607C();
    v26 = sub_213C86400();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_213C25000, v25, v26, "Failed to find categorical items or contains NaN, return all false", v27, 2u);
      MEMORY[0x2199C0A30](v27, -1, -1);
    }

    goto LABEL_32;
  }
  if (v46 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_213C865E0();
    swift_bridgeObjectRelease();
    if (v14)
    {
LABEL_15:
      v45 = a1;
      *(_QWORD *)&v47 = MEMORY[0x24BEE4AF8];
      result = sub_213C54744(0, v14 & ~(v14 >> 63), 0);
      if (v14 < 0)
        goto LABEL_76;
      v16 = 0;
      v17 = v47;
      do
      {
        if ((v46 & 0xC000000000000001) != 0)
          v18 = (id)MEMORY[0x2199BFF08](v16);
        else
          v18 = *(id *)(v46 + 8 * v16 + 32);
        v19 = v18;
        objc_msgSend(v18, sel_floatValue, v45);
        v21 = v20;

        *(_QWORD *)&v47 = v17;
        v23 = *(_QWORD *)(v17 + 16);
        v22 = *(_QWORD *)(v17 + 24);
        if (v23 >= v22 >> 1)
        {
          sub_213C54744(v22 > 1, v23 + 1, 1);
          v17 = v47;
        }
        ++v16;
        *(_QWORD *)(v17 + 16) = v23 + 1;
        *(_DWORD *)(v17 + 4 * v23 + 32) = v21;
      }
      while (v14 != v16);
      result = swift_bridgeObjectRelease();
      a1 = v45;
      v29 = *(_QWORD *)(v17 + 16);
      if (!v29)
        goto LABEL_44;
      goto LABEL_37;
    }
  }
  else
  {
    v14 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_15;
  }
  result = swift_bridgeObjectRelease();
  v17 = MEMORY[0x24BEE4AF8];
  v29 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  if (v29)
  {
LABEL_37:
    v30 = 0;
    while (1)
    {
      v31 = *(_DWORD *)(v17 + 4 * v30 + 32);
      v32 = ~v31 & 0x7F800000;
      v33 = v31 & 0x7FFFFF;
      if (!v32 && v33 != 0)
        break;
      if (v29 == ++v30)
        goto LABEL_44;
    }
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
LABEL_44:
  v35 = *(_QWORD *)(a1 + 16);
  if (!v35)
  {
    swift_bridgeObjectRelease();
LABEL_32:
    v28 = sub_213C338EC(v5);
    swift_bridgeObjectRelease();
    return v28;
  }
  v36 = __OFSUB__(a2, 1);
  v37 = a2 - 1;
  if (v36)
    goto LABEL_77;
  v38 = a1 + 32;
  result = swift_bridgeObjectRetain();
  v39 = 0;
  while (1)
  {
    if (!v29)
    {
LABEL_56:
      if (v37 < 0)
        goto LABEL_66;
      v42 = -1;
      goto LABEL_60;
    }
    v40 = *(float *)(v38 + 4 * v39);
    if (vabds_f32(*(float *)(v17 + 32), v40) <= 0.00000011921)
    {
      if (v37 <= 0)
        goto LABEL_66;
      v42 = 0;
    }
    else
    {
      if (v29 == 1)
        goto LABEL_56;
      if (vabds_f32(*(float *)(v17 + 36), v40) <= 0.00000011921)
      {
        if (v37 <= 1)
          goto LABEL_66;
        v42 = 1;
      }
      else
      {
        if (v29 == 2)
          goto LABEL_56;
        v41 = 10;
        while (1)
        {
          v42 = v41 - 8;
          if (vabds_f32(*(float *)(v17 + 4 * v41), v40) <= 0.00000011921)
            break;
          v36 = __OFADD__(v42, 1);
          v43 = v41 - 7;
          if (v36)
            goto LABEL_75;
          ++v41;
          if (v43 == v29)
            goto LABEL_56;
        }
        if (v42 >= v37)
        {
LABEL_66:
          result = swift_isUniquelyReferenced_nonNull_native();
          v44 = 0;
          if ((result & 1) != 0)
            goto LABEL_67;
          goto LABEL_70;
        }
      }
    }
LABEL_60:
    v44 = v42 + 1;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) != 0)
    {
      if ((v44 & 0x8000000000000000) != 0)
        goto LABEL_71;
      goto LABEL_67;
    }
LABEL_70:
    result = (uint64_t)sub_213C5F208(v5);
    v5 = result;
    if ((v44 & 0x8000000000000000) != 0)
    {
LABEL_71:
      __break(1u);
LABEL_72:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
LABEL_67:
    if (v44 >= *(_QWORD *)(v5 + 16))
      break;
    ++v39;
    *(_BYTE *)(v5 + v44 + 32) = 1;
    if (v39 == v35)
      goto LABEL_72;
  }
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

uint64_t sub_213C34C38(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v13;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_213C86748() & 1) != 0)
    return 0;
  v9 = 0;
  v10 = a3 + 7;
  v11 = 1;
  while (1)
  {
    if (v3 == v11)
      return 0;
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2)
      break;
    v13 = sub_213C86748();
    result = v11++;
    v10 += 2;
    if ((v13 & 1) != 0)
      return result;
  }
  return v9;
}

unint64_t sub_213C34D1C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  v7 = 4 * v4;
  v8 = 15;
  while (sub_213C86238() != a1 || v9 != a2)
  {
    v10 = sub_213C86748();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v8;
    v8 = sub_213C861D8();
    if (v7 == v8 >> 14)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_213C34E08()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DediscoCategoricalMetadataEncoder()
{
  return objc_opt_self();
}

uint64_t sub_213C34E4C(uint64_t a1, uint64_t a2, size_t a3)
{
  return sub_213C33DF8(a1, a2, a3);
}

uint64_t sub_213C34E6C(size_t a1, float a2)
{
  return sub_213C3404C(a1, a2);
}

uint64_t sub_213C34E8C(uint64_t a1, size_t a2)
{
  return sub_213C343F8(a1, a2);
}

uint64_t sub_213C34EAC(uint64_t a1, size_t a2)
{
  return sub_213C34784(a1, a2);
}

uint64_t sub_213C34ECC(size_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_213C58D90(0, a1);
  v2 = sub_213C338EC(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_213C34F18(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_213C34FD8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2199C0958]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_213C35070(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_213C350AC(uint64_t result, uint64_t a2, float a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    goto LABEL_8;
  if (vabds_f32(*(float *)(result + 32), a3) > 0.00000011921)
  {
    if (v3 != 1)
    {
      v4 = 9;
      while (1)
      {
        v5 = v4 - 8;
        if (vabds_f32(*(float *)(result + 4 * v4), a3) <= 0.00000011921)
          break;
        v6 = __OFADD__(v5, 1);
        v7 = v4 - 7;
        if (v6)
          goto LABEL_16;
        ++v4;
        if (v7 == v3)
          goto LABEL_8;
      }
LABEL_9:
      v8 = a2 - 1;
      if (!__OFSUB__(a2, 1))
        goto LABEL_10;
      goto LABEL_15;
    }
LABEL_8:
    v5 = -1;
    goto LABEL_9;
  }
  v5 = 0;
  v8 = a2 - 1;
  if (!__OFSUB__(a2, 1))
  {
LABEL_10:
    if (v5 < v8)
      return v5 + 1;
    else
      return 0;
  }
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

unint64_t sub_213C3512C()
{
  unint64_t result;

  result = qword_254D2DBB8;
  if (!qword_254D2DBB8)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for DediscoError, &type metadata for DediscoError);
    atomic_store(result, (unint64_t *)&qword_254D2DBB8);
  }
  return result;
}

unint64_t sub_213C35170()
{
  unint64_t result;

  result = qword_254D2DBC0;
  if (!qword_254D2DBC0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D2DBC0);
  }
  return result;
}

void sub_213C351AC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  if (v3 >= *(_QWORD *)(v4 + 16))
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    v5 = type metadata accessor for CKPolicyRecord(0);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = &off_24D0D8168;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
    if (v3 < 0)
    {
      __break(1u);
    }
    else
    {
      sub_213C3AA04(v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v5 - 8) + 72) * v3, (uint64_t)boxed_opaque_existential_1);
      v7 = *(_QWORD *)(v1 + 24);
      v8 = __OFADD__(v7, 1);
      v9 = v7 + 1;
      if (!v8)
      {
        *(_QWORD *)(v1 + 24) = v9;
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_213C35258()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CKPolicy()
{
  return objc_opt_self();
}

void sub_213C3529C()
{
  uint64_t v0;
  _BYTE *v1;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 16) + 16))
  {
    sub_213C3A984();
    swift_allocError();
    *v1 = 16;
    swift_willThrow();
  }
}

uint64_t sub_213C352FC()
{
  return 1;
}

void sub_213C35304(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_213C35310()
{
  return 0;
}

uint64_t sub_213C35318()
{
  return 2;
}

uint64_t sub_213C35320()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = sub_213C5F7CC(*v0);
  swift_release();
  return v1;
}

uint64_t sub_213C35354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_213C35374(a1, a2, a3);
}

uint64_t sub_213C35374(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  _UNKNOWN **v16;
  __int128 v17[2];

  v4 = (_QWORD *)result;
  if (!a2)
  {
    v5 = 0;
    goto LABEL_14;
  }
  v5 = a3;
  if (!a3)
  {
LABEL_14:
    *v4 = v3;
    return v5;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v6 = *(_QWORD *)(v3 + 16);
    v7 = *(_QWORD *)(v3 + 24);
    if (v7 < *(_QWORD *)(v6 + 16))
    {
      v8 = a2;
      v9 = type metadata accessor for CKPolicyRecord(0);
      v10 = 0;
      while (1)
      {
        v15 = v9;
        v16 = &off_24D0D8168;
        result = (uint64_t)__swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
        if (v7 < 0)
          break;
        result = sub_213C3AA04(v6+ ((*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v7, result);
        v11 = *(_QWORD *)(v3 + 24);
        v12 = __OFADD__(v11, 1);
        v13 = v11 + 1;
        if (v12)
          goto LABEL_16;
        *(_QWORD *)(v3 + 24) = v13;
        sub_213C3AA48(&v14, (uint64_t)v17);
        sub_213C3AA48(v17, v8);
        if (v5 - 1 == v10)
          goto LABEL_14;
        v8 += 40;
        v7 = *(_QWORD *)(v3 + 24);
        ++v10;
        if (v7 >= *(_QWORD *)(v6 + 16))
          goto LABEL_13;
      }
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    v10 = 0;
LABEL_13:
    v5 = v10;
    goto LABEL_14;
  }
LABEL_17:
  __break(1u);
  return result;
}

_QWORD *sub_213C3549C(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _UNKNOWN **v14;
  __int128 v15[2];

  v4 = result;
  if (!a2)
  {
    v5 = 0;
    goto LABEL_12;
  }
  v5 = a3;
  if (!a3)
  {
LABEL_12:
    *v4 = v3;
    return (_QWORD *)v5;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v6 = *(_QWORD *)(v3 + 16);
    v7 = *(_QWORD *)(v3 + 24);
    if (v7 >= v6)
    {
      v10 = 0;
LABEL_11:
      v5 = v10;
    }
    else
    {
      v8 = a2;
      v9 = type metadata accessor for FileRecipeDescriptor();
      v10 = 0;
      while (1)
      {
        *(_QWORD *)(v3 + 24) = v7 + 1;
        v11 = swift_allocObject();
        v13 = v9;
        v14 = &off_24D0D9090;
        *(_QWORD *)&v12 = v11;
        sub_213C3AA48(&v12, (uint64_t)v15);
        sub_213C3AA48(v15, v8);
        if (v5 - 1 == v10)
          break;
        v8 += 40;
        v7 = *(_QWORD *)(v3 + 24);
        ++v10;
        if (v7 >= v6)
          goto LABEL_11;
      }
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_213C35590(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  ValueMetadata *v29;
  _UNKNOWN **v30;
  __int128 v31[3];

  if (!a2 || !a3)
  {
    v7 = 0;
    goto LABEL_14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v21 = result;
    v4 = *(_QWORD *)(v3 + 16);
    v5 = *(_QWORD *)(v3 + 120);
    if (v5 < *(_QWORD *)(v4 + 16))
    {
      v6 = a2;
      v7 = 0;
      v23 = a3 - 1;
      v24 = v4 + 32;
      v22 = *(_QWORD *)(v3 + 16);
      while ((v5 & 0x8000000000000000) == 0)
      {
        v8 = (int *)(v24 + 88 * v5);
        v9 = *((_QWORD *)v8 + 5);
        v10 = *((_QWORD *)v8 + 6);
        v11 = *((_QWORD *)v8 + 7);
        v12 = *((_BYTE *)v8 + 64);
        v26 = *((_QWORD *)v8 + 10);
        v27 = *((_QWORD *)v8 + 9);
        v13 = *((_QWORD *)v8 + 3);
        v25 = *((_QWORD *)v8 + 4);
        v14 = v7;
        v15 = v6;
        v17 = *((_QWORD *)v8 + 1);
        v16 = *((_QWORD *)v8 + 2);
        v18 = *v8;
        *(_QWORD *)(v3 + 120) = v5 + 1;
        v29 = &type metadata for DodMLRecipeDescriptor;
        v30 = &off_24D0D8820;
        v19 = swift_allocObject();
        *(_QWORD *)&v28 = v19;
        *(_DWORD *)(v19 + 16) = v18;
        *(_QWORD *)(v19 + 24) = v17;
        *(_QWORD *)(v19 + 32) = v16;
        *(_QWORD *)(v19 + 40) = v13;
        *(_QWORD *)(v19 + 48) = v25;
        *(_QWORD *)(v19 + 56) = v9;
        *(_QWORD *)(v19 + 64) = v10;
        *(_QWORD *)(v19 + 72) = v11;
        *(_BYTE *)(v19 + 80) = v12;
        *(_QWORD *)(v19 + 88) = v27;
        *(_QWORD *)(v19 + 96) = v26;
        sub_213C3AA48(&v28, (uint64_t)v31);
        sub_213C3AA48(v31, v15);
        if (v23 == v14)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_213C3B198(v10, v11, v12);
          swift_bridgeObjectRetain();
          v7 = a3;
          result = v21;
          goto LABEL_14;
        }
        v6 = v15 + 40;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_213C3B198(v10, v11, v12);
        result = (_QWORD *)swift_bridgeObjectRetain();
        v5 = *(_QWORD *)(v3 + 120);
        v7 = v14 + 1;
        if (v5 >= *(_QWORD *)(v22 + 16))
          goto LABEL_12;
      }
      __break(1u);
      goto LABEL_16;
    }
    v7 = 0;
LABEL_12:
    result = v21;
LABEL_14:
    *result = v3;
    return (_QWORD *)v7;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_213C35788()
{
  type metadata accessor for CKPolicy();
  return sub_213C86268();
}

void sub_213C357EC(uint64_t a1@<X8>)
{
  sub_213C351AC(a1);
}

uint64_t sub_213C3580C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _BYTE *v42;
  _BYTE *v44;
  _QWORD *inited;
  id v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  void *v84;
  unint64_t v85;
  void *v86;
  id v87;
  id v88;
  void *v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  void *v113;
  void *v114;
  uint64_t v115;
  NSObject *v116;
  os_log_type_t v117;
  uint64_t v118;
  uint8_t *v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  unint64_t v126;
  _BYTE *v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  int *v145;
  id v146[2];
  _OWORD v147[2];
  __int128 v148;
  uint64_t v149;
  uint64_t v150;

  v5 = v3;
  v136 = a3;
  v138 = a1;
  v139 = a2;
  v150 = *MEMORY[0x24BDAC8D0];
  v137 = sub_213C8616C();
  v141 = *(_QWORD *)(v137 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v140 = (char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213C85ECC();
  v144 = *(_QWORD *)(v7 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v9 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CKPolicyRecord(0);
  v11 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v13 = (char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v135 = (char *)&v128 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v134 = (uint64_t)&v128 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v133 = (uint64_t)&v128 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v143 = (uint64_t)&v128 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v128 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v128 - v25;
  v27 = sub_213C6F584(0x20000000000001);
  v145 = (int *)v10;
  if (*(double *)(v5 + *(int *)(v10 + 60)) < (double)v27 * 1.11022302e-16 + 0.0)
  {
    if (qword_254D2D960 != -1)
      swift_once();
    v28 = sub_213C86094();
    __swift_project_value_buffer(v28, (uint64_t)qword_254D2FF28);
    sub_213C3AA04(v5, (uint64_t)v26);
    sub_213C3AA04(v5, (uint64_t)v24);
    v29 = sub_213C8607C();
    v30 = sub_213C863F4();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v144 = swift_slowAlloc();
      *(_QWORD *)&v148 = v144;
      *(_DWORD *)v31 = 134218242;
      *(_QWORD *)&v147[0] = *(_QWORD *)&v26[v145[15]];
      sub_213C86490();
      sub_213C3B578((uint64_t)v26, type metadata accessor for CKPolicyRecord);
      *(_WORD *)(v31 + 12) = 2080;
      sub_213C3AA04((uint64_t)v24, v143);
      v32 = sub_213C86178();
      *(_QWORD *)&v147[0] = sub_213C42558(v32, v33, (uint64_t *)&v148);
      sub_213C86490();
      swift_bridgeObjectRelease();
      sub_213C3B578((uint64_t)v24, type metadata accessor for CKPolicyRecord);
      _os_log_impl(&dword_213C25000, v29, v30, "Recipe targeting failed to target by sampling rate %f for recipe %s", (uint8_t *)v31, 0x16u);
      v34 = v144;
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v34, -1, -1);
      MEMORY[0x2199C0A30](v31, -1, -1);
    }
    else
    {
      sub_213C3B578((uint64_t)v26, type metadata accessor for CKPolicyRecord);
      sub_213C3B578((uint64_t)v24, type metadata accessor for CKPolicyRecord);
    }

    sub_213C3A984();
    swift_allocError();
    *v42 = 18;
    return swift_willThrow();
  }
  sub_213C85EC0();
  sub_213C3B630((unint64_t *)&qword_254D2DE08, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  v142 = v9;
  if ((sub_213C86100() & 1) != 0 || (sub_213C86100() & 1) != 0)
  {
    if (qword_254D2D960 != -1)
      swift_once();
    v35 = sub_213C86094();
    __swift_project_value_buffer(v35, (uint64_t)qword_254D2FF28);
    sub_213C3AA04(v5, (uint64_t)v13);
    v36 = sub_213C8607C();
    v37 = sub_213C863F4();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      *(_QWORD *)&v148 = v39;
      v132 = v7;
      *(_DWORD *)v38 = 136315138;
      sub_213C3AA04((uint64_t)v13, v143);
      v40 = sub_213C86178();
      *(_QWORD *)&v147[0] = sub_213C42558(v40, v41, (uint64_t *)&v148);
      v7 = v132;
      sub_213C86490();
      swift_bridgeObjectRelease();
      sub_213C3B578((uint64_t)v13, type metadata accessor for CKPolicyRecord);
      _os_log_impl(&dword_213C25000, v36, v37, "Recipe targeting failed at timestamp check for recipe %s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v39, -1, -1);
      MEMORY[0x2199C0A30](v38, -1, -1);
    }
    else
    {
      sub_213C3B578((uint64_t)v13, type metadata accessor for CKPolicyRecord);
    }

    sub_213C3A984();
    swift_allocError();
    *v44 = 48;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v144 + 8))(v142, v7);
  }
  type metadata accessor for PopulationSegmentation();
  inited = (_QWORD *)swift_initStackObject();
  v46 = objc_allocWithZone(MEMORY[0x24BDD1888]);
  v47 = (void *)sub_213C86124();
  v48 = objc_msgSend(v46, sel_initWithStoreIdentifier_type_, v47, 1);

  inited[5] = sub_213C3B5F8(0, &qword_254D2DE10);
  inited[6] = &off_24D0D85A8;
  inited[2] = v48;
  v49 = (void *)objc_opt_self();
  v50 = objc_msgSend(v49, sel_standardUserDefaults);
  inited[10] = sub_213C3B5F8(0, &qword_254D2DE18);
  inited[11] = &off_24D0D85C0;
  v131 = inited;
  inited[7] = v50;
  v51 = v145;
  v52 = *(_QWORD *)(v5 + v145[19]);
  v53 = MEMORY[0x24BEE0D00];
  if (*(_QWORD *)(v52 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE20);
    v54 = swift_initStackObject();
    *(_OWORD *)(v54 + 16) = xmmword_213C883D0;
    v55 = (_QWORD *)(v5 + v51[11]);
    v56 = v55[1];
    *(_QWORD *)(v54 + 32) = *v55;
    v57 = v54 + 32;
    v58 = MEMORY[0x24BEE0D70];
    *(_QWORD *)(v54 + 56) = v53;
    *(_QWORD *)(v54 + 64) = v58;
    v59 = MEMORY[0x24BEE4008];
    *(_QWORD *)(v54 + 40) = v56;
    v60 = MEMORY[0x24BEE4050];
    *(_QWORD *)(v54 + 96) = v59;
    *(_QWORD *)(v54 + 104) = v60;
    if (!*(_QWORD *)(v52 + 16))
    {
      __break(1u);
      goto LABEL_49;
    }
    *(_QWORD *)(v54 + 72) = *(_QWORD *)(v52 + 32);
    swift_bridgeObjectRetain();
    v61 = sub_213C4A21C(v54);
    if (v4)
    {
      (*(void (**)(char *, uint64_t))(v144 + 8))(v142, v7);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE28);
      swift_arrayDestroy();
      return swift_release();
    }
    v129 = v61;
    v130 = v49;
    v132 = v7;
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE28);
    swift_arrayDestroy();
  }
  else
  {
    v132 = v7;
    v129 = -1;
    v130 = v49;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE30);
  v62 = swift_initStackObject();
  *(_OWORD *)(v62 + 16) = xmmword_213C883E0;
  *(_QWORD *)(v62 + 32) = 0x5F65636976656424;
  *(_QWORD *)(v62 + 40) = 0xEA0000000000736FLL;
  *(_QWORD *)&v148 = 256;
  v63 = sub_213C862B0();
  *(_QWORD *)(v63 + 16) = 256;
  *(_OWORD *)(v63 + 48) = 0u;
  *(_OWORD *)(v63 + 64) = 0u;
  *(_OWORD *)(v63 + 80) = 0u;
  *(_OWORD *)(v63 + 96) = 0u;
  *(_OWORD *)(v63 + 112) = 0u;
  *(_OWORD *)(v63 + 128) = 0u;
  *(_OWORD *)(v63 + 144) = 0u;
  *(_OWORD *)(v63 + 160) = 0u;
  *(_OWORD *)(v63 + 176) = 0u;
  *(_OWORD *)(v63 + 192) = 0u;
  *(_OWORD *)(v63 + 208) = 0u;
  *(_OWORD *)(v63 + 224) = 0u;
  *(_OWORD *)(v63 + 240) = 0u;
  *(_OWORD *)(v63 + 256) = 0u;
  *(_OWORD *)(v63 + 272) = 0u;
  *(_OWORD *)(v63 + 32) = 0u;
  sysctlbyname("kern.osversion", (void *)(v63 + 32), (size_t *)&v148, 0, 0);
  v64 = sub_213C3AFD8(v63);
  v66 = v65;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v62 + 48) = v64;
  *(_QWORD *)(v62 + 56) = v66;
  *(_QWORD *)(v62 + 72) = v53;
  strcpy((char *)(v62 + 80), "$device_type");
  *(_BYTE *)(v62 + 93) = 0;
  *(_WORD *)(v62 + 94) = -5120;
  sub_213C48674();
  *(_QWORD *)(v62 + 96) = v67;
  *(_QWORD *)(v62 + 104) = v68;
  *(_QWORD *)(v62 + 120) = v53;
  strcpy((char *)(v62 + 128), "$dodml_dataset");
  *(_BYTE *)(v62 + 143) = -18;
  v69 = v139;
  *(_QWORD *)(v62 + 144) = v138;
  *(_QWORD *)(v62 + 152) = v69;
  *(_QWORD *)(v62 + 168) = v53;
  *(_QWORD *)(v62 + 176) = 0xD000000000000013;
  v70 = MEMORY[0x24BEE1768];
  v71 = v129;
  *(_QWORD *)(v62 + 184) = 0x8000000213C8DE10;
  *(_QWORD *)(v62 + 192) = v71;
  *(_QWORD *)(v62 + 216) = v70;
  *(_QWORD *)(v62 + 224) = 0xD000000000000014;
  *(_QWORD *)(v62 + 232) = 0x8000000213C8DE30;
  *(_QWORD *)&v148 = 0xD000000000000013;
  *((_QWORD *)&v148 + 1) = 0x8000000213C8DE50;
  swift_bridgeObjectRetain();
  sub_213C861F0();
  sub_213C861F0();
  sub_213C861F0();
  *(_QWORD *)&v147[0] = 46;
  *((_QWORD *)&v147[0] + 1) = 0xE100000000000000;
  v146[0] = (id)95;
  v146[1] = (id)0xE100000000000000;
  sub_213C3B020();
  sub_213C864B4();
  swift_bridgeObjectRelease();
  v72 = objc_msgSend(v130, sel_standardUserDefaults);
  v73 = (void *)sub_213C86124();
  swift_bridgeObjectRelease();
  v74 = objc_msgSend(v72, sel_valueForKey_, v73);

  if (v74)
  {
    sub_213C864C0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v147, 0, sizeof(v147));
  }
  v75 = v136;
  v76 = v137;
  sub_213C3B0F4((uint64_t)v147, (uint64_t)&v148, &qword_254D2DBA0);
  if (v149)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v77 = v146[0];
      goto LABEL_30;
    }
  }
  else
  {
    sub_213C3B7AC((uint64_t)&v148, &qword_254D2DBA0);
  }
  v77 = 0;
LABEL_30:
  *(_QWORD *)(v62 + 264) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v62 + 240) = v77;
  v78 = sub_213C3BB4C(v62);
  v79 = sub_213C7ECA8(v75);
  sub_213C36AAC(v79, v78);
  v80 = v140;
  sub_213C86160();
  v81 = sub_213C86154();
  v83 = v82;
  (*(void (**)(char *, uint64_t))(v141 + 8))(v80, v76);
  if (v83 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  v84 = (void *)objc_opt_self();
  v85 = v83;
  v86 = (void *)sub_213C85E48();
  v146[0] = 0;
  v87 = objc_msgSend(v84, sel_JSONObjectWithData_options_error_, v86, 4, v146);

  v88 = v146[0];
  if (!v87)
  {
    v113 = v88;
    v114 = (void *)sub_213C85D34();

    swift_willThrow();
    swift_bridgeObjectRelease();
    sub_213C3B064(v81, v85);
LABEL_38:
    v57 = (uint64_t)v135;
    if (qword_254D2D960 == -1)
    {
LABEL_39:
      v115 = sub_213C86094();
      __swift_project_value_buffer(v115, (uint64_t)qword_254D2FF28);
      sub_213C3AA04(v5, v57);
      v116 = sub_213C8607C();
      v117 = sub_213C86400();
      if (os_log_type_enabled(v116, v117))
      {
        v118 = v57;
        v119 = (uint8_t *)swift_slowAlloc();
        v120 = swift_slowAlloc();
        *(_DWORD *)v119 = 136315138;
        *(_QWORD *)&v148 = v120;
        v121 = (uint64_t *)(v118 + v145[17]);
        v122 = *v121;
        v123 = v121[1];
        swift_bridgeObjectRetain();
        *(_QWORD *)&v147[0] = sub_213C42558(v122, v123, (uint64_t *)&v148);
        sub_213C86490();
        swift_bridgeObjectRelease();
        sub_213C3B578(v118, type metadata accessor for CKPolicyRecord);
        _os_log_impl(&dword_213C25000, v116, v117, "Failed to parse target criteria %s", v119, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C0A30](v120, -1, -1);
        MEMORY[0x2199C0A30](v119, -1, -1);
      }
      else
      {
        sub_213C3B578(v57, type metadata accessor for CKPolicyRecord);
      }

      v124 = v132;
      sub_213C3A984();
      swift_allocError();
      *v125 = 19;
      swift_willThrow();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v144 + 8))(v142, v124);
    }
LABEL_49:
    swift_once();
    goto LABEL_39;
  }
  v140 = (char *)v85;
  sub_213C864C0();
  swift_unknownObjectRelease();
  sub_213C3B0BC(v147, &v148);
  v89 = (void *)objc_opt_self();
  __swift_project_boxed_opaque_existential_0Tm(&v148, v149);
  v90 = sub_213C8673C();
  v91 = (void *)sub_213C860B8();
  LODWORD(v141) = objc_msgSend(v89, sel_evaluatePredicate_onObj_, v90, v91);
  swift_unknownObjectRelease();

  if (qword_254D2D960 != -1)
    swift_once();
  v92 = sub_213C86094();
  __swift_project_value_buffer(v92, (uint64_t)qword_254D2FF28);
  v93 = v133;
  sub_213C3AA04(v5, v133);
  v94 = v134;
  sub_213C3AA04(v5, v134);
  swift_bridgeObjectRetain();
  v95 = sub_213C8607C();
  v96 = sub_213C863F4();
  v97 = v96;
  if (os_log_type_enabled(v95, v96))
  {
    v98 = swift_slowAlloc();
    LODWORD(v138) = v97;
    v99 = v98;
    v137 = swift_slowAlloc();
    *(_QWORD *)&v147[0] = v137;
    *(_DWORD *)v99 = 67109890;
    LODWORD(v146[0]) = v141;
    sub_213C86490();
    *(_WORD *)(v99 + 8) = 2080;
    v139 = v81;
    v100 = (uint64_t *)(v93 + v145[17]);
    v101 = *v100;
    v102 = v100[1];
    swift_bridgeObjectRetain();
    v146[0] = (id)sub_213C42558(v101, v102, (uint64_t *)v147);
    sub_213C86490();
    swift_bridgeObjectRelease();
    sub_213C3B578(v93, type metadata accessor for CKPolicyRecord);
    *(_WORD *)(v99 + 18) = 2080;
    swift_bridgeObjectRetain();
    v136 = MEMORY[0x24BEE4AD8] + 8;
    v103 = sub_213C860D0();
    v105 = v104;
    swift_bridgeObjectRelease();
    v146[0] = (id)sub_213C42558(v103, v105, (uint64_t *)v147);
    sub_213C86490();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v99 + 28) = 2080;
    v106 = v134;
    sub_213C3AA04(v134, v143);
    v107 = sub_213C86178();
    v146[0] = (id)sub_213C42558(v107, v108, (uint64_t *)v147);
    v109 = v139;
    sub_213C86490();
    swift_bridgeObjectRelease();
    sub_213C3B578(v106, type metadata accessor for CKPolicyRecord);
    _os_log_impl(&dword_213C25000, v95, (os_log_type_t)v138, "Recipe targeting %{BOOL}d, predicate: %s, subject: %s, recipe: %s", (uint8_t *)v99, 0x26u);
    v110 = v137;
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v110, -1, -1);
    MEMORY[0x2199C0A30](v99, -1, -1);

    v111 = v141;
    v112 = v132;
  }
  else
  {
    v109 = v81;
    sub_213C3B578(v93, type metadata accessor for CKPolicyRecord);
    swift_bridgeObjectRelease_n();
    sub_213C3B578(v94, type metadata accessor for CKPolicyRecord);

    v112 = v132;
    v111 = v141;
  }
  v126 = (unint64_t)v140;
  if ((v111 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v144 + 8))(v142, v112);
    sub_213C3B064(v109, v126);
    swift_release();
  }
  else
  {
    sub_213C3A984();
    swift_allocError();
    *v127 = 20;
    swift_willThrow();
    sub_213C3B064(v109, v126);
    swift_release();
    (*(void (**)(char *, uint64_t))(v144 + 8))(v142, v112);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v148);
}

uint64_t sub_213C36AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_213C3AAA0(a1, (uint64_t)sub_213C3AA60, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_213C36B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_213C3580C(a1, a2, a3);
}

uint64_t sub_213C36B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v0 = sub_213C85ECC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213C85EC0();
  v4 = sub_213C45768((uint64_t)v3);
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10 = 0;
  v11 = 0xE000000000000000;
  sub_213C8652C();
  swift_bridgeObjectRelease();
  v10 = 3820355;
  v11 = 0xE300000000000000;
  sub_213C861F0();
  sub_213C861F0();
  swift_bridgeObjectRetain();
  sub_213C861F0();
  swift_bridgeObjectRelease();
  sub_213C861F0();
  swift_bridgeObjectRetain();
  sub_213C861F0();
  swift_bridgeObjectRelease();
  sub_213C861F0();
  swift_bridgeObjectRetain();
  sub_213C861F0();
  swift_bridgeObjectRelease();
  sub_213C861F0();
  v9 = v4;
  sub_213C86724();
  sub_213C861F0();
  swift_bridgeObjectRelease();
  sub_213C861F0();
  v9 = v6;
  sub_213C86724();
  sub_213C861F0();
  swift_bridgeObjectRelease();
  return v10;
}

_QWORD *sub_213C36D18(uint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  int v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;

  v5 = v4;
  v80 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DED8);
  MEMORY[0x24BDAC7A8](v9);
  v79 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_213C85F74();
  v72 = *(_QWORD *)(v11 - 8);
  v73 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v71 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D2DEE0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_213C85F2C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_213C85F8C();
  v69 = *(_QWORD *)(v78 - 8);
  v20 = MEMORY[0x24BDAC7A8](v78);
  v77 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v70 = (char *)&v68 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v68 - v24;
  v26 = *a1;
  v27 = a1[1];
  v28 = a1[2];
  v29 = a1[3];
  v5[2] = *a1;
  v5[3] = v27;
  v5[4] = v28;
  v5[5] = v29;
  v5[6] = a2;
  v5[7] = a3;
  v75 = v28;
  v76 = v26;
  v74 = v29;
  sub_213C3B778(v26, v27);
  sub_213C4878C();
  v5[8] = v30;
  v5[9] = v31;
  if (v27 == 3)
  {
LABEL_5:
    v33 = 0x69746375646F7270;
    v32 = 0xEA00000000006E6FLL;
    goto LABEL_7;
  }
  if (v27 != 4)
  {
    if (v27 == 5)
    {
      v32 = 0xE700000000000000;
      v33 = 0x676E6967617473;
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  v32 = 0xE500000000000000;
  v33 = 0x7972726163;
LABEL_7:
  v5[10] = v33;
  v5[11] = v32;
  sub_213C85F5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BDCEBA8], v16);
  sub_213C85EFC();
  v34 = sub_213C85F08();
  v36 = v35;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v37 = sub_213C48834(v34, v36);
  v39 = v38;
  swift_bridgeObjectRelease();
  v81 = v37;
  v82 = v39;
  v87 = 45;
  v88 = 0xE100000000000000;
  v85 = 95;
  v86 = 0xE100000000000000;
  sub_213C3B020();
  v40 = sub_213C864B4();
  v42 = v41;
  swift_bridgeObjectRelease();
  v43 = *(void (**)(char *, uint64_t))(v69 + 8);
  v44 = v78;
  v43(v25, v78);
  v5[12] = v40;
  v5[13] = v42;
  v45 = v70;
  sub_213C85F5C();
  v46 = v71;
  sub_213C85F80();
  sub_213C85F68();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v46, v73);
  v47 = sub_213C85F20();
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v15, 1, v47) == 1)
  {
    sub_213C3B7AC((uint64_t)v15, (uint64_t *)&unk_254D2DEE0);
    v49 = 0xE800000000000000;
    v50 = 0x6E776F6E6B6E7524;
  }
  else
  {
    v50 = sub_213C85F14();
    v49 = v51;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v47);
  }
  v43(v45, v44);
  v5[14] = v50;
  v5[15] = v49;
  v52 = v77;
  sub_213C85F5C();
  v53 = (uint64_t)v79;
  sub_213C85F50();
  v54 = sub_213C85F44();
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54) == 1)
  {
    sub_213C3B7AC(v53, &qword_254D2DED8);
    v56 = 0xE800000000000000;
    v57 = 0x6E776F6E6B6E7524;
  }
  else
  {
    v57 = sub_213C85F14();
    v56 = v58;
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
  }
  v43(v52, v44);
  v5[16] = v57;
  v5[17] = v56;
  v59 = v76;
  v81 = v76;
  v82 = v27;
  v83 = v75;
  v84 = v74;
  v60 = sub_213C3B1E0((uint64_t *)&v81);
  sub_213C3B744(v59, v27);
  v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB9030]), sel_initWithContainerID_, v60);

  v5[18] = objc_msgSend(v61, sel_publicCloudDatabase);
  v62 = objc_msgSend((id)objc_opt_self(), sel_defaultRecordZone);
  v63 = objc_msgSend(v62, sel_zoneID);

  v5[19] = v63;
  v64 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB9190]), sel_init);
  v65 = (void *)sub_213C86124();
  objc_msgSend(v64, sel_setName_, v65);

  v5[20] = v64;
  v66 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB9188]), sel_init);
  objc_msgSend(v66, sel_setPreferAnonymousRequests_, 1);
  objc_msgSend(v66, sel_setQualityOfService_, 9);
  objc_msgSend(v66, sel_setContainer_, v61);
  objc_msgSend(v66, sel_setAllowsCellularAccess_, v80 & 1);
  objc_msgSend(v66, sel_setAllowsExpensiveNetworkAccess_, 0);

  v5[21] = v66;
  return v5;
}

uint64_t sub_213C3734C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  v4[16] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE88);
  v4[19] = swift_task_alloc();
  v5 = type metadata accessor for CKPolicyRecord(0);
  v4[20] = v5;
  v4[21] = *(_QWORD *)(v5 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213C373FC()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _QWORD *v33;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);

  if (qword_254D2D960 != -1)
    swift_once();
  v1 = sub_213C86094();
  v0[26] = __swift_project_value_buffer(v1, (uint64_t)qword_254D2FF28);
  v2 = sub_213C8607C();
  v3 = sub_213C863F4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_213C25000, v2, v3, "Querying CK for policies", v4, 2u);
    MEMORY[0x2199C0A30](v4, -1, -1);
  }
  v6 = v0[17];
  v5 = (uint64_t *)v0[18];
  v7 = v0[16];

  sub_213C3B5F8(0, &qword_254D2DE90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE98);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_213C883D0;
  v9 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  v10 = sub_213C3B5B4();
  *(_QWORD *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 40) = v6;
  *(_QWORD *)(v8 + 96) = v9;
  *(_QWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 72) = 0x695F6E6967756C70;
  *(_QWORD *)(v8 + 80) = 0xE900000000000064;
  swift_bridgeObjectRetain();
  v11 = (void *)sub_213C863AC();
  v0[27] = v11;
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_213C883D0;
  *(_QWORD *)(v12 + 56) = v9;
  *(_QWORD *)(v12 + 64) = v10;
  *(_QWORD *)(v12 + 32) = 0x657669746361;
  *(_QWORD *)(v12 + 40) = 0xE600000000000000;
  *(_QWORD *)(v12 + 96) = v9;
  *(_QWORD *)(v12 + 104) = v10;
  *(_QWORD *)(v12 + 72) = 0x737574617473;
  *(_QWORD *)(v12 + 80) = 0xE600000000000000;
  v13 = (void *)sub_213C863AC();
  v0[28] = v13;
  v14 = (void *)sub_213C3B3A0(0x73656369766564, 0xE700000000000000, v5[8], v5[9], 1819042084, 0xE400000000000000);
  v0[29] = v14;
  v15 = (void *)sub_213C3B3A0(0x73656C61636F6CLL, 0xE700000000000000, v5[12], v5[13], 1819042084, 0xE400000000000000);
  v0[30] = v15;
  v16 = (void *)sub_213C3B3A0(0x65676175676E616CLL, 0xE900000000000073, v5[14], v5[15], 1819042084, 0xE400000000000000);
  v0[31] = v16;
  v17 = (void *)sub_213C3B3A0(0x736E6F69676572, 0xE700000000000000, v5[16], v5[17], 1819042084, 0xE400000000000000);
  v0[32] = v17;
  v18 = (void *)sub_213C3B3A0(0xD000000000000013, 0x8000000213C8DE70, v5[10], v5[11], 1819042084, 0xE400000000000000);
  v0[33] = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE80);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_213C883F0;
  *(_QWORD *)(v19 + 32) = v11;
  *(_QWORD *)(v19 + 40) = v13;
  *(_QWORD *)(v19 + 48) = v14;
  *(_QWORD *)(v19 + 56) = v15;
  *(_QWORD *)(v19 + 64) = v16;
  *(_QWORD *)(v19 + 72) = v17;
  *(_QWORD *)(v19 + 80) = v18;
  sub_213C8628C();
  v20 = v11;
  v21 = v13;
  v22 = v14;
  v23 = v15;
  v24 = v16;
  v25 = v17;
  v26 = v18;
  v27 = (void *)sub_213C86280();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v27);
  v0[34] = v28;

  sub_213C3B5F8(0, &qword_254D2DEA8);
  v29 = v28;
  v30 = sub_213C86448();
  v0[35] = v30;
  v0[36] = sub_213C3A984();
  v31 = swift_allocError();
  v0[37] = v31;
  *v32 = 6;
  v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_254D2E3C0 + dword_254D2E3C0);
  swift_retain();
  v33 = (_QWORD *)swift_task_alloc();
  v0[38] = v33;
  *v33 = v0;
  v33[1] = sub_213C37878;
  return v35(v31, v0[18], v30);
}

uint64_t sub_213C37878(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  void *v6;

  v5 = (_QWORD *)*v3;
  v5[39] = a1;
  v5[40] = v2;
  swift_task_dealloc();
  swift_release();
  if (!v2)
  {
    v6 = (void *)v5[37];
    v5[41] = a2;

  }
  return swift_task_switch();
}

uint64_t sub_213C37908()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  void *v10;
  void *v11;
  char v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _QWORD *v49;
  uint64_t (*v50)();
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  void *v55;
  _QWORD *v56;
  id v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  _BYTE *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  uint64_t v75;
  unint64_t v76;
  void *v77;
  void *v78;
  char *v79;
  uint64_t v80[13];
  char v81;

  swift_bridgeObjectRetain();
  v1 = sub_213C8607C();
  v2 = sub_213C863F4();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 312);
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 134217984;
    *(_QWORD *)(v0 + 112) = *(_QWORD *)(v3 + 16);
    sub_213C86490();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213C25000, v1, v2, "Number of CK Policies %ld", v4, 0xCu);
    MEMORY[0x2199C0A30](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 312) + 16);
  *(_QWORD *)(v0 + 336) = v5;
  if (v5)
  {
    v6 = 0;
    v7 = MEMORY[0x24BEE4AF8];
    v8 = type metadata accessor for CKPolicyRecord;
    while (1)
    {
      *(_QWORD *)(v0 + 344) = v6;
      *(_QWORD *)(v0 + 352) = v7;
      v9 = *(_QWORD *)(v0 + 312) + 24 * v6;
      v10 = *(void **)(v9 + 32);
      *(_QWORD *)(v0 + 360) = v10;
      v11 = *(void **)(v9 + 40);
      *(_QWORD *)(v0 + 368) = v11;
      v12 = *(_BYTE *)(v9 + 48);
      v13 = v10;
      sub_213C3B51C(v11);
      v14 = sub_213C8607C();
      v15 = sub_213C863F4();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = swift_slowAlloc();
        v17 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v16 = 138412290;
        *(_QWORD *)(v16 + 4) = v13;
        *v17 = v13;

        _os_log_impl(&dword_213C25000, v14, v15, "Policy CKRecordID: %@", (uint8_t *)v16, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
        swift_arrayDestroy();
        MEMORY[0x2199C0A30](v17, -1, -1);
        MEMORY[0x2199C0A30](v16, -1, -1);

        if ((v12 & 1) != 0)
          goto LABEL_21;
      }
      else
      {

        if ((v12 & 1) != 0)
        {
LABEL_21:
          *(_QWORD *)(v0 + 56) = 0;
          *(_QWORD *)(v0 + 64) = 0xE000000000000000;
          v45 = v11;
          sub_213C8652C();
          swift_bridgeObjectRelease();
          sub_213C36B3C();
          *(_QWORD *)(v0 + 376) = v46;
          v47 = swift_allocError();
          *(_QWORD *)(v0 + 384) = v47;
          *v48 = 35;
          v79 = (char *)&dword_254D2FB98 + dword_254D2FB98;
          v49 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 392) = v49;
          v50 = sub_213C3833C;
          goto LABEL_27;
        }
      }
      v78 = v13;
      v19 = *(_QWORD *)(v0 + 160);
      v18 = *(_QWORD *)(v0 + 168);
      v20 = *(_QWORD *)(v0 + 152);
      v21 = v11;
      sub_213C79870(v21, v20);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v19) == 1)
      {
        sub_213C3B7AC(*(_QWORD *)(v0 + 152), &qword_254D2DE88);
        v51 = v21;
        v52 = sub_213C8607C();
        v53 = sub_213C86400();
        if (os_log_type_enabled(v52, v53))
        {
          v54 = (uint8_t *)swift_slowAlloc();
          v55 = v11;
          v56 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v54 = 138412290;
          *(_QWORD *)(v0 + 88) = v51;
          v57 = v51;
          sub_213C86490();
          *v56 = v55;
          sub_213C3B528(v55);
          sub_213C3B528(v55);
          _os_log_impl(&dword_213C25000, v52, v53, "Failed to decode Policy, skipping record: %@", v54, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
          swift_arrayDestroy();
          MEMORY[0x2199C0A30](v56, -1, -1);
          MEMORY[0x2199C0A30](v54, -1, -1);
        }
        else
        {
          sub_213C3B528(v11);
          sub_213C3B528(v11);
        }

        *(_QWORD *)(v0 + 40) = 0;
        *(_QWORD *)(v0 + 48) = 0xE000000000000000;
        sub_213C8652C();
        swift_bridgeObjectRelease();
        sub_213C36B3C();
        *(_QWORD *)(v0 + 400) = v68;
        v47 = swift_allocError();
        *(_QWORD *)(v0 + 408) = v47;
        *v69 = 46;
        v79 = (char *)&dword_254D2FB98 + dword_254D2FB98;
        v49 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 416) = v49;
        v50 = sub_213C38DD0;
LABEL_27:
        *v49 = v0;
        v49[1] = v50;
        v81 = 1;
        v80[12] = v47;
        __asm { BR              X8 }
      }
      v23 = *(_QWORD *)(v0 + 192);
      v22 = *(_QWORD *)(v0 + 200);
      v24 = *(_QWORD *)(v0 + 184);
      sub_213C3B670(*(_QWORD *)(v0 + 152), v22, v8);
      sub_213C3AA04(v22, v23);
      sub_213C3AA04(v22, v24);
      v25 = sub_213C8607C();
      v26 = sub_213C863F4();
      v27 = os_log_type_enabled(v25, v26);
      v28 = v8;
      v29 = *(_QWORD *)(v0 + 184);
      v30 = *(_QWORD *)(v0 + 192);
      if (v27)
      {
        v31 = *(_QWORD *)(v0 + 160);
        v32 = swift_slowAlloc();
        v75 = swift_slowAlloc();
        v80[0] = v75;
        *(_DWORD *)v32 = 136315394;
        v33 = (uint64_t *)(v30 + *(int *)(v31 + 44));
        v77 = v11;
        v76 = v7;
        v34 = *v33;
        v35 = v33[1];
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 96) = sub_213C42558(v34, v35, v80);
        sub_213C86490();
        swift_bridgeObjectRelease();
        sub_213C3B578(v30, v28);
        *(_WORD *)(v32 + 12) = 2080;
        v36 = (uint64_t *)(v29 + *(int *)(v31 + 52));
        v37 = *v36;
        v38 = v36[1];
        swift_bridgeObjectRetain();
        v39 = v37;
        v11 = v77;
        *(_QWORD *)(v0 + 104) = sub_213C42558(v39, v38, v80);
        sub_213C86490();
        v7 = v76;
        swift_bridgeObjectRelease();
        sub_213C3B578(v29, v28);
        _os_log_impl(&dword_213C25000, v25, v26, "fetched CK policy record with plugin_id: %s, and recipe_id: %s", (uint8_t *)v32, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2199C0A30](v75, -1, -1);
        MEMORY[0x2199C0A30](v32, -1, -1);
      }
      else
      {
        sub_213C3B578(*(_QWORD *)(v0 + 192), v28);
        sub_213C3B578(v29, v28);
      }

      v8 = v28;
      sub_213C3AA04(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_213C41CEC(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
      v41 = *(_QWORD *)(v7 + 16);
      v40 = *(_QWORD *)(v7 + 24);
      if (v41 >= v40 >> 1)
        v7 = sub_213C41CEC(v40 > 1, v41 + 1, 1, v7);
      v42 = *(_QWORD *)(v0 + 200);
      v44 = *(_QWORD *)(v0 + 168);
      v43 = *(_QWORD *)(v0 + 176);
      *(_QWORD *)(v7 + 16) = v41 + 1;
      sub_213C3B670(v43, v7+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(_QWORD *)(v44 + 72) * v41, v28);
      sub_213C3B528(v11);
      sub_213C3B528(v11);

      sub_213C3B578(v42, v28);
      v6 = *(_QWORD *)(v0 + 344) + 1;
      if (v6 == *(_QWORD *)(v0 + 336))
        goto LABEL_24;
    }
  }
  v7 = MEMORY[0x24BEE4AF8];
LABEL_24:
  v58 = *(void **)(v0 + 272);
  v59 = *(void **)(v0 + 280);
  v61 = *(void **)(v0 + 256);
  v60 = *(void **)(v0 + 264);
  v70 = *(void **)(v0 + 248);
  v71 = *(void **)(v0 + 240);
  v72 = *(void **)(v0 + 232);
  v73 = *(void **)(v0 + 224);
  v74 = *(void **)(v0 + 216);
  v62 = *(uint64_t **)(v0 + 120);
  swift_bridgeObjectRelease();
  v80[0] = v7;
  sub_213C43828();
  v63 = v80[0];
  v64 = type metadata accessor for CKPolicy();
  v65 = swift_allocObject();
  *(_QWORD *)(v65 + 16) = v63;
  *(_QWORD *)(v65 + 24) = 0;
  v62[3] = v64;
  v62[4] = sub_213C3B630(&qword_254D2DEB0, v66, (uint64_t (*)(uint64_t))type metadata accessor for CKPolicy, (uint64_t)&unk_213C8857C);

  *v62 = v65;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C38268()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v10;

  v2 = *(void **)(v0 + 272);
  v1 = *(void **)(v0 + 280);
  v3 = *(void **)(v0 + 256);
  v4 = *(void **)(v0 + 264);
  v5 = *(void **)(v0 + 240);
  v6 = *(void **)(v0 + 248);
  v7 = *(void **)(v0 + 224);
  v8 = *(void **)(v0 + 232);
  v10 = *(id *)(v0 + 296);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C3833C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 384);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_213C383A4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  void *v26;
  void *v27;
  char v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  _QWORD *v65;
  uint64_t (*v66)();
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  void *v71;
  _QWORD *v72;
  id v73;
  uint64_t v74;
  _BYTE *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  uint64_t v81;
  unint64_t v82;
  void *v83;
  void *v84;
  void *v85;
  char *v86;
  uint64_t v87[13];
  char v88;

  v1 = *(void **)(v0 + 368);
  v2 = v1;
  v3 = v1;
  v4 = sub_213C8607C();
  v5 = sub_213C86400();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 368);
    v84 = *(void **)(v0 + 360);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v87[0] = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_213C867A8();
    *(_QWORD *)(v0 + 72) = sub_213C42558(v9, v10, v87);
    sub_213C86490();
    swift_bridgeObjectRelease();
    sub_213C3B528(v6);
    sub_213C3B528(v6);
    _os_log_impl(&dword_213C25000, v4, v5, "Error: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v8, -1, -1);
    MEMORY[0x2199C0A30](v7, -1, -1);

    sub_213C3B528(v6);
    sub_213C3B528(v6);

  }
  else
  {
    v11 = *(void **)(v0 + 368);

    sub_213C3B528(v11);
    sub_213C3B528(v11);

    sub_213C3B528(v11);
  }
  v12 = *(_QWORD *)(v0 + 352);
  v13 = *(_QWORD *)(v0 + 344) + 1;
  if (v13 != *(_QWORD *)(v0 + 336))
  {
    v24 = type metadata accessor for CKPolicyRecord;
    do
    {
      *(_QWORD *)(v0 + 344) = v13;
      *(_QWORD *)(v0 + 352) = v12;
      v25 = *(_QWORD *)(v0 + 312) + 24 * v13;
      v26 = *(void **)(v25 + 32);
      *(_QWORD *)(v0 + 360) = v26;
      v27 = *(void **)(v25 + 40);
      *(_QWORD *)(v0 + 368) = v27;
      v28 = *(_BYTE *)(v25 + 48);
      v29 = v26;
      sub_213C3B51C(v27);
      v30 = sub_213C8607C();
      v31 = sub_213C863F4();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = swift_slowAlloc();
        v33 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v32 = 138412290;
        *(_QWORD *)(v32 + 4) = v29;
        *v33 = v29;

        _os_log_impl(&dword_213C25000, v30, v31, "Policy CKRecordID: %@", (uint8_t *)v32, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
        swift_arrayDestroy();
        MEMORY[0x2199C0A30](v33, -1, -1);
        MEMORY[0x2199C0A30](v32, -1, -1);

        if ((v28 & 1) != 0)
          goto LABEL_21;
      }
      else
      {

        if ((v28 & 1) != 0)
        {
LABEL_21:
          *(_QWORD *)(v0 + 56) = 0;
          *(_QWORD *)(v0 + 64) = 0xE000000000000000;
          v61 = v27;
          sub_213C8652C();
          swift_bridgeObjectRelease();
          sub_213C36B3C();
          *(_QWORD *)(v0 + 376) = v62;
          v63 = swift_allocError();
          *(_QWORD *)(v0 + 384) = v63;
          *v64 = 35;
          v86 = (char *)&dword_254D2FB98 + dword_254D2FB98;
          v65 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 392) = v65;
          v66 = sub_213C3833C;
          goto LABEL_26;
        }
      }
      v85 = v29;
      v35 = *(_QWORD *)(v0 + 160);
      v34 = *(_QWORD *)(v0 + 168);
      v36 = *(_QWORD *)(v0 + 152);
      v37 = v27;
      sub_213C79870(v37, v36);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v36, 1, v35) == 1)
      {
        sub_213C3B7AC(*(_QWORD *)(v0 + 152), &qword_254D2DE88);
        v67 = v37;
        v68 = sub_213C8607C();
        v69 = sub_213C86400();
        if (os_log_type_enabled(v68, v69))
        {
          v70 = (uint8_t *)swift_slowAlloc();
          v71 = v27;
          v72 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v70 = 138412290;
          *(_QWORD *)(v0 + 88) = v67;
          v73 = v67;
          sub_213C86490();
          *v72 = v71;
          sub_213C3B528(v71);
          sub_213C3B528(v71);
          _os_log_impl(&dword_213C25000, v68, v69, "Failed to decode Policy, skipping record: %@", v70, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
          swift_arrayDestroy();
          MEMORY[0x2199C0A30](v72, -1, -1);
          MEMORY[0x2199C0A30](v70, -1, -1);
        }
        else
        {
          sub_213C3B528(v27);
          sub_213C3B528(v27);
        }

        *(_QWORD *)(v0 + 40) = 0;
        *(_QWORD *)(v0 + 48) = 0xE000000000000000;
        sub_213C8652C();
        swift_bridgeObjectRelease();
        sub_213C36B3C();
        *(_QWORD *)(v0 + 400) = v74;
        v63 = swift_allocError();
        *(_QWORD *)(v0 + 408) = v63;
        *v75 = 46;
        v86 = (char *)&dword_254D2FB98 + dword_254D2FB98;
        v65 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 416) = v65;
        v66 = sub_213C38DD0;
LABEL_26:
        *v65 = v0;
        v65[1] = v66;
        v88 = 1;
        v87[12] = v63;
        __asm { BR              X8 }
      }
      v39 = *(_QWORD *)(v0 + 192);
      v38 = *(_QWORD *)(v0 + 200);
      v40 = *(_QWORD *)(v0 + 184);
      sub_213C3B670(*(_QWORD *)(v0 + 152), v38, v24);
      sub_213C3AA04(v38, v39);
      sub_213C3AA04(v38, v40);
      v41 = sub_213C8607C();
      v42 = sub_213C863F4();
      v43 = os_log_type_enabled(v41, v42);
      v44 = v24;
      v45 = *(_QWORD *)(v0 + 184);
      v46 = *(_QWORD *)(v0 + 192);
      if (v43)
      {
        v47 = *(_QWORD *)(v0 + 160);
        v48 = swift_slowAlloc();
        v81 = swift_slowAlloc();
        v87[0] = v81;
        *(_DWORD *)v48 = 136315394;
        v49 = (uint64_t *)(v46 + *(int *)(v47 + 44));
        v83 = v27;
        v82 = v12;
        v50 = *v49;
        v51 = v49[1];
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 96) = sub_213C42558(v50, v51, v87);
        sub_213C86490();
        swift_bridgeObjectRelease();
        sub_213C3B578(v46, v44);
        *(_WORD *)(v48 + 12) = 2080;
        v52 = (uint64_t *)(v45 + *(int *)(v47 + 52));
        v53 = *v52;
        v54 = v52[1];
        swift_bridgeObjectRetain();
        v55 = v53;
        v27 = v83;
        *(_QWORD *)(v0 + 104) = sub_213C42558(v55, v54, v87);
        sub_213C86490();
        v12 = v82;
        swift_bridgeObjectRelease();
        sub_213C3B578(v45, v44);
        _os_log_impl(&dword_213C25000, v41, v42, "fetched CK policy record with plugin_id: %s, and recipe_id: %s", (uint8_t *)v48, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2199C0A30](v81, -1, -1);
        MEMORY[0x2199C0A30](v48, -1, -1);
      }
      else
      {
        sub_213C3B578(*(_QWORD *)(v0 + 192), v44);
        sub_213C3B578(v45, v44);
      }

      v24 = v44;
      sub_213C3AA04(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v12 = sub_213C41CEC(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
      v57 = *(_QWORD *)(v12 + 16);
      v56 = *(_QWORD *)(v12 + 24);
      if (v57 >= v56 >> 1)
        v12 = sub_213C41CEC(v56 > 1, v57 + 1, 1, v12);
      v58 = *(_QWORD *)(v0 + 200);
      v60 = *(_QWORD *)(v0 + 168);
      v59 = *(_QWORD *)(v0 + 176);
      *(_QWORD *)(v12 + 16) = v57 + 1;
      sub_213C3B670(v59, v12+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(_QWORD *)(v60 + 72) * v57, v44);
      sub_213C3B528(v27);
      sub_213C3B528(v27);

      sub_213C3B578(v58, v44);
      v13 = *(_QWORD *)(v0 + 344) + 1;
    }
    while (v13 != *(_QWORD *)(v0 + 336));
  }
  v14 = *(void **)(v0 + 272);
  v15 = *(void **)(v0 + 280);
  v17 = *(void **)(v0 + 256);
  v16 = *(void **)(v0 + 264);
  v76 = *(void **)(v0 + 248);
  v77 = *(void **)(v0 + 240);
  v78 = *(void **)(v0 + 232);
  v79 = *(void **)(v0 + 224);
  v80 = *(void **)(v0 + 216);
  v18 = *(uint64_t **)(v0 + 120);
  swift_bridgeObjectRelease();
  v87[0] = v12;
  sub_213C43828();
  v19 = v87[0];
  v20 = type metadata accessor for CKPolicy();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v19;
  *(_QWORD *)(v21 + 24) = 0;
  v18[3] = v20;
  v18[4] = sub_213C3B630(&qword_254D2DEB0, v22, (uint64_t (*)(uint64_t))type metadata accessor for CKPolicy, (uint64_t)&unk_213C8857C);

  *v18 = v21;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C38DD0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 408);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_213C38E38()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  void *v17;
  void *v18;
  char v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _QWORD *v56;
  uint64_t (*v57)();
  id v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  void *v62;
  _QWORD *v63;
  id v64;
  uint64_t v65;
  _BYTE *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  unint64_t v73;
  void *v74;
  void *v75;
  char *v76;
  uint64_t v77[13];
  char v78;

  v1 = *(void **)(v0 + 360);
  v2 = *(void **)(v0 + 368);
  sub_213C3B528(v2);
  sub_213C3B528(v2);

  v3 = *(_QWORD *)(v0 + 352);
  v4 = *(_QWORD *)(v0 + 344) + 1;
  if (v4 != *(_QWORD *)(v0 + 336))
  {
    v15 = type metadata accessor for CKPolicyRecord;
    do
    {
      *(_QWORD *)(v0 + 344) = v4;
      *(_QWORD *)(v0 + 352) = v3;
      v16 = *(_QWORD *)(v0 + 312) + 24 * v4;
      v17 = *(void **)(v16 + 32);
      *(_QWORD *)(v0 + 360) = v17;
      v18 = *(void **)(v16 + 40);
      *(_QWORD *)(v0 + 368) = v18;
      v19 = *(_BYTE *)(v16 + 48);
      v20 = v17;
      sub_213C3B51C(v18);
      v21 = sub_213C8607C();
      v22 = sub_213C863F4();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        v24 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v23 = 138412290;
        *(_QWORD *)(v23 + 4) = v20;
        *v24 = v20;

        _os_log_impl(&dword_213C25000, v21, v22, "Policy CKRecordID: %@", (uint8_t *)v23, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
        swift_arrayDestroy();
        MEMORY[0x2199C0A30](v24, -1, -1);
        MEMORY[0x2199C0A30](v23, -1, -1);

        if ((v19 & 1) != 0)
          goto LABEL_18;
      }
      else
      {

        if ((v19 & 1) != 0)
        {
LABEL_18:
          *(_QWORD *)(v0 + 56) = 0;
          *(_QWORD *)(v0 + 64) = 0xE000000000000000;
          v52 = v18;
          sub_213C8652C();
          swift_bridgeObjectRelease();
          sub_213C36B3C();
          *(_QWORD *)(v0 + 376) = v53;
          v54 = swift_allocError();
          *(_QWORD *)(v0 + 384) = v54;
          *v55 = 35;
          v76 = (char *)&dword_254D2FB98 + dword_254D2FB98;
          v56 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 392) = v56;
          v57 = sub_213C3833C;
          goto LABEL_23;
        }
      }
      v75 = v20;
      v26 = *(_QWORD *)(v0 + 160);
      v25 = *(_QWORD *)(v0 + 168);
      v27 = *(_QWORD *)(v0 + 152);
      v28 = v18;
      sub_213C79870(v28, v27);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v27, 1, v26) == 1)
      {
        sub_213C3B7AC(*(_QWORD *)(v0 + 152), &qword_254D2DE88);
        v58 = v28;
        v59 = sub_213C8607C();
        v60 = sub_213C86400();
        if (os_log_type_enabled(v59, v60))
        {
          v61 = (uint8_t *)swift_slowAlloc();
          v62 = v18;
          v63 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v61 = 138412290;
          *(_QWORD *)(v0 + 88) = v58;
          v64 = v58;
          sub_213C86490();
          *v63 = v62;
          sub_213C3B528(v62);
          sub_213C3B528(v62);
          _os_log_impl(&dword_213C25000, v59, v60, "Failed to decode Policy, skipping record: %@", v61, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
          swift_arrayDestroy();
          MEMORY[0x2199C0A30](v63, -1, -1);
          MEMORY[0x2199C0A30](v61, -1, -1);
        }
        else
        {
          sub_213C3B528(v18);
          sub_213C3B528(v18);
        }

        *(_QWORD *)(v0 + 40) = 0;
        *(_QWORD *)(v0 + 48) = 0xE000000000000000;
        sub_213C8652C();
        swift_bridgeObjectRelease();
        sub_213C36B3C();
        *(_QWORD *)(v0 + 400) = v65;
        v54 = swift_allocError();
        *(_QWORD *)(v0 + 408) = v54;
        *v66 = 46;
        v76 = (char *)&dword_254D2FB98 + dword_254D2FB98;
        v56 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 416) = v56;
        v57 = sub_213C38DD0;
LABEL_23:
        *v56 = v0;
        v56[1] = v57;
        v78 = 1;
        v77[12] = v54;
        __asm { BR              X8 }
      }
      v30 = *(_QWORD *)(v0 + 192);
      v29 = *(_QWORD *)(v0 + 200);
      v31 = *(_QWORD *)(v0 + 184);
      sub_213C3B670(*(_QWORD *)(v0 + 152), v29, v15);
      sub_213C3AA04(v29, v30);
      sub_213C3AA04(v29, v31);
      v32 = sub_213C8607C();
      v33 = sub_213C863F4();
      v34 = os_log_type_enabled(v32, v33);
      v35 = v15;
      v36 = *(_QWORD *)(v0 + 184);
      v37 = *(_QWORD *)(v0 + 192);
      if (v34)
      {
        v38 = *(_QWORD *)(v0 + 160);
        v39 = swift_slowAlloc();
        v72 = swift_slowAlloc();
        v77[0] = v72;
        *(_DWORD *)v39 = 136315394;
        v40 = (uint64_t *)(v37 + *(int *)(v38 + 44));
        v74 = v18;
        v73 = v3;
        v41 = *v40;
        v42 = v40[1];
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 96) = sub_213C42558(v41, v42, v77);
        sub_213C86490();
        swift_bridgeObjectRelease();
        sub_213C3B578(v37, v35);
        *(_WORD *)(v39 + 12) = 2080;
        v43 = (uint64_t *)(v36 + *(int *)(v38 + 52));
        v44 = *v43;
        v45 = v43[1];
        swift_bridgeObjectRetain();
        v46 = v44;
        v18 = v74;
        *(_QWORD *)(v0 + 104) = sub_213C42558(v46, v45, v77);
        sub_213C86490();
        v3 = v73;
        swift_bridgeObjectRelease();
        sub_213C3B578(v36, v35);
        _os_log_impl(&dword_213C25000, v32, v33, "fetched CK policy record with plugin_id: %s, and recipe_id: %s", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2199C0A30](v72, -1, -1);
        MEMORY[0x2199C0A30](v39, -1, -1);
      }
      else
      {
        sub_213C3B578(*(_QWORD *)(v0 + 192), v35);
        sub_213C3B578(v36, v35);
      }

      v15 = v35;
      sub_213C3AA04(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_213C41CEC(0, *(_QWORD *)(v3 + 16) + 1, 1, v3);
      v48 = *(_QWORD *)(v3 + 16);
      v47 = *(_QWORD *)(v3 + 24);
      if (v48 >= v47 >> 1)
        v3 = sub_213C41CEC(v47 > 1, v48 + 1, 1, v3);
      v49 = *(_QWORD *)(v0 + 200);
      v51 = *(_QWORD *)(v0 + 168);
      v50 = *(_QWORD *)(v0 + 176);
      *(_QWORD *)(v3 + 16) = v48 + 1;
      sub_213C3B670(v50, v3+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(_QWORD *)(v51 + 72) * v48, v35);
      sub_213C3B528(v18);
      sub_213C3B528(v18);

      sub_213C3B578(v49, v35);
      v4 = *(_QWORD *)(v0 + 344) + 1;
    }
    while (v4 != *(_QWORD *)(v0 + 336));
  }
  v5 = *(void **)(v0 + 272);
  v6 = *(void **)(v0 + 280);
  v8 = *(void **)(v0 + 256);
  v7 = *(void **)(v0 + 264);
  v67 = *(void **)(v0 + 248);
  v68 = *(void **)(v0 + 240);
  v69 = *(void **)(v0 + 232);
  v70 = *(void **)(v0 + 224);
  v71 = *(void **)(v0 + 216);
  v9 = *(uint64_t **)(v0 + 120);
  swift_bridgeObjectRelease();
  v77[0] = v3;
  sub_213C43828();
  v10 = v77[0];
  v11 = type metadata accessor for CKPolicy();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = 0;
  v9[3] = v11;
  v9[4] = sub_213C3B630(&qword_254D2DEB0, v13, (uint64_t (*)(uint64_t))type metadata accessor for CKPolicy, (uint64_t)&unk_213C8857C);

  *v9 = v12;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C396E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213C396FC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_213C39774;
  return sub_213C86394();
}

uint64_t sub_213C39774(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t sub_213C397D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[12] = a1;
  v2[13] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE50);
  v2[14] = swift_task_alloc();
  v3 = type metadata accessor for CKPayloadRecord(0);
  v2[15] = v3;
  v2[16] = *(_QWORD *)(v3 - 8);
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213C39888()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23[2];

  v23[1] = *MEMORY[0x24BDAC8D0];
  v1 = (_QWORD *)v0[12];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_0Tm(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  v6 = v5;
  v0[18] = v4;
  v0[19] = v5;
  if (qword_254D2D960 != -1)
    swift_once();
  v7 = sub_213C86094();
  v0[20] = __swift_project_value_buffer(v7, (uint64_t)qword_254D2FF28);
  swift_bridgeObjectRetain_n();
  v8 = sub_213C8607C();
  v9 = sub_213C863F4();
  if (os_log_type_enabled(v8, v9))
  {
    v22 = v4;
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v23[0] = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain();
    v0[11] = sub_213C42558(v22, v6, v23);
    sub_213C86490();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213C25000, v8, v9, "Querying Payload for recipe: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v11, -1, -1);
    MEMORY[0x2199C0A30](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v12 = v0[13];
  sub_213C3B5F8(0, (unint64_t *)&qword_254D2DE58);
  v13 = *(void **)(v12 + 152);
  swift_bridgeObjectRetain();
  v14 = v13;
  v15 = (void *)sub_213C863A0();
  v0[21] = v15;
  v0[22] = sub_213C3A984();
  v16 = swift_allocError();
  v0[23] = v16;
  *v17 = 41;
  v18 = dword_254D2E3A8;
  swift_retain();
  v19 = v15;
  v20 = (_QWORD *)swift_task_alloc();
  v0[24] = v20;
  *v20 = v0;
  v20[1] = sub_213C39B54;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_254D2E3A8 + v18))(v16, v0[13], (uint64_t)v19);
}

uint64_t sub_213C39B54(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;

  v3 = *v2;
  *(_QWORD *)(v3 + 200) = a1;
  *(_QWORD *)(v3 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {

    swift_release();
  }
  else
  {
    v4 = *(void **)(v3 + 184);

    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_213C39C40()
{
  uint64_t v0;
  id v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  id v12;
  char v13;
  void *v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  void *v20;
  uint64_t v21;
  id v22;
  char v23;
  void *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74[2];

  v74[1] = *MEMORY[0x24BDAC8D0];
  v1 = *(id *)(v0 + 168);
  swift_bridgeObjectRetain_n();
  v2 = v1;
  v3 = sub_213C8607C();
  v4 = sub_213C863F4();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 200);
  if (v5)
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v74[0] = v8;
    *(_DWORD *)v7 = 136315138;
    if (*(_QWORD *)(v6 + 16))
    {
      v9 = sub_213C4B440((uint64_t)*(id *)(v0 + 168));
      if ((v10 & 1) != 0)
      {
        v11 = *(_QWORD *)(*(_QWORD *)(v0 + 200) + 56) + 16 * v9;
        v12 = *(id *)v11;
        v13 = *(_BYTE *)(v11 + 8);
        sub_213C3B51C(*(id *)v11);
      }
      else
      {
        v12 = 0;
        v13 = -1;
      }

    }
    else
    {
      v12 = 0;
      v13 = -1;
    }
    v15 = *(void **)(v0 + 168);
    *(_QWORD *)(v0 + 48) = v12;
    *(_BYTE *)(v0 + 56) = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE70);
    v16 = sub_213C86178();
    *(_QWORD *)(v0 + 80) = sub_213C42558(v16, v17, v74);
    sub_213C86490();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    _os_log_impl(&dword_213C25000, v3, v4, "fetchedPayload: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v8, -1, -1);
    MEMORY[0x2199C0A30](v7, -1, -1);
  }
  else
  {
    v14 = *(void **)(v0 + 168);
    swift_bridgeObjectRelease_n();

  }
  if (!*(_QWORD *)(*(_QWORD *)(v0 + 200) + 16))
    goto LABEL_15;
  v18 = sub_213C4B440((uint64_t)*(id *)(v0 + 168));
  if ((v19 & 1) == 0)
  {

LABEL_15:
    v29 = *(void **)(v0 + 168);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = swift_allocError();
    *v31 = 42;
    sub_213C3B4D8();
    swift_allocError();
    *(_BYTE *)v32 = 4;
    *(_QWORD *)(v32 + 8) = v30;
    swift_willThrow();

LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v20 = *(void **)(v0 + 168);
  v21 = *(_QWORD *)(*(_QWORD *)(v0 + 200) + 56) + 16 * v18;
  v22 = *(id *)v21;
  v23 = *(_BYTE *)(v21 + 8);
  sub_213C3B51C(*(id *)v21);
  swift_bridgeObjectRelease();

  if ((v23 & 1) != 0)
  {
    v24 = *(void **)(v0 + 168);
    swift_bridgeObjectRelease();
    v25 = swift_allocError();
    *v26 = 43;
    sub_213C3B4D8();
    swift_allocError();
    *(_BYTE *)v27 = 4;
    *(_QWORD *)(v27 + 8) = v25;
    swift_willThrow();
    v28 = v22;
LABEL_18:
    sub_213C3B528(v28);

    goto LABEL_27;
  }
  v33 = *(_QWORD *)(v0 + 120);
  v34 = *(_QWORD *)(v0 + 128);
  v35 = *(_QWORD *)(v0 + 112);
  sub_213C7B440(v22, v35);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v35, 1, v33) == 1)
  {
    v24 = *(void **)(v0 + 168);
    v36 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRelease();
    sub_213C3B7AC(v36, &qword_254D2DE50);
    v37 = swift_allocError();
    *v38 = 44;
    sub_213C3B4D8();
    swift_allocError();
    *(_BYTE *)v39 = 4;
    *(_QWORD *)(v39 + 8) = v37;
    swift_willThrow();
    sub_213C3B528(v22);
    v28 = v22;
    goto LABEL_18;
  }
  v40 = *(_QWORD *)(v0 + 136);
  sub_213C3B670(*(_QWORD *)(v0 + 112), v40, type metadata accessor for CKPayloadRecord);
  v41 = (void *)objc_opt_self();
  v43 = *(_QWORD *)(v40 + 16);
  v42 = *(_QWORD *)(v40 + 24);
  sub_213C3B534(v43, v42);
  v44 = (void *)sub_213C85E48();
  sub_213C3B078(v43, v42);
  *(_QWORD *)(v0 + 64) = 0;
  v45 = objc_msgSend(v41, sel_JSONObjectWithData_options_error_, v44, 0, v0 + 64);

  v46 = *(void **)(v0 + 64);
  if (!v45)
  {
    v56 = v46;
    swift_bridgeObjectRelease();
    v57 = (void *)sub_213C85D34();

    swift_willThrow();
LABEL_25:
    v58 = *(void **)(v0 + 168);
    v59 = *(_QWORD *)(v0 + 136);
    v60 = swift_allocError();
    *v61 = 45;
    sub_213C3B4D8();
    swift_allocError();
    *(_BYTE *)v62 = 4;
    *(_QWORD *)(v62 + 8) = v60;
    swift_willThrow();

    sub_213C3B528(v22);
    sub_213C3B528(v22);
    v55 = v59;
    goto LABEL_26;
  }
  v47 = v46;
  sub_213C864C0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE68);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  v48 = *(_QWORD *)(v0 + 208);
  v49 = *(_QWORD *)(v0 + 72);
  type metadata accessor for FederatedBuffer();
  swift_allocObject();
  v50 = swift_bridgeObjectRetain();
  v51 = sub_213C573D4(v50);
  if (v48)
  {
    v52 = *(void **)(v0 + 168);
    v53 = *(_QWORD *)(v0 + 136);
    sub_213C3B4D8();
    swift_allocError();
    *(_BYTE *)v54 = 4;
    *(_QWORD *)(v54 + 8) = v48;
    swift_willThrow();

    sub_213C3B528(v22);
    sub_213C3B528(v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v55 = v53;
LABEL_26:
    sub_213C3B578(v55, type metadata accessor for CKPayloadRecord);
    goto LABEL_27;
  }
  v64 = v51;
  v65 = *(_QWORD *)(v0 + 136);
  v66 = *(_QWORD *)(v0 + 120);
  type metadata accessor for PFLTaskStorage();
  swift_allocObject();
  sub_213C729EC();
  sub_213C73220(v65 + *(int *)(v66 + 24));
  v67 = *(void **)(v0 + 168);
  v68 = *(_QWORD *)(v0 + 152);
  v70 = v69;
  v71 = *(_QWORD *)(v0 + 144);
  v73 = *(_QWORD *)(v0 + 136);
  type metadata accessor for PFLTask();
  v72 = (_QWORD *)swift_allocObject();
  v72[2] = v71;
  v72[3] = v68;
  v72[4] = v49;
  v72[5] = v70;
  v72[6] = v64;

  sub_213C3B528(v22);
  sub_213C3B528(v22);
  swift_release();
  sub_213C3B578(v73, type metadata accessor for CKPayloadRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v72);
}

uint64_t sub_213C3A478()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(void **)(v0 + 168);

  sub_213C3B4D8();
  swift_allocError();
  *(_BYTE *)v3 = 4;
  *(_QWORD *)(v3 + 8) = v1;
  swift_willThrow();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C3A544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213C3A560()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t v6;

  v1 = (void *)v0[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE80);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_213C88400;
  *(_QWORD *)(v2 + 32) = v1;
  v6 = v2;
  sub_213C8628C();
  v0[5] = v6;
  v3 = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_213C3A60C;
  return sub_213C86388();
}

uint64_t sub_213C3A60C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 64) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_213C3A688()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C3A6A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C3A6D4()
{
  uint64_t v0;

  sub_213C3B744(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_213C3A744()
{
  sub_213C3A6D4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PFLCKTaskDownloader()
{
  return objc_opt_self();
}

uint64_t sub_213C3A784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_213C3A7F0;
  return sub_213C3734C(a1, a2, a3);
}

uint64_t sub_213C3A7F0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213C3A838()
{
  return sub_213C36B3C();
}

uint64_t sub_213C3A858(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_213C3A8A8;
  return sub_213C397D8(a1);
}

uint64_t sub_213C3A8A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_213C3A8FC(uint64_t a1, uint64_t a2)
{
  return sub_213C3B630(&qword_254D2DDF0, a2, (uint64_t (*)(uint64_t))type metadata accessor for CKPolicy, (uint64_t)&unk_213C884E4);
}

uint64_t sub_213C3A928(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_213C3B630(&qword_254D2DDF0, a2, (uint64_t (*)(uint64_t))type metadata accessor for CKPolicy, (uint64_t)&unk_213C884E4);
  result = sub_213C3B630(&qword_254D2DDF8, v3, (uint64_t (*)(uint64_t))type metadata accessor for CKPolicy, (uint64_t)&unk_213C88514);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_213C3A984()
{
  unint64_t result;

  result = qword_254D2DE00;
  if (!qword_254D2DE00)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for PFLTaskDiscoveryError, &type metadata for PFLTaskDiscoveryError);
    atomic_store(result, (unint64_t *)&qword_254D2DE00);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_213C3AA04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CKPolicyRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213C3AA48(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_213C3AA60@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  sub_213C35070((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_213C3AAA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  _OWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t i;
  _OWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  _OWORD v46[2];
  _OWORD v47[2];
  __int128 v48;
  _OWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v50 = a1;
  v51 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v52 = v8;
  v53 = 0;
  v54 = v11 & v9;
  v55 = a2;
  v56 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_213C3ADF4(&v48);
  v12 = *((_QWORD *)&v48 + 1);
  if (!*((_QWORD *)&v48 + 1))
    goto LABEL_27;
  v13 = v48;
  sub_213C3B0BC(v49, v47);
  v14 = *(_QWORD **)a5;
  v16 = sub_213C4B3DC(v13, v12);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v20 = v15;
  if (v14[3] >= v19)
  {
    if ((a4 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_213C608B4();
      if ((v20 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v24 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    v25 = (uint64_t *)(v24[6] + 16 * v16);
    *v25 = v13;
    v25[1] = v12;
    sub_213C3B0BC(v47, (_OWORD *)(v24[7] + 32 * v16));
    v26 = v24[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v28;
LABEL_16:
    sub_213C3ADF4(&v48);
    for (i = *((_QWORD *)&v48 + 1); *((_QWORD *)&v48 + 1); i = *((_QWORD *)&v48 + 1))
    {
      v31 = v48;
      sub_213C3B0BC(v49, v47);
      v32 = *(_QWORD **)a5;
      v34 = sub_213C4B3DC(v31, i);
      v35 = v32[2];
      v36 = (v33 & 1) == 0;
      v37 = v35 + v36;
      if (__OFADD__(v35, v36))
        goto LABEL_28;
      v38 = v33;
      if (v32[3] < v37)
      {
        sub_213C5FC40(v37, 1);
        v39 = sub_213C4B3DC(v31, i);
        if ((v38 & 1) != (v40 & 1))
          goto LABEL_30;
        v34 = v39;
      }
      if ((v38 & 1) != 0)
      {
        sub_213C35070((uint64_t)v47, (uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
        swift_bridgeObjectRelease();
        v30 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v34);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
        sub_213C3B0BC(v46, v30);
      }
      else
      {
        v41 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        v42 = (uint64_t *)(v41[6] + 16 * v34);
        *v42 = v31;
        v42[1] = i;
        sub_213C3B0BC(v47, (_OWORD *)(v41[7] + 32 * v34));
        v43 = v41[2];
        v27 = __OFADD__(v43, 1);
        v44 = v43 + 1;
        if (v27)
          goto LABEL_29;
        v41[2] = v44;
      }
      sub_213C3ADF4(&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_213C3B0EC();
    return swift_release();
  }
  sub_213C5FC40(v19, a4 & 1);
  v21 = sub_213C4B3DC(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    v16 = v21;
    if ((v20 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_213C35070((uint64_t)v47, (uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
    swift_bridgeObjectRelease();
    v23 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v16);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
    sub_213C3B0BC(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  result = sub_213C8679C();
  __break(1u);
  return result;
}

uint64_t sub_213C3ADF4@<X0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  uint64_t result;
  _OWORD v21[3];
  _OWORD v22[3];
  __int128 v23;
  _OWORD v24[2];

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_213C35070(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(_QWORD *)&v23 = v13;
    *((_QWORD *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v14 << 6);
      v7 = v14;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        v14 = v17;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        v16 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          v14 = v5 + 3;
          goto LABEL_7;
        }
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_10;
          v14 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            v16 = *(_QWORD *)(v4 + 8 * v14);
            if (v16)
              goto LABEL_7;
            v7 = v15 - 1;
            v18 = v5 + 6;
            while (v15 != v18)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  memset(v24, 0, sizeof(v24));
  v23 = 0u;
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  result = sub_213C3B0F4((uint64_t)&v23, (uint64_t)v22, &qword_254D2DE40);
  if (*((_QWORD *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_213C3B7AC((uint64_t)v21, &qword_254D2DE48);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_213C3AFD8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = result;
    v3 = *(unsigned __int8 *)(result + 32);
    result += 32;
    if (!v3)
      return sub_213C861B4();
    v4 = 0;
    v5 = v1 - 1;
    v6 = v2 + 33;
    while (v5 != v4)
    {
      if (!*(unsigned __int8 *)(v6 + v4++))
        return sub_213C861B4();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_213C3B020()
{
  unint64_t result;

  result = qword_254D2DE38;
  if (!qword_254D2DE38)
  {
    result = MEMORY[0x2199C0970](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_254D2DE38);
  }
  return result;
}

uint64_t sub_213C3B064(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_213C3B078(a1, a2);
  return a1;
}

uint64_t sub_213C3B078(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

_OWORD *sub_213C3B0BC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_213C3B0EC()
{
  return swift_release();
}

uint64_t sub_213C3B0F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_213C3B138()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v0 + 80) != 255)
    sub_213C3B18C();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_213C3B18C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C3B198(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 != 255)
    return sub_213C3B1B0();
  return result;
}

uint64_t sub_213C3B1B0()
{
  return swift_bridgeObjectRetain();
}

_QWORD *__swift_project_boxed_opaque_existential_0Tm(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

id sub_213C3B1E0(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;

  v1 = *a1;
  v2 = a1[1];
  if (v2 < 4)
    goto LABEL_7;
  if (v2 == 4)
  {
    sub_213C3B744(*a1, 4uLL);
    sub_213C3B744(0, 4uLL);
LABEL_8:
    v3 = 1;
    goto LABEL_9;
  }
  if (v2 != 5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_7:
    sub_213C3B744(v1, v2);
    sub_213C3B744(0, 4uLL);
    sub_213C3B778(v1, v2);
    sub_213C3B744(v1, v2);
    sub_213C3B744(0, 5uLL);
    goto LABEL_8;
  }
  sub_213C3B744(*a1, 5uLL);
  sub_213C3B744(0, 4uLL);
  sub_213C3B744(v1, 5uLL);
  sub_213C3B744(v1, 5uLL);
  v3 = 2;
LABEL_9:
  v4 = objc_allocWithZone(MEMORY[0x24BDB9038]);
  v5 = (void *)sub_213C86124();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithContainerIdentifier_environment_, v5, v3);

  return v6;
}

uint64_t sub_213C3B3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;

  sub_213C3B5F8(0, &qword_254D2DE90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE98);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_213C883D0;
  *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v12 + 64) = sub_213C3B5B4();
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEC8);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_213C883D0;
  *(_QWORD *)(v13 + 32) = a5;
  *(_QWORD *)(v13 + 40) = a6;
  *(_QWORD *)(v13 + 48) = a3;
  *(_QWORD *)(v13 + 56) = a4;
  *(_QWORD *)(v12 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0);
  *(_QWORD *)(v12 + 104) = sub_213C3B6B4();
  *(_QWORD *)(v12 + 72) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_213C863AC();
}

unint64_t sub_213C3B4D8()
{
  unint64_t result;

  result = qword_254D2DE60;
  if (!qword_254D2DE60)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AC54, &type metadata for PFLTaskLocationalError);
    atomic_store(result, (unint64_t *)&qword_254D2DE60);
  }
  return result;
}

id sub_213C3B51C(id a1)
{
  return a1;
}

void sub_213C3B528(id a1)
{

}

uint64_t sub_213C3B534(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_213C3B578(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_213C3B5B4()
{
  unint64_t result;

  result = qword_254D2DEA0;
  if (!qword_254D2DEA0)
  {
    result = MEMORY[0x2199C0970](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_254D2DEA0);
  }
  return result;
}

uint64_t sub_213C3B5F8(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_213C3B630(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2199C0970](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_213C3B670(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_213C3B6B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D2DED0;
  if (!qword_254D2DED0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D2DBB0);
    result = MEMORY[0x2199C0970](MEMORY[0x24BDCFBF8], v1);
    atomic_store(result, (unint64_t *)&qword_254D2DED0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2199C0964](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_213C3B744(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 6)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_213C3B778(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 6)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_213C3B7AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_213C3B7E8(void (*a1)(unint64_t *__return_ptr, _QWORD *), uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  _BOOL4 v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v37;
  _QWORD v38[2];
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v5 = v4;
  v6 = a4;
  v7 = a3;
  v8 = sub_213C44288(a3, a4);
  v9 = MEMORY[0x24BEE4AF8];
  if (!v8)
    return v9;
  v10 = v8;
  v41 = MEMORY[0x24BEE4AF8];
  result = sub_213C5477C(0, v8 & ~(v8 >> 63), 0);
  if (v10 < 0)
    goto LABEL_58;
  v12 = (v7 >> 59) & 1;
  if ((v6 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v14 = v7 & 0xFFFFFFFFFFFFLL;
  v37 = v14;
  v31 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v32 = v6 & 0xFFFFFFFFFFFFFFLL;
  v15 = 15;
  v33 = v13;
  v34 = v6;
  while (1)
  {
    v16 = v15 & 0xC;
    v17 = (v15 & 1) == 0 || v16 == v13;
    v18 = v17;
    if (v17)
      break;
    result = v15;
    if (v15 >> 16 >= v37)
      goto LABEL_55;
LABEL_24:
    if ((v6 & 0x1000000000000000) != 0)
    {
      v19 = sub_213C86520();
    }
    else
    {
      if ((v6 & 0x2000000000000000) != 0)
      {
        v38[0] = v7;
        v38[1] = v32;
      }
      else if ((v7 & 0x1000000000000000) == 0)
      {
        sub_213C86574();
      }
      v19 = sub_213C86580();
    }
    LODWORD(v38[0]) = v19;
    v9 = a2;
    a1(&v39, v38);
    if (v5)
    {
      swift_release();
      return v9;
    }
    v20 = v7;
    v21 = v39;
    v22 = v40;
    v9 = v41;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_213C5477C(0, *(_QWORD *)(v9 + 16) + 1, 1);
      v9 = v41;
    }
    v24 = *(_QWORD *)(v9 + 16);
    v23 = *(_QWORD *)(v9 + 24);
    if (v24 >= v23 >> 1)
    {
      result = sub_213C5477C(v23 > 1, v24 + 1, 1);
      v9 = v41;
    }
    *(_QWORD *)(v9 + 16) = v24 + 1;
    v25 = v9 + 16 * v24;
    *(_QWORD *)(v25 + 32) = v21;
    *(_QWORD *)(v25 + 40) = v22;
    if (v18)
    {
      v13 = v33;
      v6 = v34;
      v7 = v20;
      if ((v15 & 0xC) == v33)
      {
        result = sub_213C42A4C(v15, v20, v34);
        v15 = result;
      }
      v5 = 0;
      if (v37 <= v15 >> 16)
        goto LABEL_56;
      if ((v15 & 1) == 0)
        v15 = v15 & 0xC | sub_213C444C4(v15, v7, v34) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
    else
    {
      v13 = v33;
      v6 = v34;
      v7 = v20;
      v5 = 0;
      if (v37 <= v15 >> 16)
        goto LABEL_57;
    }
    if ((v6 & 0x1000000000000000) != 0)
    {
      v15 = sub_213C8619C();
    }
    else
    {
      v26 = v15 >> 16;
      if ((v6 & 0x2000000000000000) != 0)
      {
        v39 = v7;
        v40 = v32;
        v28 = *((unsigned __int8 *)&v39 + v26);
      }
      else
      {
        v27 = v31;
        if ((v7 & 0x1000000000000000) == 0)
          v27 = sub_213C86574();
        v28 = *(unsigned __int8 *)(v27 + v26);
      }
      v29 = (char)v28;
      v30 = __clz(v28 ^ 0xFF) - 24;
      if (v29 >= 0)
        LOBYTE(v30) = 1;
      v15 = ((v26 + v30) << 16) | 5;
    }
    if (!--v10)
      return v9;
  }
  result = v15;
  if (v16 == v13)
    result = sub_213C42A4C(v15, v7, v6);
  if (result >> 16 < v37)
  {
    if ((result & 1) == 0)
      sub_213C444C4(result, v7, v6);
    goto LABEL_24;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

unint64_t sub_213C3BB4C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E2B8);
  v2 = sub_213C86604();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_213C456C8(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_213C4B3DC(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_213C3B0BC(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213C3BC74(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E2A8);
  v2 = (_QWORD *)sub_213C86604();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_213C4B3DC(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213C3BD8C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E230);
  v2 = (_QWORD *)sub_213C86604();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_213C4B3DC(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213C3BEAC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E250);
  v2 = (_QWORD *)sub_213C86604();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = *(_OWORD *)(a1 + 176);
  v43 = *(_OWORD *)(a1 + 160);
  v44 = v4;
  v45 = *(_OWORD *)(a1 + 192);
  v46 = *(_QWORD *)(a1 + 208);
  v5 = *(_OWORD *)(a1 + 112);
  v39 = *(_OWORD *)(a1 + 96);
  v40 = v5;
  v6 = *(_OWORD *)(a1 + 144);
  v41 = *(_OWORD *)(a1 + 128);
  v42 = v6;
  v7 = *(_OWORD *)(a1 + 48);
  v35 = *(_OWORD *)(a1 + 32);
  v36 = v7;
  v8 = *(_OWORD *)(a1 + 80);
  v37 = *(_OWORD *)(a1 + 64);
  v38 = v8;
  v10 = *((_QWORD *)&v35 + 1);
  v9 = v35;
  sub_213C45404((uint64_t)&v35);
  result = sub_213C4B3DC(v9, v10);
  if ((v12 & 1) != 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  v13 = 216;
  while (1)
  {
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = (uint64_t *)(v2[6] + 16 * result);
    *v14 = v9;
    v14[1] = v10;
    v15 = v2[7] + 168 * result;
    v16 = v36;
    v17 = v38;
    *(_OWORD *)(v15 + 16) = v37;
    *(_OWORD *)(v15 + 32) = v17;
    *(_OWORD *)v15 = v16;
    v18 = v39;
    v19 = v40;
    v20 = v42;
    *(_OWORD *)(v15 + 80) = v41;
    *(_OWORD *)(v15 + 96) = v20;
    *(_OWORD *)(v15 + 48) = v18;
    *(_OWORD *)(v15 + 64) = v19;
    v21 = v43;
    v22 = v44;
    v23 = v45;
    *(_QWORD *)(v15 + 160) = v46;
    *(_OWORD *)(v15 + 128) = v22;
    *(_OWORD *)(v15 + 144) = v23;
    *(_OWORD *)(v15 + 112) = v21;
    v24 = v2[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      break;
    v2[2] = v26;
    if (!--v3)
      goto LABEL_9;
    v27 = v13 + 184;
    v28 = (__int128 *)(a1 + v13);
    v29 = v28[9];
    v43 = v28[8];
    v44 = v29;
    v45 = v28[10];
    v46 = *((_QWORD *)v28 + 22);
    v30 = v28[5];
    v39 = v28[4];
    v40 = v30;
    v31 = v28[7];
    v41 = v28[6];
    v42 = v31;
    v32 = v28[1];
    v35 = *v28;
    v36 = v32;
    v33 = v28[3];
    v37 = v28[2];
    v38 = v33;
    v10 = *((_QWORD *)&v35 + 1);
    v9 = v35;
    sub_213C45404((uint64_t)&v35);
    result = sub_213C4B3DC(v9, v10);
    v13 = v27;
    if ((v34 & 1) != 0)
      goto LABEL_8;
  }
  __break(1u);
  return result;
}

unint64_t sub_213C3C098(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E248);
  v2 = (_QWORD *)sub_213C86604();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_213C4B3DC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t PFLPluginError.rawValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PFLPluginError.__allocating_init(rawValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t PFLPluginError.init(rawValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t PFLPluginError.__allocating_init(error:)(void *a1)
{
  uint64_t v2;

  v2 = sub_213C449D4();

  return v2;
}

uint64_t PFLPluginError.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PFLPluginError.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_213C3C2A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  type metadata accessor for PFLPluginError();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 24) = v4;
  *a2 = result;
  return result;
}

uint64_t sub_213C3C2E4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PFLPluginConsent.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

PrivateFederatedLearning::PFLPluginConsent __swiftcall PFLPluginConsent.init(rawValue:)(PrivateFederatedLearning::PFLPluginConsent rawValue)
{
  PrivateFederatedLearning::PFLPluginConsent *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static PFLPluginConsent.DNU.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static PFLPluginConsent.PrivacyBudget.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static PFLPluginConsent.Unlocked.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static PFLPluginConsent.IHA.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void static PFLPluginConsent.DisallowsCellularAccess.getter(_QWORD *a1@<X8>)
{
  *a1 = 16;
}

_QWORD *sub_213C3C340@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_213C3C34C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_213C3C354@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_213C3C368@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_213C3C37C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_213C3C390(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_213C3C3C0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_213C3C3EC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_213C3C410(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_213C3C424(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_213C3C438(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_213C3C44C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_213C3C460(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_213C3C474(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_213C3C488(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_213C3C49C()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_213C3C4AC()
{
  return sub_213C864CC();
}

_QWORD *sub_213C3C4C4(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_213C3C4D8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

BOOL sub_213C3C4E8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_213C3C508()
{
  uint64_t v0;

  return sub_213C4517C(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 1);
}

Swift::Bool __swiftcall PFLTaskRunner.isDataAvailable()()
{
  return 1;
}

uint64_t sub_213C3C524()
{
  return 0;
}

uint64_t PFLTaskRunner.shouldContinueAfterFailure(task:useCase:)()
{
  return 0;
}

uint64_t sub_213C3C534(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C3C590()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_213C3C5C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  *(_QWORD *)(v4 + 24) = v2;
  *(_QWORD *)(v4 + 32) = v3;
  sub_213C44A9C(v2, v3);
  return sub_213C3B064(v5, v6);
}

uint64_t sub_213C3C630()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  sub_213C44A9C(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t sub_213C3C67C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C3C6D8()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_213C3C70C(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_213C3C750())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t PFLTaskResult.__allocating_init(json:vector:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 24) = xmmword_213C885A0;
  *(_QWORD *)(v6 + 40) = sub_213C3BB4C(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v6 + 16) = a1;
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 24);
  v8 = *(_QWORD *)(v6 + 32);
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  sub_213C3B064(v7, v8);
  return v6;
}

_QWORD *PFLTaskResult.init(json:vector:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  unint64_t v8;

  *(_OWORD *)(v3 + 3) = xmmword_213C885A0;
  v3[5] = sub_213C3BB4C(MEMORY[0x24BEE4AF8]);
  v3[2] = a1;
  swift_beginAccess();
  v7 = v3[3];
  v8 = v3[4];
  v3[3] = a2;
  v3[4] = a3;
  sub_213C3B064(v7, v8);
  return v3;
}

uint64_t sub_213C3C8BC(unint64_t a1, unint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  void *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void (*v37)(char *, uint64_t);
  id v38;
  void *v39;
  char *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  void (*v48)(unint64_t, uint64_t, uint64_t);
  uint64_t v49;
  unint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  BOOL v57;
  uint8_t *v58;
  uint64_t v59;
  unint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[2];
  uint8_t *v71;
  uint64_t v72;
  NSObject *v73;
  uint64_t v74;
  unsigned int v75;
  void (*v76)(char *, uint64_t);
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t);
  char *v82;
  void *v83;
  _QWORD *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char v89[16];
  char *v90;
  uint64_t v91;
  uint64_t v92[2];
  unint64_t v93;
  uint64_t v94;

  v82 = (char *)a1;
  v87 = sub_213C85D58();
  v84 = *(_QWORD **)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v4 = (char *)v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_213C85E18();
  v85 = *(_QWORD *)(v88 - 8);
  v5 = MEMORY[0x24BDAC7A8](v88);
  v79 = (char *)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v77 = (char *)v70 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v78 = (char *)v70 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v70 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v86 = (char *)v70 - v14;
  v15 = sub_213C85CBC();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)v70 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v70 - v23;
  sub_213C85C98();
  sub_213C85C8C();
  sub_213C85CA4();
  v25 = *(void (**)(char *, uint64_t))(v16 + 8);
  v25(v19, v15);
  v25(v22, v15);
  v90 = v24;
  swift_bridgeObjectRetain();
  v26 = v83;
  v27 = sub_213C3B7E8((void (*)(unint64_t *__return_ptr, _QWORD *))sub_213C4561C, (uint64_t)v89, (unint64_t)v82, a2);
  v83 = v26;
  swift_bridgeObjectRelease();
  v93 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E278);
  sub_213C45638();
  v28 = sub_213C86244();
  v30 = v29;
  v25(v24, v15);
  sub_213C85DA0();
  v93 = v28;
  v94 = v30;
  v31 = *MEMORY[0x24BDCD790];
  v32 = v84;
  v33 = v87;
  v81 = (void (*)(char *, uint64_t, uint64_t))v84[13];
  v81(v4, v31, v87);
  v34 = sub_213C3B020();
  v35 = (uint64_t)v86;
  sub_213C85E0C();
  v36 = (_QWORD *)v32[1];
  v82 = v4;
  v84 = v36;
  ((void (*)(char *, uint64_t))v36)(v4, v33);
  v37 = *(void (**)(char *, uint64_t))(v85 + 8);
  v37(v13, v88);
  swift_bridgeObjectRelease();
  v38 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_213C85DD0();
  v39 = (void *)sub_213C86124();
  swift_bridgeObjectRelease();
  LOBYTE(v13) = objc_msgSend(v38, sel_fileExistsAtPath_, v39);

  if ((v13 & 1) != 0)
  {
    v40 = (char *)v35;
    v41 = v83;
  }
  else
  {
    v42 = v83;
    sub_213C3D074();
    v41 = v42;
    v40 = (char *)v35;
    if (v42)
    {
      sub_213C3D4B4(v42, v35, "Failed to create folder at %s, error: %@");
      swift_willThrow();
      goto LABEL_17;
    }
  }
  v83 = (void *)v34;
  v43 = v80;
  swift_beginAccess();
  v44 = *(_QWORD *)(v43 + 32);
  v45 = *MEMORY[0x24BDCD798];
  v46 = v87;
  if (v44 >> 60 == 15)
  {
    v48 = (void (*)(unint64_t, uint64_t, uint64_t))v81;
    v47 = (unint64_t)v82;
  }
  else
  {
    v76 = v37;
    v49 = *(_QWORD *)(v43 + 24);
    strcpy((char *)v92, "results.bin");
    HIDWORD(v92[1]) = -352321536;
    v50 = (unint64_t)v82;
    v51 = v45;
    ((void (*)(char *))v81)(v82);
    sub_213C3B534(v49, v44);
    v52 = (uint64_t)v78;
    sub_213C85E0C();
    ((void (*)(unint64_t, uint64_t))v84)(v50, v46);
    swift_bridgeObjectRelease();
    sub_213C85E60();
    if (v41)
    {
      sub_213C3D4B4(v41, v52, "Failed to store PFL result (gradients) at %s, error: %@");
      swift_willThrow();
      sub_213C3B064(v49, v44);
      v37 = v76;
      v76((char *)v52, v88);
      v40 = v86;
      goto LABEL_17;
    }
    v74 = v49;
    v75 = v51;
    v48 = (void (*)(unint64_t, uint64_t, uint64_t))v81;
    if (qword_254D2D960 != -1)
      swift_once();
    v53 = sub_213C86094();
    __swift_project_value_buffer(v53, (uint64_t)qword_254D2FF28);
    v54 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v77, v52, v88);
    v55 = sub_213C8607C();
    v56 = sub_213C863F4();
    LODWORD(v85) = v56;
    v57 = os_log_type_enabled(v55, v56);
    v37 = v76;
    v40 = v86;
    if (v57)
    {
      v73 = v55;
      v58 = (uint8_t *)swift_slowAlloc();
      v72 = swift_slowAlloc();
      v92[0] = v72;
      v71 = v58;
      *(_DWORD *)v58 = 136315138;
      v70[1] = v58 + 4;
      v59 = sub_213C85DD0();
      v91 = sub_213C42558(v59, v60, v92);
      v43 = v80;
      sub_213C86490();
      swift_bridgeObjectRelease();
      v37(v54, v88);
      v61 = v71;
      _os_log_impl(&dword_213C25000, v73, (os_log_type_t)v85, "PFL result (gradients) stored at %s", v71, 0xCu);
      v62 = v72;
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v62, -1, -1);
      MEMORY[0x2199C0A30](v61, -1, -1);

    }
    else
    {
      v76(v54, v88);

    }
    v46 = v87;
    v37((char *)v52, v88);
    sub_213C3B064(v74, v44);
    v47 = (unint64_t)v82;
    v45 = v75;
  }
  strcpy((char *)v92, "metrics.json");
  BYTE5(v92[1]) = 0;
  HIWORD(v92[1]) = -5120;
  v48(v47, v45, v46);
  v63 = v46;
  v64 = (uint64_t)v79;
  sub_213C85E0C();
  ((void (*)(unint64_t, uint64_t))v84)(v47, v63);
  swift_bridgeObjectRelease();
  sub_213C3D160(v43, v64);
  if (!v41)
  {
    v68 = v64;
    v69 = v88;
    v37((char *)v68, v88);
    v65 = v40;
    v66 = v69;
    return ((uint64_t (*)(char *, uint64_t))v37)(v65, v66);
  }
  sub_213C3D4B4(v41, v64, "Failed to store PFL metrics at %s, error: %@");
  swift_willThrow();
  v37((char *)v64, v88);
LABEL_17:
  v65 = v40;
  v66 = v88;
  return ((uint64_t (*)(char *, uint64_t))v37)(v65, v66);
}

id sub_213C3D074()
{
  id v0;
  void *v1;
  unsigned int v2;
  id v4;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_213C85DAC();
  v5[0] = 0;
  v2 = objc_msgSend(v0, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v1, 1, 0, v5);

  if (v2)
    return v5[0];
  v4 = v5[0];
  sub_213C85D34();

  return (id)swift_willThrow();
}

void sub_213C3D160(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  os_log_t v22;
  uint8_t *v23;
  void *v24;
  uint8_t *v25;
  uint8_t *v26;
  void *v27;
  os_log_t v28;
  uint64_t v29;
  id v30[5];

  v30[4] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_213C85E18();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)objc_opt_self();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v9 = (void *)sub_213C860B8();
  swift_bridgeObjectRelease();
  v30[0] = 0;
  v10 = objc_msgSend(v8, sel_dataWithJSONObject_options_error_, v9, 1, v30);

  v11 = v30[0];
  if (v10)
  {
    v12 = sub_213C85E54();
    v14 = v13;

    sub_213C85E60();
    if (v2)
    {
      sub_213C3B078(v12, v14);
    }
    else
    {
      if (qword_254D2D960 != -1)
        swift_once();
      v16 = sub_213C86094();
      __swift_project_value_buffer(v16, (uint64_t)qword_254D2FF28);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
      v17 = sub_213C8607C();
      v18 = sub_213C863F4();
      if (os_log_type_enabled(v17, v18))
      {
        v28 = v17;
        v19 = (uint8_t *)swift_slowAlloc();
        v27 = (void *)swift_slowAlloc();
        v30[0] = v27;
        v26 = v19;
        *(_DWORD *)v19 = 136315138;
        v25 = v19 + 4;
        v20 = sub_213C85DD0();
        v29 = sub_213C42558(v20, v21, (uint64_t *)v30);
        sub_213C86490();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        v22 = v28;
        v23 = v26;
        _os_log_impl(&dword_213C25000, v28, v18, "PFL metrics stored at %s", v26, 0xCu);
        v24 = v27;
        swift_arrayDestroy();
        MEMORY[0x2199C0A30](v24, -1, -1);
        MEMORY[0x2199C0A30](v23, -1, -1);
        sub_213C3B078(v12, v14);

      }
      else
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        sub_213C3B078(v12, v14);

      }
    }
  }
  else
  {
    v15 = v11;
    sub_213C85D34();

    swift_willThrow();
  }
}

void sub_213C3D4B4(void *a1, uint64_t a2, const char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_213C85E18();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254D2D960 != -1)
    swift_once();
  v10 = sub_213C86094();
  __swift_project_value_buffer(v10, (uint64_t)qword_254D2FF28);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v11 = a1;
  v12 = a1;
  v13 = sub_213C8607C();
  v14 = sub_213C86400();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v23 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v27 = v25;
    *(_DWORD *)v15 = 136315394;
    v24 = a3;
    v16 = sub_213C85DD0();
    v26 = sub_213C42558(v16, v17, &v27);
    sub_213C86490();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_WORD *)(v15 + 12) = 2112;
    v18 = a1;
    v19 = _swift_stdlib_bridgeErrorToNSError();
    v26 = v19;
    sub_213C86490();
    v20 = v23;
    *v23 = v19;

    _os_log_impl(&dword_213C25000, v13, v14, v24, (uint8_t *)v15, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v20, -1, -1);
    v21 = v25;
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v21, -1, -1);
    MEMORY[0x2199C0A30](v15, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

  }
}

uint64_t PFLTaskResult.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_213C3B064(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PFLTaskResult.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_213C3B064(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

__n128 PFLPlugin.__allocating_init(plugin:useCase:consent:taskSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  __n128 result;
  __int128 v15;

  v12 = swift_allocObject();
  v13 = *a5;
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  *(_QWORD *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  *(_QWORD *)(v12 + 48) = v13;
  result = *(__n128 *)a6;
  v15 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)a6;
  *(_OWORD *)(v12 + 72) = v15;
  return result;
}

uint64_t PFLPlugin.init(plugin:useCase:consent:taskSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, _OWORD *a6)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v7 = a6[1];
  *(_OWORD *)(v6 + 56) = *a6;
  v8 = *a5;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = v8;
  *(_OWORD *)(v6 + 72) = v7;
  return v6;
}

uint64_t sub_213C3D854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[78] = v2;
  v3[77] = a2;
  v3[76] = a1;
  v3[79] = type metadata accessor for PFLTaskPreferences(0);
  v3[80] = swift_task_alloc();
  v3[81] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213C3D8C8()
{
  uint64_t *v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (uint64_t *)v0[81];
  v2 = (_QWORD *)v0[78];
  v3 = v2[7];
  v4 = v2[8];
  v5 = v2[9];
  v6 = v2[10];
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  sub_213C3B778(v3, v4);
  sub_213C86058();
  static PFLTaskPreferences.loadTaskPreferences(preferredTaskSource:from:)(&v11, v7, v1);
  swift_bridgeObjectRelease();
  sub_213C3B744(v3, v4);
  v11 = 0;
  v12 = 0xE000000000000000;
  sub_213C8652C();
  swift_bridgeObjectRelease();
  v0[82] = v2[2];
  v0[83] = v2[3];
  swift_bridgeObjectRetain();
  v0[84] = sub_213C41918();
  v0[85] = v8;
  v0[86] = v2[4];
  v0[87] = v2[5];
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[88] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = sub_213C3D9F4;
  return sub_213C412E8((uint64_t)v9, v0[81], v0[78], v0[77]);
}

uint64_t sub_213C3D9F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  char *v5;

  v2 = *v1;
  *(_QWORD *)(v2 + 712) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v5 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 728) = v4;
    *v4 = v2;
    v4[1] = sub_213C3DE68;
    __asm { BR              X8 }
  }
  return swift_task_switch();
}

void sub_213C3DADC()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;

  v2 = (char *)&dword_254D2FB98 + dword_254D2FB98;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 720) = v1;
  *v1 = v0;
  v1[1] = sub_213C3DB74;
  __asm { BR              X8; sub_213C7243C }
}

uint64_t sub_213C3DB74()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C3DBC8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_254D2D960 != -1)
    swift_once();
  v1 = *(void **)(v0 + 712);
  v2 = sub_213C86094();
  __swift_project_value_buffer(v2, (uint64_t)qword_254D2FF28);
  v3 = v1;
  v4 = v1;
  v5 = sub_213C8607C();
  v6 = sub_213C86400();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 712);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 568) = v12;
    sub_213C86490();
    *v10 = v12;

    _os_log_impl(&dword_213C25000, v5, v6, "PreflightCheck failed with error %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v10, -1, -1);
    MEMORY[0x2199C0A30](v9, -1, -1);
  }
  else
  {

  }
  v13 = *(void **)(v0 + 712);
  v14 = v13;
  v15 = sub_213C449D4();

  v16 = *(void **)(v0 + 712);
  if (v15)
  {
    type metadata accessor for PFLPluginError();
    sub_213C3B630(&qword_254D2DEF8, v17, (uint64_t (*)(uint64_t))type metadata accessor for PFLPluginError, (uint64_t)&protocol conformance descriptor for PFLPluginError);
    v18 = objc_allocWithZone((Class)sub_213C8604C());
    v19 = sub_213C86034();
  }
  else
  {
    v20 = objc_allocWithZone((Class)sub_213C8604C());
    v19 = sub_213C86040();
  }
  v21 = v19;

  sub_213C44AB0(*(_QWORD *)(v0 + 648));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v21);
}

uint64_t sub_213C3DE68()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C3DEBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 648);
  v2 = *(uint64_t **)(v0 + 640);
  v3 = *(_QWORD **)(v0 + 624);
  v4 = *(_QWORD *)(v0 + 616);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v3[2];
  v6 = v3[3];
  v7 = v3[4];
  v8 = v3[5];
  sub_213C4518C(v1, (uint64_t)v2, type metadata accessor for PFLTaskPreferences);
  LODWORD(v1) = (v3[6] & 0x10) == 0;
  sub_213C44B0C(v4, v0 + 224);
  v9 = swift_allocObject();
  sub_213C3AA48((__int128 *)(v0 + 224), v9 + 16);
  type metadata accessor for PFLTaskDiscovery();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 736) = PFLTaskDiscovery.init(for:useCase:taskPreferences:allowsCellularAccess:customTargeting:)(v5, v6, v7, v8, v2, v1, (uint64_t)sub_213C44B74, v9);
  *(_QWORD *)(v0 + 744) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_policyDownloadTimeSeconds;
  *(_QWORD *)(v0 + 752) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskDownloadTimeSeconds;
  *(_QWORD *)(v0 + 760) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_numDeliveries;
  swift_retain();
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 768) = v10;
  *v10 = v0;
  v10[1] = sub_213C3E040;
  return sub_213C6B2E0();
}

uint64_t sub_213C3E040(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 776) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C3E09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t inited;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54[16];
  unint64_t v55;
  char v56;

  v1 = *(_QWORD *)(v0 + 776);
  if (v1)
  {
    *(_QWORD *)(v0 + 792) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v0 + 784) = v1;
    if (qword_254D2D960 != -1)
      swift_once();
    v2 = sub_213C86094();
    *(_QWORD *)(v0 + 800) = __swift_project_value_buffer(v2, (uint64_t)qword_254D2FF28);
    swift_retain();
    v3 = sub_213C8607C();
    v4 = sub_213C863F4();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = swift_slowAlloc();
      v6 = swift_slowAlloc();
      v54[0] = v6;
      *(_DWORD *)v5 = 136315138;
      swift_beginAccess();
      v7 = *(_QWORD *)(v1 + 16);
      v8 = *(_QWORD *)(v1 + 24);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v5 + 4) = sub_213C42558(v7, v8, v54);
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_213C25000, v3, v4, "Start running plugin for recipe %s", (uint8_t *)v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v6, -1, -1);
      MEMORY[0x2199C0A30](v5, -1, -1);
    }
    else
    {
      swift_release();
    }

    v26 = *(_QWORD **)(v0 + 624);
    v27 = *(_QWORD **)(v0 + 616);
    *(_QWORD *)(v0 + 808) = v26[2];
    *(_QWORD *)(v0 + 816) = v26[3];
    swift_beginAccess();
    *(_QWORD *)(v0 + 824) = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v0 + 832) = *(_QWORD *)(v1 + 24);
    *(_QWORD *)(v0 + 840) = v26[4];
    *(_QWORD *)(v0 + 848) = v26[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = v27[3];
    v29 = v27[4];
    __swift_project_boxed_opaque_existential_0Tm(v27, v28);
    v30 = v26[4];
    v31 = v26[5];
    *(_QWORD *)(v0 + 856) = v31;
    v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(**(int **)(v29 + 24)
                                                                                      + *(_QWORD *)(v29 + 24));
    swift_bridgeObjectRetain();
    v32 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 864) = v32;
    *v32 = v0;
    v32[1] = sub_213C3E830;
    return v51(v1, v30, v31, *(_QWORD *)(v0 + 608), v28, v29);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 712);
    swift_release();
    v54[0] = MEMORY[0x24BEE4AF8];
    sub_213C43A54();
    v10 = v54[0];
    if (*(_QWORD *)(v54[0] + 16))
    {
      v50 = v9;
      v49 = v0 + 304;
      v11 = *(void **)(v54[0] + 32);
      *(_QWORD *)(v0 + 968) = v11;
      v12 = *(_QWORD *)(v10 + 40);
      *(_QWORD *)(v0 + 976) = v12;
      v13 = v11;
      swift_retain();
      swift_release();
      v14 = v11;
      v15 = (void *)sub_213C85D28();

      v16 = objc_msgSend(v15, sel_code);
      v17 = qword_254D2D960;
      swift_retain();
      if (v17 != -1)
        swift_once();
      v18 = sub_213C86094();
      __swift_project_value_buffer(v18, (uint64_t)qword_254D2FF28);
      swift_retain();
      v19 = sub_213C8607C();
      v20 = sub_213C863E8();
      if (os_log_type_enabled(v19, v20))
      {
        v48 = v16;
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        v54[0] = v22;
        *(_DWORD *)v21 = 136315138;
        swift_beginAccess();
        v24 = *(_QWORD *)(v12 + 16);
        v23 = *(_QWORD *)(v12 + 24);
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 592) = sub_213C42558(v24, v23, v54);
        sub_213C86490();
        swift_bridgeObjectRelease();
        swift_release();
        _os_log_impl(&dword_213C25000, v19, v20, "Try to donate error to Dedisco for recipe %s", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C0A30](v22, -1, -1);
        v25 = v21;
        v16 = v48;
        MEMORY[0x2199C0A30](v25, -1, -1);
      }
      else
      {
        swift_release();
      }

      v37 = *(_QWORD **)(v0 + 624);
      v54[0] = 0;
      v54[1] = 0xE000000000000000;
      sub_213C8652C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 984) = v37[3];
      swift_beginAccess();
      *(_QWORD *)(v0 + 992) = *(_QWORD *)(v12 + 24);
      *(_QWORD *)(v0 + 1000) = v37[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE30);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_213C885B0;
      *(_QWORD *)(inited + 32) = 0x6F635F726F727265;
      *(_QWORD *)(inited + 40) = 0xEA00000000006564;
      *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
      *(_QWORD *)(inited + 48) = v16;
      v39 = sub_213C3BB4C(inited);
      v40 = sub_213C49C70(v39);
      swift_bridgeObjectRelease();
      v41 = v37[2];
      v42 = v37[3];
      v43 = type metadata accessor for DediscoRecorderImpl();
      v44 = swift_allocObject();
      *(_QWORD *)(v0 + 328) = v43;
      *(_QWORD *)(v0 + 336) = &off_24D0D9F50;
      *(_QWORD *)(v0 + 304) = v44;
      swift_bridgeObjectRetain();
      v45 = v50;
      sub_213C84AAC(0, 0xF000000000000000, v40, v12, v41, v42, v49, 0);
      *(_QWORD *)(v0 + 1008) = v50;
      __swift_destroy_boxed_opaque_existential_0(v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v50)
      {
        v52 = (char *)&dword_254D2FB98 + dword_254D2FB98;
        v46 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 1024) = v46;
        *v46 = v0;
        v46[1] = sub_213C40C0C;
        v56 = 1;
        v55 = v45;
        __asm { BR              X8; sub_213C7243C }
      }
      v53 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
      v47 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1016) = v47;
      *v47 = v0;
      v47[1] = sub_213C40A88;
      v54[14] = 0;
      v54[15] = 0;
      v56 = 1;
      v55 = 0xE000000000000000;
      __asm { BR              X8; sub_213C71FF0 }
    }
    v34 = *(_QWORD *)(v0 + 648);
    swift_release();
    v35 = objc_allocWithZone((Class)sub_213C8604C());
    v36 = sub_213C86040();
    swift_release();
    sub_213C44AB0(v34);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v36);
  }
}

uint64_t sub_213C3E830(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  char *v6;

  v3 = (_QWORD *)*v2;
  v3[109] = a1;
  v3[110] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    v6 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
    v5 = (_QWORD *)swift_task_alloc();
    v3[111] = v5;
    *v5 = v3;
    v5[1] = sub_213C3E92C;
    __asm { BR              X8 }
  }
  return swift_task_switch();
}

uint64_t sub_213C3E92C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_213C3E980()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;

  v1 = v0[109];
  v22 = v0[110];
  v2 = v0[98];
  v21 = v0[94];
  v3 = v0[93];
  v4 = v0[92];
  v5 = (_QWORD *)v0[78];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[65] = 0;
  v0[66] = 0xE000000000000000;
  sub_213C8652C();
  swift_bridgeObjectRelease();
  v0[112] = v5[3];
  v0[113] = *(_QWORD *)(v2 + 24);
  v0[114] = v5[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213C883D0;
  strcpy((char *)(inited + 32), "PolicyDownload");
  *(_BYTE *)(inited + 47) = -18;
  v7 = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 48) = *(_QWORD *)(v4 + v3);
  *(_QWORD *)(inited + 72) = v7;
  strcpy((char *)(inited + 80), "TaskDownload");
  *(_BYTE *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  v8 = *(_QWORD *)(v4 + v21);
  *(_QWORD *)(inited + 120) = v7;
  *(_QWORD *)(inited + 96) = v8;
  v9 = sub_213C3BB4C(inited);
  swift_beginAccess();
  v10 = swift_bridgeObjectRetain();
  v11 = sub_213C36AAC(v10, v9);
  swift_beginAccess();
  v12 = *(_QWORD *)(v1 + 24);
  v13 = *(_QWORD *)(v1 + 32);
  sub_213C44A9C(v12, v13);
  v14 = sub_213C49C70(v11);
  swift_bridgeObjectRelease();
  v16 = v5[2];
  v15 = v5[3];
  v17 = type metadata accessor for DediscoRecorderImpl();
  v18 = swift_allocObject();
  v0[36] = v17;
  v0[37] = &off_24D0D9F50;
  v0[33] = v18;
  swift_bridgeObjectRetain();
  sub_213C84AAC(v12, v13, v14, v2, v16, v15, (uint64_t)(v0 + 33), 1);
  v0[115] = v22;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 33));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_213C3B064(v12, v13);
  if (v22)
  {
    v23 = (char *)&dword_254D2FB98 + dword_254D2FB98;
    v19 = (_QWORD *)swift_task_alloc();
    v0[117] = v19;
    *v19 = v0;
    v19[1] = sub_213C3EFB8;
    __asm { BR              X8; sub_213C7243C }
  }
  v24 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
  v20 = (_QWORD *)swift_task_alloc();
  v0[116] = v20;
  *v20 = v0;
  v20[1] = sub_213C3ECE4;
  __asm { BR              X8; sub_213C71FF0 }
}

uint64_t sub_213C3ECE4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C3ED38()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v18;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  v1 = sub_213C8607C();
  v2 = sub_213C863F4();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 784);
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v18 = v5;
    *(_DWORD *)v4 = 136315138;
    v7 = *(_QWORD *)(v3 + 16);
    v6 = *(_QWORD *)(v3 + 24);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 600) = sub_213C42558(v7, v6, &v18);
    sub_213C86490();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_213C25000, v1, v2, "Successfully donate to Dedisco for recipe %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v5, -1, -1);
    MEMORY[0x2199C0A30](v4, -1, -1);

  }
  else
  {

    swift_release();
  }
  v8 = *(_QWORD *)(v0 + 648);
  v9 = *(_QWORD *)(v0 + 632);
  if (*(_BYTE *)(v8 + *(int *)(v9 + 24)) == 1)
  {
    v10 = v8 + *(int *)(v9 + 20);
    if (*(_BYTE *)(v10 + *(int *)(type metadata accessor for PFLDecodableTaskParameters(0) + 40)) == 1)
    {
      v11 = *(void **)(v0 + 920);
      v12 = *(_QWORD *)(v0 + 784);
      v14 = *(_QWORD *)(v12 + 16);
      v13 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      sub_213C3C8BC(v14, v13);
      if (v11)

      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(v0 + 648);
    }
  }
  v15 = objc_allocWithZone((Class)sub_213C8604C());
  v16 = sub_213C86040();
  swift_release();
  swift_release_n();
  swift_release();
  sub_213C44AB0(v8);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v16);
}

uint64_t sub_213C3EFB8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_213C3F00C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char v10;
  id v11;
  char v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint64_t v49;
  uint8_t *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char *v60;
  char *v61;
  uint64_t v62[15];
  unint64_t v63;
  char v64;

  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 920);
  *(_QWORD *)(v0 + 1032) = v1;
  v2 = *(_QWORD *)(v0 + 784);
  v3 = *(_QWORD *)(v0 + 624);
  v4 = *(_QWORD **)(v0 + 616);
  v5 = v4[3];
  v6 = v4[4];
  __swift_project_boxed_opaque_existential_0Tm(v4, v5);
  v7 = *(_QWORD *)(v3 + 32);
  v8 = *(_QWORD *)(v3 + 40);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 40);
  swift_bridgeObjectRetain();
  v10 = v9(v2, v7, v8, v5, v6);
  *(_BYTE *)(v0 + 1137) = v10 & 1;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 584) = v1;
  v11 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DF00);
  if (swift_dynamicCast())
  {
    v12 = *(_BYTE *)(v0 + 1136);
    swift_retain();
    v13 = sub_213C8607C();
    v14 = sub_213C86400();
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(_QWORD *)(v0 + 784);
    if (v15)
    {
      v59 = v12;
      v17 = swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v62[0] = v19;
      *(_DWORD *)v17 = 136315394;
      v21 = *(_QWORD *)(v16 + 16);
      v20 = *(_QWORD *)(v16 + 24);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 544) = sub_213C42558(v21, v20, v62);
      sub_213C86490();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v17 + 12) = 2112;
      sub_213C3512C();
      swift_allocError();
      *v22 = v59;
      v23 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 552) = v23;
      sub_213C86490();
      *v18 = v23;
      _os_log_impl(&dword_213C25000, v13, v14, "Failed to donate to Dedisco for recipe %s with error %@", (uint8_t *)v17, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v18, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v19, -1, -1);
      MEMORY[0x2199C0A30](v17, -1, -1);

    }
    else
    {

      swift_release();
    }
    v35 = *(_QWORD **)(v0 + 792);
  }
  else
  {
    swift_retain();
    v24 = v1;
    swift_retain();
    v25 = v1;
    v26 = sub_213C8607C();
    v27 = sub_213C86400();
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(_QWORD *)(v0 + 784);
    if (v28)
    {
      v30 = swift_slowAlloc();
      v56 = (_QWORD *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      v62[0] = v57;
      *(_DWORD *)v30 = 136315394;
      v32 = *(_QWORD *)(v29 + 16);
      v31 = *(_QWORD *)(v29 + 24);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 560) = sub_213C42558(v32, v31, v62);
      sub_213C86490();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v30 + 12) = 2112;
      v33 = v1;
      v34 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 536) = v34;
      sub_213C86490();
      *v56 = v34;

      _os_log_impl(&dword_213C25000, v26, v27, "Failed to execute plugin for recipe %s with error %@", (uint8_t *)v30, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v56, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v57, -1, -1);
      MEMORY[0x2199C0A30](v30, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    swift_retain();
    if ((v10 & 1) == 0)
    {
      v46 = sub_213C8607C();
      v47 = sub_213C863E8();
      v48 = os_log_type_enabled(v46, v47);
      v49 = *(_QWORD *)(v0 + 784);
      if (v48)
      {
        v50 = (uint8_t *)swift_slowAlloc();
        v58 = swift_slowAlloc();
        v62[0] = v58;
        *(_DWORD *)v50 = 136315138;
        v52 = *(_QWORD *)(v49 + 16);
        v51 = *(_QWORD *)(v49 + 24);
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 576) = sub_213C42558(v52, v51, v62);
        sub_213C86490();
        swift_bridgeObjectRelease();
        swift_release();
        _os_log_impl(&dword_213C25000, v46, v47, "Try to donate error to Dedisco for recipe %s", v50, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C0A30](v58, -1, -1);
        MEMORY[0x2199C0A30](v50, -1, -1);

      }
      else
      {

        swift_release();
      }
      v53 = *(_QWORD *)(v0 + 784);
      v54 = *(_QWORD *)(v0 + 624);
      *(_QWORD *)(v0 + 504) = 0;
      *(_QWORD *)(v0 + 512) = 0xE000000000000000;
      sub_213C8652C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 1040) = *(_QWORD *)(v54 + 24);
      *(_QWORD *)(v0 + 1048) = *(_QWORD *)(v53 + 24);
      *(_QWORD *)(v0 + 1056) = *(_QWORD *)(v54 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_213C417D0((uint64_t)v1, v53, v54);
      *(_QWORD *)(v0 + 1064) = 0;
      v61 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
      v55 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1080) = v55;
      *v55 = v0;
      v55[1] = sub_213C40F44;
      v62[13] = 0;
      v62[14] = 0;
      v64 = 1;
      v63 = 0xE000000000000000;
      __asm { BR              X8; sub_213C71FF0 }
    }
    v36 = v1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v35 = *(_QWORD **)(v0 + 792);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v35 = sub_213C41F20(0, v35[2] + 1, 1, v35);
    v39 = v35[2];
    v38 = v35[3];
    if (v39 >= v38 >> 1)
      v35 = sub_213C41F20((_QWORD *)(v38 > 1), v39 + 1, 1, v35);
    v40 = *(_QWORD *)(v0 + 784);
    v35[2] = v39 + 1;
    v41 = &v35[2 * v39];
    v41[4] = v1;
    v41[5] = v40;
  }
  *(_QWORD *)(v0 + 1096) = v35;
  *(_QWORD *)(v0 + 1088) = 0;
  v42 = *(_QWORD *)(v0 + 784);
  v43 = *(_QWORD *)(v0 + 624);
  *(_QWORD *)(v0 + 488) = 0;
  *(_QWORD *)(v0 + 496) = 0xE000000000000000;
  sub_213C8652C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 1104) = *(_QWORD *)(v43 + 24);
  *(_QWORD *)(v0 + 1112) = *(_QWORD *)(v42 + 24);
  *(_QWORD *)(v0 + 1120) = *(_QWORD *)(v43 + 40);
  v60 = (char *)&dword_254D2FB98 + dword_254D2FB98;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1128) = v44;
  *v44 = v0;
  v44[1] = sub_213C410D0;
  v45 = *(_QWORD *)(v0 + 1032);
  v64 = 1;
  v63 = v45;
  __asm { BR              X8 }
}

void sub_213C3F8E4()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;

  swift_bridgeObjectRelease();
  v2 = (char *)&dword_254D2FB98 + dword_254D2FB98;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 944) = v1;
  *v1 = v0;
  v1[1] = sub_213C3F984;
  __asm { BR              X8; sub_213C7243C }
}

uint64_t sub_213C3F984()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_213C3F9D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char v10;
  id v11;
  char v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint64_t v49;
  uint8_t *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char *v60;
  char *v61;
  uint64_t v62[15];
  unint64_t v63;
  char v64;

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 880);
  *(_QWORD *)(v0 + 1032) = v1;
  v2 = *(_QWORD *)(v0 + 784);
  v3 = *(_QWORD *)(v0 + 624);
  v4 = *(_QWORD **)(v0 + 616);
  v5 = v4[3];
  v6 = v4[4];
  __swift_project_boxed_opaque_existential_0Tm(v4, v5);
  v7 = *(_QWORD *)(v3 + 32);
  v8 = *(_QWORD *)(v3 + 40);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 40);
  swift_bridgeObjectRetain();
  v10 = v9(v2, v7, v8, v5, v6);
  *(_BYTE *)(v0 + 1137) = v10 & 1;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 584) = v1;
  v11 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DF00);
  if (swift_dynamicCast())
  {
    v12 = *(_BYTE *)(v0 + 1136);
    swift_retain();
    v13 = sub_213C8607C();
    v14 = sub_213C86400();
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(_QWORD *)(v0 + 784);
    if (v15)
    {
      v59 = v12;
      v17 = swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v62[0] = v19;
      *(_DWORD *)v17 = 136315394;
      v21 = *(_QWORD *)(v16 + 16);
      v20 = *(_QWORD *)(v16 + 24);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 544) = sub_213C42558(v21, v20, v62);
      sub_213C86490();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v17 + 12) = 2112;
      sub_213C3512C();
      swift_allocError();
      *v22 = v59;
      v23 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 552) = v23;
      sub_213C86490();
      *v18 = v23;
      _os_log_impl(&dword_213C25000, v13, v14, "Failed to donate to Dedisco for recipe %s with error %@", (uint8_t *)v17, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v18, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v19, -1, -1);
      MEMORY[0x2199C0A30](v17, -1, -1);

    }
    else
    {

      swift_release();
    }
    v35 = *(_QWORD **)(v0 + 792);
  }
  else
  {
    swift_retain();
    v24 = v1;
    swift_retain();
    v25 = v1;
    v26 = sub_213C8607C();
    v27 = sub_213C86400();
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(_QWORD *)(v0 + 784);
    if (v28)
    {
      v30 = swift_slowAlloc();
      v56 = (_QWORD *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      v62[0] = v57;
      *(_DWORD *)v30 = 136315394;
      v32 = *(_QWORD *)(v29 + 16);
      v31 = *(_QWORD *)(v29 + 24);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 560) = sub_213C42558(v32, v31, v62);
      sub_213C86490();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v30 + 12) = 2112;
      v33 = v1;
      v34 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 536) = v34;
      sub_213C86490();
      *v56 = v34;

      _os_log_impl(&dword_213C25000, v26, v27, "Failed to execute plugin for recipe %s with error %@", (uint8_t *)v30, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v56, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v57, -1, -1);
      MEMORY[0x2199C0A30](v30, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    swift_retain();
    if ((v10 & 1) == 0)
    {
      v46 = sub_213C8607C();
      v47 = sub_213C863E8();
      v48 = os_log_type_enabled(v46, v47);
      v49 = *(_QWORD *)(v0 + 784);
      if (v48)
      {
        v50 = (uint8_t *)swift_slowAlloc();
        v58 = swift_slowAlloc();
        v62[0] = v58;
        *(_DWORD *)v50 = 136315138;
        v52 = *(_QWORD *)(v49 + 16);
        v51 = *(_QWORD *)(v49 + 24);
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 576) = sub_213C42558(v52, v51, v62);
        sub_213C86490();
        swift_bridgeObjectRelease();
        swift_release();
        _os_log_impl(&dword_213C25000, v46, v47, "Try to donate error to Dedisco for recipe %s", v50, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C0A30](v58, -1, -1);
        MEMORY[0x2199C0A30](v50, -1, -1);

      }
      else
      {

        swift_release();
      }
      v53 = *(_QWORD *)(v0 + 784);
      v54 = *(_QWORD *)(v0 + 624);
      *(_QWORD *)(v0 + 504) = 0;
      *(_QWORD *)(v0 + 512) = 0xE000000000000000;
      sub_213C8652C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 1040) = *(_QWORD *)(v54 + 24);
      *(_QWORD *)(v0 + 1048) = *(_QWORD *)(v53 + 24);
      *(_QWORD *)(v0 + 1056) = *(_QWORD *)(v54 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_213C417D0((uint64_t)v1, v53, v54);
      *(_QWORD *)(v0 + 1064) = 0;
      v61 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
      v55 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1080) = v55;
      *v55 = v0;
      v55[1] = sub_213C40F44;
      v62[13] = 0;
      v62[14] = 0;
      v64 = 1;
      v63 = 0xE000000000000000;
      __asm { BR              X8; sub_213C71FF0 }
    }
    v36 = v1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v35 = *(_QWORD **)(v0 + 792);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v35 = sub_213C41F20(0, v35[2] + 1, 1, v35);
    v39 = v35[2];
    v38 = v35[3];
    if (v39 >= v38 >> 1)
      v35 = sub_213C41F20((_QWORD *)(v38 > 1), v39 + 1, 1, v35);
    v40 = *(_QWORD *)(v0 + 784);
    v35[2] = v39 + 1;
    v41 = &v35[2 * v39];
    v41[4] = v1;
    v41[5] = v40;
  }
  *(_QWORD *)(v0 + 1096) = v35;
  *(_QWORD *)(v0 + 1088) = 0;
  v42 = *(_QWORD *)(v0 + 784);
  v43 = *(_QWORD *)(v0 + 624);
  *(_QWORD *)(v0 + 488) = 0;
  *(_QWORD *)(v0 + 496) = 0xE000000000000000;
  sub_213C8652C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 1104) = *(_QWORD *)(v43 + 24);
  *(_QWORD *)(v0 + 1112) = *(_QWORD *)(v42 + 24);
  *(_QWORD *)(v0 + 1120) = *(_QWORD *)(v43 + 40);
  v60 = (char *)&dword_254D2FB98 + dword_254D2FB98;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1128) = v44;
  *v44 = v0;
  v44[1] = sub_213C410D0;
  v45 = *(_QWORD *)(v0 + 1032);
  v64 = 1;
  v63 = v45;
  __asm { BR              X8 }
}

uint64_t sub_213C402A4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 960) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C40300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t inited;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54[16];
  unint64_t v55;
  char v56;

  v1 = *(_QWORD *)(v0 + 960);
  v2 = *(_QWORD *)(v0 + 1096);
  if (v1)
  {
    *(_QWORD *)(v0 + 792) = v2;
    *(_QWORD *)(v0 + 784) = v1;
    if (qword_254D2D960 != -1)
      swift_once();
    v3 = sub_213C86094();
    *(_QWORD *)(v0 + 800) = __swift_project_value_buffer(v3, (uint64_t)qword_254D2FF28);
    swift_retain();
    v4 = sub_213C8607C();
    v5 = sub_213C863F4();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = swift_slowAlloc();
      v7 = swift_slowAlloc();
      v54[0] = v7;
      *(_DWORD *)v6 = 136315138;
      swift_beginAccess();
      v8 = *(_QWORD *)(v1 + 16);
      v9 = *(_QWORD *)(v1 + 24);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v6 + 4) = sub_213C42558(v8, v9, v54);
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_213C25000, v4, v5, "Start running plugin for recipe %s", (uint8_t *)v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v7, -1, -1);
      MEMORY[0x2199C0A30](v6, -1, -1);
    }
    else
    {
      swift_release();
    }

    v26 = *(_QWORD **)(v0 + 624);
    v27 = *(_QWORD **)(v0 + 616);
    *(_QWORD *)(v0 + 808) = v26[2];
    *(_QWORD *)(v0 + 816) = v26[3];
    swift_beginAccess();
    *(_QWORD *)(v0 + 824) = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v0 + 832) = *(_QWORD *)(v1 + 24);
    *(_QWORD *)(v0 + 840) = v26[4];
    *(_QWORD *)(v0 + 848) = v26[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = v27[3];
    v29 = v27[4];
    __swift_project_boxed_opaque_existential_0Tm(v27, v28);
    v30 = v26[4];
    v31 = v26[5];
    *(_QWORD *)(v0 + 856) = v31;
    v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(**(int **)(v29 + 24)
                                                                                      + *(_QWORD *)(v29 + 24));
    swift_bridgeObjectRetain();
    v32 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 864) = v32;
    *v32 = v0;
    v32[1] = sub_213C3E830;
    return v51(v1, v30, v31, *(_QWORD *)(v0 + 608), v28, v29);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 1088);
    swift_release();
    v54[0] = v2;
    sub_213C43A54();
    if (*(_QWORD *)(v2 + 16))
    {
      v50 = v10;
      v49 = v0 + 304;
      v11 = *(void **)(v54[0] + 32);
      *(_QWORD *)(v0 + 968) = v11;
      v12 = *(_QWORD *)(v2 + 40);
      *(_QWORD *)(v0 + 976) = v12;
      v13 = v11;
      swift_retain();
      swift_release();
      v14 = v11;
      v15 = (void *)sub_213C85D28();

      v16 = objc_msgSend(v15, sel_code);
      v17 = qword_254D2D960;
      swift_retain();
      if (v17 != -1)
        swift_once();
      v18 = sub_213C86094();
      __swift_project_value_buffer(v18, (uint64_t)qword_254D2FF28);
      swift_retain();
      v19 = sub_213C8607C();
      v20 = sub_213C863E8();
      if (os_log_type_enabled(v19, v20))
      {
        v48 = v16;
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        v54[0] = v22;
        *(_DWORD *)v21 = 136315138;
        swift_beginAccess();
        v24 = *(_QWORD *)(v12 + 16);
        v23 = *(_QWORD *)(v12 + 24);
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 592) = sub_213C42558(v24, v23, v54);
        sub_213C86490();
        swift_bridgeObjectRelease();
        swift_release();
        _os_log_impl(&dword_213C25000, v19, v20, "Try to donate error to Dedisco for recipe %s", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C0A30](v22, -1, -1);
        v25 = v21;
        v16 = v48;
        MEMORY[0x2199C0A30](v25, -1, -1);
      }
      else
      {
        swift_release();
      }

      v37 = *(_QWORD **)(v0 + 624);
      v54[0] = 0;
      v54[1] = 0xE000000000000000;
      sub_213C8652C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 984) = v37[3];
      swift_beginAccess();
      *(_QWORD *)(v0 + 992) = *(_QWORD *)(v12 + 24);
      *(_QWORD *)(v0 + 1000) = v37[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE30);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_213C885B0;
      *(_QWORD *)(inited + 32) = 0x6F635F726F727265;
      *(_QWORD *)(inited + 40) = 0xEA00000000006564;
      *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
      *(_QWORD *)(inited + 48) = v16;
      v39 = sub_213C3BB4C(inited);
      v40 = sub_213C49C70(v39);
      swift_bridgeObjectRelease();
      v41 = v37[2];
      v42 = v37[3];
      v43 = type metadata accessor for DediscoRecorderImpl();
      v44 = swift_allocObject();
      *(_QWORD *)(v0 + 328) = v43;
      *(_QWORD *)(v0 + 336) = &off_24D0D9F50;
      *(_QWORD *)(v0 + 304) = v44;
      swift_bridgeObjectRetain();
      v45 = v50;
      sub_213C84AAC(0, 0xF000000000000000, v40, v12, v41, v42, v49, 0);
      *(_QWORD *)(v0 + 1008) = v50;
      __swift_destroy_boxed_opaque_existential_0(v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v50)
      {
        v52 = (char *)&dword_254D2FB98 + dword_254D2FB98;
        v46 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 1024) = v46;
        *v46 = v0;
        v46[1] = sub_213C40C0C;
        v56 = 1;
        v55 = v45;
        __asm { BR              X8; sub_213C7243C }
      }
      v53 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
      v47 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1016) = v47;
      *v47 = v0;
      v47[1] = sub_213C40A88;
      v54[14] = 0;
      v54[15] = 0;
      v56 = 1;
      v55 = 0xE000000000000000;
      __asm { BR              X8; sub_213C71FF0 }
    }
    v34 = *(_QWORD *)(v0 + 648);
    swift_release();
    v35 = objc_allocWithZone((Class)sub_213C8604C());
    v36 = sub_213C86040();
    swift_release();
    sub_213C44AB0(v34);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v36);
  }
}

uint64_t sub_213C40A88()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C40ADC()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;

  v1 = *(void **)(v0 + 968);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = v1;
  v3 = sub_213C449D4();

  v4 = *(void **)(v0 + 968);
  if (v3)
  {
    type metadata accessor for PFLPluginError();
    sub_213C3B630(&qword_254D2DEF8, v5, (uint64_t (*)(uint64_t))type metadata accessor for PFLPluginError, (uint64_t)&protocol conformance descriptor for PFLPluginError);
    v6 = objc_allocWithZone((Class)sub_213C8604C());
    v7 = sub_213C86034();
  }
  else
  {
    v8 = objc_allocWithZone((Class)sub_213C8604C());
    v7 = sub_213C86040();
  }
  v9 = v7;

  swift_release_n();
  swift_release();
  sub_213C44AB0(*(_QWORD *)(v0 + 648));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
}

uint64_t sub_213C40C0C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C40C60()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 1008);
  swift_willThrow();

  v2 = *(void **)(v0 + 968);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v2;
  v4 = sub_213C449D4();

  v5 = *(void **)(v0 + 968);
  if (v4)
  {
    type metadata accessor for PFLPluginError();
    sub_213C3B630(&qword_254D2DEF8, v6, (uint64_t (*)(uint64_t))type metadata accessor for PFLPluginError, (uint64_t)&protocol conformance descriptor for PFLPluginError);
    v7 = objc_allocWithZone((Class)sub_213C8604C());
    v8 = sub_213C86034();
  }
  else
  {
    v9 = objc_allocWithZone((Class)sub_213C8604C());
    v8 = sub_213C86040();
  }
  v10 = v8;

  swift_release_n();
  swift_release();
  sub_213C44AB0(*(_QWORD *)(v0 + 648));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v10);
}

uint64_t sub_213C40DA4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_213C40DF8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;

  v1 = (void *)v0[133];
  swift_willThrow();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[137] = v0[99];
  v0[136] = 0;
  v2 = v0[98];
  v3 = v0[78];
  v0[61] = 0;
  v0[62] = 0xE000000000000000;
  sub_213C8652C();
  swift_bridgeObjectRelease();
  v0[138] = *(_QWORD *)(v3 + 24);
  v0[139] = *(_QWORD *)(v2 + 24);
  v0[140] = *(_QWORD *)(v3 + 40);
  v5 = (char *)&dword_254D2FB98 + dword_254D2FB98;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[141] = v4;
  *v4 = v0;
  v4[1] = sub_213C410D0;
  __asm { BR              X8; sub_213C7243C }
}

uint64_t sub_213C40F44()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_213C40F98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0[133];
  v0[137] = v0[99];
  v0[136] = v1;
  v2 = v0[98];
  v3 = v0[78];
  v0[61] = 0;
  v0[62] = 0xE000000000000000;
  sub_213C8652C();
  swift_bridgeObjectRelease();
  v0[138] = *(_QWORD *)(v3 + 24);
  v0[139] = *(_QWORD *)(v2 + 24);
  v0[140] = *(_QWORD *)(v3 + 40);
  v5 = (char *)&dword_254D2FB98 + dword_254D2FB98;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[141] = v4;
  *v4 = v0;
  v4[1] = sub_213C410D0;
  __asm { BR              X8; sub_213C7243C }
}

uint64_t sub_213C410D0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_213C41150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  if (*(_BYTE *)(v0 + 1137) == 1)
  {
    v1 = *(_QWORD *)(v0 + 760);
    v2 = *(_QWORD *)(v0 + 736);

    v3 = *(_QWORD *)(v2 + v1);
    v4 = __OFSUB__(v3, 1);
    v5 = v3 - 1;
    if (v4)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v0 + 736) + *(_QWORD *)(v0 + 760)) = v5;
      swift_release();
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 952) = v6;
      *v6 = v0;
      v6[1] = sub_213C402A4;
      sub_213C6B2E0();
    }
  }
  else
  {
    v7 = *(void **)(v0 + 1032);
    swift_bridgeObjectRelease();
    v8 = v7;
    v9 = sub_213C449D4();

    v10 = *(void **)(v0 + 1032);
    if (v9)
    {
      type metadata accessor for PFLPluginError();
      sub_213C3B630(&qword_254D2DEF8, v11, (uint64_t (*)(uint64_t))type metadata accessor for PFLPluginError, (uint64_t)&protocol conformance descriptor for PFLPluginError);
      v12 = objc_allocWithZone((Class)sub_213C8604C());
      v13 = sub_213C86034();
    }
    else
    {
      v14 = objc_allocWithZone((Class)sub_213C8604C());
      v13 = sub_213C86040();
    }
    v15 = v13;
    swift_release();

    swift_release();
    swift_release();
    sub_213C44AB0(*(_QWORD *)(v0 + 648));
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(uint64_t))(v0 + 8))(v15);
  }
}

uint64_t sub_213C412E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  v5 = sub_213C85ECC();
  v4[5] = v5;
  v4[6] = *(_QWORD *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

id sub_213C4134C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  id result;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _BYTE *v18;
  void *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _BYTE *v24;
  int v25;
  void *v26;
  _BYTE *v27;
  void *v28;
  unsigned int v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t (*v38)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD **)(v0 + 24);
  v3 = type metadata accessor for PFLTaskPreferences(0);
  v4 = v1 + *(int *)(v3 + 20);
  v5 = *(double *)(v4 + 48);
  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_213C4BEF0(v6, v7, v8, v9, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 40);
  type metadata accessor for PFLDecodableTaskParameters(0);
  sub_213C85EB4();
  sub_213C3B630((unint64_t *)&qword_254D2DE08, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  LOBYTE(v7) = sub_213C86100();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  if ((v7 & 1) != 0)
  {
    sub_213C3A984();
    swift_allocError();
    *v13 = 49;
LABEL_3:
    swift_willThrow();
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v15 = *(_QWORD *)(v0 + 24);
  v16 = *(_QWORD *)(v15 + 48);
  if ((v16 & 1) != 0)
  {
    sub_213C3A984();
    v17 = (void *)swift_allocError();
    *v18 = 1;
    result = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
    if (!result)
    {
      __break(1u);
      goto LABEL_22;
    }
    v19 = result;
    v20 = objc_msgSend(result, sel_isDiagnosticSubmissionAllowed);

    if (!v20)
      goto LABEL_3;

    v16 = *(_QWORD *)(v15 + 48);
  }
  if ((v16 & 2) != 0 && (*(_BYTE *)(*(_QWORD *)(v0 + 16) + *(int *)(v3 + 24)) != 1 || (*(_BYTE *)(v4 + 40) & 1) == 0))
  {
    v22 = v2[2];
    v21 = v2[3];
    swift_bridgeObjectRetain();
    sub_213C831B8(v22, v21);
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v15 + 48);
  }
  if ((v16 & 4) != 0)
  {
    sub_213C3A984();
    v23 = (void *)swift_allocError();
    *v24 = 33;
    v25 = MKBGetDeviceLockState();
    if (v25 != 3 && v25)
      goto LABEL_3;

    v16 = *(_QWORD *)(v15 + 48);
  }
  if ((v16 & 8) == 0)
  {
LABEL_20:
    v30 = *(_QWORD **)(v0 + 32);
    v31 = v30[3];
    v32 = v30[4];
    __swift_project_boxed_opaque_existential_0Tm(v30, v31);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32);
    v33 = *(_QWORD **)(v0 + 32);
    sub_213C45684();
    *(_QWORD *)(v0 + 64) = swift_allocError();
    *v34 = 1;
    v36 = v30[3];
    v35 = v30[4];
    __swift_project_boxed_opaque_existential_0Tm(v33, v36);
    v38 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v35 + 16) + *(_QWORD *)(v35 + 16));
    v37 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v37;
    *v37 = v0;
    v37[1] = sub_213C41704;
    return (id)v38(v36, v35);
  }
  sub_213C3A984();
  v26 = (void *)swift_allocError();
  *v27 = 2;
  result = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (result)
  {
    v28 = result;
    v29 = objc_msgSend(result, sel_isHealthDataSubmissionAllowed);

    if (!v29)
      goto LABEL_3;

    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_213C41704(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 80) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C41760()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 80) == 1)

  else
    swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C417D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t inited;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[5];

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213C885B0;
  *(_QWORD *)(inited + 32) = 0x6F635F726F727265;
  *(_QWORD *)(inited + 40) = 0xEA00000000006564;
  v6 = (void *)sub_213C85D28();
  v7 = objc_msgSend(v6, sel_code);

  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 48) = v7;
  v8 = sub_213C3BB4C(inited);
  v9 = sub_213C49C70(v8);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(a3 + 24);
  v13[3] = type metadata accessor for DediscoRecorderImpl();
  v13[4] = &off_24D0D9F50;
  v13[0] = swift_allocObject();
  swift_bridgeObjectRetain();
  sub_213C84AAC(0, 0xF000000000000000, v9, a2, v11, v10, (uint64_t)v13, 0);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C41918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = sub_213C85ECC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213C85EC0();
  v6 = sub_213C45768((uint64_t)v5);
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = *(_QWORD *)(v1 + 24);
  v13 = *(_QWORD *)(v1 + 16);
  v14 = v9;
  swift_bridgeObjectRetain();
  sub_213C861F0();
  swift_bridgeObjectRetain();
  sub_213C861F0();
  swift_bridgeObjectRelease();
  sub_213C861F0();
  v12 = v6;
  sub_213C86724();
  sub_213C861F0();
  swift_bridgeObjectRelease();
  sub_213C861F0();
  v12 = v8;
  sub_213C86724();
  sub_213C861F0();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t PFLPlugin.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_213C3B744(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return v0;
}

uint64_t PFLPlugin.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_213C3B744(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocClassInstance();
}

char *sub_213C41ACC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_213C41BF8(a1, a2, a3, a4, &qword_254D2E218);
}

_QWORD *sub_213C41AD8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE20);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213C446CC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_213C41BF8(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)a4 + 3);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *((_QWORD *)a4 + 2);
    if (v8 <= v9)
      v10 = *((_QWORD *)a4 + 2);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (char *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      *((_QWORD *)v11 + 2) = v9;
      *((_QWORD *)v11 + 3) = 2 * v12 - 64;
      v13 = v11 + 32;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32])
          memmove(v13, a4 + 32, v9);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213C447D8(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_213C41CEC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213C41D14(a1, a2, a3, a4, &qword_254D2E220, type metadata accessor for CKPolicyRecord);
}

uint64_t sub_213C41D00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213C41D14(a1, a2, a3, a4, &qword_254D2E210, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
}

uint64_t sub_213C41D14(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_213C865C8();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_213C448BC(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_213C41F20(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E290);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_213C45214(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_213C42030(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E228);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_213C4531C(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_213C4213C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E238);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_213C4531C(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_213C42248(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E270);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_213C4542C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_213C42354(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E260);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_213C45514(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_213C42460(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E258);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213C447D8(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_213C42558(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_213C42628(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_213C35070((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_213C35070((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_213C42628(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_213C8649C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_213C427E0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_213C86574();
  if (!v8)
  {
    sub_213C865C8();
    __break(1u);
LABEL_17:
    result = sub_213C86610();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_213C427E0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_213C42874(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_213C42AC4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_213C42AC4(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_213C42874(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_213C429E8(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_213C86538();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_213C865C8();
      __break(1u);
LABEL_10:
      v2 = sub_213C861FC();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_213C86610();
    __break(1u);
LABEL_14:
    result = sub_213C865C8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_213C429E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E218);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_213C42A4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_213C86214();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x2199BFBCC](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_213C42AC4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E218);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C42C10(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E228);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C42D6C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEC8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C42ED4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E220);
  v10 = *(_QWORD *)(type metadata accessor for CKPolicyRecord(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for CKPolicyRecord(0) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C430B4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E288);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C4321C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E290);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E298);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C433A4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E2A0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8)
      memmove(v10 + 4, a4 + 4, 48 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE48);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C43548(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E208);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8])
      memmove(v12, v13, 88 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[88 * v8] || v12 >= &v13[88 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C436CC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E240);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C43828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v1 = type metadata accessor for CKPolicyRecord(0);
  v25 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v2);
  v28 = (uint64_t)&v24 - v6;
  v7 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v8 = v7 - 2;
  if (v7 >= 2)
  {
    v9 = *(_QWORD **)v0;
    v10 = 0;
    v11 = type metadata accessor for CKPolicyRecord;
    v24 = v7 - 2;
    while (1)
    {
      v29 = 0;
      result = MEMORY[0x2199C0A3C](&v29, 8);
      v13 = (v29 * (unsigned __int128)v7) >> 64;
      if (v7 > v29 * v7)
      {
        v14 = -(uint64_t)v7 % v7;
        if (v14 > v29 * v7)
        {
          do
          {
            v29 = 0;
            result = MEMORY[0x2199C0A3C](&v29, 8);
          }
          while (v14 > v29 * v7);
          v13 = (v29 * (unsigned __int128)v7) >> 64;
        }
      }
      v15 = v10 + v13;
      if (__OFADD__(v10, v13))
        break;
      if (v10 != v15)
      {
        v16 = v9[2];
        if (v10 >= v16)
          goto LABEL_19;
        v17 = v11;
        v18 = (uint64_t)v4;
        v27 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
        v19 = (char *)v9 + v27;
        v20 = *(_QWORD *)(v25 + 72);
        v26 = v20 * v10;
        result = sub_213C4518C((uint64_t)v9 + v27 + v20 * v10, v28, v17);
        if (v15 >= v16)
          goto LABEL_20;
        v21 = v20 * v15;
        v22 = (uint64_t)&v19[v20 * v15];
        v4 = (char *)v18;
        sub_213C4518C(v22, v18, v17);
        result = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)v0 = v9;
        v11 = v17;
        if ((result & 1) == 0)
        {
          result = sub_213C44238(v9);
          v9 = (_QWORD *)result;
          *(_QWORD *)v0 = result;
        }
        if (v10 >= v9[2])
          goto LABEL_21;
        v23 = v27;
        result = sub_213C451D0((uint64_t)v4, (uint64_t)v9 + v27 + v26);
        if (v15 >= *(_QWORD *)(*(_QWORD *)v0 + 16))
          goto LABEL_22;
        result = sub_213C451D0(v28, *(_QWORD *)v0 + v23 + v21);
        v9 = *(_QWORD **)v0;
        v8 = v24;
      }
      --v7;
      if (v10++ == v8)
        return result;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  return result;
}

void sub_213C43A54()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  void **v12;
  void *v13;
  void **v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;

  v1 = *(_QWORD **)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v3 = v2 - 2;
  if (v2 >= 2)
  {
    v4 = 0;
    while (1)
    {
      v18 = 0;
      MEMORY[0x2199C0A3C](&v18, 8);
      v6 = (v18 * (unsigned __int128)v2) >> 64;
      if (v2 > v18 * v2)
      {
        v7 = -(uint64_t)v2 % v2;
        if (v7 > v18 * v2)
        {
          do
          {
            v18 = 0;
            MEMORY[0x2199C0A3C](&v18, 8);
          }
          while (v7 > v18 * v2);
          v6 = (v18 * (unsigned __int128)v2) >> 64;
        }
      }
      v8 = v4 + v6;
      if (__OFADD__(v4, v6))
        break;
      if (v4 != v8)
      {
        v9 = v1[2];
        if (v4 >= v9)
          goto LABEL_19;
        if (v8 >= v9)
          goto LABEL_20;
        v16 = *(_OWORD *)&v1[2 * v4 + 4];
        v17 = *(_OWORD *)&v1[2 * v8 + 4];
        v10 = (id)v16;
        swift_retain();
        v11 = (id)v17;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v1 = (_QWORD *)sub_213C4424C(v1);
        if (v4 >= v1[2])
          goto LABEL_21;
        v12 = (void **)&v1[2 * v4 + 4];
        v13 = *v12;
        *(_OWORD *)v12 = v17;
        swift_retain();

        swift_release();
        swift_release();
        if (v8 >= v1[2])
          goto LABEL_22;
        v14 = (void **)&v1[2 * v8 + 4];
        v15 = *v14;
        *(_OWORD *)v14 = v16;
        swift_retain();

        swift_release();
        swift_release();
        *(_QWORD *)v0 = v1;
      }
      --v2;
      if (v4++ == v3)
        return;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
}

void sub_213C43C2C()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int isUniquelyReferenced_nonNull_bridgeObject;
  unint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;

  if (*v0 >> 62)
    goto LABEL_38;
  if (*(uint64_t *)((*v0 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
  {
    do
    {
      if (*v0 >> 62)
      {
        swift_bridgeObjectRetain();
        v1 = sub_213C865E0();
        swift_bridgeObjectRelease();
        v2 = v1 - 2;
        if (v1 < 2)
          return;
      }
      else
      {
        v1 = *(_QWORD *)((*v0 & 0xFFFFFFFFFFFFF8) + 0x10);
        v2 = v1 - 2;
        if (v1 < 2)
          return;
      }
      v3 = 0;
      while (1)
      {
        v15 = 0;
        MEMORY[0x2199C0A3C](&v15, 8);
        v5 = (v15 * (unsigned __int128)(unint64_t)v1) >> 64;
        if (v1 > v15 * v1)
        {
          v6 = -v1 % (unint64_t)v1;
          if (v6 > v15 * v1)
          {
            do
            {
              v15 = 0;
              MEMORY[0x2199C0A3C](&v15, 8);
            }
            while (v6 > v15 * v1);
            v5 = (v15 * (unsigned __int128)(unint64_t)v1) >> 64;
          }
        }
        v7 = v3 + v5;
        if (__OFADD__(v3, v5))
          break;
        if (v3 == v7)
          goto LABEL_6;
        v8 = *v0;
        if ((*v0 & 0xC000000000000001) != 0)
        {
          v9 = MEMORY[0x2199BFF08](v3, *v0);
          v8 = *v0;
          if ((*v0 & 0xC000000000000001) == 0)
            goto LABEL_16;
        }
        else
        {
          if (v3 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_33;
          v9 = *(_QWORD *)(v8 + 8 * v3 + 32);
          swift_retain();
          if ((v8 & 0xC000000000000001) == 0)
          {
LABEL_16:
            if ((v7 & 0x8000000000000000) != 0)
              goto LABEL_34;
            if (v7 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_35;
            v10 = *(_QWORD *)(v8 + 8 * v7 + 32);
            swift_retain();
            goto LABEL_19;
          }
        }
        v10 = MEMORY[0x2199BFF08](v7, v8);
        v8 = *v0;
LABEL_19:
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *v0 = v8;
        if (!isUniquelyReferenced_nonNull_bridgeObject
          || (v8 & 0x8000000000000000) != 0
          || (v8 & 0x4000000000000000) != 0)
        {
          sub_213C5F21C(v8);
        }
        *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v10;
        swift_release();
        sub_213C8628C();
        v12 = *v0;
        v13 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *v0 = v12;
        if (!v13 || (v12 & 0x8000000000000000) != 0 || (v12 & 0x4000000000000000) != 0)
          sub_213C5F21C(v12);
        if ((v7 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v7 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_37;
        *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v9;
        swift_release();
        sub_213C8628C();
LABEL_6:
        --v1;
        if (v3++ == v2)
          return;
      }
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      v14 = sub_213C865E0();
      swift_bridgeObjectRelease();
    }
    while (v14 >= 2);
  }
}

void sub_213C43EC4()
{
  uint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  _QWORD v45[2];

  v44 = *v0;
  v1 = *(_QWORD *)(*v0 + 16);
  v39 = v1 - 2;
  if (v1 >= 2)
  {
    v2 = 0;
    while (1)
    {
      v45[0] = 0;
      MEMORY[0x2199C0A3C](v45, 8);
      v4 = (v45[0] * (unsigned __int128)v1) >> 64;
      if (v1 > v45[0] * v1)
      {
        v5 = -(uint64_t)v1 % v1;
        if (v5 > v45[0] * v1)
        {
          do
          {
            v45[0] = 0;
            MEMORY[0x2199C0A3C](v45, 8);
          }
          while (v5 > v45[0] * v1);
          v4 = (v45[0] * (unsigned __int128)v1) >> 64;
        }
      }
      v6 = v2 + v4;
      if (__OFADD__(v2, v4))
        break;
      if (v2 != v6)
      {
        v7 = *(_QWORD *)(v44 + 16);
        if (v2 >= v7)
          goto LABEL_19;
        if (v6 >= v7)
          goto LABEL_20;
        v8 = v44 + 32 + 88 * v2;
        v9 = *(_DWORD *)v8;
        v10 = *(_QWORD *)(v8 + 48);
        v11 = *(_QWORD *)(v8 + 56);
        v38 = *(_BYTE *)(v8 + 64);
        v12 = *(_QWORD *)(v8 + 80);
        v13 = v44 + 32 + 88 * v6;
        v14 = *(_DWORD *)v13;
        v37 = *(_QWORD *)(v13 + 8);
        v15 = *(_QWORD *)(v13 + 24);
        v33 = *(_QWORD *)(v13 + 16);
        v16 = *(_QWORD *)(v13 + 40);
        v31 = *(_QWORD *)(v8 + 72);
        v32 = *(_QWORD *)(v13 + 32);
        v40 = *(_QWORD *)(v13 + 56);
        v41 = *(_QWORD *)(v13 + 48);
        v43 = *(_BYTE *)(v13 + 64);
        v36 = *(_QWORD *)(v13 + 72);
        v42 = *(_QWORD *)(v13 + 80);
        v29 = *(_OWORD *)(v8 + 24);
        v30 = *(_OWORD *)(v8 + 8);
        v28 = *(_QWORD *)(v8 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26 = v11;
        v27 = v10;
        sub_213C3B198(v10, v11, v38);
        v34 = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v35 = v15;
        swift_bridgeObjectRetain();
        sub_213C3B198(v41, v40, v43);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v44 = sub_213C44274(v44);
        if (v2 >= *(_QWORD *)(v44 + 16))
          goto LABEL_21;
        v17 = v44 + 32 + 88 * v2;
        v18 = *(_QWORD *)(v17 + 48);
        v19 = *(_QWORD *)(v17 + 56);
        *(_DWORD *)v17 = v14;
        *(_QWORD *)(v17 + 8) = v37;
        *(_QWORD *)(v17 + 16) = v33;
        *(_QWORD *)(v17 + 24) = v35;
        *(_QWORD *)(v17 + 32) = v32;
        *(_QWORD *)(v17 + 40) = v34;
        *(_QWORD *)(v17 + 48) = v41;
        *(_QWORD *)(v17 + 56) = v40;
        v20 = *(_BYTE *)(v17 + 64);
        *(_BYTE *)(v17 + 64) = v43;
        *(_QWORD *)(v17 + 72) = v36;
        *(_QWORD *)(v17 + 80) = v42;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_213C45164(v18, v19, v20);
        swift_bridgeObjectRelease();
        if (v6 >= *(_QWORD *)(v44 + 16))
          goto LABEL_22;
        v21 = v44 + 32 + 88 * v6;
        v22 = *(_QWORD *)(v21 + 48);
        v23 = *(_QWORD *)(v21 + 56);
        *(_DWORD *)v21 = v9;
        *(_OWORD *)(v21 + 8) = v30;
        *(_OWORD *)(v21 + 24) = v29;
        *(_QWORD *)(v21 + 40) = v28;
        *(_QWORD *)(v21 + 48) = v27;
        *(_QWORD *)(v21 + 56) = v26;
        v24 = *(_BYTE *)(v21 + 64);
        *(_BYTE *)(v21 + 64) = v38;
        *(_QWORD *)(v21 + 72) = v31;
        *(_QWORD *)(v21 + 80) = v12;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_213C45164(v22, v23, v24);
        swift_bridgeObjectRelease();
        *v25 = v44;
      }
      --v1;
      if (v2++ == v39)
        return;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_213C44238(_QWORD *a1)
{
  return sub_213C42ED4(0, a1[2], 0, a1);
}

uint64_t sub_213C4424C(_QWORD *a1)
{
  return sub_213C4321C(0, a1[2], 0, a1);
}

uint64_t sub_213C44260(_QWORD *a1)
{
  return sub_213C433A4(0, a1[2], 0, a1);
}

uint64_t sub_213C44274(uint64_t a1)
{
  return sub_213C43548(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_213C44288(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t result;
  unint64_t v9;
  uint64_t i;
  uint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  uint64_t v23;

  v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v4 = a1;
  v5 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v5 = 11;
  v6 = v5 | (v4 << 16);
  v7 = sub_213C445C4(0xFuLL, a1, a2);
  result = sub_213C445C4(v6, a1, a2);
  v9 = result >> 14;
  if (v7 >> 14 < result >> 14)
  {
    for (i = 0; ; ++i)
    {
      v11 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if ((a2 & 0x1000000000000000) != 0)
      {
        result = sub_213C8619C();
        v7 = result;
      }
      else
      {
        v12 = v7 >> 16;
        if ((a2 & 0x2000000000000000) != 0)
        {
          v22 = a1;
          v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          v13 = *((unsigned __int8 *)&v22 + v12);
        }
        else
        {
          result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0)
            result = sub_213C86574();
          v13 = *(unsigned __int8 *)(result + v12);
        }
        v14 = (char)v13;
        v15 = __clz(v13 ^ 0xFF) - 24;
        if (v14 >= 0)
          LOBYTE(v15) = 1;
        v7 = ((v12 + v15) << 16) | 5;
      }
      if (v9 <= v7 >> 14)
        return v11;
    }
    __break(1u);
LABEL_40:
    __break(1u);
    return result;
  }
  if (v9 < v7 >> 14)
  {
    v11 = 0;
    while (!__OFSUB__(v11--, 1))
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        result = sub_213C861A8();
        v7 = result;
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
        {
          v22 = a1;
          v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          if ((*((_BYTE *)&v22 + (v7 >> 16) - 1) & 0xC0) == 0x80)
          {
            v20 = 0;
            do
              v21 = *((_BYTE *)&v22 + (v7 >> 16) + v20-- - 2) & 0xC0;
            while (v21 == 128);
            v19 = 1 - v20;
          }
          else
          {
            v19 = 1;
          }
        }
        else
        {
          result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0)
            result = sub_213C86574();
          v17 = 0;
          do
            v18 = *(_BYTE *)(result + (v7 >> 16) - 1 + v17--) & 0xC0;
          while (v18 == 128);
          v19 = -v17;
        }
        v7 = (v7 - (v19 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v9 >= v7 >> 14)
        return v11;
    }
    goto LABEL_40;
  }
  return 0;
}

unint64_t sub_213C444C4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v10 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          v5 = v10;
        }
        return v5 << 16;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 != (a2 & 0xFFFFFFFFFFFFLL))
        {
          do
LABEL_9:
            v7 = *(_BYTE *)(v6 + v5--) & 0xC0;
          while (v7 == 128);
          ++v5;
        }
      }
      else
      {
        v12 = result >> 16;
        v6 = sub_213C86574();
        v5 = v12;
        if (v12 != v9)
          goto LABEL_9;
      }
      return v5 << 16;
    }
    v8 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v8 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v8)
      return sub_213C86514();
  }
  return result;
}

unint64_t sub_213C445C4(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_213C44660(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_213C444C4(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_213C44660(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_213C42A4C(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < result >> 16)
    __break(1u);
  return result;
}

uint64_t sub_213C446CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE28);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213C86610();
  __break(1u);
  return result;
}

char *sub_213C447D8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C448BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C449D4()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v0 = (void *)sub_213C85D28();
  v1 = objc_msgSend(v0, sel_domain);
  v2 = sub_213C86148();
  v4 = v3;

  sub_213C861F0();
  objc_msgSend(v0, sel_code);
  sub_213C86724();
  sub_213C861F0();

  swift_bridgeObjectRelease();
  type metadata accessor for PFLPluginError();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = v4;
  return result;
}

uint64_t sub_213C44A9C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_213C3B534(a1, a2);
  return a1;
}

uint64_t sub_213C44AB0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PFLTaskPreferences(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PFLPluginError()
{
  return objc_opt_self();
}

uint64_t sub_213C44B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_213C44B50()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_213C44B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;

  v7 = v3[5];
  v8 = v3[6];
  __swift_project_boxed_opaque_existential_0Tm(v3 + 2, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 32))(a1, a2, a3, v7, v8);
}

uint64_t sub_213C44BE8(uint64_t a1, uint64_t a2)
{
  return sub_213C3B630(&qword_254D2DF08, a2, (uint64_t (*)(uint64_t))type metadata accessor for PFLPluginError, (uint64_t)&protocol conformance descriptor for PFLPluginError);
}

uint64_t sub_213C44C14(uint64_t a1, uint64_t a2)
{
  return sub_213C3B630(&qword_254D2DF10, a2, (uint64_t (*)(uint64_t))type metadata accessor for PFLPluginError, (uint64_t)&protocol conformance descriptor for PFLPluginError);
}

unint64_t sub_213C44C48()
{
  unint64_t result;

  result = qword_254D2DF18;
  if (!qword_254D2DF18)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for PFLPluginConsent, &type metadata for PFLPluginConsent);
    atomic_store(result, (unint64_t *)&qword_254D2DF18);
  }
  return result;
}

unint64_t sub_213C44C90()
{
  unint64_t result;

  result = qword_254D2DF20;
  if (!qword_254D2DF20)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for PFLPluginConsent, &type metadata for PFLPluginConsent);
    atomic_store(result, (unint64_t *)&qword_254D2DF20);
  }
  return result;
}

unint64_t sub_213C44CD8()
{
  unint64_t result;

  result = qword_254D2DF28;
  if (!qword_254D2DF28)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for PFLPluginConsent, &type metadata for PFLPluginConsent);
    atomic_store(result, (unint64_t *)&qword_254D2DF28);
  }
  return result;
}

unint64_t sub_213C44D20()
{
  unint64_t result;

  result = qword_254D2DF30;
  if (!qword_254D2DF30)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for PFLPluginConsent, &type metadata for PFLPluginConsent);
    atomic_store(result, (unint64_t *)&qword_254D2DF30);
  }
  return result;
}

uint64_t sub_213C44D64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_213C44DB0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  *a2 = v4;
  a2[1] = v5;
  return sub_213C44A9C(v4, v5);
}

uint64_t sub_213C44DFC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for PFLPluginError()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PFLPluginError.__allocating_init(rawValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

ValueMetadata *type metadata accessor for PFLPluginConsent()
{
  return &type metadata for PFLPluginConsent;
}

uint64_t dispatch thunk of PFLTaskRunner.performCustomConsent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PFLTaskRunner.isDataAvailable()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_213C44EF0;
  return v7(a1, a2);
}

uint64_t sub_213C44EF0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of PFLTaskRunner.run(task:useCase:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 24)
                                                                                     + *(_QWORD *)(a6 + 24));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_213C44FDC;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_213C44FDC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of PFLTaskRunner.performCustomTargeting(task:useCase:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of PFLTaskRunner.shouldContinueAfterFailure(task:useCase:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t type metadata accessor for PFLTaskResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for PFLTaskResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PFLTaskResult.json.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of PFLTaskResult.vector.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of PFLTaskResult.debugInfo.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of PFLTaskResult.debugInfo.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of PFLTaskResult.debugInfo.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of PFLTaskResult.__allocating_init(json:vector:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t type metadata accessor for PFLPlugin()
{
  return objc_opt_self();
}

uint64_t method lookup function for PFLPlugin()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PFLPlugin.__allocating_init(plugin:useCase:consent:taskSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of PFLPlugin.run(context:runner:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 216) + *(_QWORD *)(*(_QWORD *)v2 + 216));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_213C44EF0;
  return v8(a1, a2);
}

uint64_t sub_213C45164(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 != 255)
    return sub_213C3B18C();
  return result;
}

uint64_t sub_213C4517C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_213C4518C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_213C451D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CKPolicyRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_213C45214(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E298);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213C86610();
  __break(1u);
  return result;
}

char *sub_213C4531C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C45404(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_213C4542C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C45514(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E268);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C4561C@<X0>(unsigned int *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_213C481E4(a1, a2);
}

unint64_t sub_213C45638()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D2E280;
  if (!qword_254D2E280)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D2E278);
    result = MEMORY[0x2199C0970](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254D2E280);
  }
  return result;
}

unint64_t sub_213C45684()
{
  unint64_t result;

  result = qword_254D2E2B0;
  if (!qword_254D2E2B0)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for PFLError, &type metadata for PFLError);
    atomic_store(result, (unint64_t *)&qword_254D2E2B0);
  }
  return result;
}

uint64_t sub_213C456C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static PFLUtils.osVersion()()
{
  return _s24PrivateFederatedLearning8PFLUtilsO18sysctlStringByName4nameS2S_tFZ_0();
}

void static PFLUtils.deviceType()()
{
  sub_213C487AC();
}

uint64_t sub_213C45768(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a1;
  v1 = sub_213C85FE0();
  v32 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v28 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E3A0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_213C86004();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v29 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_213C85F98();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_213C85FEC();
  v30 = *(_QWORD *)(v17 - 8);
  v31 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BDCEF70], v13);
  sub_213C85FA4();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_213C85FF8();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v29, v9, v10);
    sub_213C85FD4();
    v21 = *MEMORY[0x24BDCF220];
    v22 = v32;
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 104);
    v23(v6, v21, v1);
    v23(v4, *MEMORY[0x24BDCF240], v1);
    v24 = sub_213C85FB0();
    v26 = v25;
    v27 = *(void (**)(char *, uint64_t))(v22 + 8);
    v27(v4, v1);
    v27(v6, v1);
    v23(v6, *MEMORY[0x24BDCF230], v1);
    v23(v4, v21, v1);
    sub_213C85FB0();
    v27(v4, v1);
    v27(v6, v1);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v31);
    if ((v26 & 1) != 0)
      return 0;
    else
      return v24;
  }
  return result;
}

void static PFLUtils.deviceClass()()
{
  sub_213C487AC();
}

uint64_t static PFLUtils.deviceLocale()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[6];

  v0 = sub_213C85F2C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_213C85F8C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213C85F5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDCEBA8], v0);
  sub_213C85EFC();
  v8 = sub_213C85F08();
  v10 = v9;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v11 = sub_213C48834(v8, v10);
  v13 = v12;
  swift_bridgeObjectRelease();
  v16[4] = v11;
  v16[5] = v13;
  v16[2] = 45;
  v16[3] = 0xE100000000000000;
  v16[0] = 95;
  v16[1] = 0xE100000000000000;
  sub_213C3B020();
  v14 = sub_213C864B4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t static PFLUtils.deviceLanguage()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_213C85F74();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D2DEE0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213C85F8C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213C85F5C();
  sub_213C85F80();
  sub_213C85F68();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v11 = sub_213C85F20();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
    sub_213C3B7AC((uint64_t)v6, (uint64_t *)&unk_254D2DEE0);
    v13 = 0x6E776F6E6B6E7524;
  }
  else
  {
    v13 = sub_213C85F14();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

uint64_t static PFLUtils.deviceRegion()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DED8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_213C85F8C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213C85F5C();
  sub_213C85F50();
  v7 = sub_213C85F44();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v2, 1, v7) == 1)
  {
    sub_213C3B7AC((uint64_t)v2, &qword_254D2DED8);
    v9 = 0x6E776F6E6B6E7524;
  }
  else
  {
    v9 = sub_213C85F14();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v2, v7);
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

uint64_t sub_213C45F14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v5;
  *v5 = v3;
  v5[1] = sub_213C45F78;
  return v7(a2);
}

uint64_t sub_213C45F78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *v3;
  v7 = *v3;
  swift_task_dealloc();
  if (!v2)
  {
    v8 = *(_QWORD **)(v6 + 16);
    *v8 = a1;
    v8[1] = a2;
  }
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t static PFLUtils.rethrow<A>(_:for:)(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v3 + 32) = a2;
  v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 40) = v5;
  *v5 = v3;
  v5[1] = sub_213C46040;
  return v7(a1);
}

uint64_t sub_213C46040()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213C460AC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  os_log_type_t type;

  if (qword_254D2D960 != -1)
    swift_once();
  v1 = *(void **)(v0 + 32);
  v2 = *(void **)(v0 + 48);
  v3 = sub_213C86094();
  __swift_project_value_buffer(v3, (uint64_t)qword_254D2FF28);
  v4 = v2;
  v5 = v1;
  v6 = v2;
  v7 = v1;
  v8 = sub_213C8607C();
  v9 = sub_213C86400();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void **)(v0 + 48);
  v12 = *(void **)(v0 + 32);
  if (v10)
  {
    type = v9;
    v13 = swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412546;
    v15 = v11;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v16;
    sub_213C86490();
    *v14 = v16;

    *(_WORD *)(v13 + 12) = 2112;
    v17 = v12;
    v18 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v18;
    sub_213C86490();
    v14[1] = v18;

    _os_log_impl(&dword_213C25000, v8, type, "Override error: %@ -> with %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v14, -1, -1);
    MEMORY[0x2199C0A30](v13, -1, -1);
  }
  else
  {

  }
  v19 = *(void **)(v0 + 48);
  v20 = *(void **)(v0 + 32);
  swift_willThrow();

  v21 = v20;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static PFLUtils.catchAndHandle<A>(for:handler:)(uint64_t (*a1)(void), uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t result;

  result = a1();
  if (v3)
  {
    a3(v3);
    return swift_willThrow();
  }
  return result;
}

uint64_t static PFLUtils.throwIfFalse(error:for:)(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_213C463B4;
  return v5();
}

uint64_t sub_213C463B4(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C46410()
{
  uint64_t v0;
  void *v1;
  id v2;

  if ((*(_BYTE *)(v0 + 32) & 1) == 0)
  {
    v1 = *(void **)(v0 + 16);
    swift_willThrow();
    v2 = v1;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static PFLUtils.isInternalDevice()()
{
  return os_variant_has_internal_content();
}

uint64_t static PFLUtils.language(locale:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_213C85F74();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D2DEE0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213C85F80();
  sub_213C85F68();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = sub_213C85F20();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_213C3B7AC((uint64_t)v6, (uint64_t *)&unk_254D2DEE0);
    return 0x6E776F6E6B6E7524;
  }
  else
  {
    v9 = sub_213C85F14();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  return v9;
}

uint64_t static PFLUtils.region(locale:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DED8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213C85F50();
  v3 = sub_213C85F44();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_213C3B7AC((uint64_t)v2, &qword_254D2DED8);
    return 0x6E776F6E6B6E7524;
  }
  else
  {
    v5 = sub_213C85F14();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v5;
}

BOOL static PFLUtils.deviceUnlocked()()
{
  int v0;

  v0 = MKBGetDeviceLockState();
  return !v0 || v0 == 3;
}

uint64_t sub_213C466D8(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v17;
  uint64_t v18;

  sub_213C742A0(a2);
  if (!v2)
    return swift_release();
  if (qword_254D2D960 != -1)
    swift_once();
  v4 = sub_213C86094();
  __swift_project_value_buffer(v4, (uint64_t)qword_254D2FF28);
  v5 = v2;
  v6 = a1;
  v7 = v2;
  v8 = a1;
  v9 = sub_213C8607C();
  v10 = sub_213C86400();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412546;
    v13 = v2;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    sub_213C86490();
    *v12 = v14;

    *(_WORD *)(v11 + 12) = 2112;
    v15 = a1;
    v18 = _swift_stdlib_bridgeErrorToNSError();
    sub_213C86490();
    v12[1] = v18;

    _os_log_impl(&dword_213C25000, v9, v10, "Override error: %@ -> with %@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v12, -1, -1);
    MEMORY[0x2199C0A30](v11, -1, -1);
  }
  else
  {

  }
  swift_willThrow();

  v17 = a1;
  return swift_release();
}

uint64_t sub_213C46938@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t *v35;
  id v36;
  uint64_t *v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;

  v38 = a1;
  v37 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E390);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213C85D58();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_213C85E18();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a2;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDCD798], v7);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v6, 1, 1, v11);
  swift_bridgeObjectRetain();
  sub_213C85DF4();
  v15 = v39;
  v16 = sub_213C85E24();
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    if (qword_254D2D960 != -1)
      swift_once();
    v18 = sub_213C86094();
    __swift_project_value_buffer(v18, (uint64_t)qword_254D2FF28);
    v19 = v15;
    v20 = v38;
    v21 = v38;
    v22 = v15;
    v23 = v20;
    v24 = sub_213C8607C();
    v25 = sub_213C86400();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v27 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v26 = 138412546;
      v28 = v15;
      v29 = _swift_stdlib_bridgeErrorToNSError();
      v41 = v29;
      sub_213C86490();
      *v27 = v29;

      *(_WORD *)(v26 + 12) = 2112;
      v30 = v20;
      v31 = _swift_stdlib_bridgeErrorToNSError();
      v41 = v31;
      sub_213C86490();
      v27[1] = v31;

      _os_log_impl(&dword_213C25000, v24, v25, "Override error: %@ -> with %@", (uint8_t *)v26, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v27, -1, -1);
      MEMORY[0x2199C0A30](v26, -1, -1);
    }
    else
    {

    }
    swift_willThrow();

    v36 = v20;
    return swift_release();
  }
  else
  {
    v32 = v16;
    v33 = v17;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    result = swift_release();
    v35 = v37;
    *v37 = v32;
    v35[1] = v33;
  }
  return result;
}

id static PFLUtils.rethrow<A>(_:for:)(void *a1, uint64_t (*a2)(void))
{
  void *v2;
  id result;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;

  result = (id)a2();
  if (v2)
  {
    if (qword_254D2D960 != -1)
      swift_once();
    v5 = sub_213C86094();
    __swift_project_value_buffer(v5, (uint64_t)qword_254D2FF28);
    v6 = v2;
    v7 = a1;
    v8 = v2;
    v9 = a1;
    v10 = sub_213C8607C();
    v11 = sub_213C86400();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v12 = 138412546;
      v14 = v2;
      v15 = _swift_stdlib_bridgeErrorToNSError();
      sub_213C86490();
      *v13 = v15;

      *(_WORD *)(v12 + 12) = 2112;
      v16 = a1;
      v17 = _swift_stdlib_bridgeErrorToNSError();
      sub_213C86490();
      v13[1] = v17;

      _os_log_impl(&dword_213C25000, v10, v11, "Override error: %@ -> with %@", (uint8_t *)v12, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v13, -1, -1);
      MEMORY[0x2199C0A30](v12, -1, -1);
    }
    else
    {

    }
    swift_willThrow();

    return a1;
  }
  return result;
}

uint64_t static PFLUtils.throwIfFalse(error:for:)(void *a1, uint64_t (*a2)(void))
{
  uint64_t result;

  result = a2();
  if ((result & 1) == 0)
  {
    swift_willThrow();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t static PFLUtils.throwIfError(_:)(uint64_t (*a1)(void))
{
  uint64_t result;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;

  result = a1();
  if (result)
  {
    v2 = (void *)result;
    if (qword_254D2D960 != -1)
      swift_once();
    v3 = sub_213C86094();
    __swift_project_value_buffer(v3, (uint64_t)qword_254D2FF28);
    v4 = v2;
    v5 = v2;
    v6 = sub_213C8607C();
    v7 = sub_213C86400();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v8 = 138412290;
      v10 = v2;
      v11 = _swift_stdlib_bridgeErrorToNSError();
      sub_213C86490();
      *v9 = v11;

      _os_log_impl(&dword_213C25000, v6, v7, "%@", v8, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v9, -1, -1);
      MEMORY[0x2199C0A30](v8, -1, -1);
    }
    else
    {

    }
    return swift_willThrow();
  }
  return result;
}

uint64_t static PFLUtils.throwIfTimeout<A>(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 40) = a3;
  *(_QWORD *)(v5 + 48) = a4;
  *(_QWORD *)(v5 + 32) = a2;
  *(double *)(v5 + 24) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_213C47140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = v2;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  *v5 = v0;
  v5[1] = sub_213C471E4;
  return sub_213C86634();
}

uint64_t sub_213C471E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213C47258()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C4728C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + 56) = a5;
  *(double *)(v6 + 48) = a6;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = sub_213C86478();
  *(_QWORD *)(v6 + 64) = v7;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E2F8);
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213C47320()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v1 = v0[11];
  v2 = v0[7];
  v3 = v0[6];
  v5 = v0[4];
  v4 = v0[5];
  v6 = sub_213C8631C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v1, 1, 1, v6);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v2;
  v8[5] = v5;
  v8[6] = v4;
  swift_retain();
  v0[12] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D2DF00);
  sub_213C8634C();
  sub_213C476C0(v1, (uint64_t)&unk_254D2E400, (uint64_t)v8);
  sub_213C3B7AC(v1, &qword_254D2E2F8);
  v7(v1, 1, 1, v6);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v2;
  v9[5] = v3;
  sub_213C476C0(v1, (uint64_t)&unk_254D2E410, (uint64_t)v9);
  sub_213C3B7AC(v1, &qword_254D2E2F8);
  v10 = (_QWORD *)swift_task_alloc();
  v0[13] = v10;
  *v10 = v0;
  v10[1] = sub_213C474B8;
  return sub_213C86334();
}

uint64_t sub_213C474B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C4751C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(v1, *(_QWORD *)(v0 + 64));
    sub_213C45684();
    swift_allocError();
    *v4 = 5;
    swift_willThrow();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 16), v1, v2);
    sub_213C86340();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C47620()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C4765C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_213C3A7F0;
  return v8(a1);
}

uint64_t sub_213C476C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[4];
  _QWORD v19[4];

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E2F8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213C49C28(a1, (uint64_t)v9);
  v10 = sub_213C8631C();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_213C3B7AC((uint64_t)v9, &qword_254D2E2F8);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_213C862F8();
      v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_213C86310();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v15 = *v4;
  v16 = (_QWORD *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_213C4784C(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
  return swift_task_switch();
}

void sub_213C47864()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;

  v1 = *(double *)(v0 + 16) * 1000000000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 24) = v2;
    *v2 = v0;
    v2[1] = sub_213C47900;
    sub_213C86328();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_213C47900()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_213C4796C()
{
  uint64_t v0;
  _BYTE *v1;

  sub_213C45684();
  swift_allocError();
  *v1 = 4;
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static PFLUtils.catchAndHandle<A>(for:handler:)(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v5[2] = a4;
  v5[3] = a5;
  v9 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v7 = (_QWORD *)swift_task_alloc();
  v5[4] = v7;
  *v7 = v5;
  v7[1] = sub_213C47A34;
  return v9(a1);
}

uint64_t sub_213C47A34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213C47AA0()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 40));
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void static PFLUtils.runAsync<A>(work:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  dispatch_semaphore_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  NSObject *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a1;
  v23 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D2DF00);
  v6 = sub_213C86814();
  v26 = sub_213C86478();
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v9 = (char *)&v22 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E2F8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = dispatch_semaphore_create(0);
  v24 = a3;
  type metadata accessor for AsyncResult(0, a3, v14, v15);
  swift_allocObject();
  v16 = sub_213C48554();
  v17 = sub_213C8631C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v12, 1, 1, v17);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = v25;
  v18[5] = a2;
  v18[6] = v16;
  v18[7] = v13;
  swift_retain();
  swift_retain();
  v19 = v13;
  sub_213C48098((uint64_t)v12, (uint64_t)&unk_254D2E308, (uint64_t)v18);
  swift_release();
  sub_213C86430();
  v20 = v16 + *(_QWORD *)(*(_QWORD *)v16 + 88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v20, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v9, 1, v6) == 1)
  {
    sub_213C45684();
    swift_allocError();
    *v21 = 5;
LABEL_4:
    swift_willThrow();
    swift_release();

    return;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
    goto LABEL_4;
  swift_release();

  (*(void (**)(uint64_t, char *))(*(_QWORD *)(v24 - 8) + 32))(v23, v9);
}

uint64_t sub_213C47D5C()
{
  swift_allocObject();
  return sub_213C48554();
}

uint64_t sub_213C47D8C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t);

  v7[8] = a6;
  v7[9] = a7;
  v9 = *(_QWORD *)(*(_QWORD *)a6 + 80);
  v7[10] = v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D2DF00);
  v7[11] = sub_213C86814();
  v10 = sub_213C86478();
  v7[12] = v10;
  v7[13] = *(_QWORD *)(v10 - 8);
  v7[14] = swift_task_alloc();
  v7[15] = *(_QWORD *)(v9 - 8);
  v11 = swift_task_alloc();
  v7[16] = v11;
  v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v12 = (_QWORD *)swift_task_alloc();
  v7[17] = v12;
  *v12 = v7;
  v12[1] = sub_213C47E78;
  return v14(v11);
}

uint64_t sub_213C47E78()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C47EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 32))(v1, *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 80));
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 0, 1, v4);
  v6 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 88);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 40))(v6, v1, v3);
  swift_endAccess();
  sub_213C8643C();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C47FC0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD **)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 64);
  *v1 = *(_QWORD *)(v0 + 144);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 0, 1, v4);
  v6 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 88);
  swift_beginAccess();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v2 + 40))(v6, v1, v3);
  swift_endAccess();
  sub_213C8643C();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C48098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_213C8631C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_213C86310();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_213C3B7AC(a1, &qword_254D2E2F8);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_213C862F8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_213C481E4@<X0>(unsigned int *a1@<X0>, uint64_t *a2@<X8>)
{
  unsigned int v3;
  unsigned int v4;
  uint64_t result;
  unint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  v3 = *a1;
  if ((sub_213C85CB0() & 1) != 0)
  {
    if (v3 > 0x7F)
    {
      v7 = (v3 & 0x3F) << 8;
      if (v3 >= 0x800)
      {
        v8 = (v7 | (v3 >> 6) & 0x3F) << 8;
        v9 = (((v8 | (v3 >> 12) & 0x3F) << 8) | (v3 >> 18)) - 2122219023;
        v4 = (v8 | (v3 >> 12)) + 8487393;
        if (HIWORD(v3))
          v4 = v9;
      }
      else
      {
        v4 = (v7 | (v3 >> 6)) + 33217;
      }
    }
    else
    {
      v4 = v3 + 1;
    }
    v10 = (v4 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (__clz(v4) >> 3))));
    result = MEMORY[0x2199BFB84](&v10);
  }
  else
  {
    v6 = 0xE100000000000000;
    result = 95;
  }
  *a2 = result;
  a2[1] = v6;
  return result;
}

Swift::Void __swiftcall inplaceSub(_:_:)(Swift::OpaquePointer *a1, Swift::OpaquePointer *a2)
{
  void *rawValue;
  unint64_t v3;

  rawValue = a1->_rawValue;
  v3 = *((_QWORD *)a1->_rawValue + 2);
  if (v3 >> 31)
  {
    sub_213C865C8();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      rawValue = (void *)sub_213C4202C(0, v3, 0, rawValue);
    a1->_rawValue = rawValue;
    cblas_saxpy_NEWLAPACK();
    swift_bridgeObjectRelease();
  }
}

uint64_t FloatingPoint.isNearlyEqual(to:absoluteTolerance:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  char v11;
  uint64_t v13;

  v4 = *(_QWORD *)(a3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v13 - v8;
  sub_213C865D4();
  sub_213C86790();
  v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v7, a3);
  v11 = sub_213C8610C();
  v10(v9, a3);
  return v11 & 1;
}

uint64_t sub_213C484C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 88);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D2DF00);
  sub_213C86814();
  v2 = sub_213C86478();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_213C48534()
{
  sub_213C484C0();
  return swift_deallocClassInstance();
}

uint64_t sub_213C48554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 88);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D2DF00);
  v2 = sub_213C86814();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return v0;
}

uint64_t sub_213C485C4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_213C48628;
  return v6(a1);
}

uint64_t sub_213C48628()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_213C48674()
{
  sub_213C487AC();
}

uint64_t _s24PrivateFederatedLearning8PFLUtilsO18sysctlStringByName4nameS2S_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  size_t v4[2];

  v4[1] = *MEMORY[0x24BDAC8D0];
  v4[0] = 256;
  v0 = sub_213C862B0();
  *(_QWORD *)(v0 + 16) = 256;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  *(_OWORD *)(v0 + 208) = 0u;
  *(_OWORD *)(v0 + 224) = 0u;
  *(_OWORD *)(v0 + 240) = 0u;
  *(_OWORD *)(v0 + 256) = 0u;
  *(_OWORD *)(v0 + 272) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  v1 = sub_213C86184();
  sysctlbyname((const char *)(v1 + 32), (void *)(v0 + 32), v4, 0, 0);
  swift_release();
  v2 = sub_213C3AFD8(v0);
  swift_bridgeObjectRelease();
  return v2;
}

void sub_213C4878C()
{
  sub_213C487AC();
}

void sub_213C487AC()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_213C86124();
  v1 = MGCopyAnswer();

  if (v1)
    swift_dynamicCast();
  else
    __break(1u);
}

unint64_t sub_213C48834(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t result;
  char v5;
  uint64_t v6;

  v3 = a1;
  swift_bridgeObjectRetain();
  result = sub_213C34D1C(64, 0xE100000000000000, v3, a2);
  if ((v5 & 1) != 0)
    return v3;
  v6 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v6 = v3 & 0xFFFFFFFFFFFFLL;
  if (4 * v6 >= result >> 14)
  {
    sub_213C86190();
    return a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_213C488D4(uint64_t a1, uint64_t a2)
{
  double *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  _QWORD *v10;

  v6 = *((_QWORD *)v2 + 2);
  v7 = *((_QWORD *)v2 + 3);
  v8 = *((_QWORD *)v2 + 4);
  v9 = v2[5];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_213C4A020;
  return sub_213C4728C(a1, a2, v7, v8, v6, v9);
}

uint64_t type metadata accessor for AsyncResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncResult);
}

uint64_t sub_213C4896C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_213C489A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_213C3A7F0;
  return sub_213C47D8C(a1, v4, v5, v6, v7, v9, v8);
}

ValueMetadata *type metadata accessor for PFLUtils()
{
  return &type metadata for PFLUtils;
}

uint64_t sub_213C48A48()
{
  uint64_t result;
  unint64_t v1;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D2DF00);
  sub_213C86814();
  result = sub_213C86478();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_213C48AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch();
}

uint64_t sub_213C48AFC()
{
  uint64_t v0;
  uint64_t v1;
  int8x16_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = swift_task_alloc();
  v2 = vextq_s8(*(int8x16_t *)(v0 + 56), *(int8x16_t *)(v0 + 56), 8uLL);
  *(_QWORD *)(v0 + 72) = v1;
  *(int8x16_t *)(v1 + 16) = v2;
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v3;
  *(_QWORD *)(v3 + 16) = &unk_254D2E3C8;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E3E0);
  *v4 = v0;
  v4[1] = sub_213C48BC8;
  return sub_213C8637C();
}

uint64_t sub_213C48BC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_213C48C3C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_213C48C4C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  NSObject *v23;

  swift_task_dealloc();
  swift_task_dealloc();
  if (qword_254D2D960 != -1)
    swift_once();
  v1 = *(void **)(v0 + 48);
  v2 = *(void **)(v0 + 96);
  v3 = sub_213C86094();
  __swift_project_value_buffer(v3, (uint64_t)qword_254D2FF28);
  v4 = v2;
  v5 = v1;
  v6 = v2;
  v7 = v1;
  v8 = sub_213C8607C();
  v9 = sub_213C86400();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void **)(v0 + 96);
  v12 = *(void **)(v0 + 48);
  if (v10)
  {
    v13 = swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412546;
    v15 = v11;
    v23 = v8;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v16;
    sub_213C86490();
    *v14 = v16;

    *(_WORD *)(v13 + 12) = 2112;
    v17 = v12;
    v18 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 40) = v18;
    sub_213C86490();
    v14[1] = v18;
    v8 = v23;

    _os_log_impl(&dword_213C25000, v23, v9, "Override error: %@ -> with %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v14, -1, -1);
    MEMORY[0x2199C0A30](v13, -1, -1);
  }
  else
  {

  }
  v19 = *(void **)(v0 + 96);
  v20 = *(void **)(v0 + 48);

  swift_willThrow();
  v21 = v20;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C48EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return swift_task_switch();
}

uint64_t sub_213C48ED4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[7];
  v2 = swift_task_alloc();
  v0[8] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[9] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E3B8);
  *v3 = v0;
  v3[1] = sub_213C48F7C;
  return sub_213C8637C();
}

uint64_t sub_213C48F7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C48FE8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_213C48FF4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  NSObject *v23;

  swift_task_dealloc();
  if (qword_254D2D960 != -1)
    swift_once();
  v1 = *(void **)(v0 + 40);
  v2 = *(void **)(v0 + 80);
  v3 = sub_213C86094();
  __swift_project_value_buffer(v3, (uint64_t)qword_254D2FF28);
  v4 = v2;
  v5 = v1;
  v6 = v2;
  v7 = v1;
  v8 = sub_213C8607C();
  v9 = sub_213C86400();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void **)(v0 + 80);
  v12 = *(void **)(v0 + 40);
  if (v10)
  {
    v13 = swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412546;
    v15 = v11;
    v23 = v8;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v16;
    sub_213C86490();
    *v14 = v16;

    *(_WORD *)(v13 + 12) = 2112;
    v17 = v12;
    v18 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v18;
    sub_213C86490();
    v14[1] = v18;
    v8 = v23;

    _os_log_impl(&dword_213C25000, v23, v9, "Override error: %@ -> with %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v14, -1, -1);
    MEMORY[0x2199C0A30](v13, -1, -1);
  }
  else
  {

  }
  v19 = *(void **)(v0 + 80);
  v20 = *(void **)(v0 + 40);

  swift_willThrow();
  v21 = v20;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_213C49258(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v16;
  uint64_t v17;

  sub_213C85C5C();
  swift_allocObject();
  sub_213C85C50();
  type metadata accessor for DodMLPolicy();
  sub_213C4986C();
  sub_213C85C44();
  if (v1)
  {
    swift_release();
    if (qword_254D2D960 != -1)
      swift_once();
    v3 = sub_213C86094();
    __swift_project_value_buffer(v3, (uint64_t)qword_254D2FF28);
    v4 = v1;
    v5 = a1;
    v6 = v1;
    v7 = a1;
    v8 = sub_213C8607C();
    v9 = sub_213C86400();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412546;
      v12 = v1;
      v13 = _swift_stdlib_bridgeErrorToNSError();
      sub_213C86490();
      *v11 = v13;

      *(_WORD *)(v10 + 12) = 2112;
      v14 = a1;
      v16 = _swift_stdlib_bridgeErrorToNSError();
      sub_213C86490();
      v11[1] = v16;

      _os_log_impl(&dword_213C25000, v8, v9, "Override error: %@ -> with %@", (uint8_t *)v10, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v11, -1, -1);
      MEMORY[0x2199C0A30](v10, -1, -1);
    }
    else
    {

    }
    swift_willThrow();

    return a1;
  }
  else
  {
    swift_release();
    return (id)v17;
  }
}

id sub_213C49500(void *a1)
{
  return sub_213C49548(a1);
}

id sub_213C49548(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22[2];
  uint64_t v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v2 = (void *)objc_opt_self();
  v3 = (void *)sub_213C85E48();
  v22[0] = 0;
  v4 = objc_msgSend(v2, sel_JSONObjectWithData_options_error_, v3, 0, v22);

  v5 = v22[0];
  if (v4)
  {
    sub_213C864C0();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE68);
    swift_dynamicCast();
    return v22[1];
  }
  else
  {
    v7 = v5;
    v8 = (void *)sub_213C85D34();

    swift_willThrow();
    if (qword_254D2D960 != -1)
      swift_once();
    v9 = sub_213C86094();
    __swift_project_value_buffer(v9, (uint64_t)qword_254D2FF28);
    v10 = v8;
    v11 = a1;
    v12 = v8;
    v13 = a1;
    v14 = sub_213C8607C();
    v15 = sub_213C86400();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v16 = 138412546;
      v18 = v8;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      v23 = v19;
      sub_213C86490();
      *v17 = v19;

      *(_WORD *)(v16 + 12) = 2112;
      v20 = a1;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      v23 = v21;
      sub_213C86490();
      v17[1] = v21;

      _os_log_impl(&dword_213C25000, v14, v15, "Override error: %@ -> with %@", (uint8_t *)v16, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v17, -1, -1);
      MEMORY[0x2199C0A30](v16, -1, -1);
    }
    else
    {

    }
    swift_willThrow();

    return a1;
  }
}

unint64_t sub_213C4986C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D2E398;
  if (!qword_254D2E398)
  {
    v1 = type metadata accessor for DodMLPolicy();
    result = MEMORY[0x2199C0970](&unk_213C88DF4, v1);
    atomic_store(result, (unint64_t *)&qword_254D2E398);
  }
  return result;
}

uint64_t sub_213C498B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_213C3A7F0;
  return sub_213C3A544(a1, a2, v6);
}

uint64_t sub_213C4991C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_213C4997C;
  return sub_213C396E0(a1, v5, v4);
}

uint64_t sub_213C4997C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_213C499DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_213C4A020;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_254D2E3D0 + dword_254D2E3D0))(a1, a2, v6);
}

uint64_t sub_213C49A5C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_213C49A80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_213C4A020;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_254D2E3E8 + dword_254D2E3E8))(a1, v4);
}

uint64_t sub_213C49AF0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_213C49B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v4 = *(int **)(v1 + 40);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_213C4A020;
  v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v6 = (_QWORD *)swift_task_alloc();
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_213C3A7F0;
  return v8(a1);
}

uint64_t sub_213C49BA4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_213C49BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_213C4A020;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_213C49C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213C49C70(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  size_t v37[25];

  v32 = a1;
  v37[24] = *MEMORY[0x24BDAC8D0];
  v1 = sub_213C85F2C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_213C85F8C();
  v5 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213C888E0;
  *(_QWORD *)(inited + 32) = 0x745F656369766564;
  *(_QWORD *)(inited + 40) = 0xEB00000000657079;
  sub_213C487AC();
  v9 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = v11;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = 0x6F5F656369766564;
  *(_QWORD *)(inited + 88) = 0xE900000000000073;
  v37[0] = 256;
  v12 = sub_213C862B0();
  *(_QWORD *)(v12 + 16) = 256;
  *(_OWORD *)(v12 + 48) = 0u;
  *(_OWORD *)(v12 + 64) = 0u;
  *(_OWORD *)(v12 + 80) = 0u;
  *(_OWORD *)(v12 + 96) = 0u;
  *(_OWORD *)(v12 + 112) = 0u;
  *(_OWORD *)(v12 + 128) = 0u;
  *(_OWORD *)(v12 + 144) = 0u;
  *(_OWORD *)(v12 + 160) = 0u;
  *(_OWORD *)(v12 + 176) = 0u;
  *(_OWORD *)(v12 + 192) = 0u;
  *(_OWORD *)(v12 + 208) = 0u;
  *(_OWORD *)(v12 + 224) = 0u;
  *(_OWORD *)(v12 + 240) = 0u;
  *(_OWORD *)(v12 + 256) = 0u;
  *(_OWORD *)(v12 + 272) = 0u;
  *(_OWORD *)(v12 + 32) = 0u;
  sysctlbyname("kern.osversion", (void *)(v12 + 32), v37, 0, 0);
  v13 = sub_213C3AFD8(v12);
  v15 = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = v13;
  *(_QWORD *)(inited + 104) = v15;
  *(_QWORD *)(inited + 120) = v9;
  *(_QWORD *)(inited + 128) = 0x656C61636F6CLL;
  *(_QWORD *)(inited + 136) = 0xE600000000000000;
  sub_213C85F5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCEBA8], v1);
  sub_213C85EFC();
  v16 = sub_213C85F08();
  v18 = v17;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v19 = sub_213C48834(v16, v18);
  v21 = v20;
  swift_bridgeObjectRelease();
  v37[0] = v19;
  v37[1] = v21;
  v35 = 45;
  v36 = 0xE100000000000000;
  v33 = 95;
  v34 = 0xE100000000000000;
  sub_213C3B020();
  v22 = sub_213C864B4();
  v24 = v23;
  swift_bridgeObjectRelease();
  v25 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26 = v32;
  v25(v7, v31);
  *(_QWORD *)(inited + 168) = v9;
  *(_QWORD *)(inited + 144) = v22;
  *(_QWORD *)(inited + 152) = v24;
  v27 = sub_213C3BB4C(inited);
  if (v26)
    v28 = v26;
  else
    v28 = sub_213C3BB4C(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRetain();
  return sub_213C36AAC(v28, v27);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2199C0928](a1, v6, a5);
}

double sub_213C4A024@<D0>(_OWORD *a1@<X8>)
{
  return sub_213C4A064((SEL *)&selRef_objectForKey_, a1);
}

void sub_213C4A030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_213C4A10C(a1, a2, a3, (SEL *)&selRef_setObject_forKey_);
}

double sub_213C4A058@<D0>(_OWORD *a1@<X8>)
{
  return sub_213C4A064((SEL *)&selRef_valueForKey_, a1);
}

double sub_213C4A064@<D0>(SEL *a1@<X4>, _OWORD *a2@<X8>)
{
  void **v2;
  void *v5;
  void *v6;
  id v7;
  double result;

  v5 = *v2;
  v6 = (void *)sub_213C86124();
  v7 = objc_msgSend(v5, *a1, v6);

  if (v7)
  {
    sub_213C864C0();
    swift_unknownObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

void sub_213C4A0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_213C4A10C(a1, a2, a3, (SEL *)&selRef_setValue_forKey_);
}

void sub_213C4A10C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[3];
  uint64_t v14;

  sub_213C4AFBC(a1, (uint64_t)v13);
  v6 = v14;
  if (v14)
  {
    v7 = __swift_project_boxed_opaque_existential_0Tm(v13, v14);
    v8 = *(_QWORD *)(v6 - 8);
    MEMORY[0x24BDAC7A8](v7);
    v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    v11 = sub_213C8673C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  }
  else
  {
    v11 = 0;
  }
  v12 = (void *)sub_213C86124();
  objc_msgSend(v4, *a4, v11, v12);
  swift_unknownObjectRelease();

}

uint64_t sub_213C4A21C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v2 = sub_213C85EF0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_213C4A9C8(0x444972657355, 0xE600000000000000);
  if (v7)
  {
    v8 = v6;
    v9 = v7;
  }
  else
  {
    sub_213C85EE4();
    v8 = sub_213C85ED8();
    v9 = v10;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_213C4A8DC(0x444972657355, 0xE600000000000000, v8, v9);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE20);
  inited = swift_initStackObject();
  v12 = MEMORY[0x24BEE0D00];
  v13 = MEMORY[0x24BEE0D70];
  *(_OWORD *)(inited + 16) = xmmword_213C885B0;
  *(_QWORD *)(inited + 56) = v12;
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v9;
  v17 = a1;
  swift_bridgeObjectRetain();
  sub_213C4AE08(inited);
  v14 = sub_213C4A3B4(v17);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_213C4A3B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _BYTE *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[6];

  v25[5] = *MEMORY[0x24BDAC8D0];
  v3 = sub_213C8616C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v21 = v4;
    v22 = v3;
    v23 = v1;
    v24 = MEMORY[0x24BEE4AF8];
    sub_213C54760(0, v7, 0);
    v9 = a1 + 32;
    v8 = v24;
    do
    {
      sub_213C44B0C(v9, (uint64_t)v25);
      __swift_project_boxed_opaque_existential_0Tm(v25, v25[3]);
      v10 = sub_213C86724();
      v12 = v11;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_213C54760(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v24;
      }
      v14 = *(_QWORD *)(v8 + 16);
      v13 = *(_QWORD *)(v8 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_213C54760(v13 > 1, v14 + 1, 1);
        v8 = v24;
      }
      *(_QWORD *)(v8 + 16) = v14 + 1;
      v15 = v8 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
      v9 += 40;
      --v7;
    }
    while (v7);
    v3 = v22;
    v4 = v21;
  }
  v25[0] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0);
  sub_213C4AF70();
  sub_213C860F4();
  swift_bridgeObjectRelease();
  sub_213C86160();
  sub_213C86154();
  v17 = v16;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v17 >> 60 != 15)
  {
    v20 = sub_213C862B0();
    *(_QWORD *)(v20 + 16) = 32;
    *(_OWORD *)(v20 + 32) = 0u;
    *(_OWORD *)(v20 + 48) = 0u;
    v24 = v20;
    __asm { BR              X10 }
  }
  sub_213C3A984();
  swift_allocError();
  *v18 = 51;
  return swift_willThrow();
}

uint64_t sub_213C4A8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = v4[5];
  v10 = v4[6];
  __swift_project_boxed_opaque_existential_0Tm(v4 + 2, v9);
  v11 = MEMORY[0x24BEE0D00];
  v19 = MEMORY[0x24BEE0D00];
  v17 = a3;
  v18 = a4;
  v12 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  v12(&v17, a1, a2, v9, v10);
  sub_213C34FD8((uint64_t)&v17);
  v14 = v4[10];
  v13 = v4[11];
  __swift_project_boxed_opaque_existential_0Tm(v4 + 7, v14);
  v19 = v11;
  v17 = a3;
  v18 = a4;
  v15 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 16);
  swift_bridgeObjectRetain();
  v15(&v17, a1, a2, v14, v13);
  return sub_213C34FD8((uint64_t)&v17);
}

uint64_t sub_213C4A9C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  v3 = v2;
  v6 = v2 + 2;
  v7 = v2[5];
  v8 = v2[6];
  __swift_project_boxed_opaque_existential_0Tm(v2 + 2, v7);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(v19, a1, a2, v7, v8);
  if (!v20)
  {
    sub_213C34FD8((uint64_t)v19);
LABEL_5:
    v10 = v2[10];
    v11 = v2[11];
    __swift_project_boxed_opaque_existential_0Tm(v2 + 7, v10);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(v19, a1, a2, v10, v11);
    if (v20)
    {
      v12 = MEMORY[0x24BEE0D00];
      if ((swift_dynamicCast() & 1) != 0)
      {
        v9 = v17;
        v14 = v3[5];
        v13 = v3[6];
        __swift_project_boxed_opaque_existential_0Tm(v6, v14);
        v20 = v12;
        v19[0] = v17;
        v19[1] = v18;
        v15 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 16);
        swift_bridgeObjectRetain();
        v15(v19, a1, a2, v14, v13);
        sub_213C34FD8((uint64_t)v19);
        return v9;
      }
    }
    else
    {
      sub_213C34FD8((uint64_t)v19);
    }
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_5;
  return v17;
}

uint64_t sub_213C4AB50()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PopulationSegmentation()
{
  return objc_opt_self();
}

uint64_t sub_213C4AB9C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PopulationSegmentationInjector()
{
  return objc_opt_self();
}

void sub_213C4ABCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

unsigned __int8 *sub_213C4AC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  const void *v4;
  char **v5;
  CC_LONG v6;
  char *v7;
  char isUniquelyReferenced_nonNull_native;

  v6 = BYTE6(a4);
  v7 = *v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v5 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v7 = sub_213C41ACC(0, *((_QWORD *)v7 + 2), 0, v7);
  *v5 = v7;
  return CC_SHA256(v4, v6, (unsigned __int8 *)v7 + 32);
}

uint64_t sub_213C4AD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_213C85CD4();
  v10 = result;
  if (result)
  {
    result = sub_213C85CF8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v10 += a1 - result;
  }
  v11 = __OFSUB__(a2, a1);
  v12 = a2 - a1;
  if (v11)
  {
    __break(1u);
    goto LABEL_13;
  }
  v13 = sub_213C85CEC();
  if (v13 >= v12)
    v14 = v12;
  else
    v14 = v13;
  v15 = v10 + v14;
  if (v10)
    v16 = v15;
  else
    v16 = 0;
  sub_213C4ABCC(v10, v16, a4, a5);
  return sub_213C3B078(a4, a5);
}

uint64_t sub_213C4AE08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_213C41AD8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE28);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_213C86610();
  __break(1u);
  return result;
}

unint64_t sub_213C4AF70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D2E588;
  if (!qword_254D2E588)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D2DBB0);
    result = MEMORY[0x2199C0970](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_254D2E588);
  }
  return result;
}

uint64_t sub_213C4AFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t PerformanceMeasure.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x24BEE4B00];
  return result;
}

uint64_t PerformanceMeasure.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4B00];
  return result;
}

uint64_t sub_213C4B044(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double Current;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;

  swift_bridgeObjectRetain();
  Current = CFAbsoluteTimeGetCurrent();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = 0x8000000000000000;
  sub_213C4B824(a1, a2, isUniquelyReferenced_nonNull_native, Current);
  *(_QWORD *)(v2 + 16) = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

double sub_213C4B0F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  double v6;
  unint64_t v7;
  char v8;
  double v9;
  double Current;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17[3];

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  v6 = 0.0;
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_213C4B3DC(a1, a2);
    if ((v8 & 1) != 0)
    {
      v9 = *(double *)(*(_QWORD *)(v5 + 56) + 8 * v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Current = CFAbsoluteTimeGetCurrent();
      if (qword_254D2D960 != -1)
        swift_once();
      v6 = Current - v9;
      v11 = sub_213C86094();
      __swift_project_value_buffer(v11, (uint64_t)qword_254D2FF28);
      swift_bridgeObjectRetain_n();
      sub_213C3C524();
      sub_213C3C524();
      v12 = sub_213C8607C();
      v13 = sub_213C863F4();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = swift_slowAlloc();
        v15 = swift_slowAlloc();
        v17[0] = v15;
        *(_DWORD *)v14 = 136315650;
        swift_bridgeObjectRetain();
        sub_213C42558(a1, a2, v17);
        sub_213C86490();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v14 + 12) = 1040;
        sub_213C86490();
        *(_WORD *)(v14 + 18) = 2048;
        sub_213C86490();
        _os_log_impl(&dword_213C25000, v12, v13, "⏲ Measure [%s]: %.*f sec", (uint8_t *)v14, 0x1Cu);
        swift_arrayDestroy();
        MEMORY[0x2199C0A30](v15, -1, -1);
        MEMORY[0x2199C0A30](v14, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      swift_beginAccess();
      sub_213C4B658(a1, a2);
      swift_endAccess();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v6;
}

uint64_t PerformanceMeasure.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PerformanceMeasure.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_213C4B3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_213C867F0();
  sub_213C861CC();
  v4 = sub_213C86808();
  return sub_213C4B470(a1, a2, v4);
}

unint64_t sub_213C4B440(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_213C86460();
  return sub_213C4B550(a1, v2);
}

unint64_t sub_213C4B470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_213C86748() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_213C86748() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_213C4B550(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_213C4BD44();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_213C8646C();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_213C8646C();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_213C4B658(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_213C4B3DC(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_213C60A98();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_213C61018(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_213C4B734@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_213C4B3DC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_213C608B4();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_213C3B0BC((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_213C611EC(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_213C4B824(uint64_t a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_213C4B3DC(a1, a2);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= result && (a3 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(double *)(v18[7] + 8 * v12) = a4;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= result && (a3 & 1) == 0)
    {
      result = (uint64_t)sub_213C60A98();
      goto LABEL_7;
    }
    sub_213C5FF3C(result, a3 & 1);
    result = sub_213C4B3DC(a1, a2);
    if ((v16 & 1) == (v19 & 1))
    {
      v12 = result;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_213C615A0(v12, a1, a2, v18, a4);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_213C8679C();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PerformanceMeasure()
{
  return objc_opt_self();
}

uint64_t method lookup function for PerformanceMeasure()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PerformanceMeasure.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of PerformanceMeasure.start(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of PerformanceMeasure.finish(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

_OWORD *sub_213C4B994(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_213C4B3DC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
        return sub_213C3B0BC(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_213C608B4();
      goto LABEL_7;
    }
    sub_213C5FC40(v15, a4 & 1);
    v21 = sub_213C4B3DC(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_213C615E8(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_213C8679C();
  __break(1u);
  return result;
}

uint64_t sub_213C4BAC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_213C4B3DC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_213C60E64();
      goto LABEL_7;
    }
    sub_213C605A0(v15, a4 & 1);
    v21 = sub_213C4B3DC(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_213C616CC(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_213C8679C();
  __break(1u);
  return result;
}

uint64_t sub_213C4BBF0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_213C4B3DC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= result && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7] + 168 * v12;
        v20 = *(_OWORD *)(a1 + 144);
        *(_OWORD *)(v19 + 128) = *(_OWORD *)(a1 + 128);
        *(_OWORD *)(v19 + 144) = v20;
        *(_QWORD *)(v19 + 160) = *(_QWORD *)(a1 + 160);
        v21 = *(_OWORD *)(a1 + 80);
        *(_OWORD *)(v19 + 64) = *(_OWORD *)(a1 + 64);
        *(_OWORD *)(v19 + 80) = v21;
        v22 = *(_OWORD *)(a1 + 112);
        *(_OWORD *)(v19 + 96) = *(_OWORD *)(a1 + 96);
        *(_OWORD *)(v19 + 112) = v22;
        v23 = *(_OWORD *)(a1 + 16);
        *(_OWORD *)v19 = *(_OWORD *)a1;
        *(_OWORD *)(v19 + 16) = v23;
        v24 = *(_OWORD *)(a1 + 48);
        *(_OWORD *)(v19 + 32) = *(_OWORD *)(a1 + 32);
        *(_OWORD *)(v19 + 48) = v24;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= result && (a4 & 1) == 0)
    {
      result = (uint64_t)sub_213C60C44();
      goto LABEL_7;
    }
    sub_213C60240(result, a4 & 1);
    result = sub_213C4B3DC(a2, a3);
    if ((v16 & 1) == (v25 & 1))
    {
      v12 = result;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_213C61650(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_213C8679C();
  __break(1u);
  return result;
}

unint64_t sub_213C4BD44()
{
  unint64_t result;

  result = qword_254D2DE58;
  if (!qword_254D2DE58)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D2DE58);
  }
  return result;
}

void static PFLTaskTargeting.ensureDNU()()
{
  sub_213C4BE34(1, (SEL *)&selRef_isDiagnosticSubmissionAllowed);
}

void static PFLTaskTargeting.ensureDeviceUnlocked()()
{
  void *v0;
  _BYTE *v1;
  int v2;

  sub_213C3A984();
  v0 = (void *)swift_allocError();
  *v1 = 33;
  v2 = MKBGetDeviceLockState();
  if (v2 != 3 && v2)
    swift_willThrow();
  else

}

void static PFLTaskTargeting.ensureIHA()()
{
  sub_213C4BE34(2, (SEL *)&selRef_isHealthDataSubmissionAllowed);
}

void sub_213C4BE34(char a1, SEL *a2)
{
  void *v4;
  _BYTE *v5;
  id v6;
  void *v7;
  unsigned int v8;

  sub_213C3A984();
  v4 = (void *)swift_allocError();
  *v5 = a1;
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, *a2);

    if (v8)
    else
      swift_willThrow();
  }
  else
  {
    __break(1u);
  }
}

ValueMetadata *type metadata accessor for PFLTaskTargeting()
{
  return &type metadata for PFLTaskTargeting;
}

void sub_213C4BEF0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, double a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double v22;
  double v23;
  void (*v24)(char *, uint64_t);
  _BYTE *v25;
  id v26;
  void *v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;

  v40 = a4;
  v9 = sub_213C85ECC();
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v29 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v29 - v12;
  v33 = 0;
  v34 = 0xE000000000000000;
  sub_213C8652C();
  swift_bridgeObjectRelease();
  v33 = 0xD000000000000010;
  v34 = 0x8000000213C8E4C0;
  *(_QWORD *)&v32[0] = a1;
  *((_QWORD *)&v32[0] + 1) = a2;
  v38 = 46;
  v39 = 0xE100000000000000;
  v36 = 95;
  v37 = 0xE100000000000000;
  sub_213C3B020();
  sub_213C864B4();
  sub_213C861F0();
  swift_bridgeObjectRelease();
  sub_213C861F0();
  *(_QWORD *)&v32[0] = a3;
  *((_QWORD *)&v32[0] + 1) = v40;
  v38 = 46;
  v39 = 0xE100000000000000;
  v36 = 95;
  v37 = 0xE100000000000000;
  sub_213C864B4();
  sub_213C861F0();
  swift_bridgeObjectRelease();
  v14 = v33;
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_standardUserDefaults);
  v17 = (void *)sub_213C86124();
  v18 = objc_msgSend(v16, sel_valueForKey_, v17);

  v40 = v14;
  if (v18)
  {
    sub_213C864C0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v32, 0, sizeof(v32));
  }
  v20 = v30;
  v19 = v31;
  sub_213C4C4D0((uint64_t)v32, (uint64_t)&v33);
  if (v35)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_213C85EC0();
      v21 = v29;
      sub_213C85E9C();
      sub_213C85E90();
      v23 = v22;
      v24 = *(void (**)(char *, uint64_t))(v20 + 8);
      v24(v21, v19);
      v24(v13, v19);
      if (v23 <= a5)
      {
        swift_bridgeObjectRelease();
        sub_213C3A984();
        swift_allocError();
        *v25 = 50;
        swift_willThrow();
        return;
      }
    }
  }
  else
  {
    sub_213C34FD8((uint64_t)&v33);
  }
  v26 = objc_msgSend(v15, sel_standardUserDefaults);
  sub_213C85EC0();
  sub_213C85EA8();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v19);
  v27 = (void *)sub_213C86364();
  v28 = (void *)sub_213C86124();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_setValue_forKey_, v27, v28);

}

void sub_213C4C2A8()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  _OWORD v10[2];
  _QWORD v11[4];
  uint64_t v12;
  unint64_t v13;

  v11[0] = 0xD000000000000013;
  v11[1] = 0x8000000213C8DE50;
  sub_213C861F0();
  sub_213C861F0();
  sub_213C861F0();
  *(_QWORD *)&v10[0] = 46;
  *((_QWORD *)&v10[0] + 1) = 0xE100000000000000;
  v12 = 95;
  v13 = 0xE100000000000000;
  v9 = sub_213C3B020();
  v8 = MEMORY[0x24BEE0D00];
  sub_213C864B4();
  swift_bridgeObjectRelease();
  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_standardUserDefaults, v8, v9, v9, v9, v10[0]);
  v2 = (void *)sub_213C86124();
  v3 = objc_msgSend(v1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_213C864C0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_213C4C4D0((uint64_t)v10, (uint64_t)v11);
  if (v11[3])
  {
    if (swift_dynamicCast())
    {
      v4 = v12;
      goto LABEL_9;
    }
  }
  else
  {
    sub_213C34FD8((uint64_t)v11);
  }
  v4 = 0;
LABEL_9:
  if (__OFADD__(v4, 1))
  {
    __break(1u);
  }
  else
  {
    v5 = objc_msgSend(v0, sel_standardUserDefaults);
    v6 = (void *)sub_213C86370();
    v7 = (void *)sub_213C86124();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setValue_forKey_, v6, v7);

  }
}

uint64_t sub_213C4C4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_213C4C518(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  unint64_t result;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = *(_QWORD *)(a1 + 16);
  v40 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v40;
  v2 = a1;
  v41 = MEMORY[0x24BEE4AF8];
  sub_213C54798(0, v1, 0);
  v40 = v41;
  result = sub_213C54858(v2);
  v5 = 0;
  v6 = v2 + 64;
  v27 = v2 + 80;
  v28 = v1;
  v29 = v4;
  v30 = v2 + 64;
  v31 = v2;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(_BYTE *)(v2 + 32))
  {
    v9 = result >> 6;
    if ((*(_QWORD *)(v6 + 8 * (result >> 6)) & (1 << result)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v2 + 36) != v4)
      goto LABEL_24;
    v32 = v5;
    v33 = 1 << result;
    v10 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * result);
    v37 = *v10;
    v39 = v10[1];
    v11 = *(_QWORD *)(v2 + 56) + 88 * result;
    v12 = *(_DWORD *)v11;
    v13 = *(_QWORD *)(v11 + 8);
    v14 = *(_QWORD *)(v11 + 24);
    v35 = *(_QWORD *)(v11 + 32);
    v36 = *(_QWORD *)(v11 + 16);
    v16 = *(_QWORD *)(v11 + 40);
    v15 = *(_QWORD *)(v11 + 48);
    v38 = v15;
    v17 = *(_QWORD *)(v11 + 56);
    v18 = *(_BYTE *)(v11 + 64);
    v34 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_213C3B198(v15, v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_213C3B198(v15, v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213C45164(v15, v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_213C3B198(v15, v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213C45164(v15, v17, v18);
    result = swift_bridgeObjectRelease();
    v20 = *(_QWORD *)(v41 + 16);
    v19 = *(_QWORD *)(v41 + 24);
    if (v20 >= v19 >> 1)
      result = sub_213C54798(v19 > 1, v20 + 1, 1);
    *(_QWORD *)(v41 + 16) = v20 + 1;
    v21 = v41 + 88 * v20;
    *(_DWORD *)(v21 + 32) = v12;
    *(_QWORD *)(v21 + 40) = v13;
    *(_QWORD *)(v21 + 48) = v36;
    *(_QWORD *)(v21 + 56) = v14;
    *(_QWORD *)(v21 + 64) = v35;
    *(_QWORD *)(v21 + 72) = v16;
    *(_QWORD *)(v21 + 80) = v38;
    *(_QWORD *)(v21 + 88) = v17;
    *(_BYTE *)(v21 + 96) = v18;
    *(_QWORD *)(v21 + 104) = v37;
    *(_QWORD *)(v21 + 112) = v39;
    v7 = 1 << *(_BYTE *)(v31 + 32);
    if (v34 >= v7)
      goto LABEL_25;
    v6 = v30;
    v22 = *(_QWORD *)(v30 + 8 * v9);
    if ((v22 & v33) == 0)
      goto LABEL_26;
    v2 = v31;
    v4 = v29;
    if (*(_DWORD *)(v31 + 36) != v29)
      goto LABEL_27;
    v23 = v22 & (-2 << (v34 & 0x3F));
    if (v23)
    {
      v7 = __clz(__rbit64(v23)) | v34 & 0xFFFFFFFFFFFFFFC0;
      v8 = v28;
    }
    else
    {
      v24 = v9 + 1;
      v25 = (unint64_t)(v7 + 63) >> 6;
      v8 = v28;
      if (v9 + 1 < v25)
      {
        v26 = *(_QWORD *)(v30 + 8 * v24);
        if (v26)
        {
LABEL_20:
          v7 = __clz(__rbit64(v26)) + (v24 << 6);
        }
        else
        {
          while (v25 - 2 != v9)
          {
            v26 = *(_QWORD *)(v27 + 8 * v9++);
            if (v26)
            {
              v24 = v9 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v5 = v32 + 1;
    result = v7;
    if (v32 + 1 == v8)
      return v40;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_213C4C908(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v3 + 32) = a2;
  v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 40) = v5;
  *v5 = v3;
  v5[1] = sub_213C4C970;
  return v7(a1);
}

uint64_t sub_213C4C970()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213C4C9DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v3 + 32) = a2;
  v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 40) = v5;
  *v5 = v3;
  v5[1] = sub_213C4CA44;
  return v7(a1);
}

uint64_t sub_213C4CA44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213C4CAB0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  os_log_type_t type;

  if (qword_254D2D960 != -1)
    swift_once();
  v1 = *(void **)(v0 + 32);
  v2 = *(void **)(v0 + 48);
  v3 = sub_213C86094();
  __swift_project_value_buffer(v3, (uint64_t)qword_254D2FF28);
  v4 = v2;
  v5 = v1;
  v6 = v2;
  v7 = v1;
  v8 = sub_213C8607C();
  v9 = sub_213C86400();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void **)(v0 + 48);
  v12 = *(void **)(v0 + 32);
  if (v10)
  {
    type = v9;
    v13 = swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412546;
    v15 = v11;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v16;
    sub_213C86490();
    *v14 = v16;

    *(_WORD *)(v13 + 12) = 2112;
    v17 = v12;
    v18 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v18;
    sub_213C86490();
    v14[1] = v18;

    _os_log_impl(&dword_213C25000, v8, type, "Override error: %@ -> with %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v14, -1, -1);
    MEMORY[0x2199C0A30](v13, -1, -1);
  }
  else
  {

  }
  v19 = *(void **)(v0 + 48);
  v20 = *(void **)(v0 + 32);
  swift_willThrow();

  v21 = v20;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C4CD0C(_QWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE v7[24];
  uint64_t v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_213C86838();
  if ((a4 & 1) != 0)
  {
    v9 = a2;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0);
    sub_213C559E4(&qword_254D2E998, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_213C86778();
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    sub_213C8676C();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t sub_213C4CE18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_213C548E0(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_213C4CE48(_QWORD *a1)
{
  uint64_t v1;

  return sub_213C4CD0C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

BOOL sub_213C4CE64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_213C4CE78()
{
  sub_213C867F0();
  sub_213C867FC();
  return sub_213C86808();
}

uint64_t sub_213C4CEBC()
{
  return sub_213C867FC();
}

uint64_t sub_213C4CEE4()
{
  sub_213C867F0();
  sub_213C867FC();
  return sub_213C86808();
}

uint64_t sub_213C4CF24()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213C4CF50
                                                            + 4 * asc_213C88A90[*v0]))(0x796C707061, 0xE500000000000000);
}

uint64_t sub_213C4CF50()
{
  return 28783;
}

uint64_t sub_213C4CF5C()
{
  return 1752457584;
}

uint64_t sub_213C4CF6C()
{
  return 0x65756C6176;
}

uint64_t sub_213C4CF7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213C54AC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213C4CFA0()
{
  return 0;
}

void sub_213C4CFAC(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_213C4CFB8()
{
  sub_213C56C60();
  return sub_213C86850();
}

uint64_t sub_213C4CFE0()
{
  sub_213C56C60();
  return sub_213C8685C();
}

uint64_t sub_213C4D008(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v11[23];
  char v12;
  _BYTE v13[24];
  _BYTE v14[8];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2EB50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_213C56C60();
  sub_213C86844();
  sub_213C3B0F4(v3, (uint64_t)v14, &qword_254D2EB58);
  sub_213C3B0F4((uint64_t)v14, (uint64_t)v11, &qword_254D2EB58);
  v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2EB38);
  sub_213C56CE8(&qword_254D2EB60, &qword_254D2EB38, (uint64_t (*)(void))sub_213C557B0, MEMORY[0x24BEE12A0]);
  sub_213C866DC();
  if (!v2)
  {
    v11[0] = 1;
    sub_213C866D0();
    v11[0] = 2;
    sub_213C866D0();
    sub_213C3B0F4(v3 + 40, (uint64_t)v13, &qword_254D2EB68);
    sub_213C3B0F4((uint64_t)v13, (uint64_t)v11, &qword_254D2EB68);
    v12 = 3;
    sub_213C56D4C();
    sub_213C866DC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_213C4D208@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  _OWORD v7[2];

  sub_213C54C44(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_213C4D250(_QWORD *a1)
{
  return sub_213C4D008(a1);
}

uint64_t sub_213C4D290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unsigned int v9;
  float v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t inited;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  char v42;
  uint64_t v44;
  unint64_t v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  void *v52;
  unsigned int v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  void *v69;
  _BYTE *v70;
  char v71;
  os_log_type_t type;
  void *v73;
  unint64_t v74;
  size_t v75[2];
  __int128 v76;
  _BYTE v77[32];
  __int128 v78;
  uint64_t v79;
  id v80;
  uint64_t v81[3];
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  _OWORD v85[2];
  uint64_t v86;

  v5 = v3;
  v86 = *MEMORY[0x24BDAC8D0];
  v9 = sub_213C6F610(16777217);
  v10 = *(float *)v5;
  if (*(float *)v5 < (float)((float)((float)v9 * 0.000000059605) + 0.0))
  {
    if (qword_254D2D960 != -1)
      swift_once();
    v11 = sub_213C86094();
    __swift_project_value_buffer(v11, (uint64_t)qword_254D2FF28);
    sub_213C558C4(v5);
    sub_213C558C4(v5);
    v12 = sub_213C8607C();
    v13 = sub_213C863F4();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v81[0] = v15;
      *(_DWORD *)v14 = 134218242;
      *(double *)v75 = v10;
      sub_213C86490();
      *(_WORD *)(v14 + 12) = 2080;
      v16 = *(_OWORD *)(v5 + 48);
      *(_OWORD *)v77 = *(_OWORD *)(v5 + 32);
      *(_OWORD *)&v77[16] = v16;
      v78 = *(_OWORD *)(v5 + 64);
      v79 = *(_QWORD *)(v5 + 80);
      v17 = *(_OWORD *)(v5 + 16);
      *(_OWORD *)v75 = *(_OWORD *)v5;
      v76 = v17;
      sub_213C558C4(v5);
      v18 = sub_213C86178();
      v75[0] = sub_213C42558(v18, v19, v81);
      sub_213C86490();
      swift_bridgeObjectRelease();
      sub_213C55940(v5);
      sub_213C55940(v5);
      _os_log_impl(&dword_213C25000, v12, v13, "Recipe targeting failed to target by sampling rate %f for recipe %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v15, -1, -1);
      MEMORY[0x2199C0A30](v14, -1, -1);
    }
    else
    {
      sub_213C55940(v5);
      sub_213C55940(v5);
    }

    sub_213C3A984();
    swift_allocError();
    v42 = 18;
LABEL_16:
    *v41 = v42;
    return swift_willThrow();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213C888E0;
  *(_QWORD *)(inited + 32) = 0x5F65636976656424;
  *(_QWORD *)(inited + 40) = 0xEA0000000000736FLL;
  v75[0] = 256;
  v21 = sub_213C862B0();
  *(_QWORD *)(v21 + 16) = 256;
  *(_OWORD *)(v21 + 48) = 0u;
  *(_OWORD *)(v21 + 64) = 0u;
  *(_OWORD *)(v21 + 80) = 0u;
  *(_OWORD *)(v21 + 96) = 0u;
  *(_OWORD *)(v21 + 112) = 0u;
  *(_OWORD *)(v21 + 128) = 0u;
  *(_OWORD *)(v21 + 144) = 0u;
  *(_OWORD *)(v21 + 160) = 0u;
  *(_OWORD *)(v21 + 176) = 0u;
  *(_OWORD *)(v21 + 192) = 0u;
  *(_OWORD *)(v21 + 208) = 0u;
  *(_OWORD *)(v21 + 224) = 0u;
  *(_OWORD *)(v21 + 240) = 0u;
  *(_OWORD *)(v21 + 256) = 0u;
  *(_OWORD *)(v21 + 272) = 0u;
  *(_OWORD *)(v21 + 32) = 0u;
  sysctlbyname("kern.osversion", (void *)(v21 + 32), v75, 0, 0);
  v22 = sub_213C3AFD8(v21);
  v24 = v23;
  swift_bridgeObjectRelease();
  v25 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v22;
  *(_QWORD *)(inited + 56) = v24;
  *(_QWORD *)(inited + 72) = v25;
  strcpy((char *)(inited + 80), "$device_type");
  *(_BYTE *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  sub_213C48674();
  *(_QWORD *)(inited + 96) = v26;
  *(_QWORD *)(inited + 104) = v27;
  *(_QWORD *)(inited + 120) = v25;
  strcpy((char *)(inited + 128), "$dodml_dataset");
  *(_QWORD *)(inited + 168) = v25;
  *(_BYTE *)(inited + 143) = -18;
  *(_QWORD *)(inited + 144) = a1;
  *(_QWORD *)(inited + 152) = a2;
  swift_bridgeObjectRetain();
  v28 = sub_213C3BB4C(inited);
  v29 = sub_213C7ECA8(a3);
  sub_213C36AAC(v29, v28);
  sub_213C85C80();
  swift_allocObject();
  sub_213C85C74();
  v30 = *(_OWORD *)(v5 + 24);
  v83 = *(_OWORD *)(v5 + 8);
  v84 = v30;
  v85[0] = *(_OWORD *)(v5 + 40);
  *(_OWORD *)((char *)v85 + 9) = *(_OWORD *)(v5 + 49);
  v31 = *(_OWORD *)(v5 + 24);
  *(_OWORD *)v75 = *(_OWORD *)(v5 + 8);
  v76 = v31;
  *(_OWORD *)v77 = *(_OWORD *)(v5 + 40);
  *(_OWORD *)&v77[9] = *(_OWORD *)(v5 + 49);
  sub_213C557F4((uint64_t)&v83);
  sub_213C557B0();
  v32 = sub_213C85C68();
  if (v4)
  {
    swift_bridgeObjectRelease();
    swift_release();

    sub_213C5585C((uint64_t)&v83);
LABEL_8:
    if (qword_254D2D960 != -1)
      swift_once();
    v34 = sub_213C86094();
    __swift_project_value_buffer(v34, (uint64_t)qword_254D2FF28);
    sub_213C558C4(v5);
    sub_213C558C4(v5);
    v35 = sub_213C8607C();
    v36 = sub_213C86400();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v81[0] = v38;
      *(_DWORD *)v37 = 136315138;
      *(_OWORD *)v75 = v83;
      v76 = v84;
      *(_OWORD *)v77 = v85[0];
      *(_OWORD *)&v77[9] = *(_OWORD *)((char *)v85 + 9);
      sub_213C557F4((uint64_t)&v83);
      v39 = sub_213C86178();
      v75[0] = sub_213C42558(v39, v40, v81);
      sub_213C86490();
      swift_bridgeObjectRelease();
      sub_213C55940(v5);
      sub_213C55940(v5);
      _os_log_impl(&dword_213C25000, v35, v36, "Failed to parse predicate %s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v38, -1, -1);
      MEMORY[0x2199C0A30](v37, -1, -1);
    }
    else
    {
      sub_213C55940(v5);
      sub_213C55940(v5);
    }

    sub_213C3A984();
    swift_allocError();
    v42 = 19;
    goto LABEL_16;
  }
  v44 = v32;
  v45 = v33;
  sub_213C5585C((uint64_t)&v83);
  swift_release();
  v46 = (void *)objc_opt_self();
  v47 = (void *)sub_213C85E48();
  v80 = 0;
  v48 = objc_msgSend(v46, sel_JSONObjectWithData_options_error_, v47, 4, &v80);

  v49 = v80;
  if (!v48)
  {
    v68 = v49;
    v69 = (void *)sub_213C85D34();

    swift_willThrow();
    sub_213C3B078(v44, v45);
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v74 = v45;
  sub_213C864C0();
  swift_unknownObjectRelease();
  sub_213C3B0BC(v75, v81);
  v50 = (void *)objc_opt_self();
  __swift_project_boxed_opaque_existential_0Tm(v81, v82);
  v51 = sub_213C8673C();
  v52 = (void *)sub_213C860B8();
  v53 = objc_msgSend(v50, sel_evaluatePredicate_onObj_, v51, v52);
  swift_unknownObjectRelease();

  if (qword_254D2D960 != -1)
    swift_once();
  v54 = sub_213C86094();
  __swift_project_value_buffer(v54, (uint64_t)qword_254D2FF28);
  sub_213C558C4(v5);
  sub_213C558C4(v5);
  sub_213C558C4(v5);
  sub_213C558C4(v5);
  swift_bridgeObjectRetain();
  v55 = sub_213C8607C();
  v56 = sub_213C863F4();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = swift_slowAlloc();
    v73 = (void *)swift_slowAlloc();
    v80 = v73;
    *(_DWORD *)v57 = 67109890;
    v71 = v53;
    LODWORD(v75[0]) = v53;
    sub_213C86490();
    *(_WORD *)(v57 + 8) = 2080;
    type = v56;
    *(_OWORD *)v75 = v83;
    v76 = v84;
    *(_OWORD *)v77 = v85[0];
    *(_OWORD *)&v77[9] = *(_OWORD *)((char *)v85 + 9);
    sub_213C557F4((uint64_t)&v83);
    v58 = sub_213C86178();
    v75[0] = sub_213C42558(v58, v59, (uint64_t *)&v80);
    sub_213C86490();
    swift_bridgeObjectRelease();
    sub_213C55940(v5);
    sub_213C55940(v5);
    *(_WORD *)(v57 + 18) = 2080;
    swift_bridgeObjectRetain();
    v60 = sub_213C860D0();
    v62 = v61;
    swift_bridgeObjectRelease();
    v75[0] = sub_213C42558(v60, v62, (uint64_t *)&v80);
    sub_213C86490();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 28) = 2080;
    v63 = *(_OWORD *)(v5 + 48);
    *(_OWORD *)v77 = *(_OWORD *)(v5 + 32);
    *(_OWORD *)&v77[16] = v63;
    v78 = *(_OWORD *)(v5 + 64);
    v79 = *(_QWORD *)(v5 + 80);
    v64 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)v75 = *(_OWORD *)v5;
    v76 = v64;
    sub_213C558C4(v5);
    v65 = sub_213C86178();
    v75[0] = sub_213C42558(v65, v66, (uint64_t *)&v80);
    sub_213C86490();
    swift_bridgeObjectRelease();
    sub_213C55940(v5);
    sub_213C55940(v5);
    _os_log_impl(&dword_213C25000, v55, type, "Recipe targeting %{BOOL}d, predicate: %s, subject: %s, recipe: %s", (uint8_t *)v57, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v73, -1, -1);
    MEMORY[0x2199C0A30](v57, -1, -1);

    v67 = v74;
    if ((v71 & 1) != 0)
      goto LABEL_26;
    goto LABEL_25;
  }
  sub_213C55940(v5);
  sub_213C55940(v5);
  swift_bridgeObjectRelease_n();
  sub_213C55940(v5);
  sub_213C55940(v5);

  v67 = v74;
  if ((v53 & 1) == 0)
  {
LABEL_25:
    sub_213C3A984();
    swift_allocError();
    *v70 = 20;
    swift_willThrow();
  }
LABEL_26:
  sub_213C3B078(v44, v67);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
}

uint64_t sub_213C4DD90(char *a1, char *a2)
{
  return sub_213C7F764(*a1, *a2);
}

uint64_t sub_213C4DD9C()
{
  sub_213C867F0();
  sub_213C861CC();
  swift_bridgeObjectRelease();
  return sub_213C86808();
}

uint64_t sub_213C4DE2C()
{
  sub_213C867F0();
  sub_213C861CC();
  swift_bridgeObjectRelease();
  return sub_213C86808();
}

void sub_213C4DEE0(char a1)
{
  sub_213C867F0();
  __asm { BR              X10 }
}

uint64_t sub_213C4DF30()
{
  sub_213C861CC();
  swift_bridgeObjectRelease();
  return sub_213C86808();
}

uint64_t sub_213C4DFCC()
{
  sub_213C861CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C4E038()
{
  sub_213C867F0();
  sub_213C861CC();
  swift_bridgeObjectRelease();
  return sub_213C86808();
}

uint64_t sub_213C4E0C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 v9;
  _BYTE v11[16];
  __int128 v12;
  __int128 v13;
  _OWORD v14[2];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E988);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_213C55728();
  sub_213C86844();
  v9 = *(_OWORD *)(v3 + 24);
  v12 = *(_OWORD *)(v3 + 8);
  v13 = v9;
  v14[0] = *(_OWORD *)(v3 + 40);
  *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)(v3 + 49);
  v11[15] = 0;
  sub_213C557B0();
  sub_213C8670C();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_213C866F4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_213C4E204(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;

  v10[1] = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E968);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_213C556E4();
  sub_213C86844();
  v13 = 0;
  sub_213C86700();
  if (!v3)
  {
    v12 = 1;
    sub_213C86700();
    v11 = 2;
    sub_213C86700();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_213C4E350(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E950);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_213C556A0();
  sub_213C86844();
  v8[15] = 0;
  sub_213C866E8();
  if (!v1)
  {
    v8[14] = 1;
    sub_213C866E8();
    v8[13] = 2;
    sub_213C866E8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_213C4E48C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_213C86628();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_213C4E4E8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x7461636964657270;
  if (*v1)
    v2 = 0x676E696C706D6173;
  v3 = 0xE900000000000065;
  if (*v1)
    v3 = 0xED0000657461725FLL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_213C4E538()
{
  _BYTE *v0;

  if (*v0)
    return 0x676E696C706D6173;
  else
    return 0x7461636964657270;
}

uint64_t sub_213C4E584@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_213C86628();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_213C4E5E4(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_213C4E5F0()
{
  sub_213C55728();
  return sub_213C86850();
}

uint64_t sub_213C4E618()
{
  sub_213C55728();
  return sub_213C8685C();
}

double sub_213C4E640@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  uint64_t v8;

  sub_213C54FB8(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_QWORD *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_213C4E698(_QWORD *a1)
{
  return sub_213C4E0C4(a1);
}

uint64_t sub_213C4E6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_213C4D290(a1, a2, a3);
}

uint64_t sub_213C4E6F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_213C4E720(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_213C7F818(*a1, *a2);
}

uint64_t sub_213C4E72C()
{
  sub_213C867F0();
  sub_213C861CC();
  swift_bridgeObjectRelease();
  return sub_213C86808();
}

uint64_t sub_213C4E7E0()
{
  sub_213C861CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C4E870()
{
  sub_213C867F0();
  sub_213C861CC();
  swift_bridgeObjectRelease();
  return sub_213C86808();
}

uint64_t sub_213C4E920@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_213C55428();
  *a1 = result;
  return result;
}

void sub_213C4E954(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;

  v2 = *v1;
  v3 = 0x8000000213C8DAB0;
  v4 = 0xEC00000073646E6FLL;
  v5 = 0x6365735F656D6974;
  if (v2 != 1)
  {
    v5 = 0x635F657069636572;
    v4 = 0xEC000000746E756FLL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0xD000000000000011;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_213C4E9C8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6365735F656D6974;
  if (*v0 != 1)
    v1 = 0x635F657069636572;
  if (*v0)
    return v1;
  else
    return 0xD000000000000011;
}

uint64_t sub_213C4EA38@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_213C55428();
  *a1 = result;
  return result;
}

void sub_213C4EA64(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_213C4EA70()
{
  sub_213C556E4();
  return sub_213C86850();
}

uint64_t sub_213C4EA98()
{
  sub_213C556E4();
  return sub_213C8685C();
}

uint64_t sub_213C4EAC0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_213C552B0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_213C4EAEC(_QWORD *a1)
{
  uint64_t *v1;

  return sub_213C4E204(a1, *v1, v1[1]);
}

uint64_t sub_213C4EB08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_213C7F944(*a1, *a2);
}

uint64_t sub_213C4EB14()
{
  return sub_213C4DE2C();
}

uint64_t sub_213C4EB1C()
{
  sub_213C861CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C4EBAC()
{
  return sub_213C69224();
}

uint64_t sub_213C4EBB4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_213C55428();
  *a1 = result;
  return result;
}

void sub_213C4EBE8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEE00746E65746E6FLL;
  v4 = 0x8000000213C8DAF0;
  v5 = 0xD000000000000010;
  if (v2 != 1)
  {
    v5 = 0xD000000000000019;
    v4 = 0x8000000213C8DB10;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x635F7963696C6F70;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_213C4EC5C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 0xD000000000000019;
  if (*v0)
    return v1;
  else
    return 0x635F7963696C6F70;
}

uint64_t sub_213C4ECCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_213C55428();
  *a1 = result;
  return result;
}

uint64_t sub_213C4ECF8()
{
  sub_213C556A0();
  return sub_213C86850();
}

uint64_t sub_213C4ED20()
{
  sub_213C556A0();
  return sub_213C8685C();
}

double sub_213C4ED48@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_213C5546C(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_213C4ED88(_QWORD *a1)
{
  return sub_213C4E350(a1);
}

void sub_213C4ED9C(char *a1)
{
  sub_213C7FD50(*a1);
}

void sub_213C4EDA8()
{
  char *v0;

  sub_213C4DEE0(*v0);
}

void sub_213C4EDB0()
{
  __asm { BR              X10 }
}

uint64_t sub_213C4EDEC()
{
  sub_213C861CC();
  return swift_bridgeObjectRelease();
}

void sub_213C4EE74(uint64_t a1)
{
  char *v1;

  sub_213C69014(a1, *v1);
}

uint64_t sub_213C4EE7C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_213C56C18();
  *a1 = result;
  return result;
}

uint64_t sub_213C4EEA8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_213C4EED8 + 4 * byte_213C88A9E[*v0]))();
}

void sub_213C4EED8(_QWORD *a1@<X8>)
{
  *a1 = 1953722216;
  a1[1] = 0xE400000000000000;
}

void sub_213C4EEEC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "return_routes");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_213C4EF14(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x8000000213C8DB50;
}

void sub_213C4EF34(char *a1@<X8>)
{
  strcpy(a1, "policy_signing");
  a1[15] = -18;
}

uint64_t sub_213C4EF5C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213C4EF8C + 4 * byte_213C88AA3[*v0]))(0x73657069636572, 0xE700000000000000);
}

uint64_t sub_213C4EF8C()
{
  return 1953722216;
}

uint64_t sub_213C4EF9C()
{
  return 0x725F6E7275746572;
}

unint64_t sub_213C4EFC0()
{
  return 0xD000000000000011;
}

uint64_t sub_213C4EFDC()
{
  return 0x735F7963696C6F70;
}

uint64_t sub_213C4F000@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_213C56C18();
  *a1 = result;
  return result;
}

void sub_213C4F024(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_213C4F030()
{
  sub_213C538EC();
  return sub_213C86850();
}

uint64_t sub_213C4F058()
{
  sub_213C538EC();
  return sub_213C8685C();
}

uint64_t sub_213C4F080(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E900);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 120) = 0;
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_213C538EC();
  sub_213C8682C();
  if (v2)
  {
    type metadata accessor for DodMLPolicy();
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E910);
    v19 = 0;
    sub_213C53930();
    sub_213C866AC();
    v8 = sub_213C4C518(v15);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v15 = v8;
    sub_213C43EC4();
    *(_QWORD *)(v1 + 16) = v15;
    LOBYTE(v15) = 1;
    *(_QWORD *)(v1 + 24) = sub_213C86670();
    *(_QWORD *)(v1 + 32) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0);
    v19 = 2;
    sub_213C559E4(&qword_254D2E928, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_213C866AC();
    *(_QWORD *)(v1 + 40) = v15;
    v19 = 3;
    sub_213C547D0();
    sub_213C866AC();
    v10 = v16;
    *(_OWORD *)(v1 + 48) = v15;
    *(_QWORD *)(v1 + 64) = v10;
    v19 = 4;
    sub_213C54814();
    sub_213C866AC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v12 = v16;
    v13 = v17;
    v14 = v18;
    *(_OWORD *)(v1 + 72) = v15;
    *(_OWORD *)(v1 + 88) = v12;
    *(_QWORD *)(v1 + 104) = v13;
    *(_QWORD *)(v1 + 112) = v14;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

void sub_213C4F3A8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(v1 + 120);
  v4 = *(_QWORD *)(v1 + 16);
  if (v3 >= *(_QWORD *)(v4 + 16))
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else if (v3 < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 + 88 * v3;
    v16 = *(_QWORD *)(v5 + 104);
    v17 = *(_QWORD *)(v5 + 112);
    v7 = *(_QWORD *)(v5 + 80);
    v6 = *(_QWORD *)(v5 + 88);
    v9 = *(_QWORD *)(v5 + 64);
    v8 = *(_QWORD *)(v5 + 72);
    v10 = *(_QWORD *)(v5 + 48);
    v11 = *(_QWORD *)(v5 + 56);
    v12 = *(_QWORD *)(v5 + 40);
    v13 = *(_DWORD *)(v5 + 32);
    v14 = *(_BYTE *)(v5 + 96);
    *(_QWORD *)(v1 + 120) = v3 + 1;
    *(_QWORD *)(a1 + 24) = &type metadata for DodMLRecipeDescriptor;
    *(_QWORD *)(a1 + 32) = &off_24D0D8820;
    v15 = swift_allocObject();
    *(_QWORD *)a1 = v15;
    *(_DWORD *)(v15 + 16) = v13;
    *(_QWORD *)(v15 + 24) = v12;
    *(_QWORD *)(v15 + 32) = v10;
    *(_QWORD *)(v15 + 40) = v11;
    *(_QWORD *)(v15 + 48) = v9;
    *(_QWORD *)(v15 + 56) = v8;
    *(_QWORD *)(v15 + 64) = v7;
    *(_QWORD *)(v15 + 72) = v6;
    *(_BYTE *)(v15 + 80) = v14;
    *(_QWORD *)(v15 + 88) = v16;
    *(_QWORD *)(v15 + 96) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_213C3B198(v7, v6, v14);
    swift_bridgeObjectRetain();
  }
}

uint64_t sub_213C4F4EC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  unsigned int v23;
  unint64_t v24;
  char *v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v2 = v0;
  v3 = sub_213C8616C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[13];
  v8 = v2[14];
  type metadata accessor for PFLDodMLTaskValidator();
  swift_allocObject();
  swift_bridgeObjectRetain();
  result = sub_213C7E998(v7, v8);
  if (!v1)
  {
    v10 = result;
    swift_bridgeObjectRetain();
    sub_213C86160();
    v11 = sub_213C86154();
    v13 = v12;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v14 = sub_213C3A984();
    v16 = (void *)swift_allocError();
    if (v13 >> 60 == 15)
    {
      *v15 = 7;
      swift_willThrow();
    }
    else
    {
      v27 = v14;
      *v15 = 8;
      v17 = *(void **)(v10 + 16);
      swift_bridgeObjectRetain();
      v18 = v17;
      v29 = v10;
      v19 = v18;
      v20 = (void *)sub_213C86124();
      v21 = sub_213C85E48();
      v28 = v13;
      v22 = (void *)v21;
      v23 = objc_msgSend(v19, sel_validateBase64Signature_data_, v20, v21);
      swift_bridgeObjectRelease();

      if (v23)
      {
        v24 = v28;

        if (*(_QWORD *)(v2[2] + 16))
        {
          if ((uint64_t)v2[8] > 0)
          {
            sub_213C3B064(v11, v24);
            return swift_release();
          }
          swift_allocError();
          v26 = 17;
        }
        else
        {
          swift_allocError();
          v26 = 16;
        }
        *v25 = v26;
        swift_willThrow();
        sub_213C3B064(v11, v24);
      }
      else
      {
        swift_willThrow();
        sub_213C3B064(v11, v28);
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_213C4F790()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DodMLPolicy()
{
  return objc_opt_self();
}

uint64_t sub_213C4F814(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2EA78);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_213C538EC();
  sub_213C86844();
  *(_QWORD *)&v14 = *(_QWORD *)(v3 + 16);
  v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2EA80);
  sub_213C56CE8(&qword_254D2EA88, &qword_254D2EA80, (uint64_t (*)(void))sub_213C55F00, MEMORY[0x24BEE12A0]);
  sub_213C8670C();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    swift_bridgeObjectRetain();
    sub_213C866E8();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v14 = *(_QWORD *)(v3 + 40);
    v18 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0);
    sub_213C559E4(&qword_254D2E998, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_213C8670C();
    v10 = *(_QWORD *)(v3 + 64);
    v14 = *(_OWORD *)(v3 + 48);
    *(_QWORD *)&v15 = v10;
    v18 = 3;
    sub_213C55F44();
    sub_213C8670C();
    v11 = *(_OWORD *)(v3 + 88);
    v12 = *(_QWORD *)(v3 + 104);
    v13 = *(_QWORD *)(v3 + 112);
    v14 = *(_OWORD *)(v3 + 72);
    v15 = v11;
    v16 = v12;
    v17 = v13;
    v18 = 4;
    sub_213C55F88();
    sub_213C8670C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_213C4FA9C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for DodMLPolicy();
  v5 = swift_allocObject();
  result = sub_213C4F080(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_213C4FAF0(_QWORD *a1)
{
  return sub_213C4F814(a1);
}

uint64_t sub_213C4FB10()
{
  return sub_213C4F4EC();
}

uint64_t sub_213C4FB30()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 64);
}

uint64_t sub_213C4FB3C()
{
  uint64_t v0;

  v0 = sub_213C5F490();
  swift_release();
  return v0;
}

_QWORD *sub_213C4FB70(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_213C35590(a1, a2, a3);
}

uint64_t sub_213C4FB90()
{
  type metadata accessor for DodMLPolicy();
  return sub_213C86268();
}

void sub_213C4FBF4(uint64_t a1@<X8>)
{
  sub_213C4F3A8(a1);
}

uint64_t sub_213C4FC14(__int128 *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;

  v3 = v2;
  v43 = a2;
  v5 = sub_213C85F2C();
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_213C85F8C();
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v35 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_213C8640C();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v10);
  v12 = sub_213C860AC();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_213C86418();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = *a1;
  v17 = *((_QWORD *)a1 + 2);
  v40 = *((_QWORD *)a1 + 3);
  v41 = v17;
  sub_213C56020();
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE5758], v13);
  sub_213C860A0();
  v48 = MEMORY[0x24BEE4AF8];
  sub_213C3B630(&qword_254D2EAB0, 255, v11, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2EAB8);
  sub_213C5605C(&qword_254D2EAC0, &qword_254D2EAB8, MEMORY[0x24BEE12C8]);
  sub_213C864D8();
  *(_QWORD *)(v2 + 16) = sub_213C86424();
  v18 = v35;
  sub_213C85F5C();
  v20 = v36;
  v19 = v37;
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v7, *MEMORY[0x24BDCEBA8], v37);
  sub_213C85EFC();
  v21 = sub_213C85F08();
  v23 = v22;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v19);
  v24 = sub_213C48834(v21, v23);
  v26 = v25;
  swift_bridgeObjectRelease();
  v48 = v24;
  v49 = v26;
  v46 = 45;
  v47 = 0xE100000000000000;
  v44 = 95;
  v45 = 0xE100000000000000;
  sub_213C3B020();
  v27 = sub_213C864B4();
  v29 = v28;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v39);
  *(_QWORD *)(v3 + 24) = v27;
  *(_QWORD *)(v3 + 32) = v29;
  v30 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  objc_msgSend(v30, sel_setAllowsCellularAccess_, 1);
  objc_msgSend(v30, sel_setNetworkServiceType_, 3);
  objc_msgSend(v30, sel_setAllowsCellularAccess_, v43 & 1);
  objc_msgSend(v30, sel_setAllowsExpensiveNetworkAccess_, 0);
  v31 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, v30, 0, 0);

  *(_QWORD *)(v3 + 40) = v31;
  *(_OWORD *)(v3 + 48) = v42;
  v32 = v40;
  *(_QWORD *)(v3 + 64) = v41;
  *(_QWORD *)(v3 + 72) = v32;
  return v3;
}

uint64_t sub_213C50038@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E390);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + 56) > 2uLL)
    goto LABEL_4;
  sub_213C85DE8();
  swift_bridgeObjectRelease();
  v6 = sub_213C85E18();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_213C3B7AC((uint64_t)v5, &qword_254D2E390);
LABEL_4:
    sub_213C3A984();
    swift_allocError();
    *v8 = 4;
    return swift_willThrow();
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
}

uint64_t sub_213C50194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = sub_213C85D58();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_213C50038(a3);
  if (!v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEC8);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_213C883E0;
    *(_QWORD *)(v13 + 32) = 12918;
    *(_QWORD *)(v13 + 40) = 0xE200000000000000;
    *(_QWORD *)(v13 + 48) = 0x7963696C6F70;
    *(_QWORD *)(v13 + 56) = 0xE600000000000000;
    *(_QWORD *)(v13 + 64) = a1;
    *(_QWORD *)(v13 + 72) = a2;
    v14 = *(_QWORD *)(v3 + 32);
    *(_QWORD *)(v13 + 80) = *(_QWORD *)(v3 + 24);
    *(_QWORD *)(v13 + 88) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_213C4878C();
    *(_QWORD *)(v13 + 96) = v15;
    *(_QWORD *)(v13 + 104) = v16;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BDCD7A0], v8);
    sub_213C3B020();
    sub_213C85DDC();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

uint64_t sub_213C502F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_213C85ECC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_213C85E18();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213C50194(a1, a2, (uint64_t)v11);
  v12 = sub_213C85D64();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_213C85EC0();
  v15 = sub_213C45768((uint64_t)v7);
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v20 = v12;
  v21 = v14;
  sub_213C861F0();
  v19 = v15;
  sub_213C86724();
  sub_213C861F0();
  swift_bridgeObjectRelease();
  sub_213C861F0();
  v19 = v17;
  sub_213C86724();
  sub_213C861F0();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_213C504A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[35] = a1;
  v2[36] = v1;
  v3 = sub_213C8616C();
  v2[37] = v3;
  v2[38] = *(_QWORD *)(v3 - 8);
  v2[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213C50500()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = (_QWORD *)v0[35];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_0Tm(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  v6 = v5;
  v0[40] = v4;
  v0[41] = v5;
  v7 = (_QWORD *)swift_task_alloc();
  v0[42] = v7;
  *v7 = v0;
  v7[1] = sub_213C50588;
  return sub_213C521D4(v4, v6);
}

uint64_t sub_213C50588(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 344) = a1;
  *(_QWORD *)(v3 + 352) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C505F4()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  void *v63;
  _BYTE *v64;
  id v65;
  void *v66;
  void *v67;
  unsigned __int8 v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t *v116;
  uint64_t *v117;
  uint64_t v118[14];

  v1 = v0[43];
  if (!*(_QWORD *)(v1 + 16)
    || (v2 = sub_213C4B3DC(0x735F657069636572, 0xEE00676E696E6769), (v3 & 1) == 0)
    || (v4 = v0 + 27,
        v5 = v0[43],
        sub_213C35070(*(_QWORD *)(v5 + 56) + 32 * v2, (uint64_t)(v0 + 2)),
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E9F0),
        (swift_dynamicCast() & 1) == 0))
  {
    if (qword_254D2D960 != -1)
      swift_once();
    v15 = sub_213C86094();
    __swift_project_value_buffer(v15, (uint64_t)qword_254D2FF28);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_213C8607C();
    v17 = sub_213C863F4();
    v18 = os_log_type_enabled(v16, v17);
    v19 = v0[41];
    if (v18)
    {
      v20 = v0[40];
      v21 = swift_slowAlloc();
      v118[0] = swift_slowAlloc();
      v22 = v118[0];
      *(_DWORD *)v21 = 136315394;
      swift_bridgeObjectRetain();
      v0[32] = sub_213C42558(v20, v19, v118);
      sub_213C86490();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2080;
      swift_bridgeObjectRetain();
      v23 = sub_213C860D0();
      v25 = v24;
      swift_bridgeObjectRelease();
      v0[30] = sub_213C42558(v23, v25, v118);
      sub_213C86490();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213C25000, v16, v17, "Failed to parse recipe %s signature or certificate in  %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v22, -1, -1);
      MEMORY[0x2199C0A30](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_213C3A984();
    v27 = swift_allocError();
    v28 = 11;
    goto LABEL_14;
  }
  v117 = v0 + 23;
  v116 = v0 + 25;
  v6 = *v4;
  if (!*(_QWORD *)(*v4 + 16) || (v7 = sub_213C4B3DC(0xD000000000000019, 0x8000000213C8DB10), (v8 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    if (qword_254D2D960 != -1)
      swift_once();
    v31 = sub_213C86094();
    __swift_project_value_buffer(v31, (uint64_t)qword_254D2FF28);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = sub_213C8607C();
    v33 = sub_213C863F4();
    v34 = os_log_type_enabled(v32, v33);
    v35 = v0[41];
    if (v34)
    {
      v36 = v0[40];
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v118[0] = v38;
      *(_DWORD *)v37 = 136315394;
      swift_bridgeObjectRetain();
      v0[24] = sub_213C42558(v36, v35, v118);
      sub_213C86490();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 12) = 2080;
      swift_bridgeObjectRetain();
      v39 = sub_213C860D0();
      v41 = v40;
      swift_bridgeObjectRelease();
      v0[22] = sub_213C42558(v39, v41, v118);
      sub_213C86490();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213C25000, v32, v33, "Failed to parse recipe %s signature or certificate in  %s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v38, -1, -1);
      MEMORY[0x2199C0A30](v37, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_213C3A984();
    v27 = swift_allocError();
    v28 = 21;
LABEL_14:
    *v26 = v28;
    sub_213C3B4D8();
    swift_allocError();
    *(_BYTE *)v29 = 4;
    *(_QWORD *)(v29 + 8) = v27;
    swift_willThrow();
    goto LABEL_15;
  }
  v9 = v0[44];
  v10 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v7);
  v115 = v0;
  v11 = *v10;
  v12 = v10[1];
  type metadata accessor for PFLDodMLTaskValidator();
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  v13 = sub_213C7E998(v11, v12);
  v0[45] = v13;
  if (v9)
  {
    sub_213C3B4D8();
    swift_allocError();
    *(_BYTE *)v14 = 4;
    *(_QWORD *)(v14 + 8) = v9;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_15:
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
  v42 = v13;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_29;
  sub_213C4B3DC(0x635F657069636572, 0xEE00746E65746E6FLL);
  if ((v43 & 1) == 0 || !*(_QWORD *)(v6 + 16))
    goto LABEL_29;
  swift_bridgeObjectRetain();
  sub_213C4B3DC(0xD000000000000010, 0x8000000213C8E5A0);
  if ((v44 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_29:
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  v114 = v42;
  v45 = v0[38];
  v46 = v0[39];
  v47 = v0[37];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_213C86160();
  v48 = sub_213C86154();
  v50 = v49;
  swift_bridgeObjectRelease();
  v0[46] = v48;
  v0[47] = v50;
  v51 = v50;
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, v47);
  if (v50 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    v0 = v115;
LABEL_30:
    swift_bridgeObjectRelease();
    if (qword_254D2D960 != -1)
      swift_once();
    v52 = sub_213C86094();
    __swift_project_value_buffer(v52, (uint64_t)qword_254D2FF28);
    swift_bridgeObjectRetain();
    v53 = sub_213C8607C();
    v54 = sub_213C863F4();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      v118[0] = v56;
      *(_DWORD *)v55 = 136315138;
      swift_bridgeObjectRetain();
      v57 = sub_213C860D0();
      v59 = v58;
      swift_bridgeObjectRelease();
      *v117 = sub_213C42558(v57, v59, v118);
      v0 = v115;
      sub_213C86490();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213C25000, v53, v54, "Failed to encode recipe data in %s", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v56, -1, -1);
      MEMORY[0x2199C0A30](v55, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_213C3A984();
    v60 = swift_allocError();
    *v61 = 22;
    sub_213C3B4D8();
    swift_allocError();
    *(_BYTE *)v62 = 4;
    *(_QWORD *)(v62 + 8) = v60;
    swift_willThrow();
    swift_release();
    goto LABEL_15;
  }
  sub_213C3A984();
  v63 = (void *)swift_allocError();
  *v64 = 10;
  v65 = *(id *)(v114 + 16);
  v66 = (void *)sub_213C86124();
  v67 = (void *)sub_213C85E48();
  v68 = objc_msgSend(v65, sel_validateBase64Signature_data_, v66, v67);

  v69 = v51;
  if ((v68 & 1) == 0)
  {
    v0 = v115;
    swift_willThrow();
    sub_213C3B4D8();
    swift_allocError();
    *(_BYTE *)v73 = 4;
    *(_QWORD *)(v73 + 8) = v63;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213C3B064(v48, v69);
    goto LABEL_15;
  }
  v113 = v48;

  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v1 + 16)
    || (v70 = sub_213C4B3DC(0x657069636572, 0xE600000000000000), (v71 & 1) == 0)
    || (sub_213C35070(*(_QWORD *)(v5 + 56) + 32 * v70, (uint64_t)(v115 + 18)),
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE68),
        (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    if (qword_254D2D960 != -1)
      swift_once();
    v74 = sub_213C86094();
    __swift_project_value_buffer(v74, (uint64_t)qword_254D2FF28);
    swift_bridgeObjectRetain();
    v75 = sub_213C8607C();
    v76 = sub_213C863F4();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc();
      v78 = swift_slowAlloc();
      *(_DWORD *)v77 = 136315138;
      v118[0] = v78;
      swift_bridgeObjectRetain();
      v79 = sub_213C860D0();
      v81 = v80;
      swift_bridgeObjectRelease();
      *v116 = sub_213C42558(v79, v81, v118);
      sub_213C86490();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213C25000, v75, v76, "Failed to parse 'recipe' in %s", v77, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v78, -1, -1);
      MEMORY[0x2199C0A30](v77, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v82 = swift_allocError();
    *v83 = 23;
    sub_213C3B4D8();
    swift_allocError();
    *(_BYTE *)v84 = 4;
    *(_QWORD *)(v84 + 8) = v82;
    swift_willThrow();
    v85 = v48;
    v86 = v51;
    goto LABEL_48;
  }
  v115[48] = v115[26];
  type metadata accessor for FederatedBuffer();
  swift_allocObject();
  v72 = swift_bridgeObjectRetain();
  v115[49] = sub_213C573D4(v72);
  if (!*(_QWORD *)(v1 + 16)
    || (v87 = sub_213C4B3DC(0x6465686361747461, 0xEE0073656C69665FLL), (v88 & 1) == 0)
    || (sub_213C35070(*(_QWORD *)(v5 + 56) + 32 * v87, (uint64_t)(v115 + 14)),
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0),
        (swift_dynamicCast() & 1) == 0))
  {
LABEL_61:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_254D2D960 != -1)
      swift_once();
    v102 = sub_213C86094();
    __swift_project_value_buffer(v102, (uint64_t)qword_254D2FF28);
    swift_bridgeObjectRetain();
    v103 = sub_213C8607C();
    v104 = sub_213C863F4();
    if (os_log_type_enabled(v103, v104))
    {
      v105 = (uint8_t *)swift_slowAlloc();
      v106 = swift_slowAlloc();
      *(_DWORD *)v105 = 136315138;
      v118[0] = v106;
      swift_bridgeObjectRetain();
      v107 = sub_213C860D0();
      v109 = v108;
      swift_bridgeObjectRelease();
      v115[28] = sub_213C42558(v107, v109, v118);
      sub_213C86490();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213C25000, v103, v104, "Failed to parase attachments in recipe %s", v105, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v106, -1, -1);
      MEMORY[0x2199C0A30](v105, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v110 = swift_allocError();
    *v111 = 24;
    sub_213C3B4D8();
    swift_allocError();
    *(_BYTE *)v112 = 5;
    *(_QWORD *)(v112 + 8) = v110;
    swift_willThrow();
    swift_release();
    v85 = v113;
    v86 = v51;
LABEL_48:
    sub_213C3B064(v85, v86);
    swift_release();
    v0 = v115;
    goto LABEL_15;
  }
  v89 = v115[29];
  v115[50] = v89;
  if (!*(_QWORD *)(v1 + 16)
    || (v90 = sub_213C4B3DC(0xD000000000000014, 0x8000000213C8E5C0), (v91 & 1) == 0)
    || (sub_213C35070(*(_QWORD *)(v5 + 56) + 32 * v90, (uint64_t)(v115 + 10)), (swift_dynamicCast() & 1) == 0))
  {
LABEL_67:
    swift_bridgeObjectRelease();
    goto LABEL_61;
  }
  v92 = v115[31];
  v115[51] = v92;
  if (!*(_QWORD *)(v1 + 16) || (v93 = sub_213C4B3DC(0xD000000000000019, 0x8000000213C8E5E0), (v94 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_61;
  }
  sub_213C35070(*(_QWORD *)(v5 + 56) + 32 * v93, (uint64_t)(v115 + 6));
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_67;
  }
  v95 = v115[33];
  v115[52] = v95;
  v96 = *(_QWORD *)(v89 + 16);
  if (v96 != *(_QWORD *)(v92 + 16) || v96 != *(_QWORD *)(v95 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_61;
  }
  v97 = v115[36];
  swift_bridgeObjectRelease();
  type metadata accessor for PFLTaskStorage();
  swift_allocObject();
  v98 = sub_213C729EC();
  v115[53] = v98;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E9F8);
  v99 = (_QWORD *)swift_task_alloc();
  v115[54] = v99;
  v99[2] = v89;
  v99[3] = v92;
  v99[4] = v95;
  v99[5] = v97;
  v99[6] = v114;
  v99[7] = v98;
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2EA10);
  v101 = (_QWORD *)swift_task_alloc();
  v115[55] = v101;
  *v101 = v115;
  v101[1] = sub_213C5198C;
  v118[12] = v100;
  return sub_213C86634();
}

uint64_t sub_213C5190C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 352);
  sub_213C3B4D8();
  swift_allocError();
  *(_BYTE *)v2 = 4;
  *(_QWORD *)(v2 + 8) = v1;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C5198C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 448) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C519F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  v2 = *(_QWORD *)(v0 + 384);
  v1 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  v8 = *(_OWORD *)(v0 + 320);
  v5 = *(_QWORD *)(v0 + 272);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for PFLTask();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = v8;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = v5;
  *(_QWORD *)(v6 + 48) = v1;
  swift_release();
  sub_213C3B064(v4, v3);
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_213C51AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;

  v1 = *(_QWORD *)(v0 + 448);
  v5 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc();
  sub_213C3B4D8();
  swift_allocError();
  *(_BYTE *)v3 = 5;
  *(_QWORD *)(v3 + 8) = v1;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_213C3B064(v2, v5);
  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C51BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v5 = sub_213C85C38();
  v4[9] = v5;
  v4[10] = *(_QWORD *)(v5 - 8);
  v4[11] = swift_task_alloc();
  v6 = sub_213C85E18();
  v4[12] = v6;
  v4[13] = *(_QWORD *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213C51C64()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, int *);

  sub_213C50194(v0[6], v0[7], v0[15]);
  v1 = v0[11];
  v2 = v0[8];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[13] + 16))(v0[14], v0[15], v0[12]);
  sub_213C85C2C();
  v0[16] = sub_213C3A984();
  v3 = swift_allocError();
  v0[17] = v3;
  *v4 = 6;
  v5 = swift_task_alloc();
  v0[18] = v5;
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v1;
  v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_254D2E9D0 + dword_254D2E9D0);
  v6 = (_QWORD *)swift_task_alloc();
  v0[19] = (uint64_t)v6;
  *v6 = v0;
  v6[1] = sub_213C51DB4;
  return v8((uint64_t)(v0 + 2), v3, (int *)&unk_254D2E9E0);
}

uint64_t sub_213C51DB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)

  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C51E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  _BYTE *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 160);
  v20 = *(_QWORD *)(v0 + 104);
  v21 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 24);

  v5 = (void *)swift_allocError();
  *v6 = 13;
  *(_QWORD *)(v3 + 24) = type metadata accessor for DodMLPolicy();
  *(_QWORD *)(v3 + 32) = sub_213C3B630(&qword_254D2E9E8, v7, (uint64_t (*)(uint64_t))type metadata accessor for DodMLPolicy, (uint64_t)&unk_213C88DB0);
  sub_213C3B534(v1, v4);
  v8 = sub_213C49258(v5);
  v9 = *(_QWORD *)(v0 + 120);
  if (v2)
  {
    v11 = *(_QWORD *)(v0 + 88);
    v10 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 40);
    sub_213C3B078(v1, v4);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v9, v10);
    sub_213C3B078(v1, v4);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v11, v12);

    __swift_deallocate_boxed_opaque_existential_1(v13);
  }
  else
  {
    v14 = v8;
    v16 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 72);
    v18 = *(_QWORD **)(v0 + 40);
    sub_213C3B078(v1, v4);
    *v18 = v14;
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v9, v15);
    sub_213C3B078(v1, v4);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v16, v17);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C52020()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C520A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213C520C0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_213C5211C;
  return sub_213C863C4();
}

uint64_t sub_213C5211C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v8;
  _QWORD *v9;

  v8 = (_QWORD *)*v4;
  v9 = (_QWORD *)*v4;
  swift_task_dealloc();
  if (v3)
    return ((uint64_t (*)(void))v9[1])();
  v8[6] = a3;
  v8[7] = a2;
  v8[8] = a1;
  return swift_task_switch();
}

uint64_t sub_213C521B0()
{
  uint64_t v0;
  uint64_t v1;
  int8x16_t *v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(int8x16_t **)(v0 + 16);
  *v2 = vextq_s8(*(int8x16_t *)(v0 + 56), *(int8x16_t *)(v0 + 56), 8uLL);
  v2[1].i64[0] = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C521D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = sub_213C85C38();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v5 = sub_213C85D58();
  v3[11] = v5;
  v3[12] = *(_QWORD *)(v5 - 8);
  v3[13] = swift_task_alloc();
  v6 = sub_213C85E18();
  v3[14] = v6;
  v3[15] = *(_QWORD *)(v6 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213C52298()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;

  sub_213C50038(v0[17]);
  v2 = v0[16];
  v1 = v0[17];
  v3 = v0[13];
  v15 = v0[15];
  v16 = v0[14];
  v5 = v0[11];
  v4 = v0[12];
  v6 = v0[10];
  v7 = v0[6];
  v17 = v0[7];
  v8 = v0[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEC8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_213C89490;
  *(_QWORD *)(v9 + 32) = 12918;
  *(_QWORD *)(v9 + 40) = 0xE200000000000000;
  *(_QWORD *)(v9 + 48) = 0x657069636572;
  *(_QWORD *)(v9 + 56) = 0xE600000000000000;
  *(_QWORD *)(v9 + 64) = 0x73746E65746E6F63;
  *(_QWORD *)(v9 + 72) = 0xE800000000000000;
  *(_QWORD *)(v9 + 80) = v8;
  *(_QWORD *)(v9 + 88) = v7;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, *MEMORY[0x24BDCD7A0], v5);
  sub_213C3B020();
  swift_bridgeObjectRetain();
  sub_213C85DDC();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v2, v1, v16);
  sub_213C85C2C();
  v0[18] = sub_213C3A984();
  v10 = swift_allocError();
  v0[19] = v10;
  *v11 = 9;
  v12 = swift_task_alloc();
  v0[20] = v12;
  *(_QWORD *)(v12 + 16) = v17;
  *(_QWORD *)(v12 + 24) = v6;
  v18 = (char *)&dword_254D2E9D0 + dword_254D2E9D0;
  v13 = (_QWORD *)swift_task_alloc();
  v0[21] = v13;
  *v13 = v0;
  v13[1] = sub_213C524E4;
  return ((uint64_t (*)(_QWORD *, uint64_t, void *, uint64_t))v18)(v0 + 2, v10, &unk_254D2E9C8, v12);
}

uint64_t sub_213C524E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)

  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C5256C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  _BYTE *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 24);

  v4 = (void *)swift_allocError();
  *v5 = 15;
  sub_213C3B534(v1, v3);
  v6 = sub_213C49500(v4);
  v7 = *(_QWORD *)(v0 + 136);
  if (v2)
  {
    v8 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v19 = v4;
    v10 = *(_QWORD *)(v0 + 72);
    v11 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD *)(v0 + 64);
    sub_213C3B078(v1, v3);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    sub_213C3B078(v1, v3);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 64);
    v20 = v6;
    sub_213C3B078(v1, v3);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v7, v15);
    sub_213C3B078(v1, v3);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(id))(v0 + 8))(v20);
  }
}

uint64_t sub_213C52734()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C527C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213C527E0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_213C5283C;
  return sub_213C863C4();
}

uint64_t sub_213C5283C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v8;
  _QWORD *v9;

  v8 = (_QWORD *)*v4;
  v9 = (_QWORD *)*v4;
  swift_task_dealloc();
  if (v3)
    return ((uint64_t (*)(void))v9[1])();
  v8[6] = a3;
  v8[7] = a2;
  v8[8] = a1;
  return swift_task_switch();
}

uint64_t sub_213C528D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E9A0);
  v4[7] = swift_task_alloc();
  v5 = sub_213C85C38();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E390);
  v4[11] = swift_task_alloc();
  v6 = sub_213C85E18();
  v4[12] = v6;
  v4[13] = *(_QWORD *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213C529B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*v18)(uint64_t, uint64_t, int *);

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  sub_213C85DE8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_213C3B7AC(*(_QWORD *)(v0 + 88), &qword_254D2E390);
    sub_213C3A984();
    swift_allocError();
    *v4 = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 104);
    v11 = *(_QWORD *)(v0 + 80);
    v10 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 40);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    *(_QWORD *)(v0 + 128) = v13;
    v13(v7, v10, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, v7, v8);
    sub_213C85C2C();
    sub_213C3A984();
    v14 = swift_allocError();
    *(_QWORD *)(v0 + 136) = v14;
    *v15 = 12;
    v16 = swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v16;
    *(_QWORD *)(v16 + 16) = v12;
    *(_QWORD *)(v16 + 24) = v11;
    v18 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_254D2E9B8 + dword_254D2E9B8);
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v17;
    *v17 = v0;
    v17[1] = sub_213C52B90;
    return v18(*(_QWORD *)(v0 + 56), v14, (int *)&unk_254D2E9B0);
  }
}

uint64_t sub_213C52B90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)

  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C52C18()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 128);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);

  v1(v8, v7, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C52CE8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C52D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213C52DA4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_213C52E04;
  return sub_213C863D0();
}

uint64_t sub_213C52E04(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 48) = a1;
  *(_DWORD *)(v4 + 56) = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D2E9A0) + 48);
  return swift_task_switch();
}

uint64_t sub_213C52E94()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + *(int *)(v0 + 56)) = *(_QWORD *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C52EB0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_213C3B744(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PFLDodMLTaskDownloader()
{
  return objc_opt_self();
}

uint64_t destroy for PolicySigning()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PolicySigning(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PolicySigning(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for PolicySigning(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PolicySigning(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PolicySigning(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PolicySigning()
{
  return &type metadata for PolicySigning;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for EvaluationLimits(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EvaluationLimits(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for EvaluationLimits()
{
  return &type metadata for EvaluationLimits;
}

uint64_t destroy for DodMLRecipeDescriptor(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 64) != 255)
    sub_213C3B18C();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DodMLRecipeDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(unsigned __int8 *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 255)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  }
  else
  {
    v7 = v6 & 1;
    v8 = *(_QWORD *)(a2 + 48);
    v9 = *(_QWORD *)(a2 + 56);
    sub_213C3B1B0();
    *(_QWORD *)(a1 + 48) = v8;
    *(_QWORD *)(a1 + 56) = v9;
    *(_BYTE *)(a1 + 64) = v7;
  }
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DodMLRecipeDescriptor(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  int v6;
  char v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 48);
  v5 = (__int128 *)(a2 + 48);
  v6 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v6 == 255)
    {
      v8 = *v5;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *v4 = v8;
    }
    else
    {
      v12 = v6 & 1;
      v13 = *(_QWORD *)(a2 + 48);
      v14 = *(_QWORD *)(a2 + 56);
      sub_213C3B1B0();
      *(_QWORD *)(a1 + 48) = v13;
      *(_QWORD *)(a1 + 56) = v14;
      *(_BYTE *)(a1 + 64) = v12;
    }
  }
  else if (v6 == 255)
  {
    sub_213C53404(a1 + 48);
    v7 = *(_BYTE *)(a2 + 64);
    *v4 = *v5;
    *(_BYTE *)(a1 + 64) = v7;
  }
  else
  {
    v9 = v6 & 1;
    v10 = *(_QWORD *)(a2 + 48);
    v11 = *(_QWORD *)(a2 + 56);
    sub_213C3B1B0();
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
    *(_BYTE *)(a1 + 64) = v9;
    sub_213C3B18C();
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_213C53404(uint64_t a1)
{
  sub_213C3B18C();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for DodMLRecipeDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  int v7;
  uint64_t v8;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 64) != 255)
  {
    v7 = *(unsigned __int8 *)(a2 + 64);
    if (v7 != 255)
    {
      *(_OWORD *)(a1 + 48) = *v6;
      *(_BYTE *)(a1 + 64) = v7 & 1;
      sub_213C3B18C();
      goto LABEL_6;
    }
    sub_213C53404(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
LABEL_6:
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DodMLRecipeDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DodMLRecipeDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 80) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DodMLRecipeDescriptor()
{
  return &type metadata for DodMLRecipeDescriptor;
}

uint64_t destroy for PredicateValue()
{
  return sub_213C3B18C();
}

uint64_t _s24PrivateFederatedLearning14PredicateValueOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_213C3B1B0();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PredicateValue(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_213C3B1B0();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_213C3B18C();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PredicateValue(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_213C3B18C();
  return a1;
}

uint64_t getEnumTagSinglePayload for PredicateValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PredicateValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_213C53764(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_213C5376C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PredicateValue()
{
  return &type metadata for PredicateValue;
}

uint64_t sub_213C53788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_213C3A7F0;
  return sub_213C51BC8(a1, a2, a3);
}

uint64_t sub_213C537F4(uint64_t a1, uint64_t a2)
{
  return sub_213C502F0(a1, a2);
}

uint64_t sub_213C53814(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_213C3A8A8;
  return sub_213C504A0(a1);
}

uint64_t sub_213C53864(uint64_t a1, uint64_t a2)
{
  return sub_213C3B630(&qword_254D2E8F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for DodMLPolicy, (uint64_t)&unk_213C88D18);
}

uint64_t sub_213C53890(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_213C3B630(&qword_254D2E8F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for DodMLPolicy, (uint64_t)&unk_213C88D18);
  result = sub_213C3B630(&qword_254D2E8F8, v3, (uint64_t (*)(uint64_t))type metadata accessor for DodMLPolicy, (uint64_t)&unk_213C88D48);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_213C538EC()
{
  unint64_t result;

  result = qword_254D2E908;
  if (!qword_254D2E908)
  {
    result = MEMORY[0x2199C0970](&unk_213C89334, &type metadata for DodMLPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2E908);
  }
  return result;
}

unint64_t sub_213C53930()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_254D2E918;
  if (!qword_254D2E918)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D2E910);
    v2 = sub_213C5399C();
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x2199C0970](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_254D2E918);
  }
  return result;
}

unint64_t sub_213C5399C()
{
  unint64_t result;

  result = qword_254D2E920;
  if (!qword_254D2E920)
  {
    result = MEMORY[0x2199C0970](&unk_213C88C40, &type metadata for DodMLRecipeDescriptor);
    atomic_store(result, (unint64_t *)&qword_254D2E920);
  }
  return result;
}

uint64_t sub_213C539E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[16] = a7;
  v8[17] = a8;
  v8[14] = a5;
  v8[15] = a6;
  v8[12] = a3;
  v8[13] = a4;
  v8[10] = a1;
  v8[11] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E2F8);
  v8[18] = swift_task_alloc();
  v8[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E390);
  v8[20] = swift_task_alloc();
  v9 = sub_213C85E18();
  v8[21] = v9;
  v8[22] = *(_QWORD *)(v9 - 8);
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2EA18);
  v8[25] = v10;
  v8[26] = *(_QWORD *)(v10 - 8);
  v8[27] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2EA20);
  v8[28] = v11;
  v8[29] = *(_QWORD *)(v11 - 8);
  v8[30] = swift_task_alloc();
  v8[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213C53B1C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;

  v1 = (_QWORD *)v0[12];
  if (v1[2] && (v2 = (_QWORD *)v0[13], v3 = v0[14], v46 = v2, v2[2]) && *(_QWORD *)(v3 + 16))
  {
    v40 = v0 + 2;
    v4 = v1[4];
    v0 = (_QWORD *)v1[5];
    v5 = v2[4];
    v6 = v2[5];
    v7 = sub_213C8631C();
    v44 = *(_QWORD *)(v7 - 8);
    v45 = v7;
    v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = 0;
    v9 = 0;
    v41 = v1;
    v47 = v3;
    while (1)
    {
      v50 = v4;
      v52 = v0;
      v48 = v9;
      v49 = v8;
      v0 = (_QWORD *)v42;
      v11 = *(_QWORD *)(v42 + 144);
      v10 = *(_QWORD *)(v42 + 152);
      v12 = *(_QWORD *)(v42 + 120);
      v13 = v3 + v8;
      v14 = v5;
      v16 = *(_QWORD *)(v13 + 32);
      v15 = *(_QWORD *)(v13 + 40);
      v43(v10, 1, 1, v45);
      v17 = (_QWORD *)swift_allocObject();
      v17[2] = 0;
      v17[3] = 0;
      v17[4] = v14;
      v17[5] = v6;
      v17[6] = v16;
      v17[7] = v15;
      v17[8] = v12;
      v17[9] = v50;
      v17[10] = v52;
      v18 = (_QWORD *)swift_allocObject();
      v18[2] = 0;
      v18[3] = 0;
      v18[4] = &unk_254D2EA38;
      v18[5] = v17;
      sub_213C49C28(v10, v11);
      LODWORD(v17) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v11, 1, v45);
      swift_bridgeObjectRetain();
      swift_retain();
      v19 = *(_QWORD *)(v42 + 144);
      if ((_DWORD)v17 == 1)
      {
        sub_213C3B7AC(*(_QWORD *)(v42 + 144), &qword_254D2E2F8);
      }
      else
      {
        sub_213C86310();
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v19, v45);
      }
      if (v18[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v20 = sub_213C862F8();
        v22 = v21;
        swift_unknownObjectRelease();
      }
      else
      {
        v20 = 0;
        v22 = 0;
      }
      v23 = **(_QWORD **)(v42 + 88);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E9F8);
      v24 = (_QWORD *)(v22 | v20);
      if (v22 | v20)
      {
        v24 = v40;
        *v40 = 0;
        v40[1] = 0;
        *(_QWORD *)(v42 + 32) = v20;
        *(_QWORD *)(v42 + 40) = v22;
      }
      v9 = v48 + 1;
      v25 = *(_QWORD *)(v42 + 152);
      *(_QWORD *)(v42 + 48) = 1;
      *(_QWORD *)(v42 + 56) = v24;
      *(_QWORD *)(v42 + 64) = v23;
      swift_task_create();
      swift_release();
      result = sub_213C3B7AC(v25, &qword_254D2E2F8);
      v27 = v41[2];
      if (v48 + 1 == v27)
        break;
      if (v9 >= v27)
      {
        __break(1u);
LABEL_24:
        __break(1u);
        return result;
      }
      v28 = v46[2];
      if (v9 == v28)
        break;
      if (v9 >= v28)
        goto LABEL_24;
      v29 = *(_QWORD *)(v47 + 16);
      if (v9 == v29)
        break;
      v4 = *(_QWORD *)((char *)v41 + v49 + 48);
      v0 = *(_QWORD **)((char *)v41 + v49 + 56);
      v5 = *(_QWORD *)((char *)v46 + v49 + 48);
      v6 = *(_QWORD *)((char *)v46 + v49 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8 = v49 + 16;
      v30 = v9 >= v29;
      v3 = v47;
      if (v30)
      {
        __break(1u);
        goto LABEL_21;
      }
    }
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v31 = v0[30];
  v32 = v0[31];
  v33 = v0[28];
  v51 = v0[29];
  v34 = v0[16];
  v35 = v0[17];
  v36 = (uint64_t *)v0[11];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v37 = *v36;
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v34;
  *(_QWORD *)(v38 + 24) = v35;
  v0[9] = v37;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2EA58);
  sub_213C5605C(&qword_254D2EA60, &qword_254D2EA58, MEMORY[0x24BEE6BF0]);
  sub_213C86730();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v31, v32, v33);
  sub_213C5605C(&qword_254D2EA68, &qword_254D2EA20, MEMORY[0x24BEE7090]);
  sub_213C86358();
  v0[32] = sub_213C5605C(&qword_254D2EA70, &qword_254D2EA18, MEMORY[0x24BEE7070]);
  v39 = (_QWORD *)swift_task_alloc();
  v0[33] = v39;
  *v39 = v0;
  v39[1] = sub_213C53FD4;
  return sub_213C86304();
}

uint64_t sub_213C53FD4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[35] = v0;
    v4 = v2[26];
    v3 = v2[27];
    v5 = v2[25];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[34] = MEMORY[0x24BEE4AF8];
  }
  return swift_task_switch();
}

uint64_t sub_213C54070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  v5 = *(_QWORD *)(v0 + 272);
  if (v4 == 1)
  {
    v6 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 224);
    v8 = *(_QWORD *)(v0 + 232);
    v9 = *(_QWORD **)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
    sub_213C3B7AC(v3, &qword_254D2E390);
    *v9 = v5;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 184);
    v11 = *(_QWORD *)(v0 + 192);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v13(v11, v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v12, v11, v1);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *(_QWORD *)(v0 + 272);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v15 = sub_213C41D00(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
    v17 = *(_QWORD *)(v15 + 16);
    v16 = *(_QWORD *)(v15 + 24);
    if (v17 >= v16 >> 1)
      v15 = sub_213C41D00(v16 > 1, v17 + 1, 1, v15);
    *(_QWORD *)(v0 + 288) = v15;
    v18 = *(_QWORD *)(v0 + 184);
    v19 = *(_QWORD *)(v0 + 192);
    v20 = *(_QWORD *)(v0 + 168);
    v21 = *(_QWORD *)(v0 + 176);
    *(_QWORD *)(v15 + 16) = v17 + 1;
    v13(v15+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(_QWORD *)(v21 + 72) * v17, v18, v20);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v22;
    *v22 = v0;
    v22[1] = sub_213C54340;
    return sub_213C86304();
  }
}

uint64_t sub_213C54298()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 224));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C54340()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[35] = v0;
    v4 = v2[26];
    v3 = v2[27];
    v5 = v2[25];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[34] = v2[36];
  }
  return swift_task_switch();
}

uint64_t sub_213C543D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v9 = (_QWORD *)swift_task_alloc();
  v7[6] = v9;
  *v9 = v7;
  v9[1] = sub_213C54444;
  return sub_213C528D0(a1, v11, v12);
}

uint64_t sub_213C54444()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = (_QWORD *)*v1;
  v3 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
    return ((uint64_t (*)(void))v3[1])();
  v5 = v2[4];
  v6 = v2[5];
  v9 = v2 + 2;
  v8 = v2[2];
  v7 = v9[1];
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v10(v8, v7, v5, v6);
}

uint64_t sub_213C544E4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v4 + 16) = a1;
  v6 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D2E9F8) + 64);
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v7;
  *v7 = v4;
  v7[1] = sub_213C54568;
  return v9(v6);
}

uint64_t sub_213C54568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v10 = *v5;
  v11 = *v5;
  swift_task_dealloc();
  if (!v4)
  {
    v12 = *(_QWORD **)(v10 + 16);
    *v12 = a1;
    v12[1] = a2;
    v12[2] = a3;
    v12[3] = a4;
  }
  return (*(uint64_t (**)(void))(v11 + 8))();
}

uint64_t sub_213C545DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_213C545F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  void *v8;
  unsigned int v9;
  uint64_t (*v10)(void);
  _BYTE *v11;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D2E9F8) + 64);
  v3 = sub_213C85E24();
  v5 = v4;
  v6 = *(id *)(*(_QWORD *)(v0 + 32) + 16);
  v7 = (void *)sub_213C86124();
  v8 = (void *)sub_213C85E48();
  v9 = objc_msgSend(v6, sel_validateBase64Signature_data_, v7, v8);

  sub_213C3B078(v3, v5);
  if (v9)
  {
    sub_213C72DAC(v2, **(_QWORD **)(v0 + 24), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 8), *(char **)(v0 + 16));
    v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    sub_213C3A984();
    swift_allocError();
    *v11 = 25;
    swift_willThrow();
    v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v10();
}

uint64_t sub_213C54744(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213C42C10(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213C54760(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213C42D6C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213C5477C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213C430B4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213C54798(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213C43548(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213C547B4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213C436CC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

unint64_t sub_213C547D0()
{
  unint64_t result;

  result = qword_254D2E930;
  if (!qword_254D2E930)
  {
    result = MEMORY[0x2199C0970](&unk_213C88C90, &type metadata for EvaluationLimits);
    atomic_store(result, (unint64_t *)&qword_254D2E930);
  }
  return result;
}

unint64_t sub_213C54814()
{
  unint64_t result;

  result = qword_254D2E938;
  if (!qword_254D2E938)
  {
    result = MEMORY[0x2199C0970](&unk_213C88CE0, &type metadata for PolicySigning);
    atomic_store(result, (unint64_t *)&qword_254D2E938);
  }
  return result;
}

uint64_t sub_213C54858(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_213C548E0(_QWORD *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v5;
  _QWORD v6[3];
  uint64_t v7;

  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_213C86820();
  if (v1)
  {

    __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
    sub_213C86820();
    __swift_project_boxed_opaque_existential_0Tm(v6, v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0);
    sub_213C559E4(&qword_254D2E928, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_213C86760();
    v3 = v5;
  }
  else
  {
    __swift_project_boxed_opaque_existential_0Tm(v6, v7);
    v3 = sub_213C86754();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_213C54AC4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x796C707061 && a2 == 0xE500000000000000;
  if (v2 || (sub_213C86748() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 28783 && a2 == 0xE200000000000000 || (sub_213C86748() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1752457584 && a2 == 0xE400000000000000 || (sub_213C86748() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_213C86748();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_213C54C44@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t result;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  char v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2EB28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_213C56C60();
  sub_213C8682C();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_213C45164(0, 0, 0xFFu);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2EB38);
    v29 = 0;
    sub_213C56CE8(&qword_254D2EB40, &qword_254D2EB38, (uint64_t (*)(void))sub_213C5576C, MEMORY[0x24BEE12D0]);
    sub_213C86664();
    v9 = v26;
    LOBYTE(v26) = 1;
    swift_bridgeObjectRetain();
    v10 = sub_213C86658();
    v12 = v11;
    v24 = v10;
    v25 = a2;
    LOBYTE(v26) = 2;
    swift_bridgeObjectRetain();
    v13 = sub_213C86658();
    v15 = v14;
    v23 = v13;
    v29 = 3;
    sub_213C56CA4();
    swift_bridgeObjectRetain();
    sub_213C86664();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v16 = v26;
    v17 = v27;
    v18 = v28;
    sub_213C3B198(v26, v27, v28);
    sub_213C45164(0, 0, 0xFFu);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_213C3B198(v16, v17, v18);
    sub_213C45164(v16, v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_213C45164(v16, v17, v18);
    v21 = v24;
    v20 = v25;
    *v25 = v9;
    v20[1] = v21;
    v22 = v23;
    v20[2] = v12;
    v20[3] = v22;
    v20[4] = v15;
    v20[5] = v16;
    v20[6] = v17;
    *((_BYTE *)v20 + 56) = v18;
  }
  return result;
}

uint64_t sub_213C54FB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E970);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_213C55728();
  sub_213C8682C();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v33 = 0;
    sub_213C5576C();
    sub_213C866AC();
    v9 = v34;
    v26 = v35;
    v27 = v36;
    v25 = v37;
    v11 = v39;
    v10 = v40;
    v12 = v41;
    LOBYTE(v34) = 1;
    v28 = v38;
    swift_bridgeObjectRetain();
    v29 = v9;
    v13 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31 = v10;
    v32 = v11;
    v30 = v12;
    sub_213C3B198(v11, v10, v12);
    sub_213C86694();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v16 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = v28;
    swift_bridgeObjectRetain();
    v19 = v31;
    v18 = v32;
    v20 = v30;
    sub_213C3B198(v32, v31, v30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213C45164(v18, v19, v20);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213C45164(v18, v19, v20);
    result = swift_bridgeObjectRelease();
    *(_DWORD *)a2 = v15;
    v22 = v26;
    *(_QWORD *)(a2 + 8) = v16;
    *(_QWORD *)(a2 + 16) = v22;
    v23 = v25;
    *(_QWORD *)(a2 + 24) = v13;
    *(_QWORD *)(a2 + 32) = v23;
    *(_QWORD *)(a2 + 40) = v17;
    *(_QWORD *)(a2 + 48) = v18;
    *(_QWORD *)(a2 + 56) = v19;
    *(_BYTE *)(a2 + 64) = v20;
    *(_QWORD *)(a2 + 72) = 0;
    *(_QWORD *)(a2 + 80) = 0xE000000000000000;
  }
  return result;
}

uint64_t sub_213C552B0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v8[16];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E958);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_213C556E4();
  sub_213C8682C();
  v8[15] = 0;
  v6 = sub_213C866A0();
  v8[14] = 1;
  sub_213C866A0();
  v8[13] = 2;
  sub_213C866A0();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v6;
}

uint64_t sub_213C55428()
{
  unint64_t v0;

  v0 = sub_213C86628();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_213C5546C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E940);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_213C556A0();
  sub_213C8682C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v27 = 0;
  v9 = sub_213C86670();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_213C86670();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_213C86670();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  v19 = v23;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  return result;
}

unint64_t sub_213C556A0()
{
  unint64_t result;

  result = qword_254D2E948;
  if (!qword_254D2E948)
  {
    result = MEMORY[0x2199C0970](&unk_213C892E4, &type metadata for PolicySigning.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2E948);
  }
  return result;
}

unint64_t sub_213C556E4()
{
  unint64_t result;

  result = qword_254D2E960;
  if (!qword_254D2E960)
  {
    result = MEMORY[0x2199C0970](&unk_213C89294, &type metadata for EvaluationLimits.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2E960);
  }
  return result;
}

unint64_t sub_213C55728()
{
  unint64_t result;

  result = qword_254D2E978;
  if (!qword_254D2E978)
  {
    result = MEMORY[0x2199C0970](&unk_213C89244, &type metadata for DodMLRecipeDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2E978);
  }
  return result;
}

unint64_t sub_213C5576C()
{
  unint64_t result;

  result = qword_254D2E980;
  if (!qword_254D2E980)
  {
    result = MEMORY[0x2199C0970](&unk_213C8921C, &type metadata for Predicate);
    atomic_store(result, (unint64_t *)&qword_254D2E980);
  }
  return result;
}

unint64_t sub_213C557B0()
{
  unint64_t result;

  result = qword_254D2E990;
  if (!qword_254D2E990)
  {
    result = MEMORY[0x2199C0970](&unk_213C891F4, &type metadata for Predicate);
    atomic_store(result, (unint64_t *)&qword_254D2E990);
  }
  return result;
}

uint64_t sub_213C557F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_213C3B198(v2, v3, v4);
  return a1;
}

uint64_t sub_213C5585C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_213C45164(v2, v3, v4);
  return a1;
}

uint64_t sub_213C558C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_BYTE *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_213C3B198(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_213C55940(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_BYTE *)(a1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_213C45164(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_213C559E4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D2DBB0);
    v8 = a2;
    result = MEMORY[0x2199C0970](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_213C55A44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_213C4A020;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_213C55AAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_213C4A020;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_213C55B14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_213C4A020;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x2199C0A30);
  return result;
}

uint64_t sub_213C55BB0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v11 = v2[6];
  v10 = v2[7];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_213C4A020;
  return sub_213C539E0(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_213C55C44()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_213C55C88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v11;

  v11 = *(_OWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 72);
  v7 = *(_QWORD *)(v1 + 80);
  v8 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *(_QWORD *)v8 = v2;
  *(_QWORD *)(v8 + 8) = sub_213C55D38;
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 40) = v5;
  *(_OWORD *)(v8 + 16) = v11;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 48) = v9;
  *v9 = v8;
  v9[1] = sub_213C54444;
  return sub_213C528D0(a1, v6, v7);
}

uint64_t sub_213C55D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v10;

  v10 = *v4;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a2, a3, a4);
}

uint64_t sub_213C55DB0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_213C55DDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_213C4A020;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_254D2EA30 + dword_254D2EA30))(a1, v4, v5, v6);
}

uint64_t sub_213C55E60()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_213C55E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  __int128 v7;

  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v2 + 16);
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_213C3A7F0;
  *(_OWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  return swift_task_switch();
}

unint64_t sub_213C55F00()
{
  unint64_t result;

  result = qword_254D2EA90;
  if (!qword_254D2EA90)
  {
    result = MEMORY[0x2199C0970](&unk_213C88C18, &type metadata for DodMLRecipeDescriptor);
    atomic_store(result, (unint64_t *)&qword_254D2EA90);
  }
  return result;
}

unint64_t sub_213C55F44()
{
  unint64_t result;

  result = qword_254D2EA98;
  if (!qword_254D2EA98)
  {
    result = MEMORY[0x2199C0970](&unk_213C88C68, &type metadata for EvaluationLimits);
    atomic_store(result, (unint64_t *)&qword_254D2EA98);
  }
  return result;
}

unint64_t sub_213C55F88()
{
  unint64_t result;

  result = qword_254D2EAA0;
  if (!qword_254D2EAA0)
  {
    result = MEMORY[0x2199C0970](&unk_213C88CB8, &type metadata for PolicySigning);
    atomic_store(result, (unint64_t *)&qword_254D2EAA0);
  }
  return result;
}

uint64_t sub_213C55FCC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v0 + 80) != 255)
    sub_213C3B18C();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_213C56020()
{
  unint64_t result;

  result = qword_254D2EAA8;
  if (!qword_254D2EAA8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D2EAA8);
  }
  return result;
}

uint64_t sub_213C5605C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2199C0970](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DodMLRecipeDescriptor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DodMLRecipeDescriptor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213C56184 + 4 * byte_213C88AAD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213C561B8 + 4 * byte_213C88AA8[v4]))();
}

uint64_t sub_213C561B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C561C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213C561C8);
  return result;
}

uint64_t sub_213C561D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213C561DCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213C561E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C561E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C561F4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_213C561FC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DodMLRecipeDescriptor.CodingKeys()
{
  return &type metadata for DodMLRecipeDescriptor.CodingKeys;
}

ValueMetadata *type metadata accessor for EvaluationLimits.CodingKeys()
{
  return &type metadata for EvaluationLimits.CodingKeys;
}

uint64_t _s24PrivateFederatedLearning16EvaluationLimitsV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s24PrivateFederatedLearning16EvaluationLimitsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213C5630C + 4 * byte_213C88AB7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213C56340 + 4 * byte_213C88AB2[v4]))();
}

uint64_t sub_213C56340(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C56348(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213C56350);
  return result;
}

uint64_t sub_213C5635C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213C56364);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213C56368(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C56370(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PolicySigning.CodingKeys()
{
  return &type metadata for PolicySigning.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DodMLPolicy.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DodMLPolicy.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_213C56468 + 4 * byte_213C88AC1[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_213C5649C + 4 * byte_213C88ABC[v4]))();
}

uint64_t sub_213C5649C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C564A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213C564ACLL);
  return result;
}

uint64_t sub_213C564B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213C564C0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_213C564C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C564CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_213C564D8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DodMLPolicy.CodingKeys()
{
  return &type metadata for DodMLPolicy.CodingKeys;
}

uint64_t destroy for Predicate(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 56) != 255)
    return sub_213C3B18C();
  return result;
}

uint64_t initializeWithCopy for Predicate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(unsigned __int8 *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 255)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  }
  else
  {
    v8 = *(_QWORD *)(a2 + 40);
    v7 = *(_QWORD *)(a2 + 48);
    sub_213C3B1B0();
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v7;
    *(_BYTE *)(a1 + 56) = v6 & 1;
  }
  return a1;
}

uint64_t assignWithCopy for Predicate(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  int v6;
  char v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 40);
  v5 = (__int128 *)(a2 + 40);
  v6 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v6 == 255)
    {
      v8 = *v5;
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *v4 = v8;
    }
    else
    {
      v12 = v6 & 1;
      v14 = *(_QWORD *)(a2 + 40);
      v13 = *(_QWORD *)(a2 + 48);
      sub_213C3B1B0();
      *(_QWORD *)(a1 + 40) = v14;
      *(_QWORD *)(a1 + 48) = v13;
      *(_BYTE *)(a1 + 56) = v12;
    }
  }
  else if (v6 == 255)
  {
    sub_213C53404(a1 + 40);
    v7 = *(_BYTE *)(a2 + 56);
    *v4 = *v5;
    *(_BYTE *)(a1 + 56) = v7;
  }
  else
  {
    v9 = v6 & 1;
    v11 = *(_QWORD *)(a2 + 40);
    v10 = *(_QWORD *)(a2 + 48);
    sub_213C3B1B0();
    *(_QWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 48) = v10;
    *(_BYTE *)(a1 + 56) = v9;
    sub_213C3B18C();
  }
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Predicate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  int v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 56) != 255)
  {
    v7 = *(unsigned __int8 *)(a2 + 56);
    if (v7 != 255)
    {
      *(_OWORD *)(a1 + 40) = *v6;
      *(_BYTE *)(a1 + 56) = v7 & 1;
      sub_213C3B18C();
      return a1;
    }
    sub_213C53404(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *v6;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for Predicate(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 57))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Predicate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Predicate()
{
  return &type metadata for Predicate;
}

unint64_t sub_213C568BC()
{
  unint64_t result;

  result = qword_254D2EAC8;
  if (!qword_254D2EAC8)
  {
    result = MEMORY[0x2199C0970](&unk_213C88EFC, &type metadata for DodMLPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EAC8);
  }
  return result;
}

unint64_t sub_213C56904()
{
  unint64_t result;

  result = qword_254D2EAD0;
  if (!qword_254D2EAD0)
  {
    result = MEMORY[0x2199C0970](&unk_213C88FEC, &type metadata for PolicySigning.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EAD0);
  }
  return result;
}

unint64_t sub_213C5694C()
{
  unint64_t result;

  result = qword_254D2EAD8;
  if (!qword_254D2EAD8)
  {
    result = MEMORY[0x2199C0970](&unk_213C890DC, &type metadata for EvaluationLimits.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EAD8);
  }
  return result;
}

unint64_t sub_213C56994()
{
  unint64_t result;

  result = qword_254D2EAE0;
  if (!qword_254D2EAE0)
  {
    result = MEMORY[0x2199C0970](&unk_213C891CC, &type metadata for DodMLRecipeDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EAE0);
  }
  return result;
}

unint64_t sub_213C569DC()
{
  unint64_t result;

  result = qword_254D2EAE8;
  if (!qword_254D2EAE8)
  {
    result = MEMORY[0x2199C0970](&unk_213C89104, &type metadata for DodMLRecipeDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EAE8);
  }
  return result;
}

unint64_t sub_213C56A24()
{
  unint64_t result;

  result = qword_254D2EAF0;
  if (!qword_254D2EAF0)
  {
    result = MEMORY[0x2199C0970](&unk_213C8912C, &type metadata for DodMLRecipeDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EAF0);
  }
  return result;
}

unint64_t sub_213C56A6C()
{
  unint64_t result;

  result = qword_254D2EAF8;
  if (!qword_254D2EAF8)
  {
    result = MEMORY[0x2199C0970](&unk_213C89014, &type metadata for EvaluationLimits.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EAF8);
  }
  return result;
}

unint64_t sub_213C56AB4()
{
  unint64_t result;

  result = qword_254D2EB00;
  if (!qword_254D2EB00)
  {
    result = MEMORY[0x2199C0970](&unk_213C8903C, &type metadata for EvaluationLimits.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EB00);
  }
  return result;
}

unint64_t sub_213C56AFC()
{
  unint64_t result;

  result = qword_254D2EB08;
  if (!qword_254D2EB08)
  {
    result = MEMORY[0x2199C0970](&unk_213C88F24, &type metadata for PolicySigning.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EB08);
  }
  return result;
}

unint64_t sub_213C56B44()
{
  unint64_t result;

  result = qword_254D2EB10;
  if (!qword_254D2EB10)
  {
    result = MEMORY[0x2199C0970](&unk_213C88F4C, &type metadata for PolicySigning.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EB10);
  }
  return result;
}

unint64_t sub_213C56B8C()
{
  unint64_t result;

  result = qword_254D2EB18;
  if (!qword_254D2EB18)
  {
    result = MEMORY[0x2199C0970](&unk_213C88E34, &type metadata for DodMLPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EB18);
  }
  return result;
}

unint64_t sub_213C56BD4()
{
  unint64_t result;

  result = qword_254D2EB20;
  if (!qword_254D2EB20)
  {
    result = MEMORY[0x2199C0970](&unk_213C88E5C, &type metadata for DodMLPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EB20);
  }
  return result;
}

uint64_t sub_213C56C18()
{
  unint64_t v0;

  v0 = sub_213C86628();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

unint64_t sub_213C56C60()
{
  unint64_t result;

  result = qword_254D2EB30;
  if (!qword_254D2EB30)
  {
    result = MEMORY[0x2199C0970](&unk_213C8943C, &type metadata for Predicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EB30);
  }
  return result;
}

unint64_t sub_213C56CA4()
{
  unint64_t result;

  result = qword_254D2EB48;
  if (!qword_254D2EB48)
  {
    result = MEMORY[0x2199C0970](&unk_213C88BE0, &type metadata for PredicateValue);
    atomic_store(result, (unint64_t *)&qword_254D2EB48);
  }
  return result;
}

uint64_t sub_213C56CE8(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x2199C0970](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_213C56D4C()
{
  unint64_t result;

  result = qword_254D2EB70;
  if (!qword_254D2EB70)
  {
    result = MEMORY[0x2199C0970](&unk_213C88BB8, &type metadata for PredicateValue);
    atomic_store(result, (unint64_t *)&qword_254D2EB70);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Predicate.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Predicate.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_213C56E6C + 4 * byte_213C88ACB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_213C56EA0 + 4 * byte_213C88AC6[v4]))();
}

uint64_t sub_213C56EA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C56EA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213C56EB0);
  return result;
}

uint64_t sub_213C56EBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213C56EC4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_213C56EC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C56ED0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Predicate.CodingKeys()
{
  return &type metadata for Predicate.CodingKeys;
}

unint64_t sub_213C56EF0()
{
  unint64_t result;

  result = qword_254D2EB78;
  if (!qword_254D2EB78)
  {
    result = MEMORY[0x2199C0970](&unk_213C89414, &type metadata for Predicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EB78);
  }
  return result;
}

unint64_t sub_213C56F38()
{
  unint64_t result;

  result = qword_254D2EB80;
  if (!qword_254D2EB80)
  {
    result = MEMORY[0x2199C0970](&unk_213C89384, &type metadata for Predicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EB80);
  }
  return result;
}

unint64_t sub_213C56F80()
{
  unint64_t result;

  result = qword_254D2EB88;
  if (!qword_254D2EB88)
  {
    result = MEMORY[0x2199C0970](&unk_213C893AC, &type metadata for Predicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2EB88);
  }
  return result;
}

uint64_t sub_213C56FDC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

PrivateFederatedLearning::ShuffleMethod_optional __swiftcall ShuffleMethod.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (PrivateFederatedLearning::ShuffleMethod_optional)rawValue;
}

uint64_t ShuffleMethod.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL sub_213C57054(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

_QWORD *sub_213C5706C@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_213C5708C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t EspressoFunction.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

PrivateFederatedLearning::EspressoFunction __swiftcall EspressoFunction.init(rawValue:)(PrivateFederatedLearning::EspressoFunction rawValue)
{
  PrivateFederatedLearning::EspressoFunction *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static EspressoFunction.evaluation.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static EspressoFunction.training.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

unint64_t sub_213C570C4()
{
  unint64_t result;

  result = qword_254D2EB90;
  if (!qword_254D2EB90)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for ShuffleMethod, &type metadata for ShuffleMethod);
    atomic_store(result, (unint64_t *)&qword_254D2EB90);
  }
  return result;
}

unint64_t sub_213C5710C()
{
  unint64_t result;

  result = qword_254D2EB98;
  if (!qword_254D2EB98)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for EspressoFunction, &type metadata for EspressoFunction);
    atomic_store(result, (unint64_t *)&qword_254D2EB98);
  }
  return result;
}

unint64_t sub_213C57154()
{
  unint64_t result;

  result = qword_254D2EBA0;
  if (!qword_254D2EBA0)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for EspressoFunction, &type metadata for EspressoFunction);
    atomic_store(result, (unint64_t *)&qword_254D2EBA0);
  }
  return result;
}

unint64_t sub_213C5719C()
{
  unint64_t result;

  result = qword_254D2EBA8;
  if (!qword_254D2EBA8)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for EspressoFunction, &type metadata for EspressoFunction);
    atomic_store(result, (unint64_t *)&qword_254D2EBA8);
  }
  return result;
}

unint64_t sub_213C571E4()
{
  unint64_t result;

  result = qword_254D2EBB0;
  if (!qword_254D2EBB0)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for EspressoFunction, &type metadata for EspressoFunction);
    atomic_store(result, (unint64_t *)&qword_254D2EBB0);
  }
  return result;
}

uint64_t sub_213C57228@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_213C56FDC(a1, a2);
}

uint64_t storeEnumTagSinglePayload for ShuffleMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213C57288 + 4 * byte_213C894A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213C572BC + 4 * byte_213C894A0[v4]))();
}

uint64_t sub_213C572BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C572C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213C572CCLL);
  return result;
}

uint64_t sub_213C572D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213C572E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213C572E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C572EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShuffleMethod()
{
  return &type metadata for ShuffleMethod;
}

ValueMetadata *type metadata accessor for EspressoFunction()
{
  return &type metadata for EspressoFunction;
}

uint64_t dispatch thunk of EspressoTrainer.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of EspressoTrainer.load(path:functions:inputs:outputs:weights:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 16))();
}

uint64_t dispatch thunk of EspressoTrainer.loadInferenceModel(path:inputs:outputs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of EspressoTrainer.finalize(batchSize:learningRate:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, unint64_t))(a4 + 32))(a1, a2 | ((HIDWORD(a2) & 1) << 32));
}

uint64_t dispatch thunk of EspressoTrainer.extractWeights(function:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of EspressoTrainer.extractOutputs(function:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of EspressoTrainer.unload(functions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of EspressoTrainer.train(_:featureSizes:numSamples:epochs:shuffleMethod:fullBatch:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 64))();
}

uint64_t dispatch thunk of EspressoTrainer.eval(_:featureSizes:numSamples:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t sub_213C573D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  char v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  unint64_t v14;
  char v15;
  unint64_t v16;
  id v17;
  id v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  id v29;
  int v30;
  int v31;
  char v32;
  _BYTE *v33;
  int v34;
  int v35;
  double v36;
  double v37;
  void (*v38)(char *, uint64_t);
  double v39;
  double v40;
  float v41;
  float v42;
  char v43;
  char *v44;
  unint64_t v45;
  char v46;
  id v47;
  float v48;
  float v49;
  float v50;
  _BYTE *v51;
  id v52;
  id v53;
  id v54;
  unint64_t v55;
  id v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;

  v2 = v1;
  v4 = sub_213C85ECC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 28) = 1;
  *(_DWORD *)(v2 + 32) = 0;
  *(_BYTE *)(v2 + 36) = 1;
  if (*(_QWORD *)(a1 + 16))
  {
    v8 = sub_213C4B3DC(0xD000000000000016, 0x8000000213C8E7B0);
    if ((v9 & 1) != 0)
    {
      sub_213C35070(*(_QWORD *)(a1 + 56) + 32 * v8, (uint64_t)&v60);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE68);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v10 = v58;
        if (*(_QWORD *)(a1 + 16) && (v11 = sub_213C4B3DC(0x65527961736D6172, 0xEE00444965706963), (v12 & 1) != 0))
        {
          sub_213C35070(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)&v60);
        }
        else
        {
          v60 = 0u;
          v61 = 0u;
        }
        swift_bridgeObjectRelease();
        if (!*((_QWORD *)&v61 + 1))
        {
          swift_bridgeObjectRelease();
          sub_213C34FD8((uint64_t)&v60);
          goto LABEL_8;
        }
        if ((swift_dynamicCast() & 1) != 0)
        {
          if (!v10[2])
            goto LABEL_31;
          v56 = v58;
          v57 = v59;
          v14 = sub_213C4B3DC(0xD000000000000013, 0x8000000213C8E750);
          if ((v15 & 1) == 0)
            goto LABEL_31;
          sub_213C35070(v10[7] + 32 * v14, (uint64_t)&v60);
          v16 = sub_213C35170();
          if ((swift_dynamicCast() & 1) == 0)
            goto LABEL_31;
          v55 = v16;
          v17 = v58;
          if (v10[2]
            && (v18 = v58, v19 = sub_213C4B3DC(0xD000000000000012, 0x8000000213C8E6B0), v17 = v18, (v20 & 1) != 0))
          {
            sub_213C35070(v10[7] + 32 * v19, (uint64_t)&v60);
            if ((swift_dynamicCast() & 1) == 0)
            {
LABEL_39:

LABEL_31:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_32:
              sub_213C3A984();
              swift_allocError();
              *v33 = 27;
              swift_willThrow();
LABEL_33:
              type metadata accessor for FederatedBuffer();
              swift_deallocPartialClassInstance();
              return v2;
            }
            v54 = v58;
            if (v10[2])
            {
              v21 = sub_213C4B3DC(0x73656E656C617473, 0xEE00656C61635373);
              v17 = v18;
              if ((v22 & 1) != 0)
              {
                sub_213C35070(v10[7] + 32 * v21, (uint64_t)&v60);
                if ((swift_dynamicCast() & 1) != 0)
                {
                  v53 = v58;
                  if (!v10[2] || (v23 = sub_213C4B3DC(0x73656E656C617473, 0xED00007361694273), (v24 & 1) == 0))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();

                    goto LABEL_32;
                  }
                  sub_213C35070(v10[7] + 32 * v23, (uint64_t)&v60);
                  if ((swift_dynamicCast() & 1) != 0)
                  {
                    v52 = v58;
                    v25 = v57;
                    *(_QWORD *)(v2 + 72) = v56;
                    *(_QWORD *)(v2 + 80) = v25;
                    *(_QWORD *)(v2 + 56) = objc_msgSend(v18, sel_integerValue);
                    objc_msgSend(v54, sel_doubleValue);
                    *(_QWORD *)(v2 + 16) = v26;
                    if (v10[2]
                      && (v27 = sub_213C4B3DC(0xD000000000000010, 0x8000000213C8E6F0), (v28 & 1) != 0)
                      && (sub_213C35070(v10[7] + 32 * v27, (uint64_t)&v60), (swift_dynamicCast() & 1) != 0))
                    {
                      v29 = v58;
                      objc_msgSend(v58, sel_floatValue);
                      v31 = v30;

                      v32 = 0;
                    }
                    else
                    {
                      v32 = 1;
                      v31 = 0;
                    }
                    *(_DWORD *)(v2 + 32) = v31;
                    *(_BYTE *)(v2 + 36) = v32;
                    objc_msgSend(v53, sel_floatValue);
                    *(_DWORD *)(v2 + 44) = v34;
                    objc_msgSend(v52, sel_floatValue);
                    *(_DWORD *)(v2 + 48) = v35;
                    sub_213C85EC0();
                    sub_213C85EA8();
                    v37 = v36;
                    v38 = *(void (**)(char *, uint64_t))(v5 + 8);
                    v38(v7, v4);
                    if (*(double *)(v2 + 16) >= v37)
                    {
                      v43 = 28;
                      goto LABEL_49;
                    }
                    if (*(float *)(v2 + 44) <= 0.0)
                    {
                      v43 = 29;
                      goto LABEL_49;
                    }
                    sub_213C85EC0();
                    sub_213C85EA8();
                    v40 = v39;
                    v38(v7, v4);
                    v41 = v40 - *(double *)(v2 + 16);
                    v42 = *(float *)(v2 + 48) + (float)(v41 / *(float *)(v2 + 44));
                    *(float *)(v2 + 40) = v42;
                    if ((~LODWORD(v42) & 0x7F800000) == 0)
                    {
                      v43 = 30;
LABEL_49:
                      swift_bridgeObjectRelease();
LABEL_50:
                      sub_213C3A984();
                      swift_allocError();
                      *v44 = v43;
                      swift_willThrow();

                      swift_bridgeObjectRelease();
                      goto LABEL_33;
                    }
                    if (v10[2] && (v45 = sub_213C4B3DC(0xD000000000000010, 0x8000000213C8E6D0), (v46 & 1) != 0))
                    {
                      sub_213C35070(v10[7] + 32 * v45, (uint64_t)&v60);
                    }
                    else
                    {
                      v60 = 0u;
                      v61 = 0u;
                    }
                    swift_bridgeObjectRelease();
                    if (*((_QWORD *)&v61 + 1))
                    {
                      if ((swift_dynamicCast() & 1) != 0)
                      {
                        v47 = v58;
                        objc_msgSend(v58, sel_floatValue);
                        v49 = v48;

                        if (*(float *)(v2 + 40) >= v49)
                        {
                          v43 = 31;
                          goto LABEL_50;
                        }
                      }
                    }
                    else
                    {
                      sub_213C34FD8((uint64_t)&v60);
                    }
                    if ((*(_BYTE *)(v2 + 36) & 1) != 0)
                    {
                      *(_DWORD *)(v2 + 64) = 1065353216;
                      v50 = 1.0;
                    }
                    else
                    {
                      v50 = powf(*(float *)(v2 + 40) + 1.0, *(float *)(v2 + 32));
                      *(float *)(v2 + 64) = v50;
                      if (v50 < 1.0)
                      {
LABEL_64:
                        sub_213C3A984();
                        swift_allocError();
                        *v51 = 32;
                        swift_willThrow();
                        swift_release();

                        return v2;
                      }
                    }
                    if ((~LODWORD(v50) & 0x7F800000) != 0)
                    {

                      return v2;
                    }
                    goto LABEL_64;
                  }

                  goto LABEL_31;
                }

                goto LABEL_39;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }

          goto LABEL_32;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_8:
  type metadata accessor for FederatedBuffer();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_213C57B90()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FederatedBuffer()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for DediscoKey()
{
  return &type metadata for DediscoKey;
}

uint64_t sub_213C57BE4()
{
  return sub_213C57C2C(0x73746C75736572, 0xE700000000000000);
}

uint64_t sub_213C57BFC()
{
  return sub_213C57C2C(0x7363697274656DLL, 0xE700000000000000);
}

uint64_t sub_213C57C14()
{
  return sub_213C57C2C(0x617461646174656DLL, 0xE800000000000000);
}

uint64_t sub_213C57C2C(uint64_t a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEC8);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_213C883E0;
  *(_QWORD *)(v5 + 32) = 7104112;
  *(_QWORD *)(v5 + 40) = 0xE300000000000000;
  v6 = *v2;
  v12 = v2[1];
  v7 = v12;
  v13 = v6;
  *(_OWORD *)(v5 + 48) = v6;
  *(_QWORD *)(v5 + 64) = a1;
  *(_QWORD *)(v5 + 72) = a2;
  v11 = v2[2];
  v8 = v11;
  *(_OWORD *)(v5 + 80) = v7;
  *(_OWORD *)(v5 + 96) = v8;
  sub_213C45404((uint64_t)&v13);
  sub_213C45404((uint64_t)&v12);
  sub_213C45404((uint64_t)&v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0);
  sub_213C4AF70();
  v9 = sub_213C860F4();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t type metadata accessor for FileRecipeDescriptor()
{
  return objc_opt_self();
}

uint64_t sub_213C57D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD v5[2];

  v0 = sub_213C85EF0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[0] = 0x3A656C6946;
  v5[1] = 0xE500000000000000;
  sub_213C85EE4();
  sub_213C85ED8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_213C861F0();
  swift_bridgeObjectRelease();
  return v5[0];
}

uint64_t sub_213C57DEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 24);
  if (v3 >= *(_QWORD *)(v1 + 16))
  {
    result = 0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
  }
  else
  {
    *(_QWORD *)(v1 + 24) = v3 + 1;
    v4 = type metadata accessor for FileRecipeDescriptor();
    result = swift_allocObject();
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = &off_24D0D9090;
  }
  *(_QWORD *)a1 = result;
  return result;
}

uint64_t sub_213C57E54()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FilePolicy()
{
  return objc_opt_self();
}

uint64_t sub_213C57E84()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_213C57E90()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = sub_213C5F2D4(*v0);
  swift_release();
  return v1;
}

_QWORD *sub_213C57EC4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_213C3549C(a1, a2, a3);
}

uint64_t sub_213C57EE4()
{
  type metadata accessor for FilePolicy();
  return sub_213C86268();
}

uint64_t sub_213C57F48@<X0>(uint64_t a1@<X8>)
{
  return sub_213C57DEC(a1);
}

uint64_t sub_213C57F68(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[11] = a1;
  v2[12] = v1;
  v3 = sub_213C85D1C();
  v2[13] = v3;
  v2[14] = *(_QWORD *)(v3 - 8);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E390);
  v2[16] = swift_task_alloc();
  v4 = sub_213C85D4C();
  v2[17] = v4;
  v2[18] = *(_QWORD *)(v4 - 8);
  v2[19] = swift_task_alloc();
  v5 = sub_213C85E18();
  v2[20] = v5;
  v2[21] = *(_QWORD *)(v5 - 8);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213C58064()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _BYTE *v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  _BYTE *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  void (*v19)(_QWORD, uint64_t, uint64_t, _QWORD);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(unint64_t, uint64_t, uint64_t);
  uint64_t inited;
  id v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  unint64_t v54;
  id v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58[4];

  v1 = *(_QWORD *)(v0 + 96);
  sub_213C3A984();
  v2 = (void *)swift_allocError();
  *v3 = 9;
  swift_retain();
  sub_213C46938(v2, v1, v58);

  v4 = v58[0];
  v5 = v58[1];
  v6 = (void *)swift_allocError();
  *v7 = 15;
  sub_213C3B534(v4, v5);
  v8 = sub_213C49500(v6);
  sub_213C3B078(v4, v5);

  swift_bridgeObjectRetain();
  sub_213C85D88();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F030);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_213C885B0;
  v12 = (void *)*MEMORY[0x24BDBCC98];
  *(_QWORD *)(v11 + 32) = *MEMORY[0x24BDBCC98];
  v13 = v12;
  v14 = sub_213C863DC();
  swift_bridgeObjectRelease();

  v56 = v5;
  v57 = v4;
  v55 = v8;
  if (!v14)
  {
    v38 = MEMORY[0x24BEE4AF8];
LABEL_23:
    v39 = *(_QWORD *)(v0 + 200);
    v40 = *(_QWORD *)(v0 + 160);
    v41 = *(_QWORD *)(v0 + 168);
    v42 = *(_QWORD **)(v0 + 88);
    v43 = v42[3];
    v44 = v42[4];
    __swift_project_boxed_opaque_existential_0Tm(v42, v43);
    v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 16))(v43, v44);
    v47 = v46;
    type metadata accessor for PFLTask();
    v48 = (_QWORD *)swift_allocObject();
    v48[2] = v45;
    v48[3] = v47;
    v48[4] = v55;
    v48[5] = v38;
    v48[6] = 0;
    sub_213C3B078(v57, v56);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v48);
  }
  v53 = (void *)v14;
  sub_213C863B8();
  sub_213C85D40();
  if (!*(_QWORD *)(v0 + 80))
  {
    v54 = MEMORY[0x24BEE4AF8];
LABEL_22:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));

    v38 = v54;
    goto LABEL_23;
  }
  v52 = v13;
  v15 = v0 + 16;
  v16 = *(_QWORD *)(v0 + 168);
  v54 = MEMORY[0x24BEE4AF8];
  v17 = *(_QWORD *)(v0 + 112);
  while (1)
  {
    v18 = swift_dynamicCast();
    v19 = *(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v16 + 56);
    v20 = *(_QWORD *)(v0 + 160);
    v21 = *(_QWORD *)(v0 + 128);
    if (!v18)
    {
      v19(*(_QWORD *)(v0 + 128), 1, 1, *(_QWORD *)(v0 + 160));
      goto LABEL_8;
    }
    v19(*(_QWORD *)(v0 + 128), 0, 1, *(_QWORD *)(v0 + 160));
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v21, 1, v20) != 1)
      break;
LABEL_8:
    sub_213C58B24(*(_QWORD *)(v0 + 128));
LABEL_9:
    sub_213C85D40();
    if (!*(_QWORD *)(v0 + 80))
      goto LABEL_22;
  }
  v49 = v17;
  v22 = *(void (**)(unint64_t, uint64_t, uint64_t))(v16 + 32);
  v22(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 160));
  v50 = v15;
  v51 = v10;
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213C885B0;
  *(_QWORD *)(inited + 32) = v52;
  v24 = v52;
  sub_213C58B64(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_213C85D70();
  swift_bridgeObjectRelease();
  result = sub_213C85D10();
  if (result != 2)
  {
    v26 = *(_QWORD *)(v0 + 192);
    v15 = v50;
    if ((result & 1) != 0)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v16 + 16))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160));
      v28 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v28 = sub_213C41D00(0, *(_QWORD *)(v54 + 16) + 1, 1, v54);
      v30 = *(_QWORD *)(v28 + 16);
      v29 = *(_QWORD *)(v28 + 24);
      v31 = v30 + 1;
      if (v30 >= v29 >> 1)
      {
        v37 = sub_213C41D00(v29 > 1, v30 + 1, 1, v28);
        v31 = v30 + 1;
        v54 = v37;
      }
      else
      {
        v54 = v28;
      }
      v32 = *(_QWORD *)(v0 + 184);
      v33 = *(_QWORD *)(v0 + 192);
      v34 = *(_QWORD *)(v0 + 160);
      v35 = *(_QWORD *)(v0 + 120);
      v36 = *(_QWORD *)(v0 + 104);
      *(_QWORD *)(v54 + 16) = v31;
      v22(v54+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v30, v32, v34);
      v17 = v49;
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v35, v36);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v33, v34);
      v15 = v50;
      v10 = v51;
    }
    else
    {
      v27 = *(_QWORD *)(v0 + 160);
      v17 = v49;
      (*(void (**)(_QWORD, _QWORD))(v49 + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v26, v27);
    }
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_213C588E0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PFLLocalTaskDownloader()
{
  return objc_opt_self();
}

uint64_t sub_213C5892C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_213C58944()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(uint64_t **)(v0 + 16);
  v2 = type metadata accessor for FilePolicy();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_213C897D0;
  v1[3] = v2;
  v1[4] = sub_213C3B630(&qword_254D2F028, v4, (uint64_t (*)(uint64_t))type metadata accessor for FilePolicy, (uint64_t)&unk_213C898F0);
  *v1 = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C589CC(uint64_t a1)
{
  sub_213C8652C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_213C861F0();
  return a1;
}

uint64_t sub_213C58A4C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_213C3A8A8;
  return sub_213C57F68(a1);
}

uint64_t sub_213C58A9C(uint64_t a1, uint64_t a2)
{
  return sub_213C3B630(&qword_254D2F018, a2, (uint64_t (*)(uint64_t))type metadata accessor for FilePolicy, (uint64_t)&unk_213C89858);
}

uint64_t sub_213C58AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_213C3B630(&qword_254D2F018, a2, (uint64_t (*)(uint64_t))type metadata accessor for FilePolicy, (uint64_t)&unk_213C89858);
  result = sub_213C3B630(&qword_254D2F020, v3, (uint64_t (*)(uint64_t))type metadata accessor for FilePolicy, (uint64_t)&unk_213C89888);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_213C58B24(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E390);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213C58B64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F040);
    v3 = sub_213C864FC();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_213C86148();
      sub_213C867F0();
      v7 = v6;
      sub_213C861CC();
      v8 = sub_213C86808();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_213C86148();
        v17 = v16;
        if (v15 == sub_213C86148() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_213C86748();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_213C86148();
          v24 = v23;
          if (v22 == sub_213C86148() && v24 == v25)
            goto LABEL_3;
          v27 = sub_213C86748();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_213C58D90(int a1, size_t a2)
{
  uint64_t v4;
  uint64_t result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_213C865C8();
    __break(1u);
  }
  else
  {
    if (!a2)
      return MEMORY[0x24BEE4AF8];
    v4 = sub_213C862B0();
    *(_QWORD *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return v4;
  }
  return result;
}

uint64_t sub_213C58E48(unint64_t a1, int32x2_t a2)
{
  uint64_t result;
  __int32 *v4;
  unint64_t v5;
  __int32 v6;
  int32x4_t v7;
  int32x4_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a1 & 0x8000000000000000) != 0)
  {
    result = sub_213C865C8();
    __break(1u);
    return result;
  }
  if (!a1)
    return MEMORY[0x24BEE4AF8];
  result = sub_213C862B0();
  *(_QWORD *)(result + 16) = a1;
  v4 = (__int32 *)(result + 32);
  if (a1 < 8)
  {
    v5 = 0;
    v6 = a2.i32[0];
LABEL_9:
    v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 += a1 & 0xFFFFFFFFFFFFFFF8;
  v6 = a2.i32[0];
  v7 = vdupq_lane_s32(a2, 0);
  v8 = (int32x4_t *)(result + 48);
  v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v5 != a1)
    goto LABEL_9;
  return result;
}

uint64_t sub_213C58F38(unsigned int a1, unint64_t a2)
{
  uint64_t result;
  unsigned int *v5;
  unint64_t v6;
  int32x4_t v7;
  int32x4_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_213C865C8();
    __break(1u);
    return result;
  }
  if (!a2)
    return MEMORY[0x24BEE4AF8];
  result = sub_213C862B0();
  *(_QWORD *)(result + 16) = a2;
  v5 = (unsigned int *)(result + 32);
  if (a2 < 8)
  {
    v6 = 0;
LABEL_9:
    v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v5 += a2 & 0xFFFFFFFFFFFFFFF8;
  v7 = vdupq_n_s32(a1);
  v8 = (int32x4_t *)(result + 48);
  v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v6 != a2)
    goto LABEL_9;
  return result;
}

uint64_t sub_213C59020(char a1, size_t a2)
{
  uint64_t v4;
  uint64_t result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_213C865C8();
    __break(1u);
  }
  else
  {
    if (!a2)
      return MEMORY[0x24BEE4AF8];
    v4 = sub_213C862B0();
    *(_QWORD *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1 & 1, a2);
    return v4;
  }
  return result;
}

uint64_t EspressoMILTrainer.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;

  swift_allocObject();
  v2 = sub_213C617D8(a1);
  swift_release();
  return v2;
}

uint64_t EspressoMILTrainer.init(_:)(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_213C617D8(a1);
  swift_release();
  return v1;
}

uint64_t EspressoMILTrainer.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  if ((v1 & 2) != 0)
  {
    espresso_plan_destroy();
    v1 = *(_QWORD *)(v0 + 96);
  }
  if ((v1 & 1) != 0)
    espresso_plan_destroy();
  espresso_context_destroy();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EspressoMILTrainer.__deallocating_deinit()
{
  EspressoMILTrainer.deinit();
  return swift_deallocClassInstance();
}

uint64_t *sub_213C5920C(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *result;
  if ((*result & 1) != 0 && (*(_BYTE *)(v1 + 96) & 1) != 0)
    result = (uint64_t *)espresso_plan_destroy();
  if ((v2 & 2) != 0 && (*(_BYTE *)(v1 + 96) & 2) != 0)
    result = (uint64_t *)espresso_plan_destroy();
  *(_QWORD *)(v1 + 96) &= ~v2;
  return result;
}

uint64_t sub_213C5925C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  double Current;
  char isUniquelyReferenced_nonNull_native;
  _BYTE *v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v8 = v7;
  v9 = v6;
  v15 = *a3;
  if ((sub_213C8622C() & 1) != 0)
  {
    *(_QWORD *)(v9 + 80) = a1;
    *(_QWORD *)(v9 + 88) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v9 + 96) = v15;
    v16 = *(_QWORD *)(v9 + 16);
    swift_retain();
    Current = CFAbsoluteTimeGetCurrent();
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v35 = v15;
    v36 = *(_QWORD *)(v16 + 16);
    *(_QWORD *)(v16 + 16) = 0x8000000000000000;
    sub_213C4B824(0x6F4C2E6C65646F4DLL, 0xEA00000000006461, isUniquelyReferenced_nonNull_native, Current);
    *(_QWORD *)(v16 + 16) = v36;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    if ((v15 & 2) != 0)
    {
      *(_BYTE *)(v9 + 112) = 1;
      swift_bridgeObjectRetain();
      v37 = sub_213C86250();
      v39 = v21;
      sub_213C861E4();
      v22 = v9 + 32;
      v34 = a4;
      v23 = *(_QWORD *)(v9 + 48);
      swift_beginAccess();
      v24 = v23;
      a4 = v34;
      sub_213C59770(v37, v39, v24, v9 + 32, v34, a5, a6);
      swift_endAccess();
      result = swift_bridgeObjectRelease();
      if (v7)
        return result;
      v33 = a5;
      espresso_network_declare_input();
      v25 = *(_QWORD *)(a6 + 16);
      if (v25)
      {
        swift_bridgeObjectRetain();
        v32 = a6;
        v26 = a6 + 40;
        do
        {
          v27 = *(unsigned int *)(v9 + 40);
          swift_bridgeObjectRetain_n();
          sub_213C861F0();
          swift_bridgeObjectRelease();
          sub_213C86184();
          swift_bridgeObjectRelease();
          v22 = v22 & 0xFFFFFFFF00000000 | v27;
          v28 = espresso_network_declare_output();
          swift_release();
          if (v28)
          {
            swift_bridgeObjectRelease();
            sub_213C618F4();
            swift_allocError();
            *v31 = 3;
            return swift_willThrow();
          }
          v26 += 16;
          --v25;
        }
        while (v25);
        a6 = v32;
        swift_bridgeObjectRelease();
        v8 = v7;
        a5 = v33;
        a4 = v34;
        if ((v35 & 1) != 0)
          goto LABEL_15;
      }
      else
      {
        a5 = v33;
        if ((v15 & 1) != 0)
        {
LABEL_15:
          *(_BYTE *)(v9 + 112) = 1;
LABEL_16:
          swift_bridgeObjectRetain();
          v38 = sub_213C86250();
          v40 = v29;
          sub_213C861E4();
          v30 = *(_QWORD *)(v9 + 72);
          swift_beginAccess();
          a4 = v34;
          sub_213C59770(v38, v40, v30, v9 + 56, v34, a5, a6);
          swift_endAccess();
          result = swift_bridgeObjectRelease();
          if (v8)
            return result;
        }
      }
    }
    else if ((v15 & 1) != 0)
    {
      v34 = a4;
      *(_BYTE *)(v9 + 112) = 0;
      goto LABEL_16;
    }
    *(_QWORD *)(v9 + 344) = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v9 + 352) = a5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v9 + 360) = a6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_213C4B0F8(0x6F4C2E6C65646F4DLL, 0xEA00000000006461);
    return swift_release();
  }
  sub_213C618F4();
  swift_allocError();
  *v19 = 0;
  return swift_willThrow();
}

uint64_t sub_213C59738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = 1;
  return sub_213C5925C(a1, a2, &v5, a3, a4, MEMORY[0x24BEE4AF8]);
}

uint64_t sub_213C59770(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_213C86184();
  v12 = espresso_plan_add_network();
  result = swift_release();
  if (v12)
  {
    v14 = 8;
LABEL_26:
    sub_213C618F4();
    swift_allocError();
    *v37 = v14;
    return swift_willThrow();
  }
  v15 = *(_QWORD *)(a5 + 16);
  if (v15)
  {
    v41 = a6;
    v16 = *(unsigned int *)(a4 + 8);
    v17 = sub_213C86184();
    swift_bridgeObjectRetain();
    v18 = espresso_network_declare_input();
    swift_release();
    if (v18)
    {
LABEL_8:
      v14 = 2;
LABEL_25:
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    v38 = a4;
    v39 = a7;
    v19 = a5 + 56;
    while (--v15)
    {
      v20 = v19 + 16;
      sub_213C86184();
      v17 = v17 & 0xFFFFFFFF00000000 | v16;
      v21 = espresso_network_declare_input();
      swift_release();
      v19 = v20;
      if (v21)
        goto LABEL_8;
    }
    result = swift_bridgeObjectRelease();
    a7 = v39;
    a6 = v41;
    a4 = v38;
  }
  v22 = *(_QWORD *)(a6 + 16);
  if (v22)
  {
    v40 = a7;
    v23 = *(unsigned int *)(a4 + 8);
    sub_213C86184();
    v24 = a4;
    swift_bridgeObjectRetain();
    v25 = a6;
    v26 = espresso_network_declare_output();
    swift_release();
    if (v26)
    {
      v14 = 3;
      goto LABEL_25;
    }
    v27 = v25 + 56;
    while (--v22)
    {
      v28 = v27 + 16;
      sub_213C86184();
      v24 = v24 & 0xFFFFFFFF00000000 | v23;
      v29 = espresso_network_declare_output();
      swift_release();
      v27 = v28;
      if (v29)
      {
        v14 = 3;
        goto LABEL_25;
      }
    }
    result = swift_bridgeObjectRelease();
    a7 = v40;
  }
  if (*(_BYTE *)(v7 + 112) == 1)
  {
    v30 = *(_QWORD *)(a7 + 16);
    if (v30)
    {
      v31 = *(unsigned int *)(a4 + 8);
      v32 = sub_213C86184();
      swift_bridgeObjectRetain();
      v33 = espresso_network_declare_input();
      swift_release();
      if (v33)
      {
        v14 = 17;
        goto LABEL_25;
      }
      v34 = a7 + 56;
      while (--v30)
      {
        v35 = v34 + 16;
        sub_213C86184();
        v32 = v32 & 0xFFFFFFFF00000000 | v31;
        v36 = espresso_network_declare_input();
        swift_release();
        v14 = 17;
        v34 = v35;
        if (v36)
          goto LABEL_25;
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_213C59A78(uint64_t a1, uint64_t a2, uint64_t a3, char **a4)
{
  uint64_t v4;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  int v30;
  char v31;
  uint64_t i;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  char *v36;
  uint64_t v37;
  char **v38;
  char *v39;
  char __s1[8];
  uint64_t v41;
  char *v42;
  _QWORD *v43;

  if (*(_QWORD *)(*(_QWORD *)(v4 + 344) + 16) >> 60)
  {
    __break(1u);
    goto LABEL_53;
  }
  v6 = swift_slowAlloc();
  v7 = (char *)v6;
  v8 = *(_QWORD *)(v4 + 344);
  v9 = *(_QWORD *)(v8 + 16);
  v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v38 = a4;
    v39 = (char *)v6;
    v11 = v4;
    v43 = (_QWORD *)MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_213C547B4(0, v9, 0);
    v12 = (uint64_t *)(v8 + 40);
    while (1)
    {
      v13 = *(v12 - 1);
      v14 = *v12;
      if ((*v12 & 0x1000000000000000) != 0 || !(v14 & 0x2000000000000000 | v13 & 0x1000000000000000))
      {
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F3F8);
        sub_213C86508();
        v17 = v42;
        if (!v42)
          goto LABEL_54;
        goto LABEL_12;
      }
      if ((v14 & 0x2000000000000000) != 0)
      {
        *(_QWORD *)__s1 = *(v12 - 1);
        v41 = v14 & 0xFFFFFFFFFFFFFFLL;
        swift_bridgeObjectRetain();
        v16 = __s1;
      }
      else
      {
        if ((v13 & 0x1000000000000000) != 0)
        {
          v15 = (v14 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_9:
          swift_bridgeObjectRetain();
          v16 = (char *)v15;
          goto LABEL_11;
        }
        v15 = sub_213C86574();
        if (v15)
          goto LABEL_9;
        swift_bridgeObjectRetain();
        v16 = 0;
      }
LABEL_11:
      v42 = strdup(v16);
      v17 = v42;
      if (!v42)
        goto LABEL_54;
LABEL_12:
      swift_bridgeObjectRelease();
      v10 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_213C547B4(0, v10[2] + 1, 1);
        v10 = v43;
      }
      v19 = v10[2];
      v18 = v10[3];
      if (v19 >= v18 >> 1)
      {
        sub_213C547B4(v18 > 1, v19 + 1, 1);
        v10 = v43;
      }
      v12 += 2;
      v10[2] = v19 + 1;
      v10[v19 + 4] = v17;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        v4 = v11;
        v20 = *(_QWORD *)(*(_QWORD *)(v11 + 344) + 16);
        a4 = v38;
        v7 = v39;
        goto LABEL_23;
      }
    }
  }
  v20 = 0;
LABEL_23:
  if (v10 + 4 < (_QWORD *)&v7[8 * v20] && v7 < (char *)&v10[v20 + 4])
    goto LABEL_55;
  memcpy(v7, v10 + 4, 8 * v20);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(*(_QWORD *)(v4 + 344) + 16) >> 31)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    result = sub_213C86610();
    __break(1u);
    return result;
  }
  v22 = *a4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v22 = sub_213C4213C(0, *((_QWORD *)v22 + 2), 0, v22);
  *a4 = v22;
  v23 = a4[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v23 = sub_213C4213C(0, *((_QWORD *)v23 + 2), 0, v23);
  a4[1] = v23;
  v24 = a4[2];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v24 = sub_213C4213C(0, *((_QWORD *)v24 + 2), 0, v24);
  a4[2] = v24;
  v25 = a4[3];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v25 = sub_213C4213C(0, *((_QWORD *)v25 + 2), 0, v25);
  a4[3] = v25;
  v26 = a4[4];
  swift_bridgeObjectRetain();
  v37 = v4;
  v27 = v7;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v26 = sub_213C4213C(0, *((_QWORD *)v26 + 2), 0, v26);
  a4[4] = v26;
  v28 = a4[5];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v28 = sub_213C4213C(0, *((_QWORD *)v28 + 2), 0, v28);
  a4[5] = v28;
  v29 = v27;
  v30 = espresso_network_change_input_blob_shapes_seq_rank();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v30)
  {
    v31 = 1;
LABEL_50:
    sub_213C618F4();
    swift_allocError();
    *v36 = v31;
    return swift_willThrow();
  }
  for (i = *(_QWORD *)(*(_QWORD *)(v37 + 344) + 16); i; --i)
  {
    v34 = *(_QWORD *)v27;
    v27 += 8;
    v33 = v34;
    if (v34)
      MEMORY[0x2199C0A30](v33, -1, -1);
  }
  MEMORY[0x2199C0A30](v29, -1, -1);
  result = espresso_plan_build();
  if ((_DWORD)result)
  {
    v31 = 9;
    goto LABEL_50;
  }
  return result;
}

uint64_t sub_213C59F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t *v8;
  unsigned int *v9;
  char *v10;
  char v11;
  _DWORD **v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _DWORD *v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _DWORD **v65;
  int v66;
  _QWORD *v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  _OWORD v71[3];
  _OWORD v72[10];
  uint64_t v73;
  _BYTE v74[176];
  _BYTE __dst[176];
  _OWORD v76[11];
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;

  v4 = v2;
  v80 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)(v2 + 104) = a1;
  v6 = *(_QWORD *)(v2 + 96);
  if ((v6 & 1) != 0)
  {
    swift_beginAccess();
    sub_213C5EBE4((uint64_t *)v76);
    v77 = v76[0];
    v78 = v76[1];
    v79 = v76[2];
    sub_213C59A78(*(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 56), *(unsigned int *)(v2 + 64), (char **)&v77);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = *(_QWORD *)(v2 + 96);
  }
  if ((v6 & 2) == 0)
  {
    if ((v6 & 1) != 0)
      goto LABEL_47;
    goto LABEL_7;
  }
  if ((a2 & 0x100000000) != 0)
  {
    sub_213C618F4();
    swift_allocError();
    v11 = 21;
LABEL_12:
    *v10 = v11;
    return swift_willThrow();
  }
  swift_beginAccess();
  sub_213C5EBE4((uint64_t *)&v77);
  v71[0] = v77;
  v71[1] = v78;
  v71[2] = v79;
  sub_213C59A78(*(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 32), *(unsigned int *)(v2 + 40), (char **)v71);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v12 = (_DWORD **)(v2 + 176);
  swift_beginAccess();
  v13 = espresso_network_bind_buffer();
  swift_endAccess();
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213C618F4();
    swift_allocError();
    v11 = 16;
    goto LABEL_12;
  }
  v14 = *(_QWORD *)(v2 + 360);
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
    goto LABEL_45;
  v65 = (_DWORD **)(v2 + 176);
  v66 = a2;
  v16 = (_QWORD *)(v2 + 168);
  v17 = (uint64_t *)(v14 + 40);
  swift_bridgeObjectRetain();
  v70 = v15 - 1;
  v67 = (_QWORD *)(v2 + 168);
  while (1)
  {
    v18 = *(v17 - 1);
    v19 = *v17;
    v69 = v17;
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v76[0] = *v16;
    v21 = *(_QWORD *)&v76[0];
    *v16 = 0x8000000000000000;
    v23 = sub_213C4B3DC(v18, v19);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
    {
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
    }
    v27 = v22;
    if (*(_QWORD *)(v21 + 24) >= v26)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v30 = *(_QWORD **)&v76[0];
        if ((v22 & 1) != 0)
          goto LABEL_24;
      }
      else
      {
        sub_213C60C44();
        v30 = *(_QWORD **)&v76[0];
        if ((v27 & 1) != 0)
          goto LABEL_24;
      }
    }
    else
    {
      sub_213C60240(v26, isUniquelyReferenced_nonNull_native);
      v28 = sub_213C4B3DC(v18, v19);
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_55;
      v23 = v28;
      v30 = *(_QWORD **)&v76[0];
      if ((v27 & 1) != 0)
      {
LABEL_24:
        v31 = v30[7] + 168 * v23;
        *(_DWORD *)(v31 + 160) = 0;
        *(_OWORD *)(v31 + 128) = 0u;
        *(_OWORD *)(v31 + 144) = 0u;
        *(_OWORD *)(v31 + 96) = 0u;
        *(_OWORD *)(v31 + 112) = 0u;
        *(_OWORD *)(v31 + 64) = 0u;
        *(_OWORD *)(v31 + 80) = 0u;
        *(_OWORD *)(v31 + 32) = 0u;
        *(_OWORD *)(v31 + 48) = 0u;
        *(_OWORD *)v31 = 0u;
        *(_OWORD *)(v31 + 16) = 0u;
        goto LABEL_28;
      }
    }
    v30[(v23 >> 6) + 8] |= 1 << v23;
    v32 = (uint64_t *)(v30[6] + 16 * v23);
    *v32 = v18;
    v32[1] = v19;
    v33 = v30[7] + 168 * v23;
    *(_DWORD *)(v33 + 160) = 0;
    *(_OWORD *)(v33 + 128) = 0u;
    *(_OWORD *)(v33 + 144) = 0u;
    *(_OWORD *)(v33 + 96) = 0u;
    *(_OWORD *)(v33 + 112) = 0u;
    *(_OWORD *)(v33 + 64) = 0u;
    *(_OWORD *)(v33 + 80) = 0u;
    *(_OWORD *)(v33 + 32) = 0u;
    *(_OWORD *)(v33 + 48) = 0u;
    *(_OWORD *)v33 = 0u;
    *(_OWORD *)(v33 + 16) = 0u;
    v34 = v30[2];
    v35 = __OFADD__(v34, 1);
    v36 = v34 + 1;
    if (v35)
      goto LABEL_53;
    v30[2] = v36;
    swift_bridgeObjectRetain();
LABEL_28:
    *(_QWORD *)(v4 + 168) = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    v37 = *(unsigned int *)(v4 + 40);
    *(_QWORD *)&v77 = v18;
    *((_QWORD *)&v77 + 1) = v19;
    swift_bridgeObjectRetain();
    sub_213C861F0();
    sub_213C86184();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v38 = swift_isUniquelyReferenced_nonNull_native();
    v39 = *(_QWORD **)(v4 + 168);
    *(_QWORD *)(v4 + 168) = 0x8000000000000000;
    swift_bridgeObjectRetain();
    v41 = sub_213C4B3DC(v18, v19);
    v42 = v39[2];
    v43 = (v40 & 1) == 0;
    v44 = v42 + v43;
    if (__OFADD__(v42, v43))
      goto LABEL_52;
    v45 = v40;
    if (v39[3] >= v44)
    {
      if ((v38 & 1) != 0)
      {
        if ((v40 & 1) == 0)
          goto LABEL_42;
      }
      else
      {
        sub_213C60C44();
        if ((v45 & 1) == 0)
          goto LABEL_42;
      }
    }
    else
    {
      sub_213C60240(v44, v38);
      v46 = sub_213C4B3DC(v18, v19);
      if ((v45 & 1) != (v47 & 1))
        goto LABEL_55;
      v41 = v46;
      if ((v45 & 1) == 0)
      {
LABEL_42:
        __break(1u);
LABEL_43:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_213C618F4();
        swift_allocError();
        v11 = 6;
        goto LABEL_12;
      }
    }
    memmove(__dst, (const void *)(v39[7] + 168 * v41), 0xA8uLL);
    sub_213C62114((uint64_t)__dst);
    sub_213C6211C((uint64_t)__dst, (uint64_t)v74);
    v48 = v68 & 0xFFFFFFFF00000000 | v37;
    v49 = espresso_network_bind_buffer();
    sub_213C6211C((uint64_t)v74, (uint64_t)v76);
    sub_213C6211C((uint64_t)v76, (uint64_t)&v77);
    if (sub_213C62164((uint64_t)&v77) == 1)
    {
      swift_arrayDestroy();
      sub_213C613C0(v41, (uint64_t)v39);
    }
    else
    {
      sub_213C6211C((uint64_t)v76, (uint64_t)v72);
      v50 = v39[7] + 168 * v41;
      v51 = v72[7];
      v52 = v72[8];
      v53 = v72[9];
      *(_QWORD *)(v50 + 160) = v73;
      *(_OWORD *)(v50 + 128) = v52;
      *(_OWORD *)(v50 + 144) = v53;
      *(_OWORD *)(v50 + 112) = v51;
      v54 = v72[3];
      v55 = v72[4];
      v56 = v72[6];
      *(_OWORD *)(v50 + 80) = v72[5];
      *(_OWORD *)(v50 + 96) = v56;
      *(_OWORD *)(v50 + 48) = v54;
      *(_OWORD *)(v50 + 64) = v55;
      v58 = v72[1];
      v57 = v72[2];
      *(_OWORD *)v50 = v72[0];
      *(_OWORD *)(v50 + 16) = v58;
      *(_OWORD *)(v50 + 32) = v57;
    }
    swift_bridgeObjectRelease();
    v16 = v67;
    *v67 = v39;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    if (v49)
      goto LABEL_43;
    if (!v70)
      break;
    v68 = v48;
    v17 = v69 + 2;
    --v70;
  }
  swift_bridgeObjectRelease();
  LODWORD(a2) = v66;
  v12 = v65;
LABEL_45:
  v59 = *v12;
  if (*v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v59 = a2;
    if ((*(_QWORD *)(v4 + 96) & 1) != 0)
    {
LABEL_47:
      v8 = (uint64_t *)(v4 + 56);
      swift_beginAccess();
      v9 = (unsigned int *)(v4 + 64);
      goto LABEL_48;
    }
LABEL_7:
    v8 = (uint64_t *)(v4 + 32);
    swift_beginAccess();
    v9 = (unsigned int *)(v4 + 40);
LABEL_48:
    v60 = *v9;
    v61 = *v8;
    v62 = *(_QWORD *)(v4 + 344);
    swift_beginAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_213C61A2C(v61, v60, v62, (uint64_t *)(v4 + 120), (uint64_t *)(v4 + 128));
    swift_endAccess();
    swift_endAccess();
    swift_bridgeObjectRelease();
    v63 = *(_QWORD *)(v4 + 352);
    swift_beginAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_213C61A2C(v61, v60, v63, (uint64_t *)(v4 + 136), (uint64_t *)(v4 + 144));
    swift_endAccess();
    swift_endAccess();
    swift_bridgeObjectRelease();
    v64 = *(_QWORD *)(v4 + 360);
    swift_beginAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_213C61A2C(v61, v60, v64, (uint64_t *)(v4 + 152), (uint64_t *)(v4 + 160));
    swift_endAccess();
    swift_endAccess();
    result = swift_bridgeObjectRelease();
    if (*(_BYTE *)(v4 + 112) == 1)
      return sub_213C5E048();
  }
  else
  {
    __break(1u);
LABEL_55:
    result = sub_213C8679C();
    __break(1u);
  }
  return result;
}

uint64_t sub_213C5A8D4()
{
  uint64_t v0;

  v0 = sub_213C862B0();
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 16) = 10;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  sub_213C86184();
  espresso_network_query_blob_shape();
  swift_release();
  return v0;
}

uint64_t sub_213C5A9DC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t result;
  _OWORD v30[10];
  uint64_t v31;
  _QWORD v32[22];
  _BYTE __dst[176];
  _BYTE v34[176];
  _BYTE v35[184];
  uint64_t v36;

  if (!a1)
    goto LABEL_16;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v36 = *a3;
  v11 = v36;
  *a3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  v13 = sub_213C4B3DC(a4, a5);
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v5 = v12;
  if (*(_QWORD *)(v11 + 24) >= v16)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v12 & 1) != 0)
        goto LABEL_9;
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
LABEL_14:
    sub_213C60C44();
    if ((v5 & 1) != 0)
      goto LABEL_9;
    goto LABEL_15;
  }
  sub_213C60240(v16, isUniquelyReferenced_nonNull_native);
  v17 = sub_213C4B3DC(a4, a5);
  if ((v5 & 1) != (v18 & 1))
  {
LABEL_17:
    result = sub_213C8679C();
    __break(1u);
    return result;
  }
  v13 = v17;
  if ((v5 & 1) == 0)
    goto LABEL_15;
LABEL_9:
  v19 = v36;
  memmove(__dst, (const void *)(*(_QWORD *)(v36 + 56) + 168 * v13), 0xA8uLL);
  sub_213C62114((uint64_t)__dst);
  sub_213C6211C((uint64_t)__dst, (uint64_t)v32);
  v32[0] = a1;
  sub_213C6211C((uint64_t)v32, (uint64_t)v34);
  sub_213C6211C((uint64_t)v34, (uint64_t)v35);
  if (sub_213C62164((uint64_t)v35) == 1)
  {
    swift_arrayDestroy();
    sub_213C613C0(v13, v19);
  }
  else
  {
    sub_213C6211C((uint64_t)v34, (uint64_t)v30);
    v20 = *(_QWORD *)(v19 + 56) + 168 * v13;
    v21 = v30[7];
    v22 = v30[8];
    v23 = v30[9];
    *(_QWORD *)(v20 + 160) = v31;
    *(_OWORD *)(v20 + 128) = v22;
    *(_OWORD *)(v20 + 144) = v23;
    *(_OWORD *)(v20 + 112) = v21;
    v24 = v30[3];
    v25 = v30[4];
    v26 = v30[6];
    *(_OWORD *)(v20 + 80) = v30[5];
    *(_OWORD *)(v20 + 96) = v26;
    *(_OWORD *)(v20 + 48) = v24;
    *(_OWORD *)(v20 + 64) = v25;
    v27 = v30[2];
    v28 = v30[1];
    *(_OWORD *)v20 = v30[0];
    *(_OWORD *)(v20 + 16) = v28;
    *(_OWORD *)(v20 + 32) = v27;
  }
  swift_bridgeObjectRelease();
  *a3 = v19;
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C5ABF8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *a1;
  swift_beginAccess();
  v2 = sub_213C5AC70(&v4, (uint64_t *)(v1 + 152));
  swift_endAccess();
  return v2;
}

uint64_t sub_213C5AC70(_QWORD *a1, uint64_t *a2)
{
  unint64_t v2;
  int32x2_t v3;
  unsigned int *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (*a1 == 1)
  {
    swift_beginAccess();
    v4 = (unsigned int *)(v24 + 64);
  }
  else
  {
    swift_beginAccess();
    v4 = (unsigned int *)(v24 + 40);
  }
  v30 = *v4;
  v5 = *(_QWORD *)(v24 + 360);
  v28 = *(_QWORD *)(v5 + 16);
  if (v28)
  {
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = 0;
    do
    {
      if (v6 >= *(_QWORD *)(v5 + 16))
      {
        __break(1u);
        __break(1u);
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        __break(1u);
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_29:
        __break(1u);
      }
      swift_bridgeObjectRetain();
      v8 = sub_213C862B0();
      *(_OWORD *)(v8 + 32) = 0u;
      *(_QWORD *)(v8 + 16) = 10;
      *(_OWORD *)(v8 + 48) = 0u;
      *(_OWORD *)(v8 + 64) = 0u;
      *(_OWORD *)(v8 + 80) = 0u;
      *(_OWORD *)(v8 + 96) = 0u;
      sub_213C86184();
      v2 = v2 & 0xFFFFFFFF00000000 | v30;
      espresso_network_query_blob_shape();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = __OFADD__(v7++, 1);
      if (v9)
        goto LABEL_24;
      ++v6;
    }
    while (v6 != v28);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v3.i32[0] = 1.0;
  v10 = sub_213C58E48(v7, v3);
  v11 = *(_QWORD *)(v24 + 360);
  v29 = *(_QWORD *)(v11 + 16);
  if (v29)
  {
    v27 = v11 + 32;
    v12 = swift_bridgeObjectRetain();
    v13 = 0;
    v14 = 0;
    v25 = v12;
    do
    {
      if (v13 >= *(_QWORD *)(v12 + 16))
        goto LABEL_25;
      v15 = (uint64_t *)(v27 + 16 * v13);
      v16 = *v15;
      v17 = v15[1];
      swift_bridgeObjectRetain();
      v18 = sub_213C862B0();
      *(_QWORD *)(v18 + 16) = 10;
      *(_OWORD *)(v18 + 48) = 0u;
      *(_OWORD *)(v18 + 64) = 0u;
      *(_OWORD *)(v18 + 80) = 0u;
      *(_OWORD *)(v18 + 96) = 0u;
      *(_OWORD *)(v18 + 32) = 0u;
      sub_213C86184();
      v2 = v2 & 0xFFFFFFFF00000000 | v30;
      espresso_network_query_blob_shape();
      swift_release();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_213C5F284(v10);
      v19 = *a2;
      if (!*(_QWORD *)(*a2 + 16))
        goto LABEL_26;
      swift_bridgeObjectRetain();
      v20 = sub_213C4B3DC(v16, v17);
      if ((v21 & 1) == 0)
        goto LABEL_28;
      v22 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 168 * v20);
      swift_bridgeObjectRelease();
      if (!v22)
        goto LABEL_29;
      cblas_scopy_NEWLAPACK();
      swift_bridgeObjectRelease();
      v9 = __OFADD__(v14++, 1);
      if (v9)
        goto LABEL_27;
      ++v13;
      v12 = v25;
    }
    while (v13 != v29);
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_213C5B134(_BYTE *a1)
{
  uint64_t v1;
  unint64_t v2;
  unsigned int *v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD v39[8];

  v39[7] = *MEMORY[0x24BDAC8D0];
  if ((*a1 & 1) != 0)
  {
    swift_beginAccess();
    v3 = (unsigned int *)(v1 + 64);
  }
  else
  {
    swift_beginAccess();
    v3 = (unsigned int *)(v1 + 40);
  }
  v4 = *(_QWORD *)(v1 + 352);
  v37 = *(_QWORD *)(v4 + 16);
  if (v37)
  {
    v36 = *v3;
    v35 = v4 + 32;
    swift_bridgeObjectRetain();
    v34 = (uint64_t *)(v1 + 136);
    swift_beginAccess();
    v5 = 0;
    v6 = (_QWORD *)MEMORY[0x24BEE4B00];
    v33 = v4;
    while (1)
    {
      if (v5 >= *(_QWORD *)(v4 + 16))
        goto LABEL_41;
      v7 = (uint64_t *)(v35 + 16 * v5);
      v9 = *v7;
      v8 = v7[1];
      swift_bridgeObjectRetain();
      v10 = sub_213C862B0();
      *(_QWORD *)(v10 + 16) = 10;
      *(_OWORD *)(v10 + 48) = 0u;
      *(_OWORD *)(v10 + 64) = 0u;
      *(_OWORD *)(v10 + 80) = 0u;
      *(_OWORD *)(v10 + 96) = 0u;
      *(_OWORD *)(v10 + 32) = 0u;
      v39[0] = 0;
      sub_213C86184();
      v11 = v2 & 0xFFFFFFFF00000000 | v36;
      espresso_network_query_blob_shape();
      swift_release();
      if ((v39[0] & 0x8000000000000000) != 0)
        goto LABEL_42;
      if (*(_QWORD *)(v10 + 16) < v39[0])
        goto LABEL_43;
      if (!v39[0])
      {
        swift_bridgeObjectRelease();
        v12 = 1;
        goto LABEL_18;
      }
      v13 = 0;
      v12 = 1;
      do
      {
        v14 = *(_QWORD *)(v10 + 8 * v13 + 32);
        if ((unsigned __int128)(v12 * (__int128)v14) >> 64 != (v12 * v14) >> 63)
        {
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __break(1u);
LABEL_47:
          __break(1u);
        }
        v12 *= v14;
        ++v13;
      }
      while (v39[0] != v13);
      swift_bridgeObjectRelease();
      if (v12 < 0)
        goto LABEL_49;
      if (v12)
      {
LABEL_18:
        swift_bridgeObjectRetain();
        v15 = sub_213C862B0();
        *(_QWORD *)(v15 + 16) = v12;
        bzero((void *)(v15 + 32), 4 * v12);
      }
      else
      {
        swift_bridgeObjectRetain();
        v15 = MEMORY[0x24BEE4AF8];
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v39[0] = v6;
      sub_213C4BAC4(v15, v9, v8, isUniquelyReferenced_nonNull_native);
      v17 = (_QWORD *)v39[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((unint64_t)v12 >> 31)
        break;
      v18 = *v34;
      if (!*(_QWORD *)(*v34 + 16))
        goto LABEL_44;
      v38 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = sub_213C4B3DC(v9, v8);
      if ((v20 & 1) == 0)
        goto LABEL_46;
      v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 168 * v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v21)
        goto LABEL_47;
      swift_bridgeObjectRetain();
      v22 = swift_isUniquelyReferenced_nonNull_native();
      v39[0] = v17;
      swift_bridgeObjectRetain();
      v6 = v17;
      v24 = sub_213C4B3DC(v9, v8);
      v25 = v17[2];
      v26 = (v23 & 1) == 0;
      v27 = v25 + v26;
      if (__OFADD__(v25, v26))
        goto LABEL_45;
      v28 = v23;
      if (v17[3] >= v27)
      {
        if ((v22 & 1) != 0)
        {
          if ((v23 & 1) == 0)
            goto LABEL_36;
        }
        else
        {
          v6 = v39;
          sub_213C60E64();
          if ((v28 & 1) == 0)
            goto LABEL_36;
        }
        goto LABEL_30;
      }
      sub_213C605A0(v27, v22);
      v6 = (_QWORD *)v39[0];
      v29 = sub_213C4B3DC(v9, v8);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_50;
      v24 = v29;
      if ((v28 & 1) == 0)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_30:
      v31 = *(_QWORD *)(*(_QWORD *)(v39[0] + 56) + 8 * v24);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = sub_213C4202C(0, *(_QWORD *)(v31 + 16), 0, v31);
      swift_bridgeObjectRetain();
      cblas_scopy_NEWLAPACK();
      v6 = (_QWORD *)v39[0];
      if (v31)
      {
        *(_QWORD *)(*(_QWORD *)(v39[0] + 56) + 8 * v24) = v31;
      }
      else
      {
        swift_arrayDestroy();
        sub_213C61018(v24, (uint64_t)v6);
      }
      v2 = v38;
      ++v5;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = v33;
      if (v5 == v37)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        return (uint64_t)v6;
      }
    }
    sub_213C865C8();
    __break(1u);
LABEL_49:
    sub_213C865C8();
    __break(1u);
LABEL_50:
    result = sub_213C8679C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_213C5B65C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned __int8 *a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v14;
  _BYTE *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  unint64_t v28;
  BOOL v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  int64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  vDSP_Length v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  vDSP_Length v90;
  vDSP_Length v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int64_t v105;
  int v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  unint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  float __B;
  _QWORD v119[3];
  _QWORD v120[11];

  v8 = v6;
  v120[9] = *MEMORY[0x24BDAC8D0];
  v112 = *a5;
  sub_213C618F4();
  v14 = (void *)swift_allocError();
  *v15 = 18;
  if ((*(_BYTE *)(v8 + 96) & 2) == 0)
    return swift_willThrow();
  v106 = a4;
  v107 = a6;

  v17 = *(_QWORD *)(v8 + 104);
  swift_beginAccess();
  result = sub_213C5D328(a1, a2, a3, v17, *(_QWORD *)(v8 + 32), *(_DWORD *)(v8 + 40));
  if (!v7)
  {
    sub_213C5D7C8(*(_QWORD *)(v8 + 32), *(_DWORD *)(v8 + 40));
    v18 = 0;
    v115 = (_QWORD *)sub_213C5F9C0(0, a3, 1);
    v19 = v107;
    if ((v107 & 1) != 0)
    {
      v120[0] = 2;
      swift_beginAccess();
      v103 = sub_213C5AC70(v120, (uint64_t *)(v8 + 152));
      swift_endAccess();
      if (a4)
      {
LABEL_8:
        v97 = 0;
        v100 = v8 + 152;
        v101 = (uint64_t *)(v8 + 168);
        v110 = v8 + 120;
        v104 = a1 + 64;
        v20 = MEMORY[0x24BEE4AF8];
        v116 = v8;
        v108 = a1;
        v109 = a3;
        v111 = a2;
        while (1)
        {
          if ((v19 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v21 = *(_QWORD *)(v103 + 16);
            if (v21)
            {
              v22 = sub_213C862B0();
              *(_QWORD *)(v22 + 16) = v21;
              v98 = v22;
              bzero((void *)(v22 + 32), 4 * v21);
              if (v112)
                goto LABEL_16;
            }
            else
            {
              v98 = MEMORY[0x24BEE4AF8];
              if (v112)
              {
LABEL_16:
                v23 = v115[2];
                if (v23 >= 2)
                {
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    v115 = sub_213C5F2AC(v115);
                  v24 = 0;
                  v25 = v115 + 4;
                  do
                  {
                    v119[0] = 0;
                    MEMORY[0x2199C0A3C](v119, 8);
                    v27 = (v119[0] * (unsigned __int128)v23) >> 64;
                    if (v23 > v119[0] * v23)
                    {
                      v28 = -(uint64_t)v23 % v23;
                      if (v28 > v119[0] * v23)
                      {
                        do
                        {
                          v119[0] = 0;
                          MEMORY[0x2199C0A3C](v119, 8);
                        }
                        while (v28 > v119[0] * v23);
                        v27 = (v119[0] * (unsigned __int128)v23) >> 64;
                      }
                      a2 = v111;
                    }
                    v29 = __OFADD__(v24, v27);
                    v30 = v24 + v27;
                    if (v29)
                    {
LABEL_144:
                      __break(1u);
                      swift_endAccess();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      return swift_bridgeObjectRelease();
                    }
                    if (v24 != v30)
                    {
                      v31 = v115[2];
                      if (v24 >= v31)
                      {
                        __break(1u);
LABEL_146:
                        __break(1u);
LABEL_147:
                        __break(1u);
LABEL_148:
                        __break(1u);
LABEL_149:
                        __break(1u);
LABEL_150:
                        __break(1u);
LABEL_151:
                        __break(1u);
LABEL_152:
                        __break(1u);
LABEL_153:
                        __break(1u);
LABEL_154:
                        __break(1u);
LABEL_155:
                        __break(1u);
LABEL_156:
                        __break(1u);
LABEL_157:
                        __break(1u);
                        goto LABEL_158;
                      }
                      if (v30 >= v31)
                        goto LABEL_146;
                      v32 = v25[v24];
                      v33 = v30;
                      v25[v24] = v25[v33];
                      v25[v33] = v32;
                    }
                    ++v24;
                  }
                  while ((uint64_t)v23-- > 2);
                }
              }
            }
          }
          else
          {
            v98 = v20;
            if (v112)
              goto LABEL_16;
          }
          v34 = *(_QWORD *)(v8 + 104);
          if (!v34)
            goto LABEL_152;
          if (a3 == 0x8000000000000000 && v34 == -1)
            goto LABEL_155;
          v35 = a3 / v34;
          if (a3 / v34 < 0)
            goto LABEL_153;
          v99 = v18;
          if (!v35)
            goto LABEL_114;
          v36 = 0;
          v95 = a3 / v34;
          do
          {
            if (v36 == v35)
              goto LABEL_154;
            v96 = v36 + 1;
            v37 = 1 << *(_BYTE *)(a1 + 32);
            if (v37 < 64)
              v38 = ~(-1 << v37);
            else
              v38 = -1;
            v39 = v38 & *(_QWORD *)(a1 + 64);
            swift_bridgeObjectRetain();
            swift_beginAccess();
            v40 = 0;
            v105 = (unint64_t)(v37 + 63) >> 6;
            while (1)
            {
              if (v39)
              {
                v41 = __clz(__rbit64(v39));
                v42 = (v39 - 1) & v39;
                v43 = v41 | (v40 << 6);
                goto LABEL_60;
              }
              v29 = __OFADD__(v40++, 1);
              if (v29)
                goto LABEL_147;
              if (v40 >= v105)
                break;
              v44 = *(_QWORD *)(v104 + 8 * v40);
              if (!v44)
              {
                v45 = v40 + 1;
                if (v40 + 1 >= v105)
                  break;
                v44 = *(_QWORD *)(v104 + 8 * v45);
                if (!v44)
                {
                  v45 = v40 + 2;
                  if (v40 + 2 >= v105)
                    break;
                  v44 = *(_QWORD *)(v104 + 8 * v45);
                  if (!v44)
                  {
                    v45 = v40 + 3;
                    if (v40 + 3 >= v105)
                      break;
                    v44 = *(_QWORD *)(v104 + 8 * v45);
                    if (!v44)
                    {
                      v45 = v40 + 4;
                      if (v40 + 4 >= v105)
                        break;
                      v44 = *(_QWORD *)(v104 + 8 * v45);
                      if (!v44)
                      {
                        v45 = v40 + 5;
                        if (v40 + 5 >= v105)
                          break;
                        v44 = *(_QWORD *)(v104 + 8 * v45);
                        if (!v44)
                        {
                          while (1)
                          {
                            v40 = v45 + 1;
                            if (__OFADD__(v45, 1))
                              break;
                            if (v40 >= v105)
                              goto LABEL_85;
                            v44 = *(_QWORD *)(v104 + 8 * v40);
                            ++v45;
                            if (v44)
                              goto LABEL_59;
                          }
LABEL_158:
                          __break(1u);
LABEL_159:
                          __break(1u);
                        }
                      }
                    }
                  }
                }
                v40 = v45;
              }
LABEL_59:
              v42 = (v44 - 1) & v44;
              v43 = __clz(__rbit64(v44)) + (v40 << 6);
LABEL_60:
              v46 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v43);
              v47 = *v46;
              v48 = v46[1];
              v49 = *(_QWORD *)(a1 + 16);
              swift_bridgeObjectRetain();
              if (!v49)
                goto LABEL_161;
              swift_bridgeObjectRetain();
              sub_213C4B3DC(v47, v48);
              if ((v50 & 1) == 0)
              {
                swift_bridgeObjectRelease();
LABEL_161:
                __break(1u);
LABEL_162:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                __break(1u);
LABEL_163:
                swift_bridgeObjectRelease();
                __break(1u);
LABEL_164:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                __break(1u);
LABEL_165:
                __break(1u);
LABEL_166:
                swift_bridgeObjectRelease();
                __break(1u);
LABEL_167:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                __break(1u);
LABEL_168:
                __break(1u);
                goto LABEL_169;
              }
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              v51 = *(_QWORD *)v110;
              if (!*(_QWORD *)(*(_QWORD *)v110 + 16))
              {
                __break(1u);
LABEL_142:
                __break(1u);
LABEL_143:
                __break(1u);
                goto LABEL_144;
              }
              v113 = v42;
              v52 = v40;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v53 = sub_213C4B3DC(v47, v48);
              if ((v54 & 1) == 0)
                goto LABEL_162;
              v55 = *(_QWORD *)(*(_QWORD *)(v51 + 56) + 168 * v53);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (!*(_QWORD *)(a2 + 16))
                goto LABEL_142;
              swift_bridgeObjectRetain();
              v56 = sub_213C4B3DC(v47, v48);
              if ((v57 & 1) == 0)
                goto LABEL_163;
              v58 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v56);
              swift_bridgeObjectRelease();
              v59 = *(_QWORD *)(v8 + 104);
              if (v59 < 0)
                goto LABEL_143;
              if (v59)
              {
                v60 = 0;
                while (v59 != v60)
                {
                  v61 = *(_QWORD *)(v116 + 104);
                  v62 = v36 * v61;
                  if ((unsigned __int128)(v36 * (__int128)v61) >> 64 != (v36 * v61) >> 63)
                    goto LABEL_132;
                  v29 = __OFADD__(v62, v60);
                  v63 = v62 + v60;
                  if (v29)
                    goto LABEL_133;
                  if (v58 <= (uint64_t)0xFFFFFFFF7FFFFFFFLL || v58 >= 0x80000000)
                    goto LABEL_169;
                  if ((v63 & 0x8000000000000000) != 0)
                    goto LABEL_134;
                  if (v63 >= v115[2])
                    goto LABEL_135;
                  if ((unsigned __int128)(v58 * (__int128)(uint64_t)v115[v63 + 4]) >> 64 != (v58 * v115[v63 + 4]) >> 63)
                    goto LABEL_136;
                  if (!v55)
                    goto LABEL_156;
                  if ((unsigned __int128)(v58 * (__int128)v60) >> 64 != (v58 * v60) >> 63)
                    goto LABEL_137;
                  ++v60;
                  cblas_scopy_NEWLAPACK();
                  if (v59 == v60)
                    goto LABEL_42;
                }
                __break(1u);
LABEL_132:
                __break(1u);
LABEL_133:
                __break(1u);
LABEL_134:
                __break(1u);
LABEL_135:
                __break(1u);
LABEL_136:
                __break(1u);
LABEL_137:
                __break(1u);
LABEL_138:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return swift_bridgeObjectRelease();
              }
LABEL_42:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v8 = v116;
              a1 = v108;
              a3 = v109;
              a2 = v111;
              v40 = v52;
              v39 = v113;
            }
LABEL_85:
            swift_release();
            if (espresso_plan_execute_sync())
              goto LABEL_140;
            if ((v107 & 1) == 0)
            {
              v69 = *(_QWORD *)(v8 + 360);
              v114 = *(_QWORD *)(v69 + 16);
              if (!v114)
                goto LABEL_113;
              swift_bridgeObjectRetain();
              swift_beginAccess();
              swift_beginAccess();
              v70 = 0;
LABEL_95:
              if (v70 >= *(_QWORD *)(v69 + 16))
                goto LABEL_148;
              v71 = (uint64_t *)(v69 + 32 + 16 * v70);
              v73 = *v71;
              v72 = v71[1];
              v74 = *(unsigned int *)(v116 + 40);
              swift_bridgeObjectRetain();
              v75 = sub_213C862B0();
              *(_QWORD *)(v75 + 16) = 10;
              *(_OWORD *)(v75 + 48) = 0u;
              *(_OWORD *)(v75 + 64) = 0u;
              *(_OWORD *)(v75 + 80) = 0u;
              *(_OWORD *)(v75 + 96) = 0u;
              *(_OWORD *)(v75 + 32) = 0u;
              v119[0] = 0;
              sub_213C86184();
              v76 = v102 & 0xFFFFFFFF00000000 | v74;
              espresso_network_query_blob_shape();
              swift_release();
              if ((v119[0] & 0x8000000000000000) != 0)
                goto LABEL_149;
              v102 = v76;
              if (*(_QWORD *)(v75 + 16) < v119[0])
                goto LABEL_150;
              a2 = v111;
              if (!v119[0])
              {
                swift_bridgeObjectRelease();
                goto LABEL_105;
              }
              v77 = 0;
              v78 = 1;
              while (1)
              {
                v79 = *(_QWORD *)(v75 + 8 * v77 + 32);
                v80 = (unsigned __int128)(v78 * (__int128)v79) >> 64;
                v78 *= v79;
                if (v80 != v78 >> 63)
                  break;
                if (v119[0] == ++v77)
                {
                  swift_bridgeObjectRelease();
                  if (v78 < (uint64_t)0xFFFFFFFF80000000 || v78 >= 0x80000000)
                    goto LABEL_169;
LABEL_105:
                  v81 = *v101;
                  if (!*(_QWORD *)(*v101 + 16))
                    goto LABEL_151;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v82 = sub_213C4B3DC(v73, v72);
                  if ((v83 & 1) == 0)
                    goto LABEL_164;
                  v84 = *(_QWORD *)(*(_QWORD *)(v81 + 56) + 168 * v82);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (!v84)
                    goto LABEL_165;
                  v85 = *(_QWORD *)v100;
                  if (!*(_QWORD *)(*(_QWORD *)v100 + 16))
                    goto LABEL_166;
                  swift_bridgeObjectRetain();
                  v86 = sub_213C4B3DC(v73, v72);
                  if ((v87 & 1) == 0)
                    goto LABEL_167;
                  v88 = *(_QWORD *)(*(_QWORD *)(v85 + 56) + 168 * v86);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (!v88)
                    goto LABEL_168;
                  ++v70;
                  cblas_scopy_NEWLAPACK();
                  if (v70 == v114)
                  {
                    swift_bridgeObjectRelease();
                    v8 = v116;
                    a1 = v108;
                    a3 = v109;
                    goto LABEL_113;
                  }
                  goto LABEL_95;
                }
              }
              __break(1u);
LABEL_140:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_allocError();
              *v94 = 15;
              swift_willThrow();
              return swift_bridgeObjectRelease();
            }
            v117 = 2;
            swift_beginAccess();
            v64 = sub_213C5AC70(&v117, v101);
            swift_endAccess();
            v65 = *(_QWORD *)(v64 + 16);
            if (v65 >> 31)
            {
LABEL_169:
              result = sub_213C865C8();
              __break(1u);
              return result;
            }
            swift_bridgeObjectRetain();
            v66 = a1;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v64 = sub_213C4202C(0, v65, 0, v64);
            v99 = 0;
            cblas_saxpy_NEWLAPACK();
            swift_bridgeObjectRelease();
            v67 = *(_QWORD *)(v98 + 16);
            swift_bridgeObjectRetain();
            v68 = v98;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v68 = sub_213C4202C(0, v67, 0, v98);
            vDSP_vadd((const float *)(v64 + 32), 1, (const float *)(v98 + 32), 1, (float *)(v68 + 32), 1, v67);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v98 = v68;
            a3 = v109;
            a1 = v66;
LABEL_113:
            v35 = v95;
            v36 = v96;
          }
          while (v96 != v95);
LABEL_114:
          v19 = v107;
          if ((v107 & 1) == 0)
          {
            v20 = v98;
            v18 = v99;
            goto LABEL_126;
          }
          v89 = *(_QWORD *)(v8 + 104);
          if (!v89)
            goto LABEL_157;
          if (a3 == 0x8000000000000000 && v89 == -1)
            goto LABEL_159;
          __B = (float)(a3 / v89);
          v90 = *(_QWORD *)(v98 + 16);
          swift_bridgeObjectRetain();
          v20 = v98;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v20 = sub_213C4202C(0, v90, 0, v98);
          vDSP_vsdiv((const float *)(v98 + 32), 1, &__B, (float *)(v20 + 32), 1, v90);
          swift_bridgeObjectRelease();
          v91 = *(_QWORD *)(v20 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v92 = v103;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v92 = sub_213C4202C(0, *(_QWORD *)(v103 + 16), 0, v103);
          vDSP_vadd((const float *)(v103 + 32), 1, (const float *)(v20 + 32), 1, (float *)(v92 + 32), 1, v91);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v117 = 0;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v92 = sub_213C5F284(v92);
          v93 = *(_QWORD *)(v92 + 16);
          v103 = v92;
          v119[0] = v92 + 32;
          v119[1] = v93;
          sub_213C5C414(v119, v8, &v117);
          v18 = v99;
          a1 = v108;
          a3 = v109;
          v19 = v107;
LABEL_126:
          if (++v97 == v106)
            goto LABEL_138;
        }
      }
    }
    else
    {
      v103 = MEMORY[0x24BEE4AF8];
      if (a4)
        goto LABEL_8;
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_213C5C414(_QWORD *result, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  if (*result)
  {
    v3 = a2;
    v4 = *(_QWORD *)(a2 + 360);
    v21 = *(_QWORD *)(v4 + 16);
    if (v21)
    {
      v20 = v4 + 32;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      v19 = (uint64_t *)(v3 + 152);
      swift_beginAccess();
      v6 = 0;
      v17 = v4;
      v18 = v3;
      do
      {
        if (v6 >= *(_QWORD *)(v4 + 16))
        {
          __break(1u);
          __break(1u);
          __break(1u);
LABEL_14:
          __break(1u);
LABEL_15:
          swift_bridgeObjectRelease();
          __break(1u);
LABEL_16:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __break(1u);
LABEL_17:
          __break(1u);
        }
        v7 = (uint64_t *)(v20 + 16 * v6);
        v8 = *v7;
        v9 = v7[1];
        v10 = *(unsigned int *)(v3 + 40);
        swift_bridgeObjectRetain();
        v11 = sub_213C862B0();
        *(_QWORD *)(v11 + 16) = 10;
        *(_OWORD *)(v11 + 48) = 0u;
        *(_OWORD *)(v11 + 64) = 0u;
        *(_OWORD *)(v11 + 80) = 0u;
        *(_OWORD *)(v11 + 96) = 0u;
        *(_OWORD *)(v11 + 32) = 0u;
        sub_213C86184();
        v22 = v22 & 0xFFFFFFFF00000000 | v10;
        espresso_network_query_blob_shape();
        swift_release();
        swift_bridgeObjectRelease();
        v12 = *v19;
        if (!*(_QWORD *)(*v19 + 16))
          goto LABEL_15;
        swift_bridgeObjectRetain();
        v13 = sub_213C4B3DC(v8, v9);
        if ((v14 & 1) == 0)
          goto LABEL_16;
        v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 168 * v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v15)
          goto LABEL_17;
        cblas_scopy_NEWLAPACK();
        if (__OFADD__(*a3, 1))
          goto LABEL_14;
        ++v6;
        ++*a3;
        v4 = v17;
        v3 = v18;
      }
      while (v6 != v21);
      return (_QWORD *)swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_213C45684();
    swift_allocError();
    *v16 = 0;
    return (_QWORD *)swift_willThrow();
  }
  return result;
}

uint64_t sub_213C5C794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;
  _BYTE *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  unint64_t i;
  unint64_t v45;
  int64_t v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  _BYTE *v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  int64_t v67;
  uint64_t v69;

  v7 = v4;
  sub_213C618F4();
  v9 = (void *)swift_allocError();
  *v10 = 19;
  if ((*(_BYTE *)(v3 + 96) & 1) == 0)
  {
    swift_willThrow();
    return (uint64_t)v11;
  }

  v12 = *(_QWORD *)(v3 + 104);
  if (!v12)
  {
    __break(1u);
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  if (a3 == 0x8000000000000000 && v12 == -1)
    goto LABEL_105;
  swift_beginAccess();
  v58 = v12;
  sub_213C5D328(a1, a2, a3, v12, *(_QWORD *)(v3 + 56), *(_DWORD *)(v3 + 64));
  if (v4)
    return (uint64_t)v11;
  sub_213C5D7C8(*(_QWORD *)(v3 + 56), *(_DWORD *)(v3 + 64));
  v12 = 0;
  v14 = a3 / v58;
  if (a3 / v58 < 0)
    goto LABEL_108;
  v65 = v3;
  v56 = a3 / v58;
  if (!v14)
  {
    v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_59;
  }
  v12 = 0;
  v61 = a1 + 64;
  v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v66 = (uint64_t *)(v3 + 120);
  while (2)
  {
    if (v12 == v14)
    {
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      swift_bridgeObjectRelease();
LABEL_111:
      __break(1u);
LABEL_112:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_113:
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      v59 = sub_213C42354(0, v59[2] + 1, 1, v59);
LABEL_100:
      v52 = v59;
      v54 = v59[2];
      v53 = v59[3];
      if (v54 >= v53 >> 1)
        v52 = sub_213C42354((_QWORD *)(v53 > 1), v54 + 1, 1, v59);
      v52[2] = v54 + 1;
      v52[v54 + 4] = v7;
      v55 = v52;
      sub_213C5E9EC(v6, v5, *(_QWORD *)(v3 + 56), *(_DWORD *)(v3 + 64));
      if (!v12)
        return (uint64_t)v55;
LABEL_95:
      swift_bridgeObjectRelease();
      return (uint64_t)v11;
    }
    v59 = v11;
    v57 = v12 + 1;
    v7 = 1 << *(_BYTE *)(a1 + 32);
    if (v7 < 64)
      v15 = ~(-1 << v7);
    else
      v15 = -1;
    v16 = v15 & *(_QWORD *)(a1 + 64);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v17 = 0;
    v63 = (unint64_t)(v7 + 63) >> 6;
    if (v16)
    {
LABEL_17:
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v17 << 6);
      goto LABEL_36;
    }
    while (1)
    {
      v20 = v17 + 1;
      if (__OFADD__(v17, 1))
      {
        __break(1u);
LABEL_99:
        v69 = 1;
        v7 = sub_213C5B134(&v69);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          goto LABEL_116;
        goto LABEL_100;
      }
      if (v20 >= v63)
        goto LABEL_50;
      v21 = *(_QWORD *)(v61 + 8 * v20);
      ++v17;
      if (!v21)
      {
        v17 = v20 + 1;
        if (v20 + 1 >= v63)
          goto LABEL_50;
        v21 = *(_QWORD *)(v61 + 8 * v17);
        if (!v21)
        {
          v17 = v20 + 2;
          if (v20 + 2 >= v63)
            goto LABEL_50;
          v21 = *(_QWORD *)(v61 + 8 * v17);
          if (!v21)
          {
            v17 = v20 + 3;
            if (v20 + 3 >= v63)
              goto LABEL_50;
            v21 = *(_QWORD *)(v61 + 8 * v17);
            if (!v21)
            {
              v17 = v20 + 4;
              if (v20 + 4 >= v63)
                goto LABEL_50;
              v21 = *(_QWORD *)(v61 + 8 * v17);
              if (!v21)
                break;
            }
          }
        }
      }
LABEL_35:
      v16 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_36:
      v23 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v19);
      v24 = *v23;
      v5 = v23[1];
      v25 = *(_QWORD *)(a1 + 16);
      swift_bridgeObjectRetain();
      if (!v25)
        goto LABEL_111;
      swift_bridgeObjectRetain();
      v3 = a1;
      v26 = sub_213C4B3DC(v24, v5);
      if ((v27 & 1) == 0)
        goto LABEL_110;
      v6 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v26);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v3 = *v66;
      if (!*(_QWORD *)(*v66 + 16))
      {
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_95;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28 = sub_213C4B3DC(v24, v5);
      if ((v29 & 1) == 0)
        goto LABEL_112;
      v7 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 168 * v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = a2;
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_91;
      swift_bridgeObjectRetain();
      v30 = sub_213C4B3DC(v24, v5);
      if ((v31 & 1) == 0)
        goto LABEL_113;
      v32 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v30);
      swift_bridgeObjectRelease();
      v3 = v65;
      v33 = *(_QWORD *)(v65 + 104);
      v34 = v32 * v33;
      if ((unsigned __int128)(v32 * (__int128)v33) >> 64 != (v32 * v33) >> 63)
        goto LABEL_92;
      if (v34 < (uint64_t)0xFFFFFFFF80000000 || v34 >= 0x80000000)
      {
LABEL_119:
        result = sub_213C865C8();
        __break(1u);
        return result;
      }
      if ((unsigned __int128)(v32 * (__int128)v12) >> 64 != (v32 * v12) >> 63)
        goto LABEL_93;
      if ((unsigned __int128)(v32 * v12 * (__int128)v33) >> 64 != (v32 * v12 * v33) >> 63)
        goto LABEL_94;
      if (!v7)
        goto LABEL_114;
      cblas_scopy_NEWLAPACK();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v16)
        goto LABEL_17;
    }
    v22 = v20 + 5;
    if (v22 < v63)
    {
      v21 = *(_QWORD *)(v61 + 8 * v22);
      if (!v21)
      {
        while (1)
        {
          v17 = v22 + 1;
          if (__OFADD__(v22, 1))
            goto LABEL_107;
          if (v17 >= v63)
            goto LABEL_50;
          v21 = *(_QWORD *)(v61 + 8 * v17);
          ++v22;
          if (v21)
            goto LABEL_35;
        }
      }
      v17 = v22;
      goto LABEL_35;
    }
LABEL_50:
    swift_release();
    if (espresso_plan_execute_sync())
      goto LABEL_97;
    v69 = 1;
    v7 = sub_213C5B134(&v69);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v11 = v59;
    else
      v11 = sub_213C42354(0, v59[2] + 1, 1, v59);
    v36 = v11[2];
    v35 = v11[3];
    if (v36 >= v35 >> 1)
      v11 = sub_213C42354((_QWORD *)(v35 > 1), v36 + 1, 1, v11);
    v11[2] = v36 + 1;
    v11[v36 + 4] = v7;
    v14 = a3 / v58;
    v12 = v57;
    if (v57 != v56)
      continue;
    break;
  }
LABEL_59:
  v37 = a3 - v14 * v58;
  if (v37 >= 1)
  {
    v59 = v11;
    v3 = v65;
    v6 = *(_QWORD *)(v65 + 104);
    v7 = *(_QWORD *)(v65 + 72);
    sub_213C5E9EC(a3 - v14 * v58, v7, *(_QWORD *)(v65 + 56), *(_DWORD *)(v65 + 64));
    v12 = 0;
    v62 = v7;
    v64 = a1 + 64;
    v38 = 1 << *(_BYTE *)(a1 + 32);
    v39 = -1;
    if (v38 < 64)
      v39 = ~(-1 << v38);
    v40 = v39 & *(_QWORD *)(a1 + 64);
    v67 = (unint64_t)(v38 + 63) >> 6;
    swift_bridgeObjectRetain();
    v41 = 0;
    if (!v40)
      goto LABEL_66;
LABEL_65:
    v42 = __clz(__rbit64(v40));
    v40 &= v40 - 1;
    for (i = v42 | (v41 << 6); ; i = __clz(__rbit64(v45)) + (v41 << 6))
    {
      v47 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
      v7 = *v47;
      v5 = v47[1];
      v48 = *(_QWORD *)(a1 + 16);
      swift_bridgeObjectRetain();
      if (!v48)
        goto LABEL_118;
      swift_bridgeObjectRetain();
      v49 = sub_213C4B3DC(v7, v5);
      if ((v50 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_118:
        __break(1u);
        goto LABEL_119;
      }
      v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v49);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_213C5D0DC(v3 + 32, *(_QWORD *)(v3 + 16), v65, v7, v5, a2, v37, v56, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v40)
        goto LABEL_65;
LABEL_66:
      if (__OFADD__(v41++, 1))
        goto LABEL_109;
      if (v41 >= v67)
        break;
      v45 = *(_QWORD *)(v64 + 8 * v41);
      if (!v45)
      {
        v46 = v41 + 1;
        if (v41 + 1 >= v67)
          break;
        v45 = *(_QWORD *)(v64 + 8 * v46);
        if (!v45)
        {
          v46 = v41 + 2;
          if (v41 + 2 >= v67)
            break;
          v45 = *(_QWORD *)(v64 + 8 * v46);
          if (!v45)
          {
            v46 = v41 + 3;
            if (v41 + 3 >= v67)
              break;
            v45 = *(_QWORD *)(v64 + 8 * v46);
            if (!v45)
            {
              v46 = v41 + 4;
              if (v41 + 4 >= v67)
                break;
              v45 = *(_QWORD *)(v64 + 8 * v46);
              if (!v45)
              {
                v46 = v41 + 5;
                if (v41 + 5 >= v67)
                  break;
                v45 = *(_QWORD *)(v64 + 8 * v46);
                if (!v45)
                {
                  while (1)
                  {
                    v41 = v46 + 1;
                    if (__OFADD__(v46, 1))
                      goto LABEL_115;
                    if (v41 >= v67)
                      goto LABEL_96;
                    v45 = *(_QWORD *)(v64 + 8 * v41);
                    ++v46;
                    if (v45)
                      goto LABEL_80;
                  }
                }
              }
            }
          }
        }
        v41 = v46;
      }
LABEL_80:
      v40 = (v45 - 1) & v45;
    }
LABEL_96:
    v3 = v65;
    v5 = v62;
    swift_release();
    if (!espresso_plan_execute_sync())
      goto LABEL_99;
LABEL_97:
    swift_bridgeObjectRelease();
    swift_allocError();
    *v51 = 20;
    swift_willThrow();
  }
  return (uint64_t)v11;
}

uint64_t sub_213C5D0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  _BYTE *v24;

  if (!a1)
  {
    sub_213C45684();
    swift_allocError();
    *v24 = 0;
    return swift_willThrow();
  }
  swift_beginAccess();
  v15 = *(_QWORD *)(a3 + 120);
  if (!*(_QWORD *)(v15 + 16))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_213C4B3DC(a4, a5);
  if ((v17 & 1) == 0)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_20;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 168 * v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a6 + 16))
    goto LABEL_15;
  swift_bridgeObjectRetain();
  v19 = sub_213C4B3DC(a4, a5);
  if ((v20 & 1) != 0)
  {
    v21 = *(_QWORD *)(*(_QWORD *)(a6 + 56) + 8 * v19);
    swift_bridgeObjectRelease();
    v22 = v21 * a7;
    if ((unsigned __int128)(v21 * (__int128)a7) >> 64 == (v21 * a7) >> 63)
    {
      if (v22 <= (uint64_t)0xFFFFFFFF7FFFFFFFLL || v22 >= 0x80000000)
        goto LABEL_22;
      if ((unsigned __int128)(v21 * (__int128)a8) >> 64 == (v21 * a8) >> 63)
      {
        if ((unsigned __int128)(v21 * a8 * (__int128)a9) >> 64 == (v21 * a8 * a9) >> 63)
        {
          if (v18)
            return cblas_scopy_NEWLAPACK();
          goto LABEL_21;
        }
        goto LABEL_18;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_213C865C8();
  __break(1u);
  return result;
}

uint64_t sub_213C5D328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v34;
  int64_t v35;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;

  v34 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a1 + 64);
  swift_bridgeObjectRetain();
  v39 = v6 + 120;
  swift_beginAccess();
  v12 = 0;
  v35 = (unint64_t)(v9 + 63) >> 6;
  v38 = a6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v12 << 6);
    }
    else
    {
      v15 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_46;
      if (v15 >= v35)
        return swift_release();
      v16 = *(_QWORD *)(v34 + 8 * v15);
      ++v12;
      if (!v16)
      {
        v12 = v15 + 1;
        if (v15 + 1 >= v35)
          return swift_release();
        v16 = *(_QWORD *)(v34 + 8 * v12);
        if (!v16)
        {
          v12 = v15 + 2;
          if (v15 + 2 >= v35)
            return swift_release();
          v16 = *(_QWORD *)(v34 + 8 * v12);
          if (!v16)
          {
            v12 = v15 + 3;
            if (v15 + 3 >= v35)
              return swift_release();
            v16 = *(_QWORD *)(v34 + 8 * v12);
            if (!v16)
            {
              v12 = v15 + 4;
              if (v15 + 4 >= v35)
                return swift_release();
              v16 = *(_QWORD *)(v34 + 8 * v12);
              if (!v16)
              {
                v17 = v15 + 5;
                if (v17 >= v35)
                  return swift_release();
                v16 = *(_QWORD *)(v34 + 8 * v17);
                if (!v16)
                {
                  while (1)
                  {
                    v12 = v17 + 1;
                    if (__OFADD__(v17, 1))
                      goto LABEL_47;
                    if (v12 >= v35)
                      return swift_release();
                    v16 = *(_QWORD *)(v34 + 8 * v12);
                    ++v17;
                    if (v16)
                      goto LABEL_23;
                  }
                }
                v12 = v17;
              }
            }
          }
        }
      }
LABEL_23:
      v11 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v12 << 6);
    }
    if (!*(_QWORD *)(*(_QWORD *)v39 + 16))
    {
      v31 = 10;
      goto LABEL_42;
    }
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_213C4B3DC(v20, v19);
    v22 = v21;
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_38:
      swift_bridgeObjectRelease();
      v31 = 10;
      goto LABEL_42;
    }
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(a2 + 16))
      goto LABEL_38;
    swift_bridgeObjectRetain();
    v23 = sub_213C4B3DC(v20, v19);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      v31 = 10;
      goto LABEL_42;
    }
    v25 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v23);
    swift_bridgeObjectRelease();
    v26 = sub_213C862B0();
    *(_QWORD *)(v26 + 16) = 10;
    *(_OWORD *)(v26 + 48) = 0u;
    *(_OWORD *)(v26 + 64) = 0u;
    *(_OWORD *)(v26 + 80) = 0u;
    *(_OWORD *)(v26 + 96) = 0u;
    *(_OWORD *)(v26 + 32) = 0u;
    sub_213C86184();
    v40 = v40 & 0xFFFFFFFF00000000 | v38;
    espresso_network_query_blob_shape();
    swift_release();
    swift_bridgeObjectRelease();
    if (v25 <= 0)
      break;
    if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      swift_bridgeObjectRelease();
      __break(1u);
    }
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_48;
    v27 = sub_213C4B3DC(v20, v19);
    if ((v28 & 1) == 0)
      goto LABEL_48;
    v29 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v30 = *(_QWORD *)(v29 + 16);
    swift_bridgeObjectRelease();
    if (v25 * a3 != v30)
      goto LABEL_41;
    if ((unsigned __int128)(a4 * (__int128)v25) >> 64 != (a4 * v25) >> 63)
      goto LABEL_45;
    if (a4 * v25 != 1)
      goto LABEL_41;
  }
  swift_bridgeObjectRelease();
LABEL_41:
  v31 = 11;
LABEL_42:
  sub_213C618F4();
  swift_allocError();
  *v32 = v31;
  swift_willThrow();
  return swift_release();
}

uint64_t sub_213C5D7C8(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char *v30;
  char v31;
  uint64_t result;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  unint64_t v67;
  uint64_t v68;
  _BOOL8 v69;
  uint64_t v70;
  char v71;
  unint64_t v72;
  char v73;
  unint64_t v74;
  int v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t i;
  uint64_t j;
  uint64_t k;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  _BYTE v108[176];
  _BYTE __dst[176];
  _BYTE v110[176];
  _BYTE v111[176];
  uint64_t v112;

  v112 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(v2 + 344);
  v4 = *(_QWORD *)(v3 + 16);
  v86 = a2;
  if (v4)
  {
    v5 = (uint64_t *)(v2 + 120);
    v6 = (uint64_t *)(v3 + 40);
    v87 = a2;
    swift_bridgeObjectRetain();
    for (i = v4 - 1; ; --i)
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      sub_213C86184();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v10 = *v5;
      v94 = *v5;
      *v5 = 0x8000000000000000;
      swift_bridgeObjectRetain();
      v12 = sub_213C4B3DC(v8, v7);
      v13 = *(_QWORD *)(v10 + 16);
      v14 = (v11 & 1) == 0;
      v15 = v13 + v14;
      if (__OFADD__(v13, v14))
      {
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
      }
      v16 = v11;
      if (*(_QWORD *)(v10 + 24) >= v15)
      {
        v19 = v93;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v11 & 1) == 0)
            goto LABEL_17;
        }
        else
        {
          sub_213C60C44();
          if ((v16 & 1) == 0)
            goto LABEL_17;
        }
      }
      else
      {
        sub_213C60240(v15, isUniquelyReferenced_nonNull_native);
        v17 = sub_213C4B3DC(v8, v7);
        if ((v16 & 1) != (v18 & 1))
        {
LABEL_64:
          result = sub_213C8679C();
          __break(1u);
          return result;
        }
        v12 = v17;
        v19 = v93;
        if ((v16 & 1) == 0)
        {
LABEL_17:
          __break(1u);
LABEL_18:
          swift_bridgeObjectRelease();
          sub_213C618F4();
          swift_allocError();
          v31 = 4;
          goto LABEL_58;
        }
      }
      memmove(__dst, (const void *)(*(_QWORD *)(v94 + 56) + 168 * v12), 0xA8uLL);
      sub_213C62114((uint64_t)__dst);
      sub_213C6211C((uint64_t)__dst, (uint64_t)v108);
      v93 = v19 & 0xFFFFFFFF00000000 | v87;
      v20 = espresso_network_bind_buffer();
      sub_213C6211C((uint64_t)v108, (uint64_t)v110);
      sub_213C6211C((uint64_t)v110, (uint64_t)v111);
      if (sub_213C62164((uint64_t)v111) == 1)
      {
        swift_arrayDestroy();
        sub_213C613C0(v12, v94);
      }
      else
      {
        sub_213C6211C((uint64_t)v110, (uint64_t)&v97);
        v21 = *(_QWORD *)(v94 + 56) + 168 * v12;
        v22 = v104;
        v23 = v105;
        v24 = v106;
        *(_QWORD *)(v21 + 160) = v107;
        *(_OWORD *)(v21 + 128) = v23;
        *(_OWORD *)(v21 + 144) = v24;
        *(_OWORD *)(v21 + 112) = v22;
        v25 = v100;
        v26 = v101;
        v27 = v103;
        *(_OWORD *)(v21 + 80) = v102;
        *(_OWORD *)(v21 + 96) = v27;
        *(_OWORD *)(v21 + 48) = v25;
        *(_OWORD *)(v21 + 64) = v26;
        v28 = v99;
        v29 = v98;
        *(_OWORD *)v21 = v97;
        *(_OWORD *)(v21 + 16) = v29;
        *(_OWORD *)(v21 + 32) = v28;
      }
      swift_bridgeObjectRelease();
      *v5 = v94;
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      if (v20)
        goto LABEL_18;
      if (!i)
        break;
      v6 += 2;
    }
    swift_bridgeObjectRelease();
    a2 = v86;
    v2 = v85;
  }
  result = *(_QWORD *)(v2 + 352);
  v33 = *(_QWORD *)(result + 16);
  if (v33)
  {
    v34 = (uint64_t *)(v2 + 136);
    v35 = (uint64_t *)(result + 40);
    v88 = a2;
    swift_bridgeObjectRetain();
    for (j = v33 - 1; ; --j)
    {
      v37 = *(v35 - 1);
      v36 = *v35;
      sub_213C86184();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v38 = swift_isUniquelyReferenced_nonNull_native();
      v39 = *v34;
      v95 = *v34;
      *v34 = 0x8000000000000000;
      swift_bridgeObjectRetain();
      v41 = sub_213C4B3DC(v37, v36);
      v42 = *(_QWORD *)(v39 + 16);
      v43 = (v40 & 1) == 0;
      v44 = v42 + v43;
      if (__OFADD__(v42, v43))
        goto LABEL_62;
      v45 = v40;
      if (*(_QWORD *)(v39 + 24) >= v44)
      {
        v48 = v93;
        if ((v38 & 1) != 0)
        {
          if ((v40 & 1) == 0)
            goto LABEL_36;
        }
        else
        {
          sub_213C60C44();
          if ((v45 & 1) == 0)
            goto LABEL_36;
        }
      }
      else
      {
        sub_213C60240(v44, v38);
        v46 = sub_213C4B3DC(v37, v36);
        if ((v45 & 1) != (v47 & 1))
          goto LABEL_64;
        v41 = v46;
        v48 = v93;
        if ((v45 & 1) == 0)
        {
LABEL_36:
          __break(1u);
LABEL_37:
          swift_bridgeObjectRelease();
          sub_213C618F4();
          swift_allocError();
          v31 = 5;
          goto LABEL_58;
        }
      }
      memmove(__dst, (const void *)(*(_QWORD *)(v95 + 56) + 168 * v41), 0xA8uLL);
      sub_213C62114((uint64_t)__dst);
      sub_213C6211C((uint64_t)__dst, (uint64_t)v108);
      v93 = v48 & 0xFFFFFFFF00000000 | v88;
      v49 = espresso_network_bind_buffer();
      sub_213C6211C((uint64_t)v108, (uint64_t)v110);
      sub_213C6211C((uint64_t)v110, (uint64_t)v111);
      if (sub_213C62164((uint64_t)v111) == 1)
      {
        swift_arrayDestroy();
        sub_213C613C0(v41, v95);
      }
      else
      {
        sub_213C6211C((uint64_t)v110, (uint64_t)&v97);
        v50 = *(_QWORD *)(v95 + 56) + 168 * v41;
        v51 = v104;
        v52 = v105;
        v53 = v106;
        *(_QWORD *)(v50 + 160) = v107;
        *(_OWORD *)(v50 + 128) = v52;
        *(_OWORD *)(v50 + 144) = v53;
        *(_OWORD *)(v50 + 112) = v51;
        v54 = v100;
        v55 = v101;
        v56 = v103;
        *(_OWORD *)(v50 + 80) = v102;
        *(_OWORD *)(v50 + 96) = v56;
        *(_OWORD *)(v50 + 48) = v54;
        *(_OWORD *)(v50 + 64) = v55;
        v57 = v99;
        v58 = v98;
        *(_OWORD *)v50 = v97;
        *(_OWORD *)(v50 + 16) = v58;
        *(_OWORD *)(v50 + 32) = v57;
      }
      swift_bridgeObjectRelease();
      *v34 = v95;
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      if (v49)
        goto LABEL_37;
      if (!j)
        break;
      v35 += 2;
    }
    result = swift_bridgeObjectRelease();
    a2 = v86;
    v2 = v85;
  }
  if (*(_BYTE *)(v2 + 112) != 1)
    return result;
  result = *(_QWORD *)(v2 + 360);
  v59 = *(_QWORD *)(result + 16);
  if (!v59)
    return result;
  v60 = (uint64_t *)(v2 + 152);
  v61 = (uint64_t *)(result + 40);
  v89 = a2;
  swift_bridgeObjectRetain();
  for (k = v59 - 1; ; --k)
  {
    v63 = *(v61 - 1);
    v62 = *v61;
    sub_213C86184();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v64 = swift_isUniquelyReferenced_nonNull_native();
    v65 = *v60;
    v96 = *v60;
    *v60 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    v67 = sub_213C4B3DC(v63, v62);
    v68 = *(_QWORD *)(v65 + 16);
    v69 = (v66 & 1) == 0;
    v70 = v68 + v69;
    if (__OFADD__(v68, v69))
      goto LABEL_63;
    v71 = v66;
    if (*(_QWORD *)(v65 + 24) < v70)
      break;
    v74 = v93;
    if ((v64 & 1) != 0)
    {
      if ((v66 & 1) == 0)
        goto LABEL_56;
    }
    else
    {
      sub_213C60C44();
      if ((v71 & 1) == 0)
        goto LABEL_56;
    }
LABEL_49:
    memmove(__dst, (const void *)(*(_QWORD *)(v96 + 56) + 168 * v67), 0xA8uLL);
    sub_213C62114((uint64_t)__dst);
    sub_213C6211C((uint64_t)__dst, (uint64_t)v108);
    v93 = v74 & 0xFFFFFFFF00000000 | v89;
    v75 = espresso_network_bind_buffer();
    sub_213C6211C((uint64_t)v108, (uint64_t)v110);
    sub_213C6211C((uint64_t)v110, (uint64_t)v111);
    if (sub_213C62164((uint64_t)v111) == 1)
    {
      swift_arrayDestroy();
      sub_213C613C0(v67, v96);
    }
    else
    {
      sub_213C6211C((uint64_t)v110, (uint64_t)&v97);
      v76 = *(_QWORD *)(v96 + 56) + 168 * v67;
      v77 = v104;
      v78 = v105;
      v79 = v106;
      *(_QWORD *)(v76 + 160) = v107;
      *(_OWORD *)(v76 + 128) = v78;
      *(_OWORD *)(v76 + 144) = v79;
      *(_OWORD *)(v76 + 112) = v77;
      v80 = v100;
      v81 = v101;
      v82 = v103;
      *(_OWORD *)(v76 + 80) = v102;
      *(_OWORD *)(v76 + 96) = v82;
      *(_OWORD *)(v76 + 48) = v80;
      *(_OWORD *)(v76 + 64) = v81;
      v83 = v99;
      v84 = v98;
      *(_OWORD *)v76 = v97;
      *(_OWORD *)(v76 + 16) = v84;
      *(_OWORD *)(v76 + 32) = v83;
    }
    swift_bridgeObjectRelease();
    *v60 = v96;
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    if (v75)
      goto LABEL_57;
    if (!k)
      return swift_bridgeObjectRelease();
    v61 += 2;
  }
  sub_213C60240(v70, v64);
  v72 = sub_213C4B3DC(v63, v62);
  if ((v71 & 1) != (v73 & 1))
    goto LABEL_64;
  v67 = v72;
  v74 = v93;
  if ((v71 & 1) != 0)
    goto LABEL_49;
LABEL_56:
  __break(1u);
LABEL_57:
  swift_bridgeObjectRelease();
  sub_213C618F4();
  swift_allocError();
  v31 = 6;
LABEL_58:
  *v30 = v31;
  return swift_willThrow();
}

uint64_t sub_213C5E048()
{
  _QWORD *v0;
  unint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  char *v59;
  char v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t i;
  uint64_t v84;
  _OWORD v85[10];
  uint64_t v86;
  _BYTE v87[176];
  _BYTE __dst[176];
  _QWORD v89[22];
  _QWORD v90[23];
  unsigned int v91;
  uint64_t v92;

  v2 = v0;
  v92 = *MEMORY[0x24BDAC8D0];
  v90[22] = 0;
  v91 = 0;
  espresso_create_context();
  espresso_create_plan();
  v3 = v0[11];
  v90[0] = v0[10];
  v90[1] = v3;
  swift_bridgeObjectRetain_n();
  sub_213C861F0();
  swift_bridgeObjectRelease();
  sub_213C86184();
  swift_bridgeObjectRelease();
  LODWORD(v3) = espresso_plan_add_network();
  swift_release();
  if ((_DWORD)v3)
  {
    sub_213C618F4();
    swift_allocError();
    v5 = 8;
LABEL_13:
    *v4 = v5;
    return swift_willThrow();
  }
  v6 = v0[45];
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = sub_213C86184();
    swift_bridgeObjectRetain();
    v9 = espresso_network_declare_output();
    swift_release();
    if (v9)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      sub_213C618F4();
      swift_allocError();
      v5 = 3;
      goto LABEL_13;
    }
    v10 = 0;
    v11 = v6 + 56;
    v12 = v7 - 1;
    while (v12 != v10)
    {
      if ((unint64_t)++v10 >= *(_QWORD *)(v6 + 16))
        goto LABEL_69;
      v1 = v11 + 16;
      sub_213C86184();
      v8 = v8 & 0xFFFFFFFF00000000 | v91;
      v13 = espresso_network_declare_output();
      swift_release();
      v11 = v1;
      if (v13)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    v2 = v0;
  }
  if (espresso_plan_build())
  {
    sub_213C618F4();
    swift_allocError();
    v5 = 9;
    goto LABEL_13;
  }
  v15 = (_QWORD *)sub_213C3BEAC(MEMORY[0x24BEE4AF8]);
  v16 = v2[45];
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
    goto LABEL_44;
  v79 = v2;
  v18 = (uint64_t *)(v16 + 40);
  swift_bridgeObjectRetain();
  for (i = v17 - 1; ; --i)
  {
    v19 = *(v18 - 1);
    v20 = *v18;
    v82 = v18;
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v90[0] = v15;
    v23 = sub_213C4B3DC(v19, v20);
    v24 = v15[2];
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
      goto LABEL_70;
    v27 = v22;
    if (v15[3] >= v26)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v30 = (_QWORD *)v90[0];
        if ((v22 & 1) != 0)
          goto LABEL_23;
      }
      else
      {
        sub_213C60C44();
        v30 = (_QWORD *)v90[0];
        if ((v27 & 1) != 0)
          goto LABEL_23;
      }
    }
    else
    {
      sub_213C60240(v26, isUniquelyReferenced_nonNull_native);
      v28 = sub_213C4B3DC(v19, v20);
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_82;
      v23 = v28;
      v30 = (_QWORD *)v90[0];
      if ((v27 & 1) != 0)
      {
LABEL_23:
        v31 = v30[7] + 168 * v23;
        *(_DWORD *)(v31 + 160) = 0;
        *(_OWORD *)(v31 + 128) = 0u;
        *(_OWORD *)(v31 + 144) = 0u;
        *(_OWORD *)(v31 + 96) = 0u;
        *(_OWORD *)(v31 + 112) = 0u;
        *(_OWORD *)(v31 + 64) = 0u;
        *(_OWORD *)(v31 + 80) = 0u;
        *(_OWORD *)(v31 + 32) = 0u;
        *(_OWORD *)(v31 + 48) = 0u;
        *(_OWORD *)v31 = 0u;
        *(_OWORD *)(v31 + 16) = 0u;
        goto LABEL_27;
      }
    }
    v30[(v23 >> 6) + 8] |= 1 << v23;
    v32 = (uint64_t *)(v30[6] + 16 * v23);
    *v32 = v19;
    v32[1] = v20;
    v33 = v30[7] + 168 * v23;
    *(_DWORD *)(v33 + 160) = 0;
    *(_OWORD *)(v33 + 128) = 0u;
    *(_OWORD *)(v33 + 144) = 0u;
    *(_OWORD *)(v33 + 96) = 0u;
    *(_OWORD *)(v33 + 112) = 0u;
    *(_OWORD *)(v33 + 64) = 0u;
    *(_OWORD *)(v33 + 80) = 0u;
    *(_OWORD *)(v33 + 32) = 0u;
    *(_OWORD *)(v33 + 48) = 0u;
    *(_OWORD *)v33 = 0u;
    *(_OWORD *)(v33 + 16) = 0u;
    v34 = v30[2];
    v35 = __OFADD__(v34, 1);
    v36 = v34 + 1;
    if (v35)
      goto LABEL_72;
    v30[2] = v36;
    swift_bridgeObjectRetain();
LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v37 = v91;
    sub_213C86184();
    swift_bridgeObjectRetain();
    v38 = swift_isUniquelyReferenced_nonNull_native();
    swift_bridgeObjectRetain();
    v40 = sub_213C4B3DC(v19, v20);
    v41 = v30[2];
    v42 = (v39 & 1) == 0;
    v43 = v41 + v42;
    if (__OFADD__(v41, v42))
      goto LABEL_71;
    v44 = v39;
    if (v30[3] >= v43)
    {
      v47 = v80;
      if ((v38 & 1) != 0)
      {
        v1 = 168;
        if ((v39 & 1) == 0)
          goto LABEL_41;
      }
      else
      {
        sub_213C60C44();
        v1 = 168;
        if ((v44 & 1) == 0)
          goto LABEL_41;
      }
    }
    else
    {
      sub_213C60240(v43, v38);
      v45 = sub_213C4B3DC(v19, v20);
      if ((v44 & 1) != (v46 & 1))
        goto LABEL_82;
      v40 = v45;
      v1 = 168;
      v47 = v80;
      if ((v44 & 1) == 0)
      {
LABEL_41:
        __break(1u);
LABEL_42:
        swift_bridgeObjectRelease();
        sub_213C618F4();
        swift_allocError();
        v60 = 5;
LABEL_46:
        *v59 = v60;
        swift_willThrow();
        return swift_bridgeObjectRelease();
      }
    }
    v15 = v30;
    memmove(__dst, (const void *)(v30[7] + 168 * v40), 0xA8uLL);
    sub_213C62114((uint64_t)__dst);
    sub_213C6211C((uint64_t)__dst, (uint64_t)v87);
    v48 = v47 & 0xFFFFFFFF00000000 | v37;
    v49 = espresso_network_bind_buffer();
    sub_213C6211C((uint64_t)v87, (uint64_t)v89);
    sub_213C6211C((uint64_t)v89, (uint64_t)v90);
    if (sub_213C62164((uint64_t)v90) == 1)
    {
      swift_arrayDestroy();
      sub_213C613C0(v40, (uint64_t)v30);
    }
    else
    {
      sub_213C6211C((uint64_t)v89, (uint64_t)v85);
      v50 = v30[7] + 168 * v40;
      v51 = v85[7];
      v52 = v85[8];
      v53 = v85[9];
      *(_QWORD *)(v50 + 160) = v86;
      *(_OWORD *)(v50 + 128) = v52;
      *(_OWORD *)(v50 + 144) = v53;
      *(_OWORD *)(v50 + 112) = v51;
      v54 = v85[3];
      v55 = v85[4];
      v56 = v85[6];
      *(_OWORD *)(v50 + 80) = v85[5];
      *(_OWORD *)(v50 + 96) = v56;
      *(_OWORD *)(v50 + 48) = v54;
      *(_OWORD *)(v50 + 64) = v55;
      v58 = v85[1];
      v57 = v85[2];
      *(_OWORD *)v50 = v85[0];
      *(_OWORD *)(v50 + 16) = v58;
      *(_OWORD *)(v50 + 32) = v57;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
    if (v49)
      goto LABEL_42;
    if (!i)
      break;
    v80 = v48;
    v18 = v82 + 2;
  }
  swift_bridgeObjectRelease();
  v2 = v79;
LABEL_44:
  if (espresso_plan_execute_sync())
  {
    sub_213C618F4();
    swift_allocError();
    v60 = 12;
    goto LABEL_46;
  }
  v61 = v2[45];
  v84 = *(_QWORD *)(v61 + 16);
  if (!v84)
    goto LABEL_67;
  v81 = v91;
  swift_bridgeObjectRetain();
  v78 = v2 + 19;
  swift_beginAccess();
  v62 = 0;
  while (2)
  {
    if (v62 >= *(_QWORD *)(v61 + 16))
      goto LABEL_73;
    v63 = (uint64_t *)(v61 + 32 + 16 * v62);
    v65 = *v63;
    v64 = v63[1];
    swift_bridgeObjectRetain();
    v66 = sub_213C862B0();
    *(_QWORD *)(v66 + 16) = 10;
    *(_OWORD *)(v66 + 48) = 0u;
    *(_OWORD *)(v66 + 64) = 0u;
    *(_OWORD *)(v66 + 80) = 0u;
    *(_OWORD *)(v66 + 96) = 0u;
    *(_OWORD *)(v66 + 32) = 0u;
    v89[0] = 0;
    sub_213C86184();
    v1 = v1 & 0xFFFFFFFF00000000 | v81;
    espresso_network_query_blob_shape();
    swift_release();
    if ((v89[0] & 0x8000000000000000) != 0)
      goto LABEL_74;
    if (*(_QWORD *)(v66 + 16) < v89[0])
      goto LABEL_75;
    if (!v89[0])
    {
      swift_bridgeObjectRelease();
      goto LABEL_59;
    }
    v67 = 0;
    v68 = 1;
    while (2)
    {
      v69 = *(_QWORD *)(v66 + 8 * v67 + 32);
      v70 = (unsigned __int128)(v68 * (__int128)v69) >> 64;
      v68 *= v69;
      if (v70 != v68 >> 63)
      {
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
      }
      if (v89[0] != ++v67)
        continue;
      break;
    }
    swift_bridgeObjectRelease();
    if (v68 < (uint64_t)0xFFFFFFFF80000000 || v68 >= 0x80000000)
      goto LABEL_83;
LABEL_59:
    if (!v15[2])
      goto LABEL_76;
    swift_bridgeObjectRetain();
    v71 = sub_213C4B3DC(v65, v64);
    if ((v72 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_80:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      sub_213C8679C();
      __break(1u);
LABEL_83:
      result = sub_213C865C8();
      __break(1u);
      return result;
    }
    v73 = *(_QWORD *)(v15[7] + 168 * v71);
    swift_bridgeObjectRelease();
    if (!v73)
      goto LABEL_78;
    v74 = *v78;
    if (!*(_QWORD *)(*v78 + 16))
      goto LABEL_79;
    swift_bridgeObjectRetain();
    v75 = sub_213C4B3DC(v65, v64);
    if ((v76 & 1) == 0)
      goto LABEL_80;
    v77 = *(_QWORD *)(*(_QWORD *)(v74 + 56) + 168 * v75);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v77)
      goto LABEL_81;
    ++v62;
    cblas_scopy_NEWLAPACK();
    if (v62 != v84)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
LABEL_67:
  espresso_plan_destroy();
  espresso_context_destroy();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C5E9EC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  _QWORD *v4;
  _BYTE *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13[6];
  char *v14[6];

  v4[13] = a1;
  swift_beginAccess();
  sub_213C5EBE4(v13);
  v14[0] = (char *)v13[0];
  v14[1] = (char *)v13[1];
  v14[2] = (char *)v13[2];
  v14[3] = (char *)v13[3];
  v14[4] = (char *)v13[4];
  v14[5] = (char *)v13[5];
  if (espresso_plan_build_clean())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213C618F4();
    swift_allocError();
    *v7 = 22;
    return swift_willThrow();
  }
  else
  {
    sub_213C59A78(a2, a3, a4, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (!v11)
    {
      v9 = v4[43];
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_213C622DC(a3, a4, v9, v4 + 15);
      swift_endAccess();
      swift_bridgeObjectRelease();
      v10 = v4[44];
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_213C622DC(a3, a4, v10, v4 + 17);
      swift_endAccess();
      swift_bridgeObjectRelease();
      return sub_213C5D7C8(a3, a4);
    }
  }
  return result;
}

uint64_t sub_213C5EBE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  _QWORD *v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[6];

  v34 = sub_213C58F38(0, *(_QWORD *)(*(_QWORD *)(v1 + 344) + 16));
  v3 = sub_213C58F38(0, *(_QWORD *)(*(_QWORD *)(v1 + 344) + 16));
  v4 = sub_213C58F38(0, *(_QWORD *)(*(_QWORD *)(v1 + 344) + 16));
  v5 = sub_213C58F38(0, *(_QWORD *)(*(_QWORD *)(v1 + 344) + 16));
  v6 = sub_213C58F38(0, *(_QWORD *)(*(_QWORD *)(v1 + 344) + 16));
  v7 = sub_213C58F38(0, *(_QWORD *)(*(_QWORD *)(v1 + 344) + 16));
  result = *(_QWORD *)(v1 + 344);
  v29 = *(_QWORD *)(result + 16);
  if (v29)
  {
    v28 = a1;
    v9 = 0;
    v10 = swift_bridgeObjectRetain() + 40;
    while (1)
    {
      v31 = v5;
      v32 = v7;
      v30 = v6;
      v33 = v4;
      swift_bridgeObjectRetain();
      sub_213C5A8D4();
      v12 = v11;
      v14 = v13;
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v1 + 104);
      if ((v14 & 1) == 0)
        goto LABEL_6;
      result = swift_isUniquelyReferenced_nonNull();
      if ((result & 1) != 0)
      {
        v16 = 0;
      }
      else
      {
LABEL_6:
        sub_213C676B4((uint64_t)v12, 0, v14);
        v12 = v17;
        v16 = v18;
        v14 = v19;
        result = swift_unknownObjectRelease();
      }
      if (v14 < 2 || v16 > 0)
        break;
      v21 = v3;
      *v12 = v15;
      result = sub_213C61938((uint64_t)v12, v16, v14, v35);
      v22 = v35[0];
      if (v35[0] < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_46;
      if (v35[0] > 0x7FFFFFFF)
        goto LABEL_47;
      v24 = v35[1];
      v23 = v35[2];
      v26 = v35[3];
      v25 = v35[4];
      v27 = v35[5];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        result = v34;
      else
        result = (uint64_t)sub_213C5F298(v34);
      if (v9 >= *(_QWORD *)(result + 16))
        goto LABEL_48;
      *(_DWORD *)(result + 4 * v9 + 32) = v22;
      if (v24 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_49;
      if (v24 > 0x7FFFFFFF)
        goto LABEL_50;
      v34 = result;
      v3 = v21;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_213C5F298(v21);
        v3 = result;
      }
      if (v9 >= *(_QWORD *)(v3 + 16))
        goto LABEL_51;
      *(_DWORD *)(v3 + 4 * v9 + 32) = v24;
      if (v23 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_52;
      if (v23 > 0x7FFFFFFF)
        goto LABEL_53;
      v4 = v33;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_213C5F298(v33);
        v4 = result;
      }
      v7 = v32;
      if (v9 >= *(_QWORD *)(v4 + 16))
        goto LABEL_54;
      *(_DWORD *)(v4 + 4 * v9 + 32) = v23;
      if (v26 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_55;
      if (v26 > 0x7FFFFFFF)
        goto LABEL_56;
      v5 = v31;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_213C5F298(v31);
        v5 = result;
      }
      if (v9 >= *(_QWORD *)(v5 + 16))
        goto LABEL_57;
      *(_DWORD *)(v5 + 4 * v9 + 32) = v26;
      if (v25 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_58;
      if (v25 > 0x7FFFFFFF)
        goto LABEL_59;
      v6 = v30;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_213C5F298(v30);
        v6 = result;
      }
      if (v9 >= *(_QWORD *)(v6 + 16))
        goto LABEL_60;
      *(_DWORD *)(v6 + 4 * v9 + 32) = v25;
      if (v27 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_61;
      if (v27 > 0x7FFFFFFF)
        goto LABEL_62;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_213C5F298(v32);
        v7 = result;
      }
      if (v9 >= *(_QWORD *)(v7 + 16))
        goto LABEL_63;
      v10 += 16;
      *(_DWORD *)(v7 + 4 * v9 + 32) = v27;
      swift_unknownObjectRelease();
      if (v29 == ++v9)
      {
        result = swift_bridgeObjectRelease();
        a1 = v28;
        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
  }
  else
  {
LABEL_45:
    *a1 = v34;
    a1[1] = v3;
    a1[2] = v4;
    a1[3] = v5;
    a1[4] = v6;
    a1[5] = v7;
  }
  return result;
}

double ndShapeTo5dShape(shape:)@<D0>(uint64_t a1@<X1>, int64_t a2@<X2>, unint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  double result;
  __int128 v6;
  __int128 v7;
  _OWORD v8[3];

  sub_213C61938(a1, a2, a3, (uint64_t *)v8);
  result = *(double *)v8;
  v6 = v8[1];
  v7 = v8[2];
  *a4 = v8[0];
  a4[1] = v6;
  a4[2] = v7;
  return result;
}

uint64_t sub_213C5F030@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  type metadata accessor for EspressoMILTrainer();
  swift_allocObject();
  v4 = sub_213C617D8(a1);
  result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_213C5F084(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_213C5925C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_213C5F0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = 1;
  return sub_213C5925C(a1, a2, &v5, a3, a4, MEMORY[0x24BEE4AF8]);
}

uint64_t sub_213C5F0E0(uint64_t a1, unint64_t a2)
{
  return sub_213C59F7C(a1, a2 | ((HIDWORD(a2) & 1) << 32));
}

uint64_t sub_213C5F10C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *v1;
  v5 = *a1;
  swift_beginAccess();
  v3 = sub_213C5AC70(&v5, (uint64_t *)(v2 + 152));
  swift_endAccess();
  return v3;
}

uint64_t sub_213C5F188(_BYTE *a1)
{
  return sub_213C5B134(a1);
}

uint64_t *sub_213C5F1A8(uint64_t *a1)
{
  return sub_213C5920C(a1);
}

uint64_t sub_213C5F1C8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned __int8 *a5, char a6)
{
  return sub_213C5B65C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_213C5F1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_213C5C794(a1, a2, a3);
}

char *sub_213C5F208(uint64_t a1)
{
  return sub_213C41ACC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_213C5F21C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_213C865E0();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x2199BFF14);
}

uint64_t sub_213C5F284(uint64_t a1)
{
  return sub_213C4202C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

char *sub_213C5F298(uint64_t a1)
{
  return sub_213C4213C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_213C5F2AC(_QWORD *a1)
{
  return sub_213C42248(0, a1[2], 0, a1);
}

char *sub_213C5F2C0(uint64_t a1)
{
  return sub_213C42460(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_213C5F2D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  __int128 v25[2];

  v2 = swift_retain();
  v3 = *(_QWORD *)(v2 + 24);
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v3 < *(_QWORD *)(v2 + 16))
  {
    v5 = type metadata accessor for FileRecipeDescriptor();
    v6 = 0;
    v7 = (uint64_t)(v4 + 4);
    while (1)
    {
      *(_QWORD *)(a1 + 24) = v3 + 1;
      v8 = swift_allocObject();
      v23 = v5;
      v24 = &off_24D0D9090;
      *(_QWORD *)&v22 = v8;
      result = sub_213C3AA48(&v22, (uint64_t)v25);
      if (!v6)
      {
        v10 = v4[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1)
          v12 = 1;
        else
          v12 = v11;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F3F0);
        v13 = (_QWORD *)swift_allocObject();
        v14 = (uint64_t)(_swift_stdlib_malloc_size(v13) - 32) / 40;
        v13[2] = v12;
        v13[3] = 2 * v14;
        v15 = (unint64_t)(v13 + 4);
        v16 = v4[3] >> 1;
        if (v4[2])
        {
          if (v13 != v4 || v15 >= (unint64_t)&v4[5 * v16 + 4])
            memmove(v13 + 4, v4 + 4, 40 * v16);
          v4[2] = 0;
        }
        v7 = v15 + 40 * v16;
        v6 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        result = swift_release();
        v4 = v13;
      }
      v18 = __OFSUB__(v6--, 1);
      if (v18)
        break;
      sub_213C3AA48(v25, v7);
      v7 += 40;
      v3 = *(_QWORD *)(a1 + 24);
      if (v3 >= *(_QWORD *)(a1 + 16))
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v6 = 0;
LABEL_21:
  result = swift_release();
  v19 = v4[3];
  if (v19 < 2)
    return (uint64_t)v4;
  v20 = v19 >> 1;
  v18 = __OFSUB__(v20, v6);
  v21 = v20 - v6;
  if (!v18)
  {
    v4[2] = v21;
    return (uint64_t)v4;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_213C5F490()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  __int128 v36;
  ValueMetadata *v37;
  _UNKNOWN **v38;
  __int128 v39[3];

  result = swift_retain();
  v1 = *(_QWORD *)(result + 120);
  v2 = *(_QWORD *)(result + 16);
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1 < *(_QWORD *)(v2 + 16))
  {
    v4 = 0;
    v5 = MEMORY[0x24BEE4AF8] + 32;
    v32 = result;
    while (1)
    {
      if (v1 < 0)
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        return result;
      }
      v33 = v5;
      v34 = v3;
      v6 = v2 + 88 * v1;
      v7 = *(_QWORD *)(v6 + 80);
      v35 = *(_QWORD *)(v6 + 72);
      v8 = *(_QWORD *)(v6 + 88);
      v9 = *(_BYTE *)(v6 + 96);
      v10 = *(_QWORD *)(v6 + 104);
      v11 = *(_QWORD *)(v6 + 112);
      v12 = v4;
      v13 = *(_QWORD *)(v6 + 56);
      v14 = *(_QWORD *)(v6 + 64);
      v15 = *(_QWORD *)(v6 + 40);
      v16 = *(_QWORD *)(v6 + 48);
      v17 = *(_DWORD *)(v6 + 32);
      *(_QWORD *)(result + 120) = v1 + 1;
      v37 = &type metadata for DodMLRecipeDescriptor;
      v38 = &off_24D0D8820;
      v18 = swift_allocObject();
      *(_QWORD *)&v36 = v18;
      *(_DWORD *)(v18 + 16) = v17;
      *(_QWORD *)(v18 + 24) = v15;
      *(_QWORD *)(v18 + 32) = v16;
      v19 = v13;
      v20 = v12;
      *(_QWORD *)(v18 + 40) = v19;
      *(_QWORD *)(v18 + 48) = v14;
      *(_QWORD *)(v18 + 56) = v35;
      *(_QWORD *)(v18 + 64) = v7;
      *(_QWORD *)(v18 + 72) = v8;
      *(_BYTE *)(v18 + 80) = v9;
      *(_QWORD *)(v18 + 88) = v10;
      *(_QWORD *)(v18 + 96) = v11;
      result = sub_213C3AA48(&v36, (uint64_t)v39);
      if (v12)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_213C3B198(v7, v8, v9);
        result = swift_bridgeObjectRetain();
        v21 = v33;
        v3 = v34;
        v22 = __OFSUB__(v20, 1);
        v4 = v20 - 1;
        if (v22)
          goto LABEL_30;
        goto LABEL_22;
      }
      v23 = v34[3];
      if ((uint64_t)((v23 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_31;
      v24 = v23 & 0xFFFFFFFFFFFFFFFELL;
      if (v24 <= 1)
        v25 = 1;
      else
        v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F3F0);
      v3 = (_QWORD *)swift_allocObject();
      v26 = (uint64_t)(_swift_stdlib_malloc_size(v3) - 32) / 40;
      v3[2] = v25;
      v3[3] = 2 * v26;
      v27 = v34[3] >> 1;
      v21 = (uint64_t)&v3[5 * v27 + 4];
      v28 = (v26 & 0x7FFFFFFFFFFFFFFFLL) - v27;
      if (!v34[2])
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_213C3B198(v7, v8, v9);
        swift_bridgeObjectRetain();
        goto LABEL_21;
      }
      if (v3 < v34 || v3 + 4 >= &v34[5 * v27 + 4])
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_213C3B198(v7, v8, v9);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_213C3B198(v7, v8, v9);
        if (v3 == v34)
          goto LABEL_20;
      }
      memmove(v3 + 4, v34 + 4, 40 * v27);
LABEL_20:
      swift_bridgeObjectRetain();
      v34[2] = 0;
LABEL_21:
      result = swift_release();
      v22 = __OFSUB__(v28, 1);
      v4 = v28 - 1;
      if (v22)
        goto LABEL_30;
LABEL_22:
      sub_213C3AA48(v39, v21);
      v5 = v21 + 40;
      result = v32;
      v1 = *(_QWORD *)(v32 + 120);
      v2 = *(_QWORD *)(v32 + 16);
      if (v1 >= *(_QWORD *)(v2 + 16))
        goto LABEL_25;
    }
  }
  v4 = 0;
LABEL_25:
  result = swift_release();
  v29 = v3[3];
  if (v29 >= 2)
  {
    v30 = v29 >> 1;
    v22 = __OFSUB__(v30, v4);
    v31 = v30 - v4;
    if (v22)
      goto LABEL_32;
    v3[2] = v31;
  }
  return (uint64_t)v3;
}

uint64_t sub_213C5F7CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  const void *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;
  __int128 v27[2];

  v2 = swift_retain();
  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v4 < *(_QWORD *)(v3 + 16))
  {
    v6 = type metadata accessor for CKPolicyRecord(0);
    v7 = 0;
    v8 = (uint64_t)(v5 + 4);
    while (1)
    {
      v25 = v6;
      v26 = &off_24D0D8168;
      result = (uint64_t)__swift_allocate_boxed_opaque_existential_1((uint64_t *)&v24);
      if (v4 < 0)
        break;
      result = sub_213C3AA04(v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v4, result);
      v10 = *(_QWORD *)(a1 + 24);
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_25;
      *(_QWORD *)(a1 + 24) = v12;
      result = sub_213C3AA48(&v24, (uint64_t)v27);
      if (!v7)
      {
        v13 = v5[3];
        if ((uint64_t)((v13 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_27;
        v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
        if (v14 <= 1)
          v15 = 1;
        else
          v15 = v14;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F3F0);
        v16 = (_QWORD *)swift_allocObject();
        v17 = (uint64_t)(_swift_stdlib_malloc_size(v16) - 32) / 40;
        v16[2] = v15;
        v16[3] = 2 * v17;
        v18 = (unint64_t)(v16 + 4);
        v19 = v5[3] >> 1;
        if (v5[2])
        {
          v20 = v5 + 4;
          if (v16 != v5 || v18 >= (unint64_t)v20 + 40 * v19)
            memmove(v16 + 4, v20, 40 * v19);
          v5[2] = 0;
        }
        v8 = v18 + 40 * v19;
        v7 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
        result = swift_release();
        v5 = v16;
      }
      v11 = __OFSUB__(v7--, 1);
      if (v11)
        goto LABEL_26;
      sub_213C3AA48(v27, v8);
      v8 += 40;
      v3 = *(_QWORD *)(a1 + 16);
      v4 = *(_QWORD *)(a1 + 24);
      if (v4 >= *(_QWORD *)(v3 + 16))
        goto LABEL_20;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = 0;
LABEL_20:
  result = swift_release();
  v21 = v5[3];
  if (v21 < 2)
    return (uint64_t)v5;
  v22 = v21 >> 1;
  v11 = __OFSUB__(v22, v7);
  v23 = v22 - v7;
  if (!v11)
  {
    v5[2] = v23;
    return (uint64_t)v5;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_213C5F9C0(uint64_t result, int64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  _BOOL4 v9;
  BOOL v10;
  int64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t *v14;
  uint64_t v15;
  BOOL v16;
  int64_t v17;
  BOOL v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t *v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  BOOL v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;

  v5 = result;
  v6 = 0;
  v7 = 32;
  v8 = result;
  while (1)
  {
    v9 = v8 <= a2;
    if (a3 > 0)
      v9 = v8 >= a2;
    if (v9)
      break;
    v10 = __OFADD__(v8, a3);
    v8 += a3;
    if (v10)
      v8 = (v8 >> 63) ^ 0x8000000000000000;
    v7 += 8;
    v10 = __OFADD__(v6++, 1);
    if (v10)
    {
      __break(1u);
      break;
    }
  }
  if (v6 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E270);
    v11 = (int64_t *)swift_allocObject();
    result = _swift_stdlib_malloc_size(v11);
    v12 = result - 32;
    if (result < 32)
      v12 = result - 25;
    v13 = v12 >> 3;
    v11[2] = v6;
    v11[3] = 2 * v13;
    v14 = v11 + 4;
    v15 = v13 & 0x7FFFFFFFFFFFFFFFLL;
LABEL_15:
    v15 -= v6;
    while (1)
    {
      v16 = v5 <= a2;
      if (a3 > 0)
        v16 = v5 >= a2;
      if (v16)
        break;
      if (__OFADD__(v5, a3))
        v17 = ((v5 + a3) >> 63) ^ 0x8000000000000000;
      else
        v17 = v5 + a3;
      *v14++ = v5;
      v5 = v17;
      if (!--v6)
        goto LABEL_23;
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v11 = (int64_t *)MEMORY[0x24BEE4AF8];
  v14 = (int64_t *)(MEMORY[0x24BEE4AF8] + 32);
  v15 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24) >> 1;
  if (v6)
    goto LABEL_15;
  v17 = result;
LABEL_23:
  v18 = v17 <= a2;
  if (a3 > 0)
    v18 = v17 >= a2;
  if (!v18)
  {
    v19 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
    do
    {
      v20 = v17 + a3;
      if (__OFADD__(v17, a3))
      {
        v20 = v19;
        if (!v15)
          goto LABEL_32;
        v20 = v19;
      }
      else if (!v15)
      {
LABEL_32:
        v21 = v11[3];
        if ((uint64_t)((v21 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_58;
        v22 = v21 & 0xFFFFFFFFFFFFFFFELL;
        if (v22 <= 1)
          v23 = 1;
        else
          v23 = v22;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E270);
        v24 = (int64_t *)swift_allocObject();
        v25 = _swift_stdlib_malloc_size(v24);
        v26 = v25 - 32;
        if (v25 < 32)
          v26 = v25 - 25;
        v27 = v26 >> 3;
        v24[2] = v23;
        v24[3] = 2 * (v26 >> 3);
        v28 = (unint64_t)(v24 + 4);
        v29 = (unint64_t)v11[3] >> 1;
        if (v11[2])
        {
          if (v24 != v11 || v28 >= (unint64_t)&v11[v29 + 4])
            memmove(v24 + 4, v11 + 4, 8 * v29);
          v11[2] = 0;
        }
        v14 = (int64_t *)(v28 + 8 * v29);
        v15 = (v27 & 0x7FFFFFFFFFFFFFFFLL) - v29;
        result = swift_release();
        v11 = v24;
        v19 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
      }
      v10 = __OFSUB__(v15--, 1);
      if (v10)
        goto LABEL_57;
      *v14++ = v17;
      v31 = v20 <= a2;
      if (a3 > 0)
        v31 = v20 >= a2;
      v17 = v20;
    }
    while (!v31);
  }
  v32 = v11[3];
  if (v32 < 2)
    return (uint64_t)v11;
  v33 = v32 >> 1;
  v10 = __OFSUB__(v33, v15);
  v34 = v33 - v15;
  if (!v10)
  {
    v11[2] = v34;
    return (uint64_t)v11;
  }
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_213C5FC40(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E2B8);
  v6 = sub_213C865F8();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_213C3B0BC(v24, v35);
      }
      else
      {
        sub_213C35070((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_213C867F0();
      sub_213C861CC();
      result = sub_213C86808();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_213C3B0BC(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_213C5FF3C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F400);
  v37 = a2;
  v6 = sub_213C865F8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_213C867F0();
    sub_213C861CC();
    result = sub_213C86808();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_213C60240(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E250);
  v36 = a2;
  v6 = sub_213C865F8();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v35 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v34)
          goto LABEL_33;
        v23 = v35[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v34)
            goto LABEL_33;
          v23 = v35[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v36 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v35[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v34)
                  goto LABEL_33;
                v23 = v35[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 168 * v21;
      v45 = *(_OWORD *)(v32 + 128);
      v46 = *(_OWORD *)(v32 + 144);
      v47 = *(_QWORD *)(v32 + 160);
      v41 = *(_OWORD *)(v32 + 64);
      v42 = *(_OWORD *)(v32 + 80);
      v43 = *(_OWORD *)(v32 + 96);
      v44 = *(_OWORD *)(v32 + 112);
      v37 = *(_OWORD *)v32;
      v38 = *(_OWORD *)(v32 + 16);
      v39 = *(_OWORD *)(v32 + 32);
      v40 = *(_OWORD *)(v32 + 48);
      if ((v36 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_213C867F0();
      sub_213C861CC();
      result = sub_213C86808();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + 168 * v17;
      *(_OWORD *)(v19 + 128) = v45;
      *(_OWORD *)(v19 + 144) = v46;
      *(_QWORD *)(v19 + 160) = v47;
      *(_OWORD *)(v19 + 64) = v41;
      *(_OWORD *)(v19 + 80) = v42;
      *(_OWORD *)(v19 + 96) = v43;
      *(_OWORD *)(v19 + 112) = v44;
      *(_OWORD *)v19 = v37;
      *(_OWORD *)(v19 + 16) = v38;
      *(_OWORD *)(v19 + 32) = v39;
      *(_OWORD *)(v19 + 48) = v40;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_213C605A0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E248);
  v36 = a2;
  v6 = sub_213C865F8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_213C867F0();
    sub_213C861CC();
    result = sub_213C86808();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_213C608B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E2B8);
  v2 = *v0;
  v3 = sub_213C865EC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_213C35070(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_213C3B0BC(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_213C60A98()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F400);
  v2 = *v0;
  v3 = sub_213C865EC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_213C60C44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E250);
  v2 = *v0;
  v3 = sub_213C865EC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 168 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v35 = *(_OWORD *)(v21 + 128);
    v36 = *(_OWORD *)(v21 + 144);
    v37 = *(_QWORD *)(v21 + 160);
    v31 = *(_OWORD *)(v21 + 64);
    v32 = *(_OWORD *)(v21 + 80);
    v33 = *(_OWORD *)(v21 + 96);
    v34 = *(_OWORD *)(v21 + 112);
    v27 = *(_OWORD *)v21;
    v28 = *(_OWORD *)(v21 + 16);
    v29 = *(_OWORD *)(v21 + 32);
    v30 = *(_OWORD *)(v21 + 48);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    v23 = *(_QWORD *)(v4 + 56) + v20;
    *(_OWORD *)(v23 + 128) = v35;
    *(_OWORD *)(v23 + 144) = v36;
    *(_QWORD *)(v23 + 160) = v37;
    *(_OWORD *)(v23 + 64) = v31;
    *(_OWORD *)(v23 + 80) = v32;
    *(_OWORD *)(v23 + 96) = v33;
    *(_OWORD *)(v23 + 112) = v34;
    *(_OWORD *)v23 = v27;
    *(_OWORD *)(v23 + 16) = v28;
    *(_OWORD *)(v23 + 32) = v29;
    *(_OWORD *)(v23 + 48) = v30;
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_213C60E64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E248);
  v2 = *v0;
  v3 = sub_213C865EC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_213C61018(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_213C864E4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_213C867F0();
        swift_bridgeObjectRetain();
        sub_213C861CC();
        v9 = sub_213C86808();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_213C611EC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_213C864E4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_213C867F0();
        swift_bridgeObjectRetain();
        sub_213C861CC();
        v10 = sub_213C86808();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_213C613C0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  const void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_213C864E4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_213C867F0();
        swift_bridgeObjectRetain();
        sub_213C861CC();
        v9 = sub_213C86808();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          result = v14 + 168 * v3;
          v15 = (const void *)(v14 + 168 * v6);
          if (v3 != v6 || (v3 = v6, result >= (unint64_t)v15 + 168))
          {
            result = (unint64_t)memmove((void *)result, v15, 0xA8uLL);
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_213C615A0(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4, double a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a4[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(double *)(a4[7] + 8 * result) = a5;
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

_OWORD *sub_213C615E8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_213C3B0BC(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_213C61650(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = a5[7] + 168 * result;
  v7 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v6 + 64) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v6 + 80) = v7;
  *(_QWORD *)(v6 + 160) = *(_QWORD *)(a4 + 160);
  v8 = *(_OWORD *)(a4 + 144);
  *(_OWORD *)(v6 + 128) = *(_OWORD *)(a4 + 128);
  *(_OWORD *)(v6 + 144) = v8;
  v9 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v6 + 96) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v6 + 112) = v9;
  v10 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v10;
  v11 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v6 + 48) = v11;
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

unint64_t sub_213C616CC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t *sub_213C61714(uint64_t *result, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v8 = *result;
  if (!*result)
  {
    if ((a2 & 1) != 0)
    {
      swift_arrayDestroy();
      sub_213C61018(a4, *a3);
    }
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  v9 = (_QWORD *)*a3;
  if ((a2 & 1) != 0)
  {
    *(_QWORD *)(v9[7] + 8 * a4) = v8;
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  v9[(a4 >> 6) + 8] |= 1 << a4;
  v10 = (_QWORD *)(v9[6] + 16 * a4);
  *v10 = a5;
  v10[1] = a6;
  *(_QWORD *)(v9[7] + 8 * a4) = v8;
  v11 = v9[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (!v12)
  {
    v9[2] = v13;
    swift_bridgeObjectRetain();
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  __break(1u);
  return result;
}

uint64_t sub_213C617D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(v1 + 80) = 0;
  *(_QWORD *)(v1 + 88) = 0xE000000000000000;
  *(_QWORD *)(v1 + 96) = 1;
  *(_BYTE *)(v1 + 112) = 1;
  v3 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 120) = sub_213C3BEAC(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v1 + 128) = sub_213C3C098(v3);
  *(_QWORD *)(v1 + 136) = sub_213C3BEAC(v3);
  *(_QWORD *)(v1 + 144) = sub_213C3C098(v3);
  *(_QWORD *)(v1 + 152) = sub_213C3BEAC(v3);
  *(_QWORD *)(v1 + 160) = sub_213C3C098(v3);
  *(_QWORD *)(v1 + 168) = sub_213C3BEAC(v3);
  *(_OWORD *)(v1 + 176) = 0u;
  *(_OWORD *)(v1 + 192) = 0u;
  *(_OWORD *)(v1 + 208) = 0u;
  *(_OWORD *)(v1 + 224) = 0u;
  *(_OWORD *)(v1 + 240) = 0u;
  *(_OWORD *)(v1 + 256) = 0u;
  *(_OWORD *)(v1 + 272) = 0u;
  *(_OWORD *)(v1 + 288) = 0u;
  *(_OWORD *)(v1 + 304) = 0u;
  *(_OWORD *)(v1 + 320) = 0u;
  *(_DWORD *)(v1 + 336) = 0;
  *(_QWORD *)(v1 + 344) = v3;
  *(_QWORD *)(v1 + 352) = v3;
  *(_QWORD *)(v1 + 360) = v3;
  *(_QWORD *)(v1 + 16) = a1;
  swift_retain();
  result = espresso_create_context();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  *(_QWORD *)(v1 + 24) = result;
  *(_QWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 40) = 0;
  result = espresso_create_plan();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(_QWORD *)(v1 + 48) = result;
  *(_QWORD *)(v1 + 56) = 0;
  *(_DWORD *)(v1 + 64) = 0;
  result = espresso_create_plan();
  if (result)
  {
    *(_QWORD *)(v1 + 72) = result;
    *(_QWORD *)(v1 + 104) = -1;
    return v1;
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_213C618F4()
{
  unint64_t result;

  result = qword_254D2F048;
  if (!qword_254D2F048)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for EspressoError, &type metadata for EspressoError);
    atomic_store(result, (unint64_t *)&qword_254D2F048);
  }
  return result;
}

uint64_t sub_213C61938@<X0>(uint64_t result@<X0>, int64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v4 = a3 >> 1;
  v5 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
  {
    __break(1u);
    goto LABEL_26;
  }
  v6 = v5 - 1;
  if ((uint64_t)v5 < 1)
  {
    v13 = 1;
    v9 = 1;
    v7 = 1;
LABEL_21:
    v11 = 1;
    goto LABEL_22;
  }
  if ((uint64_t)v5 <= a2 || v6 >= v4)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v7 = *(_QWORD *)(result + 8 * v6);
  v8 = v5 - 2;
  if (v5 < 2)
  {
    v13 = 1;
    v9 = 1;
    goto LABEL_21;
  }
  if ((uint64_t)v8 < a2 || v8 >= v4)
    goto LABEL_27;
  v9 = *(_QWORD *)(result + 8 * v8);
  v10 = v5 - 3;
  if (v5 < 3)
  {
    v13 = 1;
    goto LABEL_21;
  }
  if ((uint64_t)v10 < a2 || v10 >= v4)
    goto LABEL_28;
  v11 = *(_QWORD *)(result + 8 * v10);
  v12 = v5 - 4;
  if (v5 < 4)
  {
    v13 = 1;
    goto LABEL_22;
  }
  if ((uint64_t)v12 < a2 || v12 >= v4)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v13 = *(_QWORD *)(result + 8 * v12);
  v14 = v5 - 5;
  if (v5 < 5)
  {
LABEL_22:
    v15 = 1;
    goto LABEL_23;
  }
  if ((uint64_t)v14 >= a2 && v14 < v4)
  {
    v15 = *(_QWORD *)(result + 8 * v14);
LABEL_23:
    *a4 = v7;
    a4[1] = v9;
    a4[2] = v11;
    a4[3] = v13;
    a4[4] = v15;
    a4[5] = v5;
    return result;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_213C61A2C(uint64_t result, unsigned int a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int32x2_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _QWORD *v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  int64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v66;
  _OWORD v68[10];
  uint64_t v69;
  _BYTE v70[176];
  _BYTE __dst[176];
  uint64_t v72[22];
  uint64_t v73[22];
  _OWORD v74[10];
  int v75;
  uint64_t v76;

  v76 = *MEMORY[0x24BDAC8D0];
  v62 = *(_QWORD *)(a3 + 16);
  if (!v62)
    return result;
  v75 = 0;
  v60 = a2;
  v61 = a3 + 32;
  memset(v74, 0, sizeof(v74));
  swift_bridgeObjectRetain();
  v5 = 0;
  while (1)
  {
    v15 = (uint64_t *)(v61 + 16 * v5);
    v16 = *v15;
    v17 = v15[1];
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v73[0] = *a4;
    *a4 = 0x8000000000000000;
    sub_213C4BBF0((uint64_t)v74, v16, v17, isUniquelyReferenced_nonNull_native);
    *a4 = v73[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = sub_213C862B0();
    *(_OWORD *)(v19 + 32) = 0u;
    v20 = (char *)(v19 + 32);
    *(_QWORD *)(v19 + 16) = 10;
    *(_OWORD *)(v19 + 48) = 0u;
    *(_OWORD *)(v19 + 64) = 0u;
    *(_OWORD *)(v19 + 80) = 0u;
    *(_OWORD *)(v19 + 96) = 0u;
    v73[0] = 0;
    sub_213C86184();
    espresso_network_query_blob_shape();
    swift_release();
    if (v73[0] < 0)
      goto LABEL_50;
    if (*(_QWORD *)(v19 + 16) < v73[0])
      goto LABEL_51;
    if (v73[0])
    {
      v21 = (uint64_t *)(v19 + 32);
      v22 = v73[0];
      v23 = 1;
      while (1)
      {
        v24 = *v21++;
        v25 = v23 * v24;
        if ((unsigned __int128)(v23 * (__int128)v24) >> 64 != (v23 * v24) >> 63)
          break;
        v23 = v25;
        if (!--v22)
          goto LABEL_13;
      }
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
    }
    v25 = 1;
LABEL_13:
    v66 = v73[0];
    v63 = v5;
    v64 = v64 & 0xFFFFFFFF00000000 | v60;
    swift_bridgeObjectRetain();
    v26.i32[0] = 0;
    v27 = sub_213C58E48(v25, v26);
    v28 = swift_isUniquelyReferenced_nonNull_native();
    v73[0] = *a5;
    *a5 = 0x8000000000000000;
    sub_213C4BAC4(v27, v16, v17, v28);
    *a5 = v73[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v29 = swift_isUniquelyReferenced_nonNull_native();
    v73[0] = *a5;
    v30 = v73[0];
    *a5 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    v32 = sub_213C4B3DC(v16, v17);
    v33 = *(_QWORD *)(v30 + 16);
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
      goto LABEL_52;
    v36 = v31;
    if (*(_QWORD *)(v30 + 24) >= v35)
    {
      if ((v29 & 1) != 0)
      {
        if ((v31 & 1) == 0)
          goto LABEL_53;
      }
      else
      {
        sub_213C60E64();
        if ((v36 & 1) == 0)
          goto LABEL_53;
      }
    }
    else
    {
      sub_213C605A0(v35, v29);
      v37 = sub_213C4B3DC(v16, v17);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_56;
      v32 = v37;
      if ((v36 & 1) == 0)
        goto LABEL_53;
    }
    v39 = v73[0];
    v40 = *(_QWORD *)(*(_QWORD *)(v73[0] + 56) + 8 * v32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v40 = sub_213C5F284(v40);
    v41 = *(_QWORD *)(v40 + 16);
    if (v41 >> 61)
      goto LABEL_54;
    sub_213C5A9DC(v40 + 32, v40 + 32 + 4 * v41, a4, v16, v17);
    v72[0] = v40;
    sub_213C61714(v72, 1, v73, v32, v16, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a5 = v39;
    swift_bridgeObjectRelease();
    sub_213C86784();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    v42 = swift_dynamicCastClass();
    if (!v42)
    {
      swift_bridgeObjectRelease();
      v42 = MEMORY[0x24BEE4AF8];
    }
    v43 = *(_QWORD *)(v42 + 16);
    swift_release();
    if (v43 == v66)
    {
      if (!swift_dynamicCastClass())
        swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v66)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E270);
        v55 = 8 * v66;
        v56 = (char *)swift_allocObject();
        v57 = _swift_stdlib_malloc_size(v56);
        v58 = v57 - 32;
        if (v57 < 32)
          v58 = v57 - 25;
        *((_QWORD *)v56 + 2) = v66;
        *((_QWORD *)v56 + 3) = 2 * (v58 >> 3);
        v59 = v56 + 32;
        if (v20 < &v56[v55 + 32] && v59 < &v20[v55])
          goto LABEL_57;
        memcpy(v59, v20, 8 * v66);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v44 = swift_isUniquelyReferenced_nonNull_native();
    v45 = (_QWORD *)*a4;
    *a4 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    v47 = sub_213C4B3DC(v16, v17);
    v48 = v45[2];
    v49 = (v46 & 1) == 0;
    v50 = v48 + v49;
    if (__OFADD__(v48, v49))
      goto LABEL_55;
    v51 = v46;
    if (v45[3] < v50)
      break;
    if ((v44 & 1) != 0)
    {
      v54 = v63;
      if ((v46 & 1) == 0)
        goto LABEL_46;
    }
    else
    {
      sub_213C60C44();
      v54 = v63;
      if ((v51 & 1) == 0)
      {
LABEL_46:
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
LABEL_35:
    memmove(__dst, (const void *)(v45[7] + 168 * v47), 0xA8uLL);
    sub_213C62114((uint64_t)__dst);
    sub_213C6211C((uint64_t)__dst, (uint64_t)v70);
    espresso_buffer_pack_tensor_shape();
    sub_213C6211C((uint64_t)v70, (uint64_t)v72);
    sub_213C6211C((uint64_t)v72, (uint64_t)v73);
    if (sub_213C62164((uint64_t)v73) == 1)
    {
      swift_arrayDestroy();
      sub_213C613C0(v47, (uint64_t)v45);
    }
    else
    {
      sub_213C6211C((uint64_t)v72, (uint64_t)v68);
      v6 = v45[7] + 168 * v47;
      v7 = v68[7];
      v8 = v68[8];
      v9 = v68[9];
      *(_QWORD *)(v6 + 160) = v69;
      *(_OWORD *)(v6 + 128) = v8;
      *(_OWORD *)(v6 + 144) = v9;
      *(_OWORD *)(v6 + 112) = v7;
      v10 = v68[3];
      v11 = v68[4];
      v12 = v68[6];
      *(_OWORD *)(v6 + 80) = v68[5];
      *(_OWORD *)(v6 + 96) = v12;
      *(_OWORD *)(v6 + 48) = v10;
      *(_OWORD *)(v6 + 64) = v11;
      v14 = v68[1];
      v13 = v68[2];
      *(_OWORD *)v6 = v68[0];
      *(_OWORD *)(v6 + 16) = v14;
      *(_OWORD *)(v6 + 32) = v13;
    }
    swift_bridgeObjectRelease();
    v5 = v54 + 1;
    *a4 = (uint64_t)v45;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v5 == v62)
      return swift_bridgeObjectRelease();
  }
  sub_213C60240(v50, v44);
  v52 = sub_213C4B3DC(v16, v17);
  if ((v51 & 1) == (v53 & 1))
  {
    v47 = v52;
    v54 = v63;
    if ((v51 & 1) == 0)
      goto LABEL_46;
    goto LABEL_35;
  }
LABEL_56:
  sub_213C8679C();
  __break(1u);
LABEL_57:
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C62114(uint64_t result)
{
  *(_BYTE *)(result + 168) = 0;
  return result;
}

uint64_t sub_213C6211C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213C62164(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 168))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t type metadata accessor for EspressoMILTrainer()
{
  return objc_opt_self();
}

uint64_t method lookup function for EspressoMILTrainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EspressoMILTrainer.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 704))();
}

uint64_t dispatch thunk of EspressoMILTrainer.unload(functions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of EspressoMILTrainer.load(path:functions:inputs:outputs:weights:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t dispatch thunk of EspressoMILTrainer.loadInferenceModel(path:inputs:outputs:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t dispatch thunk of EspressoMILTrainer.finalize(batchSize:learningRate:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)v2 + 752))(a1, a2 | ((HIDWORD(a2) & 1) << 32));
}

uint64_t dispatch thunk of EspressoMILTrainer.extractWeights(function:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of EspressoMILTrainer.extractOutputs(function:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of EspressoMILTrainer.train(_:featureSizes:numSamples:epochs:shuffleMethod:fullBatch:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t dispatch thunk of EspressoMILTrainer.eval(_:featureSizes:numSamples:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 808))();
}

uint64_t sub_213C62288()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v0 + 80) != 255)
    sub_213C3B18C();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_213C622DC(uint64_t result, unsigned int a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  int64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[10];
  uint64_t v48;
  _BYTE v49[176];
  _BYTE __dst[176];
  _BYTE v51[176];
  _QWORD v52[24];

  v52[22] = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return result;
  v7 = (uint64_t *)(a3 + 40);
  v42 = a2;
  swift_bridgeObjectRetain();
  for (i = v5 - 1; ; i = v45 - 1)
  {
    v9 = *(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain();
    v11 = sub_213C862B0();
    *(_OWORD *)(v11 + 32) = 0u;
    v12 = (char *)(v11 + 32);
    *(_QWORD *)(v11 + 16) = 10;
    *(_OWORD *)(v11 + 48) = 0u;
    *(_OWORD *)(v11 + 64) = 0u;
    *(_OWORD *)(v11 + 80) = 0u;
    *(_OWORD *)(v11 + 96) = 0u;
    v52[0] = 0;
    sub_213C86184();
    v13 = v4 & 0xFFFFFFFF00000000 | v42;
    espresso_network_query_blob_shape();
    swift_release();
    v14 = v52[0];
    if ((v52[0] & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
    }
    if (*(_QWORD *)(v11 + 16) < v52[0])
      goto LABEL_33;
    v44 = v13;
    sub_213C86784();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    v15 = swift_dynamicCastClass();
    if (!v15)
    {
      swift_bridgeObjectRelease();
      v15 = MEMORY[0x24BEE4AF8];
    }
    v16 = *(_QWORD *)(v15 + 16);
    swift_release();
    v43 = v7;
    v45 = i;
    if (v16 == v14)
    {
      if (!swift_dynamicCastClass())
        swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v14)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E270);
        v37 = 8 * v14;
        v38 = (char *)swift_allocObject();
        v39 = _swift_stdlib_malloc_size(v38);
        v40 = v39 - 32;
        if (v39 < 32)
          v40 = v39 - 25;
        *((_QWORD *)v38 + 2) = v14;
        *((_QWORD *)v38 + 3) = 2 * (v40 >> 3);
        v41 = v38 + 32;
        if (v12 < &v38[v37 + 32] && v41 < &v12[v37])
          goto LABEL_36;
        memcpy(v41, v12, 8 * v14);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *a4;
    v46 = *a4;
    v19 = a4;
    *a4 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    v21 = sub_213C4B3DC(v9, v10);
    v22 = *(_QWORD *)(v18 + 16);
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
      goto LABEL_34;
    v25 = v20;
    if (*(_QWORD *)(v18 + 24) < v24)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v20 & 1) == 0)
        goto LABEL_29;
    }
    else
    {
      sub_213C60C44();
      if ((v25 & 1) == 0)
      {
LABEL_29:
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
LABEL_17:
    memmove(__dst, (const void *)(*(_QWORD *)(v46 + 56) + 168 * v21), 0xA8uLL);
    sub_213C62114((uint64_t)__dst);
    sub_213C6211C((uint64_t)__dst, (uint64_t)v49);
    espresso_buffer_pack_tensor_shape();
    sub_213C6211C((uint64_t)v49, (uint64_t)v51);
    sub_213C6211C((uint64_t)v51, (uint64_t)v52);
    if (sub_213C62164((uint64_t)v52) == 1)
    {
      swift_arrayDestroy();
      sub_213C613C0(v21, v46);
    }
    else
    {
      sub_213C6211C((uint64_t)v51, (uint64_t)v47);
      v28 = *(_QWORD *)(v46 + 56) + 168 * v21;
      v29 = v47[7];
      v30 = v47[8];
      v31 = v47[9];
      *(_QWORD *)(v28 + 160) = v48;
      *(_OWORD *)(v28 + 128) = v30;
      *(_OWORD *)(v28 + 144) = v31;
      *(_OWORD *)(v28 + 112) = v29;
      v32 = v47[3];
      v33 = v47[4];
      v34 = v47[6];
      *(_OWORD *)(v28 + 80) = v47[5];
      *(_OWORD *)(v28 + 96) = v34;
      *(_OWORD *)(v28 + 48) = v32;
      *(_OWORD *)(v28 + 64) = v33;
      v36 = v47[1];
      v35 = v47[2];
      *(_OWORD *)v28 = v47[0];
      *(_OWORD *)(v28 + 16) = v36;
      *(_OWORD *)(v28 + 32) = v35;
    }
    swift_bridgeObjectRelease();
    v4 = v44;
    a4 = v19;
    *v19 = v46;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (!v45)
      return swift_bridgeObjectRelease();
    v7 = v43 + 2;
  }
  sub_213C60240(v24, isUniquelyReferenced_nonNull_native);
  v26 = sub_213C4B3DC(v9, v10);
  if ((v25 & 1) == (v27 & 1))
  {
    v21 = v26;
    if ((v25 & 1) == 0)
      goto LABEL_29;
    goto LABEL_17;
  }
  sub_213C8679C();
  __break(1u);
LABEL_36:
  result = sub_213C86610();
  __break(1u);
  return result;
}

BOOL static PFLStats.StdMethod.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PFLStats.StdMethod.hash(into:)()
{
  return sub_213C867FC();
}

uint64_t PFLStats.StdMethod.hashValue.getter()
{
  sub_213C867F0();
  sub_213C867FC();
  return sub_213C86808();
}

uint64_t static PFLStats.meanAndStd(_:_:)(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_213C62B38(a1);
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

uint64_t static PFLStats.meanAndStd(_:)(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_213C62B38(a1);
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

unint64_t static PFLStats.l2Norm(_:)(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (!(result >> 31))
    return cblas_snrm2_NEWLAPACK();
  __break(1u);
  return result;
}

float static PFLStats.mean(_:)(uint64_t a1)
{
  return sub_213C628D0(a1, MEMORY[0x24BDB3248]);
}

float static PFLStats.sum(_:)(uint64_t a1)
{
  return sub_213C628D0(a1, MEMORY[0x24BDB32D0]);
}

float sub_213C628D0(uint64_t a1, void (*a2)(uint64_t, uint64_t, float *, uint64_t))
{
  uint64_t v2;
  float v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 16);
  v4 = NAN;
  a2(a1 + 32, 1, &v4, v2);
  return v4;
}

uint64_t static PFLStats.cumsum(vector:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  float v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v3 = sub_213C862B0();
  *(_QWORD *)(v3 + 16) = v1;
  bzero((void *)(v3 + 32), 4 * v1);
  v4 = 0;
  v5 = 0.0;
  do
  {
    v5 = v5 + *(float *)(a1 + 32 + 4 * v4);
    *(float *)(v3 + 4 * v4++ + 32) = v5;
  }
  while (v1 != v4);
  return v3;
}

uint64_t static PFLStats.greater<A>(vector:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213C629F8(a1, a2, a3, a4, MEMORY[0x24BEE07D8]);
}

uint64_t static PFLStats.greaterEqual<A>(vector:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213C629F8(a1, a2, a3, a4, MEMORY[0x24BEE07E8]);
}

uint64_t static PFLStats.less<A>(vector:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213C629F8(a1, a2, a3, a4, (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE07E0]);
}

uint64_t static PFLStats.lessEqual<A>(vector:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213C629F8(a1, a2, a3, a4, (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE07F0]);
}

uint64_t sub_213C629F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  size_t v13;
  uint64_t result;
  uint64_t v15;
  unint64_t i;
  char v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t, uint64_t);

  v19 = a5;
  v8 = *(_QWORD *)(a3 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x2199BFC8C](v9, v12);
  result = sub_213C59020(0, v13);
  if ((v13 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
  }
  else
  {
    v15 = result;
    if (v13)
    {
      for (i = 0; v13 != i; ++i)
      {
        sub_213C862EC();
        v17 = v19(v11, a2, a3, a4);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a3);
        if ((v17 & 1) != 0)
        {
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_213C5F2C0(v15);
            v15 = result;
          }
          if (i >= *(_QWORD *)(v15 + 16))
          {
            __break(1u);
            goto LABEL_12;
          }
          *(_BYTE *)(v15 + i + 32) = 1;
        }
      }
    }
    return v15;
  }
  return result;
}

unint64_t sub_213C62B38(uint64_t a1)
{
  vDSP_Length v1;
  unsigned __int8 v2;
  unsigned int v3;
  _QWORD __Mean[2];

  __Mean[1] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 16);
  if (v1 <= 1)
  {
    if (v1)
    {
      v2 = 0;
      v3 = *(_DWORD *)(a1 + 32);
    }
    else
    {
      v3 = 0;
      v2 = 1;
    }
  }
  else
  {
    __Mean[0] = 0;
    vDSP_normalize((const float *)(a1 + 32), 1, 0, 1, (float *)__Mean + 1, (float *)__Mean, v1);
    v2 = 0;
    v3 = HIDWORD(__Mean[0]);
  }
  return v3 | ((unint64_t)v2 << 32);
}

unint64_t sub_213C62C20()
{
  unint64_t result;

  result = qword_254D2F408;
  if (!qword_254D2F408)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for PFLStats.StdMethod, &type metadata for PFLStats.StdMethod);
    atomic_store(result, (unint64_t *)&qword_254D2F408);
  }
  return result;
}

ValueMetadata *type metadata accessor for PFLStats()
{
  return &type metadata for PFLStats;
}

uint64_t storeEnumTagSinglePayload for PFLStats.StdMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213C62CC0 + 4 * byte_213C89A15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213C62CF4 + 4 * byte_213C89A10[v4]))();
}

uint64_t sub_213C62CF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C62CFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213C62D04);
  return result;
}

uint64_t sub_213C62D10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213C62D18);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213C62D1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C62D24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PFLStats.StdMethod()
{
  return &type metadata for PFLStats.StdMethod;
}

PrivateFederatedLearning::PFLTaskDiscoveryError_optional __swiftcall PFLTaskDiscoveryError.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;
  char v3;

  v2 = 0;
  v3 = 34;
  switch(rawValue)
  {
    case 9051:
      *v1 = 51;
      return (PrivateFederatedLearning::PFLTaskDiscoveryError_optional)rawValue;
    case 9500:
      goto LABEL_37;
    case 9501:
      v2 = 1;
      goto LABEL_37;
    case 9502:
      v2 = 2;
      goto LABEL_37;
    case 9503:
      v2 = 3;
      goto LABEL_37;
    case 9504:
      v2 = 4;
      goto LABEL_37;
    case 9505:
      v2 = 5;
      goto LABEL_37;
    case 9506:
      v2 = 6;
      goto LABEL_37;
    case 9507:
      v2 = 7;
      goto LABEL_37;
    case 9508:
      v2 = 8;
      goto LABEL_37;
    case 9509:
      v2 = 9;
      goto LABEL_37;
    case 9510:
      v2 = 10;
      goto LABEL_37;
    case 9511:
      v2 = 11;
      goto LABEL_37;
    case 9512:
      v2 = 12;
      goto LABEL_37;
    case 9513:
      v2 = 13;
      goto LABEL_37;
    case 9514:
      v2 = 14;
      goto LABEL_37;
    case 9515:
      v2 = 15;
      goto LABEL_37;
    case 9516:
      v2 = 16;
      goto LABEL_37;
    case 9517:
      v2 = 17;
      goto LABEL_37;
    case 9518:
      v2 = 18;
      goto LABEL_37;
    case 9519:
      v2 = 19;
      goto LABEL_37;
    case 9520:
      v2 = 20;
      goto LABEL_37;
    case 9521:
      v2 = 21;
      goto LABEL_37;
    case 9522:
      v2 = 22;
      goto LABEL_37;
    case 9523:
      v2 = 23;
      goto LABEL_37;
    case 9524:
      v2 = 24;
      goto LABEL_37;
    case 9525:
      v2 = 25;
      goto LABEL_37;
    case 9526:
      v2 = 26;
      goto LABEL_37;
    case 9527:
      v2 = 27;
      goto LABEL_37;
    case 9528:
      v2 = 28;
      goto LABEL_37;
    case 9529:
      v2 = 29;
      goto LABEL_37;
    case 9530:
      v2 = 30;
      goto LABEL_37;
    case 9531:
      v2 = 31;
      goto LABEL_37;
    case 9532:
      v2 = 32;
      goto LABEL_37;
    case 9533:
      v2 = 33;
LABEL_37:
      v3 = v2;
      goto LABEL_38;
    case 9534:
LABEL_38:
      *v1 = v3;
      break;
    case 9535:
      *v1 = 35;
      break;
    case 9536:
      *v1 = 36;
      break;
    case 9537:
      *v1 = 37;
      break;
    case 9538:
      *v1 = 38;
      break;
    case 9539:
      *v1 = 39;
      break;
    case 9540:
      *v1 = 40;
      break;
    case 9541:
      *v1 = 41;
      break;
    case 9542:
      *v1 = 42;
      break;
    case 9543:
      *v1 = 43;
      break;
    case 9544:
      *v1 = 44;
      break;
    case 9545:
      *v1 = 45;
      break;
    case 9546:
      *v1 = 46;
      break;
    case 9547:
      *v1 = 47;
      break;
    case 9548:
      *v1 = 48;
      break;
    case 9549:
      *v1 = 49;
      break;
    case 9550:
      *v1 = 50;
      break;
    default:
      *v1 = 52;
      break;
  }
  return (PrivateFederatedLearning::PFLTaskDiscoveryError_optional)rawValue;
}

uint64_t PFLTaskDiscoveryError.rawValue.getter()
{
  char *v0;

  return qword_213C89EA0[*v0];
}

BOOL sub_213C62F6C(char *a1, char *a2)
{
  return qword_213C89EA0[*a1] == qword_213C89EA0[*a2];
}

unint64_t sub_213C62F94()
{
  unint64_t result;

  result = qword_254D2F410;
  if (!qword_254D2F410)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for PFLTaskDiscoveryError, &type metadata for PFLTaskDiscoveryError);
    atomic_store(result, (unint64_t *)&qword_254D2F410);
  }
  return result;
}

uint64_t sub_213C62FD8()
{
  sub_213C867F0();
  sub_213C867FC();
  return sub_213C86808();
}

uint64_t sub_213C63024()
{
  return sub_213C867FC();
}

uint64_t sub_213C63058()
{
  sub_213C867F0();
  sub_213C867FC();
  return sub_213C86808();
}

PrivateFederatedLearning::PFLTaskDiscoveryError_optional sub_213C630A0(Swift::Int *a1)
{
  return PFLTaskDiscoveryError.init(rawValue:)(*a1);
}

void sub_213C630A8(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_213C89EA0[*v1];
}

uint64_t sub_213C630C0()
{
  sub_213C63260();
  sub_213C632A4();
  return sub_213C867E4();
}

uint64_t getEnumTagSinglePayload for PFLTaskDiscoveryError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xCD)
    goto LABEL_17;
  if (a2 + 51 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 51) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 51;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 51;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 51;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x34;
  v8 = v6 - 52;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PFLTaskDiscoveryError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 51 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 51) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xCD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xCC)
    return ((uint64_t (*)(void))((char *)&loc_213C631E0 + 4 * byte_213C89CB9[v4]))();
  *a1 = a2 + 51;
  return ((uint64_t (*)(void))((char *)sub_213C63214 + 4 * byte_213C89CB4[v4]))();
}

uint64_t sub_213C63214(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C6321C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213C63224);
  return result;
}

uint64_t sub_213C63230(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213C63238);
  *(_BYTE *)result = a2 + 51;
  return result;
}

uint64_t sub_213C6323C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C63244(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PFLTaskDiscoveryError()
{
  return &type metadata for PFLTaskDiscoveryError;
}

unint64_t sub_213C63260()
{
  unint64_t result;

  result = qword_254D2F418;
  if (!qword_254D2F418)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for PFLTaskDiscoveryError, &type metadata for PFLTaskDiscoveryError);
    atomic_store(result, (unint64_t *)&qword_254D2F418);
  }
  return result;
}

unint64_t sub_213C632A4()
{
  unint64_t result;

  result = qword_254D2F420;
  if (!qword_254D2F420)
  {
    result = MEMORY[0x2199C0970](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_254D2F420);
  }
  return result;
}

char *sub_213C632E8@<X0>(const char *a1@<X0>, char **a2@<X8>)
{
  char *result;

  result = strdup(a1);
  *a2 = result;
  return result;
}

uint64_t EspressoEIRTrainer.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;

  swift_allocObject();
  v2 = sub_213C677A8(a1);
  swift_release();
  return v2;
}

uint64_t EspressoEIRTrainer.init(_:)(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_213C677A8(a1);
  swift_release();
  return v1;
}

uint64_t EspressoEIRTrainer.deinit()
{
  uint64_t v0;

  espresso_plan_destroy();
  espresso_context_destroy();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EspressoEIRTrainer.__deallocating_deinit()
{
  EspressoEIRTrainer.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_213C63420(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  double Current;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = v6;
  v11 = *a3;
  *(_QWORD *)(v7 + 56) = a1;
  *(_QWORD *)(v7 + 64) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + 72) = v11;
  v12 = *(_QWORD *)(v7 + 16);
  swift_retain();
  Current = CFAbsoluteTimeGetCurrent();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29 = *(_QWORD *)(v12 + 16);
  *(_QWORD *)(v12 + 16) = 0x8000000000000000;
  sub_213C4B824(0x6F4C2E6C65646F4DLL, 0xEA00000000006461, isUniquelyReferenced_nonNull_native, Current);
  *(_QWORD *)(v12 + 16) = v29;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  sub_213C86184();
  swift_beginAccess();
  v15 = espresso_plan_add_network();
  swift_endAccess();
  swift_release();
  if ((_DWORD)v15)
  {
    v16 = 8;
  }
  else
  {
    v17 = *(_QWORD *)(a4 + 16);
    v27 = a6;
    v28 = a5;
    if (v17)
    {
      swift_bridgeObjectRetain();
      v18 = a4 + 40;
      while (1)
      {
        v19 = *(unsigned int *)(v7 + 32);
        sub_213C86184();
        v15 = v15 & 0xFFFFFFFF00000000 | v19;
        v20 = espresso_network_declare_input();
        swift_release();
        if (v20)
          break;
        v18 += 16;
        if (!--v17)
        {
          swift_bridgeObjectRelease();
          a6 = v27;
          a5 = v28;
          goto LABEL_8;
        }
      }
      v16 = 2;
    }
    else
    {
LABEL_8:
      v21 = *(_QWORD *)(a5 + 16);
      if (!v21)
      {
LABEL_13:
        *(_QWORD *)(v7 + 480) = a4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v7 + 488) = a5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v7 + 496) = a6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_retain();
        sub_213C4B0F8(0x6F4C2E6C65646F4DLL, 0xEA00000000006461);
        return swift_release();
      }
      swift_bridgeObjectRetain();
      v22 = a5 + 40;
      while (1)
      {
        v23 = *(unsigned int *)(v7 + 32);
        sub_213C86184();
        v15 = v15 & 0xFFFFFFFF00000000 | v23;
        v24 = espresso_network_declare_output();
        swift_release();
        if (v24)
          break;
        v22 += 16;
        if (!--v21)
        {
          a5 = v28;
          swift_bridgeObjectRelease();
          a6 = v27;
          goto LABEL_13;
        }
      }
      v16 = 3;
    }
    swift_bridgeObjectRelease();
  }
  sub_213C618F4();
  swift_allocError();
  *v26 = v16;
  return swift_willThrow();
}

uint64_t sub_213C63730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v7 = 1;
  result = sub_213C63420(a1, a2, &v7, a3, a4, MEMORY[0x24BEE4AF8]);
  if (!v5)
    *(_BYTE *)(v4 + 136) = 0;
  return result;
}

uint64_t sub_213C63770(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE *v8;
  _DWORD *v9;
  _OWORD v10[3];
  _OWORD v11[3];

  *(_QWORD *)(v2 + 80) = a1;
  if ((*(_BYTE *)(v2 + 72) & 2) != 0)
  {
    if ((a2 & 0x100000000) != 0)
    {
      sub_213C618F4();
      swift_allocError();
      *v8 = 21;
      return swift_willThrow();
    }
    *(_DWORD *)(v2 + 88) = a2;
  }
  sub_213C65000((uint64_t *)v10);
  v11[0] = v10[0];
  v11[1] = v10[1];
  v11[2] = v10[2];
  sub_213C66E4C((char **)v11);
  if (v3)
    goto LABEL_7;
  swift_beginAccess();
  swift_beginAccess();
  v4 = swift_bridgeObjectRetain();
  sub_213C65DA8(v4, (uint64_t *)(v2 + 96), (uint64_t *)(v2 + 104));
  swift_endAccess();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_beginAccess();
  v5 = swift_bridgeObjectRetain();
  sub_213C65DA8(v5, (uint64_t *)(v2 + 112), (uint64_t *)(v2 + 120));
  swift_endAccess();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v6 = swift_bridgeObjectRetain();
  sub_213C664C4(v6, (uint64_t *)(v2 + 128));
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_213C65410();
  if (*(_BYTE *)(v2 + 136) != 1)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_213C64F38();
    result = swift_beginAccess();
    v9 = *(_DWORD **)(v2 + 312);
    if (v9)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *v9 = *(_DWORD *)(v2 + 88);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_213C639C8(int32x2_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v3 = *(_QWORD *)(v1 + 496);
  v31 = *(_QWORD *)(v3 + 16);
  if (v31)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v4 = 0;
    v5 = 0;
    v28 = v3;
    do
    {
      if (v4 >= *(_QWORD *)(v3 + 16))
      {
        __break(1u);
        __break(1u);
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        __break(1u);
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_26:
        __break(1u);
      }
      v6 = *(unsigned int *)(v1 + 32);
      swift_bridgeObjectRetain();
      v7 = sub_213C862B0();
      *(_OWORD *)(v7 + 32) = 0u;
      *(_QWORD *)(v7 + 16) = 10;
      *(_OWORD *)(v7 + 48) = 0u;
      *(_OWORD *)(v7 + 64) = 0u;
      *(_OWORD *)(v7 + 80) = 0u;
      *(_OWORD *)(v7 + 96) = 0u;
      sub_213C86184();
      v2 = v2 & 0xFFFFFFFF00000000 | v6;
      espresso_network_query_blob_shape();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (__OFADD__(v5++, 1))
        goto LABEL_21;
      ++v4;
      v1 = v32;
      v3 = v28;
    }
    while (v4 != v31);
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  a1.i32[0] = 1.0;
  v9 = sub_213C58E48(v5, a1);
  v10 = *(_QWORD *)(v1 + 496);
  v27 = *(_QWORD *)(v10 + 16);
  if (v27)
  {
    v26 = v10 + 32;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v25 = (uint64_t *)(v1 + 128);
    swift_beginAccess();
    v11 = 0;
    v12 = 0;
    v24 = v10;
    do
    {
      if (v11 >= *(_QWORD *)(v10 + 16))
        goto LABEL_22;
      v29 = v12;
      v13 = v9;
      v14 = (uint64_t *)(v26 + 16 * v11);
      v15 = *v14;
      v16 = v14[1];
      v17 = *(unsigned int *)(v1 + 32);
      swift_bridgeObjectRetain();
      v18 = sub_213C862B0();
      *(_QWORD *)(v18 + 16) = 10;
      *(_OWORD *)(v18 + 48) = 0u;
      *(_OWORD *)(v18 + 64) = 0u;
      *(_OWORD *)(v18 + 80) = 0u;
      *(_OWORD *)(v18 + 96) = 0u;
      *(_OWORD *)(v18 + 32) = 0u;
      v30 = v15;
      sub_213C86184();
      espresso_network_query_blob_shape();
      swift_release();
      swift_bridgeObjectRelease();
      v9 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_213C5F284(v13);
      v19 = *v25;
      if (!*(_QWORD *)(*v25 + 16))
        goto LABEL_23;
      v31 = v31 & 0xFFFFFFFF00000000 | v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = sub_213C4B3DC(v30, v16);
      if ((v21 & 1) == 0)
        goto LABEL_25;
      v22 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 168 * v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v22)
        goto LABEL_26;
      cblas_scopy_NEWLAPACK();
      swift_bridgeObjectRelease();
      v12 = v29 + 1;
      v1 = v32;
      if (__OFADD__(v29, 1))
        goto LABEL_24;
      ++v11;
      v10 = v24;
    }
    while (v11 != v27);
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_213C63ED0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;

  v1 = *(_QWORD *)(v0 + 488);
  v31 = *(_QWORD *)(v1 + 16);
  if (v31)
  {
    v30 = v1 + 32;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v29 = (uint64_t *)(v0 + 112);
    swift_beginAccess();
    v2 = 0;
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    v27 = v1;
    v28 = v0;
    while (1)
    {
      if (v2 >= *(_QWORD *)(v1 + 16))
      {
        __break(1u);
        __break(1u);
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_29:
        __break(1u);
      }
      v32 = v2;
      v4 = (uint64_t *)(v30 + 16 * v2);
      v6 = *v4;
      v5 = v4[1];
      v7 = *(unsigned int *)(v0 + 32);
      swift_bridgeObjectRetain();
      v8 = sub_213C862B0();
      *(_QWORD *)(v8 + 16) = 10;
      *(_OWORD *)(v8 + 48) = 0u;
      *(_OWORD *)(v8 + 64) = 0u;
      *(_OWORD *)(v8 + 80) = 0u;
      *(_OWORD *)(v8 + 96) = 0u;
      *(_OWORD *)(v8 + 32) = 0u;
      sub_213C86184();
      v9 = v33 & 0xFFFFFFFF00000000 | v7;
      espresso_network_query_blob_shape();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v10 = sub_213C862B0();
      *(_QWORD *)(v10 + 16) = 1;
      bzero((void *)(v10 + 32), 4uLL);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_213C4BAC4(v10, v6, v5, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = *v29;
      if (!*(_QWORD *)(*v29 + 16))
        goto LABEL_26;
      v33 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_213C4B3DC(v6, v5);
      if ((v14 & 1) == 0)
        goto LABEL_28;
      v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 168 * v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v15)
        goto LABEL_29;
      swift_bridgeObjectRetain();
      v16 = swift_isUniquelyReferenced_nonNull_native();
      swift_bridgeObjectRetain();
      v18 = sub_213C4B3DC(v6, v5);
      v19 = v3[2];
      v20 = (v17 & 1) == 0;
      v21 = v19 + v20;
      if (__OFADD__(v19, v20))
        goto LABEL_27;
      v22 = v17;
      if (v3[3] >= v21)
      {
        if ((v16 & 1) != 0)
        {
          if ((v17 & 1) == 0)
            goto LABEL_21;
        }
        else
        {
          sub_213C60E64();
          if ((v22 & 1) == 0)
          {
LABEL_21:
            __break(1u);
LABEL_22:
            swift_bridgeObjectRelease();
            return (uint64_t)v3;
          }
        }
      }
      else
      {
        sub_213C605A0(v21, v16);
        v23 = sub_213C4B3DC(v6, v5);
        if ((v22 & 1) != (v24 & 1))
        {
          result = sub_213C8679C();
          __break(1u);
          return result;
        }
        v18 = v23;
        if ((v22 & 1) == 0)
          goto LABEL_21;
      }
      v25 = *(_QWORD *)(v3[7] + 8 * v18);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v25 = sub_213C4202C(0, *(_QWORD *)(v25 + 16), 0, v25);
      swift_bridgeObjectRetain();
      cblas_scopy_NEWLAPACK();
      if (v25)
      {
        *(_QWORD *)(v3[7] + 8 * v18) = v25;
      }
      else
      {
        swift_arrayDestroy();
        sub_213C61018(v18, (uint64_t)v3);
      }
      v1 = v27;
      v0 = v28;
      v2 = v32 + 1;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v32 + 1 == v31)
        goto LABEL_22;
    }
  }
  return MEMORY[0x24BEE4B00];
}

uint64_t sub_213C643D0(uint64_t a1, uint64_t a2, int64_t a3, int a4, unsigned __int8 *a5)
{
  return sub_213C678B0(a1, a2, a3, a4, a5);
}

uint64_t sub_213C643E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  unint64_t i;
  unint64_t v45;
  int64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  _BYTE *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;

  v5 = v4;
  sub_213C618F4();
  v8 = (void *)swift_allocError();
  v9 = (uint64_t)v8;
  *v10 = 19;
  if ((*(_BYTE *)(v3 + 72) & 1) == 0)
  {
LABEL_2:
    swift_willThrow();
    return a3;
  }

  if ((*(_BYTE *)(v3 + 136) & 1) != 0)
  {
    swift_beginAccess();
    v12 = *(_DWORD **)(v3 + 144);
    if (!v12)
    {
LABEL_121:
      __break(1u);
LABEL_122:
      result = sub_213C865C8();
      __break(1u);
      goto LABEL_123;
    }
    *v12 = 0;
  }
  v58 = *(_QWORD *)(v3 + 80);
  if (!v58)
    goto LABEL_108;
  if (a3 == 0x8000000000000000 && v58 == -1)
    goto LABEL_111;
  v13 = a3 / v58;
  if (a3 / v58 < 0)
  {
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    swift_bridgeObjectRelease();
LABEL_113:
    __break(1u);
LABEL_114:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_115:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    v61 = sub_213C42354(0, v61[2] + 1, 1, v61);
LABEL_102:
    v55 = v61[2];
    v54 = v61[3];
    if (v55 >= v54 >> 1)
      v61 = sub_213C42354((_QWORD *)(v54 > 1), v55 + 1, 1, v61);
    v61[2] = v55 + 1;
    v61[v55 + 4] = v9;
    sub_213C6733C(a3);
    if (!v5)
      return (uint64_t)v61;
LABEL_61:
    swift_bridgeObjectRelease();
    return a3;
  }
  v56 = a3;
  v57 = v4;
  v68 = v3;
  v59 = a3 / v58;
  if (!v13)
  {
    a3 = MEMORY[0x24BEE4AF8];
    goto LABEL_59;
  }
  v5 = 0;
  v62 = a1 + 64;
  a3 = MEMORY[0x24BEE4AF8];
  v66 = v3 + 96;
  while (2)
  {
    if (v5 == v13)
    {
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    v60 = v5 + 1;
    v61 = (_QWORD *)a3;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v9 < 64)
      v14 = ~(-1 << v9);
    else
      v14 = -1;
    v15 = v14 & *(_QWORD *)(a1 + 64);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    a3 = 0;
    v63 = (unint64_t)(v9 + 63) >> 6;
    if (v15)
    {
LABEL_18:
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (a3 << 6);
      goto LABEL_37;
    }
    while (1)
    {
      v18 = a3 + 1;
      if (__OFADD__(a3, 1))
      {
        __break(1u);
LABEL_101:
        v9 = sub_213C63ED0();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          goto LABEL_118;
        goto LABEL_102;
      }
      if (v18 >= v63)
        goto LABEL_51;
      v19 = *(_QWORD *)(v62 + 8 * v18);
      ++a3;
      if (!v19)
      {
        a3 = v18 + 1;
        if (v18 + 1 >= v63)
          goto LABEL_51;
        v19 = *(_QWORD *)(v62 + 8 * a3);
        if (!v19)
        {
          a3 = v18 + 2;
          if (v18 + 2 >= v63)
            goto LABEL_51;
          v19 = *(_QWORD *)(v62 + 8 * a3);
          if (!v19)
          {
            a3 = v18 + 3;
            if (v18 + 3 >= v63)
              goto LABEL_51;
            v19 = *(_QWORD *)(v62 + 8 * a3);
            if (!v19)
            {
              a3 = v18 + 4;
              if (v18 + 4 >= v63)
                goto LABEL_51;
              v19 = *(_QWORD *)(v62 + 8 * a3);
              if (!v19)
                break;
            }
          }
        }
      }
LABEL_36:
      v15 = (v19 - 1) & v19;
      v17 = __clz(__rbit64(v19)) + (a3 << 6);
LABEL_37:
      v21 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v17);
      v9 = *v21;
      v22 = v21[1];
      v23 = *(_QWORD *)(a1 + 16);
      swift_bridgeObjectRetain();
      if (!v23)
        goto LABEL_113;
      swift_bridgeObjectRetain();
      sub_213C4B3DC(v9, v22);
      if ((v24 & 1) == 0)
        goto LABEL_112;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v25 = *(_QWORD *)v66;
      if (!*(_QWORD *)(*(_QWORD *)v66 + 16))
      {
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return a3;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = sub_213C4B3DC(v9, v22);
      if ((v27 & 1) == 0)
        goto LABEL_114;
      v28 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 168 * v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_94;
      swift_bridgeObjectRetain();
      v29 = v9;
      v9 = a2;
      v30 = sub_213C4B3DC(v29, v22);
      if ((v31 & 1) == 0)
        goto LABEL_115;
      v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v30);
      swift_bridgeObjectRelease();
      v32 = *(_QWORD *)(v68 + 80);
      v33 = v9 * v32;
      if ((unsigned __int128)(v9 * (__int128)v32) >> 64 != (v9 * v32) >> 63)
        goto LABEL_95;
      if (v33 < (uint64_t)0xFFFFFFFF80000000 || v33 >= 0x80000000)
        goto LABEL_122;
      if ((unsigned __int128)(v9 * (__int128)v5) >> 64 != (v9 * v5) >> 63)
        goto LABEL_96;
      if ((unsigned __int128)(v9 * v5 * (__int128)v32) >> 64 != (v9 * v5 * v32) >> 63)
        goto LABEL_97;
      if (!v28)
        goto LABEL_116;
      cblas_scopy_NEWLAPACK();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15)
        goto LABEL_18;
    }
    v20 = v18 + 5;
    if (v20 < v63)
    {
      v19 = *(_QWORD *)(v62 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          a3 = v20 + 1;
          if (__OFADD__(v20, 1))
            goto LABEL_107;
          if (a3 >= v63)
            goto LABEL_51;
          v19 = *(_QWORD *)(v62 + 8 * a3);
          ++v20;
          if (v19)
            goto LABEL_36;
        }
      }
      a3 = v20;
      goto LABEL_36;
    }
LABEL_51:
    swift_release();
    v3 = v68;
    if (espresso_plan_execute_sync())
      goto LABEL_99;
    v9 = sub_213C63ED0();
    a3 = (uint64_t)v61;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      a3 = (uint64_t)sub_213C42354(0, v61[2] + 1, 1, v61);
    v35 = *(_QWORD *)(a3 + 16);
    v34 = *(_QWORD *)(a3 + 24);
    if (v35 >= v34 >> 1)
      a3 = (uint64_t)sub_213C42354((_QWORD *)(v34 > 1), v35 + 1, 1, (_QWORD *)a3);
    *(_QWORD *)(a3 + 16) = v35 + 1;
    *(_QWORD *)(a3 + 8 * v35 + 32) = v9;
    v13 = v59;
    v5 = v60;
    if (v60 != v59)
      continue;
    break;
  }
LABEL_59:
  v36 = v56 - v13 * v58;
  if (v36 < 1)
    return a3;
  v61 = (_QWORD *)a3;
  a3 = *(_QWORD *)(v3 + 80);
  sub_213C6733C(v56 - v13 * v58);
  v9 = v57;
  if (v57)
    goto LABEL_61;
  if (*(_BYTE *)(v3 + 136) != 1)
  {
LABEL_66:
    v5 = 0;
    v64 = a1 + 64;
    v38 = 1 << *(_BYTE *)(a1 + 32);
    v39 = -1;
    if (v38 < 64)
      v39 = ~(-1 << v38);
    v40 = v39 & *(_QWORD *)(a1 + 64);
    v67 = (unint64_t)(v38 + 63) >> 6;
    swift_bridgeObjectRetain();
    v41 = 0;
    if (!v40)
      goto LABEL_70;
LABEL_69:
    v42 = __clz(__rbit64(v40));
    v40 &= v40 - 1;
    for (i = v42 | (v41 << 6); ; i = __clz(__rbit64(v45)) + (v41 << 6))
    {
      v47 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
      v48 = *v47;
      v9 = v47[1];
      v49 = *(_QWORD *)(a1 + 16);
      swift_bridgeObjectRetain();
      if (!v49)
        goto LABEL_120;
      swift_bridgeObjectRetain();
      v50 = sub_213C4B3DC(v48, v9);
      if ((v51 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_120:
        __break(1u);
        goto LABEL_121;
      }
      v52 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v50);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_213C64CEC(v52 + 32, *(_QWORD *)(v52 + 16), v68, v48, v9, a2, v36, v59, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v40)
        goto LABEL_69;
LABEL_70:
      if (__OFADD__(v41++, 1))
        goto LABEL_110;
      if (v41 >= v67)
        break;
      v45 = *(_QWORD *)(v64 + 8 * v41);
      if (!v45)
      {
        v46 = v41 + 1;
        if (v41 + 1 >= v67)
          break;
        v45 = *(_QWORD *)(v64 + 8 * v46);
        if (!v45)
        {
          v46 = v41 + 2;
          if (v41 + 2 >= v67)
            break;
          v45 = *(_QWORD *)(v64 + 8 * v46);
          if (!v45)
          {
            v46 = v41 + 3;
            if (v41 + 3 >= v67)
              break;
            v45 = *(_QWORD *)(v64 + 8 * v46);
            if (!v45)
            {
              v46 = v41 + 4;
              if (v41 + 4 >= v67)
                break;
              v45 = *(_QWORD *)(v64 + 8 * v46);
              if (!v45)
              {
                v46 = v41 + 5;
                if (v41 + 5 >= v67)
                  break;
                v45 = *(_QWORD *)(v64 + 8 * v46);
                if (!v45)
                {
                  while (1)
                  {
                    v41 = v46 + 1;
                    if (__OFADD__(v46, 1))
                      goto LABEL_117;
                    if (v41 >= v67)
                      goto LABEL_98;
                    v45 = *(_QWORD *)(v64 + 8 * v41);
                    ++v46;
                    if (v45)
                      goto LABEL_84;
                  }
                }
              }
            }
          }
        }
        v41 = v46;
      }
LABEL_84:
      v40 = (v45 - 1) & v45;
    }
LABEL_98:
    swift_release();
    if (!espresso_plan_execute_sync())
      goto LABEL_101;
LABEL_99:
    swift_bridgeObjectRelease();
    swift_allocError();
    *v53 = 20;
    goto LABEL_2;
  }
  result = swift_beginAccess();
  v37 = *(_DWORD **)(v68 + 144);
  if (v37)
  {
    *v37 = 0;
    goto LABEL_66;
  }
LABEL_123:
  __break(1u);
  return result;
}

uint64_t sub_213C64CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  _BYTE *v24;

  if (!a1)
  {
    sub_213C45684();
    swift_allocError();
    *v24 = 0;
    return swift_willThrow();
  }
  swift_beginAccess();
  v15 = *(_QWORD *)(a3 + 96);
  if (!*(_QWORD *)(v15 + 16))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_213C4B3DC(a4, a5);
  if ((v17 & 1) == 0)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_20;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 168 * v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a6 + 16))
    goto LABEL_15;
  swift_bridgeObjectRetain();
  v19 = sub_213C4B3DC(a4, a5);
  if ((v20 & 1) != 0)
  {
    v21 = *(_QWORD *)(*(_QWORD *)(a6 + 56) + 8 * v19);
    swift_bridgeObjectRelease();
    v22 = v21 * a7;
    if ((unsigned __int128)(v21 * (__int128)a7) >> 64 == (v21 * a7) >> 63)
    {
      if (v22 <= (uint64_t)0xFFFFFFFF7FFFFFFFLL || v22 >= 0x80000000)
        goto LABEL_22;
      if ((unsigned __int128)(v21 * (__int128)a8) >> 64 == (v21 * a8) >> 63)
      {
        if ((unsigned __int128)(v21 * a8 * (__int128)a9) >> 64 == (v21 * a8 * a9) >> 63)
        {
          if (v18)
            return cblas_scopy_NEWLAPACK();
          goto LABEL_21;
        }
        goto LABEL_18;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_213C865C8();
  __break(1u);
  return result;
}

uint64_t sub_213C64F38()
{
  char v0;
  uint64_t result;
  char *v2;

  swift_beginAccess();
  if (espresso_network_set_function_name())
  {
    v0 = 13;
  }
  else if (espresso_plan_execute_sync())
  {
    v0 = 12;
  }
  else
  {
    get_main_function_name();
    result = espresso_network_set_function_name();
    if (!(_DWORD)result)
      return result;
    v0 = 14;
  }
  sub_213C618F4();
  swift_allocError();
  *v2 = v0;
  return swift_willThrow();
}

uint64_t sub_213C65000@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[6];

  v36 = sub_213C58F38(0, *(_QWORD *)(*(_QWORD *)(v1 + 480) + 16));
  v3 = sub_213C58F38(0, *(_QWORD *)(*(_QWORD *)(v1 + 480) + 16));
  v4 = sub_213C58F38(0, *(_QWORD *)(*(_QWORD *)(v1 + 480) + 16));
  v5 = sub_213C58F38(0, *(_QWORD *)(*(_QWORD *)(v1 + 480) + 16));
  v6 = sub_213C58F38(0, *(_QWORD *)(*(_QWORD *)(v1 + 480) + 16));
  result = sub_213C58F38(0, *(_QWORD *)(*(_QWORD *)(v1 + 480) + 16));
  v8 = *(_QWORD *)(v1 + 480);
  v31 = *(_QWORD *)(v8 + 16);
  if (v31)
  {
    v34 = v6;
    v35 = result;
    v29 = a1;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v9 = 0;
    v10 = v8 + 40;
    v30 = v1;
    while (1)
    {
      v32 = v5;
      v33 = v4;
      swift_bridgeObjectRetain();
      sub_213C5A8D4();
      v12 = v11;
      v14 = v13;
      v16 = v15;
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(v1 + 80);
      if ((v16 & 1) == 0 || (result = swift_isUniquelyReferenced_nonNull(), (result & 1) == 0))
      {
        sub_213C676B4((uint64_t)v12, v14, v16);
        v12 = v18;
        v14 = v19;
        v16 = v20;
        result = swift_unknownObjectRelease();
      }
      if (v16 < 2 || v14 > 0)
        break;
      *v12 = v17;
      result = sub_213C61938((uint64_t)v12, v14, v16, v37);
      v22 = v37[0];
      if (v37[0] < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_46;
      if (v37[0] > 0x7FFFFFFF)
        goto LABEL_47;
      v23 = v37[1];
      v24 = v37[2];
      v26 = v37[3];
      v25 = v37[4];
      v27 = v37[5];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        result = v36;
      else
        result = (uint64_t)sub_213C5F298(v36);
      if (v9 >= *(_QWORD *)(result + 16))
        goto LABEL_48;
      *(_DWORD *)(result + 4 * v9 + 32) = v22;
      if (v23 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_49;
      if (v23 > 0x7FFFFFFF)
        goto LABEL_50;
      v36 = result;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_213C5F298(v3);
        v3 = result;
      }
      if (v9 >= *(_QWORD *)(v3 + 16))
        goto LABEL_51;
      *(_DWORD *)(v3 + 4 * v9 + 32) = v23;
      if (v24 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_52;
      if (v24 > 0x7FFFFFFF)
        goto LABEL_53;
      v4 = v33;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_213C5F298(v33);
        v4 = result;
      }
      v1 = v30;
      if (v9 >= *(_QWORD *)(v4 + 16))
        goto LABEL_54;
      *(_DWORD *)(v4 + 4 * v9 + 32) = v24;
      if (v26 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_55;
      if (v26 > 0x7FFFFFFF)
        goto LABEL_56;
      v5 = v32;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_213C5F298(v32);
        v5 = result;
      }
      if (v9 >= *(_QWORD *)(v5 + 16))
        goto LABEL_57;
      *(_DWORD *)(v5 + 4 * v9 + 32) = v26;
      if (v25 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_58;
      if (v25 > 0x7FFFFFFF)
        goto LABEL_59;
      v28 = (char *)v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v28 = sub_213C5F298(v34);
      result = v35;
      if (v9 >= *((_QWORD *)v28 + 2))
        goto LABEL_60;
      *(_DWORD *)&v28[4 * v9 + 32] = v25;
      if (v27 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_61;
      if (v27 > 0x7FFFFFFF)
        goto LABEL_62;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        result = v35;
      else
        result = (uint64_t)sub_213C5F298(v35);
      if (v9 >= *(_QWORD *)(result + 16))
        goto LABEL_63;
      v34 = (uint64_t)v28;
      v35 = result;
      v10 += 16;
      *(_DWORD *)(result + 4 * v9 + 32) = v27;
      swift_unknownObjectRelease();
      if (v31 == ++v9)
      {
        swift_bridgeObjectRelease();
        a1 = v29;
        v6 = (uint64_t)v28;
        result = v35;
        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
  }
  else
  {
LABEL_45:
    *a1 = v36;
    a1[1] = v3;
    a1[2] = v4;
    a1[3] = v5;
    a1[4] = v6;
    a1[5] = result;
  }
  return result;
}

void sub_213C65410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  int v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  _QWORD *v69;
  char v70;
  unint64_t v71;
  uint64_t v72;
  _BOOL8 v73;
  uint64_t v74;
  char v75;
  unint64_t v76;
  char v77;
  unint64_t v78;
  int v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t *v89;
  uint64_t *v90;
  _QWORD *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t *v94;
  uint64_t *v95;
  uint64_t *v96;
  uint64_t i;
  uint64_t j;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE v113[176];
  _BYTE __dst[176];
  _BYTE v115[176];
  _BYTE v116[176];
  uint64_t v117;

  v1 = v0;
  v117 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v2 + 16);
  v92 = v1;
  if (v3)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v89 = (uint64_t *)(v1 + 96);
    v4 = (uint64_t *)(v2 + 40);
    for (i = v3 - 1; ; --i)
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      v94 = v4;
      v7 = *(unsigned int *)(v1 + 32);
      sub_213C86184();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v112 = *(_QWORD *)(v1 + 96);
      v9 = v112;
      *(_QWORD *)(v1 + 96) = 0x8000000000000000;
      swift_bridgeObjectRetain();
      v11 = sub_213C4B3DC(v5, v6);
      v12 = *(_QWORD *)(v9 + 16);
      v13 = (v10 & 1) == 0;
      v14 = v12 + v13;
      if (__OFADD__(v12, v13))
      {
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
      }
      v15 = v10;
      if (*(_QWORD *)(v9 + 24) >= v14)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v10 & 1) == 0)
            goto LABEL_17;
        }
        else
        {
          sub_213C60C44();
          if ((v15 & 1) == 0)
            goto LABEL_17;
        }
      }
      else
      {
        sub_213C60240(v14, isUniquelyReferenced_nonNull_native);
        v16 = sub_213C4B3DC(v5, v6);
        if ((v15 & 1) != (v17 & 1))
        {
LABEL_67:
          sub_213C8679C();
          __break(1u);
          return;
        }
        v11 = v16;
        if ((v15 & 1) == 0)
        {
LABEL_17:
          __break(1u);
LABEL_18:
          swift_bridgeObjectRelease();
          sub_213C618F4();
          swift_allocError();
          v31 = 4;
          goto LABEL_43;
        }
      }
      v18 = v112;
      memmove(__dst, (const void *)(*(_QWORD *)(v112 + 56) + 168 * v11), 0xA8uLL);
      sub_213C62114((uint64_t)__dst);
      sub_213C6211C((uint64_t)__dst, (uint64_t)v113);
      v19 = v93 & 0xFFFFFFFF00000000 | v7;
      v20 = espresso_network_bind_buffer();
      sub_213C6211C((uint64_t)v113, (uint64_t)v115);
      sub_213C6211C((uint64_t)v115, (uint64_t)v116);
      if (sub_213C62164((uint64_t)v116) == 1)
      {
        swift_arrayDestroy();
        sub_213C613C0(v11, v18);
      }
      else
      {
        sub_213C6211C((uint64_t)v115, (uint64_t)&v100);
        v21 = *(_QWORD *)(v18 + 56) + 168 * v11;
        v22 = v107;
        v23 = v108;
        v24 = v109;
        *(_QWORD *)(v21 + 160) = v110;
        *(_OWORD *)(v21 + 128) = v23;
        *(_OWORD *)(v21 + 144) = v24;
        *(_OWORD *)(v21 + 112) = v22;
        v25 = v103;
        v26 = v104;
        v27 = v106;
        *(_OWORD *)(v21 + 80) = v105;
        *(_OWORD *)(v21 + 96) = v27;
        *(_OWORD *)(v21 + 48) = v25;
        *(_OWORD *)(v21 + 64) = v26;
        v29 = v101;
        v28 = v102;
        *(_OWORD *)v21 = v100;
        *(_OWORD *)(v21 + 16) = v29;
        *(_OWORD *)(v21 + 32) = v28;
      }
      swift_bridgeObjectRelease();
      v1 = v92;
      *v89 = v18;
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      if (v20)
        goto LABEL_18;
      if (!i)
        break;
      v93 = v19;
      v4 = v94 + 2;
    }
    swift_bridgeObjectRelease();
  }
  v32 = *(_QWORD *)(v1 + 488);
  v33 = *(_QWORD *)(v32 + 16);
  if (v33)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v90 = (uint64_t *)(v1 + 112);
    v34 = (uint64_t *)(v32 + 40);
    for (j = v33 - 1; ; --j)
    {
      v35 = *(v34 - 1);
      v36 = *v34;
      v95 = v34;
      v37 = *(unsigned int *)(v1 + 32);
      sub_213C86184();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v38 = swift_isUniquelyReferenced_nonNull_native();
      v111 = *(_QWORD *)(v1 + 112);
      v39 = v111;
      *(_QWORD *)(v1 + 112) = 0x8000000000000000;
      swift_bridgeObjectRetain();
      v41 = sub_213C4B3DC(v35, v36);
      v42 = *(_QWORD *)(v39 + 16);
      v43 = (v40 & 1) == 0;
      v44 = v42 + v43;
      if (__OFADD__(v42, v43))
        goto LABEL_65;
      v45 = v40;
      if (*(_QWORD *)(v39 + 24) >= v44)
      {
        if ((v38 & 1) != 0)
        {
          if ((v40 & 1) == 0)
            goto LABEL_36;
        }
        else
        {
          sub_213C60C44();
          if ((v45 & 1) == 0)
            goto LABEL_36;
        }
      }
      else
      {
        sub_213C60240(v44, v38);
        v46 = sub_213C4B3DC(v35, v36);
        if ((v45 & 1) != (v47 & 1))
          goto LABEL_67;
        v41 = v46;
        if ((v45 & 1) == 0)
        {
LABEL_36:
          __break(1u);
LABEL_37:
          swift_bridgeObjectRelease();
          sub_213C618F4();
          swift_allocError();
          v31 = 5;
          goto LABEL_43;
        }
      }
      v48 = v111;
      memmove(__dst, (const void *)(*(_QWORD *)(v111 + 56) + 168 * v41), 0xA8uLL);
      sub_213C62114((uint64_t)__dst);
      sub_213C6211C((uint64_t)__dst, (uint64_t)v113);
      v49 = v93 & 0xFFFFFFFF00000000 | v37;
      v50 = espresso_network_bind_buffer();
      sub_213C6211C((uint64_t)v113, (uint64_t)v115);
      sub_213C6211C((uint64_t)v115, (uint64_t)v116);
      if (sub_213C62164((uint64_t)v116) == 1)
      {
        swift_arrayDestroy();
        sub_213C613C0(v41, v48);
      }
      else
      {
        sub_213C6211C((uint64_t)v115, (uint64_t)&v100);
        v51 = *(_QWORD *)(v48 + 56) + 168 * v41;
        v52 = v107;
        v53 = v108;
        v54 = v109;
        *(_QWORD *)(v51 + 160) = v110;
        *(_OWORD *)(v51 + 128) = v53;
        *(_OWORD *)(v51 + 144) = v54;
        *(_OWORD *)(v51 + 112) = v52;
        v55 = v103;
        v56 = v104;
        v57 = v106;
        *(_OWORD *)(v51 + 80) = v105;
        *(_OWORD *)(v51 + 96) = v57;
        *(_OWORD *)(v51 + 48) = v55;
        *(_OWORD *)(v51 + 64) = v56;
        v59 = v101;
        v58 = v102;
        *(_OWORD *)v51 = v100;
        *(_OWORD *)(v51 + 16) = v59;
        *(_OWORD *)(v51 + 32) = v58;
      }
      swift_bridgeObjectRelease();
      v1 = v92;
      *v90 = v48;
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      if (v50)
        goto LABEL_37;
      if (!j)
        break;
      v93 = v49;
      v34 = v95 + 2;
    }
    swift_bridgeObjectRelease();
  }
  if (*(_BYTE *)(v1 + 136) == 1)
  {
    swift_beginAccess();
    swift_beginAccess();
    v60 = espresso_network_bind_buffer_to_global();
    swift_endAccess();
    if (v60 || (swift_beginAccess(), v61 = espresso_network_bind_buffer_to_global(), swift_endAccess(), v61))
    {
      sub_213C618F4();
      swift_allocError();
      v31 = 7;
      goto LABEL_43;
    }
    v62 = *(_QWORD *)(v1 + 496);
    v63 = *(_QWORD *)(v62 + 16);
    if (v63)
    {
      v64 = (uint64_t *)(v62 + 40);
      swift_bridgeObjectRetain();
      v99 = v63 - 1;
      v91 = (_QWORD *)(v1 + 128);
      while (1)
      {
        v65 = *(v64 - 1);
        v66 = *v64;
        v96 = v64;
        v67 = *(unsigned int *)(v1 + 32);
        sub_213C86184();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v68 = swift_isUniquelyReferenced_nonNull_native();
        v69 = *(_QWORD **)(v1 + 128);
        *(_QWORD *)(v1 + 128) = 0x8000000000000000;
        swift_bridgeObjectRetain();
        v71 = sub_213C4B3DC(v65, v66);
        v72 = v69[2];
        v73 = (v70 & 1) == 0;
        v74 = v72 + v73;
        if (__OFADD__(v72, v73))
          goto LABEL_66;
        v75 = v70;
        if (v69[3] >= v74)
        {
          if ((v68 & 1) != 0)
          {
            if ((v70 & 1) == 0)
              goto LABEL_60;
          }
          else
          {
            sub_213C60C44();
            if ((v75 & 1) == 0)
              goto LABEL_60;
          }
        }
        else
        {
          sub_213C60240(v74, v68);
          v76 = sub_213C4B3DC(v65, v66);
          if ((v75 & 1) != (v77 & 1))
            goto LABEL_67;
          v71 = v76;
          if ((v75 & 1) == 0)
          {
LABEL_60:
            __break(1u);
LABEL_61:
            swift_bridgeObjectRelease();
            sub_213C618F4();
            swift_allocError();
            v31 = 6;
LABEL_43:
            *v30 = v31;
            swift_willThrow();
            return;
          }
        }
        memmove(__dst, (const void *)(v69[7] + 168 * v71), 0xA8uLL);
        sub_213C62114((uint64_t)__dst);
        sub_213C6211C((uint64_t)__dst, (uint64_t)v113);
        v78 = v93 & 0xFFFFFFFF00000000 | v67;
        v79 = espresso_network_bind_buffer_to_global();
        sub_213C6211C((uint64_t)v113, (uint64_t)v115);
        sub_213C6211C((uint64_t)v115, (uint64_t)v116);
        if (sub_213C62164((uint64_t)v116) == 1)
        {
          swift_arrayDestroy();
          sub_213C613C0(v71, (uint64_t)v69);
        }
        else
        {
          sub_213C6211C((uint64_t)v115, (uint64_t)&v100);
          v80 = v69[7] + 168 * v71;
          v81 = v107;
          v82 = v108;
          v83 = v109;
          *(_QWORD *)(v80 + 160) = v110;
          *(_OWORD *)(v80 + 128) = v82;
          *(_OWORD *)(v80 + 144) = v83;
          *(_OWORD *)(v80 + 112) = v81;
          v84 = v103;
          v85 = v104;
          v86 = v106;
          *(_OWORD *)(v80 + 80) = v105;
          *(_OWORD *)(v80 + 96) = v86;
          *(_OWORD *)(v80 + 48) = v84;
          *(_OWORD *)(v80 + 64) = v85;
          v88 = v101;
          v87 = v102;
          *(_OWORD *)v80 = v100;
          *(_OWORD *)(v80 + 16) = v88;
          *(_OWORD *)(v80 + 32) = v87;
        }
        swift_bridgeObjectRelease();
        v1 = v92;
        *v91 = v69;
        swift_endAccess();
        swift_release();
        swift_bridgeObjectRelease();
        if (v79)
          goto LABEL_61;
        if (!v99)
        {
          swift_bridgeObjectRelease();
          return;
        }
        v93 = v78;
        v64 = v96 + 2;
        --v99;
      }
    }
  }
}

uint64_t sub_213C65DA8(uint64_t result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int32x2_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  int64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t i;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v66;
  _OWORD v68[10];
  uint64_t v69;
  _BYTE v70[176];
  _BYTE __dst[176];
  uint64_t v72[22];
  uint64_t v73[22];
  _BYTE v74[160];
  int v75;
  uint64_t v76;

  v76 = *MEMORY[0x24BDAC8D0];
  v62 = *(_QWORD *)(result + 16);
  if (!v62)
    return result;
  v4 = v3;
  v75 = 0;
  v61 = result + 32;
  memset(v74, 0, sizeof(v74));
  swift_bridgeObjectRetain();
  swift_beginAccess();
  v5 = 0;
  for (i = v3; ; v4 = i)
  {
    v63 = v5;
    v6 = (uint64_t *)(v61 + 16 * v5);
    v7 = *v6;
    v8 = v6[1];
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v73[0] = *a2;
    *a2 = 0x8000000000000000;
    sub_213C4BBF0((uint64_t)v74, v7, v8, isUniquelyReferenced_nonNull_native);
    *a2 = v73[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = *(unsigned int *)(v4 + 32);
    v11 = sub_213C862B0();
    *(_OWORD *)(v11 + 32) = 0u;
    v12 = (char *)(v11 + 32);
    *(_QWORD *)(v11 + 16) = 10;
    *(_OWORD *)(v11 + 48) = 0u;
    *(_OWORD *)(v11 + 64) = 0u;
    *(_OWORD *)(v11 + 80) = 0u;
    *(_OWORD *)(v11 + 96) = 0u;
    v73[0] = 0;
    sub_213C86184();
    v13 = v64 & 0xFFFFFFFF00000000 | v10;
    espresso_network_query_blob_shape();
    swift_release();
    if (v73[0] < 0)
      goto LABEL_51;
    if (*(_QWORD *)(v11 + 16) < v73[0])
      goto LABEL_52;
    if (v73[0])
    {
      v14 = (uint64_t *)(v11 + 32);
      v15 = v73[0];
      v16 = 1;
      while (1)
      {
        v17 = *v14++;
        v18 = v16 * v17;
        if ((unsigned __int128)(v16 * (__int128)v17) >> 64 != (v16 * v17) >> 63)
          break;
        v16 = v18;
        if (!--v15)
          goto LABEL_11;
      }
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
    }
    v18 = 1;
LABEL_11:
    v66 = v73[0];
    v64 = v13;
    swift_bridgeObjectRetain();
    v19.i32[0] = 0;
    v20 = sub_213C58E48(v18, v19);
    v21 = swift_isUniquelyReferenced_nonNull_native();
    v73[0] = *a3;
    *a3 = 0x8000000000000000;
    sub_213C4BAC4(v20, v7, v8, v21);
    *a3 = v73[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v22 = swift_isUniquelyReferenced_nonNull_native();
    v73[0] = *a3;
    v23 = v73[0];
    *a3 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    v25 = sub_213C4B3DC(v7, v8);
    v26 = *(_QWORD *)(v23 + 16);
    v27 = (v24 & 1) == 0;
    v28 = v26 + v27;
    if (__OFADD__(v26, v27))
      goto LABEL_53;
    v29 = v24;
    if (*(_QWORD *)(v23 + 24) >= v28)
    {
      if ((v22 & 1) != 0)
      {
        if ((v24 & 1) == 0)
          goto LABEL_54;
      }
      else
      {
        sub_213C60E64();
        if ((v29 & 1) == 0)
          goto LABEL_54;
      }
    }
    else
    {
      sub_213C605A0(v28, v22);
      v30 = sub_213C4B3DC(v7, v8);
      if ((v29 & 1) != (v31 & 1))
        goto LABEL_57;
      v25 = v30;
      if ((v29 & 1) == 0)
        goto LABEL_54;
    }
    v32 = *(_QWORD *)(*(_QWORD *)(v73[0] + 56) + 8 * v25);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v32 = sub_213C5F284(v32);
    v33 = *(_QWORD *)(v32 + 16);
    if (v33 >> 61)
      goto LABEL_55;
    sub_213C5A9DC(v32 + 32, v32 + 32 + 4 * v33, a2, v7, v8);
    v72[0] = v32;
    sub_213C61714(v72, 1, v73, v25, v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a3 = v73[0];
    swift_bridgeObjectRelease();
    sub_213C86784();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    v34 = swift_dynamicCastClass();
    if (!v34)
    {
      swift_bridgeObjectRelease();
      v34 = MEMORY[0x24BEE4AF8];
    }
    v35 = *(_QWORD *)(v34 + 16);
    swift_release();
    if (v35 == v66)
    {
      if (!swift_dynamicCastClass())
        swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v66)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E270);
        v55 = 8 * v66;
        v56 = (char *)swift_allocObject();
        v57 = _swift_stdlib_malloc_size(v56);
        v58 = v57 - 32;
        if (v57 < 32)
          v58 = v57 - 25;
        *((_QWORD *)v56 + 2) = v66;
        *((_QWORD *)v56 + 3) = 2 * (v58 >> 3);
        v59 = v56 + 32;
        if (v12 < &v56[v55 + 32] && v59 < &v12[v55])
          goto LABEL_58;
        memcpy(v59, v12, 8 * v66);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v36 = swift_isUniquelyReferenced_nonNull_native();
    v37 = (_QWORD *)*a2;
    *a2 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    v39 = sub_213C4B3DC(v7, v8);
    v40 = v37[2];
    v41 = (v38 & 1) == 0;
    v42 = v40 + v41;
    if (__OFADD__(v40, v41))
      goto LABEL_56;
    v43 = v38;
    if (v37[3] < v42)
      break;
    if ((v36 & 1) != 0)
    {
      if ((v38 & 1) == 0)
        goto LABEL_47;
    }
    else
    {
      sub_213C60C44();
      if ((v43 & 1) == 0)
      {
LABEL_47:
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
LABEL_33:
    memmove(__dst, (const void *)(v37[7] + 168 * v39), 0xA8uLL);
    sub_213C62114((uint64_t)__dst);
    sub_213C6211C((uint64_t)__dst, (uint64_t)v70);
    espresso_buffer_pack_tensor_shape();
    sub_213C6211C((uint64_t)v70, (uint64_t)v72);
    sub_213C6211C((uint64_t)v72, (uint64_t)v73);
    if (sub_213C62164((uint64_t)v73) == 1)
    {
      swift_arrayDestroy();
      sub_213C613C0(v39, (uint64_t)v37);
    }
    else
    {
      sub_213C6211C((uint64_t)v72, (uint64_t)v68);
      v46 = v37[7] + 168 * v39;
      v47 = v68[2];
      v48 = v68[1];
      *(_OWORD *)v46 = v68[0];
      *(_OWORD *)(v46 + 16) = v48;
      *(_OWORD *)(v46 + 32) = v47;
      v49 = v68[6];
      v50 = v68[4];
      v51 = v68[3];
      *(_OWORD *)(v46 + 80) = v68[5];
      *(_OWORD *)(v46 + 96) = v49;
      *(_OWORD *)(v46 + 48) = v51;
      *(_OWORD *)(v46 + 64) = v50;
      v52 = v68[9];
      v53 = v68[8];
      v54 = v68[7];
      *(_QWORD *)(v46 + 160) = v69;
      *(_OWORD *)(v46 + 128) = v53;
      *(_OWORD *)(v46 + 144) = v52;
      *(_OWORD *)(v46 + 112) = v54;
    }
    swift_bridgeObjectRelease();
    v5 = v63 + 1;
    *a2 = (uint64_t)v37;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v63 + 1 == v62)
      return swift_bridgeObjectRelease();
  }
  sub_213C60240(v42, v36);
  v44 = sub_213C4B3DC(v7, v8);
  if ((v43 & 1) == (v45 & 1))
  {
    v39 = v44;
    if ((v43 & 1) == 0)
      goto LABEL_47;
    goto LABEL_33;
  }
LABEL_57:
  sub_213C8679C();
  __break(1u);
LABEL_58:
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C664C4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t *v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  int64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _OWORD v50[10];
  uint64_t v51;
  _BYTE v52[176];
  _BYTE __dst[176];
  _BYTE v54[176];
  _QWORD v55[22];
  _OWORD v56[10];
  int v57;
  uint64_t v58;

  v3 = v2;
  v58 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(result + 16);
  if (!v4)
    return result;
  v6 = result;
  v57 = 0;
  memset(v56, 0, sizeof(v56));
  swift_bridgeObjectRetain();
  swift_beginAccess();
  v45 = v3;
  v7 = (uint64_t *)(v6 + 40);
  for (i = v4 - 1; ; i = v29 - 1)
  {
    v9 = *(v7 - 1);
    v10 = *v7;
    v46 = v7;
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v55[0] = *a2;
    *a2 = 0x8000000000000000;
    sub_213C4BBF0((uint64_t)v56, v9, v10, isUniquelyReferenced_nonNull_native);
    *a2 = v55[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = *(unsigned int *)(v3 + 32);
    v13 = sub_213C862B0();
    *(_OWORD *)(v13 + 32) = 0u;
    v14 = (char *)(v13 + 32);
    *(_QWORD *)(v13 + 16) = 10;
    *(_OWORD *)(v13 + 48) = 0u;
    *(_OWORD *)(v13 + 64) = 0u;
    *(_OWORD *)(v13 + 80) = 0u;
    *(_OWORD *)(v13 + 96) = 0u;
    v55[0] = 0;
    sub_213C86184();
    v15 = v48 & 0xFFFFFFFF00000000 | v12;
    espresso_network_query_blob_shape();
    swift_release();
    v16 = v55[0];
    if ((v55[0] & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
    }
    if (*(_QWORD *)(v13 + 16) < v55[0])
      goto LABEL_33;
    v48 = v15;
    sub_213C86784();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    v17 = swift_dynamicCastClass();
    if (!v17)
    {
      swift_bridgeObjectRelease();
      v17 = MEMORY[0x24BEE4AF8];
    }
    v18 = *(_QWORD *)(v17 + 16);
    swift_release();
    v47 = i;
    if (v18 == v16)
    {
      if (!swift_dynamicCastClass())
        swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v16)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E270);
        v40 = 8 * v16;
        v41 = (char *)swift_allocObject();
        v42 = _swift_stdlib_malloc_size(v41);
        v43 = v42 - 32;
        if (v42 < 32)
          v43 = v42 - 25;
        *((_QWORD *)v41 + 2) = v16;
        *((_QWORD *)v41 + 3) = 2 * (v43 >> 3);
        v44 = v41 + 32;
        if (v14 < &v41[v40 + 32] && v44 < &v14[v40])
          goto LABEL_36;
        memcpy(v44, v14, 8 * v16);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v20 = *a2;
    v49 = *a2;
    *a2 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    v22 = sub_213C4B3DC(v9, v10);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = (v21 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
      goto LABEL_34;
    v26 = v21;
    if (*(_QWORD *)(v20 + 24) < v25)
      break;
    if ((v19 & 1) != 0)
    {
      v29 = v47;
      if ((v21 & 1) == 0)
        goto LABEL_29;
    }
    else
    {
      sub_213C60C44();
      v29 = v47;
      if ((v26 & 1) == 0)
      {
LABEL_29:
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
LABEL_17:
    memmove(__dst, (const void *)(*(_QWORD *)(v49 + 56) + 168 * v22), 0xA8uLL);
    sub_213C62114((uint64_t)__dst);
    sub_213C6211C((uint64_t)__dst, (uint64_t)v52);
    espresso_buffer_pack_tensor_shape();
    sub_213C6211C((uint64_t)v52, (uint64_t)v54);
    sub_213C6211C((uint64_t)v54, (uint64_t)v55);
    if (sub_213C62164((uint64_t)v55) == 1)
    {
      v30 = v49;
      swift_arrayDestroy();
      sub_213C613C0(v22, v49);
    }
    else
    {
      sub_213C6211C((uint64_t)v54, (uint64_t)v50);
      v30 = v49;
      v31 = *(_QWORD *)(v49 + 56) + 168 * v22;
      v32 = v50[2];
      v33 = v50[1];
      *(_OWORD *)v31 = v50[0];
      *(_OWORD *)(v31 + 16) = v33;
      *(_OWORD *)(v31 + 32) = v32;
      v34 = v50[6];
      v35 = v50[4];
      v36 = v50[3];
      *(_OWORD *)(v31 + 80) = v50[5];
      *(_OWORD *)(v31 + 96) = v34;
      *(_OWORD *)(v31 + 48) = v36;
      *(_OWORD *)(v31 + 64) = v35;
      v37 = v50[8];
      v38 = v50[9];
      v39 = v50[7];
      *(_QWORD *)(v31 + 160) = v51;
      *(_OWORD *)(v31 + 128) = v37;
      *(_OWORD *)(v31 + 144) = v38;
      *(_OWORD *)(v31 + 112) = v39;
    }
    swift_bridgeObjectRelease();
    *a2 = v30;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (!v29)
      return swift_bridgeObjectRelease();
    v3 = v45;
    v7 = v46 + 2;
  }
  sub_213C60240(v25, v19);
  v27 = sub_213C4B3DC(v9, v10);
  if ((v26 & 1) == (v28 & 1))
  {
    v22 = v27;
    v29 = v47;
    if ((v26 & 1) == 0)
      goto LABEL_29;
    goto LABEL_17;
  }
  sub_213C8679C();
  __break(1u);
LABEL_36:
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C669C4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t *v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  int64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t i;
  unint64_t v45;
  uint64_t v46;
  _OWORD v47[10];
  uint64_t v48;
  _BYTE v49[176];
  _BYTE __dst[176];
  _BYTE v51[176];
  _QWORD v52[27];

  v52[25] = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return result;
  v5 = result;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  v42 = v2;
  v6 = (uint64_t *)(v5 + 40);
  for (i = v3 - 1; ; --i)
  {
    v7 = *(v6 - 1);
    v8 = *v6;
    v9 = *(unsigned int *)(v2 + 32);
    swift_bridgeObjectRetain();
    v10 = sub_213C862B0();
    *(_OWORD *)(v10 + 32) = 0u;
    v11 = (char *)(v10 + 32);
    *(_QWORD *)(v10 + 16) = 10;
    *(_OWORD *)(v10 + 48) = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
    *(_OWORD *)(v10 + 80) = 0u;
    *(_OWORD *)(v10 + 96) = 0u;
    v52[0] = 0;
    sub_213C86184();
    v12 = v45 & 0xFFFFFFFF00000000 | v9;
    espresso_network_query_blob_shape();
    swift_release();
    v13 = v52[0];
    if ((v52[0] & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
    }
    if (*(_QWORD *)(v10 + 16) < v52[0])
      goto LABEL_33;
    sub_213C86784();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    v14 = swift_dynamicCastClass();
    if (!v14)
    {
      swift_bridgeObjectRelease();
      v14 = MEMORY[0x24BEE4AF8];
    }
    v15 = *(_QWORD *)(v14 + 16);
    swift_release();
    v43 = v6;
    v45 = v12;
    if (v15 == v13)
    {
      if (!swift_dynamicCastClass())
        swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v13)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E270);
        v37 = 8 * v13;
        v38 = (char *)swift_allocObject();
        v39 = _swift_stdlib_malloc_size(v38);
        v40 = v39 - 32;
        if (v39 < 32)
          v40 = v39 - 25;
        *((_QWORD *)v38 + 2) = v13;
        *((_QWORD *)v38 + 3) = 2 * (v40 >> 3);
        v41 = v38 + 32;
        if (v11 < &v38[v37 + 32] && v41 < &v11[v37])
          goto LABEL_36;
        memcpy(v41, v11, 8 * v13);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *a2;
    v46 = *a2;
    v18 = a2;
    *a2 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    v20 = sub_213C4B3DC(v7, v8);
    v21 = *(_QWORD *)(v17 + 16);
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      goto LABEL_34;
    v24 = v19;
    if (*(_QWORD *)(v17 + 24) < v23)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v19 & 1) == 0)
        goto LABEL_29;
    }
    else
    {
      sub_213C60C44();
      if ((v24 & 1) == 0)
      {
LABEL_29:
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
LABEL_17:
    memmove(__dst, (const void *)(*(_QWORD *)(v46 + 56) + 168 * v20), 0xA8uLL);
    sub_213C62114((uint64_t)__dst);
    sub_213C6211C((uint64_t)__dst, (uint64_t)v49);
    espresso_buffer_pack_tensor_shape();
    sub_213C6211C((uint64_t)v49, (uint64_t)v51);
    sub_213C6211C((uint64_t)v51, (uint64_t)v52);
    if (sub_213C62164((uint64_t)v52) == 1)
    {
      v27 = v46;
      swift_arrayDestroy();
      sub_213C613C0(v20, v46);
    }
    else
    {
      sub_213C6211C((uint64_t)v51, (uint64_t)v47);
      v27 = v46;
      v28 = *(_QWORD *)(v46 + 56) + 168 * v20;
      v29 = v47[2];
      v30 = v47[1];
      *(_OWORD *)v28 = v47[0];
      *(_OWORD *)(v28 + 16) = v30;
      *(_OWORD *)(v28 + 32) = v29;
      v31 = v47[6];
      v32 = v47[4];
      v33 = v47[3];
      *(_OWORD *)(v28 + 80) = v47[5];
      *(_OWORD *)(v28 + 96) = v31;
      *(_OWORD *)(v28 + 48) = v33;
      *(_OWORD *)(v28 + 64) = v32;
      v34 = v47[8];
      v35 = v47[9];
      v36 = v47[7];
      *(_QWORD *)(v28 + 160) = v48;
      *(_OWORD *)(v28 + 128) = v34;
      *(_OWORD *)(v28 + 144) = v35;
      *(_OWORD *)(v28 + 112) = v36;
    }
    swift_bridgeObjectRelease();
    a2 = v18;
    *v18 = v27;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (!i)
      return swift_bridgeObjectRelease();
    v2 = v42;
    v6 = v43 + 2;
  }
  sub_213C60240(v23, isUniquelyReferenced_nonNull_native);
  v25 = sub_213C4B3DC(v7, v8);
  if ((v24 & 1) == (v26 & 1))
  {
    v20 = v25;
    if ((v24 & 1) == 0)
      goto LABEL_29;
    goto LABEL_17;
  }
  sub_213C8679C();
  __break(1u);
LABEL_36:
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C66E4C(char **a1)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  int v23;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  char *v30;
  uint64_t v31;
  char *v32;
  char __s1[8];
  uint64_t v34;
  char *v35;
  _QWORD *v36;

  if (*(_QWORD *)(*(_QWORD *)(v1 + 480) + 16) >> 60)
  {
    __break(1u);
    goto LABEL_53;
  }
  v3 = (char *)swift_slowAlloc();
  v4 = *(_QWORD *)(v1 + 480);
  v5 = *(_QWORD *)(v4 + 16);
  v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v31 = v1;
  v32 = v3;
  if (v5)
  {
    v36 = (_QWORD *)MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_213C547B4(0, v5, 0);
    v7 = (uint64_t *)(v4 + 40);
    while (1)
    {
      v9 = *(v7 - 1);
      v8 = *v7;
      if ((*v7 & 0x1000000000000000) != 0 || !(v8 & 0x2000000000000000 | v9 & 0x1000000000000000))
      {
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F3F8);
        sub_213C86508();
        v12 = v35;
        if (!v35)
          goto LABEL_54;
        goto LABEL_12;
      }
      if ((v8 & 0x2000000000000000) != 0)
      {
        *(_QWORD *)__s1 = *(v7 - 1);
        v34 = v8 & 0xFFFFFFFFFFFFFFLL;
        swift_bridgeObjectRetain();
        v11 = __s1;
      }
      else
      {
        if ((v9 & 0x1000000000000000) != 0)
        {
          v10 = (v8 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_9:
          swift_bridgeObjectRetain();
          v11 = (char *)v10;
          goto LABEL_11;
        }
        v10 = sub_213C86574();
        if (v10)
          goto LABEL_9;
        swift_bridgeObjectRetain();
        v11 = 0;
      }
LABEL_11:
      v35 = strdup(v11);
      v12 = v35;
      if (!v35)
        goto LABEL_54;
LABEL_12:
      swift_bridgeObjectRelease();
      v6 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_213C547B4(0, v6[2] + 1, 1);
        v6 = v36;
      }
      v14 = v6[2];
      v13 = v6[3];
      if (v14 >= v13 >> 1)
      {
        sub_213C547B4(v13 > 1, v14 + 1, 1);
        v6 = v36;
      }
      v7 += 2;
      v6[2] = v14 + 1;
      v6[v14 + 4] = v12;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        v1 = v31;
        v3 = v32;
        v15 = *(_QWORD *)(*(_QWORD *)(v31 + 480) + 16);
        goto LABEL_23;
      }
    }
  }
  v15 = 0;
LABEL_23:
  if (v6 + 4 < (_QWORD *)&v3[8 * v15] && v3 < (char *)&v6[v15 + 4])
    goto LABEL_55;
  memcpy(v3, v6 + 4, 8 * v15);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 480) + 16) >> 31)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    result = sub_213C86610();
    __break(1u);
    return result;
  }
  v17 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v17 = sub_213C4213C(0, *((_QWORD *)v17 + 2), 0, v17);
  *a1 = v17;
  v18 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_213C4213C(0, *((_QWORD *)v18 + 2), 0, v18);
  a1[1] = v18;
  v19 = a1[2];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v19 = sub_213C4213C(0, *((_QWORD *)v19 + 2), 0, v19);
  a1[2] = v19;
  v20 = a1[3];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_213C4213C(0, *((_QWORD *)v20 + 2), 0, v20);
  a1[3] = v20;
  v21 = a1[4];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v21 = sub_213C4213C(0, *((_QWORD *)v21 + 2), 0, v21);
  a1[4] = v21;
  v22 = a1[5];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v22 = sub_213C4213C(0, *((_QWORD *)v22 + 2), 0, v22);
  a1[5] = v22;
  v23 = espresso_network_change_input_blob_shapes_seq_rank();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v23)
  {
    v24 = 1;
LABEL_50:
    sub_213C618F4();
    swift_allocError();
    *v30 = v24;
    return swift_willThrow();
  }
  v25 = *(_QWORD *)(*(_QWORD *)(v31 + 480) + 16);
  if (v25)
  {
    v26 = (uint64_t *)v32;
    do
    {
      v28 = *v26++;
      v27 = v28;
      if (v28)
        MEMORY[0x2199C0A30](v27, -1, -1);
      --v25;
    }
    while (v25);
  }
  MEMORY[0x2199C0A30](v32, -1, -1);
  result = espresso_plan_build();
  if ((_DWORD)result)
  {
    v24 = 9;
    goto LABEL_50;
  }
  return result;
}

uint64_t sub_213C6733C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8[6];
  char *v9[6];

  *(_QWORD *)(v1 + 80) = a1;
  sub_213C65000(v8);
  v9[0] = (char *)v8[0];
  v9[1] = (char *)v8[1];
  v9[2] = (char *)v8[2];
  v9[3] = (char *)v8[3];
  v9[4] = (char *)v8[4];
  v9[5] = (char *)v8[5];
  if (espresso_plan_build_clean())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213C618F4();
    swift_allocError();
    *v3 = 22;
    return swift_willThrow();
  }
  else
  {
    sub_213C66E4C(v9);
    if (v2)
      goto LABEL_7;
    swift_beginAccess();
    v5 = swift_bridgeObjectRetain();
    sub_213C669C4(v5, (uint64_t *)(v1 + 96));
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v6 = swift_bridgeObjectRetain();
    sub_213C669C4(v6, (uint64_t *)(v1 + 112));
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_213C65410();
    if (*(_BYTE *)(v1 + 136) != 1)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      result = swift_beginAccess();
      v7 = *(_DWORD **)(v1 + 312);
      if (v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *v7 = *(_DWORD *)(v1 + 88);
        return sub_213C64F38();
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_213C67550@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  type metadata accessor for EspressoEIRTrainer();
  swift_allocObject();
  v4 = sub_213C677A8(a1);
  result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_213C675A4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_213C63420(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_213C675C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v6 = *v4;
  v8 = 1;
  result = sub_213C63420(a1, a2, &v8, a3, a4, MEMORY[0x24BEE4AF8]);
  if (!v5)
    *(_BYTE *)(v6 + 136) = 0;
  return result;
}

uint64_t sub_213C67608(uint64_t a1, unint64_t a2)
{
  return sub_213C63770(a1, a2 | ((HIDWORD(a2) & 1) << 32));
}

uint64_t sub_213C67634(int32x2_t a1)
{
  return sub_213C639C8(a1);
}

uint64_t sub_213C67654()
{
  return sub_213C63ED0();
}

uint64_t sub_213C67674(uint64_t a1, uint64_t a2, int64_t a3, int a4, unsigned __int8 *a5)
{
  return sub_213C678B0(a1, a2, a3, a4, a5);
}

uint64_t sub_213C67694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_213C643E4(a1, a2, a3);
}

uint64_t sub_213C676B4(uint64_t result, uint64_t a2, unint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v3 = a3 >> 1;
  v4 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
    goto LABEL_13;
  v6 = result;
  if (!v4)
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (v3 >= a2)
      goto LABEL_6;
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E270);
  v7 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v7);
  v8 = result - 32;
  if (result < 32)
    v8 = result - 25;
  v7[2] = v4;
  v7[3] = 2 * (v8 >> 3);
  if (v3 < a2)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_6:
  result = (uint64_t)memcpy(v7 + 4, (const void *)(v6 + 8 * a2), 8 * v4);
  if (__OFSUB__(0, a2))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v7[2];
  v10 = __OFADD__(a2, v9);
  v11 = a2 + v9;
  if (v10)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v11 < a2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if ((v11 & 0x8000000000000000) == 0)
    return (uint64_t)v7;
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_213C677A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0xE000000000000000;
  *(_QWORD *)(v1 + 72) = 1;
  *(_DWORD *)(v1 + 88) = 0;
  v3 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 96) = sub_213C3BEAC(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v1 + 104) = sub_213C3C098(v3);
  *(_QWORD *)(v1 + 112) = sub_213C3BEAC(v3);
  *(_QWORD *)(v1 + 120) = sub_213C3C098(v3);
  *(_QWORD *)(v1 + 128) = sub_213C3BEAC(v3);
  *(_BYTE *)(v1 + 136) = 1;
  *(_OWORD *)(v1 + 144) = 0u;
  *(_OWORD *)(v1 + 160) = 0u;
  *(_OWORD *)(v1 + 176) = 0u;
  *(_OWORD *)(v1 + 192) = 0u;
  *(_OWORD *)(v1 + 208) = 0u;
  *(_OWORD *)(v1 + 224) = 0u;
  *(_OWORD *)(v1 + 240) = 0u;
  *(_OWORD *)(v1 + 256) = 0u;
  *(_OWORD *)(v1 + 272) = 0u;
  *(_OWORD *)(v1 + 288) = 0u;
  *(_DWORD *)(v1 + 304) = 0;
  *(_OWORD *)(v1 + 312) = 0u;
  *(_OWORD *)(v1 + 328) = 0u;
  *(_OWORD *)(v1 + 344) = 0u;
  *(_OWORD *)(v1 + 360) = 0u;
  *(_OWORD *)(v1 + 376) = 0u;
  *(_OWORD *)(v1 + 392) = 0u;
  *(_OWORD *)(v1 + 408) = 0u;
  *(_OWORD *)(v1 + 424) = 0u;
  *(_OWORD *)(v1 + 440) = 0u;
  *(_OWORD *)(v1 + 456) = 0u;
  *(_DWORD *)(v1 + 472) = 0;
  *(_QWORD *)(v1 + 480) = v3;
  *(_QWORD *)(v1 + 488) = v3;
  *(_QWORD *)(v1 + 496) = v3;
  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  swift_retain();
  result = espresso_create_context();
  if (result)
  {
    *(_QWORD *)(v1 + 40) = result;
    result = espresso_create_plan();
    if (result)
    {
      *(_QWORD *)(v1 + 48) = result;
      *(_QWORD *)(v1 + 80) = -1;
      return v1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_213C678B0(uint64_t a1, uint64_t a2, int64_t a3, int a4, unsigned __int8 *a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v9;
  _BYTE *v10;
  uint64_t result;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v45;
  unint64_t v46;
  BOOL v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  int64_t v64;
  unint64_t v65;
  int64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  int64_t v88;
  int v89;
  int64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v95;
  uint64_t *v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  int64_t v101;
  _QWORD *v102;
  _QWORD v103[15];

  v6 = v5;
  v103[13] = *MEMORY[0x24BDAC8D0];
  v89 = *a5;
  sub_213C618F4();
  v9 = (void *)swift_allocError();
  *v10 = 18;
  if ((*(_BYTE *)(v5 + 72) & 2) == 0)
    return swift_willThrow();

  swift_beginAccess();
  v12 = *(_DWORD **)(v5 + 144);
  if (!v12)
  {
    __break(1u);
LABEL_151:
    swift_bridgeObjectRelease();
LABEL_152:
    __break(1u);
LABEL_153:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_154:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_155:
    result = sub_213C865C8();
    __break(1u);
    return result;
  }
  *v12 = 1065353216;
  v92 = a1 + 64;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(a1 + 64);
  swift_bridgeObjectRetain();
  v96 = (uint64_t *)(v6 + 96);
  swift_beginAccess();
  swift_beginAccess();
  v16 = 0;
  v91 = (unint64_t)(v13 + 63) >> 6;
  v95 = a1;
  v93 = a2;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v18 = (v15 - 1) & v15;
      v19 = v17 | (v16 << 6);
      goto LABEL_27;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
LABEL_134:
      swift_allocError();
      *v84 = 15;
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
    if (v20 >= v91)
      break;
    v21 = *(_QWORD *)(v92 + 8 * v20);
    ++v16;
    if (!v21)
    {
      v16 = v20 + 1;
      if (v20 + 1 >= v91)
        break;
      v21 = *(_QWORD *)(v92 + 8 * v16);
      if (!v21)
      {
        v16 = v20 + 2;
        if (v20 + 2 >= v91)
          break;
        v21 = *(_QWORD *)(v92 + 8 * v16);
        if (!v21)
        {
          v16 = v20 + 3;
          if (v20 + 3 >= v91)
            break;
          v21 = *(_QWORD *)(v92 + 8 * v16);
          if (!v21)
          {
            v16 = v20 + 4;
            if (v20 + 4 >= v91)
              break;
            v21 = *(_QWORD *)(v92 + 8 * v16);
            if (!v21)
            {
              v22 = v20 + 5;
              if (v22 >= v91)
                break;
              v21 = *(_QWORD *)(v92 + 8 * v22);
              if (!v21)
              {
                while (1)
                {
                  v16 = v22 + 1;
                  if (__OFADD__(v22, 1))
                    goto LABEL_145;
                  if (v16 >= v91)
                    goto LABEL_47;
                  v21 = *(_QWORD *)(v92 + 8 * v16);
                  ++v22;
                  if (v21)
                    goto LABEL_26;
                }
              }
              v16 = v22;
            }
          }
        }
      }
    }
LABEL_26:
    v18 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_27:
    if (!*(_QWORD *)(*v96 + 16))
      goto LABEL_43;
    v99 = v18;
    v101 = v16;
    v23 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v19);
    v25 = *v23;
    v24 = v23[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_213C4B3DC(v25, v24);
    v27 = v26;
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_41:
      swift_bridgeObjectRelease();
LABEL_43:
      swift_allocError();
      v39 = 10;
LABEL_46:
      *v38 = v39;
      swift_willThrow();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(a2 + 16))
      goto LABEL_41;
    swift_bridgeObjectRetain();
    v28 = sub_213C4B3DC(v25, v24);
    if ((v29 & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_43;
    }
    v30 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v28);
    swift_bridgeObjectRelease();
    v31 = *(unsigned int *)(v6 + 32);
    v32 = sub_213C862B0();
    *(_QWORD *)(v32 + 16) = 10;
    *(_OWORD *)(v32 + 48) = 0u;
    *(_OWORD *)(v32 + 64) = 0u;
    *(_OWORD *)(v32 + 80) = 0u;
    *(_OWORD *)(v32 + 96) = 0u;
    *(_OWORD *)(v32 + 32) = 0u;
    v103[1] = 0;
    sub_213C86184();
    espresso_network_query_blob_shape();
    swift_release();
    v97 = v97 & 0xFFFFFFFF00000000 | v31;
    swift_bridgeObjectRelease();
    a1 = v95;
    if (v30 <= 0)
    {
      swift_bridgeObjectRelease();
LABEL_45:
      swift_allocError();
      v39 = 11;
      goto LABEL_46;
    }
    if ((unsigned __int128)(v30 * (__int128)a3) >> 64 != (v30 * a3) >> 63)
      goto LABEL_130;
    if (!*(_QWORD *)(v95 + 16))
      goto LABEL_148;
    v33 = sub_213C4B3DC(v25, v24);
    if ((v34 & 1) == 0)
      goto LABEL_148;
    v35 = *(_QWORD *)(*(_QWORD *)(v95 + 56) + 8 * v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v36 = *(_QWORD *)(v35 + 16);
    swift_bridgeObjectRelease();
    a2 = v93;
    v15 = v99;
    v16 = v101;
    if (v30 * a3 == v36)
    {
      v37 = *(_QWORD *)(v6 + 80);
      if ((unsigned __int128)(v37 * (__int128)v30) >> 64 != (v37 * v30) >> 63)
        goto LABEL_131;
      if (v37 * v30 == 1)
        continue;
    }
    goto LABEL_45;
  }
LABEL_47:
  swift_release();
  v40 = (_QWORD *)sub_213C5F9C0(0, a3, 1);
  if (!a4)
    return swift_release();
  v87 = 0;
  while (2)
  {
    if (v89)
    {
      v41 = v40[2];
      if (v41 >= 2)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v40 = sub_213C5F2AC(v40);
        v42 = 0;
        v43 = v40 + 4;
        do
        {
          v103[0] = 0;
          MEMORY[0x2199C0A3C](v103, 8);
          v45 = (v103[0] * (unsigned __int128)v41) >> 64;
          if (v41 > v103[0] * v41)
          {
            v46 = -(uint64_t)v41 % v41;
            if (v46 > v103[0] * v41)
            {
              do
              {
                v103[0] = 0;
                MEMORY[0x2199C0A3C](v103, 8);
              }
              while (v46 > v103[0] * v41);
              v45 = (v103[0] * (unsigned __int128)v41) >> 64;
            }
          }
          v47 = __OFADD__(v42, v45);
          v48 = v42 + v45;
          if (v47)
            goto LABEL_138;
          a1 = v95;
          if (v42 != v48)
          {
            v49 = v40[2];
            if (v42 >= v49)
              goto LABEL_139;
            if (v48 >= v49)
              goto LABEL_140;
            v50 = v43[v42];
            v51 = v48;
            v43[v42] = v43[v51];
            v43[v51] = v50;
          }
          ++v42;
        }
        while ((uint64_t)v41-- > 2);
      }
    }
    v52 = *(_QWORD *)(v6 + 80);
    if (!v52)
      goto LABEL_142;
    v102 = v40;
    if (a3 == 0x8000000000000000 && v52 == -1)
      goto LABEL_146;
    v53 = a3 / v52;
    if (a3 / v52 < 0)
      goto LABEL_143;
    v54 = v6;
    if (!v53)
    {
LABEL_119:
      ++v87;
      v6 = v54;
      v40 = v102;
      if (v87 == a4)
        return swift_bridgeObjectRelease();
      continue;
    }
    break;
  }
  v55 = 0;
  v100 = v40 + 4;
  v85 = a3 / v52;
  while (2)
  {
    if (v55 == v53)
      goto LABEL_144;
    v86 = v55 + 1;
    v56 = 1 << *(_BYTE *)(a1 + 32);
    if (v56 < 64)
      v57 = ~(-1 << v56);
    else
      v57 = -1;
    v58 = v57 & *(_QWORD *)(a1 + 64);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v59 = 0;
    v88 = (unint64_t)(v56 + 63) >> 6;
LABEL_76:
    if (v58)
    {
      v60 = __clz(__rbit64(v58));
      v61 = (v58 - 1) & v58;
      v62 = v60 | (v59 << 6);
      v63 = v93;
      goto LABEL_96;
    }
    v64 = v59 + 1;
    if (__OFADD__(v59, 1))
      goto LABEL_141;
    v63 = v93;
    if (v64 >= v88)
    {
LABEL_117:
      swift_release();
      if (espresso_plan_execute_sync())
        goto LABEL_134;
      v53 = v85;
      ++v55;
      if (v86 == v85)
        goto LABEL_119;
      continue;
    }
    break;
  }
  v65 = *(_QWORD *)(v92 + 8 * v64);
  ++v59;
  if (!v65)
  {
    v59 = v64 + 1;
    if (v64 + 1 >= v88)
      goto LABEL_117;
    v65 = *(_QWORD *)(v92 + 8 * v59);
    if (!v65)
    {
      v59 = v64 + 2;
      if (v64 + 2 >= v88)
        goto LABEL_117;
      v65 = *(_QWORD *)(v92 + 8 * v59);
      if (!v65)
      {
        v59 = v64 + 3;
        if (v64 + 3 >= v88)
          goto LABEL_117;
        v65 = *(_QWORD *)(v92 + 8 * v59);
        if (!v65)
        {
          v59 = v64 + 4;
          if (v64 + 4 >= v88)
            goto LABEL_117;
          v65 = *(_QWORD *)(v92 + 8 * v59);
          if (!v65)
          {
            v66 = v64 + 5;
            if (v66 >= v88)
              goto LABEL_117;
            v65 = *(_QWORD *)(v92 + 8 * v66);
            if (v65)
            {
              v59 = v66;
              goto LABEL_95;
            }
            while (1)
            {
              v59 = v66 + 1;
              if (__OFADD__(v66, 1))
                break;
              if (v59 >= v88)
                goto LABEL_117;
              v65 = *(_QWORD *)(v92 + 8 * v59);
              ++v66;
              if (v65)
                goto LABEL_95;
            }
LABEL_149:
            __break(1u);
          }
        }
      }
    }
  }
LABEL_95:
  v61 = (v65 - 1) & v65;
  v62 = __clz(__rbit64(v65)) + (v59 << 6);
LABEL_96:
  v67 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v62);
  v69 = *v67;
  v68 = v67[1];
  v70 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v70)
    goto LABEL_152;
  swift_bridgeObjectRetain();
  sub_213C4B3DC(v69, v68);
  if ((v71 & 1) == 0)
    goto LABEL_151;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v72 = *v96;
  if (!*(_QWORD *)(*v96 + 16))
  {
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_149;
  }
  v98 = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v73 = sub_213C4B3DC(v69, v68);
  if ((v74 & 1) == 0)
    goto LABEL_153;
  v75 = *(_QWORD *)(*(_QWORD *)(v72 + 56) + 168 * v73);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v63 + 16))
    goto LABEL_136;
  swift_bridgeObjectRetain();
  v76 = sub_213C4B3DC(v69, v68);
  if ((v77 & 1) == 0)
    goto LABEL_154;
  v78 = *(_QWORD *)(*(_QWORD *)(v63 + 56) + 8 * v76);
  swift_bridgeObjectRelease();
  v79 = *(_QWORD *)(v54 + 80);
  if (v79 < 0)
    goto LABEL_137;
  if (!v79)
  {
LABEL_75:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v95;
    v58 = v98;
    goto LABEL_76;
  }
  v80 = 0;
  while (v79 != v80)
  {
    v81 = *(_QWORD *)(v54 + 80);
    v82 = v55 * v81;
    if ((unsigned __int128)(v55 * (__int128)v81) >> 64 != (v55 * v81) >> 63)
      goto LABEL_123;
    v47 = __OFADD__(v82, v80);
    v83 = v82 + v80;
    if (v47)
      goto LABEL_124;
    if (v78 <= (uint64_t)0xFFFFFFFF7FFFFFFFLL || v78 >= 0x80000000)
      goto LABEL_155;
    if ((v83 & 0x8000000000000000) != 0)
      goto LABEL_125;
    if (v83 >= v102[2])
      goto LABEL_126;
    if ((unsigned __int128)(v78 * (__int128)(uint64_t)v100[v83]) >> 64 != (v78 * v100[v83]) >> 63)
      goto LABEL_127;
    if (!v75)
      goto LABEL_147;
    if ((unsigned __int128)(v78 * (__int128)v80) >> 64 != (v78 * v80) >> 63)
      goto LABEL_128;
    ++v80;
    cblas_scopy_NEWLAPACK();
    if (v79 == v80)
      goto LABEL_75;
  }
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
  __break(1u);
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for EspressoEIRTrainer()
{
  return objc_opt_self();
}

uint64_t method lookup function for EspressoEIRTrainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EspressoEIRTrainer.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 664))();
}

uint64_t dispatch thunk of EspressoEIRTrainer.load(path:functions:inputs:outputs:weights:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of EspressoEIRTrainer.loadInferenceModel(path:inputs:outputs:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of EspressoEIRTrainer.finalize(batchSize:learningRate:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)v2 + 688))(a1, a2 | ((HIDWORD(a2) & 1) << 32));
}

uint64_t dispatch thunk of EspressoEIRTrainer.extractWeights(function:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of EspressoEIRTrainer.extractOutputs(function:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of EspressoEIRTrainer.train(_:featureSizes:numSamples:epochs:shuffleMethod:fullBatch:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of EspressoEIRTrainer.eval(_:featureSizes:numSamples:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t dispatch thunk of EspressoEIRTrainer.unload(functions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

PrivateFederatedLearning::EspressoError_optional __swiftcall EspressoError.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;
  char v3;

  v2 = 0;
  v3 = 5;
  switch(rawValue)
  {
    case 9100:
      goto LABEL_7;
    case 9101:
      v2 = 1;
      goto LABEL_7;
    case 9102:
      v2 = 2;
      goto LABEL_7;
    case 9103:
      v2 = 3;
      goto LABEL_7;
    case 9104:
      v2 = 4;
LABEL_7:
      v3 = v2;
      goto LABEL_8;
    case 9105:
LABEL_8:
      *v1 = v3;
      break;
    case 9106:
      *v1 = 6;
      break;
    case 9107:
      *v1 = 7;
      break;
    case 9108:
      *v1 = 8;
      break;
    case 9109:
      *v1 = 9;
      break;
    case 9110:
      *v1 = 10;
      break;
    case 9111:
      *v1 = 11;
      break;
    case 9112:
      *v1 = 12;
      break;
    case 9113:
      *v1 = 13;
      break;
    case 9114:
      *v1 = 14;
      break;
    case 9115:
      *v1 = 15;
      break;
    case 9116:
      *v1 = 16;
      break;
    case 9117:
      *v1 = 17;
      break;
    case 9118:
      *v1 = 18;
      break;
    case 9119:
      *v1 = 19;
      break;
    case 9120:
      *v1 = 20;
      break;
    case 9121:
      *v1 = 21;
      break;
    case 9122:
      *v1 = 22;
      break;
    default:
      *v1 = 23;
      break;
  }
  return (PrivateFederatedLearning::EspressoError_optional)rawValue;
}

uint64_t EspressoError.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 9100;
}

unint64_t sub_213C68674()
{
  unint64_t result;

  result = qword_254D2F788;
  if (!qword_254D2F788)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for EspressoError, &type metadata for EspressoError);
    atomic_store(result, (unint64_t *)&qword_254D2F788);
  }
  return result;
}

uint64_t sub_213C686B8()
{
  sub_213C867F0();
  sub_213C867FC();
  return sub_213C86808();
}

uint64_t sub_213C68700()
{
  return sub_213C867FC();
}

uint64_t sub_213C68730()
{
  sub_213C867F0();
  sub_213C867FC();
  return sub_213C86808();
}

PrivateFederatedLearning::EspressoError_optional sub_213C68774(Swift::Int *a1)
{
  return EspressoError.init(rawValue:)(*a1);
}

void sub_213C6877C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 9100;
}

uint64_t sub_213C68790()
{
  sub_213C68930();
  sub_213C632A4();
  return sub_213C867E4();
}

uint64_t getEnumTagSinglePayload for EspressoError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEA)
    goto LABEL_17;
  if (a2 + 22 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 22) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 22;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 22;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 22;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x17;
  v8 = v6 - 23;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EspressoError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 22 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 22) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE9)
    return ((uint64_t (*)(void))((char *)&loc_213C688B0 + 4 * byte_213C8A13C[v4]))();
  *a1 = a2 + 22;
  return ((uint64_t (*)(void))((char *)sub_213C688E4 + 4 * byte_213C8A137[v4]))();
}

uint64_t sub_213C688E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C688EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213C688F4);
  return result;
}

uint64_t sub_213C68900(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213C68908);
  *(_BYTE *)result = a2 + 22;
  return result;
}

uint64_t sub_213C6890C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C68914(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EspressoError()
{
  return &type metadata for EspressoError;
}

unint64_t sub_213C68930()
{
  unint64_t result;

  result = qword_254D2F790;
  if (!qword_254D2F790)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for EspressoError, &type metadata for EspressoError);
    atomic_store(result, (unint64_t *)&qword_254D2F790);
  }
  return result;
}

PrivateFederatedLearning::PFLError_optional __swiftcall PFLError.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = rawValue - 40;
  if ((unint64_t)(rawValue - 9000) >= 6)
    v2 = 6;
  *v1 = v2;
  return (PrivateFederatedLearning::PFLError_optional)rawValue;
}

uint64_t PFLError.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 9000;
}

unint64_t sub_213C689A4()
{
  unint64_t result;

  result = qword_254D2F798;
  if (!qword_254D2F798)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for PFLError, &type metadata for PFLError);
    atomic_store(result, (unint64_t *)&qword_254D2F798);
  }
  return result;
}

uint64_t sub_213C689E8()
{
  sub_213C867F0();
  sub_213C867FC();
  return sub_213C86808();
}

uint64_t sub_213C68A30()
{
  return sub_213C867FC();
}

uint64_t sub_213C68A60()
{
  sub_213C867F0();
  sub_213C867FC();
  return sub_213C86808();
}

PrivateFederatedLearning::PFLError_optional sub_213C68AA4(Swift::Int *a1)
{
  return PFLError.init(rawValue:)(*a1);
}

void sub_213C68AAC(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 9000;
}

uint64_t sub_213C68AC0()
{
  sub_213C68C60();
  sub_213C632A4();
  return sub_213C867E4();
}

uint64_t getEnumTagSinglePayload for PFLError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PFLError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_213C68BE0 + 4 * byte_213C8A2B5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_213C68C14 + 4 * byte_213C8A2B0[v4]))();
}

uint64_t sub_213C68C14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C68C1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213C68C24);
  return result;
}

uint64_t sub_213C68C30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213C68C38);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_213C68C3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C68C44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PFLError()
{
  return &type metadata for PFLError;
}

unint64_t sub_213C68C60()
{
  unint64_t result;

  result = qword_254D2F7A0;
  if (!qword_254D2F7A0)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for PFLError, &type metadata for PFLError);
    atomic_store(result, (unint64_t *)&qword_254D2F7A0);
  }
  return result;
}

void PFLTaskDiscoveryReachLocation.description.getter()
{
  __asm { BR              X10 }
}

unint64_t sub_213C68CEC()
{
  sub_213C8652C();
  swift_bridgeObjectRelease();
  return 0xD00000000000001CLL;
}

uint64_t PFLTaskDiscovery.__allocating_init(for:useCase:taskPreferences:allowsCellularAccess:customTargeting:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;

  v16 = swift_allocObject();
  PFLTaskDiscovery.init(for:useCase:taskPreferences:allowsCellularAccess:customTargeting:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

void sub_213C68F0C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_213C68F54()
{
  sub_213C861CC();
  return swift_bridgeObjectRelease();
}

void sub_213C69014(uint64_t a1, char a2)
{
  sub_213C867F0();
  __asm { BR              X10 }
}

uint64_t sub_213C69060()
{
  sub_213C861CC();
  swift_bridgeObjectRelease();
  return sub_213C86808();
}

void sub_213C690FC(uint64_t a1, char a2)
{
  sub_213C867F0();
  __asm { BR              X10 }
}

uint64_t sub_213C6914C()
{
  sub_213C861CC();
  swift_bridgeObjectRelease();
  return sub_213C86808();
}

uint64_t sub_213C69224()
{
  sub_213C867F0();
  sub_213C861CC();
  swift_bridgeObjectRelease();
  return sub_213C86808();
}

void sub_213C692D4(uint64_t a1, char a2)
{
  sub_213C867F0();
  __asm { BR              X10 }
}

uint64_t sub_213C69328()
{
  sub_213C861CC();
  swift_bridgeObjectRelease();
  return sub_213C86808();
}

PrivateFederatedLearning::PFLTaskDiscoveryReachLocation_optional __swiftcall PFLTaskDiscoveryReachLocation.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = rawValue - 100;
  if ((unint64_t)(rawValue - 100) >= 0xA)
    v2 = 10;
  *v1 = v2;
  return (PrivateFederatedLearning::PFLTaskDiscoveryReachLocation_optional)rawValue;
}

void *static PFLTaskDiscoveryReachLocation.allCases.getter()
{
  return &unk_24D0D7C28;
}

uint64_t PFLTaskDiscoveryReachLocation.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 100;
}

uint64_t sub_213C6942C()
{
  sub_213C867F0();
  sub_213C867FC();
  return sub_213C86808();
}

uint64_t sub_213C69470()
{
  return sub_213C867FC();
}

uint64_t sub_213C6949C()
{
  sub_213C867F0();
  sub_213C867FC();
  return sub_213C86808();
}

PrivateFederatedLearning::PFLTaskDiscoveryReachLocation_optional sub_213C694DC(Swift::Int *a1)
{
  return PFLTaskDiscoveryReachLocation.init(rawValue:)(*a1);
}

void sub_213C694E4(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 100;
}

void sub_213C694F8(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0D7C28;
}

void sub_213C69508(char *a1)
{
  sub_213C7FA5C(*a1);
}

void sub_213C69514()
{
  char *v0;

  sub_213C690FC(0, *v0);
}

void sub_213C69520()
{
  __asm { BR              X10 }
}

uint64_t sub_213C69560()
{
  sub_213C861CC();
  return swift_bridgeObjectRelease();
}

void sub_213C69624(uint64_t a1)
{
  char *v1;

  sub_213C690FC(a1, *v1);
}

uint64_t sub_213C6962C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_213C70D1C();
  *a1 = result;
  return result;
}

uint64_t sub_213C69658()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_213C6968C + 4 * byte_213C8A3FD[*v0]))();
}

void sub_213C6968C(_QWORD *a1@<X8>)
{
  *a1 = 0x61435F4C4D646F44;
  a1[1] = 0xEB00000000797272;
}

void sub_213C696B0(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "DodML_Staging");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_213C696D8(_QWORD *a1@<X8>)
{
  *a1 = 0x646F72505F4B43;
  a1[1] = 0xE700000000000000;
}

void sub_213C696F4(_QWORD *a1@<X8>)
{
  *a1 = 0x79727261435F4B43;
  a1[1] = 0xE800000000000000;
}

void sub_213C69710(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x69676174535F4B43;
  a1[1] = v1 + 767;
}

void sub_213C6972C(_QWORD *a1@<X8>)
{
  *a1 = 0x69445F6C61636F4CLL;
  a1[1] = 0xEF79726F74636572;
}

uint64_t sub_213C69754()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213C69788 + 4 * byte_213C8A404[*v0]))(0x72505F4C4D646F44, 0xEA0000000000646FLL);
}

uint64_t sub_213C69788()
{
  return 0x61435F4C4D646F44;
}

uint64_t sub_213C697A8()
{
  return 0x74535F4C4D646F44;
}

uint64_t sub_213C697CC()
{
  return 0x646F72505F4B43;
}

uint64_t sub_213C697E4()
{
  return 0x79727261435F4B43;
}

uint64_t sub_213C697FC()
{
  return 0x69676174535F4B43;
}

uint64_t sub_213C69814()
{
  return 0x69445F6C61636F4CLL;
}

uint64_t sub_213C69838@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_213C70D1C();
  *a1 = result;
  return result;
}

void sub_213C6985C(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_213C69868()
{
  sub_213C6F838();
  return sub_213C86850();
}

uint64_t sub_213C69890()
{
  sub_213C6F838();
  return sub_213C8685C();
}

uint64_t PFLTaskSource.nonprodSource.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  unint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = v1[1];
  if (v2 == 3)
  {
    v3 = xmmword_213C8AF20;
    goto LABEL_5;
  }
  if (!v2)
  {
    v3 = xmmword_213C8AF30;
LABEL_5:
    *(_OWORD *)a1 = v3;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    return result;
  }
  v4 = v1[2];
  v5 = v1[3];
  v6 = *v1;
  *(_QWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  return sub_213C3B778(v6, v2);
}

uint64_t sub_213C698FC()
{
  return 0;
}

void sub_213C69908(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_213C69914()
{
  sub_213C6F904();
  return sub_213C86850();
}

uint64_t sub_213C6993C()
{
  sub_213C6F904();
  return sub_213C8685C();
}

uint64_t sub_213C69964@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_213C69990()
{
  sub_213C6F948();
  return sub_213C86850();
}

uint64_t sub_213C699B8()
{
  sub_213C6F948();
  return sub_213C8685C();
}

uint64_t sub_213C699E0()
{
  sub_213C6F8C0();
  return sub_213C86850();
}

uint64_t sub_213C69A08()
{
  sub_213C6F8C0();
  return sub_213C8685C();
}

uint64_t sub_213C69A30()
{
  sub_213C6F9D0();
  return sub_213C86850();
}

uint64_t sub_213C69A58()
{
  sub_213C6F9D0();
  return sub_213C8685C();
}

uint64_t sub_213C69A80()
{
  sub_213C6FA14();
  return sub_213C86850();
}

uint64_t sub_213C69AA8()
{
  sub_213C6FA14();
  return sub_213C8685C();
}

uint64_t sub_213C69AD0()
{
  sub_213C6F98C();
  return sub_213C86850();
}

uint64_t sub_213C69AF8()
{
  sub_213C6F98C();
  return sub_213C8685C();
}

uint64_t sub_213C69B20()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x6150657069636572;
}

uint64_t sub_213C69B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213C70D64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213C69B88()
{
  sub_213C6F87C();
  return sub_213C86850();
}

uint64_t sub_213C69BB0()
{
  sub_213C6F87C();
  return sub_213C8685C();
}

uint64_t PFLTaskSource.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;

  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F7A8);
  v49 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v53 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F7B0);
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v50 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F7B8);
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v46 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F7C0);
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v43 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F7C8);
  v41 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v40 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F7D0);
  v38 = *(_QWORD *)(v12 - 8);
  v39 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v36 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F7D8);
  v14 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F7E0);
  v55 = *(_QWORD *)(v17 - 8);
  v56 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = v1[1];
  v35[1] = *v1;
  v20 = v1[3];
  v21 = a1[3];
  v22 = a1;
  v23 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(v22, v21);
  sub_213C6F838();
  sub_213C86844();
  switch(v19)
  {
    case 0:
      v58 = 0;
      sub_213C6FA14();
      v24 = v56;
      sub_213C866C4();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v37);
      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v23, v24);
    case 1:
      v59 = 1;
      sub_213C6F9D0();
      v31 = v36;
      v32 = v56;
      sub_213C866C4();
      v34 = v38;
      v33 = v39;
      goto LABEL_11;
    case 2:
      v60 = 2;
      sub_213C6F98C();
      v31 = v40;
      v32 = v56;
      sub_213C866C4();
      v34 = v41;
      v33 = v42;
      goto LABEL_11;
    case 3:
      v61 = 3;
      sub_213C6F948();
      v31 = v43;
      v32 = v56;
      sub_213C866C4();
      v34 = v44;
      v33 = v45;
      goto LABEL_11;
    case 4:
      v62 = 4;
      sub_213C6F904();
      v31 = v46;
      v32 = v56;
      sub_213C866C4();
      v34 = v47;
      v33 = v48;
      goto LABEL_11;
    case 5:
      v63 = 5;
      sub_213C6F8C0();
      v31 = v50;
      v32 = v56;
      sub_213C866C4();
      v34 = v51;
      v33 = v52;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
      result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v23, v32);
      break;
    default:
      v52 = v20;
      v26 = v49;
      v66 = 6;
      sub_213C6F87C();
      v27 = v53;
      v28 = v56;
      sub_213C866C4();
      v65 = 0;
      v29 = v54;
      v30 = v57;
      sub_213C866E8();
      if (!v30)
      {
        v64 = 1;
        sub_213C866E8();
      }
      (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v29);
      result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v23, v28);
      break;
  }
  return result;
}

uint64_t PFLTaskSource.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;

  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F828);
  v4 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  v40 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v46 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F830);
  v33 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F838);
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v45 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F840);
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v44 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F848);
  v31 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v43 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F850);
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F858);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F860);
  v17 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v48 = a1;
  __swift_project_boxed_opaque_existential_0Tm(a1, v20);
  sub_213C6F838();
  v21 = v49;
  sub_213C8682C();
  if (!v21)
  {
    v28[0] = v16;
    v28[1] = v15;
    v28[2] = v14;
    v49 = v17;
    v22 = sub_213C866B8();
    if (*(_QWORD *)(v22 + 16) == 1)
      __asm { BR              X10 }
    v23 = sub_213C86568();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F868);
    *v25 = &type metadata for PFLTaskSource;
    v26 = v47;
    sub_213C8664C();
    sub_213C8655C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v26);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
}

uint64_t sub_213C6A944@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PFLTaskSource.init(from:)(a1, a2);
}

uint64_t sub_213C6A958(_QWORD *a1)
{
  return PFLTaskSource.encode(to:)(a1);
}

uint64_t Dictionary<>.parameter<A>(for:default:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char v19;
  int v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;

  v23 = a6;
  v11 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_213C86478();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v22 - v16;
  if (*(_QWORD *)(a4 + 16))
  {
    swift_bridgeObjectRetain();
    v18 = sub_213C4B3DC(a1, a2);
    if ((v19 & 1) != 0)
    {
      sub_213C35070(*(_QWORD *)(a4 + 56) + 32 * v18, (uint64_t)&v24);
    }
    else
    {
      v24 = 0u;
      v25 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBA0);
  v20 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, v20 ^ 1u, 1, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, a5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v17, 1, a5) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v23, v13, a5);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a5);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(v23, v17, a5);
  }
}

uint64_t sub_213C6AB34()
{
  return swift_retain();
}

uint64_t PFLTaskDiscovery.init(for:useCase:taskPreferences:allowsCellularAccess:customTargeting:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  BOOL v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *inited;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  __int128 v61[3];

  v9 = v8;
  v51 = a8;
  v50 = a7;
  LODWORD(v47) = a6;
  v15 = type metadata accessor for PFLTaskPreferences(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)(v9 + 120) = 0;
  *(_OWORD *)(v9 + 104) = 0u;
  *(_OWORD *)(v9 + 88) = 0u;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_numDeliveries) = 0;
  v18 = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_pm;
  type metadata accessor for PerformanceMeasure();
  v19 = swift_allocObject();
  v20 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v9 + v18) = v19;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_policyDownloadTimeSeconds) = 0;
  *(_QWORD *)(v19 + 16) = v20;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskDownloadTimeSeconds) = 0;
  v21 = (uint64_t *)(v9 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_customTargeting);
  *v21 = 0;
  v21[1] = 0;
  v48 = v21;
  v52 = a1;
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 40) = a4;
  v22 = *((_BYTE *)a5 + *(int *)(v15 + 24)) == 1;
  v49 = a5;
  if (v22)
  {
    v23 = (uint64_t *)((char *)a5 + *(int *)(v15 + 20));
    v25 = *v23;
    v26 = v23[1];
    v28 = v23[2];
    v27 = v23[3];
    sub_213C6FAAC((uint64_t)a5, (uint64_t)v17);
    if (v26 == 6)
    {
      v25 = *v17;
      v28 = v17[1];
      v24 = v17[2];
      v27 = v17[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_213C3B778(v25, v28);
      sub_213C44AB0((uint64_t)v17);
      if (v28 == 3)
      {
        v25 = 0;
        v28 = 0;
        v27 = 0;
        v26 = 4;
      }
      else if (v28)
      {
        v29 = v24;
        v26 = v28;
        v28 = v29;
      }
      else
      {
        v26 = 1;
        v25 = 0;
        v27 = 0;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_213C6FAF0(v25, v26);
      sub_213C44AB0((uint64_t)v17);
    }
  }
  else
  {
    v25 = *a5;
    v26 = a5[1];
    v28 = a5[2];
    v27 = a5[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_213C3B778(v25, v26);
  }
  v57 = v25;
  v58 = v26;
  v59 = v28;
  v60 = v27;
  sub_213C6B138(&v57, a3, a4, v47 & 1, (uint64_t *)v61);
  swift_bridgeObjectRelease();
  sub_213C3B744(v25, v26);
  sub_213C3AA48(v61, v9 + 48);
  type metadata accessor for PopulationSegmentation();
  inited = (_QWORD *)swift_initStackObject();
  v31 = objc_allocWithZone(MEMORY[0x24BDD1888]);
  v32 = (void *)sub_213C86124();
  v33 = objc_msgSend(v31, sel_initWithStoreIdentifier_type_, v32, 1);

  v34 = sub_213C3B5F8(0, &qword_254D2DE10);
  inited[2] = v33;
  v47 = (uint64_t)(inited + 2);
  inited[5] = v34;
  inited[6] = &off_24D0D85A8;
  v35 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v36 = sub_213C3B5F8(0, &qword_254D2DE18);
  inited[7] = v35;
  inited[10] = v36;
  inited[11] = &off_24D0D85C0;
  *(_QWORD *)&v61[0] = 0x2D676553706F50;
  *((_QWORD *)&v61[0] + 1) = 0xE700000000000000;
  v57 = v52;
  v58 = a2;
  v55 = 46;
  v56 = 0xE100000000000000;
  v53 = 95;
  v54 = 0xE100000000000000;
  sub_213C3B020();
  sub_213C864B4();
  sub_213C861F0();
  swift_bridgeObjectRelease();
  v37 = sub_213C4A9C8(*(uint64_t *)&v61[0], *((uint64_t *)&v61[0] + 1));
  v39 = v38;
  swift_bridgeObjectRelease();
  if (v39)
  {
    swift_bridgeObjectRelease();
    v40 = (uint64_t)v49;
  }
  else
  {
    v41 = sub_213C6F588(0x64uLL) + 1;
    v40 = (uint64_t)v49;
    if (v41 <= 100)
    {
      v42 = v52;
      if (v41 < 91)
      {
        if (v41 <= 80)
          v37 = 0x6E69617274;
        else
          v37 = 7102838;
        if (v41 <= 80)
          v39 = 0xE500000000000000;
        else
          v39 = 0xE300000000000000;
      }
      else
      {
        v39 = 0xE400000000000000;
        v37 = 1953719668;
      }
    }
    else
    {
      v39 = 0xEB00000000646572;
      v37 = 0x6574736575716573;
      v42 = v52;
    }
    *(_QWORD *)&v61[0] = 0x2D676553706F50;
    *((_QWORD *)&v61[0] + 1) = 0xE700000000000000;
    v57 = v42;
    v58 = a2;
    v55 = 46;
    v56 = 0xE100000000000000;
    v53 = 95;
    v54 = 0xE100000000000000;
    sub_213C864B4();
    sub_213C861F0();
    swift_bridgeObjectRelease();
    sub_213C4A8DC(*(uint64_t *)&v61[0], *((uint64_t *)&v61[0] + 1), v37, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_0(v47);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 7));
  *(_QWORD *)(v9 + 128) = v37;
  *(_QWORD *)(v9 + 136) = v39;
  sub_213C6FA58(v40, v9 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskPreferences);
  v43 = v48;
  v44 = *v48;
  v45 = v51;
  *v48 = v50;
  v43[1] = v45;
  sub_213C6FA9C(v44);
  return v9;
}

uint64_t sub_213C6B138@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t result;
  _UNKNOWN **v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v8 = *a1;
  v7 = a1[1];
  v10 = a1[2];
  v9 = a1[3];
  if (v7 < 3)
  {
    *(_QWORD *)&v19 = *a1;
    *((_QWORD *)&v19 + 1) = v7;
    v20 = v10;
    v21 = v9;
    v16 = type metadata accessor for PFLDodMLTaskDownloader();
    swift_allocObject();
    sub_213C3B778(v8, v7);
    result = sub_213C4FC14(&v19, a4 & 1);
    v15 = &off_24D0D8838;
    a5[3] = v16;
    goto LABEL_5;
  }
  if (v7 - 3 < 3)
  {
    *(_QWORD *)&v19 = *a1;
    *((_QWORD *)&v19 + 1) = v7;
    v20 = v10;
    v21 = v9;
    v13 = type metadata accessor for PFLCKTaskDownloader();
    swift_allocObject();
    sub_213C3B778(v8, v7);
    swift_bridgeObjectRetain();
    result = (uint64_t)sub_213C36D18((uint64_t *)&v19, a2, a3, a4 & 1);
    v15 = &off_24D0D8148;
    a5[3] = v13;
LABEL_5:
    a5[4] = (uint64_t)v15;
    *a5 = result;
    return result;
  }
  v17 = type metadata accessor for PFLLocalTaskDownloader();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v8;
  v18[3] = v7;
  v18[4] = v10;
  v18[5] = v9;
  a5[3] = v17;
  a5[4] = (uint64_t)&off_24D0D9048;
  *a5 = (uint64_t)v18;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_213C6B2C0()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_numDeliveries);
  v2 = __OFSUB__(v1, 1);
  v3 = v1 - 1;
  if (v2)
    __break(1u);
  else
    *(_QWORD *)(v0 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_numDeliveries) = v3;
}

uint64_t sub_213C6B2E0()
{
  uint64_t v0;
  _QWORD *v1;

  v1[85] = v0;
  v1[86] = type metadata accessor for PFLTaskPreferences(0);
  v1[87] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213C6B33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45[17];
  char v46;

  v1 = *(_QWORD *)(v0 + 680) + 88;
  swift_beginAccess();
  sub_213C6FB00(v1, v0 + 16);
  v2 = *(_QWORD *)(v0 + 40);
  sub_213C6FB48(v0 + 16);
  if (v2)
  {
    sub_213C6FB00(*(_QWORD *)(v0 + 680) + 88, v0 + 216);
    if (*(_QWORD *)(v0 + 240))
    {
      sub_213C3AA48((__int128 *)(v0 + 216), v0 + 176);
      v3 = *(_QWORD *)(v0 + 200);
      v4 = __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 176), v3);
      v5 = *(_QWORD *)(v3 - 8);
      v6 = swift_task_alloc();
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v5 + 16))(v6, v4, v3);
      *(_QWORD *)(v0 + 280) = swift_getAssociatedTypeWitness();
      *(_QWORD *)(v0 + 288) = swift_getAssociatedConformanceWitness();
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 256));
      sub_213C8625C();
      swift_task_dealloc();
      *(_QWORD *)(v0 + 792) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_numDeliveries;
      *(_QWORD *)(v0 + 800) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskPreferences;
      *(_QWORD *)(v0 + 808) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_pm;
      *(_QWORD *)(v0 + 816) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskDownloadTimeSeconds;
      *(_QWORD *)(v0 + 824) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_customTargeting;
      __swift_mutable_project_boxed_opaque_existential_1(v0 + 256, *(_QWORD *)(v0 + 280));
      sub_213C86484();
      if (*(_QWORD *)(v0 + 320))
      {
        v7 = *(_QWORD *)(v0 + 680);
        v8 = *(_QWORD *)(v0 + 792);
        sub_213C3AA48((__int128 *)(v0 + 296), v0 + 336);
        v9 = *(_QWORD *)(v7 + v8);
        v10 = *(_QWORD *)(v0 + 200);
        v11 = *(_QWORD *)(v0 + 208);
        __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 176), v10);
        if (v9 < (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11))
        {
          v12 = *(_QWORD *)(v0 + 696);
          v43 = *(_QWORD *)(v0 + 688);
          v13 = *(_QWORD **)(v0 + 680);
          v14 = (uint64_t)v13 + *(_QWORD *)(v0 + 800);
          *(_QWORD *)(v0 + 544) = 0;
          *(_QWORD *)(v0 + 552) = 0xE000000000000000;
          sub_213C8652C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v0 + 832) = v13[3];
          v15 = *(_QWORD *)(v0 + 360);
          v16 = *(_QWORD *)(v0 + 368);
          __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v15);
          v17 = *(void (**)(uint64_t, uint64_t))(v16 + 16);
          swift_bridgeObjectRetain();
          v17(v15, v16);
          *(_QWORD *)(v0 + 840) = v18;
          *(_QWORD *)(v0 + 848) = v13[5];
          v20 = *(_QWORD *)(v0 + 360);
          v19 = *(_QWORD *)(v0 + 368);
          swift_bridgeObjectRetain();
          __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v20);
          v21 = v13[16];
          v22 = v13[17];
          sub_213C6FAAC(v14, v12);
          if (*(_BYTE *)(v12 + *(int *)(v43 + 24)) == 1
            && (v23 = *(_QWORD *)(*(_QWORD *)(v0 + 696) + *(int *)(*(_QWORD *)(v0 + 688) + 20) + 32)) != 0)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_bridgeObjectRetain();
            v23 = sub_213C3BD8C(MEMORY[0x24BEE4AF8]);
          }
          sub_213C44AB0(*(_QWORD *)(v0 + 696));
          (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v19 + 8))(v21, v22, v23, v20, v19);
          *(_QWORD *)(v0 + 856) = 0;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v44 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
          v42 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 864) = v42;
          *v42 = v0;
          v42[1] = sub_213C6C76C;
          v45[14] = 0;
          v45[15] = 0;
          v46 = 1;
          v45[16] = 0xE000000000000000;
          __asm { BR              X8; sub_213C71FF0 }
        }
        __swift_destroy_boxed_opaque_existential_0(v0 + 336);
      }
      __swift_destroy_boxed_opaque_existential_0(v0 + 256);
      __swift_destroy_boxed_opaque_existential_0(v0 + 176);
    }
    else
    {
      sub_213C6FB48(v0 + 216);
    }
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 680);
    sub_213C44B0C(v24 + 48, v0 + 96);
    v25 = *(_QWORD *)(v0 + 120);
    v26 = *(_QWORD *)(v0 + 128);
    __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 96), v25);
    v27 = *(_QWORD *)(v24 + 16);
    v28 = *(_QWORD *)(v24 + 24);
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 16);
    swift_bridgeObjectRetain();
    v30 = v29(v27, v28, v25, v26);
    v32 = v31;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 704) = v30;
    *(_QWORD *)(v0 + 712) = v32;
    __swift_destroy_boxed_opaque_existential_0(v0 + 96);
    if (qword_254D2D960 != -1)
      swift_once();
    v33 = sub_213C86094();
    *(_QWORD *)(v0 + 720) = __swift_project_value_buffer(v33, (uint64_t)qword_254D2FF28);
    swift_bridgeObjectRetain_n();
    v34 = sub_213C8607C();
    v35 = sub_213C863F4();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v45[0] = v37;
      *(_DWORD *)v36 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 640) = sub_213C42558(v30, v32, v45);
      sub_213C86490();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_213C25000, v34, v35, "Start download policy %s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v37, -1, -1);
      MEMORY[0x2199C0A30](v36, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v38 = *(_QWORD *)(v0 + 680);
    v45[0] = 0;
    v45[1] = 0xE000000000000000;
    sub_213C8652C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 728) = *(_QWORD *)(v24 + 16);
    *(_QWORD *)(v0 + 736) = *(_QWORD *)(v24 + 24);
    *(_QWORD *)(v0 + 744) = *(_QWORD *)(v38 + 32);
    *(_QWORD *)(v0 + 752) = *(_QWORD *)(v38 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 760) = v39;
    *v39 = v0;
    v39[1] = sub_213C6BA60;
    v40 = *(_QWORD *)(v0 + 680);
    v39[21] = v0 + 136;
    v39[22] = v40;
    return swift_task_switch();
  }
}

uint64_t sub_213C6BA60()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 768) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_213C6BAC4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char *v3;

  v1 = *(_QWORD *)(v0 + 680) + 88;
  sub_213C6FB88(v0 + 136, v0 + 56);
  swift_beginAccess();
  sub_213C6FBD0(v0 + 56, v1);
  swift_endAccess();
  v3 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 776) = v2;
  *v2 = v0;
  v2[1] = sub_213C6BBAC;
  __asm { BR              X8; sub_213C71FF0 }
}

uint64_t sub_213C6BBAC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C6BC00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 768);
  sub_213C6FB00(*(_QWORD *)(v0 + 680) + 88, v0 + 216);
  if (*(_QWORD *)(v0 + 240))
  {
    sub_213C3AA48((__int128 *)(v0 + 216), v0 + 176);
    v2 = *(_QWORD *)(v0 + 200);
    v3 = __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 176), v2);
    v4 = *(_QWORD *)(v2 - 8);
    v5 = swift_task_alloc();
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v4 + 16))(v5, v3, v2);
    *(_QWORD *)(v0 + 280) = swift_getAssociatedTypeWitness();
    *(_QWORD *)(v0 + 288) = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 256));
    sub_213C8625C();
    swift_task_dealloc();
    *(_QWORD *)(v0 + 792) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_numDeliveries;
    *(_QWORD *)(v0 + 800) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskPreferences;
    *(_QWORD *)(v0 + 808) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_pm;
    *(_QWORD *)(v0 + 816) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskDownloadTimeSeconds;
    *(_QWORD *)(v0 + 824) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_customTargeting;
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 256, *(_QWORD *)(v0 + 280));
    sub_213C86484();
    if (*(_QWORD *)(v0 + 320))
    {
      v6 = *(_QWORD *)(v0 + 680);
      v7 = *(_QWORD *)(v0 + 792);
      sub_213C3AA48((__int128 *)(v0 + 296), v0 + 336);
      v8 = *(_QWORD *)(v6 + v7);
      v9 = *(_QWORD *)(v0 + 200);
      v10 = *(_QWORD *)(v0 + 208);
      __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 176), v9);
      if (v8 < (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10))
      {
        v11 = *(_QWORD *)(v0 + 696);
        v26 = *(_QWORD *)(v0 + 688);
        v27 = v1;
        v12 = *(_QWORD **)(v0 + 680);
        v13 = (uint64_t)v12 + *(_QWORD *)(v0 + 800);
        *(_QWORD *)(v0 + 544) = 0;
        *(_QWORD *)(v0 + 552) = 0xE000000000000000;
        sub_213C8652C();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 832) = v12[3];
        v14 = *(_QWORD *)(v0 + 360);
        v15 = *(_QWORD *)(v0 + 368);
        __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v14);
        v16 = *(void (**)(uint64_t, uint64_t))(v15 + 16);
        swift_bridgeObjectRetain();
        v16(v14, v15);
        *(_QWORD *)(v0 + 840) = v17;
        *(_QWORD *)(v0 + 848) = v12[5];
        v19 = *(_QWORD *)(v0 + 360);
        v18 = *(_QWORD *)(v0 + 368);
        swift_bridgeObjectRetain();
        __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v19);
        v20 = v12[16];
        v21 = v12[17];
        sub_213C6FAAC(v13, v11);
        if (*(_BYTE *)(v11 + *(int *)(v26 + 24)) == 1
          && (v22 = *(_QWORD *)(*(_QWORD *)(v0 + 696) + *(int *)(*(_QWORD *)(v0 + 688) + 20) + 32)) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_bridgeObjectRetain();
          v22 = sub_213C3BD8C(MEMORY[0x24BEE4AF8]);
        }
        sub_213C44AB0(*(_QWORD *)(v0 + 696));
        (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v18 + 8))(v20, v21, v22, v19, v18);
        *(_QWORD *)(v0 + 856) = v27;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v27)
        {
          v28 = (char *)&dword_254D2FB98 + dword_254D2FB98;
          v24 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 904) = v24;
          *v24 = v0;
          v24[1] = sub_213C6C988;
          __asm { BR              X8; sub_213C7243C }
        }
        v29 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
        v25 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 864) = v25;
        *v25 = v0;
        v25[1] = sub_213C6C76C;
        __asm { BR              X8; sub_213C71FF0 }
      }
      __swift_destroy_boxed_opaque_existential_0(v0 + 336);
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 256);
    __swift_destroy_boxed_opaque_existential_0(v0 + 176);
  }
  else
  {
    sub_213C6FB48(v0 + 216);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_213C6C094()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;

  v2 = (char *)&dword_254D2FB98 + dword_254D2FB98;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 784) = v1;
  *v1 = v0;
  v1[1] = sub_213C6C12C;
  __asm { BR              X8; sub_213C7243C }
}

uint64_t sub_213C6C12C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C6C180()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v35;
  uint64_t v36;
  char *v37;

  v1 = (__int128 *)(v0 + 216);
  v2 = *(void **)(v0 + 768);
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v2;
  v4 = v2;
  v5 = sub_213C8607C();
  v6 = sub_213C86400();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 768);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 656) = v11;
    v1 = (__int128 *)(v0 + 216);
    sub_213C86490();
    *v9 = v11;

    _os_log_impl(&dword_213C25000, v5, v6, "Failed to download policy with error %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v9, -1, -1);
    MEMORY[0x2199C0A30](v8, -1, -1);

  }
  else
  {
    v12 = *(void **)(v0 + 768);

  }
  sub_213C6FB00(*(_QWORD *)(v0 + 680) + 88, (uint64_t)v1);
  if (*(_QWORD *)(v0 + 240))
  {
    sub_213C3AA48(v1, v0 + 176);
    v13 = *(_QWORD *)(v0 + 200);
    v14 = __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 176), v13);
    v15 = *(_QWORD *)(v13 - 8);
    v16 = swift_task_alloc();
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v15 + 16))(v16, v14, v13);
    *(_QWORD *)(v0 + 280) = swift_getAssociatedTypeWitness();
    *(_QWORD *)(v0 + 288) = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 256));
    sub_213C8625C();
    swift_task_dealloc();
    *(_QWORD *)(v0 + 792) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_numDeliveries;
    *(_QWORD *)(v0 + 800) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskPreferences;
    *(_QWORD *)(v0 + 808) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_pm;
    *(_QWORD *)(v0 + 816) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskDownloadTimeSeconds;
    *(_QWORD *)(v0 + 824) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_customTargeting;
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 256, *(_QWORD *)(v0 + 280));
    sub_213C86484();
    if (*(_QWORD *)(v0 + 320))
    {
      v17 = *(_QWORD *)(v0 + 680);
      v18 = *(_QWORD *)(v0 + 792);
      sub_213C3AA48((__int128 *)(v0 + 296), v0 + 336);
      v19 = *(_QWORD *)(v17 + v18);
      v20 = *(_QWORD *)(v0 + 200);
      v21 = *(_QWORD *)(v0 + 208);
      __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 176), v20);
      if (v19 < (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 32))(v20, v21))
      {
        v22 = *(_QWORD *)(v0 + 696);
        v36 = *(_QWORD *)(v0 + 688);
        v23 = *(_QWORD **)(v0 + 680);
        v24 = (uint64_t)v23 + *(_QWORD *)(v0 + 800);
        *(_QWORD *)(v0 + 544) = 0;
        *(_QWORD *)(v0 + 552) = 0xE000000000000000;
        sub_213C8652C();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 832) = v23[3];
        v25 = *(_QWORD *)(v0 + 360);
        v26 = *(_QWORD *)(v0 + 368);
        __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v25);
        v27 = *(void (**)(uint64_t, uint64_t))(v26 + 16);
        swift_bridgeObjectRetain();
        v27(v25, v26);
        *(_QWORD *)(v0 + 840) = v28;
        *(_QWORD *)(v0 + 848) = v23[5];
        v30 = *(_QWORD *)(v0 + 360);
        v29 = *(_QWORD *)(v0 + 368);
        swift_bridgeObjectRetain();
        __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v30);
        v31 = v23[16];
        v32 = v23[17];
        sub_213C6FAAC(v24, v22);
        if (*(_BYTE *)(v22 + *(int *)(v36 + 24)) == 1
          && (v33 = *(_QWORD *)(*(_QWORD *)(v0 + 696) + *(int *)(*(_QWORD *)(v0 + 688) + 20) + 32)) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_bridgeObjectRetain();
          v33 = sub_213C3BD8C(MEMORY[0x24BEE4AF8]);
        }
        sub_213C44AB0(*(_QWORD *)(v0 + 696));
        (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v29 + 8))(v31, v32, v33, v30, v29);
        *(_QWORD *)(v0 + 856) = 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v37 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
        v35 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 864) = v35;
        *v35 = v0;
        v35[1] = sub_213C6C76C;
        __asm { BR              X8; sub_213C71FF0 }
      }
      __swift_destroy_boxed_opaque_existential_0(v0 + 336);
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 256);
    __swift_destroy_boxed_opaque_existential_0(v0 + 176);
  }
  else
  {
    sub_213C6FB48((uint64_t)v1);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_213C6C76C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C6C7C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double Current;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);
  uint64_t v11;

  v1 = v0[101];
  v2 = v0[85];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 + v1);
  v0[109] = v3;
  Current = CFAbsoluteTimeGetCurrent();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 + 16) = 0x8000000000000000;
  sub_213C4B824(0x6E776F446B736154, 0xEC00000064616F6CLL, isUniquelyReferenced_nonNull_native, Current);
  *(_QWORD *)(v3 + 16) = v11;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_213C44B0C(v2 + 48, (uint64_t)(v0 + 47));
  v6 = v0[50];
  v7 = v0[51];
  __swift_project_boxed_opaque_existential_0Tm(v0 + 47, v6);
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v7 + 24) + *(_QWORD *)(v7 + 24));
  v8 = (_QWORD *)swift_task_alloc();
  v0[110] = v8;
  *v8 = v0;
  v8[1] = sub_213C6C918;
  return v10(v0 + 42, v6, v7);
}

uint64_t sub_213C6C918(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 888) = a1;
  *(_QWORD *)(v3 + 896) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C6C988()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C6C9DC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v20;
  uint64_t v21;
  char *v22;

  v1 = *(void **)(v0 + 856);
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0(v0 + 336);
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 256, *(_QWORD *)(v0 + 280));
  sub_213C86484();
  if (*(_QWORD *)(v0 + 320))
  {
    v2 = *(_QWORD *)(v0 + 792);
    v3 = *(_QWORD *)(v0 + 680);
    sub_213C3AA48((__int128 *)(v0 + 296), v0 + 336);
    v4 = *(_QWORD *)(v3 + v2);
    v5 = *(_QWORD *)(v0 + 200);
    v6 = *(_QWORD *)(v0 + 208);
    __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 176), v5);
    if (v4 < (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6))
    {
      v7 = *(_QWORD *)(v0 + 696);
      v21 = *(_QWORD *)(v0 + 688);
      v8 = *(_QWORD **)(v0 + 680);
      v9 = (uint64_t)v8 + *(_QWORD *)(v0 + 800);
      *(_QWORD *)(v0 + 544) = 0;
      *(_QWORD *)(v0 + 552) = 0xE000000000000000;
      sub_213C8652C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 832) = v8[3];
      v10 = *(_QWORD *)(v0 + 360);
      v11 = *(_QWORD *)(v0 + 368);
      __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v10);
      v12 = *(void (**)(uint64_t, uint64_t))(v11 + 16);
      swift_bridgeObjectRetain();
      v12(v10, v11);
      *(_QWORD *)(v0 + 840) = v13;
      *(_QWORD *)(v0 + 848) = v8[5];
      v14 = *(_QWORD *)(v0 + 360);
      v15 = *(_QWORD *)(v0 + 368);
      swift_bridgeObjectRetain();
      __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v14);
      v16 = v8[16];
      v17 = v8[17];
      sub_213C6FAAC(v9, v7);
      if (*(_BYTE *)(v7 + *(int *)(v21 + 24)) == 1
        && (v18 = *(_QWORD *)(*(_QWORD *)(v0 + 696) + *(int *)(*(_QWORD *)(v0 + 688) + 20) + 32)) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_bridgeObjectRetain();
        v18 = sub_213C3BD8C(MEMORY[0x24BEE4AF8]);
      }
      sub_213C44AB0(*(_QWORD *)(v0 + 696));
      (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v15 + 8))(v16, v17, v18, v14, v15);
      *(_QWORD *)(v0 + 856) = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
      v20 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 864) = v20;
      *v20 = v0;
      v20[1] = sub_213C6C76C;
      __asm { BR              X8; sub_213C71FF0 }
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 336);
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 256);
  __swift_destroy_boxed_opaque_existential_0(v0 + 176);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_213C6CD6C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21[15];
  char v22;

  v1 = v0 + 42;
  v2 = v0[102];
  v3 = v0[85];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 47));
  *(double *)(v3 + v2) = sub_213C4B0F8(0x6E776F446B736154, 0xEC00000064616F6CLL);
  if (qword_254D2D960 != -1)
    swift_once();
  v4 = sub_213C86094();
  __swift_project_value_buffer(v4, (uint64_t)qword_254D2FF28);
  sub_213C44B0C((uint64_t)(v0 + 42), (uint64_t)(v0 + 52));
  v5 = sub_213C8607C();
  v6 = sub_213C863F4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v21[0] = swift_slowAlloc();
    v8 = v21[0];
    *(_DWORD *)v7 = 136315138;
    v10 = v0[55];
    v9 = v0[56];
    __swift_project_boxed_opaque_existential_0Tm(v0 + 52, v10);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v10, v9);
    v0[81] = sub_213C42558(v11, v12, v21);
    sub_213C86490();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 52));
    _os_log_impl(&dword_213C25000, v5, v6, "Recipe %s is ready.", v7, 0xCu);
    swift_arrayDestroy();
    v13 = v8;
    v1 = v0 + 42;
    MEMORY[0x2199C0A30](v13, -1, -1);
    MEMORY[0x2199C0A30](v7, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 52));
  }

  v14 = v0[85];
  v0[74] = 0;
  v0[75] = 0xE000000000000000;
  sub_213C8652C();
  swift_bridgeObjectRelease();
  v0[114] = *(_QWORD *)(v14 + 24);
  v15 = v0[45];
  v16 = v0[46];
  __swift_project_boxed_opaque_existential_0Tm(v1, v15);
  v17 = *(void (**)(uint64_t, uint64_t))(v16 + 16);
  swift_bridgeObjectRetain();
  v17(v15, v16);
  v0[115] = v18;
  v0[116] = *(_QWORD *)(v14 + 40);
  v20 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
  swift_bridgeObjectRetain();
  v19 = (_QWORD *)swift_task_alloc();
  v0[117] = v19;
  *v19 = v0;
  v19[1] = sub_213C6D058;
  v21[12] = 0;
  v21[13] = 0;
  v22 = 1;
  v21[14] = 0xE000000000000000;
  __asm { BR              X8; sub_213C71FF0 }
}

uint64_t sub_213C6D058()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_213C6D0D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  _QWORD *v6;
  char *v7;

  v1 = v0[85];
  v0[72] = 0;
  v0[73] = 0xE000000000000000;
  sub_213C8652C();
  swift_bridgeObjectRelease();
  v0[118] = *(_QWORD *)(v1 + 24);
  v2 = v0[45];
  v3 = v0[46];
  __swift_project_boxed_opaque_existential_0Tm(v0 + 42, v2);
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 16);
  swift_bridgeObjectRetain();
  v4(v2, v3);
  v0[119] = v5;
  v0[120] = *(_QWORD *)(v1 + 40);
  v7 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  v0[121] = v6;
  *v6 = v0;
  v6[1] = sub_213C6D208;
  __asm { BR              X8 }
}

uint64_t sub_213C6D208()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_213C6D288()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v1 = *(_QWORD **)(v0 + 680);
  v2 = (char *)v1 + *(_QWORD *)(v0 + 824);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))v2;
  *(_QWORD *)(v0 + 976) = *(_QWORD *)v2;
  *(_QWORD *)(v0 + 984) = *((_QWORD *)v2 + 1);
  if (v3)
  {
    v18 = *(_QWORD *)(v0 + 896);
    v4 = *(_QWORD *)(v0 + 888);
    *(_QWORD *)(v0 + 608) = 0;
    *(_QWORD *)(v0 + 616) = 0xE000000000000000;
    swift_retain();
    sub_213C8652C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 992) = v1[3];
    v5 = *(_QWORD *)(v0 + 360);
    v6 = *(_QWORD *)(v0 + 368);
    __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v5);
    v7 = *(void (**)(uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    v7(v5, v6);
    *(_QWORD *)(v0 + 1000) = v8;
    v9 = v1[4];
    v10 = v1[5];
    *(_QWORD *)(v0 + 1008) = v10;
    swift_bridgeObjectRetain_n();
    v3(v4, v9, v10);
    *(_QWORD *)(v0 + 1016) = v18;
    swift_bridgeObjectRelease();
    if (v18)
    {
      v19 = (char *)&dword_254D2FB98 + dword_254D2FB98;
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1032) = v11;
      *v11 = v0;
      v11[1] = sub_213C6D614;
      __asm { BR              X8 }
    }
    v20 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1024) = v17;
    *v17 = v0;
    v17[1] = sub_213C6D510;
    __asm { BR              X8 }
  }
  v12 = *(_QWORD *)(v0 + 792);
  v13 = *(_QWORD *)((char *)v1 + v12);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 888);
    *(_QWORD *)((char *)v1 + v12) = v15;
    __swift_destroy_boxed_opaque_existential_0(v0 + 336);
    __swift_destroy_boxed_opaque_existential_0(v0 + 256);
    __swift_destroy_boxed_opaque_existential_0(v0 + 176);
    swift_task_dealloc();
    (*(void (**)(uint64_t))(v0 + 8))(v16);
  }
}

uint64_t sub_213C6D510()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C6D564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 976);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_213C6FA9C(v1);
  v3 = *(_QWORD *)(v0 + 792);
  v4 = *(_QWORD *)(v0 + 680);
  v5 = *(_QWORD *)(v4 + v3);
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 888);
    *(_QWORD *)(v4 + v3) = v7;
    __swift_destroy_boxed_opaque_existential_0(v0 + 336);
    __swift_destroy_boxed_opaque_existential_0(v0 + 256);
    __swift_destroy_boxed_opaque_existential_0(v0 + 176);
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
  }
  return result;
}

uint64_t sub_213C6D614()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C6D668()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  char v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  id v43;
  char v44;
  uint64_t v45;
  _BYTE *v46;
  _QWORD *v47;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  char *v53;
  uint64_t v54[15];
  unint64_t v55;
  char v56;
  char v57;

  v51 = (_QWORD *)(v0 + 336);
  v1 = *(_QWORD *)(v0 + 976);
  swift_willThrow();
  sub_213C6FA9C(v1);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(void **)(v0 + 1016);
  *(_QWORD *)(v0 + 1040) = v2;
  *(_QWORD *)(v0 + 672) = v2;
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DF00);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = *(_BYTE *)(v0 + 528);
    *(_BYTE *)(v0 + 1137) = v4;
    v5 = *(void **)(v0 + 536);
    *(_QWORD *)(v0 + 1048) = v5;
    if (qword_254D2D960 != -1)
      swift_once();
    v6 = sub_213C86094();
    __swift_project_value_buffer(v6, (uint64_t)qword_254D2FF28);
    v7 = v5;
    v8 = v5;
    v9 = v5;
    v10 = v5;
    v11 = sub_213C8607C();
    v12 = sub_213C863F4();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = (_QWORD *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v54[0] = v15;
      *(_DWORD *)v13 = 136315394;
      v57 = v4;
      PFLTaskDiscoveryReachLocation.description.getter();
      *(_QWORD *)(v0 + 632) = sub_213C42558(v16, v17, v54);
      sub_213C86490();
      swift_bridgeObjectRelease();

      *(_WORD *)(v13 + 12) = 2112;
      v18 = v5;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 624) = v19;
      sub_213C86490();
      *v14 = v19;

      _os_log_impl(&dword_213C25000, v11, v12, "Failed to download task with location: %s, error %@", (uint8_t *)v13, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v14, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v15, -1, -1);
      MEMORY[0x2199C0A30](v13, -1, -1);
    }
    else
    {

    }
    v37 = *(_QWORD *)(v0 + 680);
    LOBYTE(v54[0]) = v4;
    PFLTaskDiscoveryReachLocation.description.getter();
    *(_QWORD *)(v0 + 1056) = v38;
    *(_QWORD *)(v0 + 1064) = *(_QWORD *)(v37 + 24);
    v39 = *(_QWORD *)(v0 + 360);
    v40 = *(_QWORD *)(v0 + 368);
    __swift_project_boxed_opaque_existential_0Tm(v51, v39);
    v41 = *(void (**)(uint64_t, uint64_t))(v40 + 16);
    swift_bridgeObjectRetain();
    v41(v39, v40);
    *(_QWORD *)(v0 + 1072) = v42;
    *(_QWORD *)(v0 + 1080) = *(_QWORD *)(v37 + 40);
    *(_QWORD *)(v0 + 664) = v5;
    v43 = v5;
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
      v44 = *(_BYTE *)(v0 + 1136);
    else
      v44 = 0;
    sub_213C3A984();
    v45 = swift_allocError();
    *v46 = v44;
    *(_QWORD *)(v0 + 1088) = v45;
    v52 = (char *)&dword_254D2FB98 + dword_254D2FB98;
    v47 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1096) = v47;
    *v47 = v0;
    v47[1] = sub_213C6DDE0;
    v56 = 1;
    v55 = v45;
    __asm { BR              X8 }
  }

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 256, *(_QWORD *)(v0 + 280));
  sub_213C86484();
  if (*(_QWORD *)(v0 + 320))
  {
    v20 = *(_QWORD *)(v0 + 792);
    v21 = *(_QWORD *)(v0 + 680);
    sub_213C3AA48((__int128 *)(v0 + 296), (uint64_t)v51);
    v22 = *(_QWORD *)(v21 + v20);
    v23 = *(_QWORD *)(v0 + 200);
    v24 = *(_QWORD *)(v0 + 208);
    __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 176), v23);
    if (v22 < (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 32))(v23, v24))
    {
      v25 = *(_QWORD *)(v0 + 696);
      v50 = *(_QWORD *)(v0 + 688);
      v26 = *(_QWORD **)(v0 + 680);
      v27 = (uint64_t)v26 + *(_QWORD *)(v0 + 800);
      *(_QWORD *)(v0 + 544) = 0;
      *(_QWORD *)(v0 + 552) = 0xE000000000000000;
      sub_213C8652C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 832) = v26[3];
      v28 = *(_QWORD *)(v0 + 360);
      v29 = *(_QWORD *)(v0 + 368);
      __swift_project_boxed_opaque_existential_0Tm(v51, v28);
      v30 = *(void (**)(uint64_t, uint64_t))(v29 + 16);
      swift_bridgeObjectRetain();
      v30(v28, v29);
      *(_QWORD *)(v0 + 840) = v31;
      *(_QWORD *)(v0 + 848) = v26[5];
      v32 = *(_QWORD *)(v0 + 360);
      v33 = *(_QWORD *)(v0 + 368);
      swift_bridgeObjectRetain();
      __swift_project_boxed_opaque_existential_0Tm(v51, v32);
      v35 = v26[16];
      v34 = v26[17];
      sub_213C6FAAC(v27, v25);
      if (*(_BYTE *)(v25 + *(int *)(v50 + 24)) == 1
        && (v36 = *(_QWORD *)(*(_QWORD *)(v0 + 696) + *(int *)(*(_QWORD *)(v0 + 688) + 20) + 32)) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_bridgeObjectRetain();
        v36 = sub_213C3BD8C(MEMORY[0x24BEE4AF8]);
      }
      sub_213C44AB0(*(_QWORD *)(v0 + 696));
      (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v33 + 8))(v35, v34, v36, v32, v33);
      *(_QWORD *)(v0 + 856) = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v53 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
      v49 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 864) = v49;
      *v49 = v0;
      v49[1] = sub_213C6C76C;
      v54[13] = 0;
      v54[14] = 0;
      v56 = 1;
      v55 = 0xE000000000000000;
      __asm { BR              X8; sub_213C71FF0 }
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 256);
  __swift_destroy_boxed_opaque_existential_0(v0 + 176);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_213C6DDE0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 1088);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_213C6DE80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v26;
  char *v27;
  uint64_t v28;

  if (*(_BYTE *)(v0 + 1137) == 5)
  {
    v1 = *(_QWORD *)(v0 + 680);
    *(_QWORD *)(v0 + 560) = 0;
    *(_QWORD *)(v0 + 568) = 0xE000000000000000;
    sub_213C8652C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 1104) = *(_QWORD *)(v1 + 24);
    v2 = *(_QWORD *)(v0 + 360);
    v3 = *(_QWORD *)(v0 + 368);
    __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v2);
    v4 = *(void (**)(uint64_t, uint64_t))(v3 + 16);
    swift_bridgeObjectRetain();
    v4(v2, v3);
    *(_QWORD *)(v0 + 1112) = v5;
    *(_QWORD *)(v0 + 1120) = *(_QWORD *)(v1 + 40);
    v27 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
    swift_bridgeObjectRetain();
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1128) = v6;
    *v6 = v0;
    v6[1] = sub_213C6E2EC;
    goto LABEL_3;
  }
  v7 = *(void **)(v0 + 1048);

  __swift_destroy_boxed_opaque_existential_0(v0 + 336);
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 256, *(_QWORD *)(v0 + 280));
  sub_213C86484();
  if (*(_QWORD *)(v0 + 320))
  {
    v8 = *(_QWORD *)(v0 + 792);
    v9 = *(_QWORD *)(v0 + 680);
    sub_213C3AA48((__int128 *)(v0 + 296), v0 + 336);
    v10 = *(_QWORD *)(v9 + v8);
    v11 = *(_QWORD *)(v0 + 200);
    v12 = *(_QWORD *)(v0 + 208);
    __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 176), v11);
    if (v10 < (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(v11, v12))
    {
      v13 = *(_QWORD *)(v0 + 696);
      v28 = *(_QWORD *)(v0 + 688);
      v14 = *(_QWORD **)(v0 + 680);
      v15 = (uint64_t)v14 + *(_QWORD *)(v0 + 800);
      *(_QWORD *)(v0 + 544) = 0;
      *(_QWORD *)(v0 + 552) = 0xE000000000000000;
      sub_213C8652C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 832) = v14[3];
      v16 = *(_QWORD *)(v0 + 360);
      v17 = *(_QWORD *)(v0 + 368);
      __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v16);
      v18 = *(void (**)(uint64_t, uint64_t))(v17 + 16);
      swift_bridgeObjectRetain();
      v18(v16, v17);
      *(_QWORD *)(v0 + 840) = v19;
      *(_QWORD *)(v0 + 848) = v14[5];
      v21 = *(_QWORD *)(v0 + 360);
      v20 = *(_QWORD *)(v0 + 368);
      swift_bridgeObjectRetain();
      __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v21);
      v22 = v14[16];
      v23 = v14[17];
      sub_213C6FAAC(v15, v13);
      if (*(_BYTE *)(v13 + *(int *)(v28 + 24)) == 1
        && (v24 = *(_QWORD *)(*(_QWORD *)(v0 + 696) + *(int *)(*(_QWORD *)(v0 + 688) + 20) + 32)) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_bridgeObjectRetain();
        v24 = sub_213C3BD8C(MEMORY[0x24BEE4AF8]);
      }
      sub_213C44AB0(*(_QWORD *)(v0 + 696));
      (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v20 + 8))(v22, v23, v24, v21, v20);
      *(_QWORD *)(v0 + 856) = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
      v26 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 864) = v26;
      *v26 = v0;
      v26[1] = sub_213C6C76C;
LABEL_3:
      __asm { BR              X8 }
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 336);
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 256);
  __swift_destroy_boxed_opaque_existential_0(v0 + 176);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_213C6E2EC()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_213C6E36C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v20;
  uint64_t v21;
  char *v22;

  v1 = *(void **)(v0 + 1048);

  __swift_destroy_boxed_opaque_existential_0(v0 + 336);
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 256, *(_QWORD *)(v0 + 280));
  sub_213C86484();
  if (*(_QWORD *)(v0 + 320))
  {
    v2 = *(_QWORD *)(v0 + 792);
    v3 = *(_QWORD *)(v0 + 680);
    sub_213C3AA48((__int128 *)(v0 + 296), v0 + 336);
    v4 = *(_QWORD *)(v3 + v2);
    v5 = *(_QWORD *)(v0 + 200);
    v6 = *(_QWORD *)(v0 + 208);
    __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 176), v5);
    if (v4 < (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6))
    {
      v7 = *(_QWORD *)(v0 + 696);
      v21 = *(_QWORD *)(v0 + 688);
      v8 = *(_QWORD **)(v0 + 680);
      v9 = (uint64_t)v8 + *(_QWORD *)(v0 + 800);
      *(_QWORD *)(v0 + 544) = 0;
      *(_QWORD *)(v0 + 552) = 0xE000000000000000;
      sub_213C8652C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 832) = v8[3];
      v10 = *(_QWORD *)(v0 + 360);
      v11 = *(_QWORD *)(v0 + 368);
      __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v10);
      v12 = *(void (**)(uint64_t, uint64_t))(v11 + 16);
      swift_bridgeObjectRetain();
      v12(v10, v11);
      *(_QWORD *)(v0 + 840) = v13;
      *(_QWORD *)(v0 + 848) = v8[5];
      v15 = *(_QWORD *)(v0 + 360);
      v14 = *(_QWORD *)(v0 + 368);
      swift_bridgeObjectRetain();
      __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v15);
      v16 = v8[16];
      v17 = v8[17];
      sub_213C6FAAC(v9, v7);
      if (*(_BYTE *)(v7 + *(int *)(v21 + 24)) == 1
        && (v18 = *(_QWORD *)(*(_QWORD *)(v0 + 696) + *(int *)(*(_QWORD *)(v0 + 688) + 20) + 32)) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_bridgeObjectRetain();
        v18 = sub_213C3BD8C(MEMORY[0x24BEE4AF8]);
      }
      sub_213C44AB0(*(_QWORD *)(v0 + 696));
      (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v14 + 8))(v16, v17, v18, v15, v14);
      *(_QWORD *)(v0 + 856) = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
      v20 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 864) = v20;
      *v20 = v0;
      v20[1] = sub_213C6C76C;
      __asm { BR              X8; sub_213C71FF0 }
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 336);
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 256);
  __swift_destroy_boxed_opaque_existential_0(v0 + 176);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_213C6E6D8()
{
  uint64_t v0;
  void *v1;
  id v2;
  char v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  id v42;
  char v43;
  uint64_t v44;
  _BYTE *v45;
  _QWORD *v46;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52[15];
  unint64_t v53;
  char v54;
  char v55;

  __swift_destroy_boxed_opaque_existential_0(v0 + 376);
  v1 = *(void **)(v0 + 896);
  *(_QWORD *)(v0 + 1040) = v1;
  *(_QWORD *)(v0 + 672) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DF00);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_BYTE *)(v0 + 528);
    *(_BYTE *)(v0 + 1137) = v3;
    v4 = *(void **)(v0 + 536);
    *(_QWORD *)(v0 + 1048) = v4;
    if (qword_254D2D960 != -1)
      swift_once();
    v5 = sub_213C86094();
    __swift_project_value_buffer(v5, (uint64_t)qword_254D2FF28);
    v6 = v4;
    v7 = v4;
    v8 = v4;
    v9 = v4;
    v10 = sub_213C8607C();
    v11 = sub_213C863F4();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = (_QWORD *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v52[0] = v14;
      *(_DWORD *)v12 = 136315394;
      v55 = v3;
      PFLTaskDiscoveryReachLocation.description.getter();
      *(_QWORD *)(v0 + 632) = sub_213C42558(v15, v16, v52);
      sub_213C86490();
      swift_bridgeObjectRelease();

      *(_WORD *)(v12 + 12) = 2112;
      v17 = v4;
      v18 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 624) = v18;
      sub_213C86490();
      *v13 = v18;

      _os_log_impl(&dword_213C25000, v10, v11, "Failed to download task with location: %s, error %@", (uint8_t *)v12, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v13, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v14, -1, -1);
      MEMORY[0x2199C0A30](v12, -1, -1);
    }
    else
    {

    }
    v36 = *(_QWORD *)(v0 + 680);
    LOBYTE(v52[0]) = v3;
    PFLTaskDiscoveryReachLocation.description.getter();
    *(_QWORD *)(v0 + 1056) = v37;
    *(_QWORD *)(v0 + 1064) = *(_QWORD *)(v36 + 24);
    v38 = *(_QWORD *)(v0 + 360);
    v39 = *(_QWORD *)(v0 + 368);
    __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v38);
    v40 = *(void (**)(uint64_t, uint64_t))(v39 + 16);
    swift_bridgeObjectRetain();
    v40(v38, v39);
    *(_QWORD *)(v0 + 1072) = v41;
    *(_QWORD *)(v0 + 1080) = *(_QWORD *)(v36 + 40);
    *(_QWORD *)(v0 + 664) = v4;
    v42 = v4;
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
      v43 = *(_BYTE *)(v0 + 1136);
    else
      v43 = 0;
    sub_213C3A984();
    v44 = swift_allocError();
    *v45 = v43;
    *(_QWORD *)(v0 + 1088) = v44;
    v50 = (char *)&dword_254D2FB98 + dword_254D2FB98;
    v46 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1096) = v46;
    *v46 = v0;
    v46[1] = sub_213C6DDE0;
    v54 = 1;
    v53 = v44;
    __asm { BR              X8 }
  }

  __swift_destroy_boxed_opaque_existential_0(v0 + 336);
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 256, *(_QWORD *)(v0 + 280));
  sub_213C86484();
  if (*(_QWORD *)(v0 + 320))
  {
    v19 = *(_QWORD *)(v0 + 792);
    v20 = *(_QWORD *)(v0 + 680);
    sub_213C3AA48((__int128 *)(v0 + 296), v0 + 336);
    v21 = *(_QWORD *)(v20 + v19);
    v22 = *(_QWORD *)(v0 + 200);
    v23 = *(_QWORD *)(v0 + 208);
    __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 176), v22);
    if (v21 < (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 32))(v22, v23))
    {
      v24 = *(_QWORD *)(v0 + 696);
      v49 = *(_QWORD *)(v0 + 688);
      v25 = *(_QWORD **)(v0 + 680);
      v26 = (uint64_t)v25 + *(_QWORD *)(v0 + 800);
      *(_QWORD *)(v0 + 544) = 0;
      *(_QWORD *)(v0 + 552) = 0xE000000000000000;
      sub_213C8652C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 832) = v25[3];
      v27 = *(_QWORD *)(v0 + 360);
      v28 = *(_QWORD *)(v0 + 368);
      __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v27);
      v29 = *(void (**)(uint64_t, uint64_t))(v28 + 16);
      swift_bridgeObjectRetain();
      v29(v27, v28);
      *(_QWORD *)(v0 + 840) = v30;
      *(_QWORD *)(v0 + 848) = v25[5];
      v31 = *(_QWORD *)(v0 + 360);
      v32 = *(_QWORD *)(v0 + 368);
      swift_bridgeObjectRetain();
      __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 336), v31);
      v34 = v25[16];
      v33 = v25[17];
      sub_213C6FAAC(v26, v24);
      if (*(_BYTE *)(v24 + *(int *)(v49 + 24)) == 1
        && (v35 = *(_QWORD *)(*(_QWORD *)(v0 + 696) + *(int *)(*(_QWORD *)(v0 + 688) + 20) + 32)) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_bridgeObjectRetain();
        v35 = sub_213C3BD8C(MEMORY[0x24BEE4AF8]);
      }
      sub_213C44AB0(*(_QWORD *)(v0 + 696));
      (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v32 + 8))(v34, v33, v35, v31, v32);
      *(_QWORD *)(v0 + 856) = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v51 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
      v48 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 864) = v48;
      *v48 = v0;
      v48[1] = sub_213C6C76C;
      v52[13] = 0;
      v52[14] = 0;
      v54 = 1;
      v53 = 0xE000000000000000;
      __asm { BR              X8; sub_213C71FF0 }
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 336);
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 256);
  __swift_destroy_boxed_opaque_existential_0(v0 + 176);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

unint64_t sub_213C6EE04()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213C883D0;
  strcpy((char *)(inited + 32), "PolicyDownload");
  *(_BYTE *)(inited + 47) = -18;
  v2 = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 48) = *(_QWORD *)(v0
                                       + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_policyDownloadTimeSeconds);
  *(_QWORD *)(inited + 72) = v2;
  strcpy((char *)(inited + 80), "TaskDownload");
  *(_BYTE *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskDownloadTimeSeconds);
  *(_QWORD *)(inited + 120) = v2;
  *(_QWORD *)(inited + 96) = v3;
  return sub_213C3BB4C(inited);
}

uint64_t sub_213C6EEB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 168) = a1;
  *(_QWORD *)(v2 + 176) = v1;
  return swift_task_switch();
}

uint64_t sub_213C6EECC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  double Current;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v1 = v0[22];
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_pm);
  v0[23] = v2;
  Current = CFAbsoluteTimeGetCurrent();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = 0x8000000000000000;
  sub_213C4B824(0x6F447963696C6F50, 0xEE0064616F6C6E77, isUniquelyReferenced_nonNull_native, Current);
  *(_QWORD *)(v2 + 16) = v12;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_213C44B0C(v1 + 48, (uint64_t)(v0 + 2));
  v5 = v0[5];
  v6 = v0[6];
  __swift_project_boxed_opaque_existential_0Tm(v0 + 2, v5);
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v0[24] = v8;
  v11 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v6 + 8) + *(_QWORD *)(v6 + 8));
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[25] = v9;
  *v9 = v0;
  v9[1] = sub_213C6F024;
  return v11(v0[21], v7, v8, v5, v6);
}

uint64_t sub_213C6F024()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_213C6F090()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = (_QWORD *)v0[21];
  v2 = v0[26];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_0Tm(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0(v0[21]);
    v5 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    if (qword_254D2D960 != -1)
      swift_once();
    v6 = v0[21];
    v7 = sub_213C86094();
    __swift_project_value_buffer(v7, (uint64_t)qword_254D2FF28);
    sub_213C44B0C(v6, (uint64_t)(v0 + 7));
    v8 = sub_213C8607C();
    v9 = sub_213C863F4();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      *(_DWORD *)v10 = 136315138;
      v16 = v11;
      sub_213C44B0C((uint64_t)(v0 + 7), (uint64_t)(v0 + 12));
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2FB80);
      v12 = sub_213C86178();
      v0[20] = sub_213C42558(v12, v13, &v16);
      sub_213C86490();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 7));
      _os_log_impl(&dword_213C25000, v8, v9, "Policy downloaded %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v11, -1, -1);
      MEMORY[0x2199C0A30](v10, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 7));
    }

    v14 = v0[22];
    *(double *)(v14 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_policyDownloadTimeSeconds) = sub_213C4B0F8(0x6F447963696C6F50, 0xEE0064616F6C6E77);
    v5 = (uint64_t (*)(void))v0[1];
  }
  return v5();
}

uint64_t sub_213C6F2E0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PFLTaskDiscovery.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  sub_213C6FB48(v0 + 88);
  swift_bridgeObjectRelease();
  sub_213C44AB0(v0 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskPreferences);
  swift_release();
  sub_213C6FA9C(*(_QWORD *)(v0 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_customTargeting));
  return v0;
}

uint64_t PFLTaskDiscovery.__deallocating_deinit()
{
  PFLTaskDiscovery.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_213C6F3B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_213C6F400;
  return sub_213C6B2E0();
}

uint64_t sub_213C6F400(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v5;

  v3 = *(_QWORD **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();
  *v3 = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_213C6F454(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[2] = a1;
  v3[3] = v2;
  if (a2)
  {
    swift_getObjectType();
    v4 = sub_213C862F8();
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v3[4] = v4;
  v3[5] = v6;
  return swift_task_switch();
}

uint64_t sub_213C6F4C8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_213C6F514;
  return sub_213C6B2E0();
}

uint64_t sub_213C6F514(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C6F56C()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_213C6F588(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x2199C0A3C](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x2199C0A3C](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_213C6F610(uint64_t result)
{
  unsigned int v1;
  unsigned int v2;
  unint64_t v3;
  unsigned int v4;
  int64_t v5;
  uint64_t v6;

  if ((_DWORD)result)
  {
    v1 = result;
    v2 = result;
    v6 = 0;
    MEMORY[0x2199C0A3C](&v6, 8);
    v3 = v6 * (unint64_t)v2;
    result = HIDWORD(v3);
    if (v3 < v1)
    {
      v4 = -v1 % v1;
      if (v4 > v3)
      {
        do
        {
          v6 = 0;
          MEMORY[0x2199C0A3C](&v6, 8);
          v5 = v6 * (unint64_t)v2;
        }
        while (v4 > v5);
        return v5 >> 32;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _s24PrivateFederatedLearning13PFLTaskSourceO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  BOOL v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  switch(v3)
  {
    case 0uLL:
      if (v7)
        goto LABEL_25;
      v3 = 0;
      v10 = 1;
      break;
    case 1uLL:
      if (v7 != 1)
        goto LABEL_25;
      v3 = 1;
      v10 = 1;
      break;
    case 2uLL:
      if (v7 != 2)
        goto LABEL_25;
      v10 = 1;
      v3 = 2;
      break;
    case 3uLL:
      if (v7 != 3)
        goto LABEL_25;
      v10 = 1;
      v3 = 3;
      break;
    case 4uLL:
      if (v7 != 4)
        goto LABEL_25;
      v10 = 1;
      v3 = 4;
      break;
    case 5uLL:
      if (v7 != 5)
        goto LABEL_25;
      v10 = 1;
      v3 = 5;
      break;
    default:
      if (v7 < 6)
      {
LABEL_25:
        v10 = 0;
      }
      else
      {
        v11 = v2 == v6 && v3 == v7;
        if (v11 || (v10 = 0, (sub_213C86748() & 1) != 0))
        {
          if (v4 == v8 && v5 == v9)
            v10 = 1;
          else
            v10 = sub_213C86748();
        }
      }
      sub_213C3B778(v6, v7);
      sub_213C3B778(v2, v3);
      break;
  }
  sub_213C3B744(v2, v3);
  sub_213C3B744(v6, v7);
  return v10 & 1;
}

unint64_t sub_213C6F838()
{
  unint64_t result;

  result = qword_254D2F7E8;
  if (!qword_254D2F7E8)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AEC4, &type metadata for PFLTaskSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2F7E8);
  }
  return result;
}

unint64_t sub_213C6F87C()
{
  unint64_t result;

  result = qword_254D2F7F0;
  if (!qword_254D2F7F0)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AE74, &type metadata for PFLTaskSource.LocalDirectoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2F7F0);
  }
  return result;
}

unint64_t sub_213C6F8C0()
{
  unint64_t result;

  result = qword_254D2F7F8;
  if (!qword_254D2F7F8)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AE24, &type metadata for PFLTaskSource.CKStagingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2F7F8);
  }
  return result;
}

unint64_t sub_213C6F904()
{
  unint64_t result;

  result = qword_254D2F800;
  if (!qword_254D2F800)
  {
    result = MEMORY[0x2199C0970](&unk_213C8ADD4, &type metadata for PFLTaskSource.CKCarryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2F800);
  }
  return result;
}

unint64_t sub_213C6F948()
{
  unint64_t result;

  result = qword_254D2F808;
  if (!qword_254D2F808)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AD84, &type metadata for PFLTaskSource.CKProdCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2F808);
  }
  return result;
}

unint64_t sub_213C6F98C()
{
  unint64_t result;

  result = qword_254D2F810;
  if (!qword_254D2F810)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AD34, &type metadata for PFLTaskSource.DodMLStagingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2F810);
  }
  return result;
}

unint64_t sub_213C6F9D0()
{
  unint64_t result;

  result = qword_254D2F818;
  if (!qword_254D2F818)
  {
    result = MEMORY[0x2199C0970](&unk_213C8ACE4, &type metadata for PFLTaskSource.DodMLCarryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2F818);
  }
  return result;
}

unint64_t sub_213C6FA14()
{
  unint64_t result;

  result = qword_254D2F820;
  if (!qword_254D2F820)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AC94, &type metadata for PFLTaskSource.DodMLProdCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2F820);
  }
  return result;
}

uint64_t sub_213C6FA58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PFLTaskPreferences(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213C6FA9C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_213C6FAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PFLTaskPreferences(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213C6FAF0(uint64_t a1, unint64_t a2)
{
  if (a2 != 6)
    return sub_213C3B778(a1, a2);
  return a1;
}

uint64_t sub_213C6FB00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213C6FB48(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F878);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213C6FB88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213C6FBD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2F878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_213C6FC1C()
{
  unint64_t result;

  result = qword_254D2F888;
  if (!qword_254D2F888)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for PFLTaskDiscoveryReachLocation, &type metadata for PFLTaskDiscoveryReachLocation);
    atomic_store(result, (unint64_t *)&qword_254D2F888);
  }
  return result;
}

unint64_t sub_213C6FC64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D2F890;
  if (!qword_254D2F890)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D2F898);
    result = MEMORY[0x2199C0970](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_254D2F890);
  }
  return result;
}

unint64_t sub_213C6FCB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D2F8A0[0];
  if (!qword_254D2F8A0[0])
  {
    v1 = type metadata accessor for PFLTaskDiscovery();
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for PFLTaskDiscovery, v1);
    atomic_store(result, qword_254D2F8A0);
  }
  return result;
}

uint64_t type metadata accessor for PFLTaskDiscovery()
{
  uint64_t result;

  result = qword_254D2F8F0;
  if (!qword_254D2F8F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213C6FD38()
{
  return MEMORY[0x24BEE40A8];
}

uint64_t getEnumTagSinglePayload for PFLTaskDiscoveryReachLocation(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PFLTaskDiscoveryReachLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_213C6FE20 + 4 * byte_213C8A423[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_213C6FE54 + 4 * byte_213C8A41E[v4]))();
}

uint64_t sub_213C6FE54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C6FE5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213C6FE64);
  return result;
}

uint64_t sub_213C6FE70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213C6FE78);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_213C6FE7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C6FE84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PFLTaskDiscoveryReachLocation()
{
  return &type metadata for PFLTaskDiscoveryReachLocation;
}

unint64_t destroy for PFLTaskSource(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PFLTaskSource(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for PFLTaskSource(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  __int128 v5;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for PFLTaskSource(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PFLTaskSource(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF9 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 2147483642);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 5;
  if (v4 >= 7)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PFLTaskSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 5;
  }
  return result;
}

uint64_t sub_213C70148(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_213C70160(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PFLTaskSource()
{
  return &type metadata for PFLTaskSource;
}

uint64_t dispatch thunk of PFLRecipeDescriptor.performTargeting(populationSegmentation:targetingSubjectOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of PFLRecipeDescriptor.recipeId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PFLPolicy.validate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PFLPolicy.recipesLimit()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PFLTaskDownloader.downloadPolicy(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 8) + *(_QWORD *)(a5 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_213C3A7F0;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PFLTaskDownloader.policyId(plugin:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PFLTaskDownloader.downloadTask(rd:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_213C44FDC;
  return v9(a1, a2, a3);
}

uint64_t sub_213C702E8()
{
  return type metadata accessor for PFLTaskDiscovery();
}

uint64_t sub_213C702F0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PFLTaskPreferences(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PFLTaskDiscovery()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PFLTaskDiscovery.makeAsyncIterator()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of PFLTaskDiscovery.__allocating_init(for:useCase:taskPreferences:allowsCellularAccess:customTargeting:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 416))();
}

uint64_t dispatch thunk of PFLTaskDiscovery.continueWithTaskFailure(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of PFLTaskDiscovery.next()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 440) + *(_QWORD *)(*(_QWORD *)v0 + 440));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_213C44EF0;
  return v4();
}

uint64_t dispatch thunk of PFLTaskDiscovery.getMetrics()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t initializeBufferWithCopyOfBuffer for PFLTaskLocationalError(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = v3;
  *(_QWORD *)(a1 + 8) = v3;
  return a1;
}

void destroy for PFLTaskLocationalError(uint64_t a1)
{

}

uint64_t assignWithCopy for PFLTaskLocationalError(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  void *v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = v3;
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;

  return a1;
}

uint64_t assignWithTake for PFLTaskLocationalError(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for PFLTaskLocationalError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PFLTaskLocationalError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PFLTaskLocationalError()
{
  return &type metadata for PFLTaskLocationalError;
}

uint64_t getEnumTagSinglePayload for PFLTaskSource.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PFLTaskSource.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_213C70660 + 4 * byte_213C8A42D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_213C70694 + 4 * byte_213C8A428[v4]))();
}

uint64_t sub_213C70694(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C7069C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213C706A4);
  return result;
}

uint64_t sub_213C706B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213C706B8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_213C706BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C706C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PFLTaskSource.CodingKeys()
{
  return &type metadata for PFLTaskSource.CodingKeys;
}

ValueMetadata *type metadata accessor for PFLTaskSource.DodMLProdCodingKeys()
{
  return &type metadata for PFLTaskSource.DodMLProdCodingKeys;
}

ValueMetadata *type metadata accessor for PFLTaskSource.DodMLCarryCodingKeys()
{
  return &type metadata for PFLTaskSource.DodMLCarryCodingKeys;
}

ValueMetadata *type metadata accessor for PFLTaskSource.DodMLStagingCodingKeys()
{
  return &type metadata for PFLTaskSource.DodMLStagingCodingKeys;
}

ValueMetadata *type metadata accessor for PFLTaskSource.CKProdCodingKeys()
{
  return &type metadata for PFLTaskSource.CKProdCodingKeys;
}

ValueMetadata *type metadata accessor for PFLTaskSource.CKCarryCodingKeys()
{
  return &type metadata for PFLTaskSource.CKCarryCodingKeys;
}

ValueMetadata *type metadata accessor for PFLTaskSource.CKStagingCodingKeys()
{
  return &type metadata for PFLTaskSource.CKStagingCodingKeys;
}

uint64_t storeEnumTagSinglePayload for PFLTaskSource.LocalDirectoryCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213C7078C + 4 * byte_213C8A437[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213C707C0 + 4 * byte_213C8A432[v4]))();
}

uint64_t sub_213C707C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C707C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213C707D0);
  return result;
}

uint64_t sub_213C707DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213C707E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213C707E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C707F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PFLTaskSource.LocalDirectoryCodingKeys()
{
  return &type metadata for PFLTaskSource.LocalDirectoryCodingKeys;
}

unint64_t sub_213C70810()
{
  unint64_t result;

  result = qword_254D2FAF0;
  if (!qword_254D2FAF0)
  {
    result = MEMORY[0x2199C0970](&unk_213C8A95C, &type metadata for PFLTaskSource.LocalDirectoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FAF0);
  }
  return result;
}

unint64_t sub_213C70858()
{
  unint64_t result;

  result = qword_254D2FAF8;
  if (!qword_254D2FAF8)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AC2C, &type metadata for PFLTaskSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FAF8);
  }
  return result;
}

unint64_t sub_213C708A0()
{
  unint64_t result;

  result = qword_254D2FB00;
  if (!qword_254D2FB00)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AB14, &type metadata for PFLTaskSource.DodMLProdCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB00);
  }
  return result;
}

unint64_t sub_213C708E8()
{
  unint64_t result;

  result = qword_254D2FB08;
  if (!qword_254D2FB08)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AB3C, &type metadata for PFLTaskSource.DodMLProdCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB08);
  }
  return result;
}

unint64_t sub_213C70930()
{
  unint64_t result;

  result = qword_254D2FB10;
  if (!qword_254D2FB10)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AAC4, &type metadata for PFLTaskSource.DodMLCarryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB10);
  }
  return result;
}

unint64_t sub_213C70978()
{
  unint64_t result;

  result = qword_254D2FB18;
  if (!qword_254D2FB18)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AAEC, &type metadata for PFLTaskSource.DodMLCarryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB18);
  }
  return result;
}

unint64_t sub_213C709C0()
{
  unint64_t result;

  result = qword_254D2FB20;
  if (!qword_254D2FB20)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AA74, &type metadata for PFLTaskSource.DodMLStagingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB20);
  }
  return result;
}

unint64_t sub_213C70A08()
{
  unint64_t result;

  result = qword_254D2FB28;
  if (!qword_254D2FB28)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AA9C, &type metadata for PFLTaskSource.DodMLStagingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB28);
  }
  return result;
}

unint64_t sub_213C70A50()
{
  unint64_t result;

  result = qword_254D2FB30;
  if (!qword_254D2FB30)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AA24, &type metadata for PFLTaskSource.CKProdCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB30);
  }
  return result;
}

unint64_t sub_213C70A98()
{
  unint64_t result;

  result = qword_254D2FB38;
  if (!qword_254D2FB38)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AA4C, &type metadata for PFLTaskSource.CKProdCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB38);
  }
  return result;
}

unint64_t sub_213C70AE0()
{
  unint64_t result;

  result = qword_254D2FB40;
  if (!qword_254D2FB40)
  {
    result = MEMORY[0x2199C0970](&unk_213C8A9D4, &type metadata for PFLTaskSource.CKCarryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB40);
  }
  return result;
}

unint64_t sub_213C70B28()
{
  unint64_t result;

  result = qword_254D2FB48;
  if (!qword_254D2FB48)
  {
    result = MEMORY[0x2199C0970](&unk_213C8A9FC, &type metadata for PFLTaskSource.CKCarryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB48);
  }
  return result;
}

unint64_t sub_213C70B70()
{
  unint64_t result;

  result = qword_254D2FB50;
  if (!qword_254D2FB50)
  {
    result = MEMORY[0x2199C0970](&unk_213C8A984, &type metadata for PFLTaskSource.CKStagingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB50);
  }
  return result;
}

unint64_t sub_213C70BB8()
{
  unint64_t result;

  result = qword_254D2FB58;
  if (!qword_254D2FB58)
  {
    result = MEMORY[0x2199C0970](&unk_213C8A9AC, &type metadata for PFLTaskSource.CKStagingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB58);
  }
  return result;
}

unint64_t sub_213C70C00()
{
  unint64_t result;

  result = qword_254D2FB60;
  if (!qword_254D2FB60)
  {
    result = MEMORY[0x2199C0970](&unk_213C8A8CC, &type metadata for PFLTaskSource.LocalDirectoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB60);
  }
  return result;
}

unint64_t sub_213C70C48()
{
  unint64_t result;

  result = qword_254D2FB68;
  if (!qword_254D2FB68)
  {
    result = MEMORY[0x2199C0970](&unk_213C8A8F4, &type metadata for PFLTaskSource.LocalDirectoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB68);
  }
  return result;
}

unint64_t sub_213C70C90()
{
  unint64_t result;

  result = qword_254D2FB70;
  if (!qword_254D2FB70)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AB64, &type metadata for PFLTaskSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB70);
  }
  return result;
}

unint64_t sub_213C70CD8()
{
  unint64_t result;

  result = qword_254D2FB78;
  if (!qword_254D2FB78)
  {
    result = MEMORY[0x2199C0970](&unk_213C8AB8C, &type metadata for PFLTaskSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FB78);
  }
  return result;
}

uint64_t sub_213C70D1C()
{
  unint64_t v0;

  v0 = sub_213C86628();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_213C70D64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6150657069636572 && a2 == 0xEA00000000006874;
  if (v2 || (sub_213C86748() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000213C8E8A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_213C86748();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t static PFLTelemetry.sendPFLPluginLocation(location:plugin:taskId:useCase:error:forwardToMLHost:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_254D2FB98 + dword_254D2FB98);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v17;
  *v17 = v9;
  v17[1] = sub_213C3A7F0;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t static PFLTelemetry.sendPFLPluginLocation<A>(location:plugin:taskId:useCase:force:forwardToMLHost:work:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  __int16 v14;
  int *v15;

  *(_WORD *)(v8 + 112) = v14;
  *(_QWORD *)(v8 + 64) = a8;
  *(_QWORD *)(v8 + 72) = v13;
  *(_QWORD *)(v8 + 48) = a6;
  *(_QWORD *)(v8 + 56) = a7;
  *(_QWORD *)(v8 + 32) = a4;
  *(_QWORD *)(v8 + 40) = a5;
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v12 = (uint64_t (*)(uint64_t))((char *)v15 + *v15);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 80) = v10;
  *v10 = v8;
  v10[1] = sub_213C70FB0;
  return v12(a1);
}

{
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 88) = v13;
  *(_QWORD *)(v8 + 96) = v14;
  *(_BYTE *)(v8 + 129) = v12;
  *(_BYTE *)(v8 + 128) = v11;
  *(_QWORD *)(v8 + 72) = a8;
  *(_QWORD *)(v8 + 80) = v10;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 64) = a7;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_213C70FB0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  char *v6;
  char *v7;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v6 = (char *)&dword_254D2FB98 + dword_254D2FB98;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 104) = v3;
    *v3 = v2;
    v3[1] = sub_213C71130;
    __asm { BR              X8 }
  }
  if (*(_BYTE *)(v2 + 112) == 1)
  {
    v7 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 96) = v4;
    *v4 = v2;
    v4[1] = sub_213C710E4;
    __asm { BR              X8 }
  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213C710E4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213C71130()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C71184()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C71208()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  (*(void (**)(void))(v0 + 88))();
  *(_QWORD *)(v0 + 104) = 0;
  if (*(_BYTE *)(v0 + 128) == 1)
  {
    v3 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v1;
    *v1 = v0;
    v1[1] = sub_213C71338;
    __asm { BR              X8; sub_213C71FF0 }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C71338()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213C71384()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C713D8()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static PFLTelemetry.sendPFLPluginReachTelemetryLazy(location:plugin:taskId:useCase:errorCode:errorDomain:forwardToMLHost:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_254D2FBA8 + dword_254D2FBA8);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v14;
  *v14 = v8;
  v14[1] = sub_213C44EF0;
  return v16(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t PFLPluginState.__allocating_init(rawValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t PFLPluginState.init(rawValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_213C71524()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v0 = 10;
  v8 = MEMORY[0x24BEE4AF8];
  sub_213C865A4();
  v1 = &byte_24D0D7C48;
  do
  {
    ++v1;
    PFLTaskDiscoveryReachLocation.description.getter();
    v3 = v2;
    v5 = v4;
    type metadata accessor for PFLPluginState();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v3;
    *(_QWORD *)(v6 + 24) = v5;
    sub_213C8658C();
    sub_213C865B0();
    sub_213C865BC();
    result = sub_213C86598();
    --v0;
  }
  while (v0);
  qword_254D2FB88 = v8;
  return result;
}

uint64_t static PFLPluginState.allCases.getter()
{
  if (qword_254D2D950 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static PFLPluginState.allCases.setter(uint64_t a1)
{
  if (qword_254D2D950 != -1)
    swift_once();
  swift_beginAccess();
  qword_254D2FB88 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PFLPluginState.allCases.modify())()
{
  if (qword_254D2D950 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t PFLPluginState.rawValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PFLPluginState.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PFLPluginState.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_213C717B0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 24) = v4;
  *a2 = result;
  return result;
}

uint64_t sub_213C717F0@<X0>(_QWORD *a1@<X8>)
{
  if (qword_254D2D950 != -1)
    swift_once();
  swift_beginAccess();
  *a1 = qword_254D2FB88;
  return swift_bridgeObjectRetain();
}

id sub_213C71864(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_213C72778();
    v4 = (void *)sub_213C860B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t sub_213C718D8()
{
  uint64_t result;

  sub_213C86028();
  result = sub_213C8601C();
  qword_253F0B060 = result;
  return result;
}

uint64_t static PFLTelemetry.sendPFLPluginLocation(location:plugin:taskId:useCase:error:force:forwardToMLHost:work:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 88) = v13;
  *(_QWORD *)(v8 + 96) = v14;
  *(_BYTE *)(v8 + 121) = v12;
  *(_BYTE *)(v8 + 120) = v11;
  *(_QWORD *)(v8 + 72) = a8;
  *(_QWORD *)(v8 + 80) = v10;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 64) = a7;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 16) = a1;
  return swift_task_switch();
}

{
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(void);
  uint64_t v12;
  __int16 v13;
  int *v14;

  *(_WORD *)(v8 + 112) = v13;
  *(_QWORD *)(v8 + 72) = a8;
  *(_QWORD *)(v8 + 80) = v12;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 64) = a7;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 16) = a1;
  v11 = (uint64_t (*)(void))((char *)v14 + *v14);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 88) = v9;
  *v9 = v8;
  v9[1] = sub_213C71B7C;
  return v11();
}

uint64_t sub_213C71950()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  _QWORD *v3;
  char *v5;
  char *v6;

  v1 = (*(uint64_t (**)(void))(v0 + 88))();
  *(_BYTE *)(v0 + 122) = v1 & 1;
  if ((v1 & 1) == 0)
  {
    v6 = (char *)&dword_254D2FB98 + dword_254D2FB98;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v3;
    *v3 = v0;
    v3[1] = sub_213C71A70;
    __asm { BR              X8; sub_213C7243C }
  }
  if (*(_BYTE *)(v0 + 120) == 1)
  {
    v5 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v2;
    *v2 = v0;
    v2[1] = sub_213C71AB8;
    __asm { BR              X8; sub_213C71FF0 }
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_213C71A70()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  v3 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v3 + 8))(*(unsigned __int8 *)(v1 + 122));
}

uint64_t sub_213C71AB8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  v3 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v3 + 8))(*(unsigned __int8 *)(v1 + 122));
}

uint64_t sub_213C71B7C(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  char *v7;
  char *v8;

  v3 = *v1;
  *(_BYTE *)(v3 + 114) = a1;
  swift_task_dealloc();
  if ((a1 & 1) == 0)
  {
    v8 = (char *)&dword_254D2FB98 + dword_254D2FB98;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 96) = v5;
    *v5 = v3;
    v5[1] = sub_213C71CB8;
    __asm { BR              X8 }
  }
  if (*(_BYTE *)(v3 + 112) == 1)
  {
    v7 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 104) = v4;
    *v4 = v3;
    v4[1] = sub_213C71D00;
    __asm { BR              X8 }
  }
  return (*(uint64_t (**)(_QWORD))(v3 + 8))(*(unsigned __int8 *)(v3 + 114));
}

uint64_t sub_213C71CB8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  v3 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v3 + 8))(*(unsigned __int8 *)(v1 + 114));
}

uint64_t sub_213C71D00()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  v3 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v3 + 8))(*(unsigned __int8 *)(v1 + 114));
}

uint64_t sub_213C71D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[10] = a8;
  v8[11] = v10;
  v8[8] = a6;
  v8[9] = a7;
  v8[6] = a4;
  v8[7] = a5;
  v8[4] = a2;
  v8[5] = a3;
  v8[3] = a1;
  return swift_task_switch();
}

uint64_t sub_213C71D78()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_213C861F0();
  sub_213C861F0();
  v2 = objc_allocWithZone((Class)sub_213C86070());
  v3 = (void *)sub_213C86064();
  *(_QWORD *)(v0 + 96) = v3;
  if (v1 || (sub_213C86220() & 1) == 0)
  {

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 24);
    v4 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 104) = type metadata accessor for PFLPluginState();
    v6 = swift_allocObject();
    *(_QWORD *)(v0 + 112) = v6;
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = v4;
    v7 = qword_254D2D958;
    swift_bridgeObjectRetain();
    if (v7 != -1)
      swift_once();
    *(_QWORD *)(v0 + 120) = qword_253F0B060;
    *(_QWORD *)(v0 + 16) = v6;
    sub_213C86028();
    sub_213C3B630(&qword_254D2FCA0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE5F698], MEMORY[0x24BE5F6A8]);
    sub_213C862F8();
    return swift_task_switch();
  }
}

uint64_t sub_213C71F3C(uint64_t a1, uint64_t a2)
{
  sub_213C3B630(&qword_254D2FCA8, a2, (uint64_t (*)(uint64_t))type metadata accessor for PFLPluginState, (uint64_t)&protocol conformance descriptor for PFLPluginState);
  sub_213C86010();
  return swift_task_switch();
}

uint64_t sub_213C71FB4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213C71FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  char v12;

  *(_BYTE *)(v8 + 344) = v12;
  *(_QWORD *)(v8 + 320) = v11;
  *(_OWORD *)(v8 + 304) = v10;
  *(_QWORD *)(v8 + 288) = a7;
  *(_QWORD *)(v8 + 296) = a8;
  *(_QWORD *)(v8 + 272) = a5;
  *(_QWORD *)(v8 + 280) = a6;
  *(_QWORD *)(v8 + 256) = a3;
  *(_QWORD *)(v8 + 264) = a4;
  *(_QWORD *)(v8 + 240) = a1;
  *(_QWORD *)(v8 + 248) = a2;
  return swift_task_switch();
}

uint64_t sub_213C72030()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  int v13;

  v13 = *(unsigned __int8 *)(v0 + 344);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2FC90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213C8AF40;
  *(_QWORD *)(inited + 32) = 0x6E6967756C70;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 48) = sub_213C86124();
  *(_QWORD *)(inited + 56) = 0x64496B736174;
  *(_QWORD *)(inited + 64) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = sub_213C86124();
  *(_QWORD *)(inited + 80) = 0x6E6F697461636F6CLL;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(_QWORD *)(inited + 96) = sub_213C86124();
  *(_QWORD *)(inited + 104) = 0x65736143657375;
  *(_QWORD *)(inited + 112) = 0xE700000000000000;
  *(_QWORD *)(inited + 120) = sub_213C86124();
  *(_QWORD *)(inited + 128) = 0x646F43726F727265;
  *(_QWORD *)(inited + 136) = 0xE900000000000065;
  *(_QWORD *)(inited + 144) = sub_213C86370();
  *(_QWORD *)(inited + 152) = 0x6D6F44726F727265;
  *(_QWORD *)(inited + 160) = 0xEB000000006E6961;
  *(_QWORD *)(inited + 168) = sub_213C86124();
  *(_QWORD *)(v0 + 328) = sub_213C3BC74(inited);
  if (v13 == 1)
  {
    v2 = swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v2;
    *(_QWORD *)v2 = v0;
    *(_QWORD *)(v2 + 8) = sub_213C722FC;
    v3 = *(_QWORD *)(v0 + 288);
    v5 = *(_OWORD *)(v0 + 256);
    v4 = *(_OWORD *)(v0 + 272);
    v6 = *(_OWORD *)(v0 + 240);
    *(_QWORD *)(v2 + 80) = *(_QWORD *)(v0 + 296);
    *(_QWORD *)(v2 + 88) = 0;
    *(_QWORD *)(v2 + 72) = v3;
    *(_OWORD *)(v2 + 56) = v4;
    *(_OWORD *)(v2 + 40) = v5;
    *(_OWORD *)(v2 + 24) = v6;
    return swift_task_switch();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 328);
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v8;
    v10 = (void *)sub_213C86124();
    *(_QWORD *)(v0 + 224) = sub_213C72758;
    *(_QWORD *)(v0 + 232) = v9;
    *(_QWORD *)(v0 + 192) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 200) = 1107296256;
    *(_QWORD *)(v0 + 208) = sub_213C71864;
    *(_QWORD *)(v0 + 216) = &block_descriptor;
    v11 = _Block_copy((const void *)(v0 + 192));
    swift_retain();
    v12 = AnalyticsSendEventLazy();

    _Block_release(v11);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
  }
}

uint64_t sub_213C722FC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213C72350()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = v0[41];
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (void *)sub_213C86124();
  v0[28] = sub_213C72758;
  v0[29] = v2;
  v0[24] = MEMORY[0x24BDAC760];
  v0[25] = 1107296256;
  v0[26] = sub_213C71864;
  v0[27] = &block_descriptor;
  v4 = _Block_copy(v0 + 24);
  swift_retain();
  v5 = AnalyticsSendEventLazy();

  _Block_release(v4);
  swift_release();
  swift_release();
  return ((uint64_t (*)(uint64_t))v0[1])(v5);
}

uint64_t sub_213C7243C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  char v11;

  *(_BYTE *)(v8 + 122) = v11;
  *(_QWORD *)(v8 + 88) = a8;
  *(_QWORD *)(v8 + 96) = v10;
  *(_QWORD *)(v8 + 72) = a6;
  *(_QWORD *)(v8 + 80) = a7;
  *(_QWORD *)(v8 + 56) = a4;
  *(_QWORD *)(v8 + 64) = a5;
  *(_QWORD *)(v8 + 40) = a2;
  *(_QWORD *)(v8 + 48) = a3;
  *(_QWORD *)(v8 + 32) = a1;
  return swift_task_switch();
}

void sub_213C72474()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;

  v1 = (void *)v0[12];
  v0[2] = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DF00);
  if (!swift_dynamicCast())
  {
    v3 = (void *)v0[12];
    v0[3] = v3;
    v4 = v3;
    if (!swift_dynamicCast())
    {
      v5 = (void *)sub_213C85D28();
      objc_msgSend(v5, sel_code);

    }
  }
  v6 = (void *)sub_213C85D28();
  v7 = objc_msgSend(v6, sel_domain);

  sub_213C86148();
  v9 = v8;

  v0[13] = v9;
  v11 = (char *)&dword_254D2FBA8 + dword_254D2FBA8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[14] = v10;
  *v10 = v0;
  v10[1] = sub_213C725F8;
  __asm { BR              X8 }
}

uint64_t sub_213C725F8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213C72648(uint64_t a1, uint64_t a2)
{
  return sub_213C3B630(&qword_254D2FBD0, a2, (uint64_t (*)(uint64_t))type metadata accessor for PFLPluginState, (uint64_t)&protocol conformance descriptor for PFLPluginState);
}

uint64_t type metadata accessor for PFLPluginState()
{
  return objc_opt_self();
}

uint64_t sub_213C72694(uint64_t a1, uint64_t a2)
{
  return sub_213C3B630(&qword_254D2FBD8, a2, (uint64_t (*)(uint64_t))type metadata accessor for PFLPluginState, (uint64_t)&protocol conformance descriptor for PFLPluginState);
}

unint64_t sub_213C726C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D2FBE0;
  if (!qword_254D2FBE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D2FBE8);
    result = MEMORY[0x2199C0970](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_254D2FBE0);
  }
  return result;
}

uint64_t method lookup function for PFLPluginState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PFLPluginState.__allocating_init(rawValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

ValueMetadata *type metadata accessor for PFLTelemetry()
{
  return &type metadata for PFLTelemetry;
}

uint64_t sub_213C72734()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_213C72758()
{
  return swift_bridgeObjectRetain();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_213C72778()
{
  unint64_t result;

  result = qword_254D2FCB0;
  if (!qword_254D2FCB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D2FCB0);
  }
  return result;
}

id sub_213C727B4(void *a1, uint64_t (*a2)(void))
{
  void *v2;
  id result;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;

  result = (id)a2();
  if (v2)
  {
    if (qword_254D2D960 != -1)
      swift_once();
    v5 = sub_213C86094();
    __swift_project_value_buffer(v5, (uint64_t)qword_254D2FF28);
    v6 = v2;
    v7 = a1;
    v8 = v2;
    v9 = a1;
    v10 = sub_213C8607C();
    v11 = sub_213C86400();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v12 = 138412546;
      v14 = v2;
      v15 = _swift_stdlib_bridgeErrorToNSError();
      sub_213C86490();
      *v13 = v15;

      *(_WORD *)(v12 + 12) = 2112;
      v16 = a1;
      v17 = _swift_stdlib_bridgeErrorToNSError();
      sub_213C86490();
      v13[1] = v17;

      _os_log_impl(&dword_213C25000, v10, v11, "Override error: %@ -> with %@", (uint8_t *)v12, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v13, -1, -1);
      MEMORY[0x2199C0A30](v12, -1, -1);
    }
    else
    {

    }
    swift_willThrow();

    return a1;
  }
  return result;
}

uint64_t sub_213C729EC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v0 = sub_213C85D58();
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_213C85EF0();
  v3 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_213C85E18();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  sub_213C85DA0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEC8);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_213C883D0;
  *(_QWORD *)(v13 + 32) = 0x617474612D6C6670;
  *(_QWORD *)(v13 + 40) = 0xEF73746E656D6863;
  sub_213C85EE4();
  v14 = sub_213C85ED8();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v31);
  *(_QWORD *)(v13 + 48) = v14;
  *(_QWORD *)(v13 + 56) = v16;
  v18 = v32;
  v17 = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v2, *MEMORY[0x24BDCD790], v33);
  sub_213C3B020();
  sub_213C85E00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v2, v17);
  v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v10, v6);
  v20 = v34 + OBJC_IVAR____TtC24PrivateFederatedLearning14PFLTaskStorage_baseUrl;
  v32 = v7;
  v33 = v6;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v34 + OBJC_IVAR____TtC24PrivateFederatedLearning14PFLTaskStorage_baseUrl, v12, v6);
  if (qword_254D2D960 != -1)
    swift_once();
  v21 = sub_213C86094();
  __swift_project_value_buffer(v21, (uint64_t)qword_254D2FF28);
  swift_retain_n();
  v22 = sub_213C8607C();
  v23 = sub_213C863F4();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v36 = v25;
    *(_DWORD *)v24 = 136315138;
    v31 = (uint64_t)(v24 + 4);
    v26 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v12, v20, v33);
    v27 = sub_213C85DD0();
    v29 = v28;
    v19(v12, v26);
    v35 = sub_213C42558(v27, v29, &v36);
    sub_213C86490();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213C25000, v22, v23, "Task path: %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v25, -1, -1);
    MEMORY[0x2199C0A30](v24, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return v34;
}

void sub_213C72DAC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t);
  char *v17;
  void *v18;
  _BYTE *v19;
  uint64_t v20;
  void *v21;
  _BYTE *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = v4;
  v24 = a1;
  v25 = a3;
  v8 = sub_213C85D58();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_213C85E18();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v5 + OBJC_IVAR____TtC24PrivateFederatedLearning14PFLTaskStorage_baseUrl, v12);
  v27 = a2;
  v28 = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BDCD7A0], v8);
  sub_213C3B020();
  sub_213C85E0C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v16 = *(void (**)(char *, uint64_t))(v13 + 8);
  v17 = a4;
  v16(v15, v12);
  sub_213C3A984();
  v18 = (void *)swift_allocError();
  *v19 = 39;
  v26 = v17;
  v20 = v29;
  sub_213C727B4(v18, (uint64_t (*)(void))sub_213C74574);
  if (v20)
  {
    v16(v17, v12);

  }
  else
  {

    v21 = (void *)swift_allocError();
    *v22 = 40;
    v23 = (void *)MEMORY[0x24BDAC7A8](v21);
    *(&v24 - 2) = v24;
    *(&v24 - 1) = (uint64_t)v17;
    sub_213C727B4(v23, (uint64_t (*)(void))sub_213C7458C);

  }
}

id sub_213C72FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id result;
  void *v7;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = sub_213C85E18();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_213C85DB8();
  v5 = (void *)sub_213C85DAC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v8[0] = 0;
  LOBYTE(v0) = objc_msgSend(v4, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v5, 1, 0, v8);

  result = v8[0];
  if ((v0 & 1) == 0)
  {
    v7 = result;
    sub_213C85D34();

    return (id)swift_willThrow();
  }
  return result;
}

id sub_213C7311C()
{
  id v0;
  void *v1;
  void *v2;
  unsigned int v3;
  id v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_213C85DAC();
  v2 = (void *)sub_213C85DAC();
  v6[0] = 0;
  v3 = objc_msgSend(v0, sel_moveItemAtURL_toURL_error_, v1, v2, v6);

  if (v3)
    return v6[0];
  v5 = v6[0];
  sub_213C85D34();

  return (id)swift_willThrow();
}

void sub_213C73220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  void *v22;
  _BYTE *v23;
  char *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t inited;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void (*v35)(char *);
  char *v36;
  void *v37;
  void (*v38)(char *, uint64_t);
  id v39;
  id v40;
  int v41;
  os_log_t v42;
  char *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  _BOOL4 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  os_log_t v60;
  uint64_t v61;
  _BYTE *v62;
  id v63;
  os_log_t v64;
  uint64_t v65;
  uint64_t v66;
  Class v67;
  char *v68;
  char *v69;
  NSObject *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  os_log_t v81;
  uint64_t v82;
  char *v83;
  char v84;
  uint64_t v85;
  char *v86;
  void (*v87)(char *, uint64_t, uint64_t);
  NSObject *v88;
  os_log_type_t v89;
  int v90;
  _BOOL4 v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  os_log_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  void *v106;
  unint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  void (*v111)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v112)(char *, uint64_t, uint64_t);
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t, uint64_t);
  char *v119;
  char *v120;
  char *v121;
  unint64_t v122;
  uint64_t v123;
  id v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  char *v130;
  Class isa;
  os_log_t v132;
  os_log_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138[3];
  uint64_t v139;
  uint64_t v140;

  v2 = v1;
  v135 = a1;
  v132 = (os_log_t)sub_213C86094();
  isa = v132[-1].isa;
  MEMORY[0x24BDAC7A8](v132);
  v130 = (char *)&v115 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E390);
  MEMORY[0x24BDAC7A8](v4);
  v128 = (uint64_t *)((char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v127 = sub_213C85D4C();
  v129 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127);
  v133 = (os_log_t)((char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v134 = sub_213C85E18();
  v136 = *(_QWORD *)(v134 - 8);
  v7 = MEMORY[0x24BDAC7A8](v134);
  v9 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v115 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v115 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v115 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v115 - v19;
  v21 = sub_213C3A984();
  v22 = (void *)swift_allocError();
  *v23 = 39;
  swift_retain();
  v24 = v137;
  sub_213C466D8(v22, v2);
  if (v24)
  {

    return;
  }
  v120 = v18;
  v125 = v9;
  v121 = v12;
  v119 = v15;
  v137 = v20;
  v126 = v2;

  v25 = objc_allocWithZone(MEMORY[0x24BDBCE90]);
  v26 = (void *)sub_213C85DAC();
  v27 = objc_msgSend(v25, sel_initWithURL_, v26);

  if (!v27)
  {
    swift_allocError();
    *v62 = 36;
    swift_willThrow();
    return;
  }
  v117 = 0;
  v122 = v21;
  objc_msgSend(v27, sel_open);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213C883D0;
  strcpy((char *)(inited + 32), "extractPKZip");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  v29 = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 72) = v29;
  *(_QWORD *)(inited + 80) = 0x7274537475706E69;
  *(_QWORD *)(inited + 88) = 0xEB000000006D6165;
  *(_QWORD *)(inited + 120) = sub_213C744F0();
  *(_QWORD *)(inited + 96) = v27;
  v30 = v27;
  sub_213C3BB4C(inited);
  v31 = sub_213C860B8();
  v32 = v134;
  v33 = (void *)v31;
  swift_bridgeObjectRelease();
  BOMCopierNew();
  v34 = v136;
  v35 = *(void (**)(char *))(v136 + 16);
  v36 = v137;
  v123 = v126 + OBJC_IVAR____TtC24PrivateFederatedLearning14PFLTaskStorage_baseUrl;
  v35(v137);
  v37 = (void *)sub_213C85DAC();
  v38 = *(void (**)(char *, uint64_t))(v34 + 8);
  v38(v36, v32);
  objc_msgSend(v37, sel_fileSystemRepresentation);
  v39 = v37;
  v40 = v30;
  v124 = v33;
  v41 = BOMCopierCopyWithOptions();
  BOMCopierFree();
  objc_msgSend(v40, sel_close);
  if (v41)
  {
    LODWORD(v136) = v41;
    v42 = v132;
    if (qword_254D2D960 != -1)
      swift_once();
    __swift_project_value_buffer((uint64_t)v42, (uint64_t)qword_254D2FF28);
    v43 = v125;
    v44 = v134;
    ((void (*)(char *, uint64_t, uint64_t))v35)(v125, v135, v134);
    swift_retain_n();
    v45 = sub_213C8607C();
    v46 = sub_213C86400();
    v47 = v46;
    v48 = os_log_type_enabled(v45, v46);
    v49 = v123;
    if (v48)
    {
      v50 = swift_slowAlloc();
      v118 = (void (*)(char *, uint64_t, uint64_t))v35;
      v51 = v50;
      v135 = swift_slowAlloc();
      v138[0] = v135;
      *(_DWORD *)v51 = 136315650;
      v133 = v45;
      sub_213C7452C();
      v116 = v40;
      LODWORD(v132) = v47;
      v52 = sub_213C86724();
      v140 = sub_213C42558(v52, v53, v138);
      sub_213C86490();
      swift_bridgeObjectRelease();
      v38(v43, v44);
      *(_WORD *)(v51 + 12) = 2080;
      v54 = v137;
      v118(v137, v49, v44);
      v55 = v116;
      v56 = sub_213C86724();
      v58 = v57;
      v38(v54, v44);
      v59 = v56;
      v40 = v55;
      v140 = sub_213C42558(v59, v58, v138);
      sub_213C86490();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 22) = 1024;
      LODWORD(v140) = v136;
      sub_213C86490();
      v60 = v133;
      _os_log_impl(&dword_213C25000, v133, (os_log_type_t)v132, "Failed to unzip %s to %s with error: %d", (uint8_t *)v51, 0x1Cu);
      v61 = v135;
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v61, -1, -1);
      MEMORY[0x2199C0A30](v51, -1, -1);

    }
    else
    {
      v38(v43, v44);

      swift_release_n();
    }
    swift_allocError();
    v84 = 37;
    goto LABEL_24;
  }
  v118 = (void (*)(char *, uint64_t, uint64_t))v35;
  v63 = objc_msgSend(v40, sel_streamError);
  v64 = v132;
  if (!v63)
  {
    v85 = v134;
    if (qword_254D2D960 != -1)
      swift_once();
    __swift_project_value_buffer((uint64_t)v64, (uint64_t)qword_254D2FF28);
    v86 = v120;
    v87 = v118;
    v118(v120, v135, v85);
    swift_retain_n();
    v88 = sub_213C8607C();
    v89 = sub_213C863F4();
    v90 = v89;
    v91 = os_log_type_enabled(v88, v89);
    v116 = v40;
    if (v91)
    {
      v92 = v38;
      v93 = swift_slowAlloc();
      v135 = swift_slowAlloc();
      v138[0] = v135;
      *(_DWORD *)v93 = 136315394;
      sub_213C7452C();
      v132 = v88;
      v94 = sub_213C86724();
      v140 = sub_213C42558(v94, v95, v138);
      LODWORD(isa) = v90;
      sub_213C86490();
      swift_bridgeObjectRelease();
      v92(v86, v85);
      *(_WORD *)(v93 + 12) = 2080;
      v130 = (char *)(v93 + 14);
      v96 = v137;
      v97 = v123;
      v87(v137, v123, v85);
      v98 = sub_213C86724();
      v100 = v99;
      v92(v96, v85);
      v140 = sub_213C42558(v98, v100, v138);
      sub_213C86490();
      swift_release_n();
      v87 = v118;
      swift_bridgeObjectRelease();
      v101 = v132;
      _os_log_impl(&dword_213C25000, v132, (os_log_type_t)isa, "Successfully unziped %s to %s ", (uint8_t *)v93, 0x16u);
      v102 = v135;
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v102, -1, -1);
      MEMORY[0x2199C0A30](v93, -1, -1);

      v103 = v129;
      v104 = (uint64_t)v128;
    }
    else
    {
      v38(v86, v85);

      swift_release_n();
      v96 = v137;
      v103 = v129;
      v92 = v38;
      v104 = (uint64_t)v128;
      v97 = v123;
    }
    v105 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v87(v96, v97, v85);
    v106 = (void *)sub_213C863DC();

    v92(v96, v85);
    if (!v106)
    {

      return;
    }
    sub_213C863B8();
    sub_213C85D40();
    if (!v139)
    {
      v108 = v127;
LABEL_41:
      (*(void (**)(os_log_t, uint64_t))(v103 + 8))(v133, v108);

      return;
    }
    v107 = MEMORY[0x24BEE4AF8];
    v108 = v127;
    while (1)
    {
      while (1)
      {
        v109 = swift_dynamicCast();
        v110 = v136;
        v111 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v136 + 56);
        if (v109)
          break;
        v111(v104, 1, 1, v85);
LABEL_30:
        sub_213C58B24(v104);
        sub_213C85D40();
        if (!v139)
          goto LABEL_41;
      }
      v111(v104, 0, 1, v85);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v104, 1, v85) == 1)
        goto LABEL_30;
      v112 = *(void (**)(char *, uint64_t, uint64_t))(v110 + 32);
      v112(v119, v104, v85);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v107 = sub_213C41D00(0, *(_QWORD *)(v107 + 16) + 1, 1, v107);
      v114 = *(_QWORD *)(v107 + 16);
      v113 = *(_QWORD *)(v107 + 24);
      if (v114 >= v113 >> 1)
        v107 = sub_213C41D00(v113 > 1, v114 + 1, 1, v107);
      *(_QWORD *)(v107 + 16) = v114 + 1;
      v112((char *)(v107+ ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80))+ *(_QWORD *)(v136 + 72) * v114), (uint64_t)v119, v85);
      sub_213C85D40();
      v108 = v127;
      v103 = v129;
      v104 = (uint64_t)v128;
      if (!v139)
        goto LABEL_41;
    }
  }

  v65 = v134;
  if (qword_254D2D960 != -1)
    swift_once();
  v66 = __swift_project_value_buffer((uint64_t)v64, (uint64_t)qword_254D2FF28);
  v67 = isa;
  v68 = v130;
  (*((void (**)(char *, uint64_t, os_log_t))isa + 2))(v130, v66, v64);
  v69 = v121;
  v118(v121, v135, v65);
  swift_retain_n();
  v40 = v40;
  v70 = sub_213C8607C();
  LODWORD(v136) = sub_213C86400();
  if (!os_log_type_enabled(v70, (os_log_type_t)v136))
  {
    v38(v69, v65);

    swift_release_n();
    (*((void (**)(char *, os_log_t))v67 + 1))(v68, v64);
    goto LABEL_23;
  }
  v133 = v70;
  v71 = swift_slowAlloc();
  v128 = (_QWORD *)swift_slowAlloc();
  v129 = swift_slowAlloc();
  v138[0] = v129;
  *(_DWORD *)v71 = 136315650;
  sub_213C7452C();
  v135 = (uint64_t)v40;
  v72 = sub_213C86724();
  v140 = sub_213C42558(v72, v73, v138);
  sub_213C86490();
  swift_bridgeObjectRelease();
  v38(v69, v65);
  *(_WORD *)(v71 + 12) = 2080;
  v74 = v38;
  v75 = v137;
  v118(v137, v123, v65);
  v76 = sub_213C86724();
  v78 = v77;
  v74(v75, v65);
  v140 = sub_213C42558(v76, v78, v138);
  sub_213C86490();
  swift_release_n();
  v40 = (id)v135;
  swift_bridgeObjectRelease();
  *(_WORD *)(v71 + 22) = 2112;
  if (objc_msgSend(v40, sel_streamError))
  {
    v79 = _swift_stdlib_bridgeErrorToNSError();
    v140 = v79;
    sub_213C86490();
    v80 = v128;
    *v128 = v79;

    v81 = v133;
    _os_log_impl(&dword_213C25000, v133, (os_log_type_t)v136, "Failed to unzip %s to %s with stream error: %@", (uint8_t *)v71, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DEB8);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v80, -1, -1);
    v82 = v129;
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v82, -1, -1);
    MEMORY[0x2199C0A30](v71, -1, -1);

    (*((void (**)(char *, os_log_t))isa + 1))(v130, v132);
LABEL_23:
    swift_allocError();
    v84 = 38;
LABEL_24:
    *v83 = v84;
    swift_willThrow();

    return;
  }

  __break(1u);
}

id sub_213C742A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id result;
  void *v9;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_213C85E18();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1 + OBJC_IVAR____TtC24PrivateFederatedLearning14PFLTaskStorage_baseUrl, v2);
  v7 = (void *)sub_213C85DAC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v10[0] = 0;
  LOBYTE(v2) = objc_msgSend(v6, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v7, 1, 0, v10);

  result = v10[0];
  if ((v2 & 1) == 0)
  {
    v9 = result;
    sub_213C85D34();

    return (id)swift_willThrow();
  }
  return result;
}

uint64_t sub_213C743F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC24PrivateFederatedLearning14PFLTaskStorage_baseUrl;
  v2 = sub_213C85E18();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_213C74440()
{
  return type metadata accessor for PFLTaskStorage();
}

uint64_t type metadata accessor for PFLTaskStorage()
{
  uint64_t result;

  result = qword_254D2FCE0;
  if (!qword_254D2FCE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213C74484()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213C85E18();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_213C744F0()
{
  unint64_t result;

  result = qword_254D2FD90;
  if (!qword_254D2FD90)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D2FD90);
  }
  return result;
}

unint64_t sub_213C7452C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D2F038;
  if (!qword_254D2F038)
  {
    v1 = sub_213C85E18();
    result = MEMORY[0x2199C0970](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_254D2F038);
  }
  return result;
}

id sub_213C74574()
{
  return sub_213C72FE0();
}

id sub_213C7458C()
{
  return sub_213C7311C();
}

uint64_t sub_213C745A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v27 = a2;
  v3 = sub_213C85D58();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213C85E18();
  v25 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v23 - v12;
  v26 = type metadata accessor for PFLDecodableTaskParameters(0);
  if (a1)
  {
    sub_213C85D7C();
    v28 = 0x6574656D61726170;
    v29 = 0xEF6E6F736A2E7372;
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDCD798], v3);
    sub_213C3B020();
    sub_213C85E0C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRelease();
    v24 = v11;
    v18 = sub_213C85E24();
    v20 = v19;
    sub_213C85C5C();
    swift_allocObject();
    sub_213C85C50();
    sub_213C76C88();
    sub_213C85C44();
    swift_release();
    sub_213C3B078(v18, v20);
    v21 = *(void (**)(char *, uint64_t))(v25 + 8);
    v21(v24, v7);
    v21(v13, v7);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v27, 0, 1);
  }
  else
  {
    if (qword_254D2D960 != -1)
      swift_once();
    v14 = sub_213C86094();
    __swift_project_value_buffer(v14, (uint64_t)qword_254D2FF28);
    v15 = sub_213C8607C();
    v16 = sub_213C863F4();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_213C25000, v15, v16, "No task folder", v17, 2u);
      MEMORY[0x2199C0A30](v17, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v27, 1, 1);
  }
}

uint64_t static PFLTaskPreferences.loadTaskPreferences(preferredTaskSource:from:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2FD98);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PFLDecodableTaskParameters(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v13 = a1[1];
  v15 = a1[2];
  v16 = a1[3];
  v27 = v13;
  v28 = v15;
  sub_213C745A4(a2, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_213C3B7AC((uint64_t)v8, &qword_254D2FD98);
    v17 = type metadata accessor for PFLTaskPreferences(0);
    v18 = (char *)a3 + *(int *)(v17 + 20);
    v20 = v27;
    v19 = v28;
    sub_213C3B778(v14, v27);
    sub_213C85EB4();
    sub_213C85E84();
    *(_OWORD *)v18 = xmmword_213C8B200;
    *((_QWORD *)v18 + 3) = 0;
    *((_QWORD *)v18 + 4) = 0;
    *((_QWORD *)v18 + 2) = 0;
    v18[40] = 0;
    v18[*(int *)(v9 + 40)] = 0;
    *((_QWORD *)v18 + 6) = 0x3FF0000000000000;
    v21 = *(int *)(v17 + 24);
    result = os_variant_has_internal_content();
    *((_BYTE *)a3 + v21) = result;
    *a3 = v14;
    a3[1] = v20;
    a3[2] = v19;
    a3[3] = v16;
  }
  else
  {
    sub_213C74F28((uint64_t)v8, (uint64_t)v12);
    v23 = type metadata accessor for PFLTaskPreferences(0);
    sub_213C4518C((uint64_t)v12, (uint64_t)a3 + *(int *)(v23 + 20), type metadata accessor for PFLDecodableTaskParameters);
    v24 = *(int *)(v23 + 24);
    v26 = v27;
    v25 = v28;
    sub_213C3B778(v14, v27);
    *((_BYTE *)a3 + v24) = os_variant_has_internal_content();
    *a3 = v14;
    a3[1] = v26;
    a3[2] = v25;
    a3[3] = v16;
    return sub_213C3B578((uint64_t)v12, type metadata accessor for PFLDecodableTaskParameters);
  }
  return result;
}

uint64_t type metadata accessor for PFLDecodableTaskParameters(uint64_t a1)
{
  return sub_213C74EF4(a1, qword_254D2FE98);
}

uint64_t type metadata accessor for PFLTaskPreferences(uint64_t a1)
{
  return sub_213C74EF4(a1, qword_254D2FE00);
}

uint64_t sub_213C74EF4(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213C74F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PFLDecodableTaskParameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PFLTaskPreferences.taskSource.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  __int128 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = type metadata accessor for PFLTaskPreferences(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((*((_BYTE *)v1 + *(int *)(v4 + 24)) & 1) == 0)
  {
    v18 = *v1;
    v19 = v1[1];
    v20 = v1[2];
    v21 = v1[3];
    *a1 = *v1;
    a1[1] = v19;
    a1[2] = v20;
    a1[3] = v21;
    return sub_213C3B778(v18, v19);
  }
  v7 = (uint64_t *)((char *)v1 + *(int *)(v4 + 20));
  v9 = *v7;
  v8 = v7[1];
  v10 = v7[2];
  v11 = v7[3];
  sub_213C4518C((uint64_t)v1, (uint64_t)v6, type metadata accessor for PFLTaskPreferences);
  if (v8 != 6)
  {
    sub_213C3B778(v9, v8);
    result = sub_213C3B578((uint64_t)v6, type metadata accessor for PFLTaskPreferences);
    *a1 = v9;
    a1[1] = v8;
    a1[2] = v10;
    a1[3] = v11;
    return result;
  }
  v13 = *v6;
  v12 = v6[1];
  v14 = v6[2];
  v15 = v6[3];
  sub_213C3B778(*v6, v12);
  result = sub_213C3B578((uint64_t)v6, type metadata accessor for PFLTaskPreferences);
  if (v12 == 3)
  {
    v17 = xmmword_213C8AF20;
    goto LABEL_9;
  }
  if (!v12)
  {
    v17 = xmmword_213C8AF30;
LABEL_9:
    *(_OWORD *)a1 = v17;
    a1[2] = 0;
    a1[3] = 0;
    return result;
  }
  *a1 = v13;
  a1[1] = v12;
  a1[2] = v14;
  a1[3] = v15;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PFLTaskPreferences(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t v14;
  __int128 v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    if (v7 >= 6)
    {
      *a1 = *a2;
      a1[1] = v7;
      v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v8;
    }
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = *(_QWORD *)((char *)a2 + v11 + 8);
    v24 = a3;
    if (v14 > 6)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = v14;
      v23 = *((_QWORD *)v13 + 3);
      *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
      *((_QWORD *)v12 + 3) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v15 = *((_OWORD *)v13 + 1);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v15;
    }
    *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
    v12[40] = v13[40];
    *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
    v16 = (int *)type metadata accessor for PFLDecodableTaskParameters(0);
    v17 = v16[8];
    v18 = &v12[v17];
    v19 = &v13[v17];
    v20 = sub_213C85ECC();
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    v21(&v12[v16[9]], &v13[v16[9]], v20);
    v12[v16[10]] = v13[v16[10]];
    *((_BYTE *)a1 + *(int *)(v24 + 24)) = *((_BYTE *)a2 + *(int *)(v24 + 24));
  }
  return a1;
}

uint64_t destroy for PFLTaskPreferences(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  if (*(_QWORD *)(a1 + 8) >= 6uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 20);
  if (*(_QWORD *)(v4 + 8) >= 7uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for PFLDecodableTaskParameters(0);
  v6 = v4 + *(int *)(v5 + 32);
  v7 = sub_213C85ECC();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v9(v6, v7);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(v4 + *(int *)(v5 + 36), v7);
}

_QWORD *initializeWithCopy for PFLTaskPreferences(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  __int128 v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v6 = a2[1];
  if (v6 >= 6)
  {
    *a1 = *a2;
    a1[1] = v6;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v7;
  }
  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = *(_QWORD *)((char *)a2 + v9 + 8);
  v22 = a3;
  if (v12 > 6)
  {
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v21 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *((_OWORD *)v11 + 1);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v13;
  }
  *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
  v10[40] = v11[40];
  *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
  v14 = (int *)type metadata accessor for PFLDecodableTaskParameters(0);
  v15 = v14[8];
  v16 = &v10[v15];
  v17 = &v11[v15];
  v18 = sub_213C85ECC();
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  v19(&v10[v14[9]], &v11[v14[9]], v18);
  v10[v14[10]] = v11[v14[10]];
  *((_BYTE *)a1 + *(int *)(v22 + 24)) = *((_BYTE *)a2 + *(int *)(v22 + 24));
  return a1;
}

_QWORD *assignWithCopy for PFLTaskPreferences(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);

  v6 = a2[1];
  if (a1[1] >= 6uLL)
  {
    if (v6 >= 6)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_213C3B7AC((uint64_t)a1, &qword_254D2FDA0);
      v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v8;
    }
  }
  else if (v6 >= 6)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v7;
  }
  v9 = *(int *)(a3 + 20);
  v10 = (uint64_t)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = *(_QWORD *)((char *)a1 + v9 + 8);
  v13 = *(_QWORD *)((char *)a2 + v9 + 8);
  if (v12 != 6)
  {
    if (v13 == 6)
    {
      sub_213C756DC(v10);
    }
    else
    {
      if (v12 < 6)
      {
        if (v13 < 6)
          goto LABEL_10;
LABEL_15:
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *(_QWORD *)(v10 + 8) = *((_QWORD *)v11 + 1);
        *(_QWORD *)(v10 + 16) = *((_QWORD *)v11 + 2);
        *(_QWORD *)(v10 + 24) = *((_QWORD *)v11 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      }
      if (v13 >= 6)
      {
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *(_QWORD *)(v10 + 8) = *((_QWORD *)v11 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v10 + 16) = *((_QWORD *)v11 + 2);
        *(_QWORD *)(v10 + 24) = *((_QWORD *)v11 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      sub_213C3B7AC(v10, &qword_254D2FDA0);
    }
    v15 = *((_OWORD *)v11 + 1);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *(_OWORD *)(v10 + 16) = v15;
    goto LABEL_19;
  }
  if (v13 > 6)
    goto LABEL_15;
LABEL_10:
  v14 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v14;
LABEL_19:
  *(_QWORD *)(v10 + 32) = *((_QWORD *)v11 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v10 + 40) = v11[40];
  *(_QWORD *)(v10 + 48) = *((_QWORD *)v11 + 6);
  v16 = (int *)type metadata accessor for PFLDecodableTaskParameters(0);
  v17 = v16[8];
  v18 = v10 + v17;
  v19 = &v11[v17];
  v20 = sub_213C85ECC();
  v21 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24);
  v21(v18, v19, v20);
  v21(v10 + v16[9], &v11[v16[9]], v20);
  *(_BYTE *)(v10 + v16[10]) = v11[v16[10]];
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_213C756DC(uint64_t a1)
{
  destroy for PFLTaskSource(a1);
  return a1;
}

_OWORD *initializeWithTake for PFLTaskPreferences(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_OWORD *)((char *)a2 + v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)((char *)a2 + v7);
  *((_OWORD *)v8 + 1) = v10;
  *((_QWORD *)v8 + 4) = *(_QWORD *)((char *)a2 + v7 + 32);
  v8[40] = *((_BYTE *)a2 + v7 + 40);
  *((_QWORD *)v8 + 6) = *(_QWORD *)((char *)a2 + v7 + 48);
  v11 = (int *)type metadata accessor for PFLDecodableTaskParameters(0);
  v12 = v11[8];
  v13 = &v8[v12];
  v14 = &v9[v12];
  v15 = sub_213C85ECC();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(&v8[v11[9]], &v9[v11[9]], v15);
  v8[v11[10]] = v9[v11[10]];
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for PFLTaskPreferences(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;

  if (*(_QWORD *)(a1 + 8) < 6uLL)
    goto LABEL_4;
  v6 = *(_QWORD *)(a2 + 8);
  if (v6 < 6)
  {
    sub_213C3B7AC(a1, &qword_254D2FDA0);
LABEL_4:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a1 + v9 + 8);
  v13 = *(_QWORD *)(a2 + v9 + 8);
  if (v12 != 6)
  {
    if (v13 == 6)
    {
      sub_213C756DC(v10);
    }
    else if (v12 >= 6)
    {
      if (v13 >= 6)
      {
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *(_QWORD *)(v10 + 8) = v13;
        swift_bridgeObjectRelease();
        v22 = *(_QWORD *)(v11 + 24);
        *(_QWORD *)(v10 + 16) = *(_QWORD *)(v11 + 16);
        *(_QWORD *)(v10 + 24) = v22;
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      sub_213C3B7AC(v10, &qword_254D2FDA0);
    }
  }
  v14 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v14;
LABEL_13:
  *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v10 + 40) = *(_BYTE *)(v11 + 40);
  *(_QWORD *)(v10 + 48) = *(_QWORD *)(v11 + 48);
  v15 = (int *)type metadata accessor for PFLDecodableTaskParameters(0);
  v16 = v15[8];
  v17 = v10 + v16;
  v18 = v11 + v16;
  v19 = sub_213C85ECC();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v20(v10 + v15[9], v11 + v15[9], v19);
  *(_BYTE *)(v10 + v15[10]) = *(_BYTE *)(v11 + v15[10]);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for PFLTaskPreferences()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213C759A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483641)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 6;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for PFLDecodableTaskParameters(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for PFLTaskPreferences()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213C75A38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483641)
  {
    *(_QWORD *)(result + 8) = (a2 + 5);
  }
  else
  {
    v7 = type metadata accessor for PFLDecodableTaskParameters(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_213C75AB0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PFLDecodableTaskParameters(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_213C75B2C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    if (v7 > 6)
    {
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v7;
      v16 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
    }
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    *(_QWORD *)(a1 + 48) = a2[6];
    v9 = a3[8];
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = sub_213C85ECC();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v13(a1 + a3[9], (uint64_t)a2 + a3[9], v12);
    *(_BYTE *)(a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  }
  return a1;
}

uint64_t sub_213C75C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  if (*(_QWORD *)(a1 + 8) >= 7uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_213C85ECC();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 36), v5);
}

uint64_t sub_213C75CD0(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  if (v6 > 6)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    v14 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v8 = a3[8];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_213C85ECC();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v12(a1 + a3[9], a2 + a3[9], v11);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_213C75DB8(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  if (v6 != 6)
  {
    if (v7 == 6)
    {
      sub_213C756DC(a1);
    }
    else
    {
      if (v6 < 6)
      {
        if (v7 < 6)
          goto LABEL_3;
LABEL_8:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      }
      if (v7 >= 6)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      sub_213C3B7AC(a1, &qword_254D2FDA0);
    }
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    goto LABEL_12;
  }
  if (v7 > 6)
    goto LABEL_8;
LABEL_3:
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_12:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = a3[8];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_213C85ECC();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14(a1 + a3[9], a2 + a3[9], v13);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_213C75F50(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = a3[8];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_213C85ECC();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[9], a2 + a3[9], v10);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_213C76000(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  if (v6 != 6)
  {
    if (v7 == 6)
    {
      sub_213C756DC(a1);
    }
    else if (v6 >= 6)
    {
      if (v7 >= 6)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v7;
        swift_bridgeObjectRelease();
        v15 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v15;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_213C3B7AC(a1, &qword_254D2FDA0);
    }
  }
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v9 = a3[8];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_213C85ECC();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40);
  v13(v10, v11, v12);
  v13(a1 + a3[9], a2 + a3[9], v12);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_213C76124()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213C76130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_213C85ECC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v9);
  }
}

uint64_t sub_213C761B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213C761C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 32) = a2;
  }
  else
  {
    v7 = sub_213C85ECC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_213C76238()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213C85ECC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_213C762D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213C7630C + 4 * byte_213C8B210[a1]))(0x756F735F6B736174, 0xEB00000000656372);
}

unint64_t sub_213C7630C()
{
  return 0xD000000000000011;
}

uint64_t sub_213C76360()
{
  return 0x69745F7472617473;
}

uint64_t sub_213C7637C()
{
  return 0x656D69745F646E65;
}

uint64_t sub_213C76394()
{
  return 0x617261506B736174;
}

uint64_t sub_213C763B8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213C763F4 + 4 * byte_213C8B218[a1]))(0x756F735F6B736174, 0xEB00000000656372);
}

unint64_t sub_213C763F4()
{
  return 0xD000000000000011;
}

uint64_t sub_213C76448()
{
  return 0x69745F7472617473;
}

uint64_t sub_213C76464()
{
  return 0x656D69745F646E65;
}

uint64_t sub_213C7647C()
{
  return 0x617261506B736174;
}

void sub_213C764A0(char *a1)
{
  sub_213C7F524(*a1);
}

void sub_213C764AC()
{
  char *v0;

  sub_213C692D4(0, *v0);
}

void sub_213C764B8(uint64_t a1)
{
  char *v1;

  sub_213C68F0C(a1, *v1);
}

void sub_213C764C0(uint64_t a1)
{
  char *v1;

  sub_213C692D4(a1, *v1);
}

uint64_t sub_213C764C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_213C76FF8();
  *a1 = result;
  return result;
}

uint64_t sub_213C764F4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_213C762D0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_213C7651C()
{
  unsigned __int8 *v0;

  return sub_213C763B8(*v0);
}

uint64_t sub_213C76524@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_213C76FF8();
  *a1 = result;
  return result;
}

void sub_213C76548(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_213C76554()
{
  sub_213C76CD0();
  return sub_213C86850();
}

uint64_t sub_213C7657C()
{
  sub_213C76CD0();
  return sub_213C8685C();
}

uint64_t sub_213C765A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  int *v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  int *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v56 = a2;
  v59 = sub_213C85ECC();
  v55 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v58 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_213C8616C();
  v53 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v52 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2FEF0);
  v57 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PFLDecodableTaskParameters(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v48 - v13;
  *(_OWORD *)v14 = xmmword_213C8B200;
  *((_QWORD *)v14 + 3) = 0;
  *((_QWORD *)v14 + 4) = 0;
  *((_QWORD *)v14 + 2) = 0;
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_213C76CD0();
  v15 = v60;
  sub_213C8682C();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    sub_213C76D14(*(_QWORD *)v14, *((_QWORD *)v14 + 1));
    return swift_bridgeObjectRelease();
  }
  else
  {
    v49 = v12;
    v50 = (int *)v9;
    v17 = (uint64_t)a1;
    LOBYTE(v62) = 7;
    v60 = v6;
    v51 = v8;
    sub_213C86670();
    v18 = v52;
    sub_213C86160();
    v19 = sub_213C86154();
    v21 = v20;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, unint64_t))(v53 + 8))(v18, v54);
    if (v21 >> 60 == 15)
    {
      v61 = 0;
      sub_213C76D24();
      sub_213C866AC();
      v22 = v62;
      v23 = v63;
      v24 = v64;
      v25 = v65;
      sub_213C76D14(*(_QWORD *)v14, *((_QWORD *)v14 + 1));
      *(_QWORD *)v14 = v22;
      *((_QWORD *)v14 + 1) = v23;
      *((_QWORD *)v14 + 2) = v24;
      *((_QWORD *)v14 + 3) = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E9F0);
      v61 = 1;
      sub_213C76D68();
      sub_213C866AC();
      v26 = v62;
      v27 = v55;
      v28 = v58;
      swift_bridgeObjectRelease();
      *((_QWORD *)v14 + 4) = v26;
      LOBYTE(v62) = 2;
      v29 = sub_213C8667C();
      v30 = v50;
      v14[40] = v29 & 1;
      LOBYTE(v62) = 3;
      v14[v30[10]] = sub_213C8667C() & 1;
      LOBYTE(v62) = 4;
      sub_213C86688();
      *((_QWORD *)v14 + 6) = v31;
      LOBYTE(v62) = 5;
      sub_213C86688();
      sub_213C85E9C();
      LOBYTE(v62) = 6;
      sub_213C86688();
      v32 = v56;
      v33 = v57;
      v34 = v59;
      sub_213C85E9C();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v51, v60);
      v35 = v30 + 9;
    }
    else
    {
      sub_213C85C5C();
      swift_allocObject();
      sub_213C85C50();
      sub_213C76C88();
      v37 = (uint64_t)v49;
      v36 = v50;
      sub_213C85C44();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v51, v60);
      swift_release();
      sub_213C3B064(v19, v21);
      v38 = a1;
      v39 = v58;
      v40 = *(_QWORD *)v37;
      v41 = *(_QWORD *)(v37 + 8);
      v42 = *(_QWORD *)(v37 + 16);
      v43 = *(_QWORD *)(v37 + 24);
      v57 = *(_QWORD *)v14;
      v44 = *((_QWORD *)v14 + 1);
      v53 = *((_QWORD *)v14 + 2);
      v54 = v44;
      v52 = (char *)*((_QWORD *)v14 + 3);
      v60 = (uint64_t)v38;
      sub_213C6FAF0(v40, v41);
      sub_213C76D14(v57, v54);
      *(_QWORD *)v14 = v40;
      *((_QWORD *)v14 + 1) = v41;
      *((_QWORD *)v14 + 2) = v42;
      *((_QWORD *)v14 + 3) = v43;
      v45 = *(_QWORD *)(v37 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v14 + 4) = v45;
      v14[40] = *(_BYTE *)(v37 + 40);
      v14[v36[10]] = *(_BYTE *)(v37 + v36[10]);
      *((_QWORD *)v14 + 6) = *(_QWORD *)(v37 + 48);
      v27 = v55;
      v46 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
      v47 = v59;
      v46(&v14[v36[8]], v37 + v36[8], v59);
      v34 = v47;
      v46(v39, v37 + v36[9], v47);
      sub_213C3B578(v37, type metadata accessor for PFLDecodableTaskParameters);
      v17 = v60;
      v32 = v56;
      v28 = v58;
      v35 = v36 + 9;
    }
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v14[*v35], v28, v34);
    sub_213C4518C((uint64_t)v14, v32, type metadata accessor for PFLDecodableTaskParameters);
    __swift_destroy_boxed_opaque_existential_0(v17);
    return sub_213C3B578((uint64_t)v14, type metadata accessor for PFLDecodableTaskParameters);
  }
}

uint64_t sub_213C76C50@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_213C765A4(a1, a2);
}

unint64_t sub_213C76C64(uint64_t a1)
{
  unint64_t result;

  result = sub_213C76C88();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_213C76C88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D2FEE8;
  if (!qword_254D2FEE8)
  {
    v1 = type metadata accessor for PFLDecodableTaskParameters(255);
    result = MEMORY[0x2199C0970](&unk_213C8B2D0, v1);
    atomic_store(result, (unint64_t *)&qword_254D2FEE8);
  }
  return result;
}

unint64_t sub_213C76CD0()
{
  unint64_t result;

  result = qword_254D2FEF8;
  if (!qword_254D2FEF8)
  {
    result = MEMORY[0x2199C0970](&unk_213C8B410, &type metadata for PFLDecodableTaskParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FEF8);
  }
  return result;
}

uint64_t sub_213C76D14(uint64_t a1, unint64_t a2)
{
  if (a2 != 6)
    return sub_213C3B744(a1, a2);
  return a1;
}

unint64_t sub_213C76D24()
{
  unint64_t result;

  result = qword_254D2FF00;
  if (!qword_254D2FF00)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for PFLTaskSource, &type metadata for PFLTaskSource);
    atomic_store(result, (unint64_t *)&qword_254D2FF00);
  }
  return result;
}

unint64_t sub_213C76D68()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254D2FF08;
  if (!qword_254D2FF08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D2E9F0);
    v2[0] = MEMORY[0x24BEE0D38];
    v2[1] = MEMORY[0x24BEE0D38];
    result = MEMORY[0x2199C0970](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254D2FF08);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PFLDecodableTaskParameters.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PFLDecodableTaskParameters.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_213C76EA0 + 4 * byte_213C8B225[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_213C76ED4 + 4 * byte_213C8B220[v4]))();
}

uint64_t sub_213C76ED4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C76EDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213C76EE4);
  return result;
}

uint64_t sub_213C76EF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213C76EF8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_213C76EFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C76F04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PFLDecodableTaskParameters.CodingKeys()
{
  return &type metadata for PFLDecodableTaskParameters.CodingKeys;
}

unint64_t sub_213C76F24()
{
  unint64_t result;

  result = qword_254D2FF10;
  if (!qword_254D2FF10)
  {
    result = MEMORY[0x2199C0970](&unk_213C8B3E8, &type metadata for PFLDecodableTaskParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FF10);
  }
  return result;
}

unint64_t sub_213C76F6C()
{
  unint64_t result;

  result = qword_254D2FF18;
  if (!qword_254D2FF18)
  {
    result = MEMORY[0x2199C0970](&unk_213C8B320, &type metadata for PFLDecodableTaskParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FF18);
  }
  return result;
}

unint64_t sub_213C76FB4()
{
  unint64_t result;

  result = qword_254D2FF20;
  if (!qword_254D2FF20)
  {
    result = MEMORY[0x2199C0970](&unk_213C8B348, &type metadata for PFLDecodableTaskParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D2FF20);
  }
  return result;
}

uint64_t sub_213C76FF8()
{
  unint64_t v0;

  v0 = sub_213C86628();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t static PFLLogging.framework.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_213C7712C(&qword_254D2D960, (uint64_t)qword_254D2FF28, a1);
}

uint64_t sub_213C7705C(uint64_t a1)
{
  return sub_213C7709C(a1, qword_254D2FF28);
}

uint64_t sub_213C77080(uint64_t a1)
{
  return sub_213C7709C(a1, qword_254D2FF40);
}

uint64_t sub_213C7709C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_213C86094();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_213C86088();
}

uint64_t static PFLLogging.plugin.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_213C7712C(&qword_254D2D968, (uint64_t)qword_254D2FF40, a1);
}

uint64_t sub_213C7712C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_213C86094();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

ValueMetadata *type metadata accessor for PFLLogging()
{
  return &type metadata for PFLLogging;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t type metadata accessor for PFLChunk()
{
  return objc_opt_self();
}

uint64_t sub_213C77204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BYTE *v5;

  if (a2 == a3)
    __asm { BR              X10 }
  sub_213C3512C();
  swift_allocError();
  *v5 = 14;
  return swift_willThrow();
}

uint64_t sub_213C77540(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v7;
  int *v10;
  unint64_t v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t *v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;

  if (a3 < 0)
  {
LABEL_21:
    __break(1u);
  }
  else
  {
    v7 = a3;
    if (a3)
    {
      v10 = (int *)result;
      do
      {
        v12 = *a4++;
        v11 = v12;
        if (v12)
          v13 = (uint64_t)v11 <= a6;
        else
          v13 = 0;
        if (v13)
        {
          result = v11 - 1;
          v14 = *a7;
          if ((*a7 & 0xC000000000000001) != 0)
          {
            v15 = MEMORY[0x2199BFF08](result);
          }
          else
          {
            if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10) < v11)
            {
              __break(1u);
              goto LABEL_21;
            }
            v15 = *(_QWORD *)(v14 + 8 * result + 32);
            swift_retain();
          }
          v16 = *v10;
          v17 = (uint64_t *)(v15 + 40);
          swift_beginAccess();
          v18 = *(_QWORD *)(v15 + 40);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v15 + 40) = v18;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v18 = sub_213C4202C(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
            *v17 = v18;
          }
          v21 = *(_QWORD *)(v18 + 16);
          v20 = *(_QWORD *)(v18 + 24);
          if (v21 >= v20 >> 1)
          {
            v18 = sub_213C4202C(v20 > 1, v21 + 1, 1, v18);
            *v17 = v18;
          }
          *(_QWORD *)(v18 + 16) = v21 + 1;
          *(_DWORD *)(v18 + 4 * v21 + 32) = v16;
          swift_endAccess();
          result = swift_release();
        }
        ++v10;
        --v7;
      }
      while (v7);
    }
  }
  return result;
}

uint64_t type metadata accessor for PFLSparsifier()
{
  return objc_opt_self();
}

uint64_t sub_213C776D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = sub_213C85CD4();
  v8 = result;
  if (result)
  {
    result = sub_213C85CF8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v8 += a1 - result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  v11 = sub_213C85CEC();
  if (v11 >= v10)
    v12 = v10;
  else
    v12 = v11;
  if (v8)
    v13 = v12;
  else
    v13 = 0;
  return a4(v8, v13);
}

uint64_t sub_213C77778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_213C85CD4();
  v8 = result;
  if (result)
  {
    result = sub_213C85CF8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v8 += a1 - result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  v11 = sub_213C85CEC();
  if (v11 >= v10)
    v12 = v10;
  else
    v12 = v11;
  v13 = v12 / 4;
  if (v8)
    v14 = v13;
  else
    v14 = 0;
  return a4(v8, v14);
}

uint64_t sub_213C77828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  char *v16;
  char v17;
  _QWORD *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E390);
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_213C85D58();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_213C85E18();
  MEMORY[0x24BDAC7A8](v6);
  swift_beginAccess();
  v7 = *(_QWORD *)(a3 + 32);
  if (!*(_QWORD *)(v7 + 16))
  {
    v21 = 0u;
    v22 = 0u;
LABEL_17:
    sub_213C34FD8((uint64_t)&v21);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v8 = sub_213C4B3DC(0x6966697372617073, 0xEE006E6F69746163);
  if ((v9 & 1) != 0)
  {
    sub_213C35070(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v21);
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v22 + 1))
    goto LABEL_17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE68);
  if ((swift_dynamicCast() & 1) != 0)
  {
    if (v20[2])
    {
      v10 = sub_213C4B3DC(0x6B6E7568436D756ELL, 0xE900000000000073);
      if ((v11 & 1) != 0)
      {
        sub_213C35070(v20[7] + 32 * v10, (uint64_t)&v21);
        sub_213C35170();
        if ((swift_dynamicCast() & 1) != 0)
        {
          objc_msgSend(v20, sel_integerValue);

          if (v20[2])
          {
            v12 = sub_213C4B3DC(0xD000000000000013, 0x8000000213C8EED0);
            if ((v13 & 1) != 0)
            {
              sub_213C35070(v20[7] + 32 * v12, (uint64_t)&v21);
              __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBA8);
              if ((swift_dynamicCast() & 1) != 0)
              {
                if (v20[2] && (v14 = sub_213C4B3DC(0xD000000000000015, 0x8000000213C8EEF0), (v15 & 1) != 0))
                {
                  sub_213C35070(v20[7] + 32 * v14, (uint64_t)&v21);
                }
                else
                {
                  v21 = 0u;
                  v22 = 0u;
                }
                swift_bridgeObjectRelease();
                if (!*((_QWORD *)&v22 + 1))
                {
                  swift_bridgeObjectRelease();
                  sub_213C34FD8((uint64_t)&v21);
                  goto LABEL_21;
                }
                if ((swift_dynamicCast() & 1) != 0)
                  __asm { BR              X9 }
              }
            }
          }
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_21:
    sub_213C3512C();
    swift_allocError();
    v17 = 10;
    goto LABEL_19;
  }
LABEL_18:
  sub_213C3512C();
  swift_allocError();
  v17 = 9;
LABEL_19:
  *v16 = v17;
  return swift_willThrow();
}

uint64_t sub_213C78660(uint64_t a1, uint64_t a2)
{
  return sub_213C78698(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_213C77204);
}

uint64_t sub_213C7867C(uint64_t a1, uint64_t a2)
{
  return sub_213C78698(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_213C77540);
}

uint64_t sub_213C78698(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

uint64_t sub_213C786BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C78718()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_213C78760(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C787BC()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

_QWORD *PFLTask.__allocating_init(recipeId:recipe:attachments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *result;

  type metadata accessor for PFLTask();
  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = 0;
  return result;
}

uint64_t type metadata accessor for PFLTask()
{
  return objc_opt_self();
}

uint64_t sub_213C7885C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  char v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a1;
  v22 = a2;
  v3 = sub_213C85E18();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E390);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v10 = *(_QWORD *)(v2 + 40);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = v10 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v13 = *(_QWORD *)(v4 + 72);
    v19[1] = v10;
    v20 = v13;
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v14(v9, v12, v3);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v15(v9, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
      sub_213C85DD0();
      v16 = sub_213C8622C();
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v17 = sub_213C85DD0();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        return v17;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v12 += v20;
      if (!--v11)
        goto LABEL_8;
    }
  }
  else
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain();
LABEL_8:
    v15(v9, 1, 1, v3);
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_213C78A74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;

  swift_beginAccess();
  v11 = *(_QWORD *)(v5 + 32);
  swift_bridgeObjectRetain();
  Dictionary<>.parameter<A>(for:default:)(a1, a2, a3, v11, a4, a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C78AFC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  __int128 v5;
  __int128 v6;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  if (!*(_QWORD *)(v1 + 16))
  {
    v5 = 0u;
    v6 = 0u;
LABEL_9:
    sub_213C34FD8((uint64_t)&v5);
    return 0;
  }
  swift_bridgeObjectRetain();
  v2 = sub_213C4B3DC(0x6966697372617073, 0xEE006E6F69746163);
  if ((v3 & 1) != 0)
  {
    sub_213C35070(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v5);
  }
  else
  {
    v5 = 0u;
    v6 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v6 + 1))
    goto LABEL_9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE68);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  return result;
}

uint64_t PFLTask.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t PFLTask.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_213C78C60@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_213C78CAC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_213C78CF8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for PFLTask()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PFLTask.recipeId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of PFLTask.recipe.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of PFLTask.attachments.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of PFLTask.attachmentPath(name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of PFLTask.parameter<A>(for:default:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of PFLTask.shouldApplySparsification()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t *sub_213C78D98(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213C85ECC();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v9 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v10 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)a1 + v10) = *(uint64_t *)((char *)a2 + v10);
    v11 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = a3[13];
    *(uint64_t *)((char *)a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = a3[15];
    *(uint64_t *)((char *)a1 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(uint64_t *)((char *)a1 + v19) = *(uint64_t *)((char *)a2 + v19);
    v20 = a3[16];
    v21 = a3[17];
    v22 = (uint64_t *)((char *)a1 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (uint64_t *)((char *)a1 + v21);
    v26 = (uint64_t *)((char *)a2 + v21);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = a3[18];
    v29 = a3[19];
    v30 = (uint64_t *)((char *)a1 + v28);
    v31 = (uint64_t *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    *(uint64_t *)((char *)a1 + v29) = *(uint64_t *)((char *)a2 + v29);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_213C78F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_213C85ECC();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C79044(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;

  v6 = sub_213C85ECC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v19 = a3[16];
  v20 = a3[17];
  v21 = (_QWORD *)(a1 + v19);
  v22 = (_QWORD *)(a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = (_QWORD *)(a1 + v20);
  v25 = (_QWORD *)(a2 + v20);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = a3[18];
  v28 = a3[19];
  v29 = (_QWORD *)(a1 + v27);
  v30 = (_QWORD *)(a2 + v27);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_213C791D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  v6 = sub_213C85ECC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = a3[11];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[13];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  v14 = a3[16];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[17];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[18];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_213C793F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_213C85ECC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  v11 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  v12 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  return a1;
}

uint64_t sub_213C794EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_213C85ECC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRelease();
  v9 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  v10 = a3[11];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  v15 = a3[13];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  v20 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[17];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  v30 = a3[18];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_213C79678()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213C79684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_213C85ECC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_213C79700()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213C7970C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_213C85ECC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CKPolicyRecord(uint64_t a1)
{
  return sub_213C74EF4(a1, qword_254D302A8);
}

uint64_t sub_213C79798()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213C85ECC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_213C7983C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 52));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_213C79870@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  int v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  id v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  BOOL v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint8_t *v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  const char *v78;
  uint8_t *v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint8_t *v85;
  uint8_t *v86;
  id v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  id v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  id v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  uint8_t *v135;
  id v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  unint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  NSObject *v149;
  os_log_type_t v150;
  uint8_t *v151;
  const char *v152;
  void (*v153)(char *, uint64_t);
  uint64_t v154;
  NSObject *v155;
  os_log_type_t v156;
  uint8_t *v157;
  id v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  uint64_t v168;
  id v169;
  uint64_t v170;
  unint64_t v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  id v175;
  uint64_t v176;
  unint64_t v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  unint64_t v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void (*v191)(char *, char *, uint64_t);
  uint64_t *v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t *v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  void (*v208)(char *, char *, uint64_t);
  uint64_t v209;
  char *v210;
  char *v211;
  int *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D30328);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v201 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v201 - v8;
  v10 = sub_213C85ECC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v210 = (char *)&v201 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v211 = (char *)&v201 - v14;
  v15 = (int *)type metadata accessor for CKPolicyRecord(0);
  v213 = *((_QWORD *)v15 - 1);
  v16 = (int *)MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v201 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = v16[7];
  *(_QWORD *)&v18[v216] = &unk_24D0D78B0;
  v217 = v16[9];
  *(_QWORD *)&v18[v217] = &unk_24D0D78E0;
  v218 = v16[10];
  *(_QWORD *)&v18[v218] = &unk_24D0D7910;
  v215 = v16[12];
  *(_QWORD *)&v18[v215] = &unk_24D0D7940;
  v214 = v16[14];
  *(_QWORD *)&v18[v214] = &unk_24D0D7970;
  if (sub_213C86454() == *(_QWORD *)aPolicy_1 && v19 == unk_254D30238)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = sub_213C86748();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      if (qword_254D2D960 != -1)
        swift_once();
      v57 = sub_213C86094();
      __swift_project_value_buffer(v57, (uint64_t)qword_254D2FF28);
      v58 = a1;
      v59 = sub_213C8607C();
      v60 = sub_213C863F4();
      if (os_log_type_enabled(v59, v60))
      {
        v61 = (uint8_t *)swift_slowAlloc();
        v62 = swift_slowAlloc();
        v212 = v15;
        v63 = a2;
        v64 = v62;
        v219 = v62;
        *(_DWORD *)v61 = 136315138;
        v65 = sub_213C86454();
        v221 = sub_213C42558(v65, v66, &v219);
        sub_213C86490();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_213C25000, v59, v60, "Invalid recordType: %s", v61, 0xCu);
        swift_arrayDestroy();
        v67 = v64;
        a2 = v63;
        v15 = v212;
        MEMORY[0x2199C0A30](v67, -1, -1);
        MEMORY[0x2199C0A30](v61, -1, -1);

      }
      else
      {

      }
      goto LABEL_31;
    }
  }
  v212 = (int *)a2;
  v21 = objc_msgSend(a1, sel_values);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D30320);
  v23 = sub_213C860C4();

  if (!*(_QWORD *)(v23 + 16) || (v24 = sub_213C4B3DC(0x61645F7472617473, 0xEE00656D69746574), (v25 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_19;
  }
  v26 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v219 = v26;
  v27 = swift_dynamicCast();
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v28(v9, v27 ^ 1u, 1, v10);
  v29 = v22;
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v30(v9, 1, v10) == 1)
  {
LABEL_19:
    sub_213C3B7AC((uint64_t)v9, &qword_254D30328);
    if (qword_254D2D960 != -1)
      swift_once();
    v51 = sub_213C86094();
    __swift_project_value_buffer(v51, (uint64_t)qword_254D2FF28);
    v52 = sub_213C8607C();
    v53 = sub_213C863F4();
    v54 = os_log_type_enabled(v52, v53);
    a2 = (uint64_t)v212;
    if (v54)
    {
      v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v55 = 0;
      _os_log_impl(&dword_213C25000, v52, v53, "Failed at parsing start_datetime", v55, 2u);
      MEMORY[0x2199C0A30](v55, -1, -1);
    }

    goto LABEL_24;
  }
  v208 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v208(v211, v9, v10);
  v31 = objc_msgSend(a1, sel_values);
  v209 = v29;
  v32 = sub_213C860C4();

  if (!*(_QWORD *)(v32 + 16) || (v33 = sub_213C4B3DC(0x657461645F646E65, 0xEC000000656D6974), (v34 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    v28(v7, 1, 1, v10);
    goto LABEL_34;
  }
  v35 = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v33);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v219 = v35;
  v36 = swift_dynamicCast();
  v28(v7, v36 ^ 1u, 1, v10);
  v37 = v30(v7, 1, v10);
  v38 = v216;
  if (v37 == 1)
  {
LABEL_34:
    sub_213C3B7AC((uint64_t)v7, &qword_254D30328);
    a2 = (uint64_t)v212;
    if (qword_254D2D960 != -1)
      swift_once();
    v69 = sub_213C86094();
    __swift_project_value_buffer(v69, (uint64_t)qword_254D2FF28);
    v70 = sub_213C8607C();
    v71 = sub_213C863F4();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v72 = 0;
      _os_log_impl(&dword_213C25000, v70, v71, "Failed at parsing end_datetime", v72, 2u);
      v73 = v72;
      a2 = (uint64_t)v212;
      MEMORY[0x2199C0A30](v73, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v211, v10);
    goto LABEL_24;
  }
  v208(v210, v7, v10);
  v39 = objc_msgSend(a1, sel_values);
  v40 = sub_213C860C4();

  a2 = (uint64_t)v212;
  if (!*(_QWORD *)(v40 + 16) || (v41 = sub_213C4B3DC(0x74726F686F63, 0xE600000000000000), (v42 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  v43 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v41);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v219 = v43;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_40:
    if (qword_254D2D960 != -1)
      swift_once();
    v74 = sub_213C86094();
    __swift_project_value_buffer(v74, (uint64_t)qword_254D2FF28);
    v75 = sub_213C8607C();
    v76 = sub_213C863F4();
    if (!os_log_type_enabled(v75, v76))
      goto LABEL_45;
    v77 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v77 = 0;
    v78 = "Failed at parsing cohort";
    goto LABEL_44;
  }
  v44 = v221;
  v45 = objc_msgSend(a1, sel_values);
  v46 = sub_213C860C4();

  if (*(_QWORD *)(v46 + 16) && (v47 = sub_213C4B3DC(0x73656369766564, 0xE700000000000000), (v48 & 1) != 0))
  {
    v49 = *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v47);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v219 = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v50 = v221;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v18[v38] = v50;
      goto LABEL_52;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_254D2D960 != -1)
    swift_once();
  v81 = sub_213C86094();
  __swift_project_value_buffer(v81, (uint64_t)qword_254D2FF28);
  v82 = sub_213C8607C();
  v83 = sub_213C863F4();
  if (os_log_type_enabled(v82, v83))
  {
    v84 = (uint8_t *)swift_slowAlloc();
    v207 = v44;
    v85 = v84;
    *(_WORD *)v84 = 0;
    _os_log_impl(&dword_213C25000, v82, v83, "devices not set in the CK record. Interpreting this as all device types.", v84, 2u);
    v86 = v85;
    v44 = v207;
    MEMORY[0x2199C0A30](v86, -1, -1);
  }

LABEL_52:
  v87 = objc_msgSend(a1, sel_values);
  v88 = sub_213C860C4();

  if (!*(_QWORD *)(v88 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_62:
    if (qword_254D2D960 != -1)
      swift_once();
    v101 = sub_213C86094();
    __swift_project_value_buffer(v101, (uint64_t)qword_254D2FF28);
    v75 = sub_213C8607C();
    v76 = sub_213C863F4();
    if (!os_log_type_enabled(v75, v76))
      goto LABEL_45;
    v77 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v77 = 0;
    v78 = "Failed at parsing iteration";
    goto LABEL_44;
  }
  v89 = sub_213C4B3DC(0x6F69746172657469, 0xE90000000000006ELL);
  if ((v90 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_61;
  }
  v91 = *(_QWORD *)(*(_QWORD *)(v88 + 56) + 8 * v89);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v219 = v91;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_61:
    a2 = (uint64_t)v212;
    goto LABEL_62;
  }
  v206 = v221;
  v92 = objc_msgSend(a1, sel_values);
  v93 = sub_213C860C4();

  v94 = *(_QWORD *)(v93 + 16);
  v207 = v44;
  if (v94 && (v95 = sub_213C4B3DC(0x65676175676E616CLL, 0xE900000000000073), (v96 & 1) != 0))
  {
    v97 = *(_QWORD *)(*(_QWORD *)(v93 + 56) + 8 * v95);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v219 = v97;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0);
    v98 = swift_dynamicCast();
    a2 = (uint64_t)v212;
    if ((v98 & 1) != 0)
    {
      v99 = v221;
      v100 = v217;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v18[v100] = v99;
      goto LABEL_72;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    a2 = (uint64_t)v212;
  }
  if (qword_254D2D960 != -1)
    swift_once();
  v102 = sub_213C86094();
  __swift_project_value_buffer(v102, (uint64_t)qword_254D2FF28);
  v103 = sub_213C8607C();
  v104 = sub_213C863F4();
  if (os_log_type_enabled(v103, v104))
  {
    v105 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v105 = 0;
    _os_log_impl(&dword_213C25000, v103, v104, "languages not set in the CK record. Interpreting this as all languages.", v105, 2u);
    MEMORY[0x2199C0A30](v105, -1, -1);
  }

LABEL_72:
  v106 = objc_msgSend(a1, sel_values);
  v107 = sub_213C860C4();

  if (*(_QWORD *)(v107 + 16) && (v108 = sub_213C4B3DC(0x73656C61636F6CLL, 0xE700000000000000), (v109 & 1) != 0))
  {
    v110 = *(_QWORD *)(*(_QWORD *)(v107 + 56) + 8 * v108);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v219 = v110;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v111 = v221;
      v112 = v218;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v18[v112] = v111;
      goto LABEL_82;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_254D2D960 != -1)
    swift_once();
  v113 = sub_213C86094();
  __swift_project_value_buffer(v113, (uint64_t)qword_254D2FF28);
  v114 = sub_213C8607C();
  v115 = sub_213C863F4();
  if (os_log_type_enabled(v114, v115))
  {
    v116 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v116 = 0;
    _os_log_impl(&dword_213C25000, v114, v115, "locales not set in the CK record. Interpreting this as all locales.", v116, 2u);
    MEMORY[0x2199C0A30](v116, -1, -1);
  }

LABEL_82:
  v117 = objc_msgSend(a1, sel_values);
  v118 = sub_213C860C4();

  if (!*(_QWORD *)(v118 + 16) || (v119 = sub_213C4B3DC(0x695F6E6967756C70, 0xE900000000000064), (v120 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_90;
  }
  v121 = *(_QWORD *)(*(_QWORD *)(v118 + 56) + 8 * v119);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v221 = v121;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_90:
    if (qword_254D2D960 != -1)
      swift_once();
    v131 = sub_213C86094();
    __swift_project_value_buffer(v131, (uint64_t)qword_254D2FF28);
    v75 = sub_213C8607C();
    v76 = sub_213C863F4();
    if (!os_log_type_enabled(v75, v76))
      goto LABEL_45;
    v77 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v77 = 0;
    v78 = "Failed at parsing plugin_id";
LABEL_44:
    _os_log_impl(&dword_213C25000, v75, v76, v78, v77, 2u);
    v79 = v77;
    a2 = (uint64_t)v212;
    MEMORY[0x2199C0A30](v79, -1, -1);
LABEL_45:

    v80 = *(void (**)(char *, uint64_t))(v11 + 8);
    v80(v210, v10);
    v80(v211, v10);
LABEL_24:
    v56 = v213;
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v56 + 56))(a2, 1, 1, v15);
  }
  v123 = v219;
  v122 = v220;
  v124 = objc_msgSend(a1, sel_values);
  v125 = sub_213C860C4();

  if (*(_QWORD *)(v125 + 16) && (v126 = sub_213C4B3DC(0xD000000000000013, 0x8000000213C8DE70), (v127 & 1) != 0))
  {
    v128 = *(_QWORD *)(*(_QWORD *)(v125 + 56) + 8 * v126);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v219 = v128;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v129 = v221;
      v130 = v215;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v18[v130] = v129;
      goto LABEL_100;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_254D2D960 != -1)
    swift_once();
  v132 = sub_213C86094();
  __swift_project_value_buffer(v132, (uint64_t)qword_254D2FF28);
  v133 = sub_213C8607C();
  v134 = sub_213C863F4();
  if (os_log_type_enabled(v133, v134))
  {
    v135 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v135 = 0;
    _os_log_impl(&dword_213C25000, v133, v134, "population_category not set in the CK record. Interpreting this as $all.", v135, 2u);
    MEMORY[0x2199C0A30](v135, -1, -1);
  }

LABEL_100:
  v136 = objc_msgSend(a1, sel_values);
  v137 = sub_213C860C4();

  if (!*(_QWORD *)(v137 + 16) || (v138 = sub_213C4B3DC(0x695F657069636572, 0xE900000000000064), (v139 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_108;
  }
  v140 = *(_QWORD *)(*(_QWORD *)(v137 + 56) + 8 * v138);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v221 = v140;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_108:
    swift_bridgeObjectRelease();
    if (qword_254D2D960 != -1)
      swift_once();
    v148 = sub_213C86094();
    __swift_project_value_buffer(v148, (uint64_t)qword_254D2FF28);
    v149 = sub_213C8607C();
    v150 = sub_213C863F4();
    if (!os_log_type_enabled(v149, v150))
      goto LABEL_113;
    v151 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v151 = 0;
    v152 = "Failed at parsing recipe_id";
    goto LABEL_112;
  }
  v204 = v219;
  v205 = v220;
  v141 = objc_msgSend(a1, sel_values);
  v142 = sub_213C860C4();

  if (*(_QWORD *)(v142 + 16) && (v143 = sub_213C4B3DC(0x736E6F69676572, 0xE700000000000000), (v144 & 1) != 0))
  {
    v145 = *(_QWORD *)(*(_QWORD *)(v142 + 56) + 8 * v143);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v219 = v145;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v146 = v221;
      v147 = v214;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v18[v147] = v146;
      goto LABEL_120;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_254D2D960 != -1)
    swift_once();
  v154 = sub_213C86094();
  __swift_project_value_buffer(v154, (uint64_t)qword_254D2FF28);
  v155 = sub_213C8607C();
  v156 = sub_213C863F4();
  if (os_log_type_enabled(v155, v156))
  {
    v157 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v157 = 0;
    _os_log_impl(&dword_213C25000, v155, v156, "regions not set in the CK record. Interpreting this as all regions.", v157, 2u);
    MEMORY[0x2199C0A30](v157, -1, -1);
  }

LABEL_120:
  v158 = objc_msgSend(a1, sel_values);
  v159 = sub_213C860C4();

  if (!*(_QWORD *)(v159 + 16) || (v160 = sub_213C4B3DC(0x676E696C706D6173, 0xED0000657461725FLL), (v161 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_137:
    swift_bridgeObjectRelease();
    if (qword_254D2D960 != -1)
      swift_once();
    v187 = sub_213C86094();
    __swift_project_value_buffer(v187, (uint64_t)qword_254D2FF28);
    v149 = sub_213C8607C();
    v150 = sub_213C863F4();
    if (!os_log_type_enabled(v149, v150))
      goto LABEL_113;
    v151 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v151 = 0;
    v152 = "Failed at parsing sampling_rate";
    goto LABEL_112;
  }
  v162 = *(_QWORD *)(*(_QWORD *)(v159 + 56) + 8 * v160);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v219 = v162;
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_137;
  }
  v163 = v221;
  v164 = objc_msgSend(a1, sel_values);
  v165 = sub_213C860C4();

  if (!*(_QWORD *)(v165 + 16) || (v166 = sub_213C4B3DC(0x737574617473, 0xE600000000000000), (v167 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_143:
    swift_bridgeObjectRelease();
    if (qword_254D2D960 != -1)
      swift_once();
    v188 = sub_213C86094();
    __swift_project_value_buffer(v188, (uint64_t)qword_254D2FF28);
    v149 = sub_213C8607C();
    v150 = sub_213C863F4();
    if (!os_log_type_enabled(v149, v150))
      goto LABEL_113;
    v151 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v151 = 0;
    v152 = "Failed at parsing status";
    goto LABEL_112;
  }
  v168 = *(_QWORD *)(*(_QWORD *)(v165 + 56) + 8 * v166);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v221 = v168;
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_143;
  }
  v202 = v219;
  v203 = v220;
  v169 = objc_msgSend(a1, sel_values);
  v170 = sub_213C860C4();

  if (!*(_QWORD *)(v170 + 16) || (v171 = sub_213C4B3DC(0x635F746567726174, 0xEF61697265746972), (v172 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_149:
    swift_bridgeObjectRelease();
    if (qword_254D2D960 != -1)
      swift_once();
    v189 = sub_213C86094();
    __swift_project_value_buffer(v189, (uint64_t)qword_254D2FF28);
    v149 = sub_213C8607C();
    v150 = sub_213C863F4();
    if (!os_log_type_enabled(v149, v150))
      goto LABEL_113;
    v151 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v151 = 0;
    v152 = "Failed at reading target_criteria_str from CK record.";
    goto LABEL_112;
  }
  v173 = *(_QWORD *)(*(_QWORD *)(v170 + 56) + 8 * v171);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v221 = v173;
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_149;
  }
  v174 = v220;
  v201 = v219;
  v175 = objc_msgSend(a1, sel_values);
  v176 = sub_213C860C4();

  if (!*(_QWORD *)(v176 + 16) || (v177 = sub_213C4B3DC(0x64695F6B736174, 0xE700000000000000), (v178 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_155:
    swift_bridgeObjectRelease();
    if (qword_254D2D960 != -1)
      swift_once();
    v190 = sub_213C86094();
    __swift_project_value_buffer(v190, (uint64_t)qword_254D2FF28);
    v149 = sub_213C8607C();
    v150 = sub_213C863F4();
    if (!os_log_type_enabled(v149, v150))
      goto LABEL_113;
    v151 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v151 = 0;
    v152 = "Failed at parsing task_id";
LABEL_112:
    _os_log_impl(&dword_213C25000, v149, v150, v152, v151, 2u);
    MEMORY[0x2199C0A30](v151, -1, -1);
LABEL_113:

    v153 = *(void (**)(char *, uint64_t))(v11 + 8);
    v153(v210, v10);
    v153(v211, v10);
    a2 = (uint64_t)v212;
LABEL_31:
    v56 = v213;
    goto LABEL_32;
  }
  v179 = *(_QWORD *)(*(_QWORD *)(v176 + 56) + 8 * v177);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v221 = v179;
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_155;
  }
  v180 = v219;
  v218 = v220;
  v181 = objc_msgSend(a1, sel_values);
  v182 = sub_213C860C4();

  if (!*(_QWORD *)(v182 + 16) || (v183 = sub_213C4B3DC(0x7364656573, 0xE500000000000000), (v184 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_161;
  }
  v185 = *(_QWORD *)(*(_QWORD *)(v182 + 56) + 8 * v183);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v219 = v185;
  __swift_instantiateConcreteTypeFromMangledName(qword_254D30330);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_161:

    v186 = MEMORY[0x24BEE4AF8];
    goto LABEL_162;
  }
  v186 = v221;

LABEL_162:
  v191 = v208;
  v208(v18, v211, v10);
  v191(&v18[v15[5]], v210, v10);
  *(_QWORD *)&v18[v15[6]] = v207;
  *(_QWORD *)&v18[v15[8]] = v206;
  v192 = (uint64_t *)&v18[v15[11]];
  *v192 = v123;
  v192[1] = v122;
  v193 = (uint64_t *)&v18[v15[13]];
  v194 = v205;
  *v193 = v204;
  v193[1] = v194;
  *(_QWORD *)&v18[v15[15]] = v163;
  v195 = (uint64_t *)&v18[v15[16]];
  v196 = v203;
  *v195 = v202;
  v195[1] = v196;
  v197 = (uint64_t *)&v18[v15[17]];
  *v197 = v201;
  v197[1] = v174;
  v198 = (uint64_t *)&v18[v15[18]];
  v199 = v218;
  *v198 = v180;
  v198[1] = v199;
  *(_QWORD *)&v18[v15[19]] = v186;
  v200 = (uint64_t)v212;
  sub_213C3AA04((uint64_t)v18, (uint64_t)v212);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v213 + 56))(v200, 0, 1, v15);
  return sub_213C7BCF8((uint64_t)v18);
}

uint64_t sub_213C7B440@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char v31;
  void *v32;
  id v33;
  void *v34;
  void (*v35)(char *, char *, uint64_t);
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  const char *v46;
  uint64_t v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E390);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213C85E18();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v62 - v12;
  v14 = type metadata accessor for CKPayloadRecord(0);
  v67 = *(_QWORD *)(v14 - 8);
  v68 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (sub_213C86454() == *(_QWORD *)aPayload && v17 == unk_254D30248)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v66 = a2;
    v19 = objc_msgSend(a1, sel_values);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D30320);
    v20 = sub_213C860C4();

    if (*(_QWORD *)(v20 + 16) && (v21 = sub_213C4B3DC(0x695F6E6967756C70, 0xE900000000000064), (v22 & 1) != 0))
    {
      v23 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v21);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      v71 = v23;
      if ((swift_dynamicCast() & 1) != 0)
      {
        v64 = v69;
        v65 = v70;
        v24 = objc_msgSend(a1, sel_values);
        v25 = sub_213C860C4();

        if (*(_QWORD *)(v25 + 16) && (v26 = sub_213C4B3DC(0x657069636572, 0xE600000000000000), (v27 & 1) != 0))
        {
          v28 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v26);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          v71 = v28;
          if ((swift_dynamicCast() & 1) != 0)
          {
            v62 = v69;
            v63 = v70;
            v29 = objc_msgSend(a1, sel_values);
            v30 = sub_213C860C4();

            if (*(_QWORD *)(v30 + 16) && (sub_213C4B3DC(0x656D686361747461, 0xEA0000000000746ELL), (v31 & 1) != 0))
            {
              swift_unknownObjectRetain();
              swift_bridgeObjectRelease();
              objc_opt_self();
              v32 = (void *)swift_dynamicCastObjCClass();
              if (v32)
              {
                v33 = objc_msgSend(v32, sel_fileURL);
                if (v33)
                {
                  v34 = v33;
                  sub_213C85DC4();
                  swift_unknownObjectRelease();

                  v35 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
                  v35(v6, v11, v7);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
                  v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
                  v37 = v67;
                  if (v36 != 1)
                  {

                    v35(v13, v6, v7);
                    v38 = v65;
                    *v16 = v64;
                    v16[1] = v38;
                    v39 = v63;
                    v16[2] = v62;
                    v16[3] = v39;
                    v40 = v68;
                    v35((char *)v16 + *(int *)(v68 + 24), v13, v7);
                    a2 = v66;
                    sub_213C7BCB4((uint64_t)v16, v66);
                    v41 = 0;
                    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(a2, v41, 1, v40);
                  }
                }
                else
                {
                  swift_unknownObjectRelease();
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
                  v37 = v67;
                }
                swift_bridgeObjectRelease();
                sub_213C3B7AC((uint64_t)v6, &qword_254D2E390);
                v40 = v68;
                goto LABEL_39;
              }
              swift_unknownObjectRelease();
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            v37 = v67;
            v40 = v68;
LABEL_39:
            v58 = v62;
            v57 = v63;
            if (qword_254D2D960 != -1)
              swift_once();
            v59 = sub_213C86094();
            __swift_project_value_buffer(v59, (uint64_t)qword_254D2FF28);
            v43 = sub_213C8607C();
            v60 = sub_213C863F4();
            if (os_log_type_enabled(v43, v60))
            {
              v61 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v61 = 0;
              _os_log_impl(&dword_213C25000, v43, v60, "Failed at parsing attachment", v61, 2u);
              MEMORY[0x2199C0A30](v61, -1, -1);
            }
            sub_213C3B078(v58, v57);
            goto LABEL_23;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v37 = v67;
        v40 = v68;
        if (qword_254D2D960 != -1)
          swift_once();
        v56 = sub_213C86094();
        __swift_project_value_buffer(v56, (uint64_t)qword_254D2FF28);
        v43 = sub_213C8607C();
        v44 = sub_213C863F4();
        if (!os_log_type_enabled(v43, v44))
          goto LABEL_23;
        v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v45 = 0;
        v46 = "Failed at parsing recipe";
LABEL_22:
        _os_log_impl(&dword_213C25000, v43, v44, v46, v45, 2u);
        MEMORY[0x2199C0A30](v45, -1, -1);
LABEL_23:

        v41 = 1;
        a2 = v66;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(a2, v41, 1, v40);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v37 = v67;
    v40 = v68;
    if (qword_254D2D960 != -1)
      swift_once();
    v42 = sub_213C86094();
    __swift_project_value_buffer(v42, (uint64_t)qword_254D2FF28);
    v43 = sub_213C8607C();
    v44 = sub_213C863F4();
    if (!os_log_type_enabled(v43, v44))
      goto LABEL_23;
    v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v45 = 0;
    v46 = "Failed at parsing plugin_id";
    goto LABEL_22;
  }
  v18 = sub_213C86748();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
    goto LABEL_5;
  if (qword_254D2D960 != -1)
    swift_once();
  v47 = sub_213C86094();
  __swift_project_value_buffer(v47, (uint64_t)qword_254D2FF28);
  v48 = a1;
  v49 = sub_213C8607C();
  v50 = sub_213C863F4();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = (uint8_t *)swift_slowAlloc();
    v52 = swift_slowAlloc();
    v69 = v52;
    *(_DWORD *)v51 = 136315138;
    v53 = sub_213C86454();
    v71 = sub_213C42558(v53, v54, &v69);
    sub_213C86490();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213C25000, v49, v50, "Invalid recordType: %s", v51, 0xCu);
    v41 = 1;
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v52, -1, -1);
    MEMORY[0x2199C0A30](v51, -1, -1);

  }
  else
  {

    v41 = 1;
  }
  v37 = v67;
  v40 = v68;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(a2, v41, 1, v40);
}

uint64_t type metadata accessor for CKPayloadRecord(uint64_t a1)
{
  return sub_213C74EF4(a1, qword_254D30398);
}

uint64_t sub_213C7BCB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CKPayloadRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213C7BCF8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CKPolicyRecord(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_213C7BD34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[2];
    v9 = a2[3];
    swift_bridgeObjectRetain();
    sub_213C3B534(v8, v9);
    a1[2] = v8;
    a1[3] = v9;
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_213C85E18();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_213C7BDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  sub_213C3B078(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_213C85E18();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_213C7BE34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[2];
  v8 = a2[3];
  swift_bridgeObjectRetain();
  sub_213C3B534(v7, v8);
  a1[2] = v7;
  a1[3] = v8;
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_213C85E18();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

_QWORD *sub_213C7BEB8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a2[2];
  v7 = a2[3];
  sub_213C3B534(v6, v7);
  v8 = a1[2];
  v9 = a1[3];
  a1[2] = v6;
  a1[3] = v7;
  sub_213C3B078(v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_213C85E18();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_213C7BF58(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_213C85E18();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *sub_213C7BFB4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a1[2];
  v8 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_213C3B078(v7, v8);
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = a2 + v9;
  v12 = sub_213C85E18();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_213C7C030()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213C7C03C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_213C85E18();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_213C7C0B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213C7C0C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_213C85E18();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_213C7C138()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213C85E18();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t DediscoError.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 9600;
}

PrivateFederatedLearning::DediscoError_optional __swiftcall DediscoError.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = rawValue + 0x80;
  if ((unint64_t)(rawValue - 9600) >= 0x11)
    v2 = 17;
  *v1 = v2;
  return (PrivateFederatedLearning::DediscoError_optional)rawValue;
}

unint64_t sub_213C7C1E4()
{
  unint64_t result;

  result = qword_254D303E0;
  if (!qword_254D303E0)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for DediscoError, &type metadata for DediscoError);
    atomic_store(result, (unint64_t *)&qword_254D303E0);
  }
  return result;
}

uint64_t sub_213C7C228()
{
  sub_213C867F0();
  sub_213C867FC();
  return sub_213C86808();
}

uint64_t sub_213C7C270()
{
  return sub_213C867FC();
}

uint64_t sub_213C7C2A0()
{
  sub_213C867F0();
  sub_213C867FC();
  return sub_213C86808();
}

PrivateFederatedLearning::DediscoError_optional sub_213C7C2E4(Swift::Int *a1)
{
  return DediscoError.init(rawValue:)(*a1);
}

void sub_213C7C2EC(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 9600;
}

uint64_t sub_213C7C300()
{
  sub_213C7C4A0();
  sub_213C632A4();
  return sub_213C867E4();
}

uint64_t getEnumTagSinglePayload for DediscoError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DediscoError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_213C7C420 + 4 * byte_213C8B5A5[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_213C7C454 + 4 * byte_213C8B5A0[v4]))();
}

uint64_t sub_213C7C454(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C7C45C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213C7C464);
  return result;
}

uint64_t sub_213C7C470(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213C7C478);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_213C7C47C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C7C484(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DediscoError()
{
  return &type metadata for DediscoError;
}

unint64_t sub_213C7C4A0()
{
  unint64_t result;

  result = qword_254D303E8;
  if (!qword_254D303E8)
  {
    result = MEMORY[0x2199C0970](&protocol conformance descriptor for DediscoError, &type metadata for DediscoError);
    atomic_store(result, (unint64_t *)&qword_254D303E8);
  }
  return result;
}

uint64_t type metadata accessor for DediscoNumericMetadataEncoder()
{
  return objc_opt_self();
}

uint64_t sub_213C7C504(int32x2_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  a1.i32[0] = 0;
  v4 = sub_213C58E48(a4, a1);
  v5 = sub_213C33998(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_213C7C550(unint64_t a1, float a2)
{
  uint64_t inited;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E228);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213C885B0;
  *(float *)(inited + 32) = a2;
  v5 = sub_213C7C668(inited, a1, (int32x2_t)1);
  swift_setDeallocating();
  return v5;
}

uint64_t sub_213C7C5D0(int32x2_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  a1.i32[0] = 0;
  v3 = sub_213C58E48(a3, a1);
  v4 = sub_213C33998(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_213C7C620(unint64_t a1, int32x2_t a2)
{
  uint64_t v2;
  uint64_t v3;

  a2.i32[0] = 0;
  v2 = sub_213C58E48(a1, a2);
  v3 = sub_213C33998(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_213C7C668(uint64_t a1, unint64_t a2, int32x2_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2;
  a3.i32[0] = 0;
  v6 = sub_213C58E48(a2, a3);
  v7 = *(_QWORD *)(a1 + 16);
  if ((uint64_t)v7 < (uint64_t)v4)
    v4 = *(_QWORD *)(a1 + 16);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v3 = v6;
  if (!v4)
    goto LABEL_15;
  if (!v7)
    goto LABEL_17;
  if (v4 - 1 >= v7)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v4 - 1 >= *(_QWORD *)(v6 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_20:
    v3 = sub_213C5F284(v3);
  v8 = 0;
  if (v4 < 8)
    goto LABEL_23;
  if ((unint64_t)(v3 - a1) < 0x20)
    goto LABEL_23;
  v9 = 0;
  v8 = v4 & 0xFFFFFFFFFFFFFFF8;
  v10 = v4 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v11 = *(_OWORD *)(a1 + v9 + 48);
    v12 = v3 + v9;
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(a1 + v9 + 32);
    *(_OWORD *)(v12 + 48) = v11;
    v9 += 32;
    v10 -= 8;
  }
  while (v10);
  if (v4 != v8)
  {
LABEL_23:
    do
    {
      *(_DWORD *)(v3 + 4 * v8 + 32) = *(_DWORD *)(a1 + 32 + 4 * v8);
      ++v8;
    }
    while (v4 != v8);
  }
LABEL_15:
  v13 = sub_213C33998(v3);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t Dictionary<>.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v10 = sub_213C86478();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v44 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v44 - v18;
  v52 = a1;
  v53 = a2;
  v50 = 46;
  v51 = 0xE100000000000000;
  sub_213C3B020();
  v20 = (_QWORD *)sub_213C864A8();
  v21 = v20;
  v22 = v20[2];
  if (!v22)
  {
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    return swift_bridgeObjectRelease();
  }
  v49 = v11;
  v23 = v22 - 1;
  if (!v23)
  {
    v24 = v20[4];
    v25 = v20[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v52 = v24;
    v53 = v25;
    MEMORY[0x2199BFAAC](&v52, a3, MEMORY[0x24BEE0D00], a4, MEMORY[0x24BEE0D10]);
    swift_bridgeObjectRelease();
    v26 = *(_QWORD *)(a4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v19, 1, a4) == 1)
    {
      result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v19, v10);
      *(_OWORD *)a5 = 0u;
      *(_OWORD *)(a5 + 16) = 0u;
    }
    else
    {
      *(_QWORD *)(a5 + 24) = a4;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
      return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v26 + 32))(boxed_opaque_existential_1, v19, a4);
    }
    return result;
  }
  v46 = v14;
  v47 = v10;
  v48 = (uint64_t *)a5;
  v45 = v20 + 4;
  v28 = v23 & 0x7FFFFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v21 + 5;
  v30 = MEMORY[0x24BEE0D00];
  v31 = MEMORY[0x24BEE0D10];
  do
  {
    if (!v28)
    {
      __break(1u);
      goto LABEL_22;
    }
    v32 = *v29;
    v52 = *(v29 - 1);
    v53 = v32;
    swift_bridgeObjectRetain();
    MEMORY[0x2199BFAAC](&v52, a3, v30, a4, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = *(_QWORD *)(a4 - 8);
    v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    if (v34(v17, 1, a4) == 1)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v17, v47);
LABEL_17:
      result = swift_unknownObjectRelease();
      goto LABEL_18;
    }
    sub_213C860DC();
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    a3 = v52;
    v29 += 2;
    --v28;
  }
  while (v28);
  swift_unknownObjectRelease();
  v35 = v21[2];
  if (!v35)
  {
LABEL_22:
    result = swift_bridgeObjectRelease();
    __break(1u);
    return result;
  }
  v36 = &v45[2 * v35];
  v37 = *(v36 - 2);
  v38 = *(v36 - 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v52 = v37;
  v53 = v38;
  v39 = v46;
  MEMORY[0x2199BFAAC](&v52, a3, MEMORY[0x24BEE0D00], a4, MEMORY[0x24BEE0D10]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v34(v39, 1, a4) == 1)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v39, v47);
LABEL_18:
    v41 = v48;
    *(_OWORD *)v48 = 0u;
    *((_OWORD *)v41 + 1) = 0u;
    return result;
  }
  v42 = v48;
  v48[3] = a4;
  v43 = __swift_allocate_boxed_opaque_existential_1(v42);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v33 + 32))(v43, v39, a4);
}

uint64_t sub_213C7CB28(uint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) == 0)
    return a2;
  __break(1u);
  return result;
}

_OWORD *sub_213C7CB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _OWORD *result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  unint64_t v35;

  *(_QWORD *)&v32 = a1;
  *((_QWORD *)&v32 + 1) = a2;
  v34 = 46;
  v35 = 0xE100000000000000;
  sub_213C3B020();
  v6 = (_QWORD *)sub_213C864A8();
  v7 = v6;
  v8 = v6[2];
  if (!v8)
  {
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    return (_OWORD *)swift_bridgeObjectRelease();
  }
  if (v8 == 1)
  {
    v9 = v6[4];
    v10 = v6[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a3 + 16) && (v11 = sub_213C4B3DC(v9, v10), (v12 & 1) != 0))
    {
      sub_213C35070(*(_QWORD *)(a3 + 56) + 32 * v11, (uint64_t)&v32);
    }
    else
    {
      v32 = 0u;
      v33 = 0u;
    }
    goto LABEL_28;
  }
  sub_213C7CB28(1, (uint64_t)v6);
  v17 = v16 >> 1;
  if (v15 != v16 >> 1)
  {
    v18 = v14;
    v19 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = (uint64_t *)(v18 + 16 * v19 + 8);
    while (v19 < v17)
    {
      if (*(_QWORD *)(a3 + 16))
      {
        v21 = *(v20 - 1);
        v22 = *v20;
        swift_bridgeObjectRetain();
        v23 = sub_213C4B3DC(v21, v22);
        if ((v24 & 1) != 0)
        {
          sub_213C35070(*(_QWORD *)(a3 + 56) + 32 * v23, (uint64_t)&v32);
        }
        else
        {
          v32 = 0u;
          v33 = 0u;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v32 = 0u;
        v33 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((_QWORD *)&v33 + 1))
      {
        swift_bridgeObjectRelease();
        sub_213C3B7AC((uint64_t)&v32, &qword_254D2DBA0);
        result = (_OWORD *)swift_unknownObjectRelease();
        goto LABEL_33;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE68);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_unknownObjectRelease();
        result = (_OWORD *)swift_bridgeObjectRelease();
        goto LABEL_33;
      }
      ++v19;
      a3 = v34;
      v20 += 2;
      if (v17 == v19)
        goto LABEL_22;
    }
    __break(1u);
    goto LABEL_36;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_22:
  swift_unknownObjectRelease();
  v25 = v7[2];
  if (!v25)
  {
LABEL_36:
    result = (_OWORD *)swift_bridgeObjectRelease();
    __break(1u);
    return result;
  }
  v26 = &v7[2 * v25];
  v27 = v26[2];
  v28 = v26[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a3 + 16) && (v29 = sub_213C4B3DC(v27, v28), (v30 & 1) != 0))
  {
    sub_213C35070(*(_QWORD *)(a3 + 56) + 32 * v29, (uint64_t)&v32);
  }
  else
  {
    v32 = 0u;
    v33 = 0u;
  }
  swift_bridgeObjectRelease();
LABEL_28:
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v33 + 1))
  {
    *(_QWORD *)(a4 + 24) = MEMORY[0x24BEE4AD8] + 8;
    v31 = swift_allocObject();
    *(_QWORD *)a4 = v31;
    return sub_213C3B0BC(&v32, (_OWORD *)(v31 + 16));
  }
  else
  {
    result = (_OWORD *)sub_213C3B7AC((uint64_t)&v32, &qword_254D2DBA0);
LABEL_33:
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t type metadata accessor for DediscoAggregatableMetadata()
{
  return objc_opt_self();
}

uint64_t sub_213C7CE9C(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_213C44260(v2);
  v3 = v2[2];
  v5[0] = v2 + 4;
  v5[1] = v3;
  result = sub_213C7CF04(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_213C7CF04(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  BOOL v16;
  int v17;
  __int128 *v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v34;
  __int128 *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  _QWORD *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *__dst;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v2 = a1;
  v3 = a1[1];
  result = sub_213C86718();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_148;
    if (v3)
      return sub_213C7D6EC(0, v3, 1, v2);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_156;
  v106 = result;
  v115 = v1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v105 = MEMORY[0x24BEE4AF8];
    if (v3 != 1)
    {
      v10 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_115:
      v96 = v8;
      if (v10 >= 2)
      {
        v97 = *v2;
        do
        {
          v98 = v10 - 2;
          if (v10 < 2)
            goto LABEL_143;
          if (!v97)
            goto LABEL_155;
          v99 = v96;
          v100 = *(_QWORD *)&v96[16 * v98 + 32];
          v101 = *(_QWORD *)&v96[16 * v10 + 24];
          v102 = v115;
          sub_213C7D838((char *)(v97 + 48 * v100), (char *)(v97 + 48 * *(_QWORD *)&v96[16 * v10 + 16]), v97 + 48 * v101, __dst);
          v115 = v102;
          if (v102)
            break;
          if (v101 < v100)
            goto LABEL_144;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v99 = sub_213C7DD98((uint64_t)v99);
          if (v98 >= *((_QWORD *)v99 + 2))
            goto LABEL_145;
          v103 = &v99[16 * v98 + 32];
          *(_QWORD *)v103 = v100;
          *((_QWORD *)v103 + 1) = v101;
          v104 = *((_QWORD *)v99 + 2);
          if (v10 > v104)
            goto LABEL_146;
          memmove(&v99[16 * v10 + 16], &v99[16 * v10 + 32], 16 * (v104 - v10));
          v96 = v99;
          *((_QWORD *)v99 + 2) = v104 - 1;
          v10 = v104 - 1;
        }
        while (v104 > 2);
      }
LABEL_112:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v105 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE48);
    v7 = sub_213C862B0();
    *(_QWORD *)(v7 + 16) = v6;
    v105 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v8 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v11 = v9++;
    if (v9 >= v3)
      goto LABEL_41;
    v12 = *v2;
    sub_213C7E930(*v2 + 48 * v9, (uint64_t)&v113, &qword_254D2DE48);
    v13 = v12;
    sub_213C7E930(v12 + 48 * v11, (uint64_t)&v111, &qword_254D2DE48);
    if (v113 == v111 && v114 == v112)
      v14 = 0;
    else
      v14 = sub_213C86748();
    sub_213C3B7AC((uint64_t)&v111, &qword_254D2DE48);
    sub_213C3B7AC((uint64_t)&v113, &qword_254D2DE48);
    v9 = v11 + 2;
    if (v11 + 2 >= v3)
    {
      if ((v14 & 1) == 0)
        goto LABEL_41;
LABEL_34:
      if (v9 < v11)
        goto LABEL_149;
      if (v11 < v9)
      {
        v18 = (__int128 *)(v13 + 48 * v9 - 48);
        v19 = (__int128 *)(v13 + 48 * v11);
        v20 = v9;
        v21 = v11;
        while (1)
        {
          if (v21 != --v20)
          {
            if (!v13)
              goto LABEL_154;
            v22 = *v19;
            v23 = v19[1];
            v24 = v19[2];
            v26 = v18[1];
            v25 = v18[2];
            *v19 = *v18;
            v19[1] = v26;
            v19[2] = v25;
            v18[1] = v23;
            v18[2] = v24;
            *v18 = v22;
          }
          ++v21;
          v18 -= 3;
          v19 += 3;
          if (v21 >= v20)
            goto LABEL_41;
        }
      }
      goto LABEL_41;
    }
    v107 = v13;
    v15 = v13 + 48 * v11 + 48;
    while (1)
    {
      sub_213C7E930(v15 + 48, (uint64_t)&v113, &qword_254D2DE48);
      sub_213C7E930(v15, (uint64_t)&v111, &qword_254D2DE48);
      v16 = v113 == v111 && v114 == v112;
      v17 = v16 ? 0 : sub_213C86748();
      sub_213C3B7AC((uint64_t)&v111, &qword_254D2DE48);
      sub_213C3B7AC((uint64_t)&v113, &qword_254D2DE48);
      if (((v14 ^ v17) & 1) != 0)
        break;
      ++v9;
      v15 += 48;
      if (v3 == v9)
      {
        v9 = v3;
        break;
      }
    }
    v13 = v107;
    if ((v14 & 1) != 0)
      goto LABEL_34;
LABEL_41:
    if (v9 >= v3)
      goto LABEL_64;
    if (__OFSUB__(v9, v11))
      goto LABEL_147;
    if (v9 - v11 >= v106)
      goto LABEL_64;
    if (__OFADD__(v11, v106))
      goto LABEL_150;
    v27 = v11;
    v28 = v11 + v106 >= v3 ? v3 : v11 + v106;
    v108 = v27;
    if (v28 < v27)
      break;
    if (v9 != v28)
    {
      v29 = 48 * v9;
      do
      {
        v30 = v108;
        v31 = v29;
        while (1)
        {
          v32 = *v2 + v31;
          sub_213C7E930(v32, (uint64_t)&v113, &qword_254D2DE48);
          sub_213C7E930(v32 - 48, (uint64_t)&v111, &qword_254D2DE48);
          if (v113 == v111 && v114 == v112)
            break;
          v34 = sub_213C86748();
          sub_213C3B7AC((uint64_t)&v111, &qword_254D2DE48);
          sub_213C3B7AC((uint64_t)&v113, &qword_254D2DE48);
          if ((v34 & 1) == 0)
            goto LABEL_52;
          if (!*v2)
            goto LABEL_152;
          v35 = (__int128 *)(*v2 + v31);
          v37 = v35[1];
          v36 = v35[2];
          v38 = *v35;
          v39 = *(v35 - 2);
          *v35 = *(v35 - 3);
          v35[1] = v39;
          v35[2] = *(v35 - 1);
          *(v35 - 3) = v38;
          *(v35 - 2) = v37;
          *(v35 - 1) = v36;
          v31 -= 48;
          if (v9 == ++v30)
            goto LABEL_52;
        }
        sub_213C3B7AC((uint64_t)&v111, &qword_254D2DE48);
        sub_213C3B7AC((uint64_t)&v113, &qword_254D2DE48);
LABEL_52:
        ++v9;
        v29 += 48;
      }
      while (v9 != v28);
      v9 = v28;
    }
    v11 = v108;
LABEL_64:
    if (v9 < v11)
      goto LABEL_142;
    v40 = v11;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_213C7DBE4(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v42 = *((_QWORD *)v8 + 2);
    v41 = *((_QWORD *)v8 + 3);
    v10 = v42 + 1;
    if (v42 >= v41 >> 1)
      v8 = sub_213C7DBE4((char *)(v41 > 1), v42 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v10;
    v43 = v8 + 32;
    v44 = &v8[16 * v42 + 32];
    *(_QWORD *)v44 = v40;
    *((_QWORD *)v44 + 1) = v9;
    if (v42)
    {
      v109 = v9;
      while (1)
      {
        v45 = v10 - 1;
        if (v10 >= 4)
        {
          v50 = &v43[16 * v10];
          v51 = *((_QWORD *)v50 - 8);
          v52 = *((_QWORD *)v50 - 7);
          v56 = __OFSUB__(v52, v51);
          v53 = v52 - v51;
          if (v56)
            goto LABEL_131;
          v55 = *((_QWORD *)v50 - 6);
          v54 = *((_QWORD *)v50 - 5);
          v56 = __OFSUB__(v54, v55);
          v48 = v54 - v55;
          v49 = v56;
          if (v56)
            goto LABEL_132;
          v57 = v10 - 2;
          v58 = &v43[16 * v10 - 32];
          v60 = *(_QWORD *)v58;
          v59 = *((_QWORD *)v58 + 1);
          v56 = __OFSUB__(v59, v60);
          v61 = v59 - v60;
          if (v56)
            goto LABEL_134;
          v56 = __OFADD__(v48, v61);
          v62 = v48 + v61;
          if (v56)
            goto LABEL_137;
          if (v62 >= v53)
          {
            v80 = &v43[16 * v45];
            v82 = *(_QWORD *)v80;
            v81 = *((_QWORD *)v80 + 1);
            v56 = __OFSUB__(v81, v82);
            v83 = v81 - v82;
            if (v56)
              goto LABEL_141;
            v73 = v48 < v83;
            goto LABEL_102;
          }
        }
        else
        {
          if (v10 != 3)
          {
            v74 = *((_QWORD *)v8 + 4);
            v75 = *((_QWORD *)v8 + 5);
            v56 = __OFSUB__(v75, v74);
            v67 = v75 - v74;
            v68 = v56;
            goto LABEL_96;
          }
          v47 = *((_QWORD *)v8 + 4);
          v46 = *((_QWORD *)v8 + 5);
          v56 = __OFSUB__(v46, v47);
          v48 = v46 - v47;
          v49 = v56;
        }
        if ((v49 & 1) != 0)
          goto LABEL_133;
        v57 = v10 - 2;
        v63 = &v43[16 * v10 - 32];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        v66 = __OFSUB__(v64, v65);
        v67 = v64 - v65;
        v68 = v66;
        if (v66)
          goto LABEL_136;
        v69 = &v43[16 * v45];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v56 = __OFSUB__(v70, v71);
        v72 = v70 - v71;
        if (v56)
          goto LABEL_139;
        if (__OFADD__(v67, v72))
          goto LABEL_140;
        if (v67 + v72 >= v48)
        {
          v73 = v48 < v72;
LABEL_102:
          if (v73)
            v45 = v57;
          goto LABEL_104;
        }
LABEL_96:
        if ((v68 & 1) != 0)
          goto LABEL_135;
        v76 = &v43[16 * v45];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v56 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v56)
          goto LABEL_138;
        if (v79 < v67)
          goto LABEL_14;
LABEL_104:
        v84 = v45 - 1;
        if (v45 - 1 >= v10)
        {
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
          goto LABEL_151;
        }
        v85 = *v2;
        if (!*v2)
          goto LABEL_153;
        v86 = v8;
        v87 = v2;
        v88 = &v43[16 * v84];
        v89 = *(_QWORD *)v88;
        v90 = v43;
        v91 = v45;
        v92 = &v43[16 * v45];
        v93 = *((_QWORD *)v92 + 1);
        v94 = v115;
        sub_213C7D838((char *)(v85 + 48 * *(_QWORD *)v88), (char *)(v85 + 48 * *(_QWORD *)v92), v85 + 48 * v93, __dst);
        v115 = v94;
        if (v94)
          goto LABEL_112;
        if (v93 < v89)
          goto LABEL_128;
        if (v91 > *((_QWORD *)v86 + 2))
          goto LABEL_129;
        *(_QWORD *)v88 = v89;
        *(_QWORD *)&v90[16 * v84 + 8] = v93;
        v95 = *((_QWORD *)v86 + 2);
        if (v91 >= v95)
          goto LABEL_130;
        v8 = v86;
        v10 = v95 - 1;
        memmove(v92, v92 + 16, 16 * (v95 - 1 - v91));
        v43 = v90;
        *((_QWORD *)v86 + 2) = v95 - 1;
        v2 = v87;
        v9 = v109;
        if (v95 <= 2)
          goto LABEL_14;
      }
    }
    v10 = 1;
LABEL_14:
    v3 = v2[1];
    if (v9 >= v3)
      goto LABEL_115;
  }
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  result = sub_213C865C8();
  __break(1u);
  return result;
}

uint64_t sub_213C7D6EC(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _QWORD v19[6];
  _QWORD v20[6];

  if (a3 != a2)
  {
    v5 = a3;
    v7 = result;
    v8 = 48 * a3;
LABEL_6:
    v9 = v7;
    v10 = v8;
    while (1)
    {
      v11 = *a4 + v10;
      sub_213C7E930(v11, (uint64_t)v20, &qword_254D2DE48);
      sub_213C7E930(v11 - 48, (uint64_t)v19, &qword_254D2DE48);
      if (v20[0] == v19[0] && v20[1] == v19[1])
      {
        sub_213C3B7AC((uint64_t)v19, &qword_254D2DE48);
        result = sub_213C3B7AC((uint64_t)v20, &qword_254D2DE48);
LABEL_5:
        ++v5;
        v8 += 48;
        if (v5 == a2)
          return result;
        goto LABEL_6;
      }
      v13 = sub_213C86748();
      sub_213C3B7AC((uint64_t)v19, &qword_254D2DE48);
      result = sub_213C3B7AC((uint64_t)v20, &qword_254D2DE48);
      if ((v13 & 1) == 0)
        goto LABEL_5;
      if (!*a4)
        break;
      v14 = (__int128 *)(*a4 + v10);
      v16 = v14[1];
      v15 = v14[2];
      v17 = *v14;
      v18 = *(v14 - 2);
      *v14 = *(v14 - 3);
      v14[1] = v18;
      v14[2] = *(v14 - 1);
      *(v14 - 3) = v17;
      *(v14 - 2) = v16;
      *(v14 - 1) = v15;
      v10 -= 48;
      if (v5 == ++v9)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_213C7D838(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v14;
  char *v15;
  unint64_t v16;
  __int128 v17;
  __int128 v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  char *v26;
  char v28;
  char *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;

  v4 = __dst;
  v6 = a2;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 48;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 48;
  v40 = __src;
  v39 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      if (__dst != a2 || &a2[48 * v11] <= __dst)
        memmove(__dst, a2, 48 * v11);
      v22 = &v4[48 * v11];
      v38 = v22;
      v40 = v6;
      if (__src < v6 && v10 >= 48)
      {
        v23 = (char *)(a3 - 48);
        do
        {
          sub_213C7E930((uint64_t)(v22 - 48), (uint64_t)&v36, &qword_254D2DE48);
          v26 = v6 - 48;
          sub_213C7E930((uint64_t)(v6 - 48), (uint64_t)&v34, &qword_254D2DE48);
          if (v36 == v34 && v37 == v35)
            v28 = 0;
          else
            v28 = sub_213C86748();
          v29 = v23 + 48;
          sub_213C3B7AC((uint64_t)&v34, &qword_254D2DE48);
          sub_213C3B7AC((uint64_t)&v36, &qword_254D2DE48);
          if ((v28 & 1) != 0)
          {
            if (v29 != v6 || v23 >= v6)
            {
              v24 = *(_OWORD *)v26;
              v25 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v23 + 1) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v23 + 2) = v25;
              *(_OWORD *)v23 = v24;
            }
            v40 -= 48;
            v22 = v38;
            if (v38 <= v4)
              break;
          }
          else
          {
            v30 = (unint64_t)v38;
            v22 = v38 - 48;
            v38 -= 48;
            if ((unint64_t)v29 < v30 || (unint64_t)v23 >= v30 || v29 != (char *)v30)
            {
              v31 = *(_OWORD *)v22;
              v32 = *(_OWORD *)(v30 - 16);
              *((_OWORD *)v23 + 1) = *(_OWORD *)(v30 - 32);
              *((_OWORD *)v23 + 2) = v32;
              *(_OWORD *)v23 = v31;
            }
            v26 = v6;
            if (v22 <= v4)
              break;
          }
          v23 -= 48;
          v6 = v26;
        }
        while (v26 > __src);
      }
LABEL_51:
      sub_213C7DCDC((void **)&v40, (const void **)&v39, &v38);
      return 1;
    }
  }
  else if (v8 >= -47)
  {
    if (__dst != __src || &__src[48 * v9] <= __dst)
      memmove(__dst, __src, 48 * v9);
    v12 = (unint64_t)&v4[48 * v9];
    v38 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      while (1)
      {
        sub_213C7E930((uint64_t)v6, (uint64_t)&v36, &qword_254D2DE48);
        sub_213C7E930((uint64_t)v4, (uint64_t)&v34, &qword_254D2DE48);
        if (v36 == v34 && v37 == v35)
          break;
        v14 = sub_213C86748();
        sub_213C3B7AC((uint64_t)&v34, &qword_254D2DE48);
        sub_213C3B7AC((uint64_t)&v36, &qword_254D2DE48);
        if ((v14 & 1) == 0)
          goto LABEL_18;
        v15 = v40;
        v16 = (unint64_t)(v6 + 48);
        if (v40 >= v6 && (unint64_t)v40 < v16 && v40 == v6)
        {
          v15 = v6;
        }
        else
        {
          v17 = *(_OWORD *)v6;
          v18 = *((_OWORD *)v6 + 2);
          *((_OWORD *)v40 + 1) = *((_OWORD *)v6 + 1);
          *((_OWORD *)v15 + 2) = v18;
          *(_OWORD *)v15 = v17;
        }
LABEL_22:
        v40 = v15 + 48;
        v4 = v39;
        if ((unint64_t)v39 < v12)
        {
          v6 = (char *)v16;
          if (v16 < a3)
            continue;
        }
        goto LABEL_51;
      }
      sub_213C3B7AC((uint64_t)&v34, &qword_254D2DE48);
      sub_213C3B7AC((uint64_t)&v36, &qword_254D2DE48);
LABEL_18:
      v15 = v40;
      v19 = v39 + 48;
      if (v40 != v39 || v40 >= v19)
      {
        v20 = *(_OWORD *)v39;
        v21 = *((_OWORD *)v39 + 2);
        *((_OWORD *)v40 + 1) = *((_OWORD *)v39 + 1);
        *((_OWORD *)v15 + 2) = v21;
        *(_OWORD *)v15 = v20;
      }
      v39 = v19;
      v16 = (unint64_t)v6;
      goto LABEL_22;
    }
    goto LABEL_51;
  }
  result = sub_213C86610();
  __break(1u);
  return result;
}

char *sub_213C7DBE4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D30548);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_213C7DCDC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -48)
  {
    result = (char *)sub_213C86610();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
      return (char *)memmove(result, v3, 48 * v6);
  }
  return result;
}

char *sub_213C7DD98(uint64_t a1)
{
  return sub_213C7DBE4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_213C7DDAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  int v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  _BYTE v72[32];
  _BYTE v73[24];
  uint64_t v74;
  _QWORD v75[4];
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _QWORD *v79;
  unint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;

  v82 = xmmword_213C8B730;
  v83 = xmmword_213C8B730;
  if (!*(_QWORD *)(a1 + 16))
    return 0;
  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v6 = a1;
  v7 = sub_213C4B3DC(0xD000000000000010, 0x8000000213C8EFE0);
  if ((v8 & 1) == 0)
    return 0;
  sub_213C35070(*(_QWORD *)(a2 + 56) + 32 * v7, (uint64_t)&v79);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE68);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v9 = swift_bridgeObjectRetain();
  v10 = (_QWORD *)sub_213C82D68(v9);
  swift_bridgeObjectRelease();
  v79 = v10;
  sub_213C7CE9C(&v79);
  if (v3)
  {
LABEL_67:
    swift_release();
    __break(1u);
    JUMPOUT(0x213C7E8D8);
  }
  v11 = 0;
  swift_bridgeObjectRelease();
  v12 = 0;
  v64 = v79 + 4;
  v65 = v79;
  v13 = v79[2];
  v63 = a3;
  v66 = v13;
  v67 = v6;
  while (1)
  {
    if (v12 == v13)
    {
      v77 = 0u;
      v78 = 0u;
      v15 = v13;
      v76 = 0u;
    }
    else
    {
      if ((v12 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_65:
        __break(1u);
        JUMPOUT(0x213C7E8A4);
      }
      if (v12 >= v65[2])
        goto LABEL_65;
      sub_213C7E930((uint64_t)&v64[6 * v12], (uint64_t)&v76, &qword_254D2DE48);
      v15 = v12 + 1;
    }
    sub_213C7E8E8((uint64_t)&v76, (uint64_t)&v79);
    v16 = v80;
    if (!v80)
    {
      swift_release();
      return v82;
    }
    v17 = v79;
    sub_213C3B0BC(&v81, &v76);
    if (!swift_dynamicCast())
      break;
    v68 = v15;
    v18 = v75[0];
    type metadata accessor for DediscoMetadataSchema();
    swift_allocObject();
    swift_bridgeObjectRetain();
    v19 = sub_213C80128(v18, a3);
    if (v11)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_63;
    }
    v20 = v19;
    sub_213C7CB68((uint64_t)v17, v16, v6, (uint64_t)v75);
    sub_213C7E930((uint64_t)v75, (uint64_t)v73, &qword_254D2DBA0);
    if (v74)
    {
      sub_213C7E930((uint64_t)v73, (uint64_t)v72, &qword_254D2DBA0);
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        sub_213C44B0C(v20 + 48, (uint64_t)&v76);
        v21 = *((_QWORD *)&v77 + 1);
        v22 = v78;
        __swift_project_boxed_opaque_existential_0Tm(&v76, *((uint64_t *)&v77 + 1));
        v23 = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 8))(v70, v71, *(_QWORD *)(v20 + 24), v21, v22);
LABEL_21:
        v25 = v23;
        v26 = v24;
        goto LABEL_22;
      }
      sub_213C35170();
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        sub_213C44B0C(v20 + 48, (uint64_t)&v76);
        v27 = *((_QWORD *)&v77 + 1);
        v28 = v78;
        __swift_project_boxed_opaque_existential_0Tm(&v76, *((uint64_t *)&v77 + 1));
        objc_msgSend((id)v70, sel_floatValue);
        v25 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v28 + 16))(*(_QWORD *)(v20 + 24), v27, v28);
        v26 = v29;

        goto LABEL_25;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBB0);
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        sub_213C44B0C(v20 + 48, (uint64_t)&v76);
        v31 = *((_QWORD *)&v77 + 1);
        v32 = v78;
        __swift_project_boxed_opaque_existential_0Tm(&v76, *((uint64_t *)&v77 + 1));
        v23 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v32 + 24))(v70, *(_QWORD *)(v20 + 24), v31, v32);
        goto LABEL_21;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DBA8);
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        v33 = v70;
        sub_213C44B0C(v20 + 48, (uint64_t)&v76);
        v34 = *((_QWORD *)&v77 + 1);
        v35 = v78;
        __swift_project_boxed_opaque_existential_0Tm(&v76, *((uint64_t *)&v77 + 1));
        if (v70 >> 62)
        {
          swift_bridgeObjectRetain();
          v36 = sub_213C865E0();
          swift_bridgeObjectRelease();
        }
        else
        {
          v36 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v62 = v34;
        if (v36)
        {
          v61 = 0;
          v69 = MEMORY[0x24BEE4AF8];
          sub_213C54744(0, v36 & ~(v36 >> 63), 0);
          if (v36 < 0)
          {
            __break(1u);
            goto LABEL_67;
          }
          v37 = 0;
          v38 = v69;
          do
          {
            if ((v70 & 0xC000000000000001) != 0)
              v39 = (id)MEMORY[0x2199BFF08](v37, v33);
            else
              v39 = *(id *)(v33 + 8 * v37 + 32);
            v40 = v39;
            objc_msgSend(v39, sel_floatValue, v61);
            v42 = v41;

            v44 = *(_QWORD *)(v69 + 16);
            v43 = *(_QWORD *)(v69 + 24);
            if (v44 >= v43 >> 1)
              sub_213C54744(v43 > 1, v44 + 1, 1);
            ++v37;
            *(_QWORD *)(v69 + 16) = v44 + 1;
            *(_DWORD *)(v69 + 4 * v44 + 32) = v42;
            v33 = v70;
          }
          while (v36 != v37);
          swift_bridgeObjectRelease();
          a3 = v63;
          v11 = v61;
        }
        else
        {
          swift_bridgeObjectRelease();
          v38 = MEMORY[0x24BEE4AF8];
        }
        v25 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v35 + 32))(v38, *(_QWORD *)(v20 + 24), v62);
        v26 = v54;
LABEL_22:
        swift_bridgeObjectRelease();
LABEL_25:
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v76);
        v30 = (__int128 *)v72;
        goto LABEL_48;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v72);
    }
    if (qword_254D2D960 != -1)
      swift_once();
    v45 = sub_213C86094();
    __swift_project_value_buffer(v45, (uint64_t)qword_254D2FF28);
    swift_bridgeObjectRetain();
    v46 = sub_213C8607C();
    v47 = sub_213C86400();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc();
      v49 = swift_slowAlloc();
      *(_QWORD *)&v76 = v49;
      *(_DWORD *)v48 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v48 + 4) = sub_213C42558((uint64_t)v17, v16, (uint64_t *)&v76);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_213C25000, v46, v47, "Metadata %s is not found, or can't be converted to String, NSNumber, [String] or [NSNumber]", (uint8_t *)v48, 0xCu);
      swift_arrayDestroy();
      v50 = v49;
      a3 = v63;
      MEMORY[0x2199C0A30](v50, -1, -1);
      MEMORY[0x2199C0A30](v48, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_213C44B0C(v20 + 48, (uint64_t)&v76);
    v51 = *((_QWORD *)&v77 + 1);
    v52 = v78;
    __swift_project_boxed_opaque_existential_0Tm(&v76, *((uint64_t *)&v77 + 1));
    v25 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v52 + 40))(*(_QWORD *)(v20 + 24), v51, v52);
    v26 = v53;
    v30 = &v76;
LABEL_48:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
    sub_213C3B7AC((uint64_t)v73, &qword_254D2DBA0);
    if (*(_BYTE *)(v20 + 16) == 1)
    {
      v6 = v67;
      if (*(_BYTE *)(v20 + 88) == 1)
        __asm { BR              X9 }
      sub_213C3B534(v25, v26);
      sub_213C85E6C();
    }
    else
    {
      sub_213C3B534(v25, v26);
      sub_213C85E6C();
      v6 = v67;
    }
    sub_213C3B064(v25, v26);
    swift_release();
    sub_213C3B064(v25, v26);
    sub_213C3B7AC((uint64_t)v75, &qword_254D2DBA0);
    v12 = v68;
    v13 = v66;
  }
  swift_release();
  if (qword_254D2D960 != -1)
    swift_once();
  v55 = sub_213C86094();
  __swift_project_value_buffer(v55, (uint64_t)qword_254D2FF28);
  swift_bridgeObjectRetain();
  v56 = sub_213C8607C();
  v57 = sub_213C86400();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = (uint8_t *)swift_slowAlloc();
    v59 = swift_slowAlloc();
    *(_QWORD *)&v76 = v59;
    *(_DWORD *)v58 = 136315138;
    swift_bridgeObjectRetain();
    v75[0] = sub_213C42558((uint64_t)v17, v16, (uint64_t *)&v76);
    sub_213C86490();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213C25000, v56, v57, "Metadata schema for %s is not type of [String: Any]", v58, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v59, -1, -1);
    MEMORY[0x2199C0A30](v58, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_213C3512C();
  swift_allocError();
  *v60 = 2;
  swift_willThrow();
LABEL_63:
  sub_213C3B078(v82, *((unint64_t *)&v82 + 1));
  return sub_213C3B078(v83, *((unint64_t *)&v83 + 1));
}

uint64_t sub_213C7E8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213C7E930(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_213C7E974()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_213C7E998(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _BYTE *v20;
  _QWORD v22[2];
  uint64_t v23;

  v3 = v2;
  v6 = sub_213C8616C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213C86160();
  v10 = sub_213C86154();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v12 >> 60 == 15
    || (v13 = (void *)sub_213C85E48(),
        v14 = objc_msgSend((id)objc_opt_self(), sel_keyFromData_, v13),
        sub_213C3B064(v10, v12),
        v13,
        !v14))
  {
    if (qword_254D2D960 != -1)
      swift_once();
    v15 = sub_213C86094();
    __swift_project_value_buffer(v15, (uint64_t)qword_254D2FF28);
    swift_bridgeObjectRetain();
    v16 = sub_213C8607C();
    v17 = sub_213C863F4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v23 = v19;
      *(_DWORD *)v18 = 136315138;
      swift_bridgeObjectRetain();
      v22[1] = sub_213C42558(a1, a2, &v23);
      sub_213C86490();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_213C25000, v16, v17, "Invalid certificate %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v19, -1, -1);
      MEMORY[0x2199C0A30](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_213C3A984();
    swift_allocError();
    *v20 = 5;
    swift_willThrow();
    type metadata accessor for PFLDodMLTaskValidator();
    swift_deallocPartialClassInstance();
  }
  else
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 16) = v14;
  }
  return v3;
}

uint64_t sub_213C7EC64()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PFLDodMLTaskValidator()
{
  return objc_opt_self();
}

unint64_t sub_213C7ECA8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _OWORD *v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E2B8);
    v2 = (_QWORD *)sub_213C86604();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = &v37;
  v7 = &v39;
  result = swift_bridgeObjectRetain();
  i = 0;
  v10 = MEMORY[0x24BEE4AD8] + 8;
  v11 = MEMORY[0x24BEE0D00];
  if (v5)
    goto LABEL_10;
LABEL_11:
  v20 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v20 >= v31)
    goto LABEL_32;
  v21 = *(_QWORD *)(v32 + 8 * v20);
  v22 = i + 1;
  if (!v21)
  {
    v22 = i + 2;
    if (i + 2 >= v31)
      goto LABEL_32;
    v21 = *(_QWORD *)(v32 + 8 * v22);
    if (!v21)
    {
      v22 = i + 3;
      if (i + 3 >= v31)
        goto LABEL_32;
      v21 = *(_QWORD *)(v32 + 8 * v22);
      if (!v21)
      {
        v22 = i + 4;
        if (i + 4 >= v31)
          goto LABEL_32;
        v21 = *(_QWORD *)(v32 + 8 * v22);
        if (!v21)
        {
          v23 = i + 5;
          if (i + 5 < v31)
          {
            v21 = *(_QWORD *)(v32 + 8 * v23);
            if (v21)
            {
              v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v31)
                break;
              v21 = *(_QWORD *)(v32 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_213C3B0EC();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = (v21 - 1) & v21;
  v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v19);
    v35 = *v24;
    v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_213C3B0BC(v6, v7);
    sub_213C3B0BC(v7, v40);
    sub_213C3B0BC(v40, &v38);
    result = sub_213C4B3DC(v35, v36);
    v25 = result;
    if ((v26 & 1) != 0)
    {
      v33 = i;
      v12 = v7;
      v13 = v6;
      v14 = v1;
      v15 = v11;
      v16 = v10;
      v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v17 = v35;
      v17[1] = v36;
      v10 = v16;
      v11 = v15;
      v1 = v14;
      v6 = v13;
      v7 = v12;
      i = v33;
      v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      result = (unint64_t)sub_213C3B0BC(&v38, v18);
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v35;
    v27[1] = v36;
    result = (unint64_t)sub_213C3B0BC(&v38, (_OWORD *)(v2[7] + 32 * result));
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_34;
    v2[2] = v30;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_213C7F010(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D306C8);
    v2 = sub_213C86604();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_213C35070(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_213C3B0BC(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_213C3B0BC(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_213C3B0BC(v36, v37);
    sub_213C3B0BC(v37, &v33);
    result = sub_213C864F0();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_213C3B0BC(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_213C3B0EC();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DediscoRecorderImpl()
{
  return objc_opt_self();
}

id sub_213C7F3F4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v8 = objc_allocWithZone(MEMORY[0x24BE2CBA8]);
  v9 = (void *)sub_213C86124();
  v10 = objc_msgSend(v8, sel_initWithKey_, v9);

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D306C0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_213C885B0;
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = a4;
  sub_213C3B534(a3, a4);
  v12 = (void *)sub_213C86280();
  swift_bridgeObjectRelease();
  sub_213C7F010(a5);
  v13 = (void *)sub_213C860B8();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v10, sel_recordFloatVectors_metadata_, v12, v13);

  return v14;
}

void sub_213C7F524(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_213C7F588(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_213C7F64C + 4 * byte_213C8B7D8[a2]))(0xD000000000000011);
}

uint64_t sub_213C7F64C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000011 && v1 == 0x8000000213C8DBD0)
    v2 = 1;
  else
    v2 = sub_213C86748();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_213C7F764(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x676E696C706D6173;
  else
    v3 = 0x7461636964657270;
  if (v2)
    v4 = 0xE900000000000065;
  else
    v4 = 0xED0000657461725FLL;
  if ((a2 & 1) != 0)
    v5 = 0x676E696C706D6173;
  else
    v5 = 0x7461636964657270;
  if ((a2 & 1) != 0)
    v6 = 0xED0000657461725FLL;
  else
    v6 = 0xE900000000000065;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_213C86748();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_213C7F818(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000011;
  v3 = 0x8000000213C8DAB0;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6365735F656D6974;
    else
      v5 = 0x635F657069636572;
    if (v4 == 1)
      v6 = 0xEC00000073646E6FLL;
    else
      v6 = 0xEC000000746E756FLL;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000011;
  v6 = 0x8000000213C8DAB0;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0x6365735F656D6974;
    else
      v2 = 0x635F657069636572;
    if (v7 == 1)
      v3 = 0xEC00000073646E6FLL;
    else
      v3 = 0xEC000000746E756FLL;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_213C86748();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_213C7F944(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEE00746E65746E6FLL;
  v3 = 0x635F7963696C6F70;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000010;
    else
      v5 = 0xD000000000000019;
    if (v4 == 1)
      v6 = 0x8000000213C8DAF0;
    else
      v6 = 0x8000000213C8DB10;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x635F7963696C6F70;
  v6 = 0xEE00746E65746E6FLL;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0xD000000000000010;
    else
      v3 = 0xD000000000000019;
    if (v7 == 1)
      v2 = 0x8000000213C8DAF0;
    else
      v2 = 0x8000000213C8DB10;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_213C86748();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_213C7FA5C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_213C7FAB8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_213C7FB80 + 4 * byte_213C8B7E7[a2]))(0x61435F4C4D646F44);
}

uint64_t sub_213C7FB80(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x61435F4C4D646F44 && v1 == 0xEB00000000797272)
    v2 = 1;
  else
    v2 = sub_213C86748();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_213C7FCA4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x69726F6765746163;
  else
    v3 = 0x636972656D756ELL;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xEB000000006C6163;
  if ((a2 & 1) != 0)
    v5 = 0x69726F6765746163;
  else
    v5 = 0x636972656D756ELL;
  if ((a2 & 1) != 0)
    v6 = 0xEB000000006C6163;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_213C86748();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_213C7FD50(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_213C7FDA0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_213C7FE30 + 4 * byte_213C8B7F3[a2]))(1953722216);
}

uint64_t sub_213C7FE30(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1953722216 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_213C86748();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_213C7FF08(char *a1, char *a2)
{
  return sub_213C7FCA4(*a1, *a2);
}

uint64_t sub_213C7FF14()
{
  sub_213C867F0();
  sub_213C861CC();
  swift_bridgeObjectRelease();
  return sub_213C86808();
}

uint64_t sub_213C7FF9C()
{
  sub_213C861CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C80000()
{
  sub_213C867F0();
  sub_213C861CC();
  swift_bridgeObjectRelease();
  return sub_213C86808();
}

uint64_t sub_213C80084@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_213C86628();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_213C800E0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x636972656D756ELL;
  if (*v1)
    v2 = 0x69726F6765746163;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xEB000000006C6163;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_213C80128(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  char v21;
  unint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  _UNKNOWN **v46;
  __int128 v47;
  __int128 v48;
  _UNKNOWN **v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = v2;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_7;
  v7 = sub_213C4B3DC(1701869940, 0xE400000000000000);
  if ((v8 & 1) == 0)
    goto LABEL_7;
  sub_213C35070(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)&v47);
  v9 = MEMORY[0x24BEE4AD8];
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_7;
  v10 = sub_213C86628();
  swift_bridgeObjectRelease();
  if (!v10)
  {
    v11 = 0;
    goto LABEL_17;
  }
  if (v10 != 1)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    if (qword_254D2D960 != -1)
      swift_once();
    v12 = sub_213C86094();
    __swift_project_value_buffer(v12, (uint64_t)qword_254D2FF28);
    swift_bridgeObjectRetain();
    v13 = sub_213C8607C();
    v14 = sub_213C86400();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      *(_DWORD *)v15 = 136315138;
      *(_QWORD *)&v47 = v16;
      swift_bridgeObjectRetain();
      v52 = v4;
      v17 = sub_213C860D0();
      v19 = v18;
      swift_bridgeObjectRelease();
      v50 = sub_213C42558(v17, v19, (uint64_t *)&v47);
      sub_213C86490();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213C25000, v13, v14, "Invalid metadata type in %s", v15, 0xCu);
      v4 = v52;
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v16, -1, -1);
      MEMORY[0x2199C0A30](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_213C3512C();
    swift_allocError();
    v21 = 3;
    goto LABEL_13;
  }
  v11 = 1;
LABEL_17:
  *(_BYTE *)(v4 + 16) = v11;
  if (!*(_QWORD *)(a1 + 16)
    || (v23 = sub_213C4B3DC(0x7374656B637562, 0xE700000000000000), (v24 & 1) == 0)
    || (sub_213C35070(*(_QWORD *)(a1 + 56) + 32 * v23, (uint64_t)&v47), (swift_dynamicCast() & 1) == 0)
    || v50 < 1)
  {
    swift_bridgeObjectRelease();
    if (qword_254D2D960 != -1)
      swift_once();
    v30 = sub_213C86094();
    __swift_project_value_buffer(v30, (uint64_t)qword_254D2FF28);
    swift_bridgeObjectRetain();
    v31 = sub_213C8607C();
    v32 = sub_213C86400();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      *(_DWORD *)v33 = 136315138;
      *(_QWORD *)&v47 = v34;
      swift_bridgeObjectRetain();
      v52 = v9 + 8;
      v35 = sub_213C860D0();
      v36 = v4;
      v38 = v37;
      swift_bridgeObjectRelease();
      v50 = sub_213C42558(v35, v38, (uint64_t *)&v47);
      sub_213C86490();
      swift_bridgeObjectRelease_n();
      v4 = v36;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213C25000, v31, v32, "Metadata buckets not found or <= 0 in %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C0A30](v34, -1, -1);
      MEMORY[0x2199C0A30](v33, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_213C3512C();
    swift_allocError();
    v21 = 4;
LABEL_13:
    *v20 = v21;
    swift_willThrow();
LABEL_14:
    swift_bridgeObjectRelease();
    type metadata accessor for DediscoMetadataSchema();
    swift_deallocPartialClassInstance();
    return v4;
  }
  *(_QWORD *)(v4 + 24) = v50;
  v25 = *(_QWORD *)(a1 + 16);
  if (!v25)
  {
LABEL_32:
    v29 = 0;
    goto LABEL_33;
  }
  v26 = sub_213C4B3DC(0x616E6F6974636964, 0xEA00000000007972);
  if ((v27 & 1) == 0)
  {
    v25 = 0;
    goto LABEL_32;
  }
  sub_213C35070(*(_QWORD *)(a1 + 56) + 32 * v26, (uint64_t)&v47);
  v28 = swift_dynamicCast();
  v25 = v50;
  v29 = v51;
  if (!v28)
  {
    v25 = 0;
    v29 = 0;
  }
LABEL_33:
  *(_QWORD *)(v4 + 32) = v25;
  *(_QWORD *)(v4 + 40) = v29;
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v4 + 16) & 1) == 0)
  {
    v41 = type metadata accessor for DediscoNumericMetadataEncoder();
    v45 = swift_allocObject();
    v46 = &off_24D0D9EF0;
    goto LABEL_38;
  }
  v39 = sub_213C80C58(a1, a2);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v40 = v39;
  v41 = type metadata accessor for DediscoCategoricalMetadataEncoder();
  swift_allocObject();
  v45 = sub_213C33A5C(v40);
  v46 = &off_24D0D8110;
LABEL_38:
  *((_QWORD *)&v48 + 1) = v41;
  v49 = v46;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v47 = v45;
  sub_213C3AA48(&v47, v4 + 48);
  *(_BYTE *)(v4 + 88) = 0;
  if (*(_QWORD *)(a1 + 16) && (v42 = sub_213C4B3DC(0xD000000000000012, 0x8000000213C8F150), (v43 & 1) != 0))
  {
    sub_213C35070(*(_QWORD *)(a1 + 56) + 32 * v42, (uint64_t)&v47);
  }
  else
  {
    v47 = 0u;
    v48 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v48 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (v50 == 0x6375735F6B736174 && v51 == 0xEE00646564656563)
      {
        swift_bridgeObjectRelease();
        v44 = 1;
      }
      else
      {
        v44 = sub_213C86748();
        swift_bridgeObjectRelease();
      }
      *(_BYTE *)(v4 + 88) = v44 & 1;
    }
  }
  else
  {
    sub_213C3B7AC((uint64_t)&v47, &qword_254D2DBA0);
  }
  return v4;
}

uint64_t sub_213C80888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  void (*v20)(uint64_t, char *, uint64_t);
  uint64_t v21;
  char v22;
  char *v23;
  uint64_t v24;
  char *v25;
  _QWORD v27[2];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;

  v34 = a2;
  v33 = sub_213C85E18();
  v8 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E390);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  v28 = a4;
  v29 = v4;
  v27[1] = a1;
  if (v14)
  {
    v15 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v30 = *(_QWORD *)(v8 + 72);
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    swift_bridgeObjectRetain();
    v16 = v33;
    v31 = v10;
    while (1)
    {
      v32(v13, v15, v16);
      v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v17(v13, 0, 1, v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v16) == 1)
        goto LABEL_11;
      v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v18(v10, v13, v16);
      if (sub_213C85D94() == v34 && v19 == a3)
        break;
      v20 = (void (*)(uint64_t, char *, uint64_t))v18;
      v21 = a3;
      v22 = sub_213C86748();
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
      {
        v16 = v33;
        goto LABEL_14;
      }
      v10 = v31;
      v16 = v33;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v31, v33);
      v15 += v30;
      --v14;
      a3 = v21;
      if (!v14)
        goto LABEL_10;
    }
    v20 = (void (*)(uint64_t, char *, uint64_t))v18;
    swift_bridgeObjectRelease();
    v16 = v33;
LABEL_14:
    swift_bridgeObjectRelease();
    v25 = v28;
    v20((uint64_t)v28, v31, v16);
    v23 = v25;
    v24 = 0;
    goto LABEL_15;
  }
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  swift_bridgeObjectRetain();
  v16 = v33;
LABEL_10:
  v17(v13, 1, 1, v16);
LABEL_11:
  swift_bridgeObjectRelease();
  v23 = v28;
  v24 = 1;
LABEL_15:
  v17(v23, v24, 1, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_213C80AF8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DediscoMetadataSchema()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for MetadataType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213C80B90 + 4 * byte_213C8B7FD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213C80BC4 + 4 * byte_213C8B7F8[v4]))();
}

uint64_t sub_213C80BC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C80BCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213C80BD4);
  return result;
}

uint64_t sub_213C80BE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213C80BE8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213C80BEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213C80BF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetadataType()
{
  return &type metadata for MetadataType;
}

unint64_t sub_213C80C14()
{
  unint64_t result;

  result = qword_254D30808;
  if (!qword_254D30808)
  {
    result = MEMORY[0x2199C0970](&unk_213C8B8EC, &type metadata for MetadataType);
    atomic_store(result, (unint64_t *)&qword_254D30808);
  }
  return result;
}

uint64_t sub_213C80C58(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v3 = v2;
  v50 = *MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E390);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_213C85E18();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_13;
  v13 = sub_213C4B3DC(0x616E6F6974636964, 0xEA00000000007972);
  if ((v14 & 1) != 0)
  {
    sub_213C35070(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)&v48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE68);
    if (swift_dynamicCast())
      return v46;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_13;
  v16 = sub_213C4B3DC(0x616E6F6974636964, 0xEF687461705F7972);
  if ((v17 & 1) == 0)
    goto LABEL_13;
  sub_213C35070(*(_QWORD *)(a1 + 56) + 32 * v16, (uint64_t)&v48);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  v45 = (uint8_t *)a1;
  v18 = v46;
  v19 = v47;
  swift_bridgeObjectRetain();
  sub_213C80888(a2, v18, v19, v8);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    v20 = &qword_254D2E390;
    v21 = v8;
LABEL_10:
    sub_213C3B7AC((uint64_t)v21, v20);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v22 = sub_213C85E24();
  if (v3)
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_13;
  }
  v33 = v22;
  v34 = v23;
  v35 = (void *)objc_opt_self();
  v36 = (void *)sub_213C85E48();
  *(_QWORD *)&v48 = 0;
  v37 = objc_msgSend(v35, sel_JSONObjectWithData_options_error_, v36, 4, &v48);

  if (!v37)
  {
    v42 = (id)v48;
    v43 = (void *)sub_213C85D34();

    swift_willThrow();
    sub_213C3B078(v33, v34);

LABEL_26:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_13;
  }
  v38 = (id)v48;
  sub_213C864C0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE68);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_213C3B078(v33, v34);
    goto LABEL_26;
  }
  v39 = v46;
  if (*(_QWORD *)(v46 + 16) && (v40 = sub_213C4B3DC(0x616E6F6974636964, 0xEA00000000007972), (v41 & 1) != 0))
  {
    sub_213C35070(*(_QWORD *)(v39 + 56) + 32 * v40, (uint64_t)&v48);
  }
  else
  {
    v48 = 0u;
    v49 = 0u;
  }
  sub_213C3B078(v33, v34);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (!*((_QWORD *)&v49 + 1))
  {
    v20 = &qword_254D2DBA0;
    v21 = (char *)&v48;
    goto LABEL_10;
  }
  if (swift_dynamicCast())
    return v46;
LABEL_13:
  if (qword_254D2D960 != -1)
    swift_once();
  v24 = sub_213C86094();
  __swift_project_value_buffer(v24, (uint64_t)qword_254D2FF28);
  swift_bridgeObjectRetain_n();
  v25 = sub_213C8607C();
  v26 = sub_213C86400();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    *(_QWORD *)&v48 = v28;
    *(_DWORD *)v27 = 136315138;
    v45 = v27 + 4;
    swift_bridgeObjectRetain();
    v29 = sub_213C860D0();
    v31 = v30;
    swift_bridgeObjectRelease();
    v46 = sub_213C42558(v29, v31, (uint64_t *)&v48);
    sub_213C86490();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213C25000, v25, v26, "Failed to locate categorical dictionary in %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v28, -1, -1);
    MEMORY[0x2199C0A30](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_213C3512C();
  swift_allocError();
  *v32 = 5;
  return swift_willThrow();
}

void sub_213C81238(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_213C8128C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;
  __int16 v4;
  char v5;
  char v6;
  char v7;
  char v8;

  v3 = v0;
  v4 = v1;
  v5 = BYTE2(v1);
  v6 = BYTE3(v1);
  v7 = BYTE4(v1);
  v8 = BYTE5(v1);
  return sub_213C82C34((char *)&v3, (v1 >> 50) & 0x3F);
}

void sub_213C81494(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_213C814E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  __int16 v4;
  char v5;
  char v6;
  char v7;
  char v8;

  v3 = v0;
  v4 = v1;
  v5 = BYTE2(v1);
  v6 = BYTE3(v1);
  v7 = BYTE4(v1);
  v8 = BYTE5(v1);
  return sub_213C82E5C((char *)&v3, BYTE6(v1));
}

uint64_t static DediscoUploader.ensurePrivacyBudget(privateBudgetPrefix:)(uint64_t a1, uint64_t a2)
{
  return sub_213C831B8(a1, a2);
}

uint64_t static DediscoUploader.upload(binaryResult:jsonResult:task:privateBudgetPrefix:taskSucceeded:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  _QWORD v15[5];

  v15[3] = type metadata accessor for DediscoRecorderImpl();
  v15[4] = &off_24D0D9F50;
  v15[0] = swift_allocObject();
  sub_213C84AAC(a1, a2, a3, a4, a5, a6, (uint64_t)v15, a7);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
}

uint64_t sub_213C81798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_213C3B0BC((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_213C4B994(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_213C3B7AC(a1, &qword_254D2DBA0);
    sub_213C4B734(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_213C3B7AC((uint64_t)v9, &qword_254D2DBA0);
  }
}

uint64_t sub_213C8186C(uint64_t a1, double a2)
{
  uint64_t v2;
  double v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;

  v5 = *(double *)(v2 + 24);
  if (a1 != 1)
    v5 = v5 * *(double *)(v2 + 16) / a2;
  v6 = MEMORY[0x24BEE13C8];
  v9 = MEMORY[0x24BEE13C8];
  *(double *)v8 = v5;
  sub_213C81798((uint64_t)v8, 0xD000000000000015, 0x8000000213C8F1F0);
  v9 = v6;
  *(double *)v8 = a2;
  sub_213C81798((uint64_t)v8, 0x676E697070696C43, 0xED0000646E756F42);
  v9 = MEMORY[0x24BEE1768];
  v8[0] = a1;
  return sub_213C81798((uint64_t)v8, 0x6B6E7568436D754ELL, 0xE900000000000073);
}

BOOL sub_213C81950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BOOL8 v4;
  unsigned __int8 *v5;
  uint64_t v6;
  int v7;

  sub_213C81494(a1, a2);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    if (*(_BYTE *)(v2 + 32))
    {
      v4 = 0;
    }
    else
    {
      v5 = (unsigned __int8 *)(v2 + 33);
      v6 = v3 - 1;
      do
      {
        v4 = v6 == 0;
        if (!v6)
          break;
        v7 = *v5++;
        --v6;
      }
      while (!v7);
    }
  }
  else
  {
    v4 = 1;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_213C819B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unint64_t v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _BYTE *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  uint64_t v47;
  char isUniquelyReferenced_nonNull_native;
  char v49;
  char v50;
  char v51;
  float v52;
  uint64_t v53;
  uint64_t v54;
  vDSP_Length v55;
  uint64_t v56;
  char v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  id v63;
  void *v64;
  id v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  void *v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  _OWORD __B[2];
  __int128 v89;
  uint64_t v90;
  _QWORD v91[6];
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v96 = *MEMORY[0x24BDAC8D0];
  v8 = *(_QWORD *)(v3 + 32);
  swift_beginAccess();
  v9 = swift_bridgeObjectRetain();
  sub_213C835D0(v9, v91);
  sub_213C3B0F4((uint64_t)v91, (uint64_t)&v92, &qword_254D308E0);
  if (!v94)
  {
    if (qword_254D2D960 != -1)
      swift_once();
    v13 = sub_213C86094();
    __swift_project_value_buffer(v13, (uint64_t)qword_254D2FF28);
    v14 = sub_213C8607C();
    v15 = sub_213C86400();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_213C25000, v14, v15, "cannot get the algorithm parameters!", v16, 2u);
      MEMORY[0x2199C0A30](v16, -1, -1);
    }

    sub_213C3512C();
    swift_allocError();
    *v17 = 0;
    return swift_willThrow();
  }
  v83 = v94;
  v84 = v95;
  v81 = v93;
  v79 = *(double *)&v93;
  v82 = v95;
  sub_213C855F0((uint64_t)&v83);
  sub_213C855F0((uint64_t)&v84);
  if ((sub_213C78AFC() & 1) == 0)
  {
    sub_213C85618((uint64_t)&v83);
    sub_213C85618((uint64_t)&v84);
    __asm { BR              X10 }
  }
  v10 = *(_OWORD *)(v3 + 56);
  v85 = *(_OWORD *)(v3 + 40);
  v86 = v10;
  v87 = *(_OWORD *)(v3 + 72);
  v11 = sub_213C77828(a1, a2, v8);
  if (v4)
  {
    sub_213C85618((uint64_t)&v83);
    swift_bridgeObjectRelease();
    sub_213C85618((uint64_t)&v83);
    return sub_213C85618((uint64_t)&v84);
  }
  v18 = v11;
  v76 = a3;
  v19 = v11 >> 62;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_213C865E0();
    if (v20)
    {
LABEL_13:
      if (v20 < 1)
        __break(1u);
      if ((v18 & 0xC000000000000001) != 0)
      {
        v21 = 0;
        v22 = 0.0;
        do
        {
          v23 = MEMORY[0x2199BFF08](v21++, v18);
          v24 = *(double *)(v23 + 32);
          swift_unknownObjectRelease();
          v22 = v22 + v24 * v24;
        }
        while (v20 != v21);
      }
      else
      {
        if ((unint64_t)v20 >= 2)
        {
          v25 = v20 & 0xFFFFFFFFFFFFFFFELL;
          v26 = v18 + 40;
          v22 = 0.0;
          v27 = v20 & 0xFFFFFFFFFFFFFFFELL;
          do
          {
            v22 = v22
                + *(double *)(*(_QWORD *)(v26 - 8) + 32) * *(double *)(*(_QWORD *)(v26 - 8) + 32)
                + *(double *)(*(_QWORD *)v26 + 32) * *(double *)(*(_QWORD *)v26 + 32);
            v26 += 16;
            v27 -= 2;
          }
          while (v27);
          if (v20 == v25)
            goto LABEL_25;
        }
        else
        {
          v25 = 0;
          v22 = 0.0;
        }
        v28 = v20 - v25;
        v29 = (uint64_t *)(v18 + 8 * v25 + 32);
        do
        {
          v30 = *v29++;
          v22 = v22 + *(double *)(v30 + 32) * *(double *)(v30 + 32);
          --v28;
        }
        while (v28);
      }
LABEL_25:
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
  }
  else
  {
    v20 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
      goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  v22 = 0.0;
LABEL_28:
  sub_213C85618((uint64_t)&v83);
  sub_213C85618((uint64_t)&v84);
  if (vabdd_f64(sqrt(v22), v79) > 0.0001)
  {
    sub_213C85618((uint64_t)&v83);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213C3512C();
    swift_allocError();
    *v31 = 15;
    return swift_willThrow();
  }
  if (!v20)
  {
LABEL_61:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v75 = v8;
  v74 = v18 & 0xC000000000000001;
  if ((v18 & 0xC000000000000001) == 0)
  {
    v36 = 0;
    while (1)
    {
      v37 = v36 + 1;
      if (__OFADD__(v36, 1))
        goto LABEL_67;
      v38 = *(_QWORD *)(v18 + 8 * v36 + 32);
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)(v38 + 40) + 16) > 0x39FBCuLL)
        break;
      ++v36;
      if (v37 == v20)
        goto LABEL_42;
    }
    swift_retain();
    swift_bridgeObjectRelease();
LABEL_64:
    sub_213C85618((uint64_t)&v83);
    swift_bridgeObjectRelease();
    sub_213C3512C();
    swift_allocError();
    *v70 = 16;
    swift_willThrow();
    return swift_release();
  }
  swift_bridgeObjectRetain();
  v32 = 0;
  do
  {
    v33 = MEMORY[0x2199BFF08](v32, v18);
    v34 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      JUMPOUT(0x213C82754);
    }
    v35 = v33;
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v35 + 40) + 16) > 0x39FBCuLL)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_64;
    }
    swift_unknownObjectRelease();
    ++v32;
  }
  while (v34 != v20);
  swift_bridgeObjectRelease();
LABEL_42:
  if (v19)
  {
    swift_bridgeObjectRetain();
    v39 = sub_213C865E0();
  }
  else
  {
    v39 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v40 = v75;
  v41 = 4;
  v73 = v18;
  v71 = v39;
  v72 = v20;
  while (1)
  {
    v42 = v41 - 4;
    if (v74)
    {
      v43 = MEMORY[0x2199BFF08](v41 - 4, v18);
      v44 = v41 - 3;
      if (__OFADD__(v42, 1))
        goto LABEL_66;
    }
    else
    {
      v43 = *(_QWORD *)(v18 + 8 * v41);
      swift_retain();
      v44 = v41 - 3;
      if (__OFADD__(v42, 1))
        goto LABEL_66;
    }
    v45 = *(double *)(v43 + 32);
    v46 = *((double *)&v81 + 1);
    v77 = v44;
    v78 = v41;
    if (v39 != 1)
      v46 = *((double *)&v81 + 1) * *(double *)&v81 / v45;
    v47 = MEMORY[0x24BEE13C8];
    v90 = MEMORY[0x24BEE13C8];
    *(double *)&v89 = v46;
    sub_213C3B0BC(&v89, __B);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_213C4B994(__B, 0xD000000000000015, 0x8000000213C8F1F0, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    v90 = v47;
    *(double *)&v89 = v45;
    sub_213C3B0BC(&v89, __B);
    v49 = swift_isUniquelyReferenced_nonNull_native();
    sub_213C4B994(__B, 0x676E697070696C43, 0xED0000646E756F42, v49);
    swift_bridgeObjectRelease();
    v90 = MEMORY[0x24BEE1768];
    *(_QWORD *)&v89 = v39;
    sub_213C3B0BC(&v89, __B);
    v50 = swift_isUniquelyReferenced_nonNull_native();
    sub_213C4B994(__B, 0x6B6E7568436D754ELL, 0xE900000000000073, v50);
    swift_bridgeObjectRelease();
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE68);
    *(_QWORD *)&v89 = v82;
    sub_213C3B0BC(&v89, __B);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v51 = swift_isUniquelyReferenced_nonNull_native();
    sub_213C4B994(__B, 0xD000000000000013, 0x8000000213C8F1D0, v51);
    swift_bridgeObjectRelease();
    v52 = *(double *)(v43 + 32);
    v53 = *(_QWORD *)(v40 + 48);
    if (v53)
      v52 = *(float *)(v53 + 64) * v52;
    *(float *)__B = v52;
    swift_beginAccess();
    v54 = *(_QWORD *)(v43 + 40);
    v55 = *(_QWORD *)(v54 + 16);
    swift_beginAccess();
    v56 = *(_QWORD *)(v43 + 40);
    swift_bridgeObjectRetain();
    v57 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v43 + 40) = v56;
    if ((v57 & 1) == 0)
      v56 = sub_213C4202C(0, *(_QWORD *)(v56 + 16), 0, v56);
    *(_QWORD *)(v43 + 40) = v56;
    swift_bridgeObjectRetain();
    vDSP_vsdiv((const float *)(v54 + 32), 1, (const float *)__B, (float *)(v56 + 32), 1, v55);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213C3512C();
    v80 = (void *)swift_allocError();
    *v58 = 1;
    swift_bridgeObjectRetain();
    v59 = swift_bridgeObjectRetain();
    v60 = sub_213C33998(v59);
    v62 = v61;
    swift_bridgeObjectRelease();
    v63 = objc_allocWithZone(MEMORY[0x24BE2CBA8]);
    swift_bridgeObjectRetain();
    v64 = (void *)sub_213C86124();
    v65 = objc_msgSend(v63, sel_initWithKey_, v64);

    __swift_instantiateConcreteTypeFromMangledName(&qword_254D306C0);
    v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_213C885B0;
    *(_QWORD *)(v66 + 32) = v60;
    *(_QWORD *)(v66 + 40) = v62;
    sub_213C3B534(v60, v62);
    v67 = (void *)sub_213C86280();
    swift_bridgeObjectRelease();
    sub_213C7F010(v76);
    v68 = (void *)sub_213C860B8();
    swift_bridgeObjectRelease();
    LODWORD(v63) = objc_msgSend(v65, sel_recordFloatVectors_metadata_, v67, v68);
    swift_bridgeObjectRelease();

    sub_213C3B078(v60, v62);
    swift_bridgeObjectRelease();
    if (!(_DWORD)v63)
      break;
    swift_release();

    swift_bridgeObjectRelease();
    v41 = v78 + 1;
    v18 = v73;
    v40 = v75;
    v39 = v71;
    if (v77 == v72)
    {
      swift_bridgeObjectRelease();
      goto LABEL_61;
    }
  }
  swift_willThrow();
  v69 = v80;
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_213C82774(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  _BYTE *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  sub_213C3512C();
  v7 = (void *)swift_allocError();
  *v8 = 8;
  v16 = *(_OWORD *)(v3 + 56);
  v17 = *(_OWORD *)(v3 + 72);
  v15 = *(_OWORD *)(v3 + 40);
  sub_213C57C14();
  v9 = objc_allocWithZone(MEMORY[0x24BE2CBA0]);
  v10 = (void *)sub_213C86124();
  v11 = objc_msgSend(v9, sel_initWithKey_, v10, v15, v16, v17);

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D306C0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_213C885B0;
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  sub_213C3B534(a1, a2);
  v13 = (void *)sub_213C86280();
  swift_bridgeObjectRelease();
  sub_213C7F010(a3);
  v14 = (void *)sub_213C860B8();
  swift_bridgeObjectRelease();
  LOBYTE(a3) = objc_msgSend(v11, sel_recordBitVectors_metadata_, v13, v14);
  swift_bridgeObjectRelease();

  if ((a3 & 1) != 0)
  else
    swift_willThrow();
}

uint64_t DediscoUploader.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 88);
  return v0;
}

uint64_t DediscoUploader.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 88);
  return swift_deallocClassInstance();
}

_QWORD *sub_213C829E8(_QWORD *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _OWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  v5 = a4 + 64;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v11 = 0;
    v12 = 0;
LABEL_37:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v12;
  }
  if (!a3)
  {
    v11 = 0;
    v12 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
    goto LABEL_39;
  v10 = a2;
  v23 = -1 << *(_BYTE *)(a4 + 32);
  v24 = result;
  v11 = 0;
  v12 = 0;
  v25 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    v18 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    sub_213C35070(*(_QWORD *)(a4 + 56) + 32 * v14, (uint64_t)&v27);
    *(_QWORD *)&v26 = v20;
    *((_QWORD *)&v26 + 1) = v19;
    v22 = v27;
    v21 = v28;
    v30 = v27;
    v31 = v28;
    v29 = v26;
    *v10 = v26;
    v10[1] = v22;
    v10[2] = v21;
    if (v12 == a3)
    {
      swift_bridgeObjectRetain();
      v12 = a3;
      goto LABEL_36;
    }
    v10 += 3;
    result = (_QWORD *)swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_8;
LABEL_9:
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v15 >= v25)
      goto LABEL_35;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    if (!v16)
    {
      v17 = v11 + 2;
      ++v11;
      if (v15 + 1 >= v25)
        goto LABEL_35;
      v16 = *(_QWORD *)(v5 + 8 * v17);
      if (v16)
        goto LABEL_14;
      v11 = v15 + 1;
      if (v15 + 2 >= v25)
        goto LABEL_35;
      v16 = *(_QWORD *)(v5 + 8 * (v15 + 2));
      if (v16)
      {
        v15 += 2;
      }
      else
      {
        v11 = v15 + 2;
        if (v15 + 3 >= v25)
          goto LABEL_35;
        v16 = *(_QWORD *)(v5 + 8 * (v15 + 3));
        if (!v16)
        {
          v17 = v15 + 4;
          v11 = v15 + 3;
          if (v15 + 4 < v25)
          {
            v16 = *(_QWORD *)(v5 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                v15 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_40;
                if (v15 >= v25)
                {
                  v11 = v25 - 1;
                  goto LABEL_35;
                }
                v16 = *(_QWORD *)(v5 + 8 * v15);
                ++v17;
                if (v16)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v15 = v17;
            goto LABEL_21;
          }
LABEL_35:
          v8 = 0;
LABEL_36:
          v6 = v23;
          result = v24;
          goto LABEL_37;
        }
        v15 += 3;
      }
    }
LABEL_21:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v15 << 6);
    v11 = v15;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_213C82C34(char *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;

  if (!a2)
    return MEMORY[0x24BEE4AF8];
  if (a2 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E228);
    v4 = 4 * a2;
    v5 = (char *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v5);
    v7 = v6 - 32;
    if (v6 < 32)
      v7 = v6 - 29;
    *((_QWORD *)v5 + 2) = a2;
    *((_QWORD *)v5 + 3) = 2 * (v7 >> 2);
    v8 = v5 + 32;
    if (&v5[v4 + 32] <= a1 || v8 >= &a1[v4])
    {
      memcpy(v8, a1, 4 * a2);
      return (uint64_t)v5;
    }
  }
  result = sub_213C86610();
  __break(1u);
  return result;
}

uint64_t sub_213C82D68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E2A0);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 48);
  v5 = sub_213C829E8(&v7, (_OWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_213C3B0EC();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_213C82E5C(char *a1, int64_t a2)
{
  char *v4;
  size_t v5;
  char *v6;
  uint64_t result;

  if (!a2)
    return MEMORY[0x24BEE4AF8];
  if (a2 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2E200);
    v4 = (char *)swift_allocObject();
    v5 = _swift_stdlib_malloc_size(v4);
    *((_QWORD *)v4 + 2) = a2;
    *((_QWORD *)v4 + 3) = 2 * v5 - 64;
    v6 = v4 + 32;
    if (&v4[a2 + 32] <= a1 || v6 >= &a1[a2])
    {
      memcpy(v6, a1, a2);
      return (uint64_t)v4;
    }
  }
  result = sub_213C86610();
  __break(1u);
  return result;
}

_QWORD *sub_213C82F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  int has_internal_content;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  _QWORD v27[5];

  v27[3] = type metadata accessor for DediscoRecorderImpl();
  v27[4] = &off_24D0D9F50;
  v27[0] = a4;
  a5[2] = a1;
  a5[3] = a2;
  a5[4] = a3;
  sub_213C44B0C((uint64_t)v27, (uint64_t)(a5 + 11));
  swift_retain();
  has_internal_content = os_variant_has_internal_content();
  swift_beginAccess();
  v11 = *(_QWORD *)(a3 + 32);
  if (!*(_QWORD *)(v11 + 16))
  {
    v25 = 0u;
    v26 = 0u;
LABEL_9:
    swift_release();
    sub_213C3B7AC((uint64_t)&v25, &qword_254D2DBA0);
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v12 = sub_213C4B3DC(0xD000000000000014, 0x8000000213C8F2F0);
  if ((v13 & 1) != 0)
  {
    sub_213C35070(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v25);
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v26 + 1))
    goto LABEL_9;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v14 = a5[3];
    *(_QWORD *)&v25 = a5[2];
    *((_QWORD *)&v25 + 1) = v14;
    swift_bridgeObjectRetain();
    sub_213C861F0();
    sub_213C861F0();
    swift_release();
    swift_bridgeObjectRelease();
    v15 = *((_QWORD *)&v25 + 1);
    v16 = v25;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    goto LABEL_12;
  }
  swift_release();
LABEL_11:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  v16 = a5[2];
  v15 = a5[3];
  swift_bridgeObjectRetain();
LABEL_12:
  v17 = a5[4];
  v18 = *(_QWORD *)(v17 + 48);
  if (v18)
  {
    v19 = (uint64_t *)(v18 + 72);
  }
  else
  {
    v19 = (uint64_t *)(v17 + 16);
    swift_beginAccess();
  }
  v20 = *v19;
  v21 = swift_bridgeObjectRetain();
  v22 = 0xEA00000000006E6FLL;
  if (has_internal_content)
    v22 = 0xE500000000000000;
  v23 = 0x69746375646F7270;
  a5[5] = v16;
  a5[6] = v15;
  if (has_internal_content)
    v23 = 0x7972726163;
  a5[7] = v23;
  a5[8] = v22;
  a5[9] = v20;
  a5[10] = v21;
  return a5;
}

uint64_t sub_213C831B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t *v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  char v30;
  _BYTE *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[24];
  uint64_t v45;

  v4 = sub_213C85FE0();
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213C85FEC();
  v33 = *(_QWORD *)(v7 - 8);
  v34 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D30328);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_213C85ECC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v32 = (char *)&v32 - v18;
  v19 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  *(_QWORD *)&v37[0] = 0xD00000000000001FLL;
  *((_QWORD *)&v37[0] + 1) = 0x8000000213C8F290;
  v42 = a1;
  v43 = a2;
  v40 = 46;
  v41 = 0xE100000000000000;
  v38 = 95;
  v39 = 0xE100000000000000;
  sub_213C3B020();
  sub_213C864B4();
  sub_213C861F0();
  swift_bridgeObjectRelease();
  v20 = (void *)sub_213C86124();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v19, sel_valueForKey_, v20);

  if (v21)
  {
    sub_213C864C0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v37, 0, sizeof(v37));
  }
  sub_213C3B0F4((uint64_t)v37, (uint64_t)v44, &qword_254D2DBA0);
  if (!v45)
  {
    v26 = &qword_254D2DBA0;
    v27 = v44;
    return sub_213C3B7AC((uint64_t)v27, v26);
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    return result;
  sub_213C85FC8();
  v23 = v35;
  v24 = v36;
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v6, *MEMORY[0x24BDCF220], v36);
  sub_213C85E9C();
  sub_213C85FBC();
  v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25(v17, v13);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v34);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    v26 = &qword_254D30328;
    v27 = v12;
    return sub_213C3B7AC((uint64_t)v27, v26);
  }
  v28 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v29 = v32;
  v28(v32, v12, v13);
  sub_213C85EC0();
  sub_213C85640();
  v30 = sub_213C86100();
  v25(v17, v13);
  if ((v30 & 1) != 0)
  {
    sub_213C3A984();
    swift_allocError();
    *v31 = 14;
    swift_willThrow();
  }
  return ((uint64_t (*)(char *, uint64_t))v25)(v29, v13);
}

uint64_t sub_213C835D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t result;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  uint8_t *v41;
  const char *v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  unint64_t *v52;
  _OWORD *v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  _BOOL8 v63;
  BOOL v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  void *v82;
  char *v83;
  unint64_t v84;
  char v85;
  void *v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  void *v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  void *v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  void *v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t inited;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  os_log_type_t v110;
  uint64_t v111;
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  os_log_type_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  _OWORD v123[2];
  __int128 v124;
  __int128 v125;

  v4 = MEMORY[0x24BEE4AF8];
  sub_213C3BB4C(MEMORY[0x24BEE4AF8]);
  sub_213C3BB4C(v4);
  if (!*(_QWORD *)(a1 + 16)
    || (v5 = sub_213C4B3DC(0x6D726F4E78616DLL, 0xE700000000000000), (v6 & 1) == 0)
    || (sub_213C35070(*(_QWORD *)(a1 + 56) + 32 * v5, (uint64_t)&v124),
        v7 = sub_213C35170(),
        (swift_dynamicCast() & 1) == 0))
  {
    if (qword_254D2D960 != -1)
      swift_once();
    v14 = sub_213C86094();
    __swift_project_value_buffer(v14, (uint64_t)qword_254D2FF28);
    swift_bridgeObjectRetain();
    v15 = sub_213C8607C();
    v16 = sub_213C86400();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v120 = swift_slowAlloc();
      *(_QWORD *)&v124 = v120;
      *(_DWORD *)v17 = 136315394;
      sub_213C42558(0x6D726F4E78616DLL, 0xE700000000000000, (uint64_t *)&v124);
      sub_213C86490();
      *(_WORD *)(v17 + 12) = 2080;
      swift_bridgeObjectRetain();
      v18 = sub_213C860D0();
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v123[0] = sub_213C42558(v18, v20, (uint64_t *)&v124);
      sub_213C86490();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213C25000, v15, v16, "cannot get %s from recipe %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      v21 = v120;
LABEL_17:
      MEMORY[0x2199C0A30](v21, -1, -1);
      v22 = v17;
LABEL_18:
      MEMORY[0x2199C0A30](v22, -1, -1);

      goto LABEL_24;
    }
LABEL_23:

    swift_bridgeObjectRelease_n();
    goto LABEL_24;
  }
  objc_msgSend(*(id *)&v123[0], sel_doubleValue);
  v9 = v8;

  if (!*(_QWORD *)(a1 + 16)
    || (v10 = sub_213C4B3DC(0xD00000000000001DLL, 0x8000000213C8F210), (v11 & 1) == 0)
    || (sub_213C35070(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)&v124),
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE68),
        (swift_dynamicCast() & 1) == 0))
  {
    if (qword_254D2D960 != -1)
      swift_once();
    v23 = sub_213C86094();
    __swift_project_value_buffer(v23, (uint64_t)qword_254D2FF28);
    swift_bridgeObjectRetain();
    v15 = sub_213C8607C();
    v24 = sub_213C86400();
    if (os_log_type_enabled(v15, v24))
    {
      v121 = a2;
      v17 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      *(_QWORD *)&v124 = v25;
      *(_DWORD *)v17 = 136315138;
      swift_bridgeObjectRetain();
      v26 = sub_213C860D0();
      v28 = v27;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v123[0] = sub_213C42558(v26, v28, (uint64_t *)&v124);
      sub_213C86490();
      swift_bridgeObjectRelease_n();
      a2 = v121;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213C25000, v15, v24, "cannot get recipeLocalDPParams from recipe %s", (uint8_t *)v17, 0xCu);
      swift_arrayDestroy();
      v21 = v25;
      goto LABEL_17;
    }
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(*(_QWORD *)&v123[0] + 16))
    goto LABEL_31;
  v12 = sub_213C4B3DC(0x73696E616863656DLL, 0xE90000000000006DLL);
  if ((v13 & 1) == 0)
    goto LABEL_31;
  sub_213C35070(*(_QWORD *)(*(_QWORD *)&v123[0] + 56) + 32 * v12, (uint64_t)&v124);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_31;
  if (*(_QWORD *)&v123[0] != 0x6E61697373756167 || *((_QWORD *)&v123[0] + 1) != 0xE800000000000000)
  {
    v35 = sub_213C86748();
    swift_bridgeObjectRelease();
    if ((v35 & 1) != 0)
      goto LABEL_27;
LABEL_31:
    swift_bridgeObjectRelease();
    if (qword_254D2D960 != -1)
      swift_once();
    v39 = sub_213C86094();
    __swift_project_value_buffer(v39, (uint64_t)qword_254D2FF28);
    v15 = sub_213C8607C();
    v40 = sub_213C86400();
    if (os_log_type_enabled(v15, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v41 = 0;
      v42 = "Only gaussian is supported as DP mechanism";
LABEL_35:
      _os_log_impl(&dword_213C25000, v15, v40, v42, v41, 2u);
      v22 = (uint64_t)v41;
      goto LABEL_18;
    }
LABEL_72:

    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
LABEL_27:
  if (*(_QWORD *)(*(_QWORD *)&v123[0] + 16)
    && (v36 = sub_213C4B3DC(0x6E6F6C69737065, 0xE700000000000000), (v37 & 1) != 0)
    && (sub_213C35070(*(_QWORD *)(*(_QWORD *)&v123[0] + 56) + 32 * v36, (uint64_t)&v124), (swift_dynamicCast() & 1) != 0))
  {
    objc_msgSend(*(id *)&v123[0], sel_doubleValue);
    v33 = v38;

  }
  else
  {
    v33 = 0;
  }
  if (*(_QWORD *)(*(_QWORD *)&v123[0] + 16)
    && (v43 = sub_213C4B3DC(0x61746C6564, 0xE500000000000000), (v44 & 1) != 0)
    && (sub_213C35070(*(_QWORD *)(*(_QWORD *)&v123[0] + 56) + 32 * v43, (uint64_t)&v124), (swift_dynamicCast() & 1) != 0))
  {
    objc_msgSend(*(id *)&v123[0], sel_doubleValue);
    v34 = v45;

  }
  else
  {
    v34 = 0;
  }
  if (*(_QWORD *)(*(_QWORD *)&v123[0] + 16)
    && (v46 = sub_213C4B3DC(0xD00000000000001BLL, 0x8000000213C8F230), (v47 & 1) != 0))
  {
    sub_213C35070(*(_QWORD *)(*(_QWORD *)&v123[0] + 56) + 32 * v46, (uint64_t)&v124);
  }
  else
  {
    v124 = 0u;
    v125 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v125 + 1))
  {
    sub_213C3B7AC((uint64_t)&v124, &qword_254D2DBA0);
LABEL_68:
    if (qword_254D2D960 != -1)
      swift_once();
    v72 = sub_213C86094();
    __swift_project_value_buffer(v72, (uint64_t)qword_254D2FF28);
    v15 = sub_213C8607C();
    v40 = sub_213C86400();
    if (os_log_type_enabled(v15, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v41 = 0;
      v42 = "Moments accountant parameter is missing!";
      goto LABEL_35;
    }
    goto LABEL_72;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_68;
  v122 = a2;
  v48 = *(_QWORD *)&v123[0];
  v49 = sub_213C3BB4C(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRelease();
  v50 = 0;
  v51 = (_QWORD *)v49;
  v52 = (unint64_t *)&unk_24D0D79C8;
  v119 = *(_QWORD *)&v123[0];
  do
  {
    if (v50 >= 6)
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
    v55 = *(v52 - 1);
    v54 = *v52;
    if (!*(_QWORD *)(v48 + 16))
    {
      v124 = 0u;
      v125 = 0u;
      swift_bridgeObjectRetain();
LABEL_74:
      swift_bridgeObjectRelease();
      sub_213C3B7AC((uint64_t)&v124, &qword_254D2DBA0);
LABEL_76:
      if (qword_254D2D960 != -1)
        swift_once();
      v73 = sub_213C86094();
      __swift_project_value_buffer(v73, (uint64_t)qword_254D2FF28);
      swift_bridgeObjectRetain();
      v74 = sub_213C8607C();
      v75 = sub_213C86400();
      if (!os_log_type_enabled(v74, v75))
      {

        swift_bridgeObjectRelease_n();
        a2 = v122;
        goto LABEL_24;
      }
      v76 = swift_slowAlloc();
      v77 = swift_slowAlloc();
      *(_QWORD *)&v124 = v77;
      *(_DWORD *)v76 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v123[0] = sub_213C42558(v55, v54, (uint64_t *)&v124);
      sub_213C86490();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_213C25000, v74, v75, "Moments accountant parameter %s is malformed.", (uint8_t *)v76, 0xCu);
      swift_arrayDestroy();
      v78 = v77;
      goto LABEL_112;
    }
    swift_bridgeObjectRetain_n();
    v56 = sub_213C4B3DC(v55, v54);
    if ((v57 & 1) != 0)
    {
      sub_213C35070(*(_QWORD *)(v48 + 56) + 32 * v56, (uint64_t)&v124);
    }
    else
    {
      v124 = 0u;
      v125 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((_QWORD *)&v125 + 1))
      goto LABEL_74;
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_76;
    }
    *((_QWORD *)&v125 + 1) = v7;
    *(_QWORD *)&v124 = *(_QWORD *)&v123[0];
    sub_213C3B0BC(&v124, v123);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v59 = v55;
    v60 = sub_213C4B3DC(v55, v54);
    v62 = v51[2];
    v63 = (v61 & 1) == 0;
    v64 = __OFADD__(v62, v63);
    v65 = v62 + v63;
    if (v64)
      goto LABEL_122;
    v66 = v61;
    if (v51[3] >= v65)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v71 = v60;
        sub_213C608B4();
        v60 = v71;
      }
    }
    else
    {
      sub_213C5FC40(v65, isUniquelyReferenced_nonNull_native);
      v60 = sub_213C4B3DC(v59, v54);
      if ((v66 & 1) != (v67 & 1))
      {
        result = sub_213C8679C();
        __break(1u);
        return result;
      }
    }
    if ((v66 & 1) != 0)
    {
      v53 = (_OWORD *)(v51[7] + 32 * v60);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v53);
      sub_213C3B0BC(v123, v53);
    }
    else
    {
      v51[(v60 >> 6) + 8] |= 1 << v60;
      v68 = (uint64_t *)(v51[6] + 16 * v60);
      *v68 = v59;
      v68[1] = v54;
      sub_213C3B0BC(v123, (_OWORD *)(v51[7] + 32 * v60));
      v69 = v51[2];
      v64 = __OFADD__(v69, 1);
      v70 = v69 + 1;
      if (v64)
        goto LABEL_123;
      v51[2] = v70;
      swift_bridgeObjectRetain();
    }
    v48 = v119;
    ++v50;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v52 += 2;
  }
  while (v50 != 6);
  v79 = MEMORY[0x24BEE0D00];
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  if (!v51[2]
    || (v80 = sub_213C4B3DC(0x64724F69796E6552, 0xEA00000000007265), (v81 & 1) == 0)
    || (sub_213C35070(v51[7] + 32 * v80, (uint64_t)&v124), (swift_dynamicCast() & 1) == 0)
    || (v82 = *(void **)&v123[0],
        v83 = (char *)objc_msgSend(*(id *)&v123[0], sel_integerValue),
        v82,
        (unint64_t)(v83 - 33) < 0xFFFFFFFFFFFFFFE1))
  {
    if (qword_254D2D960 != -1)
      swift_once();
    v109 = sub_213C86094();
    __swift_project_value_buffer(v109, (uint64_t)qword_254D2FF28);
    v74 = sub_213C8607C();
    v110 = sub_213C86400();
    if (!os_log_type_enabled(v74, v110))
      goto LABEL_113;
    v76 = swift_slowAlloc();
    v111 = swift_slowAlloc();
    *(_QWORD *)&v124 = v111;
    *(_DWORD *)v76 = 136315650;
    *(_QWORD *)&v123[0] = sub_213C42558(0x64724F69796E6552, 0xEA00000000007265, (uint64_t *)&v124);
    sub_213C86490();
    *(_WORD *)(v76 + 12) = 2048;
    *(_QWORD *)&v123[0] = 2;
    sub_213C86490();
    *(_WORD *)(v76 + 22) = 2048;
    *(_QWORD *)&v123[0] = 32;
    sub_213C86490();
    _os_log_impl(&dword_213C25000, v74, v110, "Moments accountant parameter %s must be between %ld and %ld.", (uint8_t *)v76, 0x20u);
    swift_arrayDestroy();
    v78 = v111;
LABEL_112:
    MEMORY[0x2199C0A30](v78, -1, -1);
    MEMORY[0x2199C0A30](v76, -1, -1);
LABEL_113:

    a2 = v122;
    goto LABEL_24;
  }
  if (!v51[2]
    || (v84 = sub_213C4B3DC(0x61726574496D754ELL, 0xED0000736E6F6974), (v85 & 1) == 0)
    || (sub_213C35070(v51[7] + 32 * v84, (uint64_t)&v124), (swift_dynamicCast() & 1) == 0)
    || (v86 = *(void **)&v123[0],
        v87 = (uint64_t)objc_msgSend(*(id *)&v123[0], sel_integerValue),
        v86,
        v87 < 1))
  {
    if (qword_254D2D960 != -1)
      swift_once();
    v112 = sub_213C86094();
    __swift_project_value_buffer(v112, (uint64_t)qword_254D2FF28);
    v113 = sub_213C8607C();
    v114 = sub_213C86400();
    if (!os_log_type_enabled(v113, v114))
      goto LABEL_119;
    v115 = swift_slowAlloc();
    v116 = swift_slowAlloc();
    *(_QWORD *)&v124 = v116;
    *(_DWORD *)v115 = 136315138;
    *(_QWORD *)&v123[0] = sub_213C42558(0x61726574496D754ELL, 0xED0000736E6F6974, (uint64_t *)&v124);
    sub_213C86490();
    _os_log_impl(&dword_213C25000, v113, v114, "Moments accountant parameter %s must be greater than 0.", (uint8_t *)v115, 0xCu);
    goto LABEL_118;
  }
  if (!v51[2])
    goto LABEL_124;
  v88 = sub_213C4B3DC(0x726F686F4378614DLL, 0xED0000657A695374);
  if ((v89 & 1) == 0)
    goto LABEL_124;
  sub_213C35070(v51[7] + 32 * v88, (uint64_t)&v124);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_124;
  v90 = *(void **)&v123[0];
  v91 = (uint64_t)objc_msgSend(*(id *)&v123[0], sel_integerValue);

  if (!v51[2])
    goto LABEL_124;
  v92 = sub_213C4B3DC(0xD000000000000011, 0x8000000213C8DA70);
  if ((v93 & 1) == 0)
    goto LABEL_124;
  sub_213C35070(v51[7] + 32 * v92, (uint64_t)&v124);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_124;
  v94 = *(void **)&v123[0];
  v95 = (uint64_t)objc_msgSend(*(id *)&v123[0], sel_integerValue);

  if (!v51[2]
    || (v96 = sub_213C4B3DC(0x6974616C75706F50, 0xEE00657A69536E6FLL), (v97 & 1) == 0)
    || (sub_213C35070(v51[7] + 32 * v96, (uint64_t)&v124), (swift_dynamicCast() & 1) == 0)
    || (v98 = *(void **)&v123[0],
        v99 = (uint64_t)objc_msgSend(*(id *)&v123[0], sel_integerValue),
        v98,
        v91 < 1)
    || v95 < 1
    || v99 < 1
    || v91 < v95
    || v99 < v91)
  {
LABEL_124:
    if (qword_254D2D960 != -1)
      swift_once();
    v117 = sub_213C86094();
    __swift_project_value_buffer(v117, (uint64_t)qword_254D2FF28);
    v113 = sub_213C8607C();
    v118 = sub_213C86400();
    if (!os_log_type_enabled(v113, v118))
      goto LABEL_119;
    v115 = swift_slowAlloc();
    v116 = swift_slowAlloc();
    *(_QWORD *)&v124 = v116;
    *(_DWORD *)v115 = 136315650;
    *(_QWORD *)&v123[0] = sub_213C42558(0xD000000000000011, 0x8000000213C8DA70, (uint64_t *)&v124);
    sub_213C86490();
    *(_WORD *)(v115 + 12) = 2080;
    *(_QWORD *)&v123[0] = sub_213C42558(0x726F686F4378614DLL, 0xED0000657A695374, (uint64_t *)&v124);
    sub_213C86490();
    *(_WORD *)(v115 + 22) = 2080;
    *(_QWORD *)&v123[0] = sub_213C42558(0x6974616C75706F50, 0xEE00657A69536E6FLL, (uint64_t *)&v124);
    sub_213C86490();
    _os_log_impl(&dword_213C25000, v113, v118, "Moments accountant parameters require 0 < %s <= %s <= %s", (uint8_t *)v115, 0x20u);
LABEL_118:
    swift_arrayDestroy();
    MEMORY[0x2199C0A30](v116, -1, -1);
    MEMORY[0x2199C0A30](v115, -1, -1);
LABEL_119:

    goto LABEL_120;
  }
  if (v51[2])
  {
    v100 = sub_213C4B3DC(0x695374726F686F43, 0xEB00000000616D67);
    if ((v101 & 1) != 0)
    {
      sub_213C35070(v51[7] + 32 * v100, (uint64_t)&v124);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v102 = *(void **)&v123[0];
        objc_msgSend(*(id *)&v123[0], sel_doubleValue);
        v104 = v103;

        v30 = v104;
        if ((~v104 & 0x7FF0000000000000) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE30);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_213C89490;
          *(_QWORD *)(inited + 32) = 0x73696E616863654DLL;
          *(_QWORD *)(inited + 40) = 0xE90000000000006DLL;
          *(_QWORD *)(inited + 48) = 0xD000000000000011;
          *(_QWORD *)(inited + 56) = 0x8000000213C8F250;
          *(_QWORD *)(inited + 72) = v79;
          strcpy((char *)(inited + 80), "OverallEpsilon");
          v106 = MEMORY[0x24BEE13C8];
          *(_BYTE *)(inited + 95) = -18;
          *(_QWORD *)(inited + 96) = v33;
          *(_QWORD *)(inited + 120) = v106;
          strcpy((char *)(inited + 128), "OverallDelta");
          *(_BYTE *)(inited + 141) = 0;
          *(_WORD *)(inited + 142) = -5120;
          *(_QWORD *)(inited + 144) = v34;
          *(_QWORD *)(inited + 168) = v106;
          *(_QWORD *)(inited + 176) = 0xD000000000000014;
          *(_QWORD *)(inited + 184) = 0x8000000213C8F270;
          *(_QWORD *)(inited + 216) = v106;
          *(_QWORD *)(inited + 192) = v9;
          v107 = sub_213C3BB4C(inited);
          v31 = v51;
          v108 = swift_bridgeObjectRetain();
          v32 = sub_213C36AAC(v108, v107);
          result = swift_bridgeObjectRelease();
          a2 = v122;
          goto LABEL_25;
        }
      }
    }
  }
LABEL_120:
  a2 = v122;
LABEL_24:
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v30 = 0;
  v31 = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  v9 = 0;
LABEL_25:
  *a2 = v33;
  a2[1] = v34;
  a2[2] = v9;
  a2[3] = v30;
  a2[4] = v31;
  a2[5] = v32;
  return result;
}

uint64_t sub_213C84AAC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  unint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD v53[12];
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[27];
  _QWORD v60[3];
  uint64_t v61;
  _UNKNOWN **v62;
  _BYTE v63[24];
  uint64_t v64;

  LODWORD(v55) = a8;
  v56 = a3;
  v14 = sub_213C85ECC();
  v53[8] = *(_QWORD *)(v14 - 8);
  v53[9] = v14;
  MEMORY[0x24BDAC7A8](v14);
  v53[7] = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213C44B0C(a7, (uint64_t)v63);
  v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v63, v64);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (_QWORD *)((char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v19 + 16))(v18);
  v20 = *v18;
  v61 = type metadata accessor for DediscoRecorderImpl();
  v62 = &off_24D0D9F50;
  v53[6] = v61;
  v60[0] = v20;
  type metadata accessor for DediscoUploader();
  inited = (_QWORD *)swift_initStackObject();
  v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v60, v61);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (_QWORD *)((char *)v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  v26 = *v24;
  swift_bridgeObjectRetain();
  swift_retain();
  v53[10] = a5;
  v53[11] = a6;
  v57 = a4;
  sub_213C82F7C(a5, a6, a4, v26, inited);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D308E8);
  v27 = swift_initStackObject();
  *(_OWORD *)(v27 + 16) = xmmword_213C885B0;
  *(_QWORD *)(v27 + 32) = sub_213C86148();
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = 0;
  *(_QWORD *)(v27 + 56) = 0xE000000000000000;
  v29 = sub_213C3BD8C(v27);
  v30 = v29;
  if (a2 >> 60 == 15)
  {
    v54 = v29;
    v33 = v58;
  }
  else
  {
    sub_213C3B534(a1, a2);
    v31 = sub_213C7ECA8(v30);
    v32 = v58;
    sub_213C819B4(a1, a2, v31);
    v33 = v32;
    swift_bridgeObjectRelease();
    sub_213C3B064(a1, a2);
    if (v32)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    v54 = v30;
  }
  v35 = v56;
  v36 = *(_QWORD *)(v57 + 48);
  v53[5] = a2 >> 60;
  if (v36)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D2DE30);
    v37 = swift_initStackObject();
    *(_OWORD *)(v37 + 16) = xmmword_213C883D0;
    *(_QWORD *)(v37 + 32) = 0xD000000000000015;
    *(_QWORD *)(v37 + 40) = 0x8000000213C8F2B0;
    v38 = MEMORY[0x24BEE1768];
    *(_QWORD *)(v37 + 48) = *(_QWORD *)(v36 + 56);
    *(_QWORD *)(v37 + 72) = v38;
    *(_QWORD *)(v37 + 80) = 0xD000000000000015;
    *(_QWORD *)(v37 + 88) = 0x8000000213C8F2D0;
    v39 = *(_DWORD *)(v36 + 40);
    *(_QWORD *)(v37 + 120) = MEMORY[0x24BEE14E8];
    *(_DWORD *)(v37 + 96) = v39;
    swift_bridgeObjectRetain();
    swift_retain();
    v40 = sub_213C3BB4C(v37);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v59[0] = v35;
    sub_213C3AAA0(v40, (uint64_t)sub_213C3AA60, 0, isUniquelyReferenced_nonNull_native, (uint64_t)v59);
    if (v33)
    {
      swift_bridgeObjectRelease();
      __break(1u);
      JUMPOUT(0x213C855A4);
    }
    v33 = 0;
    v35 = v59[0];
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v42 = v57;
  swift_beginAccess();
  v43 = *(_QWORD *)(v42 + 32);
  swift_beginAccess();
  v44 = *(_QWORD *)(v42 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v45 = sub_213C7DDAC(v35, v43, v44);
  if (!v33)
  {
    v49 = v46;
    v50 = v47;
    v51 = v48;
    v58 = 0;
    v52 = v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v55 = v52;
    sub_213C3B534(v52, v49);
    v53[3] = v51 >> 62;
    sub_213C3B534(v50, v51);
    v53[4] = v50;
    sub_213C3B078(v50, v51);
    v56 = v35;
    __asm { BR              X9 }
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

uint64_t type metadata accessor for DediscoUploader()
{
  return objc_opt_self();
}

uint64_t method lookup function for DediscoUploader()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_213C855F0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_213C85618(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_213C85640()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D2DE08;
  if (!qword_254D2DE08)
  {
    v1 = sub_213C85ECC();
    result = MEMORY[0x2199C0970](MEMORY[0x24BDCE948], v1);
    atomic_store(result, (unint64_t *)&qword_254D2DE08);
  }
  return result;
}

uint64_t destroy for GaussianAlgorithmParameters()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GaussianAlgorithmParameters(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for GaussianAlgorithmParameters(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for GaussianAlgorithmParameters(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GaussianAlgorithmParameters(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GaussianAlgorithmParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GaussianAlgorithmParameters()
{
  return &type metadata for GaussianAlgorithmParameters;
}

void PFLPrivatize_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_0_0(&dword_213C25000, a1, a3, "PFLPrivatize is being deprecated, please consult PFL team.", a5, a6, a7, a8, 0);
  OUTLINED_FUNCTION_1_0();
}

void PFLPrivatizeCustomNorm_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_0_0(&dword_213C25000, a1, a3, "PFLPrivatizeCustomNorm is being deprecated, please consult PFL team.", a5, a6, a7, a8, 0);
  OUTLINED_FUNCTION_1_0();
}

void PFLPrivatizeCustomNormWithLowerEpsilon_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_0_0(&dword_213C25000, a1, a3, "PFLPrivatizeCustomNormWithLowerEpsilon is being deprecated, please consult PFL team.", a5, a6, a7, a8, 0);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_213C85C2C()
{
  return MEMORY[0x24BDCB070]();
}

uint64_t sub_213C85C38()
{
  return MEMORY[0x24BDCB0C0]();
}

uint64_t sub_213C85C44()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_213C85C50()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_213C85C5C()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_213C85C68()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_213C85C74()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_213C85C80()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_213C85C8C()
{
  return MEMORY[0x24BDCB630]();
}

uint64_t sub_213C85C98()
{
  return MEMORY[0x24BDCB638]();
}

uint64_t sub_213C85CA4()
{
  return MEMORY[0x24BDCB6D8]();
}

uint64_t sub_213C85CB0()
{
  return MEMORY[0x24BDCB710]();
}

uint64_t sub_213C85CBC()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_213C85CC8()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_213C85CD4()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_213C85CE0()
{
  return MEMORY[0x24BDCBBD0]();
}

uint64_t sub_213C85CEC()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_213C85CF8()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_213C85D04()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_213C85D10()
{
  return MEMORY[0x24BDCC738]();
}

uint64_t sub_213C85D1C()
{
  return MEMORY[0x24BDCC818]();
}

uint64_t sub_213C85D28()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_213C85D34()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_213C85D40()
{
  return MEMORY[0x24BDCD508]();
}

uint64_t sub_213C85D4C()
{
  return MEMORY[0x24BDCD520]();
}

uint64_t sub_213C85D58()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_213C85D64()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_213C85D70()
{
  return MEMORY[0x24BDCD848]();
}

uint64_t sub_213C85D7C()
{
  return MEMORY[0x24BDCD860]();
}

uint64_t sub_213C85D88()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_213C85D94()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_213C85DA0()
{
  return MEMORY[0x24BDCD8C0]();
}

uint64_t sub_213C85DAC()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_213C85DB8()
{
  return MEMORY[0x24BDCD968]();
}

uint64_t sub_213C85DC4()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_213C85DD0()
{
  return MEMORY[0x24BDCD9E8]();
}

uint64_t sub_213C85DDC()
{
  return MEMORY[0x24BDCDA20]();
}

uint64_t sub_213C85DE8()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_213C85DF4()
{
  return MEMORY[0x24BDCDA70]();
}

uint64_t sub_213C85E00()
{
  return MEMORY[0x24BDCDA88]();
}

uint64_t sub_213C85E0C()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t sub_213C85E18()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_213C85E24()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_213C85E30()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_213C85E3C()
{
  return MEMORY[0x24BDCDC80]();
}

uint64_t sub_213C85E48()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_213C85E54()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_213C85E60()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_213C85E6C()
{
  return MEMORY[0x24BDCDD40]();
}

uint64_t sub_213C85E78()
{
  return MEMORY[0x24BDCDD50]();
}

uint64_t sub_213C85E84()
{
  return MEMORY[0x24BDCE2F8]();
}

uint64_t sub_213C85E90()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_213C85E9C()
{
  return MEMORY[0x24BDCE778]();
}

uint64_t sub_213C85EA8()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_213C85EB4()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_213C85EC0()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_213C85ECC()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_213C85ED8()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_213C85EE4()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_213C85EF0()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_213C85EFC()
{
  return MEMORY[0x24BDCEB20]();
}

uint64_t sub_213C85F08()
{
  return MEMORY[0x24BDCEB30]();
}

uint64_t sub_213C85F14()
{
  return MEMORY[0x24BDCEB50]();
}

uint64_t sub_213C85F20()
{
  return MEMORY[0x24BDCEB60]();
}

uint64_t sub_213C85F2C()
{
  return MEMORY[0x24BDCEBB8]();
}

uint64_t sub_213C85F38()
{
  return MEMORY[0x24BDCECF0]();
}

uint64_t sub_213C85F44()
{
  return MEMORY[0x24BDCED08]();
}

uint64_t sub_213C85F50()
{
  return MEMORY[0x24BDCED50]();
}

uint64_t sub_213C85F5C()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_213C85F68()
{
  return MEMORY[0x24BDCEDE0]();
}

uint64_t sub_213C85F74()
{
  return MEMORY[0x24BDCEE28]();
}

uint64_t sub_213C85F80()
{
  return MEMORY[0x24BDCEE60]();
}

uint64_t sub_213C85F8C()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_213C85F98()
{
  return MEMORY[0x24BDCEF80]();
}

uint64_t sub_213C85FA4()
{
  return MEMORY[0x24BDCEFA0]();
}

uint64_t sub_213C85FB0()
{
  return MEMORY[0x24BDCEFB8]();
}

uint64_t sub_213C85FBC()
{
  return MEMORY[0x24BDCF160]();
}

uint64_t sub_213C85FC8()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t sub_213C85FD4()
{
  return MEMORY[0x24BDCF1D0]();
}

uint64_t sub_213C85FE0()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_213C85FEC()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_213C85FF8()
{
  return MEMORY[0x24BDCF4C8]();
}

uint64_t sub_213C86004()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_213C86010()
{
  return MEMORY[0x24BE5F688]();
}

uint64_t sub_213C8601C()
{
  return MEMORY[0x24BE5F690]();
}

uint64_t sub_213C86028()
{
  return MEMORY[0x24BE5F698]();
}

uint64_t sub_213C86034()
{
  return MEMORY[0x24BE5F6B0]();
}

uint64_t sub_213C86040()
{
  return MEMORY[0x24BE5F6B8]();
}

uint64_t sub_213C8604C()
{
  return MEMORY[0x24BE5F6C0]();
}

uint64_t sub_213C86058()
{
  return MEMORY[0x24BE5F6C8]();
}

uint64_t sub_213C86064()
{
  return MEMORY[0x24BE5F6D0]();
}

uint64_t sub_213C86070()
{
  return MEMORY[0x24BE5F6E8]();
}

uint64_t sub_213C8607C()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_213C86088()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_213C86094()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_213C860A0()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_213C860AC()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_213C860B8()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_213C860C4()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_213C860D0()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_213C860DC()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_213C860E8()
{
  return MEMORY[0x24BEE04A8]();
}

uint64_t sub_213C860F4()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_213C86100()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_213C8610C()
{
  return MEMORY[0x24BEE07F0]();
}

uint64_t sub_213C86118()
{
  return MEMORY[0x24BEE09B0]();
}

uint64_t sub_213C86124()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_213C86130()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_213C8613C()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_213C86148()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_213C86154()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_213C86160()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_213C8616C()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_213C86178()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_213C86184()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_213C86190()
{
  return MEMORY[0x24BEE0A58]();
}

uint64_t sub_213C8619C()
{
  return MEMORY[0x24BEE0A80]();
}

uint64_t sub_213C861A8()
{
  return MEMORY[0x24BEE0A88]();
}

uint64_t sub_213C861B4()
{
  return MEMORY[0x24BEE0AD0]();
}

uint64_t sub_213C861C0()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_213C861CC()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_213C861D8()
{
  return MEMORY[0x24BEE0B70]();
}

uint64_t sub_213C861E4()
{
  return MEMORY[0x24BEE0BB0]();
}

uint64_t sub_213C861F0()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_213C861FC()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_213C86208()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_213C86214()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_213C86220()
{
  return MEMORY[0x24BEE0CC8]();
}

uint64_t sub_213C8622C()
{
  return MEMORY[0x24BEE0CD0]();
}

uint64_t sub_213C86238()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_213C86244()
{
  return MEMORY[0x24BEE0DC8]();
}

uint64_t sub_213C86250()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_213C8625C()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_213C86268()
{
  return MEMORY[0x24BEE0E70]();
}

uint64_t sub_213C86274()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_213C86280()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_213C8628C()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_213C86298()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_213C862A4()
{
  return MEMORY[0x24BEE1188]();
}

uint64_t sub_213C862B0()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_213C862BC()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_213C862C8()
{
  return MEMORY[0x24BEE11C8]();
}

uint64_t sub_213C862D4()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_213C862E0()
{
  return MEMORY[0x24BEE1288]();
}

uint64_t sub_213C862EC()
{
  return MEMORY[0x24BEE1308]();
}

uint64_t sub_213C862F8()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_213C86304()
{
  return MEMORY[0x24BEE68C8]();
}

uint64_t sub_213C86310()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_213C8631C()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_213C86328()
{
  return MEMORY[0x24BEE6B28]();
}

uint64_t sub_213C86334()
{
  return MEMORY[0x24BEE6BA0]();
}

uint64_t sub_213C86340()
{
  return MEMORY[0x24BEE6BE0]();
}

uint64_t sub_213C8634C()
{
  return MEMORY[0x24BEE6BE8]();
}

uint64_t sub_213C86358()
{
  return MEMORY[0x24BEE6C08]();
}

uint64_t sub_213C86364()
{
  return MEMORY[0x24BDCFC58]();
}

uint64_t sub_213C86370()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_213C8637C()
{
  return MEMORY[0x24BDB8C78]();
}

uint64_t sub_213C86388()
{
  return MEMORY[0x24BDB8D00]();
}

uint64_t sub_213C86394()
{
  return MEMORY[0x24BDB8D10]();
}

uint64_t sub_213C863A0()
{
  return MEMORY[0x24BDB8D20]();
}

uint64_t sub_213C863AC()
{
  return MEMORY[0x24BDCFDD8]();
}

uint64_t sub_213C863B8()
{
  return MEMORY[0x24BDCFE18]();
}

uint64_t sub_213C863C4()
{
  return MEMORY[0x24BDCFED8]();
}

uint64_t sub_213C863D0()
{
  return MEMORY[0x24BDCFF28]();
}

uint64_t sub_213C863DC()
{
  return MEMORY[0x24BDCFF40]();
}

uint64_t sub_213C863E8()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_213C863F4()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_213C86400()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_213C8640C()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_213C86418()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_213C86424()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_213C86430()
{
  return MEMORY[0x24BEE5920]();
}

uint64_t sub_213C8643C()
{
  return MEMORY[0x24BEE5928]();
}

uint64_t sub_213C86448()
{
  return MEMORY[0x24BDB8E18]();
}

uint64_t sub_213C86454()
{
  return MEMORY[0x24BDB8E30]();
}

uint64_t sub_213C86460()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_213C8646C()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_213C86478()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_213C86484()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_213C86490()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_213C8649C()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_213C864A8()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t sub_213C864B4()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_213C864C0()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_213C864CC()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_213C864D8()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_213C864E4()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_213C864F0()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_213C864FC()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_213C86508()
{
  return MEMORY[0x24BEE24F0]();
}

uint64_t sub_213C86514()
{
  return MEMORY[0x24BEE2500]();
}

uint64_t sub_213C86520()
{
  return MEMORY[0x24BEE2508]();
}

uint64_t sub_213C8652C()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_213C86538()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_213C86544()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_213C86550()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_213C8655C()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_213C86568()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_213C86574()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_213C86580()
{
  return MEMORY[0x24BEE2840]();
}

uint64_t sub_213C8658C()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_213C86598()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_213C865A4()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_213C865B0()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_213C865BC()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_213C865C8()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_213C865D4()
{
  return MEMORY[0x24BEE2F70]();
}

uint64_t sub_213C865E0()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_213C865EC()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_213C865F8()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_213C86604()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_213C86610()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_213C8661C()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_213C86628()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_213C86634()
{
  return MEMORY[0x24BEE6FA8]();
}

uint64_t sub_213C86640()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_213C8664C()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_213C86658()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_213C86664()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_213C86670()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_213C8667C()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_213C86688()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_213C86694()
{
  return MEMORY[0x24BEE3368]();
}

uint64_t sub_213C866A0()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_213C866AC()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_213C866B8()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_213C866C4()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_213C866D0()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_213C866DC()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_213C866E8()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_213C866F4()
{
  return MEMORY[0x24BEE34B8]();
}

uint64_t sub_213C86700()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_213C8670C()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_213C86718()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_213C86724()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_213C86730()
{
  return MEMORY[0x24BEE7088]();
}

uint64_t sub_213C8673C()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_213C86748()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_213C86754()
{
  return MEMORY[0x24BEE3A58]();
}

uint64_t sub_213C86760()
{
  return MEMORY[0x24BEE3A88]();
}

uint64_t sub_213C8676C()
{
  return MEMORY[0x24BEE3AF0]();
}

uint64_t sub_213C86778()
{
  return MEMORY[0x24BEE3B20]();
}

uint64_t sub_213C86784()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_213C86790()
{
  return MEMORY[0x24BEE3DE8]();
}

uint64_t sub_213C8679C()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_213C867A8()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_213C867B4()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_213C867C0()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_213C867CC()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_213C867D8()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_213C867E4()
{
  return MEMORY[0x24BEE3F18]();
}

uint64_t sub_213C867F0()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_213C867FC()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_213C86808()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_213C86814()
{
  return MEMORY[0x24BEE4408]();
}

uint64_t sub_213C86820()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_213C8682C()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_213C86838()
{
  return MEMORY[0x24BEE4628]();
}

uint64_t sub_213C86844()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_213C86850()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_213C8685C()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x24BE1A1C8]();
}

uint64_t BOMCopierCopyWithOptions()
{
  return MEMORY[0x24BE0FA58]();
}

uint64_t BOMCopierFree()
{
  return MEMORY[0x24BE0FA68]();
}

uint64_t BOMCopierNew()
{
  return MEMORY[0x24BE0FA70]();
}

unsigned __int8 *__cdecl CC_SHA1(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x24BDAC320](data, *(_QWORD *)&len, md);
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x24BDAC358](data, *(_QWORD *)&len, md);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  CFAbsoluteTime result;

  MEMORY[0x24BDBB780]();
  return result;
}

uint64_t INSupportedMediaCategories()
{
  return MEMORY[0x24BDD9A48]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x24BED8448]();
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x24BE67168]();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x24BDD1240](aClass);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x24BDAC730](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB68](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB80](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x24BDAD170](*(_QWORD *)&__upper_bound);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

uint64_t cblas_saxpy_NEWLAPACK()
{
  return MEMORY[0x24BDB2BA0]();
}

uint64_t cblas_scopy_NEWLAPACK()
{
  return MEMORY[0x24BDB2BB0]();
}

uint64_t cblas_snrm2_NEWLAPACK()
{
  return MEMORY[0x24BDB2C10]();
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x24BDADF28](value);
}

uint64_t espresso_buffer_pack_tensor_shape()
{
  return MEMORY[0x24BE2FAE8]();
}

uint64_t espresso_context_destroy()
{
  return MEMORY[0x24BE2FB00]();
}

uint64_t espresso_create_context()
{
  return MEMORY[0x24BE2FB18]();
}

uint64_t espresso_create_plan()
{
  return MEMORY[0x24BE2FB38]();
}

uint64_t espresso_network_bind_buffer()
{
  return MEMORY[0x24BE2FB88]();
}

uint64_t espresso_network_bind_buffer_to_global()
{
  return MEMORY[0x24BE2FB90]();
}

uint64_t espresso_network_change_input_blob_shapes_seq_rank()
{
  return MEMORY[0x24BE2FC08]();
}

uint64_t espresso_network_declare_input()
{
  return MEMORY[0x24BE2FC10]();
}

uint64_t espresso_network_declare_output()
{
  return MEMORY[0x24BE2FC18]();
}

uint64_t espresso_network_query_blob_shape()
{
  return MEMORY[0x24BE2FC40]();
}

uint64_t espresso_network_set_function_name()
{
  return MEMORY[0x24BE2FC58]();
}

uint64_t espresso_plan_add_network()
{
  return MEMORY[0x24BE2FC70]();
}

uint64_t espresso_plan_build()
{
  return MEMORY[0x24BE2FC80]();
}

uint64_t espresso_plan_build_clean()
{
  return MEMORY[0x24BE2FC88]();
}

uint64_t espresso_plan_destroy()
{
  return MEMORY[0x24BE2FC90]();
}

uint64_t espresso_plan_execute_sync()
{
  return MEMORY[0x24BE2FCA0]();
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

uint64_t get_main_function_name()
{
  return MEMORY[0x24BE2FCE8]();
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x24BDAED78](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x24BDAEEA8](__b, *(_QWORD *)&__c, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x24BEDD068](obj);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x24BEDD0B0](self, _cmd, offset, atomic);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x24BEDD138]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x24BEDD3D0](self, _cmd, newValue, offset);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x24BEDD3E0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x24BDAF368](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x24BDAF4D0]();
}

float powf(float a1, float a2)
{
  float result;

  MEMORY[0x24BDAF690](a1, a2);
  return result;
}

int sqlite3_close_v2(sqlite3 *a1)
{
  return MEMORY[0x24BEDE018](a1);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return MEMORY[0x24BEDE038](pStmt);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  double result;

  MEMORY[0x24BEDE048](a1, *(_QWORD *)&iCol);
  return result;
}

int sqlite3_column_int(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x24BEDE050](a1, *(_QWORD *)&iCol);
}

const char *__cdecl sqlite3_column_name(sqlite3_stmt *a1, int N)
{
  return (const char *)MEMORY[0x24BEDE060](a1, *(_QWORD *)&N);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x24BEDE068](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x24BEDE078](a1, *(_QWORD *)&iCol);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return (const char *)MEMORY[0x24BEDE108](a1);
}

const char *__cdecl sqlite3_errstr(int a1)
{
  return (const char *)MEMORY[0x24BEDE110](*(_QWORD *)&a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return MEMORY[0x24BEDE118](a1, sql, callback, a4, errmsg);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x24BEDE140](pStmt);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x24BEDE1C0](filename, ppDb, *(_QWORD *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x24BEDE1D0](db, zSql, *(_QWORD *)&nByte, ppStmt, pzTail);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x24BEDE2A8](a1);
}

char *__cdecl strdup(const char *__s1)
{
  return (char *)MEMORY[0x24BDAFF10](__s1);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x24BDAFF40](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull()
{
  return MEMORY[0x24BEE4E88]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x24BDB0100](a1, a2, a3, a4, a5);
}

int uname(utsname *a1)
{
  return MEMORY[0x24BDB02A8](a1);
}

void vDSP_normalize(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, float *__Mean, float *__StandardDeviation, vDSP_Length __N)
{
  MEMORY[0x24BDB32B0](__A, __IA, __C, __IC, __Mean, __StandardDeviation, __N);
}

void vDSP_vadd(const float *__A, vDSP_Stride __IA, const float *__B, vDSP_Stride __IB, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x24BDB3308](__A, __IA, __B, __IB, __C, __IC, __N);
}

void vDSP_vclr(float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x24BDB3330](__C, __IC, __N);
}

void vDSP_vsdiv(const float *__A, vDSP_Stride __IA, const float *__B, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x24BDB34C0](__A, __IA, __B, __C, __IC, __N);
}

