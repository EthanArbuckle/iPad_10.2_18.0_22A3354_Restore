@implementation MCMContainerSchemaDefinitionForClass

void __MCMContainerSchemaDefinitionForClass_block_invoke()
{
  void *v0;
  MCMActionArgumentCommand *v1;
  MCMActionArgumentRelativeDirectory *v2;
  void *v3;
  MCMActionArgumentCommand *v4;
  MCMActionArgumentRelativeDirectory *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  MCMActionArgumentCommand *v12;
  MCMActionArgumentRelativeDirectory *v13;
  void *v14;
  MCMActionArgumentCommand *v15;
  MCMActionArgumentRelativeDirectory *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  MCMActionArgumentCommand *v22;
  MCMActionArgumentRelativeDirectory *v23;
  void *v24;
  MCMActionArgumentCommand *v25;
  MCMActionArgumentRelativeDirectory *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  MCMActionArgumentRelativeDirectory *v32;
  MCMActionArgumentCommand *v33;
  void *v34;
  MCMActionArgumentRelativeDirectory *v35;
  MCMActionArgumentRelativeDirectory *v36;
  MCMActionArgumentCommand *v37;
  MCMActionArgumentCommand *v38;
  void *v39;
  void *v40;
  MCMActionArgumentRelativeDirectory *v41;
  MCMActionArgumentRelativeDirectory *v42;
  MCMActionArgumentCommand *v43;
  MCMActionArgumentCommand *v44;
  void *v45;
  void *v46;
  MCMActionArgumentRelativeDirectory *v47;
  MCMActionArgumentRelativeDirectory *v48;
  MCMActionArgumentCommand *v49;
  MCMActionArgumentCommand *v50;
  _QWORD v51[2];
  _QWORD v52[2];
  _QWORD v53[2];
  const __CFString *v54;
  void *v55;
  void *v56;
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[2];
  _QWORD v60[2];
  _QWORD v61[2];
  _QWORD v62[5];
  const __CFString *v63;
  void *v64;
  void *v65;
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  _QWORD v71[2];
  _QWORD v72[6];
  const __CFString *v73;
  void *v74;
  _QWORD v75[3];

  v75[1] = *MEMORY[0x1E0C80C00];
  v73 = CFSTR("script");
  v49 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentCommand alloc], "initWithString:", CFSTR("mkdir"));
  v71[0] = v49;
  v47 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentRelativeDirectory alloc], "initWithString:", CFSTR("Library"));
  v71[1] = v47;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v71, 2);
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  v72[0] = v45;
  v43 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentCommand alloc], "initWithString:", CFSTR("mkdir"));
  v70[0] = v43;
  v41 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentRelativeDirectory alloc], "initWithString:", CFSTR("Library/Preferences"));
  v70[1] = v41;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v70, 2);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v72[1] = v39;
  v37 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentCommand alloc], "initWithString:", CFSTR("mkdir"));
  v69[0] = v37;
  v35 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentRelativeDirectory alloc], "initWithString:", CFSTR("Library/Caches"));
  v69[1] = v35;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v69, 2);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v72[2] = v34;
  v33 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentCommand alloc], "initWithString:", CFSTR("mkdir"));
  v68[0] = v33;
  v32 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentRelativeDirectory alloc], "initWithString:", CFSTR("Documents"));
  v68[1] = v32;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v68, 2);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v72[3] = v0;
  v1 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentCommand alloc], "initWithString:", CFSTR("mkdir"));
  v67[0] = v1;
  v2 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentRelativeDirectory alloc], "initWithString:", CFSTR("SystemData"));
  v67[1] = v2;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v67, 2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v72[4] = v3;
  v4 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentCommand alloc], "initWithString:", CFSTR("mkdir"));
  v66[0] = v4;
  v5 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentRelativeDirectory alloc], "initWithString:", CFSTR("tmp"));
  v66[1] = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v66, 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v72[5] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v72, 6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v74 = v7;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v74, &v73, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v75[0] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v75, 1);
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = (void *)MCMContainerSchemaDefinitionForClass_userDataSchemaDefinition;
  MCMContainerSchemaDefinitionForClass_userDataSchemaDefinition = v9;

  v63 = CFSTR("script");
  v50 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentCommand alloc], "initWithString:", CFSTR("mkdir"));
  v61[0] = v50;
  v48 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentRelativeDirectory alloc], "initWithString:", CFSTR("Library"));
  v61[1] = v48;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v61, 2);
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  v62[0] = v46;
  v44 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentCommand alloc], "initWithString:", CFSTR("mkdir"));
  v60[0] = v44;
  v42 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentRelativeDirectory alloc], "initWithString:", CFSTR("Library/Preferences"));
  v60[1] = v42;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v60, 2);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v62[1] = v40;
  v38 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentCommand alloc], "initWithString:", CFSTR("mkdir"));
  v59[0] = v38;
  v36 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentRelativeDirectory alloc], "initWithString:", CFSTR("Library/Caches"));
  v59[1] = v36;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v59, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v62[2] = v11;
  v12 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentCommand alloc], "initWithString:", CFSTR("mkdir"));
  v58[0] = v12;
  v13 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentRelativeDirectory alloc], "initWithString:", CFSTR("Documents"));
  v58[1] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v58, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v62[3] = v14;
  v15 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentCommand alloc], "initWithString:", CFSTR("mkdir"));
  v57[0] = v15;
  v16 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentRelativeDirectory alloc], "initWithString:", CFSTR("tmp"));
  v57[1] = v16;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v57, 2);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v62[4] = v17;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v62, 5);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v64 = v18;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v64, &v63, 1);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v65 = v19;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v65, 1);
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = (void *)MCMContainerSchemaDefinitionForClass_systemSchemaDefinition;
  MCMContainerSchemaDefinitionForClass_systemSchemaDefinition = v20;

  v54 = CFSTR("script");
  v22 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentCommand alloc], "initWithString:", CFSTR("mkdir"));
  v52[0] = v22;
  v23 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentRelativeDirectory alloc], "initWithString:", CFSTR("Library"));
  v52[1] = v23;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v52, 2);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v53[0] = v24;
  v25 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentCommand alloc], "initWithString:", CFSTR("mkdir"));
  v51[0] = v25;
  v26 = -[MCMActionArgumentBase initWithString:]([MCMActionArgumentRelativeDirectory alloc], "initWithString:", CFSTR("Library/Caches"));
  v51[1] = v26;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v51, 2);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v53[1] = v27;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v53, 2);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v55 = v28;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v55, &v54, 1);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v56 = v29;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v56, 1);
  v30 = objc_claimAutoreleasedReturnValue();
  v31 = (void *)MCMContainerSchemaDefinitionForClass_groupSchemaDefinition;
  MCMContainerSchemaDefinitionForClass_groupSchemaDefinition = v30;

}

@end
